[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nRoles = Package['alanning:roles'].Roles;\nCollection2 = Package['aldeed:collection2-core'].Collection2;\nFactory = Package['dburles:factory'].Factory;\nDDPRateLimiter = Package['ddp-rate-limiter'].DDPRateLimiter;\nInject = Package['meteorhacks:inject-initial'].Inject;\nMandrill = Package['wylio:mandrill'].Mandrill;\nSlingshot = Package['edgee:slingshot'].Slingshot;\nKadira = Package['lmachens:kadira'].Kadira;\nanalytics = Package['okgrow:analytics'].analytics;\nCollectionHooks = Package['matb33:collection-hooks'].CollectionHooks;\nMigrations = Package['percolate:migrations'].Migrations;\nSyncedCron = Package['littledata:synced-cron'].SyncedCron;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nWebAppInternals = Package.webapp.WebAppInternals;\nmain = Package.webapp.main;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"core\":{\"api\":{\"pdf\":{\"server\":{\"pdfComponents\":{\"LoanBankPDF\":{\"LoanBankCover\":{\"LoanBankCover.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/LoanBankPDF/LoanBankCover/LoanBankCover.jsx                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 1);\nlet T, Money;\nmodule.link(\"../../../../../../components/Translation\", {\n  default(v) {\n    T = v;\n  },\n\n  Money(v) {\n    Money = v;\n  }\n\n}, 2);\nlet Calculator;\nmodule.link(\"../../../../../../utils/Calculator\", {\n  default(v) {\n    Calculator = v;\n  }\n\n}, 3);\nlet PdfPage;\nmodule.link(\"../../PdfPage\", {\n  default(v) {\n    PdfPage = v;\n  }\n\n}, 4);\nlet LoanBankCoverHeader;\nmodule.link(\"./LoanBankCoverHeader\", {\n  default(v) {\n    LoanBankCoverHeader = v;\n  }\n\n}, 5);\nlet StructureRecapTable;\nmodule.link(\"./StructureRecapTable\", {\n  default(v) {\n    StructureRecapTable = v;\n  }\n\n}, 6);\n\nconst footer = ({\n  name,\n  email,\n  phoneNumbers\n}) => React.createElement(\"div\", {\n  className: \"cover-footer\"\n}, React.createElement(\"div\", {\n  className: \"assigned-employee\"\n}, React.createElement(\"h5\", {\n  className: \"name\"\n}, name), React.createElement(\"h5\", null, email), React.createElement(\"h5\", null, phoneNumbers[0])), React.createElement(\"div\", null, moment(new Date()).format('DD.MM.YYYY')));\n\nconst borrowersNames = borrowers => React.createElement(\"h3\", {\n  className: \"borrowers\"\n}, borrowers.map(({\n  name\n}) => name).join(' et '));\n\nconst coverContent = ({\n  loan,\n  anonymous = false,\n  organisation,\n  structureIds,\n  calculator\n}) => {\n  const {\n    name,\n    residenceType,\n    purchaseType,\n    borrowers\n  } = loan;\n  const {\n    address1,\n    zipCode,\n    city\n  } = Calculator.selectProperty({\n    loan\n  });\n  const propertyValue = Calculator.selectPropertyValue({\n    loan\n  });\n  return React.createElement(\"div\", {\n    className: \"cover-content\"\n  }, organisation && React.createElement(\"img\", {\n    src: organisation.logo,\n    className: \"organisation-logo\"\n  }), React.createElement(\"h1\", {\n    className: \"title\"\n  }, \"Financement hypoth\\xE9caire\"), React.createElement(\"h1\", {\n    className: \"loan-name\"\n  }, name), React.createElement(\"h2\", {\n    className: \"loan-type\"\n  }, React.createElement(T, {\n    id: `PDF.purchaseType.${purchaseType}`\n  }), ' ', React.createElement(T, {\n    id: `PDF.residenceType.${residenceType}`\n  })), React.createElement(\"h2\", {\n    className: \"address\"\n  }, `${address1}, ${zipCode} ${city}`), React.createElement(\"h2\", {\n    className: \"property-value\"\n  }, React.createElement(Money, {\n    value: propertyValue\n  })), !anonymous && borrowersNames(borrowers), React.createElement(StructureRecapTable, {\n    loan: loan,\n    organisation: organisation,\n    structureIds: structureIds\n  }));\n};\n\nconst LoanBankCover = ({\n  loan,\n  pageNb,\n  pageCount,\n  options,\n  organisation,\n  structureIds\n}) => React.createElement(PdfPage, {\n  className: \"cover-page\",\n  fullHeight: true,\n  pageNb: pageNb,\n  pageCount: pageCount\n}, React.createElement(LoanBankCoverHeader, null), coverContent({\n  loan,\n  anonymous: options && options.anonymous,\n  organisation,\n  structureIds\n}), footer(loan.user.assignedEmployee));\n\nmodule.exportDefault(LoanBankCover);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"LoanBankCoverHeader.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/LoanBankPDF/LoanBankCover/LoanBankCoverHeader.jsx                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\n\nconst LoanBankCoverHeader = props => React.createElement(\"div\", {\n  className: \"cover-header\"\n}, React.createElement(\"h1\", null, React.createElement(\"img\", {\n  src: \"https://www.e-potek.ch/img/logo_square_black_no_border.svg\",\n  className: \"epotek-logo\"\n}), \"e-Potek SA\"), React.createElement(\"div\", {\n  className: \"e-potek-address\"\n}, React.createElement(\"h6\", null, React.createElement(\"b\", null, \"e-Potek SA\")), React.createElement(\"h6\", null, \"Chemin Auguste-Vilbert 14\"), React.createElement(\"h6\", null, \"1218 Le Grand-Saconnex\"), React.createElement(\"h6\", null, \"+41 22 566 01 10\")));\n\nmodule.exportDefault(LoanBankCoverHeader);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"StructureRecapTable.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/LoanBankPDF/LoanBankCover/StructureRecapTable.jsx                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Calculator;\nmodule.link(\"../../../../../../utils/Calculator\", {\n  Calculator(v) {\n    Calculator = v;\n  }\n\n}, 1);\nlet toMoney;\nmodule.link(\"../../../../../../utils/conversionFunctions\", {\n  toMoney(v) {\n    toMoney = v;\n  }\n\n}, 2);\nlet PercentWithStatus;\nmodule.link(\"../../../../../../components/PercentWithStatus\", {\n  default(v) {\n    PercentWithStatus = v;\n  }\n\n}, 3);\nlet ERROR, SUCCESS;\nmodule.link(\"../../../../../constants\", {\n  ERROR(v) {\n    ERROR = v;\n  },\n\n  SUCCESS(v) {\n    SUCCESS = v;\n  }\n\n}, 4);\nlet classes, ROW_TYPES;\nmodule.link(\"../../PdfTable/PdfTable\", {\n  classes(v) {\n    classes = v;\n  },\n\n  ROW_TYPES(v) {\n    ROW_TYPES = v;\n  }\n\n}, 5);\nconst columnStyles = [{\n  width: '50%'\n}, {\n  width: '20%',\n  textAlign: 'right'\n}, {\n  width: '15%',\n  textAlign: 'right'\n}, {\n  width: '15%',\n  textAlign: 'right'\n}];\n\nconst getRows = ({\n  loan,\n  structureIds,\n  organisation\n}) => {\n  const {\n    lenderRules\n  } = organisation || {};\n  return [React.createElement(\"tr\", {\n    key: \"0\",\n    className: classes[ROW_TYPES.TITLE]\n  }, React.createElement(\"td\", {\n    style: columnStyles[0]\n  }, \"Sc\\xE9nario\"), React.createElement(\"td\", {\n    style: columnStyles[1]\n  }, \"Pr\\xEAt hypoth\\xE9caire\"), React.createElement(\"td\", {\n    style: columnStyles[2]\n  }, \"Taux d'avance\"), React.createElement(\"td\", {\n    style: columnStyles[3]\n  }, \"Taux d'effort\")), ...structureIds.map(structureId => loan.structures.find(({\n    id\n  }) => id === structureId)).map(({\n    id: structureId,\n    name\n  }, index) => {\n    const calculator = new Calculator({\n      loan,\n      structureId,\n      lenderRules\n    });\n    const loanValue = calculator.selectLoanValue({\n      loan,\n      structureId\n    });\n    const borrowRatio = calculator.getBorrowRatio({\n      loan,\n      structureId\n    });\n    const incomeRatio = calculator.getIncomeRatio({\n      loan,\n      structureId\n    });\n    return React.createElement(\"tr\", {\n      key: structureId\n    }, React.createElement(\"td\", {\n      style: columnStyles[0]\n    }, name || index + 1, \" (page \", index + 2, \")\"), React.createElement(\"td\", {\n      style: columnStyles[1]\n    }, toMoney(loanValue)), React.createElement(\"td\", {\n      style: columnStyles[2]\n    }, React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end'\n      }\n    }, React.createElement(PercentWithStatus, {\n      value: borrowRatio,\n      status: borrowRatio > calculator.maxBorrowRatio ? ERROR : SUCCESS\n    }))), React.createElement(\"td\", {\n      style: columnStyles[3]\n    }, React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end'\n      }\n    }, React.createElement(PercentWithStatus, {\n      value: incomeRatio,\n      status: incomeRatio > calculator.maxIncomeRatio ? ERROR : SUCCESS\n    }))));\n  })];\n};\n\nconst StructureRecapTable = ({\n  loan,\n  structureIds,\n  organisation\n}) => React.createElement(\"table\", {\n  className: \"pdf-table structure-recap-table\"\n}, getRows({\n  loan,\n  structureIds,\n  organisation\n}));\n\nmodule.exportDefault(StructureRecapTable);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/LoanBankPDF/LoanBankCover/index.js                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./LoanBankCover\", {\n  default: \"default\"\n}, 0);\nmodule.link(\"./styles\", {\n  default: \"LoanBankCoverStyles\"\n}, 1);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"styles.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/LoanBankPDF/LoanBankCover/styles.js                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet styles;\nmodule.link(\"../../utils/styleHelpers\", {\n  \"*\"(v) {\n    styles = v;\n  }\n\n}, 0);\nlet BORDER_BLUE;\nmodule.link(\"../../../../pdfConstants\", {\n  BORDER_BLUE(v) {\n    BORDER_BLUE = v;\n  }\n\n}, 1);\nconst stylesheet = `\n    .cover-page {\n        ${styles.flex(['FLEX_COLUMN'])}\n        ${styles.flexGrow(1)}\n    }\n\n    .cover-page .cover-content {\n        ${styles.flex(['FLEX_COLUMN'])}\n        ${styles.flexGrow(1)}\n    } \n\n    .cover-content h1,h2,h3,h4,h5 {\n        color: ${BORDER_BLUE};\n    }\n\n    .cover-content .organisation-logo {\n        display: block;\n        width: auto;\n        height: auto;\n        max-height: 80px;\n        max-width: 200px;\n        align-self: center;\n        margin-top: 40px;\n        margin-bottom: -80px;\n    }\n\n    .cover-content .title {\n        margin-top: 120px;\n        margin-bottom: 0;\n    }\n\n    .cover-content .loan-name {\n        margin-top: 8px;\n        margin-bottom: 80px;\n        font-weight: normal;\n    }\n\n    .cover-content .loan-type {\n        margin: 0;\n    }\n    \n    .cover-content .address {\n        margin: 0;\n        margin-top: 8px;\n        font-weight: normal;\n    }\n\n    .cover-content .property-value {\n        margin-top: 8px;\n        font-weight: normal;\n        margin-bottom: 120px;\n    }\n\n    .cover-content .borrowers {\n        margin: 0;\n    }\n\n    .cover-page .cover-footer {\n        display: flex;\n        align-items: flex-start;\n        justify-content: space-between;\n        align-self: flex-end;\n        width: 100%;\n        border-top: 1px solid ${BORDER_BLUE};\n        padding-top: 16px;\n        color: ${BORDER_BLUE};\n    }\n\n    .cover-footer .assigned-employee {\n        ${styles.flex(['FLEX_COLUMN'])}\n    }\n\n    .cover-footer .assigned-employee >* {\n        margin: 0px;\n        font-weight: normal;\n    }\n\n    .cover-footer .assigned-employee .name {\n        font-weight: bold;\n    }\n\n    .cover-header {\n        display: flex;\n        flex-direction: row;\n        align-items: flex-end;\n        justify-content: space-between;\n        padding-bottom: 16px;\n        border-bottom: 1px solid ${BORDER_BLUE};\n    }\n\n    .cover-header h1 {\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n        margin: 0;\n        color: ${BORDER_BLUE};\n        font-weight: normal;\n    }\n\n    .cover-header .epotek-logo {\n        width: 30px;\n        height: 30px;\n        margin-right: 12px;\n    }\n\n    .cover-header .e-potek-address {\n        display: flex;\n        flex-direction: column;\n        align-items: flex-end;\n        justify-content: flex-end;\n    }\n\n    .e-potek-address h6 {\n        color: ${BORDER_BLUE};\n        font-weight: normal;\n        margin: 0;\n    }\n\n    .structure-recap-table {\n        margin-top: 100px;\n        width: 100%;\n    }\n\n    .structure-recap-table svg {\n        width: 24px;\n    }\n`;\nmodule.exportDefault(stylesheet);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"LoanBankPDF.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/LoanBankPDF/LoanBankPDF.jsx                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Calculator;\nmodule.link(\"../../../../../utils/Calculator\", {\n  Calculator(v) {\n    Calculator = v;\n  }\n\n}, 1);\nlet withTranslationContext;\nmodule.link(\"../../../../../components/Translation/withTranslationContext\", {\n  default(v) {\n    withTranslationContext = v;\n  }\n\n}, 2);\nlet Pdf;\nmodule.link(\"../Pdf/Pdf\", {\n  default(v) {\n    Pdf = v;\n  }\n\n}, 3);\nlet PropertyPdfPage;\nmodule.link(\"../pages/PropertyPdfPage\", {\n  default(v) {\n    PropertyPdfPage = v;\n  }\n\n}, 4);\nlet StructurePdfPage;\nmodule.link(\"../pages/StructurePdfPage\", {\n  default(v) {\n    StructurePdfPage = v;\n  }\n\n}, 5);\nlet LenderRulesPdfPage;\nmodule.link(\"../pages/LenderRulesPdfPage\", {\n  default(v) {\n    LenderRulesPdfPage = v;\n  }\n\n}, 6);\nlet BorrowersPdfPage;\nmodule.link(\"../pages/BorrowersPdfPage\", {\n  default(v) {\n    BorrowersPdfPage = v;\n  }\n\n}, 7);\nlet stylesheet;\nmodule.link(\"./stylesheet\", {\n  default(v) {\n    stylesheet = v;\n  }\n\n}, 8);\nlet LoanBankCover;\nmodule.link(\"./LoanBankCover\", {\n  default(v) {\n    LoanBankCover = v;\n  }\n\n}, 9);\n\nconst getPages = ({\n  loan,\n  organisation,\n  structureIds,\n  options\n}) => {\n  const {\n    lenderRules\n  } = organisation || {};\n  const finalStructureIds = structureIds || loan.structures.map(({\n    id\n  }) => id);\n  const defaultCalculator = new Calculator({\n    loan,\n    lenderRules\n  });\n  return [{\n    id: 'cover',\n    Component: LoanBankCover,\n    data: {\n      loan,\n      options,\n      organisation,\n      structureIds: finalStructureIds,\n      calculator: defaultCalculator\n    }\n  }, ...finalStructureIds.map((structureId, index) => {\n    const calculator = new Calculator({\n      loan,\n      structureId,\n      lenderRules\n    });\n    return {\n      id: structureId,\n      Component: StructurePdfPage,\n      data: {\n        loan,\n        structureId,\n        structureIndex: index,\n        options,\n        calculator\n      }\n    };\n  }), {\n    id: 'borrowers',\n    Component: BorrowersPdfPage,\n    data: {\n      loan,\n      options,\n      calculator: defaultCalculator\n    }\n  }, {\n    id: 'property',\n    Component: PropertyPdfPage,\n    data: {\n      loan,\n      options\n    }\n  }, lenderRules && lenderRules.length > 0 && {\n    id: 'lenderRules',\n    Component: LenderRulesPdfPage,\n    data: {\n      loan,\n      organisation,\n      options\n    }\n  }].filter(x => x);\n};\n\nconst LoanBankPDF = props => {\n  const {\n    pdfName\n  } = props;\n  const pages = getPages(props);\n  return React.createElement(Pdf, {\n    stylesheet: stylesheet,\n    pages: pages,\n    pdfName: pdfName\n  });\n};\n\nmodule.exportDefault(withTranslationContext(() => ({\n  purchaseType: 'ACQUISITION'\n}))(LoanBankPDF));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/LoanBankPDF/index.js                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./LoanBankPDF\", {\n  default: \"default\"\n}, 0);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"stylesheet.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/LoanBankPDF/stylesheet.js                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet MARGIN_TOP, MARGIN_SIDE, MARGIN_BOTTOM;\nmodule.link(\"../../../pdfConstants\", {\n  MARGIN_TOP(v) {\n    MARGIN_TOP = v;\n  },\n\n  MARGIN_SIDE(v) {\n    MARGIN_SIDE = v;\n  },\n\n  MARGIN_BOTTOM(v) {\n    MARGIN_BOTTOM = v;\n  }\n\n}, 0);\nlet BorrowersPageStyles;\nmodule.link(\"../pages/BorrowersPdfPage/styles\", {\n  default(v) {\n    BorrowersPageStyles = v;\n  }\n\n}, 1);\nlet PDFTableStyles;\nmodule.link(\"../PdfTable/PdfTableStyles\", {\n  default(v) {\n    PDFTableStyles = v;\n  }\n\n}, 2);\nlet PdfPageStyles;\nmodule.link(\"../PdfPage/PdfPageStyles\", {\n  default(v) {\n    PdfPageStyles = v;\n  }\n\n}, 3);\nlet PropertyPageStyles;\nmodule.link(\"../pages/PropertyPdfPage/stylesheet\", {\n  default(v) {\n    PropertyPageStyles = v;\n  }\n\n}, 4);\nlet StructurePageStyles;\nmodule.link(\"../pages/StructurePdfPage/stylesheet\", {\n  default(v) {\n    StructurePageStyles = v;\n  }\n\n}, 5);\nlet LenderRulesPageStyles;\nmodule.link(\"../pages/LenderRulesPdfPage/stylesheet\", {\n  default(v) {\n    LenderRulesPageStyles = v;\n  }\n\n}, 6);\nlet LoanBankCoverStyles;\nmodule.link(\"./LoanBankCover\", {\n  LoanBankCoverStyles(v) {\n    LoanBankCoverStyles = v;\n  }\n\n}, 7);\nconst stylesheet = `\n    @font-face {\n        font-family: 'Eina04';\n        font-style: normal;\n        font-weight: normal;\n        src: url('https://www.e-potek.ch/fonts/Eina04_Regular.eot');\n        src: url('https://www.e-potek.ch/fonts/Eina04_Regular.eot') format('embedded-opentype');\n        src: url('https://www.e-potek.ch/fonts/Eina04_Regular.ttf') format('truetype');\n        src: url('https://www.e-potek.ch/fonts/Eina04_Regular.woff') format('woff');\n    }\n\n    @font-face {\n        font-family: 'Eina04';\n        font-style: normal;\n        font-weight: bold;\n        src: url('https://www.e-potek.ch/fonts/Eina04_Bold.eot');\n        src: url('https://www.e-potek.ch/fonts/Eina04_Bold.eot') format('embedded-opentype');\n        src: url('https://www.e-potek.ch/fonts/Eina04_Bold.ttf') format('truetype');\n        src: url('https://www.e-potek.ch/fonts/Eina04_Bold.woff') format('woff');\n    }\n\n\n    html {\n        font-size: 12px;\n        font-family: 'Eina04', sans-serif;\n    }\n\n\n    * {\n        // border: 1px solid red;\n        // border-radius: 8px;\n    }\n\n    @page {\n        size: A4;\n        margin: ${MARGIN_TOP}mm ${MARGIN_SIDE}mm ${MARGIN_BOTTOM}mm ${MARGIN_SIDE}mm;\n\n        @top-left {\n            content: flow(top-left);\n        }\n\n        @top-right {\n            content: flow(top-right);\n        }\n\n        @top {\n          content: flow(header);\n        }\n\n        @bottom {\n          content: flow(footer);\n        }\n\n        // @bottom-right {\n        //    content: \"Page \" counter(page) \"/\" counter(pages);\n        //    font-family: Helvetica;\n        // }\n    }\n\n    .top-left {\n        flow: static(top-left);\n    }\n\n    .top-right {\n        flow: static(top-right);\n    }\n\n    .pdf-page-header {\n        flow: static(header);\n    }\n\n    .pdf-page-footer {\n        flow: static(footer);\n    }\n\n    .page-break-new {\n        border: none;\n        margin: 0;\n        padding: 0;\n        height: 0;\n        page-break-before: always;\n    }\n\n    ${PDFTableStyles}\n    ${BorrowersPageStyles}\n    ${LoanBankCoverStyles}\n    ${PdfPageStyles}\n    ${PropertyPageStyles}\n    ${StructurePageStyles}\n    ${LenderRulesPageStyles}\n`;\nmodule.exportDefault(stylesheet);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"pages\":{\"BorrowersPdfPage\":{\"BorrowersPdfPage.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/pages/BorrowersPdfPage/BorrowersPdfPage.jsx                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet T;\nmodule.link(\"../../../../../../components/Translation\", {\n  default(v) {\n    T = v;\n  }\n\n}, 1);\nlet BorrowersRecap;\nmodule.link(\"./BorrowersRecap\", {\n  default(v) {\n    BorrowersRecap = v;\n  }\n\n}, 2);\nlet PdfPage;\nmodule.link(\"../../PdfPage\", {\n  default(v) {\n    PdfPage = v;\n  }\n\n}, 3);\n\nconst BorrowersPdfPage = ({\n  loan: {\n    borrowers\n  },\n  calculator,\n  pageNb,\n  pageCount,\n  options\n}) => React.createElement(PdfPage, {\n  className: \"borrowers-page\",\n  title: React.createElement(T, {\n    id: \"PDF.title.borrowers\"\n  }),\n  withFooter: true,\n  pageNb: pageNb,\n  pageCount: pageCount\n}, React.createElement(BorrowersRecap, {\n  borrowers: borrowers,\n  calculator: calculator,\n  twoBorrowers: borrowers.length > 1,\n  anonymous: options && options.anonymous\n}));\n\nmodule.exportDefault(BorrowersPdfPage);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"BorrowersRecap.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/pages/BorrowersPdfPage/BorrowersRecap.jsx                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet BorrowersRecapInfo;\nmodule.link(\"./BorrowersRecapInfo\", {\n  default(v) {\n    BorrowersRecapInfo = v;\n  }\n\n}, 1);\nlet BorrowersRecapFinance;\nmodule.link(\"./BorrowersRecapFinance\", {\n  default(v) {\n    BorrowersRecapFinance = v;\n  }\n\n}, 2);\n\nconst BorrowersRecap = props => React.createElement(\"div\", {\n  className: \"borrowers-recap\"\n}, React.createElement(BorrowersRecapInfo, props), React.createElement(BorrowersRecapFinance, props));\n\nmodule.exportDefault(BorrowersRecap);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"BorrowersRecapFinance.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/pages/BorrowersPdfPage/BorrowersRecapFinance.jsx                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet cx;\nmodule.link(\"classnames\", {\n  default(v) {\n    cx = v;\n  }\n\n}, 1);\nlet T;\nmodule.link(\"../../../../../../components/Translation\", {\n  default(v) {\n    T = v;\n  }\n\n}, 2);\nlet PdfTable;\nmodule.link(\"../../PdfTable\", {\n  default(v) {\n    PdfTable = v;\n  }\n\n}, 3);\nlet ROW_TYPES;\nmodule.link(\"../../PdfTable/PdfTable\", {\n  ROW_TYPES(v) {\n    ROW_TYPES = v;\n  }\n\n}, 4);\nlet OTHER_INCOME, OWN_FUNDS_TYPES;\nmodule.link(\"../../../../../borrowers/borrowerConstants\", {\n  OTHER_INCOME(v) {\n    OTHER_INCOME = v;\n  },\n\n  OWN_FUNDS_TYPES(v) {\n    OWN_FUNDS_TYPES = v;\n  }\n\n}, 5);\nlet EXPENSE_TYPES;\nmodule.link(\"../../../../../lenderRules/lenderRulesConstants\", {\n  EXPENSE_TYPES(v) {\n    EXPENSE_TYPES = v;\n  }\n\n}, 6);\nlet getBorrowersInfos, makeTableMoneyLine, getFormattedMoneyArray, addTableEmptyLine, shouldRenderArray;\nmodule.link(\"./borrowersRecapHelpers\", {\n  getBorrowersInfos(v) {\n    getBorrowersInfos = v;\n  },\n\n  makeTableMoneyLine(v) {\n    makeTableMoneyLine = v;\n  },\n\n  getFormattedMoneyArray(v) {\n    getFormattedMoneyArray = v;\n  },\n\n  addTableEmptyLine(v) {\n    addTableEmptyLine = v;\n  },\n\n  shouldRenderArray(v) {\n    shouldRenderArray = v;\n  }\n\n}, 7);\n\nconst renderExpenses = (expenses, addTableMoneyLine) => Object.values(EXPENSE_TYPES).map(expense => {\n  const value = expenses[expense];\n  return addTableMoneyLine({\n    label: React.createElement(T, {\n      id: `PDF.borrowersInfos.expenses.${expense}`\n    }),\n    field: value,\n    negative: true\n  });\n});\n\nconst getBorrowersFinanceArray = ({\n  borrowers,\n  calculator\n}) => {\n  const multipleBorrowers = borrowers.length > 1;\n  const addTableMoneyLine = makeTableMoneyLine(multipleBorrowers);\n  const borrowersInfos = getBorrowersInfos(borrowers, calculator);\n  const {\n    salary,\n    bonus,\n    otherIncome,\n    expenses,\n    realEstateValue,\n    realEstateDebt,\n    otherFortune,\n    realEstateIncome\n  } = borrowersInfos;\n  return [{\n    label: React.createElement(T, {\n      id: \"PDF.borrowersInfos.category.financialSituation\"\n    }),\n    type: ROW_TYPES.TITLE,\n    data: multipleBorrowers ? [null, null, React.createElement(T, {\n      id: \"PDF.borrowersInfos.total\",\n      key: \"total\"\n    })] : [],\n    className: 'borrower-table-title-row',\n    colspan: multipleBorrowers ? 1 : 2\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.borrowersInfos.income\"\n    }),\n    type: ROW_TYPES.SUBSECTION\n  }, addTableMoneyLine({\n    label: React.createElement(T, {\n      id: calculator.shouldUseNetSalary() ? 'PDF.borrowersInfos.netSalary' : 'PDF.borrowersInfos.salary'\n    }),\n    field: salary,\n    condition: true\n  }), addTableMoneyLine({\n    label: React.createElement(T, {\n      id: \"PDF.borrowersInfos.bonus\"\n    }),\n    field: bonus\n  }), ...Object.values(OTHER_INCOME).map(income => addTableMoneyLine({\n    label: React.createElement(T, {\n      id: `PDF.borrowersInfos.otherIncome.${income}`\n    }),\n    field: otherIncome[income]\n  })), addTableMoneyLine({\n    label: React.createElement(T, {\n      id: \"PDF.borrowersInfos.realEstateIncome\"\n    }),\n    field: realEstateIncome,\n    condition: shouldRenderArray(realEstateIncome)\n  }), ...renderExpenses(expenses, addTableMoneyLine), {\n    label: React.createElement(T, {\n      id: \"PDF.borrowersInfos.totalIncome\"\n    }),\n    data: getFormattedMoneyArray({\n      array: borrowers.map(borrower => calculator.getTotalIncome({\n        borrowers: borrower\n      })),\n      negative: false,\n      twoBorrowers: multipleBorrowers\n    }),\n    type: ROW_TYPES.SUM\n  }, addTableEmptyLine(), {\n    label: React.createElement(T, {\n      id: \"PDF.borrowersInfos.category.fortune\"\n    }),\n    type: ROW_TYPES.SUBSECTION\n  }, ...Object.values(OWN_FUNDS_TYPES).map(ownFund => addTableMoneyLine({\n    label: React.createElement(T, {\n      id: `PDF.borrowersInfos.ownFund.${ownFund}`\n    }),\n    field: borrowersInfos[ownFund]\n  })), addTableMoneyLine({\n    label: React.createElement(T, {\n      id: \"PDF.borrowersInfos.realEstateValue\"\n    }),\n    field: realEstateValue\n  }), addTableMoneyLine({\n    label: React.createElement(T, {\n      id: \"PDF.borrowersInfos.realEstateDebt\"\n    }),\n    field: realEstateDebt,\n    condition: shouldRenderArray(realEstateValue),\n    negative: true\n  }), addTableMoneyLine({\n    label: React.createElement(T, {\n      id: \"PDF.borrowersInfos.otherFortune\"\n    }),\n    field: otherFortune\n  }), {\n    label: React.createElement(T, {\n      id: \"PDF.borrowersInfos.totalFortune\"\n    }),\n    data: getFormattedMoneyArray({\n      array: borrowers.map(borrower => calculator.getTotalFunds({\n        borrowers: borrower\n      })),\n      negative: false,\n      twoBorrowers: multipleBorrowers\n    }),\n    type: ROW_TYPES.SUM\n  }];\n};\n\nconst BorrowersRecapFinance = ({\n  anonymous,\n  borrowers,\n  calculator,\n  twoBorrowers\n}) => React.createElement(PdfTable, {\n  className: cx('borrowers-recap finance', {\n    twoBorrowers\n  }),\n  rows: getBorrowersFinanceArray({\n    borrowers,\n    anonymous,\n    calculator\n  })\n});\n\nmodule.exportDefault(BorrowersRecapFinance);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"BorrowersRecapInfo.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/pages/BorrowersPdfPage/BorrowersRecapInfo.jsx                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet cx;\nmodule.link(\"classnames\", {\n  default(v) {\n    cx = v;\n  }\n\n}, 1);\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 2);\nlet T;\nmodule.link(\"../../../../../../components/Translation\", {\n  default(v) {\n    T = v;\n  }\n\n}, 3);\nlet PdfTable;\nmodule.link(\"../../PdfTable\", {\n  default(v) {\n    PdfTable = v;\n  }\n\n}, 4);\nlet getBorrowersInfos, shouldRenderArray;\nmodule.link(\"./borrowersRecapHelpers\", {\n  getBorrowersInfos(v) {\n    getBorrowersInfos = v;\n  },\n\n  shouldRenderArray(v) {\n    shouldRenderArray = v;\n  }\n\n}, 5);\nlet ROW_TYPES;\nmodule.link(\"../../PdfTable/PdfTable\", {\n  ROW_TYPES(v) {\n    ROW_TYPES = v;\n  }\n\n}, 6);\n\nconst getBorrowersInfosArray = ({\n  borrowers,\n  calculator\n}) => {\n  const borrowersInfos = getBorrowersInfos(borrowers, calculator);\n  return [{\n    label: React.createElement(T, {\n      id: \"PDF.borrowersInfos.category.general\"\n    }),\n    data: borrowersInfos.name,\n    type: ROW_TYPES.TITLE,\n    className: 'borrower-table-title-row'\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.borrowersInfos.address\"\n    }),\n    data: borrowersInfos.address\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.borrowersInfos.age\"\n    }),\n    data: borrowersInfos.birthDate.map((date, index) => {\n      if (!date) {\n        return '-';\n      }\n\n      return React.createElement(\"span\", {\n        key: index\n      }, borrowersInfos.age[index], \"\\xA0(\", moment(date).format('DD.MM.YYYY'), \")\");\n    })\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.borrowersInfos.children\"\n    }),\n    data: borrowersInfos.childrenCount.map(children => children || '-'),\n    condition: shouldRenderArray(borrowersInfos.childrenCount)\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.borrowersInfos.company\"\n    }),\n    data: borrowersInfos.company.map(company => company || '-'),\n    condition: shouldRenderArray(borrowersInfos.company)\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.borrowersInfos.civilStatus\"\n    }),\n    data: borrowersInfos.civilStatus.map(status => status && React.createElement(T, {\n      id: `PDF.borrowersInfos.civilStatus.${status}`\n    }) || '-'),\n    condition: shouldRenderArray(borrowersInfos.civilStatus)\n  }];\n};\n\nconst BorrowersRecapInfo = ({\n  anonymous,\n  borrowers,\n  calculator,\n  twoBorrowers\n}) => React.createElement(PdfTable, {\n  className: cx('borrowers-recap info', {\n    twoBorrowers\n  }),\n  rows: getBorrowersInfosArray({\n    borrowers,\n    anonymous,\n    calculator\n  }),\n  columnOptions: [{}, {\n    style: {\n      textAlign: 'right'\n    }\n  }, {\n    style: {\n      textAlign: 'right'\n    }\n  }]\n});\n\nmodule.exportDefault(BorrowersRecapInfo);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"borrowersRecapHelpers.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/pages/BorrowersPdfPage/borrowersRecapHelpers.jsx                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  getBorrowersSingleInfo: () => getBorrowersSingleInfo,\n  getBorrowersSingleInfos: () => getBorrowersSingleInfos,\n  getBorrowersOtherIncome: () => getBorrowersOtherIncome,\n  getBorrowersOtherIncomes: () => getBorrowersOtherIncomes,\n  getBorrowersExpense: () => getBorrowersExpense,\n  getBorrowersExpenses: () => getBorrowersExpenses,\n  getBorrowersOwnFunds: () => getBorrowersOwnFunds,\n  getBorrowersAddress: () => getBorrowersAddress,\n  getBonus: () => getBonus,\n  getBorrowersInfos: () => getBorrowersInfos,\n  getArraySum: () => getArraySum,\n  getFormattedMoneyArray: () => getFormattedMoneyArray,\n  shouldRenderArray: () => shouldRenderArray,\n  makeTableMoneyLine: () => makeTableMoneyLine,\n  addTableEmptyLine: () => addTableEmptyLine\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet toMoney;\nmodule.link(\"../../../../../../utils/conversionFunctions\", {\n  toMoney(v) {\n    toMoney = v;\n  }\n\n}, 1);\nlet ROW_TYPES;\nmodule.link(\"../../PdfTable/PdfTable\", {\n  ROW_TYPES(v) {\n    ROW_TYPES = v;\n  }\n\n}, 2);\nlet EXPENSE_TYPES;\nmodule.link(\"../../../../../lenderRules/lenderRulesConstants\", {\n  EXPENSE_TYPES(v) {\n    EXPENSE_TYPES = v;\n  }\n\n}, 3);\nlet OTHER_INCOME, OWN_FUNDS_TYPES;\nmodule.link(\"../../../../../borrowers/borrowerConstants\", {\n  OTHER_INCOME(v) {\n    OTHER_INCOME = v;\n  },\n\n  OWN_FUNDS_TYPES(v) {\n    OWN_FUNDS_TYPES = v;\n  }\n\n}, 4);\n\nconst renderWithComments = (value, comments = []) => {\n  if (comments.length === 0) {\n    return value;\n  }\n\n  const func = ({\n    negative\n  }) => React.createElement(\"div\", null, React.createElement(\"div\", null, negative ? `-${toMoney(value)}` : toMoney(value)), React.createElement(\"div\", {\n    className: \"secondary finance-comment\"\n  }, comments.filter(x => x).map((comment, i) => [i !== 0 && ', ', comment])));\n\n  func.rawValue = value;\n  return func;\n};\n\nconst getBorrowersSingleInfo = (borrowers, info) => borrowers.map(borrower => borrower[info] || 0);\n\nconst getBorrowersSingleInfos = (borrowers, infos) => infos.reduce((borrowersInfos, info) => (0, _objectSpread2.default)({}, borrowersInfos, {\n  [info]: getBorrowersSingleInfo(borrowers, info)\n}), {});\n\nconst getBorrowersOtherIncome = (borrowers, types, calculator) => borrowers.map(borrower => {\n  const {\n    otherIncome = []\n  } = borrower;\n  const otherIncomeValue = otherIncome.filter(income => types.includes(income.description)).reduce((sum, income) => sum + income.value, 0); // Only render comments if this is for one single expense type\n\n  const otherIncomeComments = types.length === 1 && calculator.getCommentsForOtherIncomeType({\n    borrowers: borrower,\n    type: types[0]\n  });\n  return renderWithComments(otherIncomeValue, otherIncomeComments);\n});\n\nconst getBorrowersOtherIncomes = (borrowers, types, calculator) => types.reduce((borrowersOtherIncomes, type) => (0, _objectSpread2.default)({}, borrowersOtherIncomes, {\n  [type]: getBorrowersOtherIncome(borrowers, [type], calculator)\n}), {});\n\nconst getBorrowersExpense = (borrowers, types, calculator) => borrowers.map(borrower => {\n  let allExpenses = calculator.getGroupedExpensesBySide({\n    borrowers: borrower\n  });\n  allExpenses = Object.keys(allExpenses).map(key => ({\n    description: key,\n    value: allExpenses[key]\n  }));\n  const expenseValue = allExpenses.filter(expense => types.includes(expense.description)).reduce((sum, expense) => sum + expense.value, 0); // Only render comments if this is for one single expense type\n\n  const expenseComments = types.length === 1 && calculator.getCommentsForExpenseType({\n    borrowers: borrower,\n    type: types[0]\n  });\n  return renderWithComments(expenseValue, expenseComments);\n});\n\nconst getBorrowersExpenses = (borrowers, types, calculator) => types.reduce((borrowersExpenses, type) => (0, _objectSpread2.default)({}, borrowersExpenses, {\n  [type]: getBorrowersExpense(borrowers, [type], calculator)\n}), {});\n\nconst getBorrowersOwnFunds = (borrowers, types) => types.reduce((ownFunds, type) => (0, _objectSpread2.default)({}, ownFunds, {\n  [type]: borrowers.map(borrower => borrower[type] && borrower[type].reduce((sum, ownFund) => sum + ownFund.value, 0))\n}), {});\n\nconst getBorrowersAddress = borrowers => {\n  const borrowersHaveSameAddress = borrowers.some(({\n    sameAddress\n  }) => sameAddress === true);\n\n  if (borrowersHaveSameAddress) {\n    const borrowerWithAddress = borrowers.find(({\n      city,\n      zipCode\n    }) => city && zipCode);\n    const address = [borrowerWithAddress.zipCode, borrowerWithAddress.city].join(' ');\n    return borrowers.map(() => address);\n  }\n\n  const zipCodes = getBorrowersSingleInfo(borrowers, 'zipCode');\n  const cities = getBorrowersSingleInfo(borrowers, 'city');\n  return zipCodes.map((zipCode, index) => `${zipCode} ${cities[index]}`);\n};\n\nconst getBonus = (borrowers, calculator) => borrowers.map(borrower => {\n  const bonus = calculator.getBonusIncome({\n    borrowers: borrower\n  });\n  const bonuses = calculator.getBonuses({\n    borrowers: borrower\n  });\n  const comments = Object.keys(bonuses).map(key => {\n    const value = bonuses[key];\n\n    if (!value) {\n      // Filter out bonuses that are 0 to shorten the comments\n      return null;\n    }\n\n    const year = key.slice(7);\n    return React.createElement(\"span\", {\n      key: borrower._id,\n      style: {\n        whiteSpace: 'nowrap'\n      }\n    }, \"'\", year, \": \", toMoney(value));\n  });\n  return renderWithComments(bonus, comments);\n});\n\nconst getBorrowersInfos = (borrowers, calculator) => (0, _objectSpread2.default)({}, getBorrowersSingleInfos(borrowers, ['name', 'gender', 'age', 'birthDate', 'childrenCount', 'company', 'civilStatus', 'bankFortune', 'thirdPartyFortune']), {\n  realEstateIncome: borrowers.map(borrower => calculator.getRealEstateIncomeTotal({\n    borrowers: borrower\n  })),\n  salary: borrowers.map(borrower => calculator.getSalary({\n    borrowers: borrower\n  })),\n  address: getBorrowersAddress(borrowers),\n  otherIncome: (0, _objectSpread2.default)({}, getBorrowersOtherIncomes(borrowers, Object.values(OTHER_INCOME), calculator), {\n    totalIncome: getBorrowersOtherIncome(borrowers, Object.values(OTHER_INCOME), calculator)\n  }),\n  expenses: (0, _objectSpread2.default)({}, getBorrowersExpenses(borrowers, Object.values(EXPENSE_TYPES), calculator), {\n    totalExpenses: getBorrowersExpense(borrowers, Object.values(EXPENSE_TYPES), calculator)\n  }),\n  bonus: getBonus(borrowers, calculator),\n  otherFortune: borrowers.map(borrower => calculator.getOtherFortune({\n    borrowers: borrower\n  })),\n  realEstateValue: borrowers.map(borrower => calculator.getRealEstateValue({\n    borrowers: borrower\n  })),\n  realEstateDebt: borrowers.map(borrower => calculator.getRealEstateDebt({\n    borrowers: borrower\n  }))\n}, getBorrowersOwnFunds(borrowers, [OWN_FUNDS_TYPES.INSURANCE_2, OWN_FUNDS_TYPES.INSURANCE_3A, OWN_FUNDS_TYPES.BANK_3A, OWN_FUNDS_TYPES.INSURANCE_3B]));\n\nconst getArraySum = array => array.reduce((sum, val) => {\n  if (val && val.rawValue >= 0) {\n    // Avoid null values\n    return sum + Number(val.rawValue);\n  }\n\n  return sum + val;\n}, 0);\n\nconst getFormattedMoneyArray = ({\n  array,\n  negative = false,\n  twoBorrowers\n}) => {\n  if (!twoBorrowers) {\n    return [...array.map((x, index) => React.createElement(\"div\", {\n      className: \"money-amount\",\n      key: index\n    }, typeof x === 'function' ? x({\n      negative\n    }) : toMoney(negative ? -x : x || 0)))];\n  }\n\n  return [...array.map((x, index) => React.createElement(\"div\", {\n    className: \"money-amount\",\n    key: index\n  }, typeof x === 'function' ? x({\n    negative\n  }) : toMoney(negative ? -x : x || 0))), React.createElement(\"div\", {\n    className: \"money-amount\",\n    key: \"last\"\n  }, toMoney(negative ? -getArraySum(array) : getArraySum(array)))];\n};\n\nconst shouldRenderArray = array => array.filter(x => x).length > 0;\n\nconst makeTableMoneyLine = twoBorrowers => ({\n  label,\n  field,\n  negative = false,\n  condition = shouldRenderArray(field)\n}) => ({\n  label,\n  data: getFormattedMoneyArray({\n    array: field,\n    negative,\n    twoBorrowers\n  }),\n  condition\n});\n\nconst addTableEmptyLine = () => ({\n  label: '\\u00A0',\n  type: ROW_TYPES.EMPTY\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/pages/BorrowersPdfPage/index.js                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./BorrowersPdfPage\", {\n  default: \"default\"\n}, 0);\nmodule.link(\"./styles\", {\n  default: \"LoanBankBorrowersStyles\"\n}, 1);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"recapStyleSheet.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/pages/BorrowersPdfPage/recapStyleSheet.js                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nconst recapStyleSheet = `\n.validator {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: stretch;\n      -ms-flex-align: stretch;\n          align-items: stretch;\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n\n  width: 100%;\n  max-width: 400px;\n  min-height: 140px;\n}\n\n.validator label {\n  width: 100%;\n  margin: 0;\n  margin-top: 16px;\n}\n\n.validator p:first-child {\n  margin: auto;\n\n  text-align: left;\n}\n\n.validator .result {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: start;\n      -ms-flex-align: start;\n          align-items: flex-start;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column;\n  -webkit-box-pack: justify;\n      -ms-flex-pack: justify;\n          justify-content: space-between;\n\n  width: 100%;\n}\n\n.validator .result div {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: justify;\n      -ms-flex-pack: justify;\n          justify-content: space-between;\n\n  width: 100%;\n  margin: 0;\n\n  -webkit-transition: all 0.2s $bezier;\n\n  -o-transition: all 0.2s $bezier;\n\n  transition: all 0.2s $bezier;\n}\n\n.validator .result div p:last-of-type {\n  -ms-flex-negative: 0;\n      flex-shrink: 0;\n\n  margin: 0;\n}\n\n.validator .result div p:first-of-type {\n  margin: 0;\n}\n\n.validator .result div p span.sum {\n  margin-top: 16px;\n  padding-top: 4px;\n\n  border-top: solid 1px #808080;\n}\n\n.validator .result div p .fa {\n  width: 21px;\n\n  text-align: center;\n}\n\n.validator .result div:hover {\n  -webkit-transform: scale(1.03);\n      -ms-transform: scale(1.03);\n          transform: scale(1.03);\n\n  opacity: 1;\n  color: #000;\n}\n\n.validator .result div:hover.no-scale {\n  -webkit-transform: none;\n      -ms-transform: none;\n          transform: none;\n}\n\n.validator .result div:hover p,\n.validator .result div:hover p {\n  opacity: inherit;\n  color: inherit;\n}\n\n.recap {\n    max-width: 200px;\n}`;\nmodule.exportDefault(recapStyleSheet);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"styles.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/pages/BorrowersPdfPage/styles.js                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet BORDER_BLUE;\nmodule.link(\"../../../../pdfConstants\", {\n  BORDER_BLUE(v) {\n    BORDER_BLUE = v;\n  }\n\n}, 0);\nlet recapStyleSheet;\nmodule.link(\"./recapStyleSheet\", {\n  default(v) {\n    recapStyleSheet = v;\n  }\n\n}, 1);\nconst stylesheet = `\n    .borrowers-recap {\n        width: 100%;\n    }\n\n    .borrowers-recap:not(:first-child) {\n        margin-top: 30px;\n    }\n\n    .borrowers-recap.twoBorrowers {\n        width: 100%;\n    }\n\n    .borrowers-recap.twoBorrowers td {\n        width: 25%;\n    }\n\n    .borrowers-recap.twoBorrowers.info {\n        width: 75%;\n    }\n\n    .borrowers-recap .info td {\n        text-align: left;\n    }\n\n    .money-amount {\n        text-align: right;\n        white-space: nowrap;\n    }\n\n    .borrowers-page h2 {\n        color: ${BORDER_BLUE}\n    }\n\n    .borrowers-recap.twoBorrowers tr.borrower-table-title-row td {\n        width: 25%;\n    }\n\n    .borrowers-recap.twoBorrowers tr.borrower-table-title-row td:not(:first-child) {\n        text-align: right;\n        color: black;\n    }\n    \n    .finance-comment {\n        white-space: normal;\n    }\n\n    ${recapStyleSheet}\n`;\nmodule.exportDefault(stylesheet);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"LenderRulesPdfPage\":{\"LenderRulesPdfPage.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/pages/LenderRulesPdfPage/LenderRulesPdfPage.jsx                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet T;\nmodule.link(\"../../../../../../components/Translation\", {\n  default(v) {\n    T = v;\n  }\n\n}, 1);\nlet Calculator;\nmodule.link(\"../../../../../../utils/Calculator\", {\n  Calculator(v) {\n    Calculator = v;\n  }\n\n}, 2);\nlet PdfPage;\nmodule.link(\"../../PdfPage\", {\n  default(v) {\n    PdfPage = v;\n  }\n\n}, 3);\nlet LenderRulesPdfTable;\nmodule.link(\"./LenderRulesPdfTable\", {\n  default(v) {\n    LenderRulesPdfTable = v;\n  }\n\n}, 4);\nlet getExpenseRules, getTheoreticalExpenseRules, getCutOffCriteriaRules;\nmodule.link(\"./lenderRulesArrays\", {\n  getExpenseRules(v) {\n    getExpenseRules = v;\n  },\n\n  getTheoreticalExpenseRules(v) {\n    getTheoreticalExpenseRules = v;\n  },\n\n  getCutOffCriteriaRules(v) {\n    getCutOffCriteriaRules = v;\n  }\n\n}, 5);\n\nconst LenderRulesPdfPage = ({\n  pageNb,\n  pageCount,\n  organisation,\n  loan\n}) => {\n  const {\n    lenderRules\n  } = organisation || {};\n  const calculator = new Calculator({\n    loan,\n    lenderRules\n  });\n  return React.createElement(PdfPage, {\n    className: \"lender-rules-page\",\n    title: React.createElement(T, {\n      id: \"PDF.title.lenderRules\"\n    }),\n    withFooter: true,\n    pageNb: pageNb,\n    pageCount: pageCount\n  }, React.createElement(\"h3\", null, \"Revenus & Charges\"), React.createElement(LenderRulesPdfTable, {\n    rows: getExpenseRules({\n      loan,\n      calculator\n    })\n  }), React.createElement(\"h3\", null, \"Charges th\\xE9oriques\"), React.createElement(LenderRulesPdfTable, {\n    rows: getTheoreticalExpenseRules({\n      loan,\n      calculator\n    })\n  }), React.createElement(\"h3\", null, \"Crit\\xE8res d'octroi\"), React.createElement(LenderRulesPdfTable, {\n    rows: getCutOffCriteriaRules({\n      loan,\n      calculator\n    })\n  }));\n};\n\nmodule.exportDefault(LenderRulesPdfPage);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"LenderRulesPdfTable.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/pages/LenderRulesPdfPage/LenderRulesPdfTable.jsx                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet classes, ROW_TYPES;\nmodule.link(\"../../PdfTable/PdfTable\", {\n  classes(v) {\n    classes = v;\n  },\n\n  ROW_TYPES(v) {\n    ROW_TYPES = v;\n  }\n\n}, 1);\n\nconst LenderRulesPdfTable = ({\n  rows\n}) => React.createElement(\"table\", {\n  className: \"pdf-table lender-rules-table\"\n}, React.createElement(\"tr\", {\n  className: classes[ROW_TYPES.TITLE]\n}, React.createElement(\"td\", null, \"Type\"), React.createElement(\"td\", null, \"Prise en compte\"), React.createElement(\"td\", null, \"D\\xE9tails\")), rows);\n\nmodule.exportDefault(LenderRulesPdfTable);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/pages/LenderRulesPdfPage/index.js                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./LenderRulesPdfPage\", {\n  default: \"default\"\n}, 0);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lenderRulesArrays.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/pages/LenderRulesPdfPage/lenderRulesArrays.jsx                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  getExpenseRules: () => getExpenseRules,\n  getTheoreticalExpenseRules: () => getTheoreticalExpenseRules,\n  getCutOffCriteriaRules: () => getCutOffCriteriaRules\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 1);\nlet T, Percent;\nmodule.link(\"../../../../../../components/Translation\", {\n  default(v) {\n    T = v;\n  },\n\n  Percent(v) {\n    Percent = v;\n  }\n\n}, 2);\nlet incomeConsideration, theoreticalExpenses, cutOffCriteria;\nmodule.link(\"../../../../../lenderRules/schemas/lenderRulesSchema\", {\n  incomeConsideration(v) {\n    incomeConsideration = v;\n  },\n\n  theoreticalExpenses(v) {\n    theoreticalExpenses = v;\n  },\n\n  cutOffCriteria(v) {\n    cutOffCriteria = v;\n  }\n\n}, 3);\nlet classes, ROW_TYPES;\nmodule.link(\"../../PdfTable/PdfTable\", {\n  classes(v) {\n    classes = v;\n  },\n\n  ROW_TYPES(v) {\n    ROW_TYPES = v;\n  }\n\n}, 4);\nconst RULE_TYPES = {\n  SELECT: 'SELECT',\n  PERCENT: 'PERCENT',\n  NUMBER: 'NUMBER'\n};\n\nconst getRuleArray = schemaPart => Object.keys(schemaPart).map(ruleName => {\n  const rule = schemaPart[ruleName];\n\n  switch (rule.type) {\n    case Number:\n      return (0, _objectSpread2.default)({}, rule, {\n        id: ruleName,\n        type: RULE_TYPES.PERCENT\n      });\n\n    case String:\n      return (0, _objectSpread2.default)({}, rule, {\n        id: ruleName,\n        type: RULE_TYPES.SELECT\n      });\n\n    case Array:\n      return (0, _objectSpread2.default)({}, rule, {\n        id: ruleName,\n        type: RULE_TYPES.SELECT\n      });\n\n    case SimpleSchema.Integer:\n      return (0, _objectSpread2.default)({}, rule, {\n        id: ruleName,\n        type: RULE_TYPES.NUMBER\n      });\n\n    default:\n      return null;\n  }\n});\n\nconst makeMapRule = ({\n  loan,\n  calculator\n}) => ({\n  id,\n  type,\n  uniforms\n}) => {\n  if (id.includes('$')) {\n    return null;\n  }\n\n  const ruleOrigin = calculator.getOriginOfRule(id);\n  const mappedRule = {\n    label: React.createElement(T, {\n      id: `Forms.${id}`\n    }),\n    detail: ruleOrigin && ruleOrigin.name\n  };\n\n  switch (type) {\n    case RULE_TYPES.SELECT:\n      return (0, _objectSpread2.default)({}, mappedRule, {\n        value: Array.isArray(calculator[id]) ? calculator[id].map((v, index) => [index !== 0 && React.createElement(\"span\", null, \",\\xA0\"), React.createElement(T, {\n          id: `Forms.${uniforms && uniforms.intlId || id}.${v}`,\n          key: index\n        })]) : React.createElement(T, {\n          id: `Forms.${id}.${calculator[id]}`\n        })\n      });\n\n    case RULE_TYPES.PERCENT:\n      return (0, _objectSpread2.default)({}, mappedRule, {\n        value: React.createElement(Percent, {\n          value: calculator[id]\n        })\n      });\n\n    case RULE_TYPES.NUMBER:\n      return (0, _objectSpread2.default)({}, mappedRule, {\n        value: calculator[id]\n      });\n\n    default:\n      return null;\n  }\n};\n\nconst formatRuleIntoRow = ({\n  label,\n  value,\n  detail\n}, index) => React.createElement(\"tr\", {\n  key: index,\n  className: classes[ROW_TYPES.REGULAR]\n}, React.createElement(\"td\", null, label), React.createElement(\"td\", null, value), React.createElement(\"td\", null, detail));\n\nconst getTableRows = ({\n  loan,\n  calculator,\n  schemaPart\n}) => getRuleArray(schemaPart).filter(x => x).map(makeMapRule({\n  loan,\n  calculator\n})).filter(x => x).map(formatRuleIntoRow);\n\nconst getExpenseRules = ({\n  loan,\n  calculator\n}) => getTableRows({\n  loan,\n  calculator,\n  schemaPart: incomeConsideration\n});\n\nconst getTheoreticalExpenseRules = ({\n  loan,\n  calculator\n}) => getTableRows({\n  loan,\n  calculator,\n  schemaPart: theoreticalExpenses\n});\n\nconst getCutOffCriteriaRules = ({\n  loan,\n  calculator\n}) => getTableRows({\n  loan,\n  calculator,\n  schemaPart: cutOffCriteria\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"stylesheet.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/pages/LenderRulesPdfPage/stylesheet.js                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.exportDefault(`\n    .lender-rules-page h3 {\n        margin-bottom: 0;\n    }\n\n    .lender-rules-table td {\n        text-align: left !important;\n        display: inline-flex;\n        flex-wrap: wrap;\n    }\n\n    .lender-rules-table td:nth-child(1) {\n        width: 40% !important;\n    }\n    .lender-rules-table td:nth-child(2) {\n        width: 35% !important;\n    }\n    .lender-rules-table td:nth-child(3) {\n        width: 25% !important;\n    }\n`);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"PropertyPdfPage\":{\"OtherRealEstateTable.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/pages/PropertyPdfPage/OtherRealEstateTable.jsx                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet T;\nmodule.link(\"../../../../../../components/Translation\", {\n  default(v) {\n    T = v;\n  }\n\n}, 1);\nlet toMoney;\nmodule.link(\"../../../../../../utils/conversionFunctions\", {\n  toMoney(v) {\n    toMoney = v;\n  }\n\n}, 2);\nlet classes, ROW_TYPES;\nmodule.link(\"../../PdfTable/PdfTable\", {\n  classes(v) {\n    classes = v;\n  },\n\n  ROW_TYPES(v) {\n    ROW_TYPES = v;\n  }\n\n}, 3);\n\nconst OtherRealEstateTable = ({\n  loan: {\n    borrowers\n  }\n}) => {\n  const realEstateArray = borrowers.reduce((arr, {\n    realEstate\n  }) => [...arr, ...realEstate], []);\n  return React.createElement(\"table\", {\n    className: \"pdf-table other-real-estate\"\n  }, React.createElement(\"tr\", {\n    className: classes[ROW_TYPES.TITLE]\n  }, React.createElement(\"td\", {\n    colSpan: 2\n  }, \"Patrimoine immobilier\")), realEstateArray.map(({\n    value,\n    loan,\n    name,\n    description,\n    income\n  }, index) => React.createElement(\"tr\", {\n    key: index,\n    className: classes[ROW_TYPES.REGULAR]\n  }, React.createElement(\"td\", null, React.createElement(\"div\", null, name), React.createElement(\"div\", {\n    className: \"secondary\"\n  }, React.createElement(T, {\n    id: `Forms.residenceType.${description}`\n  }))), React.createElement(\"td\", {\n    style: {\n      textAlign: 'right'\n    }\n  }, React.createElement(\"div\", null, React.createElement(\"span\", {\n    className: \"secondary\"\n  }, \"Valeur:\"), \"\\xA0\", toMoney(value)), React.createElement(\"div\", null, React.createElement(\"span\", {\n    className: \"secondary\"\n  }, \"Dette:\"), \"\\xA0\", toMoney(loan)), React.createElement(\"div\", null, React.createElement(\"span\", {\n    className: \"secondary\"\n  }, \"Revenus annuels:\"), \"\\xA0\", toMoney(income))))));\n};\n\nmodule.exportDefault(OtherRealEstateTable);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"PdfGoogleMap.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/pages/PropertyPdfPage/PdfGoogleMap.jsx                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 1);\nlet queryString;\nmodule.link(\"query-string\", {\n  default(v) {\n    queryString = v;\n  }\n\n}, 2);\nlet Calculator;\nmodule.link(\"../../../../../../utils/Calculator\", {\n  default(v) {\n    Calculator = v;\n  }\n\n}, 3);\n\nconst makeGoogleMapsUrl = property => {\n  const {\n    address1,\n    city\n  } = property;\n  const place = `${address1}, ${city}`;\n  const baseUrl = 'https://maps.googleapis.com/maps/api/staticmap?';\n  const query = queryString.stringify({\n    center: place,\n    zoom: 13,\n    size: '640x300',\n    // This ratio is good for 300px height image and full width\n    markers: `color:red|${place}`,\n    key: Meteor.settings.public.google_maps_key,\n    scale: 2,\n    language: 'fr'\n  }, {\n    sort: false\n  });\n  const url = `${baseUrl}${query}`;\n  return url;\n};\n\nconst PdfGoogleMap = ({\n  loan\n}) => {\n  const property = Calculator.selectProperty({\n    loan\n  });\n  return React.createElement(\"div\", {\n    className: \"pdf-google-map\",\n    style: {\n      backgroundImage: `url(\"${makeGoogleMapsUrl(property)}\")`\n    }\n  });\n};\n\nmodule.exportDefault(PdfGoogleMap);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"PdfPropertyDetails.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/pages/PropertyPdfPage/PdfPropertyDetails.jsx                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Calculator;\nmodule.link(\"../../../../../../utils/Calculator\", {\n  default(v) {\n    Calculator = v;\n  }\n\n}, 1);\nlet T;\nmodule.link(\"../../../../../../components/Translation\", {\n  default(v) {\n    T = v;\n  }\n\n}, 2);\nlet PROPERTY_TYPE, FLAT_TYPE;\nmodule.link(\"../../../../../properties/propertyConstants\", {\n  PROPERTY_TYPE(v) {\n    PROPERTY_TYPE = v;\n  },\n\n  FLAT_TYPE(v) {\n    FLAT_TYPE = v;\n  }\n\n}, 3);\nlet toMoney;\nmodule.link(\"../../../../../../utils/conversionFunctions\", {\n  toMoney(v) {\n    toMoney = v;\n  }\n\n}, 4);\nlet PdfTable, ROW_TYPES;\nmodule.link(\"../../PdfTable/PdfTable\", {\n  default(v) {\n    PdfTable = v;\n  },\n\n  ROW_TYPES(v) {\n    ROW_TYPES = v;\n  }\n\n}, 5);\n\nconst getPropertyRows = loan => {\n  const {\n    address1,\n    zipCode,\n    city,\n    propertyType,\n    houseType,\n    flatType,\n    roomCount,\n    insideArea,\n    landArea,\n    volume,\n    volumeNorm,\n    terraceArea,\n    numberOfFloors,\n    floorNumber,\n    constructionYear,\n    renovationYear,\n    parkingInside = 0,\n    parkingOutside = 0,\n    minergie,\n    yearlyExpenses,\n    promotion\n  } = Calculator.selectProperty({\n    loan\n  });\n  const {\n    residenceType\n  } = loan;\n  return [{\n    label: 'Bien immobilier',\n    colspan: 2,\n    type: ROW_TYPES.TITLE\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.projectInfos.property.promotionName\"\n    }),\n    data: React.createElement(T, {\n      id: \"PDF.projectInfos.property.promotionNameData\",\n      values: {\n        name: promotion && promotion.name\n      }\n    }),\n    condition: !!promotion\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.projectInfos.property.address\"\n    }),\n    data: React.createElement(\"span\", null, address1, \",\", React.createElement(\"br\", null), zipCode, \" \", city)\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.projectInfos.property.residenceType\"\n    }),\n    data: React.createElement(T, {\n      id: `PDF.residenceType.${residenceType}`\n    })\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.projectInfos.property.propertyType\"\n    }),\n    data: React.createElement(T, {\n      id: `PDF.projectInfos.property.propertyType.${propertyType}`\n    })\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.projectInfos.property.houseType\"\n    }),\n    data: React.createElement(T, {\n      id: `PDF.projectInfos.property.houseType.${houseType}`\n    }),\n    condition: !!houseType && propertyType === PROPERTY_TYPE.HOUSE\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.projectInfos.property.flatType\"\n    }),\n    data: React.createElement(T, {\n      id: `PDF.projectInfos.property.flatType.${flatType}`\n    }),\n    condition: !!flatType && propertyType === PROPERTY_TYPE.FLAT\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.projectInfos.property.roomCount\"\n    }),\n    data: roomCount,\n    tooltip: {\n      text: React.createElement(T, {\n        id: \"PDF.projectInfos.property.roomCount.tooltip\"\n      }),\n      symbol: '*'\n    },\n    condition: !!roomCount\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.projectInfos.property.insideArea\"\n    }),\n    data: `${insideArea} m2`,\n    condition: !!insideArea && propertyType === PROPERTY_TYPE.FLAT\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.projectInfos.property.landArea\"\n    }),\n    data: `${landArea} m2`,\n    condition: !!landArea && propertyType === PROPERTY_TYPE.HOUSE\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.projectInfos.property.volume\"\n    }),\n    data: React.createElement(\"span\", null, volume, \" m3 (\", React.createElement(T, {\n      id: `PDF.projectInfos.property.volumeNorm.${volumeNorm}`\n    }), \")\"),\n    condition: !!volume && !!volumeNorm && propertyType === PROPERTY_TYPE.HOUSE\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.projectInfos.property.terraceArea\"\n    }),\n    data: `${terraceArea} m2`,\n    condition: !!terraceArea && propertyType === PROPERTY_TYPE.FLAT && flatType === FLAT_TYPE.TERRACE_APARTMENT\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.projectInfos.property.numberOfFloors\"\n    }),\n    data: numberOfFloors,\n    condition: !!numberOfFloors && propertyType === PROPERTY_TYPE.FLAT\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.projectInfos.property.floorNumber\"\n    }),\n    data: floorNumber,\n    condition: propertyType === PROPERTY_TYPE.FLAT && (flatType === FLAT_TYPE.SINGLE_FLOOR_APARTMENT || flatType === FLAT_TYPE.DUPLEX_APARTMENT)\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.projectInfos.property.constructionYear\"\n    }),\n    data: constructionYear,\n    condition: !!constructionYear\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.projectInfos.property.renovationYear\"\n    }),\n    data: renovationYear,\n    condition: !!renovationYear\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.projectInfos.property.parking\"\n    }),\n    data: `${parkingInside} int., ${parkingOutside} ext.`,\n    condition: !!parkingInside || !!parkingOutside\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.projectInfos.property.minergie\"\n    }),\n    data: React.createElement(T, {\n      id: `PDF.projectInfos.property.minergie.${minergie}`\n    }),\n    condition: !!minergie\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.projectInfos.property.maintenance\"\n    }),\n    data: toMoney(yearlyExpenses),\n    condition: !!yearlyExpenses\n  }];\n};\n\nconst PdfPropertyDetails = ({\n  loan,\n  style\n}) => React.createElement(PdfTable, {\n  style: style,\n  rows: getPropertyRows(loan),\n  columnOptions: [{}, {\n    style: {\n      textAlign: 'right'\n    }\n  }]\n});\n\nmodule.exportDefault(PdfPropertyDetails);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"PropertyPdfPage.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/pages/PropertyPdfPage/PropertyPdfPage.jsx                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet T;\nmodule.link(\"../../../../../../components/Translation\", {\n  default(v) {\n    T = v;\n  }\n\n}, 1);\nlet PdfPage;\nmodule.link(\"../../PdfPage\", {\n  default(v) {\n    PdfPage = v;\n  }\n\n}, 2);\nlet PdfGoogleMap;\nmodule.link(\"./PdfGoogleMap\", {\n  default(v) {\n    PdfGoogleMap = v;\n  }\n\n}, 3);\nlet PdfPropertyDetails;\nmodule.link(\"./PdfPropertyDetails\", {\n  default(v) {\n    PdfPropertyDetails = v;\n  }\n\n}, 4);\nlet Calculator;\nmodule.link(\"../../../../../../utils/Calculator\", {\n  default(v) {\n    Calculator = v;\n  }\n\n}, 5);\nlet OtherRealEstateTable;\nmodule.link(\"./OtherRealEstateTable\", {\n  default(v) {\n    OtherRealEstateTable = v;\n  }\n\n}, 6);\n\nconst PropertyPdfPage = ({\n  loan,\n  pageNb,\n  pageCount\n}) => {\n  const realEstateExists = Calculator.getRealEstateValue({\n    loan\n  }) > 0;\n  return React.createElement(PdfPage, {\n    className: \"property-page\",\n    title: React.createElement(T, {\n      id: \"PDF.title.property\"\n    }),\n    withFooter: true,\n    pageNb: pageNb,\n    pageCount: pageCount\n  }, React.createElement(PdfGoogleMap, {\n    loan: loan\n  }), React.createElement(\"div\", {\n    className: \"property-tables\"\n  }, React.createElement(PdfPropertyDetails, {\n    loan: loan,\n    style: realEstateExists ? {} : {\n      width: '100%'\n    }\n  }), realEstateExists && React.createElement(OtherRealEstateTable, {\n    loan: loan\n  })));\n};\n\nmodule.exportDefault(PropertyPdfPage);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/pages/PropertyPdfPage/index.js                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./PropertyPdfPage\", {\n  default: \"default\"\n}, 0);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"stylesheet.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/pages/PropertyPdfPage/stylesheet.js                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.exportDefault(`\n    .pdf-google-map {\n        margin-bottom: 40px;\n        height: 300px;\n        background-position: center center;\n        background-size: cover;\n        background-repeat: no-repeat;\n    }\n\n    .property-page table {\n        // width: 100%;\n    }\n\n    .property-page .property-tables {\n        width: 100%;\n        display: flex;\n        justify-content: space-between;\n    }\n\n    .property-page .property-tables > * {\n        width: 49%;\n        flex-grow: 1; // Let table take full width if there is only 1 table\n    }\n\n    .other-real-estate {\n        // margin-left: 16px;\n    }\n`);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"StructurePdfPage\":{\"BalanceSheet.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/pages/StructurePdfPage/BalanceSheet.jsx                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet T, Money;\nmodule.link(\"../../../../../../components/Translation\", {\n  default(v) {\n    T = v;\n  },\n\n  Money(v) {\n    Money = v;\n  }\n\n}, 1);\nlet toMoney;\nmodule.link(\"../../../../../../utils/conversionFunctions\", {\n  toMoney(v) {\n    toMoney = v;\n  }\n\n}, 2);\nlet OWN_FUNDS_USAGE_TYPES;\nmodule.link(\"../../../../../loans/loanConstants\", {\n  OWN_FUNDS_USAGE_TYPES(v) {\n    OWN_FUNDS_USAGE_TYPES = v;\n  }\n\n}, 3);\nlet shouldRenderRow;\nmodule.link(\"../../PdfTable/PdfTable\", {\n  shouldRenderRow(v) {\n    shouldRenderRow = v;\n  }\n\n}, 4);\nlet BalanceSheetTable;\nmodule.link(\"../../BalanceSheetTable\", {\n  default(v) {\n    BalanceSheetTable = v;\n  }\n\n}, 5);\n\nconst getCostLines = ({\n  loan,\n  structureId,\n  calculator\n}) => {\n  const propertyValue = calculator.selectPropertyValue({\n    loan,\n    structureId\n  });\n  const notaryFees = calculator.getFees({\n    loan,\n    structureId\n  }).total;\n  const propertyWork = calculator.selectStructureKey({\n    loan,\n    structureId,\n    key: 'propertyWork'\n  });\n  return [{\n    label: React.createElement(T, {\n      id: \"Forms.value\",\n      values: {\n        purchaseType: loan.purchaseType\n      }\n    }),\n    value: propertyValue\n  }, {\n    label: 'Frais de notaire',\n    value: notaryFees\n  }, {\n    label: 'Travaux de plus-value',\n    value: propertyWork,\n    condition: propertyWork > 0\n  }].filter(({\n    condition\n  }) => shouldRenderRow(condition));\n};\n\nconst ownFundLabel = ({\n  type,\n  usageType,\n  borrower,\n  borrowerIndex\n}) => {\n  const borrowerSuffix = borrower ? React.createElement(React.Fragment, null, \"\\xA0\", React.createElement(\"span\", {\n    className: \"secondary\"\n  }, \"(\", borrower.firstName || React.createElement(T, {\n    id: \"general.borrowerWithIndex\",\n    values: {\n      index: borrowerIndex + 1\n    }\n  }), \")\")) : null;\n  return usageType ? React.createElement(\"span\", null, React.createElement(T, {\n    id: `PDF.ownFund.${type}.${usageType}`\n  }), borrowerSuffix) : React.createElement(\"span\", null, React.createElement(T, {\n    id: `PDF.ownFund.${type}`\n  }), borrowerSuffix);\n};\n\nconst getFinancingLines = ({\n  loan,\n  structureId,\n  calculator\n}) => {\n  const {\n    borrowers\n  } = loan;\n  const multipleBorrowers = borrowers.length > 1;\n  const wantedLoan = calculator.selectLoanValue({\n    loan,\n    structureId\n  });\n  const ownFunds = calculator.selectStructureKey({\n    loan,\n    structureId,\n    key: 'ownFunds'\n  });\n  return [{\n    label: 'Prêt hypothécaire',\n    value: React.createElement(\"span\", null, React.createElement(Money, {\n      value: wantedLoan,\n      currency: false\n    })),\n    money: false\n  }, ...ownFunds.filter(({\n    usageType\n  }) => usageType !== OWN_FUNDS_USAGE_TYPES.PLEDGE).map(({\n    value,\n    type,\n    usageType,\n    borrowerId\n  }) => ({\n    label: ownFundLabel({\n      type,\n      usageType,\n      borrower: multipleBorrowers && borrowers.find(({\n        _id\n      }) => _id === borrowerId),\n      borrowerIndex: borrowers.findIndex(({\n        _id\n      }) => _id === borrowerId) + 1\n    }),\n    value\n  })), ...ownFunds.filter(({\n    usageType\n  }) => usageType === OWN_FUNDS_USAGE_TYPES.PLEDGE).map(({\n    value,\n    type,\n    usageType,\n    borrowerId\n  }) => ({\n    label: React.createElement(\"span\", {\n      className: \"secondary\"\n    }, ownFundLabel({\n      type,\n      usageType,\n      borrower: multipleBorrowers && borrowers.find(({\n        _id\n      }) => _id === borrowerId),\n      borrowerIndex: borrowers.findIndex(({\n        _id\n      }) => _id === borrowerId) + 1\n    })),\n    value: React.createElement(\"span\", {\n      className: \"secondary\"\n    }, \"(\", toMoney(value), \")\"),\n    money: false\n  }))].filter(({\n    condition\n  }) => shouldRenderRow(condition));\n};\n\nconst BalanceSheet = ({\n  loan,\n  structureId,\n  calculator\n}) => React.createElement(BalanceSheetTable, {\n  titles: [\"Coût de l'opération\", 'Financement'],\n  leftRows: getCostLines({\n    loan,\n    structureId,\n    calculator\n  }),\n  rightRows: getFinancingLines({\n    loan,\n    structureId,\n    calculator\n  }),\n  bottomTitles: ['Prix de revient', 'Financement total'],\n  bottomValues: [React.createElement(Money, {\n    currency: false,\n    value: calculator.getProjectValue({\n      loan,\n      structureId\n    }),\n    key: \"0\"\n  }), React.createElement(Money, {\n    currency: false,\n    value: calculator.getTotalFinancing({\n      loan,\n      structureId\n    }),\n    key: \"1\"\n  })]\n});\n\nmodule.exportDefault(BalanceSheet);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"IncomeAndExpenses.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/pages/StructurePdfPage/IncomeAndExpenses.jsx                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet T, Money;\nmodule.link(\"../../../../../../components/Translation\", {\n  default(v) {\n    T = v;\n  },\n\n  Money(v) {\n    Money = v;\n  }\n\n}, 1);\nlet toMoney;\nmodule.link(\"../../../../../../utils/conversionFunctions\", {\n  toMoney(v) {\n    toMoney = v;\n  }\n\n}, 2);\nlet shouldRenderRow;\nmodule.link(\"../../PdfTable/PdfTable\", {\n  shouldRenderRow(v) {\n    shouldRenderRow = v;\n  }\n\n}, 3);\nlet BalanceSheetTable;\nmodule.link(\"../../BalanceSheetTable\", {\n  default(v) {\n    BalanceSheetTable = v;\n  }\n\n}, 4);\n\nconst renderExpenses = expenses => Object.keys(expenses).map(expenseType => {\n  const value = expenses[expenseType];\n  return {\n    label: React.createElement(T, {\n      id: `Forms.expenses.${expenseType}`\n    }),\n    // When an expense is positive, it means it has to be substracted from\n    // the income\n    // When it is negative, it has to be added to it\n    value: value < 0 ? React.createElement(\"span\", null, toMoney(value, {\n      noPrefix: true\n    })) : React.createElement(\"span\", null, \"-\", toMoney(value)),\n    condition: !!value,\n    money: false\n  };\n});\n\nconst getIncomeRows = ({\n  loan,\n  structureId,\n  calculator\n}) => {\n  const salary = calculator.getSalary({\n    loan,\n    structureId\n  });\n  const bonus = calculator.getBonusIncome({\n    loan,\n    structureId\n  });\n  const otherIncome = calculator.getOtherIncome({\n    loan,\n    structureId\n  });\n  const fortuneReturns = calculator.getFortuneReturns({\n    loan,\n    structureId\n  });\n  const realEstateIncome = calculator.getRealEstateIncomeTotal({\n    loan,\n    structureId\n  });\n  const expenses = calculator.getGroupedExpensesBySide({\n    loan,\n    structureId,\n    toSubtractFromIncome: true\n  });\n  const useNetSalary = calculator.shouldUseNetSalary();\n  return [{\n    label: React.createElement(T, {\n      id: useNetSalary ? 'Forms.netSalary' : 'Forms.salary'\n    }),\n    value: salary\n  }, {\n    label: React.createElement(T, {\n      id: \"Recap.consideredBonus\"\n    }),\n    value: bonus,\n    condition: !!bonus\n  }, {\n    label: React.createElement(T, {\n      id: \"Forms.otherIncome\"\n    }),\n    value: otherIncome,\n    condition: !!otherIncome\n  }, {\n    label: React.createElement(T, {\n      id: \"Forms.fortuneReturns\"\n    }),\n    value: fortuneReturns,\n    condition: !!fortuneReturns\n  }, {\n    label: React.createElement(T, {\n      id: \"Forms.realEstateIncome\"\n    }),\n    value: realEstateIncome,\n    condition: !!realEstateIncome\n  }, ...renderExpenses(expenses)].filter(({\n    condition\n  }) => shouldRenderRow(condition));\n};\n\nconst getExpenseRows = ({\n  loan,\n  structureId,\n  calculator\n}) => {\n  const propertyCost = calculator.getTheoreticalPropertyCost({\n    loan,\n    structureId,\n    asObject: true\n  });\n  const expenses = calculator.getGroupedExpensesBySide({\n    loan,\n    toSubtractFromIncome: false\n  });\n  return [{\n    label: React.createElement(\"i\", null, \"Taux d'int\\xE9r\\xEAt th\\xE9orique\"),\n    value: React.createElement(\"i\", null, toMoney(propertyCost.interests * 12)),\n    money: false\n  }, {\n    label: React.createElement(\"i\", null, \"Amortissement th\\xE9orique\"),\n    value: React.createElement(\"i\", null, toMoney(propertyCost.amortization * 12)),\n    money: false\n  }, {\n    label: React.createElement(\"i\", null, \"Frais d'entretien th\\xE9orique\"),\n    value: React.createElement(\"i\", null, toMoney(propertyCost.maintenance * 12)),\n    money: false\n  }, ...Object.keys(expenses).map(expenseType => ({\n    label: React.createElement(T, {\n      id: `Forms.expenses.${expenseType}`\n    }),\n    value: expenses[expenseType],\n    condition: !!expenses[expenseType]\n  }))].filter(({\n    condition\n  }) => shouldRenderRow(condition));\n};\n\nconst IncomeAndExpenses = ({\n  loan,\n  structureId,\n  calculator\n}) => React.createElement(BalanceSheetTable, {\n  titles: ['Charges', 'Revenus'],\n  leftRows: getExpenseRows({\n    loan,\n    structureId,\n    calculator\n  }),\n  rightRows: getIncomeRows({\n    loan,\n    structureId,\n    calculator\n  }),\n  bottomTitles: ['Total', 'Total'],\n  bottomValues: [React.createElement(Money, {\n    currency: false,\n    value: calculator.getTheoreticalMonthly({\n      loan,\n      structureId\n    }) * 12,\n    key: \"0\"\n  }), React.createElement(Money, {\n    currency: false,\n    value: calculator.getTotalIncome({\n      loan,\n      structureId\n    }),\n    key: \"1\"\n  })]\n});\n\nmodule.exportDefault(IncomeAndExpenses);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"RemainingOwnFundsTable.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/pages/StructurePdfPage/RemainingOwnFundsTable.jsx                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet T;\nmodule.link(\"../../../../../../components/Translation\", {\n  default(v) {\n    T = v;\n  }\n\n}, 1);\nlet toMoney;\nmodule.link(\"../../../../../../utils/conversionFunctions\", {\n  toMoney(v) {\n    toMoney = v;\n  }\n\n}, 2);\nlet OWN_FUNDS_TYPES;\nmodule.link(\"../../../../../borrowers/borrowerConstants\", {\n  OWN_FUNDS_TYPES(v) {\n    OWN_FUNDS_TYPES = v;\n  }\n\n}, 3);\nlet PdfTable;\nmodule.link(\"../../PdfTable\", {\n  default(v) {\n    PdfTable = v;\n  }\n\n}, 4);\nlet ROW_TYPES;\nmodule.link(\"../../PdfTable/PdfTable\", {\n  ROW_TYPES(v) {\n    ROW_TYPES = v;\n  }\n\n}, 5);\n\nconst oneBorrowerHasOwnFunds = ({\n  borrowers\n}, type) => borrowers.filter(borrower => {\n  const valueForType = borrower[type];\n\n  if (Array.isArray(valueForType)) {\n    return valueForType.length > 0;\n  }\n\n  return !!valueForType;\n}).length > 0;\n\nconst remainingFundsTableData = ({\n  loan,\n  structureId,\n  calculator\n}) => Object.values(OWN_FUNDS_TYPES).filter(type => ![OWN_FUNDS_TYPES.BANK_FORTUNE, OWN_FUNDS_TYPES.THIRD_PARTY_FORTUNE].includes(type)).map(type => ({\n  label: React.createElement(T, {\n    id: `PDF.ownFund.${type}`\n  }),\n  data: toMoney(calculator.getRemainingFundsOfType({\n    loan,\n    type,\n    structureId\n  })),\n  condition: oneBorrowerHasOwnFunds(loan, type),\n  style: {\n    textAlign: 'right'\n  }\n}));\n\nconst getRemainingOwnFundsRows = ({\n  loan,\n  structureId,\n  calculator\n}) => [{\n  label: React.createElement(T, {\n    id: \"PDF.projectInfos.structure.postDisbursementSituation.title\"\n  }),\n  colspan: 2,\n  type: ROW_TYPES.TITLE\n}, {\n  label: React.createElement(T, {\n    id: \"PDF.ownFund.bankFortune\"\n  }),\n  data: toMoney(calculator.getRemainingFundsOfType({\n    loan,\n    structureId,\n    type: OWN_FUNDS_TYPES.BANK_FORTUNE\n  }))\n}, ...remainingFundsTableData({\n  loan,\n  structureId,\n  calculator\n}), {\n  label: React.createElement(T, {\n    id: \"PDF.projectInfos.structure.postDisbursementSituation.total\"\n  }),\n  data: toMoney(calculator.getTotalRemainingFunds({\n    loan,\n    structureId\n  })),\n  type: ROW_TYPES.SUM\n}];\n\nconst RemainingOwnFundsTable = ({\n  loan,\n  structureId,\n  calculator\n}) => React.createElement(PdfTable, {\n  className: \"remaining-own-funds-table\",\n  rows: getRemainingOwnFundsRows({\n    loan,\n    structureId,\n    calculator\n  }),\n  columnOptions: [{}, {\n    style: {\n      textAlign: 'right'\n    }\n  }]\n});\n\nmodule.exportDefault(RemainingOwnFundsTable);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"StructurePdfPage.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/pages/StructurePdfPage/StructurePdfPage.jsx                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet T;\nmodule.link(\"../../../../../../components/Translation\", {\n  default(v) {\n    T = v;\n  }\n\n}, 1);\nlet PercentWithStatus;\nmodule.link(\"../../../../../../components/PercentWithStatus\", {\n  default(v) {\n    PercentWithStatus = v;\n  }\n\n}, 2);\nlet ERROR, SUCCESS;\nmodule.link(\"../../../../../constants\", {\n  ERROR(v) {\n    ERROR = v;\n  },\n\n  SUCCESS(v) {\n    SUCCESS = v;\n  }\n\n}, 3);\nlet PdfPage;\nmodule.link(\"../../PdfPage\", {\n  default(v) {\n    PdfPage = v;\n  }\n\n}, 4);\nlet BalanceSheet;\nmodule.link(\"./BalanceSheet\", {\n  default(v) {\n    BalanceSheet = v;\n  }\n\n}, 5);\nlet IncomeAndExpenses;\nmodule.link(\"./IncomeAndExpenses\", {\n  default(v) {\n    IncomeAndExpenses = v;\n  }\n\n}, 6);\nlet RemainingOwnFundsTable;\nmodule.link(\"./RemainingOwnFundsTable\", {\n  default(v) {\n    RemainingOwnFundsTable = v;\n  }\n\n}, 7);\n\nconst StructurePdfPage = ({\n  loan,\n  structureId,\n  structureIndex,\n  pageNb,\n  pageCount,\n  calculator\n}) => {\n  const structureName = calculator.selectStructure({\n    loan,\n    structureId\n  }).name;\n  const incomeRatio = calculator.getIncomeRatio({\n    loan,\n    structureId\n  });\n  const borrowRatio = calculator.getBorrowRatio({\n    loan,\n    structureId\n  });\n  return React.createElement(PdfPage, {\n    className: \"property-page\",\n    title: React.createElement(T, {\n      id: \"PDF.title.structure\",\n      values: {\n        name: structureName || structureIndex + 1\n      }\n    }),\n    withFooter: true,\n    pageNb: pageNb,\n    pageCount: pageCount\n  }, React.createElement(\"h3\", {\n    className: \"finma-ratio\"\n  }, \"Taux d'avance:\\xA0\", React.createElement(\"span\", null, React.createElement(PercentWithStatus, {\n    value: borrowRatio,\n    status: borrowRatio > calculator.maxBorrowRatio ? ERROR : SUCCESS\n  }))), React.createElement(BalanceSheet, {\n    loan: loan,\n    structureId: structureId,\n    calculator: calculator\n  }), React.createElement(\"h3\", {\n    className: \"finma-ratio\"\n  }, \"Taux d'effort:\\xA0\", React.createElement(\"span\", null, React.createElement(PercentWithStatus, {\n    value: incomeRatio,\n    status: incomeRatio > calculator.maxIncomeRatio ? ERROR : SUCCESS\n  }))), React.createElement(IncomeAndExpenses, {\n    loan: loan,\n    structureId: structureId,\n    calculator: calculator\n  }), React.createElement(RemainingOwnFundsTable, {\n    loan: loan,\n    structureId: structureId,\n    calculator: calculator\n  }));\n};\n\nmodule.exportDefault(StructurePdfPage);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/pages/StructurePdfPage/index.js                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./StructurePdfPage\", {\n  default: \"default\"\n}, 0);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"stylesheet.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/pages/StructurePdfPage/stylesheet.js                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.exportDefault(`\n    .balance-sheet-table {\n        width: 100%;\n    }\n\n    .balance-sheet-table td {\n        width: 25%;\n    }\n\n    .balance-sheet-table .title-row td {\n        text-align: left !important;\n    }\n\n    .balance-sheet-table tr.title-row td:nth-child(1),\n    .balance-sheet-table tr td:nth-child(2) {\n        padding-right: 8px;\n    }\n\n    .balance-sheet-table .title-row td:nth-child(2),\n    .balance-sheet-table tr td:nth-child(3) {\n        padding-left: 8px;\n    }\n\n    .balance-sheet-table .title-row td:nth-child(2) {\n        padding-right: 0;\n    }\n\n    .balance-sheet-table tr td:nth-child(even) {\n        text-align: right;\n    }\n    \n    .balance-sheet-table tr td:nth-child(odd) {\n        text-align: left;\n    }\n\n    .balance-sheet-table {\n        margin-bottom: 40px;\n    }\n\n    .finma-ratio {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        font-weight: normal;\n    }\n\n    .finma-ratio span {\n        display: flex;\n        align-items: center;\n        font-size: 1.3em;\n        margin-left: 8px;\n    }\n\n    .finma-ratio svg {\n        width: 40px;\n    }\n\n    .remaining-own-funds-table {\n        width: 100%;\n    }\n`);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"BalanceSheetTable\":{\"BalanceSheetTable.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/BalanceSheetTable/BalanceSheetTable.jsx                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet classes, ROW_TYPES;\nmodule.link(\"../PdfTable/PdfTable\", {\n  classes(v) {\n    classes = v;\n  },\n\n  ROW_TYPES(v) {\n    ROW_TYPES = v;\n  }\n\n}, 1);\nlet toMoney;\nmodule.link(\"../../../../../utils/conversionFunctions\", {\n  toMoney(v) {\n    toMoney = v;\n  }\n\n}, 2);\n\nconst makeTableContent = (leftRows, rightRows) => {\n  const lines = Math.max(rightRows.length, leftRows.length);\n  return [...Array(lines)].map((_, index) => {\n    const {\n      label: leftLabel,\n      value: leftValue,\n      money: leftMoney = true\n    } = leftRows[index] || {};\n    const {\n      label: rightLabel,\n      value: rightValue,\n      money: rightMoney = true\n    } = rightRows[index] || {};\n    return React.createElement(\"tr\", {\n      key: index,\n      className: classes[ROW_TYPES.REGULAR]\n    }, React.createElement(\"td\", null, leftLabel), React.createElement(\"td\", null, leftMoney ? toMoney(leftValue) : leftValue), React.createElement(\"td\", null, rightLabel), React.createElement(\"td\", null, rightMoney ? toMoney(rightValue) : rightValue));\n  });\n};\n\nconst BalanceSheetTable = ({\n  titles,\n  rightRows,\n  leftRows,\n  bottomTitles,\n  bottomValues\n}) => React.createElement(\"table\", {\n  className: \"pdf-table balance-sheet-table\"\n}, React.createElement(\"tr\", {\n  className: classes[ROW_TYPES.TITLE]\n}, React.createElement(\"td\", {\n  colSpan: 2\n}, titles[0]), React.createElement(\"td\", {\n  colSpan: 2\n}, titles[1])), makeTableContent(leftRows, rightRows), React.createElement(\"tr\", {\n  className: classes[ROW_TYPES.SUM]\n}, React.createElement(\"td\", null, bottomTitles[0]), React.createElement(\"td\", null, bottomValues[0]), React.createElement(\"td\", null, bottomTitles[1]), React.createElement(\"td\", null, bottomValues[1])));\n\nmodule.exportDefault(BalanceSheetTable);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/BalanceSheetTable/index.js                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./BalanceSheetTable\", {\n  default: \"default\"\n}, 0);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"Pdf\":{\"Pdf.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/Pdf/Pdf.jsx                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nmodule.export({\n  LastPageContext: () => LastPageContext\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet IntlProvider;\nmodule.link(\"react-intl\", {\n  IntlProvider(v) {\n    IntlProvider = v;\n  }\n\n}, 1);\nlet getUserLocale, getFormats;\nmodule.link(\"../../../../../utils/localization\", {\n  getUserLocale(v) {\n    getUserLocale = v;\n  },\n\n  getFormats(v) {\n    getFormats = v;\n  }\n\n}, 2);\nlet messagesFR;\nmodule.link(\"../../../../../lang/fr.json\", {\n  default(v) {\n    messagesFR = v;\n  }\n\n}, 3);\nconst LastPageContext = React.createContext();\n\nconst Pdf = ({\n  stylesheet,\n  pages,\n  pdfName\n}) => React.createElement(IntlProvider, {\n  locale: getUserLocale(),\n  messages: messagesFR,\n  formats: getFormats(),\n  defaultLocale: \"fr\"\n}, React.createElement(React.Fragment, null, React.createElement(\"style\", {\n  dangerouslySetInnerHTML: {\n    __html: stylesheet\n  }\n}), pdfName && React.createElement(\"title\", null, pdfName), pages.map(({\n  Component,\n  data,\n  id\n}, index, arr) => {\n  const isLast = index === arr.length - 1;\n  return React.createElement(LastPageContext.Provider, {\n    key: id,\n    value: isLast\n  }, React.createElement(Component, (0, _extends2.default)({}, data, {\n    pageCount: pages.length,\n    pageNb: index + 1\n  })));\n})));\n\nmodule.exportDefault(Pdf);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"PdfPage\":{\"PdfPage.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/PdfPage/PdfPage.jsx                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet cx;\nmodule.link(\"classnames\", {\n  default(v) {\n    cx = v;\n  }\n\n}, 1);\nlet PdfPageTitle;\nmodule.link(\"./PdfPageTitle\", {\n  default(v) {\n    PdfPageTitle = v;\n  }\n\n}, 2);\nlet PdfPageHeader;\nmodule.link(\"./PdfPageHeader\", {\n  default(v) {\n    PdfPageHeader = v;\n  }\n\n}, 3);\nlet PdfPageFooter;\nmodule.link(\"./PdfPageFooter\", {\n  default(v) {\n    PdfPageFooter = v;\n  }\n\n}, 4);\nlet LastPageContext;\nmodule.link(\"../Pdf/Pdf\", {\n  LastPageContext(v) {\n    LastPageContext = v;\n  }\n\n}, 5);\n\nconst PdfPage = ({\n  className,\n  title,\n  fullHeight,\n  subtitle,\n  children,\n  withHeader,\n  withFooter,\n  pageNb,\n  pageCount\n}) => React.createElement(LastPageContext.Consumer, null, isLast => React.createElement(React.Fragment, null, withHeader && React.createElement(PdfPageHeader, null), withFooter && React.createElement(PdfPageFooter, {\n  pageNb: pageNb,\n  pageCount: pageCount\n}), React.createElement(\"div\", {\n  className: cx('page', className, {\n    'full-height': fullHeight\n  })\n}, React.createElement(PdfPageTitle, {\n  title: title,\n  subtitle: subtitle\n}), children), !isLast && React.createElement(\"hr\", {\n  className: \"page-break-new\"\n})));\n\nmodule.exportDefault(PdfPage);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"PdfPageFooter.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/PdfPage/PdfPageFooter.jsx                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\n\nconst PdfPageFooter = ({\n  pageNb,\n  pageCount\n}) => React.createElement(\"div\", {\n  className: \"pdf-page-footer\"\n}, React.createElement(\"div\", null, React.createElement(\"span\", {\n  className: \"bold\"\n}, \"e-Potek SA\"), \"\\xA0\", React.createElement(\"span\", null, \"Chemin Auguste-Vilbert 14, 1218 Le Grand-Saconnex \\u2022 +41 22 566 01 10\")), React.createElement(\"div\", null, \"Page \", pageNb, \"/\", pageCount));\n\nmodule.exportDefault(PdfPageFooter);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"PdfPageHeader.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/PdfPage/PdfPageHeader.jsx                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\n\nconst PdfPageHeader = props => React.createElement(\"div\", {\n  className: \"pdf-page-header\"\n}, \"Hello from PdfPageHeader\");\n\nmodule.exportDefault(PdfPageHeader);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"PdfPageStyles.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/PdfPage/PdfPageStyles.js                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet CONTENT_HEIGHT, BORDER_BLUE;\nmodule.link(\"../../../pdfConstants\", {\n  CONTENT_HEIGHT(v) {\n    CONTENT_HEIGHT = v;\n  },\n\n  BORDER_BLUE(v) {\n    BORDER_BLUE = v;\n  }\n\n}, 0);\nconst PdfPageStyles = `\n    .page {\n        display: flex;\n        flex-direction: column;\n        justify-content: flex-start;\n        width: 100%;\n        box-sizing: border-box;\n        align-items: stretch;\n    }\n\n    .full-height {\n        height: ${CONTENT_HEIGHT}mm;\n    }\n\n    .header {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        width: 100%;\n        height: 120px;\n        margin-top: 24px;\n    }\n\n    .header .address {\n        display: flex;\n        flex-direction: column;    \n    }\n\n    .header .address .company-name {\n        font-weight: bold;\n    }\n\n    .pdf-page-title {\n        margin-bottom: 16px;\n    }\n\n    .pdf-page-title h1 {\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n        margin: 0;\n        color: ${BORDER_BLUE};\n        font-weight: normal;\n    }\n\n    .pdf-page-title img {\n        width: 30px;\n        height: 30px;\n        margin-right: 12px;\n    }\n\n    .pdf-page-footer {\n        display: flex;\n        justify-content: space-between;\n        border-top: 1px solid ${BORDER_BLUE};\n        width: 100%;\n        height: 100%;\n        padding-top: 16px;\n        color: ${BORDER_BLUE};\n        font-size: 10px;\n    }\n\n    .bold {\n        font-weight: bold;\n    }\n\n    .secondary {\n        opacity: 0.5;\n    }\n`;\nmodule.exportDefault(PdfPageStyles);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"PdfPageTitle.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/PdfPage/PdfPageTitle.jsx                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\n\nconst PdfPageTitle = ({\n  title,\n  subtitle\n}) => {\n  if (!title && !subtitle) {\n    return null;\n  }\n\n  return React.createElement(\"div\", {\n    className: \"pdf-page-title\"\n  }, React.createElement(\"h1\", null, React.createElement(\"img\", {\n    src: \"https://www.e-potek.ch/img/logo_square_black_no_border.svg\"\n  }), title), subtitle && React.createElement(\"h2\", {\n    className: \"secondary\"\n  }, subtitle));\n};\n\nmodule.exportDefault(PdfPageTitle);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/PdfPage/index.js                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./PdfPage\", {\n  default: \"default\"\n}, 0);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"PdfTable\":{\"PdfTable.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/PdfTable/PdfTable.jsx                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  ROW_TYPES: () => ROW_TYPES,\n  classes: () => classes,\n  shouldRenderRow: () => shouldRenderRow\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet cx;\nmodule.link(\"classnames\", {\n  default(v) {\n    cx = v;\n  }\n\n}, 1);\nlet PdfTableTooltips;\nmodule.link(\"./PdfTableTooltips\", {\n  default(v) {\n    PdfTableTooltips = v;\n  }\n\n}, 2);\nlet PdfTableRow;\nmodule.link(\"./PdfTableRow\", {\n  default(v) {\n    PdfTableRow = v;\n  }\n\n}, 3);\nconst ROW_TYPES = {\n  TITLE: 'TITLE',\n  TITLE_NO_PADDING: 'TITLE_NO_PADDING',\n  REGULAR: 'REGULAR',\n  EMPTY: 'EMPTY',\n  SUM: 'SUM',\n  SUBSECTION: 'SUBSECTION',\n  TOOLTIP: 'TOOLTIP'\n};\nconst classes = {\n  [ROW_TYPES.TITLE]: 'title-row',\n  [ROW_TYPES.TITLE_NO_PADDING]: 'title-row no-padding',\n  [ROW_TYPES.REGULAR]: 'regular-row',\n  [ROW_TYPES.EMPTY]: 'empty-row',\n  [ROW_TYPES.SUM]: 'sum-row',\n  [ROW_TYPES.SUBSECTION]: 'subsection-row',\n  [ROW_TYPES.TOOLTIP]: 'tooltip'\n};\n\nconst shouldRenderRow = condition => condition === undefined || condition;\n\nconst PdfTable = ({\n  rows,\n  className,\n  columnOptions = [],\n  style = {}\n}) => React.createElement(\"table\", {\n  className: cx('pdf-table', className),\n  style: style\n}, rows.map((rowData, index) => {\n  if (!shouldRenderRow(rowData.condition)) {\n    return null;\n  }\n\n  return React.createElement(PdfTableRow, {\n    key: index,\n    rowData: rowData,\n    index: index,\n    columnOptions: columnOptions\n  });\n}), React.createElement(PdfTableTooltips, {\n  tooltips: rows.filter(({\n    tooltip,\n    condition\n  }) => !!tooltip && shouldRenderRow(condition)),\n  startIndex: rows.length + 1\n}));\n\nmodule.exportDefault(PdfTable);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"PdfTableRow.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/PdfTable/PdfTableRow.jsx                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet cx;\nmodule.link(\"classnames\", {\n  default(v) {\n    cx = v;\n  }\n\n}, 1);\nlet classes, ROW_TYPES;\nmodule.link(\"./PdfTable\", {\n  classes(v) {\n    classes = v;\n  },\n\n  ROW_TYPES(v) {\n    ROW_TYPES = v;\n  }\n\n}, 2);\n\nconst multiColumn = (data, style, columnOptions = []) => data.map((x, index) => {\n  const {\n    className = '',\n    style: columnStyle = {}\n  } = columnOptions[index] || {};\n  return React.createElement(\"td\", {\n    className: className,\n    style: (0, _objectSpread2.default)({}, columnStyle, style),\n    key: index\n  }, x);\n});\n\nconst singleColumn = (data, style, {\n  className = '',\n  style: columnStyle = {}\n} = {}) => React.createElement(\"td\", {\n  style: (0, _objectSpread2.default)({}, columnStyle, style),\n  className: className\n}, data);\n\nconst PdfTableRow = ({\n  rowData: {\n    label,\n    labelStyle = {},\n    tooltip,\n    data,\n    style,\n    colspan = 1,\n    type = ROW_TYPES.REGULAR,\n    className\n  },\n  index,\n  columnOptions = []\n}) => {\n  if (colspan > 1) {\n    const {\n      className: columnClassName = '',\n      style: columnStyle = {}\n    } = columnOptions[0] || {};\n    return React.createElement(\"tr\", {\n      key: index,\n      className: cx(classes[type], className)\n    }, label && React.createElement(\"td\", {\n      className: columnClassName,\n      colSpan: colspan,\n      style: (0, _objectSpread2.default)({}, columnStyle, labelStyle)\n    }, label));\n  }\n\n  const {\n    className: columnClassName = '',\n    style: columnStyle = {}\n  } = columnOptions[0] || {};\n  return React.createElement(\"tr\", {\n    key: index,\n    className: cx(classes[type], className)\n  }, label && React.createElement(\"td\", {\n    style: columnStyle,\n    className: columnClassName\n  }, label, tooltip && React.createElement(\"sup\", null, \" \", tooltip.symbol)), Array.isArray(data) ? multiColumn(data, style, columnOptions.slice(1)) : singleColumn(data, style, columnOptions[1]));\n};\n\nmodule.exportDefault(PdfTableRow);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"PdfTableStyles.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/PdfTable/PdfTableStyles.js                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet BORDER_BLUE, BORDER_GREY;\nmodule.link(\"../../../pdfConstants\", {\n  BORDER_BLUE(v) {\n    BORDER_BLUE = v;\n  },\n\n  BORDER_GREY(v) {\n    BORDER_GREY = v;\n  }\n\n}, 0);\nmodule.exportDefault(`\n    .pdf-table {\n        border-collapse: collapse;\n        table-layout: fixed;\n    }\n\n    .pdf-table tr {\n        // width: 100%;\n    }\n\n    .pdf-table td {\n        // width: 50%;\n        padding: 8px 0px;\n        vertical-align: middle;\n    }\n\n    .pdf-table tr td:not(:first-of-type) {\n        // text-align: right;\n    }\n\n    .pdf-table tr:first-child {\n        border-top: none !important;\n    }\n    \n    .pdf-table tr.regular-row {\n        border-top: 1px solid ${BORDER_GREY};\n    }\n\n    .pdf-table tr.regular-row td {\n        font-weight: normal;\n    }\n\n    .pdf-table tr.subsection-row {\n        border-top: none !important;\n    }\n\n    .pdf-table tr.subsection-row td {\n        font-weight: bold;\n    }\n\n    .pdf-table tr.title-row {\n        border-bottom: 1px solid ${BORDER_BLUE};\n    }\n\n    .pdf-table tr.title-row td {\n        color: ${BORDER_BLUE};\n        margin: 0;\n        padding: 8px 0;\n        text-align: left;\n        font-weight: bold;\n        // width: 100%;\n    }\n\n    .pdf-table tr.tooltip {\n        border-top: none;\n    }\n\n    .pdf-table tr.tooltip td {\n        font-weight: 200;\n        padding-top: 20px;\n    }\n\n    .pdf-table tr.tooltip ~ tr.tooltip td{\n        padding-top: 4px;\n    }\n\n\n    .pdf-table tr.title-row:not(:first-child) td {\n        padding-top: 24px;\n    }\n\n    .pdf-table tr.title-row.no-padding td {\n        padding: 8px 0;\n    }\n\n    .pdf-table tr.empty-row {\n        border-color: white;\n    }\n\n    .pdf-table tr.sum-row {\n        border-top: 1px solid ${BORDER_BLUE};\n        border-bottom: 1px solid ${BORDER_BLUE};\n    }\n\n    .pdf-table tr.sum-row td {\n        font-weight: bold;\n    }\n`);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"PdfTableTooltips.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/PdfTable/PdfTableTooltips.jsx                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet ROW_TYPES;\nmodule.link(\"./PdfTable\", {\n  ROW_TYPES(v) {\n    ROW_TYPES = v;\n  }\n\n}, 1);\nlet PdfTableRow;\nmodule.link(\"./PdfTableRow\", {\n  default(v) {\n    PdfTableRow = v;\n  }\n\n}, 2);\n\nconst PdfTableTooltips = ({\n  tooltips,\n  startIndex\n}) => tooltips.map(({\n  tooltip\n}, index) => React.createElement(PdfTableRow, {\n  key: index,\n  rowData: {\n    label: React.createElement(\"small\", null, React.createElement(\"i\", null, React.createElement(\"sup\", null, tooltip.symbol), \" \", tooltip.text)),\n    type: ROW_TYPES.TOOLTIP,\n    colspan: 2\n  },\n  index: startIndex + index\n}));\n\nmodule.exportDefault(PdfTableTooltips);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/PdfTable/index.js                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./PdfTable\", {\n  default: \"default\"\n}, 0);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"utils\":{\"styleHelpers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfComponents/utils/styleHelpers.js                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  FLEX_ROW: () => FLEX_ROW,\n  FLEX_COLUMN: () => FLEX_COLUMN,\n  ALIGN_ITEMS_CENTER: () => ALIGN_ITEMS_CENTER,\n  ALIGN_ITEMS_FLEX_END: () => ALIGN_ITEMS_FLEX_END,\n  JUSTIFY_CONTENT_FLEX_START: () => JUSTIFY_CONTENT_FLEX_START,\n  JUSTIFY_CONTENT_SPACE_BETWEEN: () => JUSTIFY_CONTENT_SPACE_BETWEEN,\n  JUSTIFY_CONTENT_FLEX_END: () => JUSTIFY_CONTENT_FLEX_END,\n  JUSTIFY_CONTENT_CENTER: () => JUSTIFY_CONTENT_CENTER,\n  JUSTIFY_CONTENT_SPACE_EVENLY: () => JUSTIFY_CONTENT_SPACE_EVENLY,\n  JUSTIFY_CONTENT_SPACE_AROUND: () => JUSTIFY_CONTENT_SPACE_AROUND,\n  ALIGN_SELF_FLEX_END: () => ALIGN_SELF_FLEX_END,\n  flexGrow: () => flexGrow,\n  flexBasis: () => flexBasis,\n  flexShrink: () => flexShrink,\n  FLEXBOX: () => FLEXBOX,\n  flex: () => flex\n});\nconst FLEX_ROW = `\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: row;\n    flex-direction: row;\n`;\nconst FLEX_COLUMN = `\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: column;\n    flex-direction: column;\n`;\nconst ALIGN_ITEMS_CENTER = `\n    -webkit-box-align: center;\n    -ms-flex-align: center;\n    align-items: center;\n`;\nconst ALIGN_ITEMS_FLEX_END = `\n    -webkit-box-align: end;\n    -ms-flex-align: end;\n    align-items: flex-end;\n`;\nconst JUSTIFY_CONTENT_FLEX_START = `\n    -webkit-box-pack: start;\n    -ms-flex-pack: start;\n    justify-content: flex-start;\n`;\nconst JUSTIFY_CONTENT_SPACE_BETWEEN = `\n    -webkit-box-pack: justify;\n    -ms-flex-pack: justify;\n    justify-content: space-between;\n`;\nconst JUSTIFY_CONTENT_FLEX_END = `\n    -webkit-box-pack: end;\n    -ms-flex-pack: end;\n    justify-content: flex-end;\n`;\nconst JUSTIFY_CONTENT_CENTER = `\n    -webkit-box-pack: center;\n    -ms-flex-pack: center;\n    justify-content: center;\n`;\nconst JUSTIFY_CONTENT_SPACE_EVENLY = `\n    -webkit-box-pack: space-evenly;\n    -ms-flex-pack: space-evenly;\n    justify-content: space-evenly;\n`;\nconst JUSTIFY_CONTENT_SPACE_AROUND = `\n    -ms-flex-pack: distribute;\n    justify-content: space-around;\n`;\nconst ALIGN_SELF_FLEX_END = `\n    -ms-flex-item-align: end;\n    align-self: flex-end;\n`;\n\nconst flexGrow = size => `\n    -webkit-box-flex: ${size};\n    -ms-flex-positive: ${size};\n    flex-grow: ${size};\n`;\n\nconst flexBasis = basis => `\n    -ms-flex-preferred-size: ${basis};\n    flex-basis: ${basis};\n`;\n\nconst flexShrink = size => `\n    -ms-flex-negative: ${size};\n    flex-shrink: ${size};\n`;\n\nconst FLEXBOX = {\n  FLEX_ROW,\n  FLEX_COLUMN,\n  ALIGN_ITEMS_CENTER,\n  ALIGN_ITEMS_FLEX_END,\n  JUSTIFY_CONTENT_FLEX_START,\n  JUSTIFY_CONTENT_SPACE_BETWEEN,\n  JUSTIFY_CONTENT_FLEX_END,\n  JUSTIFY_CONTENT_CENTER,\n  JUSTIFY_CONTENT_SPACE_EVENLY,\n  JUSTIFY_CONTENT_SPACE_AROUND\n};\n\nconst flex = options => options.reduce((style, option) => `${style} ${FLEXBOX[option]}`, '');\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"PDFService.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/PDFService.js                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Random;\nmodule.link(\"meteor/random\", {\n  Random(v) {\n    Random = v;\n  }\n\n}, 1);\nlet check, Match;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 2);\nlet fetch;\nmodule.link(\"node-fetch\", {\n  default(v) {\n    fetch = v;\n  }\n\n}, 3);\nlet ReactDOMServer;\nmodule.link(\"react-dom/server\", {\n  default(v) {\n    ReactDOMServer = v;\n  }\n\n}, 4);\nlet fs;\nmodule.link(\"fs\", {\n  default(v) {\n    fs = v;\n  }\n\n}, 5);\nlet adminLoans;\nmodule.link(\"../../loans/queries\", {\n  adminLoans(v) {\n    adminLoans = v;\n  }\n\n}, 6);\nlet formatLoanWithPromotion;\nmodule.link(\"../../../utils/loanFunctions\", {\n  formatLoanWithPromotion(v) {\n    formatLoanWithPromotion = v;\n  }\n\n}, 7);\nlet lenderRules;\nmodule.link(\"../../fragments\", {\n  lenderRules(v) {\n    lenderRules = v;\n  }\n\n}, 8);\nlet OrganisationService;\nmodule.link(\"../../organisations/server/OrganisationService\", {\n  default(v) {\n    OrganisationService = v;\n  }\n\n}, 9);\nlet LoanBankPDF;\nmodule.link(\"./pdfComponents/LoanBankPDF\", {\n  default(v) {\n    LoanBankPDF = v;\n  }\n\n}, 10);\nlet PDF_TYPES;\nmodule.link(\"../pdfConstants\", {\n  PDF_TYPES(v) {\n    PDF_TYPES = v;\n  }\n\n}, 11);\nlet validateLoanPdf;\nmodule.link(\"./pdfValidators\", {\n  validateLoanPdf(v) {\n    validateLoanPdf = v;\n  }\n\n}, 12);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst PDF_URL = 'https://docraptor.com/docs';\n\nclass PDFService {\n  constructor() {\n    _defineProperty(this, \"makePDF\", ({\n      type,\n      params,\n      options,\n      htmlOnly\n    }) => {\n      this.checkParams({\n        params,\n        type\n      });\n      const data = this.getDataForPDF(type, params);\n      this.checkData({\n        data,\n        type\n      });\n      const {\n        component,\n        props,\n        fileName,\n        pdfName\n      } = this.makeConfigForPDF({\n        data,\n        type,\n        options\n      });\n      const html = this.getComponentAsHTML(component, props, pdfName);\n\n      if (htmlOnly) {\n        return Promise.resolve({\n          html,\n          pdfName\n        });\n      }\n\n      return this.fetchPDF(html, fileName, pdfName);\n    });\n\n    _defineProperty(this, \"checkData\", ({\n      data,\n      type\n    }) => {\n      switch (type) {\n        case PDF_TYPES.LOAN:\n          {\n            try {\n              validateLoanPdf(data);\n            } catch (error) {\n              throw new Meteor.Error(error);\n            }\n\n            break;\n          }\n\n        default:\n          throw new Meteor.Error(`Invalid pdf type: ${type}`);\n      }\n    });\n\n    _defineProperty(this, \"checkParams\", ({\n      params,\n      type\n    }) => {\n      switch (type) {\n        case PDF_TYPES.LOAN:\n          {\n            const {\n              loanId,\n              organisationId,\n              structureIds\n            } = params;\n            check(loanId, String);\n            check(organisationId, Match.Maybe(String));\n            check(structureIds, Match.Maybe([String]));\n            break;\n          }\n\n        default:\n          throw new Meteor.Error(`Invalid pdf type: ${type}`);\n      }\n    });\n\n    _defineProperty(this, \"getDataForPDF\", (type, params) => {\n      switch (type) {\n        case PDF_TYPES.LOAN:\n          {\n            const {\n              loanId,\n              organisationId\n            } = params;\n            const organisation = organisationId && OrganisationService.fetchOne({\n              $filters: {\n                _id: organisationId\n              },\n              lenderRules: lenderRules(),\n              name: 1,\n              logo: 1\n            });\n            const loan = adminLoans.clone({\n              _id: loanId\n            }).fetchOne();\n\n            if (loan.hasPromotion) {\n              return (0, _objectSpread2.default)({}, params, {\n                loan: formatLoanWithPromotion(loan),\n                organisation\n              });\n            }\n\n            return (0, _objectSpread2.default)({}, params, {\n              loan,\n              organisation\n            });\n          }\n\n        default:\n          throw new Meteor.Error(`Invalid pdf type: ${type}`);\n      }\n    });\n\n    _defineProperty(this, \"makeConfigForPDF\", ({\n      type,\n      data,\n      options\n    }) => {\n      const fileName = Random.id();\n\n      switch (type) {\n        case PDF_TYPES.LOAN:\n          {\n            const {\n              loan,\n              organisation\n            } = data;\n            return {\n              component: LoanBankPDF,\n              props: (0, _objectSpread2.default)({}, data, {\n                options\n              }),\n              fileName,\n              pdfName: organisation ? `${loan.name} - ${organisation.name}` : loan.name\n            };\n          }\n\n        default:\n          throw new Meteor.Error(`Invalid pdf type: ${type}`);\n      }\n    });\n\n    _defineProperty(this, \"getBase64String\", path => {\n      const file = fs.readFileSync(path);\n      fs.unlink(path); // Async delete\n\n      const base64 = new Buffer(file).toString('base64');\n      return base64;\n    });\n\n    _defineProperty(this, \"getComponentAsHTML\", (component, props, pdfName) => ReactDOMServer.renderToStaticMarkup(component((0, _objectSpread2.default)({}, props, {\n      pdfName\n    }))));\n\n    _defineProperty(this, \"fetchPDF\", (html, fileName, pdfName) => {\n      const API_KEY = Meteor.settings.DOC_RAPTOR_API_KEY;\n      const body = {\n        user_credentials: API_KEY,\n        doc: {\n          document_content: html,\n          name: pdfName,\n          type: 'pdf',\n          test: !Meteor.isProduction || Meteor.isStaging || Meteor.isDevEnvironment,\n          // help: true,\n          prince_options: {\n            media: 'screen',\n            baseurl: 'https://www.e-potek.ch'\n          }\n        }\n      };\n      return fetch(PDF_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      }).then(res => {\n        const dest = fs.createWriteStream(`/tmp/${fileName}.pdf`);\n        const stream = res.body.pipe(dest);\n        return new Promise(resolve => {\n          stream.on('finish', resolve);\n        });\n      }).then(() => this.getBase64String(`/tmp/${fileName}.pdf`)).then(base64 => ({\n        base64,\n        pdfName\n      }));\n    });\n  }\n\n}\n\nmodule.exportDefault(new PDFService());\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/methods.js                                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet fs;\nmodule.link(\"fs\", {\n  default(v) {\n    fs = v;\n  }\n\n}, 1);\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 2);\nlet generatePDF;\nmodule.link(\"../methodDefinitions\", {\n  generatePDF(v) {\n    generatePDF = v;\n  }\n\n}, 3);\nlet PDFService;\nmodule.link(\"./PDFService\", {\n  default(v) {\n    PDFService = v;\n  }\n\n}, 4);\nlet PDF_TYPES;\nmodule.link(\"../pdfConstants\", {\n  PDF_TYPES(v) {\n    PDF_TYPES = v;\n  }\n\n}, 5);\nlet Loans;\nmodule.link(\"../../loans\", {\n  default(v) {\n    Loans = v;\n  }\n\n}, 6);\nlet Organisations;\nmodule.link(\"../../organisations\", {\n  default(v) {\n    Organisations = v;\n  }\n\n}, 7);\ngeneratePDF.setHandler((context, params) => {\n  context.unblock();\n  SecurityService.checkCurrentUserIsAdmin();\n  return PDFService.makePDF(params);\n}); // Enable this to iterate faster on pdfs\n// Creates a new PDF on every startup to ~/Desktop/pdf-test.html\n\nconst PDF_TESTING = false;\nconst loanName = '19-0077';\nconst orgName = 'Swisslife';\nMeteor.startup(() => {\n  if (Meteor.isDevelopment && PDF_TESTING) {\n    Meteor.defer(() => {\n      const loanId = Loans.findOne({\n        name: loanName\n      })._id;\n\n      const organisationId = orgName ? Organisations.findOne({\n        name: orgName\n      })._id : '';\n\n      if (!loanId) {\n        console.log(`Loan ${loanName} not found`);\n        return;\n      }\n\n      PDFService.makePDF({\n        type: PDF_TYPES.LOAN,\n        params: {\n          loanId,\n          organisationId\n        },\n        options: {\n          anonymous: false\n        },\n        htmlOnly: true\n      }).then(html => {\n        console.log('Writing test PDF to ~/Desktop/pdf-testing.html');\n\n        const homedir = require('os').homedir();\n\n        fs.writeFileSync(`${homedir}/Desktop/pdf-test.html`, html);\n      });\n    });\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"pdfHelpers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfHelpers.js                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  frenchErrors: () => frenchErrors\n});\nlet Intl;\nmodule.link(\"../../../utils/server/intl\", {\n  default(v) {\n    Intl = v;\n  }\n\n}, 0);\n\nconst formatKey = key => {\n  const i18nKey = `Forms.${key}`;\n  const translated = Intl.formatMessage({\n    id: `Forms.${key}`,\n    values: {\n      purchaseType: 'ACQUISITION' // Do this to avoid purchaseType error\n\n    }\n  });\n\n  if (i18nKey === translated) {\n    // Translation does not exist\n    return key;\n  }\n\n  return translated;\n};\n\nconst frenchErrors = {\n  missingKey: (key, parentKey) => parentKey ? `Il manque ${formatKey(key)} dans ${formatKey(parentKey)}` : `Il manque ${formatKey(key)}`,\n  shouldBeArray: key => `${formatKey(key)} doit être une liste`,\n  shouldBeObject: key => `${formatKey(key)} doit être un objet`,\n  emptyArray: (key, parentKey) => parentKey ? `${formatKey(key)} ne doit pas être vide dans ${formatKey(parentKey)}` : `${formatKey(key)} ne doit pas être vide`\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"pdfValidators.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/server/pdfValidators.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  validateLoanPdf: () => validateLoanPdf\n});\nlet makeCheckObjectStructure;\nmodule.link(\"../../../utils/checkObjectStructure\", {\n  makeCheckObjectStructure(v) {\n    makeCheckObjectStructure = v;\n  }\n\n}, 0);\nlet PDF_TYPES, TEMPLATES;\nmodule.link(\"../pdfConstants\", {\n  PDF_TYPES(v) {\n    PDF_TYPES = v;\n  },\n\n  TEMPLATES(v) {\n    TEMPLATES = v;\n  }\n\n}, 1);\nlet frenchErrors;\nmodule.link(\"./pdfHelpers\", {\n  frenchErrors(v) {\n    frenchErrors = v;\n  }\n\n}, 2);\n\nconst validateLoanPdf = ({\n  loan,\n  structureIds\n}) => {\n  const checkObjectStructure = makeCheckObjectStructure(frenchErrors);\n  checkObjectStructure({\n    obj: loan,\n    template: TEMPLATES[PDF_TYPES.LOAN]\n  });\n  const structures = loan.structures.filter(({\n    id\n  }) => structureIds.includes(id));\n  let id;\n  structures.forEach(({\n    propertyId,\n    promotionOptionId\n  }) => {\n    if (!id) {\n      id = propertyId || promotionOptionId;\n    } else if (id !== propertyId && id !== promotionOptionId) {\n      throw 'Tous les biens immo doivent être les mêmes sur chaque plan financier du PDF';\n    }\n  });\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"methodDefinitions.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/methodDefinitions.js                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  generatePDF: () => generatePDF\n});\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet Method;\nmodule.link(\"../methods/methods\", {\n  Method(v) {\n    Method = v;\n  }\n\n}, 1);\nlet PDF_TYPES;\nmodule.link(\"./pdfConstants\", {\n  PDF_TYPES(v) {\n    PDF_TYPES = v;\n  }\n\n}, 2);\nconst generatePDF = new Method({\n  name: 'generatePDF',\n  params: {\n    type: Match.OneOf(...Object.values(PDF_TYPES)),\n    params: Object,\n    options: Object,\n    htmlOnly: Match.Maybe(Boolean)\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"pdfConstants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/pdf/pdfConstants.js                                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  PDF_TYPES: () => PDF_TYPES,\n  TEMPLATES: () => TEMPLATES,\n  A4_HEIGHT: () => A4_HEIGHT,\n  MARGIN_TOP: () => MARGIN_TOP,\n  MARGIN_BOTTOM: () => MARGIN_BOTTOM,\n  MARGIN_SIDE: () => MARGIN_SIDE,\n  WIGGLE_ROOM: () => WIGGLE_ROOM,\n  CONTENT_HEIGHT: () => CONTENT_HEIGHT,\n  BORDER_BLUE: () => BORDER_BLUE,\n  BORDER_GREY: () => BORDER_GREY\n});\nconst PDF_TYPES = {\n  LOAN: 'LOAN'\n};\nconst TEMPLATES = {\n  [PDF_TYPES.LOAN]: {\n    name: 1,\n    purchaseType: 1,\n    residenceType: 1,\n    borrowers: [{\n      gender: 1,\n      zipCode: {\n        $or: 'sameAddress'\n      },\n      city: {\n        $or: 'sameAddress'\n      }\n    }],\n    structure: {\n      ownFunds: [1],\n      property: {\n        propertyType: 1,\n        address1: 1,\n        zipCode: 1,\n        city: 1\n      }\n    },\n    user: {\n      assignedEmployee: {\n        name: 1,\n        email: 1,\n        phoneNumbers: [1]\n      }\n    }\n  }\n};\nconst A4_HEIGHT = 295;\nconst MARGIN_TOP = 10;\nconst MARGIN_BOTTOM = 15;\nconst MARGIN_SIDE = 15;\nconst WIGGLE_ROOM = 2;\nconst CONTENT_HEIGHT = A4_HEIGHT - MARGIN_BOTTOM - MARGIN_TOP - WIGGLE_ROOM;\nconst BORDER_BLUE = '#213875';\nconst BORDER_GREY = '#DEE2E6';\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"RESTAPI\":{\"server\":{\"endpoints\":{\"deleteFile.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/RESTAPI/server/endpoints/deleteFile.js                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 1);\nlet FileService;\nmodule.link(\"../../../files/server/FileService\", {\n  default(v) {\n    FileService = v;\n  }\n\n}, 2);\nlet Security;\nmodule.link(\"../../../security\", {\n  default(v) {\n    Security = v;\n  }\n\n}, 3);\nlet PropertyService;\nmodule.link(\"../../../properties/server/PropertyService\", {\n  default(v) {\n    PropertyService = v;\n  }\n\n}, 4);\nlet PROPERTIES_COLLECTION;\nmodule.link(\"../../../properties/propertyConstants\", {\n  PROPERTIES_COLLECTION(v) {\n    PROPERTIES_COLLECTION = v;\n  }\n\n}, 5);\nlet withMeteorUserId;\nmodule.link(\"../helpers\", {\n  withMeteorUserId(v) {\n    withMeteorUserId = v;\n  }\n\n}, 6);\nlet checkQuery, impersonateSchema, getImpersonateUserId;\nmodule.link(\"./helpers\", {\n  checkQuery(v) {\n    checkQuery = v;\n  },\n\n  impersonateSchema(v) {\n    impersonateSchema = v;\n  },\n\n  getImpersonateUserId(v) {\n    getImpersonateUserId = v;\n  }\n\n}, 7);\nlet HTTP_STATUS_CODES;\nmodule.link(\"../restApiConstants\", {\n  HTTP_STATUS_CODES(v) {\n    HTTP_STATUS_CODES = v;\n  }\n\n}, 8);\nconst bodySchema = new SimpleSchema({\n  propertyId: String,\n  key: String\n});\n\nconst deleteFileAPI = req => {\n  const {\n    user: {\n      _id: userId\n    },\n    query,\n    body\n  } = req;\n  const {\n    'impersonate-user': impersonateUser\n  } = checkQuery({\n    query,\n    schema: impersonateSchema\n  });\n  const cleanBody = bodySchema.clean(body);\n\n  try {\n    bodySchema.validate(cleanBody);\n  } catch (error) {\n    throw new Meteor.Error(error);\n  }\n\n  const {\n    key\n  } = cleanBody;\n  let {\n    propertyId\n  } = cleanBody;\n  const exists = PropertyService.exists(propertyId);\n\n  if (!exists) {\n    const propertyByExternalId = PropertyService.fetchOne({\n      $filters: {\n        externalId: propertyId\n      }\n    });\n\n    if (propertyByExternalId) {\n      propertyId = propertyByExternalId._id;\n    } else {\n      throw new Meteor.Error(HTTP_STATUS_CODES.NOT_FOUND, `No property found for id \"${propertyId}\"`);\n    }\n  }\n\n  return withMeteorUserId({\n    userId,\n    impersonateUser\n  }, () => {\n    let impersonateUserId;\n\n    if (impersonateUser) {\n      impersonateUserId = getImpersonateUserId({\n        userId,\n        impersonateUser\n      });\n    }\n\n    try {\n      Security.properties.isAllowedToManageDocuments({\n        userId: impersonateUserId || userId,\n        propertyId\n      });\n    } catch (error) {\n      throw new Meteor.Error(HTTP_STATUS_CODES.FORBIDDEN, error);\n    }\n\n    return FileService.deleteFileAPI({\n      docId: propertyId,\n      key,\n      collection: PROPERTIES_COLLECTION\n    }); // return deleteFileFromS3({\n    //   docId: propertyId,\n    //   key,\n    //   collection: PROPERTIES_COLLECTION,\n    // }).then(deleted => ({ deletedFiles: deleted }));\n  });\n};\n\nmodule.exportDefault(deleteFileAPI);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"getProperty.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/RESTAPI/server/endpoints/getProperty.js                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet omit;\nmodule.link(\"lodash/omit\", {\n  default(v) {\n    omit = v;\n  }\n\n}, 0);\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 1);\nlet PropertyService;\nmodule.link(\"../../../properties/server/PropertyService\", {\n  default(v) {\n    PropertyService = v;\n  }\n\n}, 2);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 3);\nlet getImpersonateUserId, checkQuery;\nmodule.link(\"./helpers\", {\n  getImpersonateUserId(v) {\n    getImpersonateUserId = v;\n  },\n\n  checkQuery(v) {\n    checkQuery = v;\n  }\n\n}, 4);\nlet proProperties;\nmodule.link(\"../../../properties/queries\", {\n  proProperties(v) {\n    proProperties = v;\n  }\n\n}, 5);\nlet HTTP_STATUS_CODES;\nmodule.link(\"../restApiConstants\", {\n  HTTP_STATUS_CODES(v) {\n    HTTP_STATUS_CODES = v;\n  }\n\n}, 6);\nconst querySchema = new SimpleSchema({\n  'impersonate-user': {\n    type: String,\n    optional: true\n  }\n});\n\nconst getPropertyAPI = ({\n  user: {\n    _id: userId\n  },\n  params,\n  query\n}) => {\n  let {\n    propertyId\n  } = params;\n  const {\n    'impersonate-user': impersonateUser\n  } = checkQuery({\n    query,\n    schema: querySchema\n  });\n  const exists = PropertyService.exists(propertyId);\n\n  if (!exists) {\n    const propertyByExternalId = PropertyService.fetchOne({\n      $filters: {\n        externalId: propertyId\n      }\n    });\n\n    if (propertyByExternalId) {\n      propertyId = propertyByExternalId._id;\n    } else {\n      throw new Meteor.Error(HTTP_STATUS_CODES.NOT_FOUND, `No property found for id \"${propertyId}\"`);\n    }\n  }\n\n  let proId;\n\n  if (impersonateUser) {\n    proId = getImpersonateUserId({\n      userId,\n      impersonateUser\n    });\n  }\n\n  const [property] = proProperties.clone({\n    _id: propertyId\n  }).fetch({\n    userId: proId || userId\n  });\n  const filteredProperty = omit(property, ['adminValidation', 'additionalDocuments', 'promotion', 'users', 'organisation']);\n  return {\n    property: filteredProperty\n  };\n};\n\nmodule.exportDefault(getPropertyAPI);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"getPropertyLoans.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/RESTAPI/server/endpoints/getPropertyLoans.js                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nlet pick;\nmodule.link(\"lodash/pick\", {\n  default(v) {\n    pick = v;\n  }\n\n}, 0);\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 1);\nlet PropertyService;\nmodule.link(\"../../../properties/server/PropertyService\", {\n  default(v) {\n    PropertyService = v;\n  }\n\n}, 2);\nlet proPropertyLoans;\nmodule.link(\"../../../loans/queries\", {\n  proPropertyLoans(v) {\n    proPropertyLoans = v;\n  }\n\n}, 3);\nlet getImpersonateUserId, checkQuery;\nmodule.link(\"./helpers\", {\n  getImpersonateUserId(v) {\n    getImpersonateUserId = v;\n  },\n\n  checkQuery(v) {\n    checkQuery = v;\n  }\n\n}, 4);\nconst querySchema = new SimpleSchema({\n  'impersonate-user': {\n    type: String,\n    optional: true\n  }\n});\n\nconst getPropertyLoansAPI = ({\n  user: {\n    _id: userId\n  },\n  params,\n  query\n}) => {\n  let {\n    propertyId\n  } = params;\n  const {\n    'impersonate-user': impersonateUser\n  } = checkQuery({\n    query,\n    schema: querySchema\n  });\n  const exists = PropertyService.exists(propertyId);\n\n  if (!exists) {\n    const propertyByExternalId = PropertyService.fetchOne({\n      $filters: {\n        externalId: propertyId\n      }\n    });\n\n    if (propertyByExternalId) {\n      propertyId = propertyByExternalId._id;\n    }\n  }\n\n  let proId;\n\n  if (impersonateUser) {\n    proId = getImpersonateUserId({\n      userId,\n      impersonateUser\n    });\n  }\n\n  const loans = proPropertyLoans.clone({\n    propertyId\n  }).fetch({\n    userId: proId || userId\n  });\n  const filteredLoans = loans.map(loan => pick(loan, ['user.name', 'user.phoneNumbers', 'user.email', 'user.referredByUser.name', 'user.referredByOrganisation.name', 'createdAt', 'name', 'loanProgress', 'status', 'properties']));\n  return filteredLoans.map((_ref) => {\n    let {\n      properties\n    } = _ref,\n        loan = (0, _objectWithoutProperties2.default)(_ref, [\"properties\"]);\n    const property = properties.find(({\n      _id\n    }) => _id === propertyId) || {};\n    const {\n      solvent\n    } = property;\n    return (0, _objectSpread2.default)({}, loan, {\n      solvent\n    });\n  });\n};\n\nmodule.exportDefault(getPropertyLoansAPI);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"getUser.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/RESTAPI/server/endpoints/getUser.js                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet pick;\nmodule.link(\"lodash/pick\", {\n  default(v) {\n    pick = v;\n  }\n\n}, 1);\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 2);\nlet getImpersonateUserId, checkQuery, checkAccessToUser;\nmodule.link(\"./helpers\", {\n  getImpersonateUserId(v) {\n    getImpersonateUserId = v;\n  },\n\n  checkQuery(v) {\n    checkQuery = v;\n  },\n\n  checkAccessToUser(v) {\n    checkAccessToUser = v;\n  }\n\n}, 3);\nlet UserService;\nmodule.link(\"../../../users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 4);\nconst querySchema = new SimpleSchema({\n  email: {\n    type: String,\n    optional: false\n  },\n  'impersonate-user': {\n    type: String,\n    optional: true\n  }\n});\n\nconst getUserAPI = ({\n  user: {\n    _id: userId\n  },\n  query\n}) => {\n  const {\n    email,\n    'impersonate-user': impersonateUser\n  } = checkQuery({\n    query,\n    schema: querySchema\n  });\n  let proId;\n\n  if (impersonateUser) {\n    proId = getImpersonateUserId({\n      userId,\n      impersonateUser\n    });\n  }\n\n  const user = UserService.getByEmail(email);\n\n  if (!user) {\n    throw new Meteor.Error(`User with email \"${email}\" not found, or you don't have access to it.`);\n  }\n\n  checkAccessToUser({\n    user,\n    proId: proId || userId\n  });\n  return pick(user, ['firstName', 'lastName', 'emails', 'phoneNumbers']);\n};\n\nmodule.exportDefault(getUserAPI);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"helpers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/RESTAPI/server/endpoints/helpers.js                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  getImpersonateUserId: () => getImpersonateUserId,\n  checkQuery: () => checkQuery,\n  checkAccessToUser: () => checkAccessToUser,\n  impersonateSchema: () => impersonateSchema\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 1);\nlet UserService;\nmodule.link(\"../../../users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 2);\n\nconst anyOrganisationMatches = ({\n  userOrganisations = [],\n  proOrganisations = []\n}) => userOrganisations.some(userOrganisation => proOrganisations.some(proOrganisation => userOrganisation._id === proOrganisation._id));\n\nconst getImpersonateUserId = ({\n  userId,\n  impersonateUser\n}) => {\n  const {\n    organisations: userOrganisations = []\n  } = UserService.fetchOne({\n    $filters: {\n      _id: userId\n    },\n    organisations: {\n      _id: 1\n    }\n  });\n  const user = UserService.getByEmail(impersonateUser);\n  let proId;\n  let proOrganisations;\n\n  if (user) {\n    proId = user._id;\n    proOrganisations = UserService.fetchOne({\n      $filters: {\n        _id: user._id\n      },\n      organisations: {\n        _id: 1\n      }\n    }).organisations || [];\n  }\n\n  if (!proId) {\n    throw new Meteor.Error(`No user found for email address \"${impersonateUser}\"`);\n  }\n\n  if (userOrganisations.length === 0 || proOrganisations.length === 0 || !anyOrganisationMatches({\n    userOrganisations,\n    proOrganisations\n  })) {\n    throw new Meteor.Error(`User with email address \"${impersonateUser}\" is not part of your organisation`);\n  }\n\n  return proId;\n};\n\nconst checkQuery = ({\n  query,\n  schema\n}) => {\n  const cleanQuery = schema.clean(query);\n\n  try {\n    schema.validate(cleanQuery);\n  } catch (error) {\n    throw new Meteor.Error(error);\n  }\n\n  return cleanQuery;\n};\n\nconst checkAccessToUser = ({\n  user,\n  proId\n}) => {\n  const {\n    organisations = []\n  } = UserService.fetchOne({\n    $filters: {\n      _id: proId\n    },\n    organisations: {\n      users: {\n        _id: 1\n      }\n    }\n  });\n\n  if (!organisations.some(({\n    _id\n  }) => _id === user.referredByOrganisationLink) && !organisations.some(({\n    users = []\n  }) => users.some(({\n    _id\n  }) => _id === user.referredByUserLink))) {\n    throw new Meteor.Error(`User with email \"${user.emails[0].address}\" not found, or you don't have access to it.`);\n  }\n};\n\nconst impersonateSchema = new SimpleSchema({\n  'impersonate-user': {\n    type: String,\n    optional: true\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/RESTAPI/server/endpoints/index.js                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./inviteUserToPromotion\", {\n  default: \"inviteUserToPromotionAPI\"\n}, 0);\nmodule.link(\"./testEndpoint\", {\n  default: \"testEndpointAPI\"\n}, 1);\nmodule.link(\"./inviteCustomerToProProperties\", {\n  default: \"inviteCustomerToProPropertiesAPI\"\n}, 2);\nmodule.link(\"./referCustomer\", {\n  default: \"referCustomerAPI\"\n}, 3);\nmodule.link(\"./getPropertyLoans\", {\n  default: \"getPropertyLoansAPI\"\n}, 4);\nmodule.link(\"./getUser\", {\n  default: \"getUserAPI\"\n}, 5);\nmodule.link(\"./interestRates\", {\n  default: \"interestRatesAPI\"\n}, 6);\nmodule.link(\"./mortgageEstimate\", {\n  default: \"mortgageEstimateAPI\"\n}, 7);\nmodule.link(\"./updateProperty\", {\n  default: \"updatePropertyAPI\"\n}, 8);\nmodule.link(\"./insertProperty\", {\n  default: \"insertPropertyAPI\"\n}, 9);\nmodule.link(\"./uploadFile\", {\n  default: \"uploadFileAPI\"\n}, 10);\nmodule.link(\"./deleteFile\", {\n  default: \"deleteFileAPI\"\n}, 11);\nmodule.link(\"./getProperty\", {\n  default: \"getPropertyAPI\"\n}, 12);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"insertProperty.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/RESTAPI/server/endpoints/insertProperty.js                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet apiProperty;\nmodule.link(\"../../../fragments\", {\n  apiProperty(v) {\n    apiProperty = v;\n  }\n\n}, 0);\nlet PropertyService;\nmodule.link(\"../../../properties/server/PropertyService\", {\n  default(v) {\n    PropertyService = v;\n  }\n\n}, 1);\nlet proPropertyInsert;\nmodule.link(\"../../../methods\", {\n  proPropertyInsert(v) {\n    proPropertyInsert = v;\n  }\n\n}, 2);\nlet withMeteorUserId;\nmodule.link(\"../helpers\", {\n  withMeteorUserId(v) {\n    withMeteorUserId = v;\n  }\n\n}, 3);\nlet checkQuery, impersonateSchema, getImpersonateUserId;\nmodule.link(\"./helpers\", {\n  checkQuery(v) {\n    checkQuery = v;\n  },\n\n  impersonateSchema(v) {\n    impersonateSchema = v;\n  },\n\n  getImpersonateUserId(v) {\n    getImpersonateUserId = v;\n  }\n\n}, 4);\nlet HTTP_STATUS_CODES;\nmodule.link(\"../restApiConstants\", {\n  HTTP_STATUS_CODES(v) {\n    HTTP_STATUS_CODES = v;\n  }\n\n}, 5);\nlet Security;\nmodule.link(\"../../../security\", {\n  default(v) {\n    Security = v;\n  }\n\n}, 6);\n\nconst insertPropertyAPI = ({\n  user: {\n    _id: userId\n  },\n  body: property,\n  query\n}) => {\n  const {\n    'impersonate-user': impersonateUser\n  } = checkQuery({\n    query,\n    schema: impersonateSchema\n  });\n  const {\n    externalId\n  } = property;\n\n  if (externalId) {\n    const propertyByExternalId = PropertyService.fetchOne((0, _objectSpread2.default)({\n      $filters: {\n        externalId\n      }\n    }, apiProperty()));\n\n    if (propertyByExternalId) {\n      const {\n        _id: propertyId\n      } = propertyByExternalId;\n      return withMeteorUserId({\n        userId,\n        impersonateUser\n      }, () => {\n        let impersonateUserId;\n        let displayProperty = true;\n\n        if (impersonateUser) {\n          impersonateUserId = getImpersonateUserId({\n            userId,\n            impersonateUser\n          });\n        }\n\n        try {\n          Security.properties.hasAccessToProperty({\n            propertyId,\n            userId: impersonateUserId || userId\n          });\n        } catch (error) {\n          displayProperty = false;\n        }\n\n        return (0, _objectSpread2.default)({\n          status: HTTP_STATUS_CODES.CONFLICT,\n          message: `A property with externalId \"${externalId}\" already exists !`\n        }, displayProperty ? {\n          property: propertyByExternalId\n        } : {});\n      });\n    }\n  }\n\n  return withMeteorUserId({\n    userId,\n    impersonateUser\n  }, () => {\n    let impersonateUserId;\n\n    if (impersonateUser) {\n      impersonateUserId = getImpersonateUserId({\n        userId,\n        impersonateUser\n      });\n    }\n\n    return proPropertyInsert.run({\n      userId: impersonateUserId || userId,\n      property\n    }).then(propertyId => {\n      const insertedProperty = PropertyService.fetchOne((0, _objectSpread2.default)({\n        $filters: {\n          _id: propertyId\n        }\n      }, apiProperty()));\n      return {\n        message: `Successfully inserted property with id \"${propertyId}\"`,\n        property: insertedProperty\n      };\n    });\n  });\n};\n\nmodule.exportDefault(insertPropertyAPI);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"interestRates.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/RESTAPI/server/endpoints/interestRates.js                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet currentInterestRates;\nmodule.link(\"../../../interestRates/queries\", {\n  currentInterestRates(v) {\n    currentInterestRates = v;\n  }\n\n}, 0);\n\nconst interestRatesAPI = ({\n  user,\n  body,\n  params,\n  query\n}) => currentInterestRates.clone().fetch();\n\nmodule.exportDefault(interestRatesAPI);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"inviteCustomerToProProperties.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/RESTAPI/server/endpoints/inviteCustomerToProProperties.js                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet PropertyService;\nmodule.link(\"../../../properties/server/PropertyService\", {\n  default(v) {\n    PropertyService = v;\n  }\n\n}, 1);\nlet proInviteUser;\nmodule.link(\"../../../methods\", {\n  proInviteUser(v) {\n    proInviteUser = v;\n  }\n\n}, 2);\nlet PropertySchema, userAllowedKeys;\nmodule.link(\"../../../properties/schemas/PropertySchema\", {\n  default(v) {\n    PropertySchema = v;\n  },\n\n  userAllowedKeys(v) {\n    userAllowedKeys = v;\n  }\n\n}, 3);\nlet withMeteorUserId, updateCustomerReferral;\nmodule.link(\"../helpers\", {\n  withMeteorUserId(v) {\n    withMeteorUserId = v;\n  },\n\n  updateCustomerReferral(v) {\n    updateCustomerReferral = v;\n  }\n\n}, 4);\nlet checkQuery, impersonateSchema;\nmodule.link(\"./helpers\", {\n  checkQuery(v) {\n    checkQuery = v;\n  },\n\n  impersonateSchema(v) {\n    impersonateSchema = v;\n  }\n\n}, 5);\n\nconst formatPropertyIds = propertyIds => {\n  const ids = propertyIds.map(id => `\"${id}\"`);\n  return [ids.slice(0, -1).join(', '), ids.slice(-1)[0]].join(ids.length < 2 ? '' : ' and ');\n};\n\nconst checkProperties = properties => {\n  const schema = PropertySchema.pick(...userAllowedKeys);\n  return properties.map(property => {\n    const {\n      _id,\n      externalId\n    } = property;\n\n    if (!_id && !externalId || _id && externalId) {\n      throw new Meteor.Error('Each property must have either a \"_id\" or \"externalId\" key');\n    }\n\n    if (_id) {\n      const exists = PropertyService.exists(_id);\n\n      if (!exists) {\n        throw new Meteor.Error(`Property with _id \"${_id}\" does not exist`);\n      }\n    } else {\n      return checkQuery({\n        schema,\n        query: property\n      });\n    }\n\n    return property;\n  });\n};\n\nconst getExternalProperties = properties => properties.filter(({\n  externalId\n}) => externalId);\n\nconst getInternalProperties = properties => properties.filter(({\n  _id\n}) => _id);\n\nconst inviteCustomerToProPropertiesAPI = ({\n  user: {\n    _id: userId\n  },\n  body,\n  query\n}) => {\n  let {\n    user,\n    properties = [],\n    shareSolvency\n  } = body;\n  const {\n    'impersonate-user': impersonateUser\n  } = checkQuery({\n    query,\n    schema: impersonateSchema\n  });\n  properties = checkProperties(properties);\n  const externalProperties = getExternalProperties(properties);\n  const internalProperties = getInternalProperties(properties);\n  const formattedIds = formatPropertyIds([...externalProperties.map(({\n    externalId\n  }) => externalId), ...internalProperties.map(({\n    _id\n  }) => _id)]);\n  const payload = {\n    propertyIds: internalProperties.map(({\n      _id\n    }) => _id),\n    properties: externalProperties,\n    user,\n    shareSolvency\n  };\n\n  if (!payload.propertyIds.length && !payload.properties.length) {\n    throw new Meteor.Error('You must provide at least one valid property');\n  }\n\n  return withMeteorUserId({\n    userId,\n    impersonateUser\n  }, () => proInviteUser.run(payload)).then(() => updateCustomerReferral({\n    customer: user,\n    userId,\n    impersonateUser\n  })).then(() => ({\n    message: `Successfully invited user \"${user.email}\" to property ids ${formattedIds}`\n  }));\n};\n\nmodule.exportDefault(inviteCustomerToProPropertiesAPI);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"inviteUserToPromotion.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/RESTAPI/server/endpoints/inviteUserToPromotion.js                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet proInviteUser;\nmodule.link(\"../../../methods\", {\n  proInviteUser(v) {\n    proInviteUser = v;\n  }\n\n}, 1);\nlet withMeteorUserId, literalToString, stringToLiteral, updateCustomerReferral;\nmodule.link(\"../helpers\", {\n  withMeteorUserId(v) {\n    withMeteorUserId = v;\n  },\n\n  literalToString(v) {\n    literalToString = v;\n  },\n\n  stringToLiteral(v) {\n    stringToLiteral = v;\n  },\n\n  updateCustomerReferral(v) {\n    updateCustomerReferral = v;\n  }\n\n}, 2);\nlet checkQuery, impersonateSchema;\nmodule.link(\"./helpers\", {\n  checkQuery(v) {\n    checkQuery = v;\n  },\n\n  impersonateSchema(v) {\n    impersonateSchema = v;\n  }\n\n}, 3);\n\nconst inviteUserToPromotionAPI = ({\n  user: {\n    _id: userId\n  },\n  body,\n  params,\n  query\n}) => {\n  const {\n    user,\n    shareSolvency\n  } = body;\n  const {\n    promotionId\n  } = params;\n  const {\n    'impersonate-user': impersonateUser\n  } = checkQuery({\n    query,\n    schema: impersonateSchema\n  });\n  const promotionIds = [promotionId].map(stringToLiteral).filter(x => x).map(literalToString);\n\n  if (!promotionIds.length) {\n    throw new Meteor.Error('No promotionId provided');\n  }\n\n  return withMeteorUserId({\n    userId,\n    impersonateUser\n  }, () => proInviteUser.run({\n    promotionIds,\n    user: (0, _objectSpread2.default)({}, user, {\n      invitedBy: userId\n    }),\n    shareSolvency\n  })).then(() => updateCustomerReferral({\n    customer: user,\n    userId,\n    impersonateUser\n  })).then(() => ({\n    message: `Successfully invited user \"${user.email}\" to promotion id \"${promotionId}\"`\n  }));\n};\n\nmodule.exportDefault(inviteUserToPromotionAPI);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"mortgageEstimate.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/RESTAPI/server/endpoints/mortgageEstimate.js                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 0);\nlet MAX_BORROW_RATIO_PRIMARY_PROPERTY;\nmodule.link(\"../../../../config/financeConstants\", {\n  MAX_BORROW_RATIO_PRIMARY_PROPERTY(v) {\n    MAX_BORROW_RATIO_PRIMARY_PROPERTY = v;\n  }\n\n}, 1);\nlet Calculator, CalculatorClass;\nmodule.link(\"../../../../utils/Calculator\", {\n  default(v) {\n    Calculator = v;\n  },\n\n  Calculator(v) {\n    CalculatorClass = v;\n  }\n\n}, 2);\nlet zipcodes;\nmodule.link(\"../../../../utils/zipcodes\", {\n  default(v) {\n    zipcodes = v;\n  }\n\n}, 3);\nlet address;\nmodule.link(\"../../../helpers/sharedSchemas\", {\n  address(v) {\n    address = v;\n  }\n\n}, 4);\nlet RESIDENCE_TYPE, INTEREST_RATES, PURCHASE_TYPE;\nmodule.link(\"../../../constants\", {\n  RESIDENCE_TYPE(v) {\n    RESIDENCE_TYPE = v;\n  },\n\n  INTEREST_RATES(v) {\n    INTEREST_RATES = v;\n  },\n\n  PURCHASE_TYPE(v) {\n    PURCHASE_TYPE = v;\n  }\n\n}, 5);\nlet currentInterestRates;\nmodule.link(\"../../../interestRates/queries\", {\n  currentInterestRates(v) {\n    currentInterestRates = v;\n  }\n\n}, 6);\nlet checkQuery;\nmodule.link(\"./helpers\", {\n  checkQuery(v) {\n    checkQuery = v;\n  }\n\n}, 7);\nconst LUXURY_VALUE_THRESHOLD = 2500000;\nconst SECOND_OR_LUXURY_AMORTIZATION_GOAL = 0.5;\nconst SECOND_OR_LUXURY_BORROW_RATIO = 0.67;\n\nconst roundToCents = val => Number(val.toFixed(2));\n\nconst getBorrowRatio = (residenceType, propertyValue) => {\n  if (residenceType === RESIDENCE_TYPE.SECOND_RESIDENCE) {\n    return SECOND_OR_LUXURY_BORROW_RATIO;\n  }\n\n  if (propertyValue >= LUXURY_VALUE_THRESHOLD) {\n    return SECOND_OR_LUXURY_BORROW_RATIO;\n  }\n\n  return MAX_BORROW_RATIO_PRIMARY_PROPERTY;\n};\n\nconst querySchema = new SimpleSchema((0, _objectSpread2.default)({\n  'property-value': {\n    type: Number,\n    min: 50000\n  },\n  'monthly-maintenance': {\n    type: Number,\n    optional: true,\n    defaultValue: 0,\n    min: 0\n  },\n  'residence-type': {\n    type: String,\n    optional: true,\n    defaultValue: RESIDENCE_TYPE.MAIN_RESIDENCE,\n    allowedValues: Object.values(RESIDENCE_TYPE)\n  },\n  'purchase-type': {\n    type: String,\n    optional: true,\n    defaultValue: PURCHASE_TYPE.ACQUISITION,\n    allowedValues: Object.values(PURCHASE_TYPE)\n  },\n  'include-notary-fees': {\n    type: Boolean,\n    optional: true,\n    defaultValue: true\n  }\n}, {\n  'zip-code': address.zipCode,\n  canton: address.canton\n}));\n\nconst mortgageEstimateAPI = ({\n  query\n}) => {\n  const {\n    'property-value': propertyValue,\n    'residence-type': residenceType,\n    'purchase-type': purchaseType,\n    'zip-code': zipCode,\n    'monthly-maintenance': maintenance,\n    'include-notary-fees': includeNotaryFees,\n    canton\n  } = checkQuery({\n    query,\n    schema: querySchema\n  });\n  const date = new Date().toISOString();\n  const rates = currentInterestRates.clone().fetch();\n  const interestRates = rates.rates.reduce((obj, {\n    type,\n    rateLow\n  }) => (0, _objectSpread2.default)({}, obj, {\n    [type]: rateLow\n  }), {});\n  const finalCanton = zipCode ? zipcodes(zipCode) : canton;\n  const borrowRatio = getBorrowRatio(residenceType, propertyValue);\n  const loanValue = roundToCents(propertyValue * borrowRatio);\n  const loanObject = Calculator.createLoanObject({\n    residenceType,\n    wantedLoan: loanValue,\n    propertyValue,\n    canton: finalCanton,\n    currentInterestRates: interestRates,\n    loanTranches: [{\n      value: 1,\n      type: INTEREST_RATES.YEARS_10\n    }]\n  });\n  const amortizationGoal = borrowRatio === SECOND_OR_LUXURY_BORROW_RATIO ? SECOND_OR_LUXURY_AMORTIZATION_GOAL : undefined;\n  const calc = new CalculatorClass({\n    loan: loanObject,\n    amortizationGoal\n  });\n\n  const getInterestsForType = type => calc.getInterests({\n    loan: Calculator.createLoanObject({\n      residenceType,\n      wantedLoan: loanValue,\n      propertyValue,\n      canton: finalCanton,\n      currentInterestRates: interestRates,\n      loanTranches: [{\n        value: 1,\n        type\n      }]\n    })\n  });\n\n  const interests10 = calc.getInterests({\n    loan: loanObject\n  });\n  const interests15 = getInterestsForType(INTEREST_RATES.YEARS_15);\n  const interests5 = getInterestsForType(INTEREST_RATES.YEARS_5);\n  const interestsLibor = getInterestsForType(INTEREST_RATES.LIBOR);\n  const amortization = roundToCents(calc.getAmortization({\n    loan: loanObject\n  }));\n  const notaryFees = includeNotaryFees ? calc.getFees({\n    loan: loanObject\n  }) : null;\n  const totalValue = roundToCents(propertyValue + (notaryFees ? notaryFees.total : 0));\n  return {\n    borrowRatio,\n    date,\n    loanValue,\n    monthlyAmortization: amortization,\n    monthlyInterests: {\n      interestsLibor,\n      interests5,\n      interests10,\n      interests15\n    },\n    monthlyMaintenance: maintenance,\n    monthlyTotals: {\n      interestsLibor: amortization + maintenance + interestsLibor,\n      interests5: amortization + maintenance + interests5,\n      interests10: amortization + maintenance + interests10,\n      interests15: amortization + maintenance + interests15\n    },\n    notaryFees: notaryFees ? {\n      canton: notaryFees.canton,\n      estimate: notaryFees.estimate,\n      total: notaryFees.total\n    } : undefined,\n    ownFunds: roundToCents(totalValue - loanValue),\n    purchaseType,\n    residenceType,\n    totalValue\n  };\n};\n\nmodule.exportDefault(mortgageEstimateAPI);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"referCustomer.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/RESTAPI/server/endpoints/referCustomer.js                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 0);\nlet proInviteUser;\nmodule.link(\"../../../methods\", {\n  proInviteUser(v) {\n    proInviteUser = v;\n  }\n\n}, 1);\nlet withMeteorUserId, updateCustomerReferral;\nmodule.link(\"../helpers\", {\n  withMeteorUserId(v) {\n    withMeteorUserId = v;\n  },\n\n  updateCustomerReferral(v) {\n    updateCustomerReferral = v;\n  }\n\n}, 2);\nlet checkQuery;\nmodule.link(\"./helpers\", {\n  checkQuery(v) {\n    checkQuery = v;\n  }\n\n}, 3);\nconst querySchema = new SimpleSchema({\n  'impersonate-user': {\n    type: String,\n    optional: true\n  }\n});\n\nconst referCustomerAPI = ({\n  user: {\n    _id: userId\n  },\n  body,\n  query\n}) => {\n  const {\n    user,\n    shareSolvency\n  } = body;\n  const {\n    'impersonate-user': impersonateUser\n  } = checkQuery({\n    query,\n    schema: querySchema\n  });\n  return withMeteorUserId({\n    userId,\n    impersonateUser\n  }, () => proInviteUser.run({\n    user: (0, _objectSpread2.default)({}, user, {\n      invitedBy: userId\n    }),\n    shareSolvency\n  })).then(() => updateCustomerReferral({\n    customer: user,\n    userId,\n    impersonateUser\n  })).then(() => ({\n    message: `Successfully referred user \"${user.email}\"`\n  }));\n};\n\nmodule.exportDefault(referCustomerAPI);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"testEndpoint.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/RESTAPI/server/endpoints/testEndpoint.js                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet pick;\nmodule.link(\"lodash/pick\", {\n  default(v) {\n    pick = v;\n  }\n\n}, 0);\n\nconst testEndpointAPI = ({\n  user,\n  body,\n  params,\n  query\n}) => ({\n  user: pick(user, ['emails', 'firstName', 'lastName', 'phoneNumbers']),\n  body,\n  query,\n  params\n});\n\nmodule.exportDefault(testEndpointAPI);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"updateProperty.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/RESTAPI/server/endpoints/updateProperty.js                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet apiProperty;\nmodule.link(\"../../../fragments\", {\n  apiProperty(v) {\n    apiProperty = v;\n  }\n\n}, 1);\nlet PropertyService;\nmodule.link(\"../../../properties/server/PropertyService\", {\n  default(v) {\n    PropertyService = v;\n  }\n\n}, 2);\nlet propertyUpdate;\nmodule.link(\"../../../methods\", {\n  propertyUpdate(v) {\n    propertyUpdate = v;\n  }\n\n}, 3);\nlet withMeteorUserId;\nmodule.link(\"../helpers\", {\n  withMeteorUserId(v) {\n    withMeteorUserId = v;\n  }\n\n}, 4);\nlet checkQuery, impersonateSchema;\nmodule.link(\"./helpers\", {\n  checkQuery(v) {\n    checkQuery = v;\n  },\n\n  impersonateSchema(v) {\n    impersonateSchema = v;\n  }\n\n}, 5);\nlet HTTP_STATUS_CODES;\nmodule.link(\"../restApiConstants\", {\n  HTTP_STATUS_CODES(v) {\n    HTTP_STATUS_CODES = v;\n  }\n\n}, 6);\n\nconst updatePropertyAPI = ({\n  user: {\n    _id: userId\n  },\n  params,\n  body: object,\n  query\n}) => {\n  let {\n    propertyId\n  } = params;\n  const {\n    'impersonate-user': impersonateUser\n  } = checkQuery({\n    query,\n    schema: impersonateSchema\n  });\n  const exists = PropertyService.exists(propertyId);\n\n  if (!exists) {\n    const propertyByExternalId = PropertyService.fetchOne({\n      $filters: {\n        externalId: propertyId\n      }\n    });\n\n    if (propertyByExternalId) {\n      propertyId = propertyByExternalId._id;\n    } else {\n      throw new Meteor.Error(`No property found for id \"${propertyId}\"`);\n    }\n  }\n\n  return withMeteorUserId({\n    userId,\n    impersonateUser\n  }, () => propertyUpdate.run({\n    propertyId,\n    object\n  }).then(() => {\n    const property = PropertyService.fetchOne((0, _objectSpread2.default)({\n      $filters: {\n        _id: propertyId\n      }\n    }, apiProperty()));\n    return Promise.resolve({\n      status: HTTP_STATUS_CODES.OK,\n      message: `Property with id \"${params.propertyId}\" updated !`,\n      property\n    });\n  }));\n};\n\nmodule.exportDefault(updatePropertyAPI);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"uploadFile.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/RESTAPI/server/endpoints/uploadFile.js                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 1);\nlet PROPERTY_DOCUMENTS;\nmodule.link(\"../../../files/fileConstants\", {\n  PROPERTY_DOCUMENTS(v) {\n    PROPERTY_DOCUMENTS = v;\n  }\n\n}, 2);\nlet FileService;\nmodule.link(\"../../../files/server/FileService\", {\n  default(v) {\n    FileService = v;\n  }\n\n}, 3);\nlet Security;\nmodule.link(\"../../../security\", {\n  default(v) {\n    Security = v;\n  }\n\n}, 4);\nlet PropertyService;\nmodule.link(\"../../../properties/server/PropertyService\", {\n  default(v) {\n    PropertyService = v;\n  }\n\n}, 5);\nlet PROPERTIES_COLLECTION;\nmodule.link(\"../../../properties/propertyConstants\", {\n  PROPERTIES_COLLECTION(v) {\n    PROPERTIES_COLLECTION = v;\n  }\n\n}, 6);\nlet withMeteorUserId;\nmodule.link(\"../helpers\", {\n  withMeteorUserId(v) {\n    withMeteorUserId = v;\n  }\n\n}, 7);\nlet checkQuery, impersonateSchema, getImpersonateUserId;\nmodule.link(\"./helpers\", {\n  checkQuery(v) {\n    checkQuery = v;\n  },\n\n  impersonateSchema(v) {\n    impersonateSchema = v;\n  },\n\n  getImpersonateUserId(v) {\n    getImpersonateUserId = v;\n  }\n\n}, 8);\nlet HTTP_STATUS_CODES;\nmodule.link(\"../restApiConstants\", {\n  HTTP_STATUS_CODES(v) {\n    HTTP_STATUS_CODES = v;\n  }\n\n}, 9);\nconst bodySchema = new SimpleSchema({\n  propertyId: String,\n  category: {\n    type: String,\n    allowedValues: [...Object.values(PROPERTY_DOCUMENTS)],\n\n    custom() {\n      if (this.field('propertyId')) {\n        return Object.values(PROPERTY_DOCUMENTS).includes(this.value) ? undefined : 'invalidCategory';\n      }\n    }\n\n  }\n});\n\nconst uploadFileAPI = req => {\n  const {\n    files: {\n      file\n    } = {},\n    user: {\n      _id: userId\n    },\n    query,\n    body\n  } = req;\n  const {\n    'impersonate-user': impersonateUser\n  } = checkQuery({\n    query,\n    schema: impersonateSchema\n  });\n  const cleanBody = bodySchema.clean(body);\n\n  try {\n    bodySchema.validate(cleanBody);\n  } catch (error) {\n    throw new Meteor.Error(error);\n  }\n\n  const {\n    category\n  } = cleanBody;\n  let {\n    propertyId\n  } = cleanBody;\n  const exists = PropertyService.exists(propertyId);\n\n  if (!exists) {\n    const propertyByExternalId = PropertyService.fetchOne({\n      $filters: {\n        externalId: propertyId\n      }\n    });\n\n    if (propertyByExternalId) {\n      propertyId = propertyByExternalId._id;\n    } else {\n      throw new Meteor.Error(HTTP_STATUS_CODES.NOT_FOUND, `No property found for id \"${propertyId}\"`);\n    }\n  }\n\n  if (!file) {\n    throw new Meteor.Error('No file uploaded');\n  }\n\n  return withMeteorUserId({\n    userId,\n    impersonateUser\n  }, () => {\n    let impersonateUserId;\n\n    if (impersonateUser) {\n      impersonateUserId = getImpersonateUserId({\n        userId,\n        impersonateUser\n      });\n    }\n\n    try {\n      Security.properties.isAllowedToManageDocuments({\n        userId: impersonateUserId || userId,\n        propertyId\n      });\n    } catch (error) {\n      throw new Meteor.Error(HTTP_STATUS_CODES.FORBIDDEN, error);\n    }\n\n    return FileService.uploadFileAPI({\n      file,\n      docId: propertyId,\n      id: category,\n      collection: PROPERTIES_COLLECTION\n    });\n  });\n};\n\nmodule.exportDefault(uploadFileAPI);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"RESTAPI.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/RESTAPI/server/RESTAPI.js                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  default: () => RESTAPI\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet WebApp;\nmodule.link(\"meteor/webapp\", {\n  WebApp(v) {\n    WebApp = v;\n  }\n\n}, 1);\nlet connectRoute;\nmodule.link(\"connect-route\", {\n  default(v) {\n    connectRoute = v;\n  }\n\n}, 2);\nlet Fiber;\nmodule.link(\"fibers\", {\n  default(v) {\n    Fiber = v;\n  }\n\n}, 3);\nlet compose;\nmodule.link(\"recompose\", {\n  compose(v) {\n    compose = v;\n  }\n\n}, 4);\nlet defaultMiddlewares;\nmodule.link(\"./middlewares\", {\n  \"*\"(v) {\n    defaultMiddlewares = v;\n  }\n\n}, 5);\nlet logRequest, trackRequest, setIsAPI, setAPIUser;\nmodule.link(\"./helpers\", {\n  logRequest(v) {\n    logRequest = v;\n  },\n\n  trackRequest(v) {\n    trackRequest = v;\n  },\n\n  setIsAPI(v) {\n    setIsAPI = v;\n  },\n\n  setAPIUser(v) {\n    setAPIUser = v;\n  }\n\n}, 6);\nlet HTTP_STATUS_CODES;\nmodule.link(\"./restApiConstants\", {\n  HTTP_STATUS_CODES(v) {\n    HTTP_STATUS_CODES = v;\n  }\n\n}, 7);\nlet setClientMicroservice, setClientUrl;\nmodule.link(\"../../../utils/server/getClientUrl\", {\n  setClientMicroservice(v) {\n    setClientMicroservice = v;\n  },\n\n  setClientUrl(v) {\n    setClientUrl = v;\n  }\n\n}, 8);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass RESTAPI {\n  constructor({\n    rootPath = '/api',\n    preMiddlewares = defaultMiddlewares.preMiddlewares,\n    postMiddlewares = defaultMiddlewares.postMiddlewares\n  } = {}) {\n    _defineProperty(this, \"makeEndpoint\", path => this.rootPath + path);\n\n    this.rootPath = rootPath;\n    this.preMiddlewares = preMiddlewares;\n    this.postMiddlewares = postMiddlewares;\n    this.endpoints = {};\n  }\n\n  reset() {\n    WebApp.connectHandlers.stack = [];\n  }\n\n  start() {\n    this.reset();\n    this.registerMiddlewares(this.preMiddlewares);\n    this.registerEndpoints();\n    this.registerMiddlewares(this.postMiddlewares);\n  }\n\n  registerMiddlewares(middlewares) {\n    middlewares.forEach(middleware => {\n      WebApp.connectHandlers.use(this.rootPath, middleware(this.getEndpointsOptions()));\n    });\n  }\n\n  registerEndpoints() {\n    const endpoints = Object.keys(this.endpoints);\n    endpoints.forEach(endpoint => {\n      const methods = Object.keys(this.endpoints[endpoint]);\n      methods.forEach(method => {\n        const finalEndpoint = this.makeEndpoint(endpoint);\n        const {\n          handler\n        } = this.endpoints[endpoint][method];\n        this.registerEndpoint(finalEndpoint, handler, method);\n      });\n    });\n  }\n\n  wrapHandler(handler) {\n    return (req, res, next) => {\n      Fiber(() => {\n        const {\n          headers = {}\n        } = req;\n        const {\n          host,\n          location\n        } = headers;\n        setClientMicroservice('api');\n        setClientUrl({\n          host,\n          href: location\n        });\n        setIsAPI();\n        setAPIUser(req.user);\n\n        try {\n          Promise.resolve().then(() => handler({\n            user: req.user,\n            body: req.body,\n            query: req.query,\n            params: req.params,\n            files: req.files\n          })).then(result => this.handleSuccess(result, req, res)).catch(next);\n        } catch (error) {\n          next(error);\n        }\n      }).run();\n    };\n  }\n\n  registerEndpoint(endpoint, handler, method) {\n    compose(WebApp.connectHandlers.use.bind(WebApp.connectHandlers), Meteor.bindEnvironment, connectRoute)(router => {\n      router[method.toLowerCase()](endpoint, this.wrapHandler(handler));\n    });\n  }\n\n  handleSuccess(result = '', req, res) {\n    const {\n      status\n    } = result;\n    const stringified = JSON.stringify(result); // LOGS\n\n    logRequest({\n      req,\n      result: stringified\n    });\n    trackRequest({\n      req,\n      result: stringified\n    });\n    res.writeHead(status || HTTP_STATUS_CODES.OK, {\n      'Content-Type': 'application/json'\n    });\n    res.write(stringified);\n    res.end();\n  }\n\n  addEndpoint(path, method, handler, options = {}) {\n    if (this.endpoints[path] && this.endpoints[path][method]) {\n      throw new Error(`Endpoint \"${path}\" for method \"${method}\" already exists in REST API`);\n    }\n\n    this.endpoints[path] = (0, _objectSpread2.default)({}, this.endpoints[path] || {}, {\n      [method]: {\n        handler,\n        options\n      }\n    });\n  }\n\n  getEndpointsOptions() {\n    return Object.keys(this.endpoints).reduce((options, path) => (0, _objectSpread2.default)({}, options, {\n      [this.makeEndpoint(path)]: Object.keys(this.endpoints[path]).reduce((methods, method) => (0, _objectSpread2.default)({}, methods, {\n        [method]: {\n          options: this.endpoints[path][method].options\n        }\n      }), {})\n    }), {});\n  }\n\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"helpers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/RESTAPI/server/helpers.js                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  AUTH_ITEMS: () => AUTH_ITEMS,\n  OBJECT_FORMATS: () => OBJECT_FORMATS,\n  getHeader: () => getHeader,\n  getPublicKey: () => getPublicKey,\n  getSignature: () => getSignature,\n  getRequestPath: () => getRequestPath,\n  getRequestMethod: () => getRequestMethod,\n  updateCustomerReferral: () => updateCustomerReferral,\n  withMeteorUserId: () => withMeteorUserId,\n  getErrorObject: () => getErrorObject,\n  stringToLiteral: () => stringToLiteral,\n  literalToString: () => literalToString,\n  formatObject: () => formatObject,\n  formatParams: () => formatParams,\n  logRequest: () => logRequest,\n  verifySignature: () => verifySignature,\n  trackRequest: () => trackRequest,\n  getMatchingPathOptions: () => getMatchingPathOptions,\n  setIsAPI: () => setIsAPI,\n  isAPI: () => isAPI,\n  setAPIUser: () => setAPIUser,\n  getAPIUser: () => getAPIUser\n});\nlet DDPCommon;\nmodule.link(\"meteor/ddp-common\", {\n  DDPCommon(v) {\n    DDPCommon = v;\n  }\n\n}, 0);\nlet DDP;\nmodule.link(\"meteor/ddp-client\", {\n  DDP(v) {\n    DDP = v;\n  }\n\n}, 1);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 2);\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 3);\nlet Random;\nmodule.link(\"meteor/random\", {\n  Random(v) {\n    Random = v;\n  }\n\n}, 4);\nlet NodeRSA;\nmodule.link(\"node-rsa\", {\n  default(v) {\n    NodeRSA = v;\n  }\n\n}, 5);\nlet get;\nmodule.link(\"lodash/get\", {\n  default(v) {\n    get = v;\n  }\n\n}, 6);\nlet set;\nmodule.link(\"lodash/set\", {\n  default(v) {\n    set = v;\n  }\n\n}, 7);\nlet Analytics;\nmodule.link(\"../../analytics/server/Analytics\", {\n  default(v) {\n    Analytics = v;\n  }\n\n}, 8);\nlet EVENTS;\nmodule.link(\"../../analytics/events\", {\n  default(v) {\n    EVENTS = v;\n  }\n\n}, 9);\nlet UserService;\nmodule.link(\"../../users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 10);\nlet getClientHost;\nmodule.link(\"../../../utils/server/getClientUrl\", {\n  getClientHost(v) {\n    getClientHost = v;\n  }\n\n}, 11);\nlet storeOnFiber, getFromFiber;\nmodule.link(\"../../../utils/server/fiberStorage\", {\n  storeOnFiber(v) {\n    storeOnFiber = v;\n  },\n\n  getFromFiber(v) {\n    getFromFiber = v;\n  }\n\n}, 12);\nlet sortObject;\nmodule.link(\"../../helpers\", {\n  sortObject(v) {\n    sortObject = v;\n  }\n\n}, 13);\nlet HTTP_STATUS_CODES;\nmodule.link(\"./restApiConstants\", {\n  HTTP_STATUS_CODES(v) {\n    HTTP_STATUS_CODES = v;\n  }\n\n}, 14);\nlet getImpersonateUserId;\nmodule.link(\"./endpoints/helpers\", {\n  getImpersonateUserId(v) {\n    getImpersonateUserId = v;\n  }\n\n}, 15);\nconst AUTH_ITEMS = {\n  RSA_PUBLIC_KEY: 'RSA_PUBLIC_KEY',\n  RSA_SIGNATURE: 'RSA_SIGNATURE'\n};\nconst OBJECT_FORMATS = {\n  DEFAULT: 'DEFAULT',\n  TO_LITERRAL: 'TO_LITERRAL',\n  TO_STRING: 'TO_STRING'\n};\n\nconst getHeader = (req, name) => req.headers[name];\n\nconst getAuthItem = ({\n  req,\n  item\n}) => {\n  const authorization = getHeader(req, 'x-epotek-authorization');\n\n  if (!authorization) {\n    return undefined;\n  }\n\n  if (!authorization.includes('EPOTEK')) {\n    return undefined;\n  }\n\n  switch (item) {\n    case AUTH_ITEMS.RSA_PUBLIC_KEY:\n      {\n        return authorization.replace('EPOTEK ', '').split(':')[0];\n      }\n\n    case AUTH_ITEMS.RSA_SIGNATURE:\n      {\n        return authorization.replace('EPOTEK ', '').split(':')[1];\n      }\n\n    default:\n      return undefined;\n  }\n};\n\nconst getPublicKey = req => getAuthItem({\n  req,\n  item: AUTH_ITEMS.RSA_PUBLIC_KEY\n});\n\nconst getSignature = req => getAuthItem({\n  req,\n  item: AUTH_ITEMS.RSA_SIGNATURE\n});\n\nconst getRequestPath = req => {\n  const {\n    _parsedUrl: parsedUrl\n  } = req;\n  return parsedUrl && parsedUrl.pathname;\n};\n\nconst getRequestMethod = req => req.method;\n\nconst updateCustomerReferral = ({\n  customer,\n  userId,\n  impersonateUser\n}) => {\n  if (impersonateUser) {\n    const customerId = UserService.getByEmail(customer.email)._id;\n\n    const mainOrg = UserService.getUserMainOrganisation(userId);\n    return UserService.setReferredByOrganisation({\n      userId: customerId,\n      organisationId: mainOrg && mainOrg._id\n    });\n  }\n\n  return Promise.resolve();\n};\n\nconst withMeteorUserId = ({\n  userId,\n  impersonateUser\n}, func) => {\n  let impersonateUserId;\n\n  if (impersonateUser) {\n    impersonateUserId = getImpersonateUserId({\n      userId,\n      impersonateUser\n    });\n  }\n\n  const invocation = new DDPCommon.MethodInvocation({\n    userId: impersonateUserId || userId // isSimulation: false,\n    // setUserId,\n    // unblock,\n    // connection: self.connectionHandle,\n    // randomSeed,\n\n  });\n  return DDP._CurrentInvocation.withValue(invocation, func);\n};\n\nconst getErrorObject = (error, res) => {\n  let {\n    statusCode: status\n  } = res;\n  let message;\n  let errorName;\n\n  if (!status || status === 200) {\n    status = HTTP_STATUS_CODES.SERVER_ERROR;\n  }\n\n  if (error instanceof Meteor.Error || error instanceof Match.Error) {\n    message = error.message;\n    status = error.error && typeof error.error === 'number' ? error.error : HTTP_STATUS_CODES.BAD_REQUEST;\n  } else {\n    message = 'Internal server error';\n  }\n\n  if (error && error.status && error.message && error.errorName) {\n    // This is one of our custom errors\n    errorName = error.errorName;\n    status = error.status;\n    message = error.message;\n  }\n\n  return {\n    status,\n    errorName,\n    message\n  };\n};\n\nconst stringToLiteral = value => {\n  const maps = {\n    true: true,\n    false: false,\n    undefined,\n    NaN,\n    Infinity,\n    '-Infinity': -Infinity,\n    null: null\n  };\n\n  if (value && !isNaN(value)) {\n    return parseInt(value);\n  }\n\n  return Object.keys(maps).includes(value) ? maps[value] : value;\n};\n\nconst literalToString = value => {\n  switch (value) {\n    case true:\n      return 'true';\n\n    case false:\n      return 'false';\n\n    case undefined:\n      return 'undefined';\n\n    case null:\n      return 'null';\n\n    case NaN:\n      return 'NaN';\n\n    case Infinity:\n      return 'Infinity';\n\n    case -Infinity:\n      return '-Infinity';\n\n    default:\n      return value.toString();\n  }\n};\n\n// Return array of every object's properties\nconst getObjectPropertiesPath = (obj, stack, res) => {\n  let arr = res;\n\n  for (const property in obj) {\n    if (obj.hasOwnProperty(property)) {\n      if (obj[property] && typeof obj[property] === 'object') {\n        if (Array.isArray(obj[property]) && obj[property].length === 0 || Object.keys(obj[property]).length === 0) {\n          const str = `${stack}.${property}`.substr(1);\n          arr = [...arr, str];\n        } else {\n          arr = getObjectPropertiesPath(obj[property], `${stack}.${property}`, arr);\n        }\n      } else {\n        const str = `${stack}.${property}`.substr(1);\n        arr = [...arr, str];\n      }\n    }\n  }\n\n  return arr;\n};\n\nconst formatObject = (obj, format) => {\n  if (format === OBJECT_FORMATS.DEFAULT) {\n    return obj;\n  }\n\n  const properties = getObjectPropertiesPath(obj, '', []);\n  const formattedObject = {};\n  properties.forEach(property => {\n    const value = get(obj, property);\n\n    switch (format) {\n      // String to literal\n      case OBJECT_FORMATS.TO_LITERRAL:\n        {\n          set(formattedObject, property, stringToLiteral(value));\n          break;\n        }\n      // Literal to string\n\n      case OBJECT_FORMATS.TO_STRING:\n        {\n          set(formattedObject, property, literalToString(value));\n          break;\n        }\n\n      default:\n        break;\n    }\n  });\n  return formattedObject;\n};\n\nconst formatParams = params => Object.keys(params).reduce((object, key) => (0, _objectSpread2.default)({}, object, {\n  [key]: stringToLiteral(params[key])\n}), {});\n\nconst logRequest = ({\n  req,\n  result\n}) => {\n  const {\n    user: {\n      _id,\n      emails\n    } = {},\n    body = {},\n    params = {},\n    query = {},\n    headers = {},\n    verifiedFormat\n  } = req;\n\n  if (Meteor.isTest) {\n    return;\n  }\n\n  console.log('----- API CALL -----');\n  console.log('USER:', JSON.stringify({\n    _id,\n    emails\n  }, null, 2));\n  console.log('URL:', getRequestPath(req));\n  console.log('HEADERS:', JSON.stringify(headers, null, 2));\n  console.log('BODY:', JSON.stringify(body, null, 2));\n  console.log('PARAMS:', JSON.stringify(params, null, 2));\n  console.log('QUERY:', JSON.stringify(query, null, 2));\n  console.log('VERIFIED FORMAT:', verifiedFormat);\n  console.log('RESULT:', result);\n  console.log('-----------------');\n};\n\nconst verifySignature = req => {\n  const {\n    publicKey,\n    signature,\n    body,\n    query,\n    isMultipart\n  } = req;\n  const timestamp = getHeader(req, 'x-epotek-timestamp');\n  const nonce = getHeader(req, 'x-epotek-nonce');\n  const method = getRequestMethod(req); // Import public key\n\n  const key = new NodeRSA();\n  key.importKey(publicKey, 'pkcs1-public-pem');\n  let objectToVerify = {\n    security: sortObject({\n      timestamp,\n      nonce\n    })\n  };\n\n  if (Object.keys(query).length > 0) {\n    objectToVerify = (0, _objectSpread2.default)({}, objectToVerify, {\n      queryParams: sortObject(query)\n    });\n  }\n\n  if (!['GET', 'HEAD'].includes(method) && Object.keys(body).length > 0) {\n    objectToVerify = (0, _objectSpread2.default)({}, objectToVerify, {\n      body: sortObject(body)\n    });\n  }\n\n  if (isMultipart) {\n    const {\n      files: {\n        file = {}\n      } = {}\n    } = req;\n    const {\n      originalFilename,\n      size,\n      type\n    } = file;\n    objectToVerify = (0, _objectSpread2.default)({}, objectToVerify, {\n      file: sortObject({\n        name: originalFilename,\n        size,\n        type\n      })\n    });\n  }\n\n  const verified = Object.keys(OBJECT_FORMATS).some(format => {\n    const isValid = key.verify(JSON.stringify(formatObject(objectToVerify, format)), signature, 'utf8', 'base64');\n\n    if (isValid) {\n      req.verifiedFormat = format;\n    }\n\n    return isValid;\n  });\n  return {\n    verified,\n    toVerify: {\n      object: objectToVerify,\n      acceptedStringifiedVersions: Object.keys(OBJECT_FORMATS).map(format => JSON.stringify(formatObject(objectToVerify, format)))\n    }\n  };\n};\n\nconst trackRequest = ({\n  req,\n  result\n}) => {\n  const {\n    user: {\n      _id: userId\n    } = {},\n    headers = {}\n  } = req;\n  const {\n    'x-forwarded-for': clientAddress,\n    'x-real-ip': realIp\n  } = headers;\n  const analytics = new Analytics({\n    userId,\n    connection: {\n      clientAddress,\n      httpHeaders: {\n        'x-real-ip': realIp,\n        host: getClientHost()\n      }\n    }\n  });\n\n  if (userId) {\n    analytics.identify(Random.id(16));\n  }\n\n  analytics.track(EVENTS.API_CALLED, {\n    endpoint: getRequestPath(req),\n    result\n  });\n};\n\nconst getMatchingPathOptions = (req, options) => {\n  const endpoints = Object.keys(options);\n  const path = getRequestPath(req);\n  const method = getRequestMethod(req);\n  const parts = decodeURI(path).split('?', 1)[0].replace(/^[\\s\\/]+|[\\s\\/]+$/g, '').split('/');\n  let matchingPathOptions = {};\n  endpoints.forEach(endpoint => {\n    const endpointParts = endpoint.split('/').filter(x => x).map(part => part.slice(0, 1) === ':' ? '*' : part);\n    const match = endpointParts.length === parts.length && endpointParts.every((part, i) => {\n      if (part === '*') {\n        return true;\n      }\n\n      return part === parts[i];\n    }) && !!options[endpoint][method];\n\n    if (match) {\n      matchingPathOptions = options[endpoint][method].options;\n    }\n  });\n  return matchingPathOptions;\n};\n\nconst setIsAPI = () => {\n  storeOnFiber('isAPI', true);\n};\n\nconst isAPI = () => !!getFromFiber('isAPI');\n\nconst setAPIUser = user => {\n  storeOnFiber('APIUser', user);\n};\n\nconst getAPIUser = () => getFromFiber('APIUser');\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"middlewares.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/RESTAPI/server/middlewares.js                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  preMiddlewares: () => preMiddlewares,\n  postMiddlewares: () => postMiddlewares\n});\nlet bodyParser;\nmodule.link(\"body-parser\", {\n  default(v) {\n    bodyParser = v;\n  }\n\n}, 0);\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 1);\nlet multipart;\nmodule.link(\"connect-multiparty\", {\n  default(v) {\n    multipart = v;\n  }\n\n}, 2);\nlet SlackService;\nmodule.link(\"../../slack/server/SlackService\", {\n  default(v) {\n    SlackService = v;\n  }\n\n}, 3);\nlet REST_API_ERRORS, BODY_SIZE_LIMIT, FILE_UPLOAD_DIR;\nmodule.link(\"./restApiConstants\", {\n  REST_API_ERRORS(v) {\n    REST_API_ERRORS = v;\n  },\n\n  BODY_SIZE_LIMIT(v) {\n    BODY_SIZE_LIMIT = v;\n  },\n\n  FILE_UPLOAD_DIR(v) {\n    FILE_UPLOAD_DIR = v;\n  }\n\n}, 4);\nlet UserService;\nmodule.link(\"../../users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 5);\nlet getRequestPath, getHeader, getRequestMethod, getErrorObject, getPublicKey, verifySignature, getSignature, logRequest, trackRequest, getMatchingPathOptions;\nmodule.link(\"./helpers\", {\n  getRequestPath(v) {\n    getRequestPath = v;\n  },\n\n  getHeader(v) {\n    getHeader = v;\n  },\n\n  getRequestMethod(v) {\n    getRequestMethod = v;\n  },\n\n  getErrorObject(v) {\n    getErrorObject = v;\n  },\n\n  getPublicKey(v) {\n    getPublicKey = v;\n  },\n\n  verifySignature(v) {\n    verifySignature = v;\n  },\n\n  getSignature(v) {\n    getSignature = v;\n  },\n\n  logRequest(v) {\n    logRequest = v;\n  },\n\n  trackRequest(v) {\n    trackRequest = v;\n  },\n\n  getMatchingPathOptions(v) {\n    getMatchingPathOptions = v;\n  }\n\n}, 6);\nlet nonceExists, addNonce, NONCE_TTL;\nmodule.link(\"./noncesHandler\", {\n  nonceExists(v) {\n    nonceExists = v;\n  },\n\n  addNonce(v) {\n    addNonce = v;\n  },\n\n  NONCE_TTL(v) {\n    NONCE_TTL = v;\n  }\n\n}, 7);\n\nconst bodyParserJsonMiddleware = () => bodyParser.json({\n  limit: BODY_SIZE_LIMIT\n});\n\nconst bodyParserUrlEncodedMiddleware = () => bodyParser.urlencoded({\n  extended: false,\n  limit: BODY_SIZE_LIMIT\n}); // Handles replay attacks\n\n\nconst replayHandlerMiddleware = options => (req, res, next) => {\n  if (req.isMultipart) {\n    return next();\n  }\n\n  const timestamp = getHeader(req, 'x-epotek-timestamp');\n  const nonce = getHeader(req, 'x-epotek-nonce');\n\n  if (!timestamp || !nonce) {\n    return next(REST_API_ERRORS.REPLAY_ATTACK_ATTEMPT);\n  }\n\n  const now = moment().unix(); // This is an old request\n\n  if (timestamp < now - NONCE_TTL) {\n    return next(REST_API_ERRORS.REPLAY_ATTACK_ATTEMPT);\n  }\n\n  if (nonceExists(nonce)) {\n    return next(REST_API_ERRORS.REPLAY_ATTACK_ATTEMPT);\n  }\n\n  addNonce(nonce);\n  next();\n}; // Filters out badly formatted requests, or ones missing basic headers\n\n\nconst filterMiddleware = options => (req, res, next) => {\n  const endpointOptions = getMatchingPathOptions(req, options);\n  const supportedContentType = endpointOptions.multipart ? 'multipart/form-data' : 'application/json';\n  const contentType = getHeader(req, 'content-type');\n  const isMultipart = contentType.includes('multipart/form-data');\n\n  if (!contentType || !contentType.includes(supportedContentType)) {\n    return next(REST_API_ERRORS.WRONG_CONTENT_TYPE(contentType.split(';')[0], supportedContentType));\n  }\n\n  if (isMultipart) {\n    req.isMultipart = true;\n  }\n\n  next();\n}; // Gets the public key from the request, fetches the user and adds it to the request\n\n\nconst authMiddleware = options => (req, res, next) => {\n  const publicKey = getPublicKey(req);\n  const signature = getSignature(req);\n\n  if (!publicKey || !signature) {\n    return next(REST_API_ERRORS.WRONG_AUTHORIZATION_TYPE);\n  }\n\n  const user = UserService.fetchOne({\n    $filters: {\n      'apiPublicKey.publicKey': publicKey\n    },\n    emails: 1,\n    firstName: 1,\n    lastName: 1,\n    phoneNumbers: 1\n  });\n\n  if (!user) {\n    return next(REST_API_ERRORS.AUTHORIZATION_FAILED('No user found with this public key, or maybe it has a typo ?'));\n  }\n\n  req.publicKey = publicKey;\n  req.signature = signature;\n  const verifiedSignature = verifySignature(req);\n\n  if (!verifiedSignature.verified) {\n    return next(REST_API_ERRORS.AUTHORIZATION_FAILED({\n      expectedObjectToSign: verifiedSignature.toVerify\n    }));\n  }\n\n  req.user = user;\n  next();\n}; // Handles all errors, should be added as the very last middleware\n\n\nconst errorMiddleware = options => (error, req, res, next) => {\n  const {\n    info\n  } = error;\n  const {\n    status,\n    errorName,\n    message\n  } = getErrorObject(error, res);\n  const {\n    user = {},\n    body = {},\n    params = {},\n    query = {},\n    headers = {}\n  } = req;\n  SlackService.sendError({\n    error,\n    additionalData: [Object.keys(body).length > 0 && {\n      body\n    }, Object.keys(params).length > 0 && {\n      params\n    }, Object.keys(query).length > 0 && {\n      query\n    }, Object.keys(headers).length > 0 && {\n      headers\n    }].filter(x => x),\n    userId: user._id,\n    url: getRequestPath(req)\n  });\n  logRequest({\n    req,\n    result: JSON.stringify({\n      status,\n      errorName,\n      message\n    })\n  });\n\n  if (Object.keys(user) > 0) {\n    trackRequest({\n      req,\n      result: JSON.stringify({\n        status,\n        errorName,\n        message\n      })\n    });\n  }\n\n  res.writeHead(status);\n  res.write(JSON.stringify({\n    status,\n    errorName,\n    message,\n    info\n  }));\n  res.end();\n}; // If no endpoint has sent a response, this should send back a 404\n\n\nconst unknownEndpointMiddleware = options => (req, res, next) => {\n  next(REST_API_ERRORS.UNKNOWN_ENDPOINT({\n    path: getRequestPath(req),\n    method: getRequestMethod(req)\n  }));\n};\n\nconst multipartMiddleware = options => (req, res, next) => {\n  const middleware = multipart({\n    uploadDir: FILE_UPLOAD_DIR\n  });\n  const {\n    isMultipart\n  } = req;\n  return isMultipart ? middleware(req, res, next) : next();\n};\n\nconst preMiddlewares = [filterMiddleware, multipartMiddleware, bodyParserJsonMiddleware, bodyParserUrlEncodedMiddleware, authMiddleware, replayHandlerMiddleware];\nconst postMiddlewares = [unknownEndpointMiddleware, errorMiddleware];\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"noncesHandler.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/RESTAPI/server/noncesHandler.js                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  NONCE_TTL: () => NONCE_TTL,\n  deleteNonce: () => deleteNonce,\n  nonceExists: () => nonceExists,\n  addNonce: () => addNonce\n});\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 0);\nconst NONCE_TTL = 30;\nlet nonces = {\n  testNonce: 1 // Used in tests\n\n};\n\nconst deleteNonce = nonce => {\n  nonces = Object.keys(nonces).reduce((newNonces, key) => {\n    if (key !== nonce) {\n      return (0, _objectSpread2.default)({}, newNonces, {\n        [key]: nonces[key]\n      });\n    }\n\n    return newNonces;\n  }, {});\n};\n\nconst nonceExists = nonce => {\n  const now = moment().unix(); // First delete all old nonces\n\n  Object.keys(nonces).forEach(key => {\n    if (now - nonces[key] > NONCE_TTL) {\n      deleteNonce(key);\n    }\n  });\n  return nonces[nonce] !== undefined;\n};\n\nconst addNonce = nonce => {\n  const now = moment().unix();\n  nonces[nonce] = now;\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"restApiConstants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/RESTAPI/server/restApiConstants.js                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  HTTP_STATUS_CODES: () => HTTP_STATUS_CODES,\n  BODY_SIZE_LIMIT: () => BODY_SIZE_LIMIT,\n  REST_API_ERRORS: () => REST_API_ERRORS,\n  OS_TMP_DIR: () => OS_TMP_DIR,\n  FILE_UPLOAD_DIR: () => FILE_UPLOAD_DIR\n});\nlet os;\nmodule.link(\"os\", {\n  default(v) {\n    os = v;\n  }\n\n}, 0);\nconst HTTP_STATUS_CODES = {\n  OK: 200,\n  BAD_REQUEST: 400,\n  FORBIDDEN: 403,\n  NOT_FOUND: 404,\n  CONFLICT: 409,\n  SERVER_ERROR: 500\n};\nconst BODY_SIZE_LIMIT = '50mb';\nconst REST_API_ERRORS = {\n  WRONG_CONTENT_TYPE: (contentType, supportedContentType) => ({\n    status: HTTP_STATUS_CODES.BAD_REQUEST,\n    message: `Request content type must be ${supportedContentType}. Provided: ${contentType}`,\n    errorName: 'WRONG_CONTENT_TYPE'\n  }),\n  WRONG_AUTHORIZATION_TYPE: {\n    status: HTTP_STATUS_CODES.BAD_REQUEST,\n    errorName: 'WRONG_AUTHORIZATION_TYPE',\n    message: \"Authorization must be of type 'EPOTEK PublicKey:Signature'\"\n  },\n  AUTHORIZATION_FAILED: info => ({\n    status: HTTP_STATUS_CODES.FORBIDDEN,\n    errorName: 'AUTHORIZATION_FAILED',\n    message: 'Wrong public key or signature.',\n    info\n  }),\n  UNKNOWN_ENDPOINT: ({\n    path,\n    method\n  }) => ({\n    status: HTTP_STATUS_CODES.NOT_FOUND,\n    errorName: 'UNKNOWN_ENDPOINT',\n    message: `The endpoint ${method} ${path} is not valid`\n  }),\n  REPLAY_ATTACK_ATTEMPT: {\n    status: HTTP_STATUS_CODES.FORBIDDEN,\n    errorName: 'REPLAY_ATTACK_ATTEMPT',\n    message: 'A replay attack has been detected. Please use a correct timestamp and a different nonce.'\n  }\n};\nconst OS_TMP_DIR = os.tmpdir();\nconst FILE_UPLOAD_DIR = `${OS_TMP_DIR}/files`;\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"email\":{\"server\":{\"components\":{\"PromotionLogos.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/email/server/components/PromotionLogos.jsx                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\n\n// This component expects to be put inside a tbody:\n\n/* <table\n    align=\"left\"\n    border=\"0\"\n    cellPadding=\"0\"\n    cellSpacing=\"0\"\n    style=\"max-width:100%; min-width:100%;\"\n    width=\"100%\"\n    className=\"mcnTextContentContainer\"\n  >\n    <tbody mc:edit=\"logos\" />\n  </table>; */\nconst PromotionLogos = ({\n  logoUrls\n}) => React.createElement(React.Fragment, null, logoUrls.map((url, index) => React.createElement(\"tr\", {\n  key: url\n}, React.createElement(\"td\", {\n  align: \"center\"\n}, React.createElement(\"img\", {\n  style: {\n    maxWidth: 150,\n    maxHeight: 50,\n    marginBottom: 16\n  },\n  src: url,\n  alt: `Logo promotion${index + 1}`\n})))));\n\nmodule.exportDefault(PromotionLogos);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"EmailService.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/email/server/EmailService.js                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nmodule.export({\n  isEmailTestEnv: () => isEmailTestEnv,\n  skipEmails: () => skipEmails\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet UserService;\nmodule.link(\"../../users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 1);\nlet emailConfigs;\nmodule.link(\"./emailConfigs\", {\n  default(v) {\n    emailConfigs = v;\n  }\n\n}, 2);\nlet getEmailContent, getEmailPart;\nmodule.link(\"./emailHelpers\", {\n  getEmailContent(v) {\n    getEmailContent = v;\n  },\n\n  getEmailPart(v) {\n    getEmailPart = v;\n  }\n\n}, 3);\nlet sendMandrillTemplate, getMandrillTemplate, getSimpleMandrillTemplate, renderMandrillTemplate;\nmodule.link(\"./mandrill\", {\n  sendMandrillTemplate(v) {\n    sendMandrillTemplate = v;\n  },\n\n  getMandrillTemplate(v) {\n    getMandrillTemplate = v;\n  },\n\n  getSimpleMandrillTemplate(v) {\n    getSimpleMandrillTemplate = v;\n  },\n\n  renderMandrillTemplate(v) {\n    renderMandrillTemplate = v;\n  }\n\n}, 4);\nlet FROM_NAME, FROM_EMAIL;\nmodule.link(\"../emailConstants\", {\n  FROM_NAME(v) {\n    FROM_NAME = v;\n  },\n\n  FROM_EMAIL(v) {\n    FROM_EMAIL = v;\n  }\n\n}, 5);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst isEmailTestEnv = Meteor.isTest || Meteor.isAppTest;\nconst skipEmails = (Meteor.isDevelopment || Meteor.isDevEnvironment) && !isEmailTestEnv;\n\n// export const skipEmails = false;\nclass EmailService {\n  constructor() {\n    _defineProperty(this, \"sendEmail\", ({\n      emailId,\n      address,\n      name,\n      params\n    }) => {\n      const templateOptions = this.createTemplateOptions({\n        emailId,\n        address,\n        name,\n        params\n      });\n      const template = getMandrillTemplate(templateOptions);\n      return sendMandrillTemplate(template).then(response => {\n        this.emailLogger({\n          emailId,\n          address,\n          template,\n          response\n        });\n      });\n    });\n\n    _defineProperty(this, \"sendEmailToUser\", ({\n      emailId,\n      userId,\n      params\n    }) => {\n      const {\n        email,\n        name\n      } = UserService.fetchOne({\n        $filters: {\n          _id: userId\n        },\n        email: 1,\n        name: 1\n      });\n      this.sendEmail({\n        emailId,\n        address: email,\n        name,\n        params\n      });\n    });\n\n    _defineProperty(this, \"getEmailConfig\", emailId => emailConfigs[emailId]);\n\n    _defineProperty(this, \"createTemplateOptions\", ({\n      emailId,\n      address,\n      name,\n      params\n    }) => {\n      const emailConfig = this.getEmailConfig(emailId);\n      const {\n        template: {\n          mandrillId: templateName\n        },\n        createIntlValues\n      } = emailConfig,\n            otherOptions = (0, _objectWithoutProperties2.default)(emailConfig, [\"template\", \"createIntlValues\"]);\n      const intlValues = createIntlValues(params);\n      const emailContent = getEmailContent(emailId, intlValues); // Make sure you call `createOverrides` from emailConfig, to preserve `this`\n      // See: https://github.com/Microsoft/vscode/issues/43930\n\n      const overrides = emailConfig.createOverrides(params, emailContent);\n      return (0, _objectSpread2.default)({\n        templateName,\n        recipientAddress: address,\n        recipientName: name,\n        senderAddress: FROM_EMAIL,\n        senderName: FROM_NAME,\n        subject: emailContent.subject,\n        sendAt: undefined\n      }, overrides, otherOptions);\n    });\n\n    _defineProperty(this, \"getAccountsTemplate\", (emailId, params = {}) => {\n      const templateOptions = this.createTemplateOptions({\n        emailId,\n        params\n      });\n      return getSimpleMandrillTemplate(templateOptions);\n    });\n\n    _defineProperty(this, \"getEmailPart\", (emailId, part) => getEmailPart({\n      emailId,\n      part\n    }));\n\n    _defineProperty(this, \"renderTemplate\", (templateOptions, emailId) => {\n      let result;\n      this.emailLogger({\n        emailId,\n        template: templateOptions\n      });\n\n      try {\n        result = renderMandrillTemplate(templateOptions);\n      } catch (error) {\n        throw new Meteor.Error('MANDRILL_ERROR', `Error while rendering mandrill template for ${emailId}: ${error.reason || error.message || error}`);\n      }\n\n      return result;\n    });\n\n    _defineProperty(this, \"emailLogger\", ({\n      emailId,\n      address,\n      template,\n      response\n    }) => {\n      if (isEmailTestEnv) {\n        // Store all sent emails in the DB, to be asserted in tests\n        return Meteor.call('storeTestEmail', {\n          date: Date.now(),\n          emailId,\n          address,\n          template,\n          response\n        });\n      }\n\n      if (skipEmails) {\n        if (address) {\n          console.log(`EmailService dev: Would've sent ${emailId} to ${address} with this template:`);\n        } else {\n          console.log(`EmailService dev: Would've sent ${emailId} with this template:`);\n        }\n\n        console.log(JSON.stringify(template, null, 2));\n      }\n    });\n  }\n\n}\n\nmodule.exportDefault(new EmailService());\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"accountsEmails.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/email/server/accountsEmails.js                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  createAccountsEmailConfig: () => createAccountsEmailConfig\n});\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 0);\nlet FROM_DEFAULT, EMAIL_IDS, EMAIL_PARTS;\nmodule.link(\"../emailConstants\", {\n  FROM_DEFAULT(v) {\n    FROM_DEFAULT = v;\n  },\n\n  EMAIL_IDS(v) {\n    EMAIL_IDS = v;\n  },\n\n  EMAIL_PARTS(v) {\n    EMAIL_PARTS = v;\n  }\n\n}, 1);\nlet EmailService;\nmodule.link(\"./EmailService\", {\n  default(v) {\n    EmailService = v;\n  }\n\n}, 2);\n// Meteor default emails\n// https://themeteorchef.com/tutorials/sign-up-with-email-verification\nAccounts.emailTemplates.siteName = 'e-Potek';\nAccounts.emailTemplates.from = FROM_DEFAULT;\n\nconst createAccountsEmailConfig = emailId => ({\n  subject: () => EmailService.getEmailPart(emailId, EMAIL_PARTS.SUBJECT),\n\n  html(user, url) {\n    // TODO: Make sure this doesn't block\n    const template = EmailService.getAccountsTemplate(emailId, {\n      user,\n      url\n    });\n    const result = EmailService.renderTemplate(template, emailId);\n    return result.data.html;\n  }\n\n});\n\nAccounts.emailTemplates.verifyEmail = createAccountsEmailConfig(EMAIL_IDS.VERIFY_EMAIL);\nAccounts.emailTemplates.resetPassword = createAccountsEmailConfig(EMAIL_IDS.RESET_PASSWORD);\nAccounts.emailTemplates.enrollAccount = createAccountsEmailConfig(EMAIL_IDS.ENROLL_ACCOUNT);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"emailConfigs.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/email/server/emailConfigs.js                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet ReactDOMServer;\nmodule.link(\"react-dom/server\", {\n  default(v) {\n    ReactDOMServer = v;\n  }\n\n}, 0);\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 1);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 2);\nlet Intl;\nmodule.link(\"../../../utils/server/intl\", {\n  default(v) {\n    Intl = v;\n  }\n\n}, 3);\nlet EMAIL_TEMPLATES, EMAIL_IDS, CTA_URL_DEFAULT, FOOTER_TYPES, EPOTEK_PHONE;\nmodule.link(\"../emailConstants\", {\n  EMAIL_TEMPLATES(v) {\n    EMAIL_TEMPLATES = v;\n  },\n\n  EMAIL_IDS(v) {\n    EMAIL_IDS = v;\n  },\n\n  CTA_URL_DEFAULT(v) {\n    CTA_URL_DEFAULT = v;\n  },\n\n  FOOTER_TYPES(v) {\n    FOOTER_TYPES = v;\n  },\n\n  EPOTEK_PHONE(v) {\n    EPOTEK_PHONE = v;\n  }\n\n}, 4);\nlet getAccountsUrl, notificationTemplateDefaultOverride, notificationAndCtaTemplateDefaultOverride;\nmodule.link(\"./emailHelpers\", {\n  getAccountsUrl(v) {\n    getAccountsUrl = v;\n  },\n\n  notificationTemplateDefaultOverride(v) {\n    notificationTemplateDefaultOverride = v;\n  },\n\n  notificationAndCtaTemplateDefaultOverride(v) {\n    notificationAndCtaTemplateDefaultOverride = v;\n  }\n\n}, 5);\nlet PromotionLogos;\nmodule.link(\"./components/PromotionLogos\", {\n  default(v) {\n    PromotionLogos = v;\n  }\n\n}, 6);\nlet LoanChecklistEmail;\nmodule.link(\"../../../components/LoanChecklist/LoanChecklistEmail/LoanChecklistEmail\", {\n  default(v) {\n    LoanChecklistEmail = v;\n  }\n\n}, 7);\nlet styles;\nmodule.link(\"../../../components/LoanChecklist/LoanChecklistEmail/styles\", {\n  default(v) {\n    styles = v;\n  }\n\n}, 8);\nconst emailConfigs = {};\nconst emailDefaults = {\n  allowUnsubscribe: false,\n  footerType: FOOTER_TYPES.USER,\n  createIntlValues: params => (0, _objectSpread2.default)({\n    variables: []\n  }, params)\n};\n/**\n * addEmailConfig - A function that creates a config for a given emailId\n *\n * @param {String} emailId A unique id representing the email, from EMAIL_IDS\n * @param {Object} config A config object that can have the following keys:\n * {Object} template A template object from EMAIL_TEMPLATES\n * {Boolean} allowUnsubscribe Defines whether the email will be rendered with\n * a footer that allows the user to unsubscribe to notifications.\n * default is `false`\n * {Function} createOverrides A function that gets the params and\n * returns an object with overrides for the email template\n * {Function} createIntlValues A function that gets the params and\n * returns an object with intl values that need to be injected inside of the\n * i18n strings\n */\n\nconst addEmailConfig = (emailId, config) => {\n  if (config.template === EMAIL_TEMPLATES.NOTIFICATION) {\n    emailConfigs[emailId] = (0, _objectSpread2.default)({\n      createOverrides: notificationTemplateDefaultOverride\n    }, emailDefaults, config);\n  } else if (config.template === EMAIL_TEMPLATES.NOTIFICATION_AND_CTA) {\n    emailConfigs[emailId] = (0, _objectSpread2.default)({\n      createOverrides: notificationAndCtaTemplateDefaultOverride\n    }, emailDefaults, config);\n  } else {\n    emailConfigs[emailId] = (0, _objectSpread2.default)({}, emailDefaults, config);\n  }\n};\n\naddEmailConfig(EMAIL_IDS.VERIFY_EMAIL, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n\n  createOverrides({\n    user,\n    url\n  }, {\n    title,\n    body,\n    cta\n  }) {\n    const {\n      variables\n    } = this.template;\n    const verifyUrl = getAccountsUrl('verify-email')(user, url);\n    return {\n      variables: [{\n        name: variables.TITLE,\n        content: title\n      }, {\n        name: variables.BODY,\n        content: body\n      }, {\n        name: variables.CTA,\n        content: cta\n      }, {\n        name: variables.CTA_URL,\n        content: verifyUrl\n      }]\n    };\n  }\n\n});\naddEmailConfig(EMAIL_IDS.RESET_PASSWORD, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n\n  createOverrides({\n    user,\n    url\n  }, {\n    title,\n    body,\n    cta\n  }) {\n    const {\n      variables\n    } = this.template;\n    const resetPasswordUrl = getAccountsUrl('reset-password')(user, url);\n    return {\n      variables: [{\n        name: variables.TITLE,\n        content: title\n      }, {\n        name: variables.BODY,\n        content: body\n      }, {\n        name: variables.CTA,\n        content: cta\n      }, {\n        name: variables.CTA_URL,\n        content: resetPasswordUrl || CTA_URL_DEFAULT\n      }]\n    };\n  }\n\n});\naddEmailConfig(EMAIL_IDS.ENROLL_ACCOUNT, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n\n  createOverrides({\n    user,\n    url\n  }, {\n    title,\n    body,\n    cta\n  }) {\n    const {\n      variables\n    } = this.template;\n    const enrollUrl = getAccountsUrl('enroll-account')(user, url);\n    return {\n      variables: [{\n        name: variables.TITLE,\n        content: title\n      }, {\n        name: variables.BODY,\n        content: body\n      }, {\n        name: variables.CTA,\n        content: cta\n      }, {\n        name: variables.CTA_URL,\n        content: enrollUrl || CTA_URL_DEFAULT\n      }]\n    };\n  }\n\n});\naddEmailConfig(EMAIL_IDS.VERIFICATION_REQUESTED, {\n  template: EMAIL_TEMPLATES.NOTIFICATION\n});\naddEmailConfig(EMAIL_IDS.VERIFICATION_ERROR, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA\n});\naddEmailConfig(EMAIL_IDS.VERIFICATION_PASSED, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA\n});\n\nconst getFirstName = string => string.trim().split(' ')[0];\n\naddEmailConfig(EMAIL_IDS.CONTACT_US, {\n  template: EMAIL_TEMPLATES.NOTIFICATION,\n  footerType: FOOTER_TYPES.VISITOR,\n  createIntlValues: params => (0, _objectSpread2.default)({}, params, {\n    // Only show first names to clients\n    name: getFirstName(params.name),\n    // params.details check is required because details is optional\n    //  and it breaks react-intl if not provided\n    details: params.details || ''\n  })\n});\naddEmailConfig(EMAIL_IDS.CONTACT_US_ADMIN, {\n  template: EMAIL_TEMPLATES.NOTIFICATION,\n  footerType: FOOTER_TYPES.VISITOR,\n  createIntlValues: params => (0, _objectSpread2.default)({}, params, {\n    details: params.details || 'Pas de message'\n  })\n});\naddEmailConfig(EMAIL_IDS.INVITE_USER_TO_PROMOTION, {\n  template: EMAIL_TEMPLATES.PROMOTION_INVITATION,\n\n  createOverrides({\n    coverImageUrl,\n    logoUrls = [],\n    ctaUrl\n  }, {\n    title,\n    body,\n    cta\n  }) {\n    const {\n      variables\n    } = this.template;\n    return {\n      variables: [{\n        name: variables.TITLE,\n        content: title\n      }, {\n        name: variables.BODY,\n        content: body\n      }, {\n        name: variables.CTA,\n        content: cta\n      }, {\n        name: variables.CTA_URL,\n        content: ctaUrl || CTA_URL_DEFAULT\n      }, {\n        name: variables.COVER_IMAGE_URL,\n        content: coverImageUrl\n      }],\n      senderName: 'e-Potek',\n      templateContent: [{\n        name: 'logos',\n        content: ReactDOMServer.renderToStaticMarkup(PromotionLogos({\n          logoUrls\n        }))\n      }]\n    };\n  },\n\n  createIntlValues: params => (0, _objectSpread2.default)({}, params, {\n    promotionName: params.promotion.name,\n    phoneNumber: params.promotion.contacts.length && params.promotion.contacts[0].phoneNumber,\n    name: params.promotion.contacts.length && params.promotion.contacts[0].name,\n    epotekNumber: EPOTEK_PHONE,\n    assignedEmployeeName: params.promotion.assignedEmployee && params.promotion.assignedEmployee.name || 'Yannis Eggert',\n    assignedEmployeeFirstName: params.promotion.assignedEmployee && params.promotion.assignedEmployee.firstName || 'Yannis',\n    assignedEmployeePhone: params.promotion.assignedEmployee && params.promotion.assignedEmployee.phoneNumbers[0] || EPOTEK_PHONE,\n    invitedBy: params.invitedBy || 'e-Potek'\n  })\n});\naddEmailConfig(EMAIL_IDS.SEND_FEEDBACK_TO_LENDER, {\n  template: EMAIL_TEMPLATES.SIMPLE,\n\n  createOverrides({\n    assigneeName = 'e-Potek',\n    assigneeAddress = 'financements@e-potek.ch',\n    feedback\n  }, {\n    title\n  }) {\n    const {\n      variables\n    } = this.template;\n    return {\n      variables: [{\n        name: variables.TITLE,\n        content: title\n      }, {\n        name: variables.BODY,\n        content: feedback\n      }],\n      senderName: assigneeName,\n      senderAddress: assigneeAddress,\n      bccAddress: assigneeAddress\n    };\n  }\n\n}); // Required params:\n// proName\n// address\n// ctaUrl\n\naddEmailConfig(EMAIL_IDS.INVITE_USER_TO_PROPERTY, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n\n  createOverrides({\n    ctaUrl\n  }, {\n    title,\n    body,\n    cta\n  }) {\n    const {\n      variables\n    } = this.template;\n    return {\n      variables: [{\n        name: variables.TITLE,\n        content: title\n      }, {\n        name: variables.BODY,\n        content: body\n      }, {\n        name: variables.CTA,\n        content: cta\n      }, {\n        name: variables.CTA_URL,\n        content: ctaUrl\n      }]\n    };\n  }\n\n}); // Required params\n// proName\n\naddEmailConfig(EMAIL_IDS.REFER_USER, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n\n  createOverrides(_ref2, _ref) {\n    let {\n      ctaUrl\n    } = _ref2,\n        rest = (0, _objectWithoutProperties2.default)(_ref2, [\"ctaUrl\"]);\n    let {\n      title,\n      body,\n      cta\n    } = _ref,\n        rest2 = (0, _objectWithoutProperties2.default)(_ref, [\"title\", \"body\", \"cta\"]);\n    const {\n      variables\n    } = this.template;\n    return {\n      variables: [{\n        name: variables.TITLE,\n        content: title\n      }, {\n        name: variables.BODY,\n        content: body\n      }, {\n        name: variables.CTA,\n        content: cta\n      }, {\n        name: variables.CTA_URL,\n        content: ctaUrl\n      }]\n    };\n  }\n\n});\naddEmailConfig(EMAIL_IDS.FIND_LENDER_NOTIFICATION, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n\n  createOverrides({\n    loanId\n  }, {\n    title,\n    body,\n    cta\n  }) {\n    const {\n      variables\n    } = this.template;\n    return {\n      variables: [{\n        name: variables.TITLE,\n        content: title\n      }, {\n        name: variables.BODY,\n        content: body\n      }, {\n        name: variables.CTA,\n        content: cta\n      }, {\n        name: variables.CTA_URL,\n        content: `${CTA_URL_DEFAULT}/loans/${loanId}/financing`\n      }]\n    };\n  }\n\n});\naddEmailConfig(EMAIL_IDS.CONFIRM_USER_INVITATION, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA\n});\naddEmailConfig(EMAIL_IDS.LOAN_CHECKLIST, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA_V2,\n\n  createOverrides(_ref4, _ref3) {\n    let {\n      loan,\n      customMessage = '',\n      assigneeName = 'e-Potek',\n      assigneeAddress = 'info@e-potek.ch'\n    } = _ref4,\n        rest = (0, _objectWithoutProperties2.default)(_ref4, [\"loan\", \"customMessage\", \"assigneeName\", \"assigneeAddress\"]);\n    let {\n      title,\n      cta\n    } = _ref3,\n        rest2 = (0, _objectWithoutProperties2.default)(_ref3, [\"title\", \"cta\"]);\n    const {\n      variables\n    } = this.template;\n    const ctaUrl = `${Meteor.settings.public.subdomains.app}/loans/${loan._id}`;\n    return {\n      variables: [{\n        name: variables.TITLE,\n        content: title\n      }, {\n        name: variables.BODY,\n        content: customMessage\n      }, {\n        name: variables.CTA,\n        content: cta\n      }, {\n        name: variables.CTA_URL,\n        content: ctaUrl\n      }, {\n        name: variables.CSS,\n        content: styles\n      }],\n      templateContent: [{\n        name: 'body-content-1',\n        content: ReactDOMServer.renderToStaticMarkup(LoanChecklistEmail({\n          loan,\n          intl: {\n            formatMessage: Intl.formatMessage.bind(Intl)\n          }\n        }))\n      }],\n      senderName: assigneeName,\n      senderAddress: assigneeAddress,\n      bccAddress: assigneeAddress\n    };\n  },\n\n  createIntlValues: params => (0, _objectSpread2.default)({}, params, {\n    today: moment().format('DD MMM YYYY')\n  })\n});\nmodule.exportDefault(emailConfigs);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"emailHelpers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/email/server/emailHelpers.js                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  getEmailFooter: () => getEmailFooter,\n  getEmailPart: () => getEmailPart,\n  getEmailContent: () => getEmailContent,\n  getAccountsUrl: () => getAccountsUrl,\n  notificationTemplateDefaultOverride: () => notificationTemplateDefaultOverride,\n  notificationAndCtaTemplateDefaultOverride: () => notificationAndCtaTemplateDefaultOverride\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Roles;\nmodule.link(\"meteor/alanning:roles\", {\n  Roles(v) {\n    Roles = v;\n  }\n\n}, 1);\nlet Intl;\nmodule.link(\"../../../utils/server/intl\", {\n  default(v) {\n    Intl = v;\n  }\n\n}, 2);\nlet FROM_DEFAULT, CTA_URL_DEFAULT, EMAIL_I18N_NAMESPACE, EMAIL_PARTS;\nmodule.link(\"../emailConstants\", {\n  FROM_DEFAULT(v) {\n    FROM_DEFAULT = v;\n  },\n\n  CTA_URL_DEFAULT(v) {\n    CTA_URL_DEFAULT = v;\n  },\n\n  EMAIL_I18N_NAMESPACE(v) {\n    EMAIL_I18N_NAMESPACE = v;\n  },\n\n  EMAIL_PARTS(v) {\n    EMAIL_PARTS = v;\n  }\n\n}, 3);\nlet ROLES;\nmodule.link(\"../../constants\", {\n  ROLES(v) {\n    ROLES = v;\n  }\n\n}, 4);\nconst WWW_URL = Meteor.settings.public.subdomains.www;\nconst APP_URL = Meteor.settings.public.subdomains.app;\nconst ADMIN_URL = Meteor.settings.public.subdomains.admin;\nconst PRO_URL = Meteor.settings.public.subdomains.pro;\n/**\n * emailFooter - Returns the default email footer for all emails\n *\n * @param {boolean} [unsubscribe=true] Whether to show an unsubscribe line or not\n *\n * @return {type} a HTML string\n */\n\nconst getEmailFooter = (footerType, allowUnsubscribe) => Intl.formatMessage({\n  id: `emails.${footerType}`,\n  values: {\n    url: `<a href=\"${WWW_URL}\" target=\"_blank\" style=\"color:inherit;\">e-potek.ch</a><br />`,\n    unsubscribe: allowUnsubscribe ? `<a href=\"*|UNSUB|*\" style=\"color:inherit;\">${Intl.formatMessage({\n      id: 'emails.unsubscribe'\n    })}</a>` : ''\n  }\n});\n\nconst getEmailPart = ({\n  emailId,\n  part,\n  intlValues = {},\n  intlFallback = ''\n}) => Intl.formatMessage({\n  id: `${EMAIL_I18N_NAMESPACE}.${emailId}.${part}`,\n  values: intlValues,\n  fallback: intlFallback\n});\n\nconst getEmailContent = (emailId, intlValues) => {\n  const subject = getEmailPart({\n    emailId,\n    part: EMAIL_PARTS.SUBJECT,\n    intlValues\n  });\n  const title = getEmailPart({\n    emailId,\n    part: EMAIL_PARTS.TITLE,\n    intlValues\n  });\n  const body = getEmailPart({\n    emailId,\n    part: EMAIL_PARTS.BODY,\n    intlValues: (0, _objectSpread2.default)({\n      verticalSpace: '<span><br/><br/></span>'\n    }, intlValues)\n  });\n  const cta = getEmailPart({\n    emailId,\n    part: EMAIL_PARTS.CTA,\n    intlValues,\n    intlFallback: CTA_URL_DEFAULT\n  });\n  const customFrom = getEmailPart({\n    emailId,\n    part: EMAIL_PARTS.FROM,\n    intlValues,\n    intlFallback: FROM_DEFAULT\n  });\n  return {\n    subject,\n    title,\n    body,\n    cta,\n    from: customFrom\n  };\n};\n\nconst getAccountsUrl = path => (user, url) => {\n  const userIsUser = Roles.userIsInRole(user, ROLES.USER);\n  const userIsPro = Roles.userIsInRole(user, ROLES.PRO);\n  const userIsAdmin = Roles.userIsInRole(user, ROLES.ADMIN) || Roles.userIsInRole(user, ROLES.DEV);\n  const token = url.split(`/${path}/`)[1];\n\n  if (userIsUser) {\n    return `${APP_URL}/${path}/${token}`;\n  }\n\n  if (userIsPro) {\n    return `${PRO_URL}/${path}/${token}`;\n  }\n\n  if (userIsAdmin) {\n    // Admin does not have the enroll, verify, and reset-password pages\n    // Just send them to APP\n    return `${APP_URL}/${path}/${token}`;\n  }\n\n  return url;\n};\n\nfunction notificationTemplateDefaultOverride(params, {\n  title,\n  body\n}) {\n  const {\n    variables\n  } = this.template;\n  return {\n    variables: [{\n      name: variables.TITLE,\n      content: title\n    }, {\n      name: variables.BODY,\n      content: body\n    }]\n  };\n}\n\nfunction notificationAndCtaTemplateDefaultOverride(params, {\n  title,\n  body,\n  cta\n}) {\n  const {\n    variables\n  } = this.template;\n  return {\n    variables: [{\n      name: variables.TITLE,\n      content: title\n    }, {\n      name: variables.BODY,\n      content: body\n    }, {\n      name: variables.CTA,\n      content: cta\n    }, {\n      name: variables.CTA_URL,\n      content: CTA_URL_DEFAULT\n    }]\n  };\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"emailListeners.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/email/server/emailListeners.js                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet UserService;\nmodule.link(\"../../users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 0);\nlet ServerEventService;\nmodule.link(\"../../events/server/ServerEventService\", {\n  default(v) {\n    ServerEventService = v;\n  }\n\n}, 1);\nlet requestLoanVerification, submitContactForm;\nmodule.link(\"../../methods\", {\n  requestLoanVerification(v) {\n    requestLoanVerification = v;\n  },\n\n  submitContactForm(v) {\n    submitContactForm = v;\n  }\n\n}, 2);\nlet Loans;\nmodule.link(\"../..\", {\n  Loans(v) {\n    Loans = v;\n  }\n\n}, 3);\nlet EMAIL_IDS, INTERNAL_EMAIL;\nmodule.link(\"../emailConstants\", {\n  EMAIL_IDS(v) {\n    EMAIL_IDS = v;\n  },\n\n  INTERNAL_EMAIL(v) {\n    INTERNAL_EMAIL = v;\n  }\n\n}, 4);\nlet sendEmail, sendEmailToAddress;\nmodule.link(\"../methodDefinitions\", {\n  sendEmail(v) {\n    sendEmail = v;\n  },\n\n  sendEmailToAddress(v) {\n    sendEmailToAddress = v;\n  }\n\n}, 5);\nServerEventService.addAfterMethodListener(requestLoanVerification, ({\n  context,\n  params\n}) => {\n  context.unblock();\n  const {\n    loanId\n  } = params;\n  const {\n    userId\n  } = Loans.findOne(loanId);\n  return sendEmail.run({\n    emailId: EMAIL_IDS.VERIFICATION_REQUESTED,\n    userId,\n    params\n  });\n});\nServerEventService.addAfterMethodListener(submitContactForm, ({\n  context,\n  params\n}) => {\n  context.unblock();\n  return sendEmailToAddress.run({\n    emailId: EMAIL_IDS.CONTACT_US,\n    address: params.email,\n    params\n  });\n});\nServerEventService.addAfterMethodListener(submitContactForm, ({\n  context,\n  params\n}) => {\n  context.unblock();\n  return sendEmailToAddress.run({\n    emailId: EMAIL_IDS.CONTACT_US_ADMIN,\n    address: INTERNAL_EMAIL,\n    params\n  });\n});\nServerEventService.addAfterMethodListener(sendEmail, ({\n  context,\n  params: {\n    emailId,\n    params,\n    userId\n  }\n}) => {\n  context.unblock();\n  const emailsToWatch = [EMAIL_IDS.INVITE_USER_TO_PROMOTION, EMAIL_IDS.INVITE_USER_TO_PROPERTY, EMAIL_IDS.REFER_USER];\n\n  if (!emailsToWatch.includes(emailId)) {\n    return;\n  }\n\n  if (!params.proUserId) {\n    return;\n  }\n\n  const {\n    name,\n    email\n  } = UserService.fetchOne({\n    $filters: {\n      _id: userId\n    },\n    name: 1,\n    email: 1\n  });\n  return sendEmail.run({\n    emailId: EMAIL_IDS.CONFIRM_USER_INVITATION,\n    userId: params.proUserId,\n    params: {\n      name,\n      email\n    }\n  });\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/email/server/index.js                                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./accountsEmails\");\nmodule.link(\"./methods\");\nlet setupMandrill;\nmodule.link(\"./mandrill\", {\n  setupMandrill(v) {\n    setupMandrill = v;\n  }\n\n}, 0);\nsetupMandrill();\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"mandrill.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/email/server/mandrill.js                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  setupMandrill: () => setupMandrill,\n  getSimpleMandrillTemplate: () => getSimpleMandrillTemplate,\n  getMandrillTemplate: () => getMandrillTemplate,\n  renderMandrillTemplate: () => renderMandrillTemplate,\n  sendMandrillTemplate: () => sendMandrillTemplate,\n  getEmailsForAddress: () => getEmailsForAddress\n});\nlet Mandrill;\nmodule.link(\"meteor/wylio:mandrill\", {\n  Mandrill(v) {\n    Mandrill = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet logError;\nmodule.link(\"../../methods\", {\n  logError(v) {\n    logError = v;\n  }\n\n}, 2);\nlet getEmailFooter;\nmodule.link(\"./emailHelpers\", {\n  getEmailFooter(v) {\n    getEmailFooter = v;\n  }\n\n}, 3);\nlet isEmailTestEnv, skipEmails;\nmodule.link(\"./EmailService\", {\n  isEmailTestEnv(v) {\n    isEmailTestEnv = v;\n  },\n\n  skipEmails(v) {\n    skipEmails = v;\n  }\n\n}, 4);\n\nconst setupMandrill = () => {\n  let key = '';\n\n  if (isEmailTestEnv) {\n    key = Meteor.settings.mandrill.MANDRILL_API_KEY_TEST;\n  } else {\n    key = Meteor.settings.mandrill.MANDRILL_API_KEY;\n  }\n\n  Mandrill.config({\n    username: Meteor.settings.mandrill.MANDRILL_LOGIN,\n    // the email address you log into Mandrill with. Only used to set MAIL_URL.\n    key,\n    // get your Mandrill key from https://mandrillapp.com/settings/index\n    port: 587,\n    // defaults to 465 for SMTP over TLS\n    host: 'smtps.mandrillapp.com' // the SMTP host\n    // baseUrl: 'https://mandrillapp.com/api/1.0/'  // update this in case Mandrill changes its API endpoint URL or version\n\n  });\n};\n\nconst getSimpleMandrillTemplate = ({\n  templateName,\n  footerType,\n  allowUnsubscribe,\n  variables\n}) => ({\n  template_name: templateName,\n  template_content: [{\n    name: 'footer',\n    content: getEmailFooter(footerType, allowUnsubscribe)\n  }],\n  merge_vars: variables\n});\n\nconst getMandrillTemplate = ({\n  templateName,\n  footerType,\n  allowUnsubscribe,\n  variables,\n  recipientAddress,\n  recipientName,\n  senderAddress,\n  senderName,\n  subject,\n  sendAt,\n  templateContent = [],\n  replyTo,\n  bccAddress\n}) => ({\n  template_name: templateName,\n  template_content: [{\n    name: 'footer',\n    content: getEmailFooter(footerType, allowUnsubscribe)\n  }, ...templateContent],\n  message: {\n    from_email: senderAddress,\n    from_name: senderName,\n    subject,\n    to: [{\n      email: recipientAddress,\n      name: recipientName\n    }],\n    global_merge_vars: variables,\n    headers: {\n      'Reply-To': replyTo || senderAddress\n    },\n    bcc_address: bccAddress\n  },\n  send_at: sendAt ? sendAt.toISOString() : undefined\n});\n\nconst renderMandrillTemplate = mandrillTemplate => Mandrill.templates.render(mandrillTemplate);\n\nconst sendMandrillTemplate = mandrillTemplate => {\n  if (skipEmails) {\n    return Promise.resolve();\n  }\n\n  return new Promise((resolve, reject) => {\n    Mandrill.messages.sendTemplate(mandrillTemplate, (error, result) => {\n      if (error) {\n        logError.run({\n          error: JSON.parse(JSON.stringify(error, Object.getOwnPropertyNames(error))),\n          additionalData: ['Mandrill error']\n        });\n        reject(error);\n      }\n\n      resolve(result.data[0]);\n    });\n  });\n};\n\nconst getDate30DaysAgo = () => {\n  const date = new Date();\n  date.setDate(date.getDate() - 30);\n  const dateString = date.toISOString().split('T')[0];\n  return dateString;\n};\n\nconst getEmailsForAddress = email => new Promise((resolve, reject) => Mandrill.messages.search({\n  query: `email:${email}`,\n  date_from: getDate30DaysAgo()\n}, (error, result) => {\n  if (error) {\n    logError.run({\n      error: JSON.parse(JSON.stringify(error, Object.getOwnPropertyNames(error))),\n      additionalData: ['Mandrill error']\n    });\n    resolve(error);\n  } else if (result.statusCode !== 200) {\n    resolve(result);\n  }\n\n  resolve(result.data);\n}));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/email/server/methods.js                                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet sendEmail, sendEmailToAddress;\nmodule.link(\"../methodDefinitions\", {\n  sendEmail(v) {\n    sendEmail = v;\n  },\n\n  sendEmailToAddress(v) {\n    sendEmailToAddress = v;\n  }\n\n}, 1);\nlet EmailService;\nmodule.link(\"./EmailService\", {\n  default(v) {\n    EmailService = v;\n  }\n\n}, 2);\nsendEmail.setHandler((context, params) => {\n  context.unblock();\n\n  try {\n    return EmailService.sendEmailToUser(params);\n  } catch (error) {\n    console.log(`EmailService error for ${params.emailId}`, error);\n    throw new Meteor.Error(error);\n  }\n});\nsendEmailToAddress.setHandler((context, params) => {\n  context.unblock();\n\n  try {\n    return EmailService.sendEmail(params);\n  } catch (error) {\n    console.log(`EmailService error for ${params.emailId}`, error);\n    throw new Meteor.Error(error);\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"emailConstants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/email/emailConstants.js                                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  FROM_NAME: () => FROM_NAME,\n  FROM_EMAIL: () => FROM_EMAIL,\n  FROM_DEFAULT: () => FROM_DEFAULT,\n  CTA_URL_DEFAULT: () => CTA_URL_DEFAULT,\n  INTERNAL_EMAIL: () => INTERNAL_EMAIL,\n  EPOTEK_PHONE: () => EPOTEK_PHONE,\n  EMAIL_I18N_NAMESPACE: () => EMAIL_I18N_NAMESPACE,\n  EMAIL_PARTS: () => EMAIL_PARTS,\n  FOOTER_TYPES: () => FOOTER_TYPES,\n  EMAIL_TEMPLATES: () => EMAIL_TEMPLATES,\n  EMAIL_IDS: () => EMAIL_IDS\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nconst FROM_NAME = 'e-Potek';\nconst FROM_EMAIL = 'info@e-potek.ch';\nconst FROM_DEFAULT = `${FROM_NAME} <${FROM_EMAIL}>`;\nconst CTA_URL_DEFAULT = Meteor.settings.public.subdomains.app;\nconst INTERNAL_EMAIL = Meteor.settings.public.environment === 'production' ? FROM_EMAIL : 'dev@e-potek.ch';\nconst EPOTEK_PHONE = '+41 22 566 01 10';\nconst EMAIL_I18N_NAMESPACE = 'emails';\nconst EMAIL_PARTS = {\n  SUBJECT: 'SUBJECT',\n  TITLE: 'TITLE',\n  BODY: 'BODY',\n  CTA: 'CTA',\n  FROM: 'FROM'\n};\nconst FOOTER_TYPES = {\n  USER: 'footerUser',\n  VISITOR: 'footerVisitor'\n};\nconst EMAIL_TEMPLATES = {\n  NOTIFICATION: {\n    name: 'NOTIFICATION',\n    mandrillId: 'notification',\n    variables: {\n      TITLE: 'TITLE',\n      BODY: 'BODY'\n    }\n  },\n  NOTIFICATION_AND_CTA: {\n    name: 'NOTIFICATION_AND_CTA',\n    mandrillId: 'notification-cta',\n    variables: {\n      TITLE: 'TITLE',\n      BODY: 'BODY',\n      CTA: 'CTA',\n      CTA_URL: 'CTA_URL'\n    }\n  },\n  PROMOTION_INVITATION: {\n    name: 'PROMOTION_INVITATION',\n    mandrillId: 'promotion-invitation',\n    variables: {\n      TITLE: 'TITLE',\n      MARKETING_BLURB: 'MARKETING_BLURB',\n      BODY: 'BODY',\n      CTA: 'CTA',\n      CTA_URL: 'CTA_URL',\n      COVER_IMAGE_URL: 'COVER_IMAGE_URL',\n      LOGO_URL_1: 'LOGO_URL_1',\n      LOGO_URL_2: 'LOGO_URL_2',\n      LOGO_URL_3: 'LOGO_URL_3'\n    }\n  },\n  SIMPLE: {\n    name: 'SIMPLE',\n    mandrillId: 'simple',\n    variables: {\n      TITLE: 'TITLE',\n      BODY: 'BODY'\n    }\n  },\n  NOTIFICATION_AND_CTA_V2: {\n    name: 'NOTIFICATION_AND_CTA_V2',\n    mandrillId: 'notification-cta-v2',\n    variables: {\n      TITLE: 'TITLE',\n      BODY: 'BODY',\n      CTA: 'CTA',\n      CTA_URL: 'CTA_URL',\n      CSS: 'CSS'\n    }\n  }\n};\nconst EMAIL_IDS = {\n  CONTACT_US: 'CONTACT_US',\n  CONTACT_US_ADMIN: 'CONTACT_US_ADMIN',\n  VERIFY_EMAIL: 'VERIFY_EMAIL',\n  RESET_PASSWORD: 'RESET_PASSWORD',\n  ENROLL_ACCOUNT: 'ENROLL_ACCOUNT',\n  VERIFICATION_REQUESTED: 'VERIFICATION_REQUESTED',\n  VERIFICATION_ERROR: 'VERIFICATION_ERROR',\n  VERIFICATION_PASSED: 'VERIFICATION_PASSED',\n  INVITE_USER_TO_PROMOTION: 'INVITE_USER_TO_PROMOTION',\n  SEND_FEEDBACK_TO_LENDER: 'SEND_FEEDBACK_TO_LENDER',\n  INVITE_USER_TO_PROPERTY: 'INVITE_USER_TO_PROPERTY',\n  REFER_USER: 'REFER_USER',\n  FIND_LENDER_NOTIFICATION: 'FIND_LENDER_NOTIFICATION',\n  CONFIRM_USER_INVITATION: 'CONFIRM_USER_INVITATION',\n  LOAN_CHECKLIST: 'LOAN_CHECKLIST'\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methodDefinitions.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/email/methodDefinitions.js                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  sendEmail: () => sendEmail,\n  sendEmailToAddress: () => sendEmailToAddress\n});\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet Method;\nmodule.link(\"../methods/methods\", {\n  Method(v) {\n    Method = v;\n  }\n\n}, 1);\nconst sendEmail = new Method({\n  name: 'sendEmail',\n  params: {\n    emailId: String,\n    params: Object,\n    userId: String\n  }\n});\nconst sendEmailToAddress = new Method({\n  name: 'sendEmailToAddress',\n  params: {\n    address: String,\n    emailId: String,\n    name: Match.Maybe(String),\n    params: Object\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"activities\":{\"server\":{\"ActivityService.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/activities/server/ActivityService.js                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet CollectionService;\nmodule.link(\"../../helpers/CollectionService\", {\n  default(v) {\n    CollectionService = v;\n  }\n\n}, 0);\nlet Activities;\nmodule.link(\"../activities\", {\n  default(v) {\n    Activities = v;\n  }\n\n}, 1);\nlet ACTIVITY_TYPES, ACTIVITY_SECONDARY_TYPES;\nmodule.link(\"../activityConstants\", {\n  ACTIVITY_TYPES(v) {\n    ACTIVITY_TYPES = v;\n  },\n\n  ACTIVITY_SECONDARY_TYPES(v) {\n    ACTIVITY_SECONDARY_TYPES = v;\n  }\n\n}, 2);\n\nclass ActivityService extends CollectionService {\n  constructor() {\n    super(Activities);\n  }\n\n  addServerActivity(activity) {\n    return this.insert((0, _objectSpread2.default)({}, activity, {\n      type: ACTIVITY_TYPES.SERVER\n    }));\n  }\n\n  addCreatedAtActivity(_ref) {\n    let {\n      createdAt\n    } = _ref,\n        rest = (0, _objectWithoutProperties2.default)(_ref, [\"createdAt\"]);\n    return this.addServerActivity((0, _objectSpread2.default)({\n      secondaryType: ACTIVITY_SECONDARY_TYPES.CREATED,\n      date: createdAt\n    }, rest));\n  }\n\n}\n\nmodule.exportDefault(new ActivityService());\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"activityListeners.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/activities/server/activityListeners.js                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet ServerEventService;\nmodule.link(\"../../events/server/ServerEventService\", {\n  default(v) {\n    ServerEventService = v;\n  }\n\n}, 0);\nlet removeLoanFromPromotion;\nmodule.link(\"../../methods\", {\n  removeLoanFromPromotion(v) {\n    removeLoanFromPromotion = v;\n  }\n\n}, 1);\nlet ACTIVITY_SECONDARY_TYPES;\nmodule.link(\"../activityConstants\", {\n  ACTIVITY_SECONDARY_TYPES(v) {\n    ACTIVITY_SECONDARY_TYPES = v;\n  }\n\n}, 2);\nlet UserService;\nmodule.link(\"../../users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 3);\nlet PromotionService;\nmodule.link(\"../../promotions/server/PromotionService\", {\n  default(v) {\n    PromotionService = v;\n  }\n\n}, 4);\nlet ActivityService;\nmodule.link(\"./ActivityService\", {\n  default(v) {\n    ActivityService = v;\n  }\n\n}, 5);\nServerEventService.addAfterMethodListener(removeLoanFromPromotion, ({\n  params: {\n    loanId,\n    promotionId\n  },\n  context: {\n    userId\n  }\n}) => {\n  const {\n    name\n  } = PromotionService.fetchOne({\n    $filters: {\n      _id: promotionId\n    },\n    name: 1\n  });\n  const {\n    name: userName\n  } = UserService.fetchOne({\n    $filters: {\n      _id: userId\n    },\n    name: 1\n  }) || {};\n  ActivityService.addServerActivity({\n    secondaryType: ACTIVITY_SECONDARY_TYPES.REMOVE_LOAN_FROM_PROMOTION,\n    loanLink: {\n      _id: loanId\n    },\n    title: `Enlevé de la promotion \"${name}\"`,\n    description: userName ? `Par ${userName}` : '',\n    createdBy: userId\n  });\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"exposures.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/activities/server/exposures.js                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet exposeQuery;\nmodule.link(\"../../queries/queryHelpers\", {\n  exposeQuery(v) {\n    exposeQuery = v;\n  }\n\n}, 1);\nlet adminActivities;\nmodule.link(\"../queries\", {\n  adminActivities(v) {\n    adminActivities = v;\n  }\n\n}, 2);\nexposeQuery({\n  query: adminActivities,\n  overrides: {\n    embody: body => {\n      body.$filter = ({\n        filters,\n        params: {\n          _id,\n          loanId,\n          type\n        }\n      }) => {\n        if (_id) {\n          filters._id = _id;\n        }\n\n        if (loanId) {\n          filters['loanLink._id'] = loanId;\n        }\n\n        if (type) {\n          filters.type = type;\n        }\n      };\n    },\n    validateParams: {\n      _id: Match.Maybe(String),\n      loanId: Match.Maybe(String),\n      type: Match.Maybe(Match.OneOf(Object, String))\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"hooks.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/activities/server/hooks.js                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Activities;\nmodule.link(\"../activities\", {\n  default(v) {\n    Activities = v;\n  }\n\n}, 0);\nlet NotificationService;\nmodule.link(\"../../notifications/server/NotificationService\", {\n  default(v) {\n    NotificationService = v;\n  }\n\n}, 1);\nActivities.after.update(function (userId, doc, fieldNames) {\n  if (fieldNames.includes('date')) {\n    const {\n      date: newDate\n    } = doc;\n    const {\n      date: oldDate\n    } = this.previous;\n\n    if ((newDate && newDate.getTime()) !== (oldDate && oldDate.getTime())) {\n      NotificationService.remove({\n        'activityLink._id': doc._id\n      });\n    }\n  }\n}, {\n  fetchPrevious: true\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/activities/server/methods.js                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 1);\nlet activityInsert, activityUpdate, activityRemove;\nmodule.link(\"../methodDefinitions\", {\n  activityInsert(v) {\n    activityInsert = v;\n  },\n\n  activityUpdate(v) {\n    activityUpdate = v;\n  },\n\n  activityRemove(v) {\n    activityRemove = v;\n  }\n\n}, 2);\nlet ActivityService;\nmodule.link(\"./ActivityService\", {\n  default(v) {\n    ActivityService = v;\n  }\n\n}, 3);\nlet ACTIVITY_TYPES;\nmodule.link(\"../activityConstants\", {\n  ACTIVITY_TYPES(v) {\n    ACTIVITY_TYPES = v;\n  }\n\n}, 4);\n\nconst allowModification = activityId => {\n  const {\n    type\n  } = ActivityService.fetchOne({\n    $filters: {\n      _id: activityId\n    },\n    type: 1\n  });\n  return type !== ACTIVITY_TYPES.SERVER;\n};\n\nactivityInsert.setHandler(({\n  userId\n}, {\n  object\n}) => {\n  SecurityService.checkUserIsAdmin(userId);\n  return ActivityService.insert(object);\n});\nactivityUpdate.setHandler(({\n  userId\n}, {\n  activityId,\n  object\n}) => {\n  SecurityService.checkUserIsAdmin(userId);\n\n  if (!allowModification(activityId)) {\n    throw new Meteor.Error(\"Peut pas changer l'activité générée automatiquement\");\n  }\n\n  return ActivityService._update({\n    id: activityId,\n    object\n  });\n});\nactivityRemove.setHandler(({\n  userId\n}, {\n  activityId\n}) => {\n  SecurityService.checkUserIsAdmin(userId);\n\n  if (!allowModification(activityId)) {\n    throw new Meteor.Error(\"Peut pas changer l'activité générée automatiquement\");\n  }\n\n  return ActivityService.remove(activityId);\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"activities.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/activities/activities.js                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 1);\nlet createdAt, updatedAt;\nmodule.link(\"../helpers/sharedSchemas\", {\n  createdAt(v) {\n    createdAt = v;\n  },\n\n  updatedAt(v) {\n    updatedAt = v;\n  }\n\n}, 2);\nlet ACTIVITY_TYPES, ACTIVITY_SECONDARY_TYPES, ACTIVITIES_COLLECTION;\nmodule.link(\"./activityConstants\", {\n  ACTIVITY_TYPES(v) {\n    ACTIVITY_TYPES = v;\n  },\n\n  ACTIVITY_SECONDARY_TYPES(v) {\n    ACTIVITY_SECONDARY_TYPES = v;\n  },\n\n  ACTIVITIES_COLLECTION(v) {\n    ACTIVITIES_COLLECTION = v;\n  }\n\n}, 3);\nconst Activities = new Mongo.Collection(ACTIVITIES_COLLECTION);\nconst ActivitySchema = new SimpleSchema({\n  createdAt,\n  updatedAt,\n  createdBy: {\n    type: String,\n    optional: true,\n\n    autoValue() {\n      if (this.isInsert) {\n        return this.value || this.userId;\n      }\n\n      this.unset();\n    }\n\n  },\n  title: String,\n  description: {\n    type: String,\n    optional: true\n  },\n  type: {\n    type: String,\n    allowedValues: Object.values(ACTIVITY_TYPES)\n  },\n  secondaryType: {\n    type: String,\n    optional: true,\n    allowedValues: Object.values(ACTIVITY_SECONDARY_TYPES)\n  },\n  date: {\n    type: Date,\n\n    autoValue() {\n      if (this.isInsert) {\n        return this.value || new Date();\n      }\n    }\n\n  },\n  loanLink: {\n    type: Object,\n    optional: true\n  },\n  'loanLink._id': {\n    type: String,\n    optional: true\n  },\n  shouldNotify: {\n    type: Boolean,\n    optional: true\n  }\n});\nActivities.attachSchema(ActivitySchema);\nmodule.exportDefault(Activities);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"activityConstants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/activities/activityConstants.js                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  ACTIVITIES_COLLECTION: () => ACTIVITIES_COLLECTION,\n  ACTIVITY_QUERIES: () => ACTIVITY_QUERIES,\n  ACTIVITY_TYPES: () => ACTIVITY_TYPES,\n  ACTIVITY_SECONDARY_TYPES: () => ACTIVITY_SECONDARY_TYPES\n});\nconst ACTIVITIES_COLLECTION = 'activities';\nconst ACTIVITY_QUERIES = {\n  ADMIN_ACTIVITIES: 'ADMIN_ACTIVITIES'\n};\nconst ACTIVITY_TYPES = {\n  EMAIL: 'EMAIL',\n  EVENT: 'EVENT',\n  PHONE: 'PHONE',\n  SERVER: 'SERVER',\n  OTHER: 'OTHER'\n};\nconst ACTIVITY_SECONDARY_TYPES = {\n  CREATED: 'CREATED',\n  REMOVE_LOAN_FROM_PROMOTION: 'REMOVE_LOAN_FROM_PROMOTION'\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/activities/index.js                                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./activities\", {\n  default: \"default\"\n}, 0);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"links.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/activities/links.js                                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Notifications;\nmodule.link(\"../notifications\", {\n  default(v) {\n    Notifications = v;\n  }\n\n}, 0);\nlet Loans;\nmodule.link(\"../loans\", {\n  default(v) {\n    Loans = v;\n  }\n\n}, 1);\nlet Activities;\nmodule.link(\"./activities\", {\n  default(v) {\n    Activities = v;\n  }\n\n}, 2);\nActivities.addLinks({\n  notifications: {\n    collection: Notifications,\n    inversedBy: 'activity',\n    autoremove: true\n  },\n  loan: {\n    collection: Loans,\n    field: 'loanLink',\n    metadata: true\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methodDefinitions.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/activities/methodDefinitions.js                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  activityInsert: () => activityInsert,\n  activityUpdate: () => activityUpdate,\n  activityRemove: () => activityRemove\n});\nlet Method;\nmodule.link(\"../methods/methods\", {\n  Method(v) {\n    Method = v;\n  }\n\n}, 0);\nconst activityInsert = new Method({\n  name: 'activityInsert',\n  params: {\n    object: Object\n  }\n});\nconst activityUpdate = new Method({\n  name: 'activityUpdate',\n  params: {\n    activityId: String,\n    object: Object\n  }\n});\nconst activityRemove = new Method({\n  name: 'activityRemove',\n  params: {\n    activityId: String\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"queries.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/activities/queries.js                                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  adminActivities: () => adminActivities\n});\nlet Activities;\nmodule.link(\"./activities\", {\n  default(v) {\n    Activities = v;\n  }\n\n}, 0);\nlet ACTIVITY_QUERIES;\nmodule.link(\"./activityConstants\", {\n  ACTIVITY_QUERIES(v) {\n    ACTIVITY_QUERIES = v;\n  }\n\n}, 1);\nlet activity;\nmodule.link(\"../fragments\", {\n  activity(v) {\n    activity = v;\n  }\n\n}, 2);\nconst adminActivities = Activities.createQuery(ACTIVITY_QUERIES.ADMIN_ACTIVITIES, (0, _objectSpread2.default)({}, activity(), {\n  $options: {\n    sort: {\n      date: 1\n    }\n  }\n}));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"analytics\":{\"server\":{\"Analytics.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/analytics/server/Analytics.js                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet DefaultNodeAnalytics;\nmodule.link(\"analytics-node\", {\n  default(v) {\n    DefaultNodeAnalytics = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet Random;\nmodule.link(\"meteor/random\", {\n  Random(v) {\n    Random = v;\n  }\n\n}, 2);\nlet UserService;\nmodule.link(\"../../users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 3);\nlet getClientHost;\nmodule.link(\"../../../utils/server/getClientUrl\", {\n  getClientHost(v) {\n    getClientHost = v;\n  }\n\n}, 4);\nlet EVENTS_CONFIG;\nmodule.link(\"./eventsConfig\", {\n  EVENTS_CONFIG(v) {\n    EVENTS_CONFIG = v;\n  }\n\n}, 5);\nlet TRACKING_COOKIE;\nmodule.link(\"../analyticsConstants\", {\n  TRACKING_COOKIE(v) {\n    TRACKING_COOKIE = v;\n  }\n\n}, 6);\nlet MiddlewareManager;\nmodule.link(\"../../../utils/MiddlewareManager\", {\n  default(v) {\n    MiddlewareManager = v;\n  }\n\n}, 7);\nlet impersonateMiddleware;\nmodule.link(\"./analyticsHelpers\", {\n  impersonateMiddleware(v) {\n    impersonateMiddleware = v;\n  }\n\n}, 8);\nlet TestAnalytics;\nmodule.link(\"./TestAnalytics\", {\n  default(v) {\n    TestAnalytics = v;\n  }\n\n}, 9);\n\nclass NodeAnalytics extends DefaultNodeAnalytics {\n  constructor(...args) {\n    super(...args);\n    this.middlewareManager = new MiddlewareManager(this);\n  }\n\n  initAnalytics(context) {\n    ['identify', 'track', 'page', 'alias'].forEach(method => {\n      this.middlewareManager.applyToMethod(method, impersonateMiddleware(context));\n    });\n  }\n\n}\n\nconst {\n  Segment = {}\n} = Meteor.settings.public.analyticsSettings;\nconst {\n  key\n} = Segment;\nconst nodeAnalytics = new NodeAnalytics(key);\n\nif (Meteor.isProduction && !key) {\n  throw new Meteor.Error('No segment key found !');\n}\n\nclass Analytics {\n  constructor(context) {\n    this.init(context);\n  }\n\n  init(context) {\n    this.events = EVENTS_CONFIG;\n\n    if (Meteor.isTest || Meteor.isAppTest) {\n      // || Meteor.isDevelopment) {\n      this.analytics = new TestAnalytics();\n    } else {\n      this.analytics = nodeAnalytics;\n    }\n\n    this.context(context);\n  }\n\n  context(context) {\n    const {\n      userId,\n      connection: {\n        clientAddress,\n        httpHeaders: {\n          'user-agent': userAgent,\n          'x-real-ip': realIp,\n          referer: referrer\n        }\n      }\n    } = context;\n    this.userId = userId;\n    this.user = UserService.fetchOne({\n      $filters: {\n        _id: userId\n      },\n      firstName: 1,\n      lastName: 1,\n      email: 1,\n      roles: 1\n    });\n    this.clientAddress = realIp || clientAddress;\n    this.host = getClientHost();\n    this.userAgent = userAgent;\n    this.referrer = referrer;\n    this.analytics.initAnalytics(context);\n  }\n\n  identify(trackingId) {\n    this.alias(trackingId);\n    this.analytics.identify({\n      anonymousId: trackingId,\n      userId: this.userId,\n      traits: {\n        firstName: this.user.firstName,\n        lastName: this.user.lastName,\n        email: this.user.email,\n        role: this.user.roles[0]\n      }\n    });\n  }\n\n  track(event, data, trackingId) {\n    if (!Object.keys(this.events).includes(event)) {\n      throw new Meteor.Error(`Unknown event ${event}`);\n    }\n\n    const eventConfig = this.events[event];\n    const {\n      name,\n      transform\n    } = eventConfig;\n    const eventProperties = transform ? transform(data) : {};\n    this.analytics.track((0, _objectSpread2.default)({}, trackingId ? {\n      anonymousId: trackingId\n    } : {}, {\n      userId: this.userId,\n      event: name,\n      properties: eventProperties,\n      context: {\n        ip: this.clientAddress,\n        userAgent: this.userAgent\n      }\n    }));\n  }\n\n  alias(trackingId) {\n    if (trackingId) {\n      this.analytics.alias({\n        userId: this.userId,\n        previousId: trackingId\n      });\n    }\n  } // Returns the route string in a more readable format\n  // ex: APP_LOGIN_PAGE => App login page\n\n\n  formatRouteName(route) {\n    return route.toLowerCase().split('_').map((w, i) => {\n      if (i === 0) {\n        return w.slice(0, 1).toUpperCase() + w.slice(1);\n      }\n\n      return w;\n    }).join(' ');\n  }\n\n  page(params) {\n    const {\n      cookies,\n      sessionStorage,\n      path,\n      route,\n      queryParams,\n      queryString\n    } = params;\n    const trackingId = cookies[TRACKING_COOKIE];\n    const formattedRoute = this.formatRouteName(route);\n    this.analytics.page((0, _objectSpread2.default)({\n      name: formattedRoute,\n      anonymousId: trackingId || Random.id()\n    }, this.userId ? {\n      userId: this.userId\n    } : {}, {\n      context: {\n        ip: this.clientAddress,\n        userAgent: this.userAgent\n      },\n      properties: (0, _objectSpread2.default)({\n        path,\n        url: `${this.host}${path === '/' ? '' : path}`,\n        referrer: this.referrer\n      }, queryString, queryParams)\n    }));\n  }\n\n}\n\nmodule.exportDefault(Analytics);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"TestAnalytics.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/analytics/server/TestAnalytics.js                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.exportDefault(class {\n  identify() {}\n\n  page() {}\n\n  track() {}\n\n  alias() {}\n\n  initAnalytics() {}\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"analyticsHelpers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/analytics/server/analyticsHelpers.js                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  impersonateMiddleware: () => impersonateMiddleware\n});\nlet LOGIN_IP_BLACKLIST;\nmodule.link(\"../analyticsConstants\", {\n  LOGIN_IP_BLACKLIST(v) {\n    LOGIN_IP_BLACKLIST = v;\n  }\n\n}, 0);\n\nconst impersonateMiddleware = context => () => next => (...args) => {\n  const {\n    connection: {\n      clientAddress,\n      httpHeaders: {\n        host\n      }\n    }\n  } = context; // Don't track login events when impersonating\n\n  if (!host.includes('admin')) {\n    if (LOGIN_IP_BLACKLIST.includes(clientAddress)) {\n      return;\n    }\n  }\n\n  return next(...args);\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"eventsConfig.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/analytics/server/eventsConfig.js                                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  EVENTS_CONFIG: () => EVENTS_CONFIG\n});\nlet curryRight;\nmodule.link(\"lodash/curryRight\", {\n  default(v) {\n    curryRight = v;\n  }\n\n}, 0);\nlet EVENTS;\nmodule.link(\"../events\", {\n  default(v) {\n    EVENTS = v;\n  }\n\n}, 1);\nconst curryPick = curryRight((obj, keys) => keys.reduce((o, k) => (0, _objectSpread2.default)({}, o, {\n  [k]: obj[k]\n}), {}));\nconst EVENTS_CONFIG = {\n  [EVENTS.USER_CREATED]: {\n    name: 'User Created',\n    transform: curryPick(['userId', 'origin', 'referralId'])\n  },\n  [EVENTS.USER_LOGGED_IN]: {\n    name: 'User Logged in'\n  },\n  [EVENTS.USER_VERIFIED_EMAIL]: {\n    name: 'User Verified'\n  },\n  [EVENTS.LOAN_ANONYMOUS_LOAN_CLAIMED]: {\n    name: 'Loan Anonymous loan claimed',\n    transform: curryPick(['loanId'])\n  },\n  [EVENTS.API_CALLED]: {\n    name: 'Api Called',\n    transform: curryPick(['endpoint', 'result'])\n  },\n  [EVENTS.LOAN_CREATED]: {\n    name: 'Loan Created',\n    transform: curryPick(['loanId', 'propertyId', 'promotionId', 'referralId', 'anonymous'])\n  },\n  [EVENTS.LOAN_STATUS_CHANGED]: {\n    name: 'Loan Status changed'\n  }\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/analytics/server/methods.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet analyticsLogin, analyticsPage, analyticsVerifyEmail;\nmodule.link(\"../methodDefinitions\", {\n  analyticsLogin(v) {\n    analyticsLogin = v;\n  },\n\n  analyticsPage(v) {\n    analyticsPage = v;\n  },\n\n  analyticsVerifyEmail(v) {\n    analyticsVerifyEmail = v;\n  }\n\n}, 0);\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 1);\nlet Analytics;\nmodule.link(\"./Analytics\", {\n  default(v) {\n    Analytics = v;\n  }\n\n}, 2);\nlet EVENTS;\nmodule.link(\"../events\", {\n  default(v) {\n    EVENTS = v;\n  }\n\n}, 3);\nanalyticsLogin.setHandler((context, params) => {\n  SecurityService.checkLoggedIn();\n  const analytics = new Analytics(context);\n  analytics.identify(params.trackingId);\n  analytics.track(EVENTS.USER_LOGGED_IN);\n});\nanalyticsPage.setHandler((context, params) => {\n  const analytics = new Analytics(context);\n  analytics.page(params);\n});\nanalyticsVerifyEmail.setHandler((context, params) => {\n  const analytics = new Analytics(context);\n  analytics.track(EVENTS.USER_VERIFIED_EMAIL);\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"analyticsConstants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/analytics/analyticsConstants.js                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  TRACKING_COOKIE: () => TRACKING_COOKIE,\n  LOGIN_IP_BLACKLIST: () => LOGIN_IP_BLACKLIST\n});\nconst TRACKING_COOKIE = 'epotek_trackingid';\nconst LOGIN_IP_BLACKLIST = ['185.19.31.79', '213.3.47.70'];\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"events.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/analytics/events.js                                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  EVENTS: () => EVENTS\n});\nconst EVENTS = {\n  USER_CREATED: 'USER_CREATED',\n  USER_LOGGED_IN: 'USER_LOGGED_IN',\n  USER_VERIFIED_EMAIL: 'USER_VERIFIED_EMAIL',\n  PROMOTION_CREATED: 'PROMOTION_CREATED',\n  PROMOTION_CUSTOMER_INVITED: 'PROMOTION_CUSTOMER_INVITED',\n  PROMOTION_LOT_STATUS_UPDATED: 'PROMOTION_LOT_STATUS_UPDATED',\n  PROPERTY_CUSTOMER_INVITED: 'PROPERTY_CUSTOMER_INVITED',\n  LOAN_ANONYMOUS_LOAN_CLAIMED: 'LOAN_ANONYMOUS_LOAN_CLAIMED',\n  LOAN_STATUS_CHANGED: 'LOAN_STATUS_CHANGED',\n  LOAN_COMPLETED_A_STRUCTURE: 'LOAN_COMPLETED_A_STRUCTURE',\n  LOAN_CREATED: 'LOAN_CREATED',\n  LOAN_MADE_PROGRESS: 'LOAN_MADE_PROGRESS',\n  LOAN_SET_STATUS: 'LOAN_SET_STATUS',\n  LOAN_SET_STEP: 'LOAN_SET_STEP',\n  LOAN_TASK_ADDED: 'LOAN_TASK_ADDED',\n  LOAN_TASK_UPDATED: 'LOAN_TASK_UPDATED',\n  CTA_CLICKED: 'CTA_CLICKED',\n  API_CALLED: 'API_CALLED'\n};\nmodule.exportDefault(EVENTS);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methodDefinitions.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/analytics/methodDefinitions.js                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  analyticsLogin: () => analyticsLogin,\n  analyticsPage: () => analyticsPage,\n  analyticsVerifyEmail: () => analyticsVerifyEmail\n});\nlet Method;\nmodule.link(\"../methods/methods\", {\n  Method(v) {\n    Method = v;\n  }\n\n}, 0);\nconst analyticsLogin = new Method({\n  name: 'analyticsLogin',\n  params: {\n    trackingId: String\n  }\n});\nconst analyticsPage = new Method({\n  name: 'analyticsPage',\n  params: {\n    cookies: Object,\n    sessionStorage: Object,\n    path: String,\n    route: String,\n    queryParams: Object,\n    queryString: Object\n  }\n});\nconst analyticsVerifyEmail = new Method({\n  name: 'analyticsVerifyEmail'\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"borrowers\":{\"schemas\":{\"BorrowerSchema.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/borrowers/schemas/BorrowerSchema.js                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  BorrowerSchemaAdmin: () => BorrowerSchemaAdmin\n});\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 0);\nlet createdAt, updatedAt, additionalDocuments, mortgageNoteLinks, documentsField;\nmodule.link(\"../../helpers/sharedSchemas\", {\n  createdAt(v) {\n    createdAt = v;\n  },\n\n  updatedAt(v) {\n    updatedAt = v;\n  },\n\n  additionalDocuments(v) {\n    additionalDocuments = v;\n  },\n\n  mortgageNoteLinks(v) {\n    mortgageNoteLinks = v;\n  },\n\n  documentsField(v) {\n    documentsField = v;\n  }\n\n}, 1);\nlet initialDocuments;\nmodule.link(\"../borrowersAdditionalDocuments\", {\n  initialDocuments(v) {\n    initialDocuments = v;\n  }\n\n}, 2);\nlet personalInfoSchema, financeInfoSchema, ownCompaniesSchema;\nmodule.link(\"./otherSchemas\", {\n  personalInfoSchema(v) {\n    personalInfoSchema = v;\n  },\n\n  financeInfoSchema(v) {\n    financeInfoSchema = v;\n  },\n\n  ownCompaniesSchema(v) {\n    ownCompaniesSchema = v;\n  }\n\n}, 3);\n// Documentation is in the google drive dev/MongoDB Schemas\nconst BorrowerSchema = new SimpleSchema((0, _objectSpread2.default)({\n  userId: {\n    type: String,\n    optional: true\n  },\n  createdAt,\n  updatedAt,\n  admin: {\n    // TODO\n    type: Object,\n    optional: true\n  },\n  adminValidation: {\n    type: Object,\n    defaultValue: {},\n    blackbox: true\n  },\n  documents: documentsField\n}, personalInfoSchema, financeInfoSchema, additionalDocuments(initialDocuments), mortgageNoteLinks, ownCompaniesSchema));\nconst protectedKeys = ['_id', 'additionalDocuments', 'admin', 'adminValidation', 'createdAt', 'logic', 'mortgageNoteLinks', 'updatedAt', 'userId', 'documents'];\nconst BorrowerSchemaAdmin = BorrowerSchema.omit(...protectedKeys);\nmodule.exportDefault(BorrowerSchema);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"otherSchemas.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/borrowers/schemas/otherSchemas.js                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  personalInfoSchema: () => personalInfoSchema,\n  financeInfoSchema: () => financeInfoSchema,\n  ownCompaniesSchema: () => ownCompaniesSchema\n});\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 0);\nlet percentageField, moneyField, address;\nmodule.link(\"../../helpers/sharedSchemas\", {\n  percentageField(v) {\n    percentageField = v;\n  },\n\n  moneyField(v) {\n    moneyField = v;\n  },\n\n  address(v) {\n    address = v;\n  }\n\n}, 1);\nlet RESIDENCY_PERMIT, GENDER, CIVIL_STATUS, OTHER_INCOME, EXPENSES, OWN_FUNDS_TYPES;\nmodule.link(\"../borrowerConstants\", {\n  RESIDENCY_PERMIT(v) {\n    RESIDENCY_PERMIT = v;\n  },\n\n  GENDER(v) {\n    GENDER = v;\n  },\n\n  CIVIL_STATUS(v) {\n    CIVIL_STATUS = v;\n  },\n\n  OTHER_INCOME(v) {\n    OTHER_INCOME = v;\n  },\n\n  EXPENSES(v) {\n    EXPENSES = v;\n  },\n\n  OWN_FUNDS_TYPES(v) {\n    OWN_FUNDS_TYPES = v;\n  }\n\n}, 2);\nlet RESIDENCE_TYPE;\nmodule.link(\"../../constants\", {\n  RESIDENCE_TYPE(v) {\n    RESIDENCE_TYPE = v;\n  }\n\n}, 3);\nlet CUSTOM_AUTOFIELD_TYPES;\nmodule.link(\"../../../components/AutoForm2/constants\", {\n  CUSTOM_AUTOFIELD_TYPES(v) {\n    CUSTOM_AUTOFIELD_TYPES = v;\n  }\n\n}, 4);\n\nconst makeArrayOfObjectsSchema = (name, allowedValues) => ({\n  [name]: {\n    type: Array,\n    defaultValue: [],\n    optional: true\n  },\n  [`${name}.$`]: Object,\n  [`${name}.$.value`]: (0, _objectSpread2.default)({}, moneyField, {\n    optional: false\n  }),\n  [`${name}.$.description`]: {\n    type: String,\n    optional: true,\n    allowedValues,\n    uniforms: {\n      displayEmpty: false,\n      intlId: `${name}.description`,\n      allowedValuesIntlId: name\n    }\n  }\n});\n\nconst personalInfoSchema = (0, _objectSpread2.default)({\n  firstName: {\n    type: String,\n    optional: true\n  },\n  lastName: {\n    type: String,\n    optional: true\n  },\n  gender: {\n    type: String,\n    optional: true,\n    allowedValues: Object.values(GENDER),\n    uniforms: {\n      displayEmpty: false\n    }\n  },\n  birthDate: {\n    type: Date,\n    optional: true,\n    uniforms: {\n      type: CUSTOM_AUTOFIELD_TYPES.DATE\n    }\n  }\n}, address, {\n  sameAddress: {\n    type: Boolean,\n    optional: true\n  },\n  isSwiss: {\n    type: Boolean,\n    optional: true\n  },\n  residencyPermit: {\n    type: String,\n    optional: true,\n    allowedValues: Object.values(RESIDENCY_PERMIT),\n    uniforms: {\n      displayEmpty: false\n    }\n  },\n  citizenship: {\n    type: String,\n    optional: true\n  },\n  isUSPerson: {\n    type: Boolean,\n    optional: true\n  },\n  civilStatus: {\n    type: String,\n    allowedValues: Object.values(CIVIL_STATUS),\n    optional: true,\n    uniforms: {\n      displayEmpty: false\n    }\n  },\n  childrenCount: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n    max: 20\n  },\n  company: {\n    type: String,\n    optional: true\n  }\n});\nconst financeInfoSchema = (0, _objectSpread2.default)({\n  salary: moneyField,\n  netSalary: moneyField,\n  bonusExists: {\n    type: Boolean,\n    optional: true\n  },\n  bonus2015: moneyField,\n  bonus2016: moneyField,\n  bonus2017: moneyField,\n  bonus2018: moneyField,\n  bonus2019: moneyField,\n  [OWN_FUNDS_TYPES.BANK_FORTUNE]: moneyField\n}, makeArrayOfObjectsSchema(OWN_FUNDS_TYPES.INSURANCE_2), makeArrayOfObjectsSchema(OWN_FUNDS_TYPES.INSURANCE_3A), makeArrayOfObjectsSchema(OWN_FUNDS_TYPES.BANK_3A), makeArrayOfObjectsSchema(OWN_FUNDS_TYPES.INSURANCE_3B), {\n  [OWN_FUNDS_TYPES.THIRD_PARTY_FORTUNE]: moneyField\n}, makeArrayOfObjectsSchema('otherIncome', Object.values(OTHER_INCOME)), {\n  'otherIncome.$.comment': {\n    type: String,\n    optional: true\n  }\n}, makeArrayOfObjectsSchema('otherFortune'), makeArrayOfObjectsSchema('expenses', Object.values(EXPENSES)), {\n  'expenses.$.comment': {\n    type: String,\n    optional: true\n  }\n}, makeArrayOfObjectsSchema('realEstate', Object.values(RESIDENCE_TYPE)), {\n  'realEstate.$.loan': (0, _objectSpread2.default)({}, moneyField, {\n    optional: false\n  }),\n  'realEstate.$.name': {\n    type: String,\n    optional: true\n  },\n  'realEstate.$.income': (0, _objectSpread2.default)({}, moneyField, {\n    optional: true,\n    defaultValue: 0\n  })\n});\nconst ownCompaniesSchema = {\n  hasOwnCompany: {\n    type: Boolean,\n    optional: true\n  },\n  ownCompanies: {\n    type: Array,\n    defaultValue: [],\n    optional: true\n  },\n  'ownCompanies.$': Object,\n  'ownCompanies.$.description': {\n    type: String,\n    optional: false\n  },\n  'ownCompanies.$.ownership': percentageField,\n  'ownCompanies.$.netIncome2016': moneyField,\n  'ownCompanies.$.netIncome2017': moneyField,\n  'ownCompanies.$.netIncome2018': moneyField\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"BorrowerService.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/borrowers/server/BorrowerService.js                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  BorrowerService: () => BorrowerService\n});\nlet Borrowers;\nmodule.link(\"../borrowers\", {\n  default(v) {\n    Borrowers = v;\n  }\n\n}, 0);\nlet LoanService;\nmodule.link(\"../../loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 1);\nlet CollectionService;\nmodule.link(\"../../helpers/CollectionService\", {\n  default(v) {\n    CollectionService = v;\n  }\n\n}, 2);\nlet loanBorrower;\nmodule.link(\"../../fragments\", {\n  loanBorrower(v) {\n    loanBorrower = v;\n  }\n\n}, 3);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass BorrowerService extends CollectionService {\n  constructor() {\n    super(Borrowers);\n\n    _defineProperty(this, \"update\", ({\n      borrowerId,\n      object\n    }) => Borrowers.update(borrowerId, {\n      $set: object\n    }));\n\n    _defineProperty(this, \"insert\", ({\n      borrower = {},\n      userId\n    }) => Borrowers.insert((0, _objectSpread2.default)({}, borrower, {\n      userId\n    })));\n\n    _defineProperty(this, \"remove\", ({\n      borrowerId,\n      loanId\n    }) => {\n      LoanService.cleanupRemovedBorrower({\n        borrowerId\n      });\n      const borrower = this.get(borrowerId);\n\n      if (borrower.loans && borrower.loans.length > 1) {\n        const loansLink = this.getLink(borrowerId, 'loans');\n\n        if (loanId) {\n          // Fix this conditional when the issue has been dealt with\n          // https://github.com/cult-of-coders/grapher/issues/332\n          loansLink.remove(loanId);\n        } else {\n          // Only admins can remove a borrower that has multiple loans\n          return Borrowers.remove(borrowerId);\n        }\n      } else {\n        return Borrowers.remove(borrowerId);\n      }\n    });\n\n    _defineProperty(this, \"pushValue\", ({\n      borrowerId,\n      object\n    }) => Borrowers.update(borrowerId, {\n      $push: object\n    }));\n\n    _defineProperty(this, \"popValue\", ({\n      borrowerId,\n      object\n    }) => Borrowers.update(borrowerId, {\n      $pop: object\n    }));\n\n    _defineProperty(this, \"pullValue\", ({\n      borrowerId,\n      object\n    }) => Borrowers.update(borrowerId, {\n      $pull: object\n    }));\n  }\n\n  get(borrowerId) {\n    return this.fetchOne((0, _objectSpread2.default)({\n      $filters: {\n        _id: borrowerId\n      }\n    }, loanBorrower()));\n  }\n\n  getReusableBorrowers({\n    loanId,\n    borrowerId\n  }) {\n    // borrowerId can be the previous removed borrower, and therefore\n    // this line will fail if we don't provide a default empty object\n    const {\n      userId,\n      loans\n    } = this.get(borrowerId) || {};\n\n    if (!userId) {\n      return {\n        borrowers: [],\n        isLastLoan: true\n      };\n    }\n\n    const userBorrowers = this.fetch({\n      $filters: {\n        userId\n      },\n      name: 1,\n      loans: {\n        name: 1\n      }\n    });\n    const loan = LoanService.get(loanId);\n    const isLastLoan = loans && loans.length === 1 && loans[0]._id === loanId;\n    const borrowersNotOnLoan = userBorrowers.filter(({\n      _id\n    }) => !loan.borrowerIds.includes(_id));\n    return {\n      borrowers: borrowersNotOnLoan,\n      isLastLoan\n    };\n  }\n\n  cleanUpMortgageNotes({\n    borrowerId\n  }) {\n    const {\n      mortgageNotes = [],\n      loans = []\n    } = this.fetchOne({\n      $filters: {\n        _id: borrowerId\n      },\n      mortgageNotes: {\n        _id: 1\n      },\n      loans: {\n        structures: 1\n      }\n    });\n    const borrowerMortgageNoteIds = mortgageNotes.map(({\n      _id\n    }) => _id);\n    loans.forEach(({\n      _id: loanId,\n      structures = []\n    }) => {\n      structures.forEach(({\n        id: structureId,\n        mortgageNoteIds = []\n      }) => {\n        LoanService.updateStructure({\n          loanId,\n          structureId,\n          structure: {\n            mortgageNoteIds: mortgageNoteIds.filter(id => !borrowerMortgageNoteIds.includes(id))\n          }\n        });\n      });\n    });\n  }\n\n}\n\nmodule.exportDefault(new BorrowerService());\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"exposures.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/borrowers/server/exposures.js                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet exposeQuery;\nmodule.link(\"../../queries/queryHelpers\", {\n  exposeQuery(v) {\n    exposeQuery = v;\n  }\n\n}, 1);\nlet adminBorrowers, borrowerSearch;\nmodule.link(\"../queries\", {\n  adminBorrowers(v) {\n    adminBorrowers = v;\n  },\n\n  borrowerSearch(v) {\n    borrowerSearch = v;\n  }\n\n}, 2);\nexposeQuery({\n  query: adminBorrowers,\n  options: {\n    allowFilterById: true\n  }\n});\nexposeQuery({\n  query: borrowerSearch,\n  overrides: {\n    validateParams: {\n      searchQuery: Match.Maybe(String)\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"hooks.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/borrowers/server/hooks.js                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet ROLES;\nmodule.link(\"../../constants\", {\n  ROLES(v) {\n    ROLES = v;\n  }\n\n}, 0);\nlet additionalDocumentsHook;\nmodule.link(\"../../helpers/sharedHooks\", {\n  additionalDocumentsHook(v) {\n    additionalDocumentsHook = v;\n  }\n\n}, 1);\nlet UpdateWatcherService;\nmodule.link(\"../../updateWatchers/server/UpdateWatcherService\", {\n  default(v) {\n    UpdateWatcherService = v;\n  }\n\n}, 2);\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 3);\nlet FileService;\nmodule.link(\"../../files/server/FileService\", {\n  default(v) {\n    FileService = v;\n  }\n\n}, 4);\nlet BorrowerSchemaAdmin;\nmodule.link(\"../schemas/BorrowerSchema\", {\n  BorrowerSchemaAdmin(v) {\n    BorrowerSchemaAdmin = v;\n  }\n\n}, 5);\nlet Borrowers;\nmodule.link(\"../borrowers\", {\n  default(v) {\n    Borrowers = v;\n  }\n\n}, 6);\nlet BORROWERS_COLLECTION;\nmodule.link(\"../borrowerConstants\", {\n  BORROWERS_COLLECTION(v) {\n    BORROWERS_COLLECTION = v;\n  }\n\n}, 7);\nlet initialDocuments, conditionalDocuments;\nmodule.link(\"../borrowersAdditionalDocuments\", {\n  initialDocuments(v) {\n    initialDocuments = v;\n  },\n\n  conditionalDocuments(v) {\n    conditionalDocuments = v;\n  }\n\n}, 8);\nlet BorrowerService;\nmodule.link(\"./BorrowerService\", {\n  default(v) {\n    BorrowerService = v;\n  }\n\n}, 9);\nBorrowers.after.insert(additionalDocumentsHook({\n  collection: BORROWERS_COLLECTION,\n  initialDocuments,\n  conditionalDocuments\n}));\nBorrowers.after.update(additionalDocumentsHook({\n  collection: BORROWERS_COLLECTION,\n  initialDocuments,\n  conditionalDocuments\n})); // Clean up mortgagenotes from all structures that come from this borrower\n\nBorrowers.before.remove((userId, {\n  _id: borrowerId\n}) => {\n  BorrowerService.cleanUpMortgageNotes({\n    borrowerId\n  });\n});\nUpdateWatcherService.addUpdateWatching({\n  collection: Borrowers,\n  fields: BorrowerSchemaAdmin._schemaKeys,\n  shouldWatch: ({\n    userId\n  }) => SecurityService.hasRole(userId, ROLES.USER) || SecurityService.hasRole(userId, ROLES.PRO)\n});\nBorrowers.after.remove((userId, {\n  _id\n}) => FileService.deleteAllFilesForDoc(_id));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/borrowers/server/methods.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 0);\nlet BorrowerService;\nmodule.link(\"./BorrowerService\", {\n  default(v) {\n    BorrowerService = v;\n  }\n\n}, 1);\nlet borrowerInsert, borrowerUpdate, borrowerDelete, pushBorrowerValue, popBorrowerValue, pullBorrowerValue, getReusableBorrowers;\nmodule.link(\"../methodDefinitions\", {\n  borrowerInsert(v) {\n    borrowerInsert = v;\n  },\n\n  borrowerUpdate(v) {\n    borrowerUpdate = v;\n  },\n\n  borrowerDelete(v) {\n    borrowerDelete = v;\n  },\n\n  pushBorrowerValue(v) {\n    pushBorrowerValue = v;\n  },\n\n  popBorrowerValue(v) {\n    popBorrowerValue = v;\n  },\n\n  pullBorrowerValue(v) {\n    pullBorrowerValue = v;\n  },\n\n  getReusableBorrowers(v) {\n    getReusableBorrowers = v;\n  }\n\n}, 2);\nlet checkInsertUserId;\nmodule.link(\"../../helpers/server/methodServerHelpers\", {\n  checkInsertUserId(v) {\n    checkInsertUserId = v;\n  }\n\n}, 3);\nborrowerInsert.setHandler((context, {\n  borrower,\n  userId\n}) => BorrowerService.insert({\n  borrower,\n  userId: checkInsertUserId(userId)\n}));\nborrowerUpdate.setHandler((context, params) => {\n  SecurityService.borrowers.isAllowedToUpdate(params.borrowerId);\n  return BorrowerService.update(params);\n});\nborrowerDelete.setHandler((context, params) => {\n  if (!params.loanId) {\n    SecurityService.checkCurrentUserIsAdmin();\n  } else {\n    SecurityService.borrowers.isAllowedToDelete(params.borrowerId);\n  }\n\n  return BorrowerService.remove(params);\n});\npushBorrowerValue.setHandler((context, params) => {\n  SecurityService.borrowers.isAllowedToUpdate(params.borrowerId);\n  return BorrowerService.pushValue(params);\n});\npopBorrowerValue.setHandler((context, params) => {\n  SecurityService.borrowers.isAllowedToUpdate(params.borrowerId);\n  return BorrowerService.popValue(params);\n});\npullBorrowerValue.setHandler((context, params) => {\n  SecurityService.borrowers.isAllowedToUpdate(params.borrowerId);\n  return BorrowerService.pullValue(params);\n});\ngetReusableBorrowers.setHandler((context, params) => {\n  SecurityService.loans.isAllowedToUpdate(params.loanId);\n  return BorrowerService.getReusableBorrowers((0, _objectSpread2.default)({}, params));\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"serverReducers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/borrowers/server/serverReducers.js                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet Borrowers;\nmodule.link(\"../borrowers\", {\n  default(v) {\n    Borrowers = v;\n  }\n\n}, 0);\nlet assigneeReducer;\nmodule.link(\"../../reducers/assigneeReducer\", {\n  default(v) {\n    assigneeReducer = v;\n  }\n\n}, 1);\nBorrowers.addReducers((0, _objectSpread2.default)({}, assigneeReducer()));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"borrowerConstants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/borrowers/borrowerConstants.js                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  BORROWERS_COLLECTION: () => BORROWERS_COLLECTION,\n  RESIDENCY_PERMIT: () => RESIDENCY_PERMIT,\n  GENDER: () => GENDER,\n  CIVIL_STATUS: () => CIVIL_STATUS,\n  OTHER_INCOME: () => OTHER_INCOME,\n  EXPENSES: () => EXPENSES,\n  BORROWER_QUERIES: () => BORROWER_QUERIES,\n  OWN_FUNDS_TYPES: () => OWN_FUNDS_TYPES,\n  RETIREMENT_AGE: () => RETIREMENT_AGE\n});\nconst BORROWERS_COLLECTION = 'borrowers';\nconst RESIDENCY_PERMIT = {\n  B: 'b',\n  C: 'c',\n  CI: 'ci',\n  F: 'f',\n  G: 'g',\n  L: 'l',\n  N: 'n',\n  S: 's',\n  NONE: 'none'\n};\nconst GENDER = {\n  M: 'M',\n  F: 'F',\n  OTHER: 'OTHER'\n};\nconst CIVIL_STATUS = {\n  MARRIED: 'MARRIED',\n  SINGLE: 'SINGLE',\n  PACSED: 'PACSED',\n  DIVORCED: 'DIVORCED',\n  WIDOW: 'WIDOW'\n};\nconst OTHER_INCOME = {\n  WELFARE: 'WELFARE',\n  PENSIONS: 'PENSIONS',\n  // REAL_ESTATE: 'REAL_ESTATE',\n  // INVESTMENT: 'INVESTMENT', // We probably don't need this\n  OTHER: 'OTHER'\n};\nconst EXPENSES = {\n  LEASING: 'LEASING',\n  PERSONAL_LOAN: 'PERSONAL_LOAN',\n  PENSIONS: 'PENSIONS',\n  THIRD_PARTY_FORTUNE_REIMBURSEMENT: 'THIRD_PARTY_FORTUNE_REIMBURSEMENT',\n  OTHER: 'OTHER'\n};\nconst BORROWER_QUERIES = {\n  ADMIN_BORROWERS: 'ADMIN_BORROWERS',\n  BORROWER_SEARCH: 'BORROWER_SEARCH'\n};\nconst OWN_FUNDS_TYPES = {\n  BANK_FORTUNE: 'bankFortune',\n  INSURANCE_2: 'insurance2',\n  INSURANCE_3A: 'insurance3A',\n  BANK_3A: 'bank3A',\n  INSURANCE_3B: 'insurance3B',\n  THIRD_PARTY_FORTUNE: 'thirdPartyFortune'\n};\nconst RETIREMENT_AGE = {\n  [GENDER.M]: 65,\n  [GENDER.F]: 64\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"borrowers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/borrowers/borrowers.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet BORROWERS_COLLECTION;\nmodule.link(\"./borrowerConstants\", {\n  BORROWERS_COLLECTION(v) {\n    BORROWERS_COLLECTION = v;\n  }\n\n}, 1);\nlet BorrowerSchema;\nmodule.link(\"./schemas/BorrowerSchema\", {\n  default(v) {\n    BorrowerSchema = v;\n  }\n\n}, 2);\nconst Borrowers = new Mongo.Collection(BORROWERS_COLLECTION); // Prevent all client side modifications of mongoDB\n\nBorrowers.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true\n});\nBorrowers.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false\n});\nBorrowers.attachSchema(BorrowerSchema);\nmodule.exportDefault(Borrowers);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"borrowersAdditionalDocuments.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/borrowers/borrowersAdditionalDocuments.js                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  initialDocuments: () => initialDocuments,\n  conditionalDocuments: () => conditionalDocuments\n});\nlet DOCUMENTS;\nmodule.link(\"../files/fileConstants\", {\n  DOCUMENTS(v) {\n    DOCUMENTS = v;\n  }\n\n}, 0);\nlet borrowerConstants;\nmodule.link(\"./borrowerConstants\", {\n  \"*\"(v) {\n    borrowerConstants = v;\n  }\n\n}, 1);\nconst initialDocuments = [{\n  id: DOCUMENTS.IDENTITY\n}, {\n  id: DOCUMENTS.DEBT_COLLECTION_REGISTER_EXTRACT\n}, {\n  id: DOCUMENTS.TAXES\n}, {\n  id: DOCUMENTS.SALARY_CERTIFICATE\n}, {\n  id: DOCUMENTS.LAST_SALARIES\n}, {\n  id: DOCUMENTS.OWN_FUNDS_JUSTIFICATION\n}];\nconst conditionalDocuments = [{\n  id: DOCUMENTS.RESIDENCY_PERMIT,\n  condition: ({\n    doc: {\n      isSwiss\n    }\n  }) => isSwiss === false\n}, {\n  id: DOCUMENTS.DIVORCE_RULING,\n  condition: ({\n    doc: {\n      civilStatus\n    }\n  }) => civilStatus === borrowerConstants.CIVIL_STATUS.DIVORCED\n}, {\n  id: DOCUMENTS.BONUSES,\n  condition: ({\n    doc: {\n      bonusExists\n    }\n  }) => bonusExists === true\n}, {\n  id: DOCUMENTS.PENSION_FUND_YEARLY_STATEMENT,\n  condition: ({\n    doc: {\n      insurance2\n    }\n  }) => insurance2 && insurance2.length > 0\n}, {\n  id: DOCUMENTS.THIRD_PILLAR_ACCOUNTS,\n  condition: ({\n    doc: {\n      insurance3A,\n      insurance3B,\n      bank3A\n    }\n  }) => insurance3A && insurance3A.length > 0 || insurance3B && insurance3B.length > 0 || bank3A && bank3A.length > 0\n}, {\n  id: DOCUMENTS.CURRENT_MORTGAGES,\n  condition: ({\n    doc: {\n      realEstate\n    }\n  }) => realEstate && realEstate.length > 0 && realEstate.some(({\n    loan\n  }) => loan > 0)\n}, {\n  id: DOCUMENTS.EXPENSES_JUSTIFICATION,\n  condition: ({\n    doc: {\n      expenses\n    }\n  }) => expenses && expenses.length > 0\n}, {\n  id: DOCUMENTS.OTHER_FORTUNE_JUSTIFICATION,\n  condition: ({\n    doc: {\n      otherFortune\n    }\n  }) => otherFortune && otherFortune.length > 0\n}, {\n  id: DOCUMENTS.OTHER_INCOME_JUSTIFICATION,\n  condition: ({\n    doc: {\n      otherIncome\n    }\n  }) => otherIncome && otherIncome.length > 0\n}];\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"fakes.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/borrowers/fakes.js                                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  emptyFakeBorrower: () => emptyFakeBorrower,\n  fakeBorrower: () => fakeBorrower,\n  completeFakeBorrower: () => completeFakeBorrower\n});\nlet OTHER_INCOME, EXPENSES;\nmodule.link(\"./borrowerConstants\", {\n  OTHER_INCOME(v) {\n    OTHER_INCOME = v;\n  },\n\n  EXPENSES(v) {\n    EXPENSES = v;\n  }\n\n}, 0);\nlet RESIDENCE_TYPE;\nmodule.link(\"../constants\", {\n  RESIDENCE_TYPE(v) {\n    RESIDENCE_TYPE = v;\n  }\n\n}, 1);\nconst emptyFakeBorrower = {};\nconst fakeBorrower = {\n  firstName: 'Marie',\n  lastName: 'Rochat',\n  gender: 'F',\n  address1: 'Chemin du Mont 3',\n  zipCode: 1400,\n  city: 'Yverdon-les-Bains',\n  citizenships: 'Suisse, Français',\n  birthDate: '1980-03-01',\n  birthPlace: 'Lausanne',\n  civilStatus: 'SINGLE',\n  childrenCount: 2,\n  company: 'Deloitte',\n  personalBank: 'BCGE',\n  isSwiss: true,\n  isUSPerson: false,\n  worksForOwnCompany: false,\n  sameAddress: true\n};\nconst completeFakeBorrower = (0, _objectSpread2.default)({}, fakeBorrower, {\n  salary: 300000,\n  bonusExists: true,\n  bonus2015: 15490,\n  bonus2016: 11140,\n  bonus2017: 13780,\n  bonus2018: 12300,\n  otherIncome: [{\n    value: 10000,\n    description: OTHER_INCOME.PENSIONS\n  }],\n  expenses: [{\n    value: 3000,\n    description: EXPENSES.LEASING\n  }, {\n    value: 4000,\n    description: EXPENSES.PERSONAL_LOAN\n  }],\n  realEstate: [{\n    value: 433000,\n    loan: 240000,\n    description: RESIDENCE_TYPE.MAIN_RESIDENCE\n  }],\n  bankFortune: 300000,\n  insurance2: [{\n    value: 120000,\n    description: 'Allianz'\n  }],\n  insurance3A: [{\n    value: 50000,\n    description: 'Swisslife'\n  }],\n  logic: {}\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/borrowers/index.js                                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./borrowers\", {\n  default: \"default\"\n}, 0);\nmodule.link(\"./methodDefinitions\", {\n  \"*\": \"*\"\n}, 1);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"links.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/borrowers/links.js                                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Borrowers;\nmodule.link(\"./borrowers\", {\n  default(v) {\n    Borrowers = v;\n  }\n\n}, 0);\nlet Loans, Users, MortgageNotes;\nmodule.link(\"..\", {\n  Loans(v) {\n    Loans = v;\n  },\n\n  Users(v) {\n    Users = v;\n  },\n\n  MortgageNotes(v) {\n    MortgageNotes = v;\n  }\n\n}, 1);\nBorrowers.addLinks({\n  user: {\n    field: 'userId',\n    collection: Users,\n    type: 'one'\n  },\n  loans: {\n    collection: Loans,\n    inversedBy: 'borrowers'\n  },\n  mortgageNotes: {\n    field: 'mortgageNoteLinks',\n    collection: MortgageNotes,\n    type: 'many',\n    metadata: true,\n    autoremove: true,\n    unique: true\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methodDefinitions.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/borrowers/methodDefinitions.js                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  borrowerInsert: () => borrowerInsert,\n  borrowerUpdate: () => borrowerUpdate,\n  borrowerDelete: () => borrowerDelete,\n  pushBorrowerValue: () => pushBorrowerValue,\n  popBorrowerValue: () => popBorrowerValue,\n  pullBorrowerValue: () => pullBorrowerValue,\n  getReusableBorrowers: () => getReusableBorrowers\n});\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet Method;\nmodule.link(\"../methods/methods\", {\n  Method(v) {\n    Method = v;\n  }\n\n}, 1);\nconst borrowerInsert = new Method({\n  name: 'borrowerInsert',\n  params: {\n    borrower: Object,\n    userId: Match.Optional(String)\n  }\n});\nconst borrowerUpdate = new Method({\n  name: 'borrowerUpdate',\n  params: {\n    borrowerId: String,\n    object: Object\n  }\n});\nconst borrowerDelete = new Method({\n  name: 'borrowerDelete',\n  params: {\n    borrowerId: String,\n    loanId: Match.Optional(String)\n  }\n});\nconst pushBorrowerValue = new Method({\n  name: 'pushBorrowerValue',\n  params: {\n    borrowerId: String,\n    object: Object\n  }\n});\nconst popBorrowerValue = new Method({\n  name: 'popBorrowerValue',\n  params: {\n    borrowerId: String,\n    object: Object\n  }\n});\nconst pullBorrowerValue = new Method({\n  name: 'pullBorrowerValue',\n  params: {\n    borrowerId: String,\n    object: Object\n  }\n});\nconst getReusableBorrowers = new Method({\n  name: 'getReusableBorrowers',\n  params: {\n    loanId: String,\n    borrowerId: String\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"queries.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/borrowers/queries.js                                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  adminBorrowers: () => adminBorrowers,\n  borrowerSearch: () => borrowerSearch\n});\nlet createRegexQuery, generateMatchAnyWordRegexp;\nmodule.link(\"../helpers/mongoHelpers\", {\n  createRegexQuery(v) {\n    createRegexQuery = v;\n  },\n\n  generateMatchAnyWordRegexp(v) {\n    generateMatchAnyWordRegexp = v;\n  }\n\n}, 0);\nlet adminBorrower;\nmodule.link(\"../fragments\", {\n  adminBorrower(v) {\n    adminBorrower = v;\n  }\n\n}, 1);\nlet BORROWER_QUERIES;\nmodule.link(\"./borrowerConstants\", {\n  BORROWER_QUERIES(v) {\n    BORROWER_QUERIES = v;\n  }\n\n}, 2);\nlet Borrowers;\nmodule.link(\".\", {\n  default(v) {\n    Borrowers = v;\n  }\n\n}, 3);\nconst adminBorrowers = Borrowers.createQuery(BORROWER_QUERIES.ADMIN_BORROWERS, adminBorrower(), {\n  scoped: true\n});\nconst borrowerSearch = Borrowers.createQuery(BORROWER_QUERIES.BORROWER_SEARCH, {\n  $filter({\n    filters,\n    params: {\n      searchQuery\n    }\n  }) {\n    // the following method forces one word to be found in lastname field\n    // and one word in firstName field.\n    const formattedSearchQuery = generateMatchAnyWordRegexp(searchQuery);\n    filters.$or = [createRegexQuery('_id', searchQuery), createRegexQuery('firstName', searchQuery), createRegexQuery('lastName', searchQuery), {\n      $and: [createRegexQuery('firstName', formattedSearchQuery), createRegexQuery('lastName', formattedSearchQuery)]\n    }];\n  },\n\n  name: 1,\n  createdAt: 1,\n  updatedAt: 1,\n  $options: {\n    sort: {\n      createdAt: -1\n    },\n    limit: 5\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"reducers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/borrowers/reducers.js                                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet addressReducer;\nmodule.link(\"../reducers/addressReducer\", {\n  default(v) {\n    addressReducer = v;\n  }\n\n}, 0);\nlet Borrowers;\nmodule.link(\"./borrowers\", {\n  default(v) {\n    Borrowers = v;\n  }\n\n}, 1);\nBorrowers.addReducers((0, _objectSpread2.default)({\n  name: {\n    body: {\n      firstName: 1,\n      lastName: 1\n    },\n    reduce: ({\n      firstName,\n      lastName\n    }) => [firstName, lastName].filter(x => x).join(' ')\n  },\n  age: {\n    body: {\n      birthDate: 1\n    },\n    reduce: ({\n      birthDate\n    }) => {\n      const age = Math.floor((new Date() - new Date(birthDate)) / 1000 / 60 / 60 / 24 / 365.25);\n      return age;\n    }\n  }\n}, addressReducer));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"contacts\":{\"schemas\":{\"contactSchema.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/contacts/schemas/contactSchema.js                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 0);\nlet createdAt, updatedAt, address;\nmodule.link(\"../../helpers/sharedSchemas\", {\n  createdAt(v) {\n    createdAt = v;\n  },\n\n  updatedAt(v) {\n    updatedAt = v;\n  },\n\n  address(v) {\n    address = v;\n  }\n\n}, 1);\nconst ContactSchema = new SimpleSchema((0, _objectSpread2.default)({\n  createdAt,\n  updatedAt,\n  firstName: String,\n  lastName: String\n}, address, {\n  emails: {\n    type: Array,\n    optional: true\n  },\n  'emails.$': Object,\n  'emails.$.address': {\n    type: String,\n    regEx: SimpleSchema.RegEx.Email\n  },\n  phoneNumbers: {\n    type: Array,\n    optional: true\n  },\n  'phoneNumbers.$': String,\n  userLink: {\n    type: String,\n    optional: true\n  }\n}));\nmodule.exportDefault(ContactSchema);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"ContactService.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/contacts/server/ContactService.js                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet Contacts;\nmodule.link(\"../contacts\", {\n  default(v) {\n    Contacts = v;\n  }\n\n}, 0);\nlet CollectionService;\nmodule.link(\"../../helpers/CollectionService\", {\n  default(v) {\n    CollectionService = v;\n  }\n\n}, 1);\nlet contact;\nmodule.link(\"../../fragments\", {\n  contact(v) {\n    contact = v;\n  }\n\n}, 2);\n\nclass ContactService extends CollectionService {\n  constructor() {\n    super(Contacts);\n  }\n\n  get(contactId) {\n    return this.fetchOne((0, _objectSpread2.default)({\n      $filters: {\n        _id: contactId\n      }\n    }, contact()));\n  }\n\n  changeOrganisations({\n    contactId,\n    newOrganisations = []\n  }) {\n    const {\n      organisations: oldOrganisations = []\n    } = this.get(contactId);\n    oldOrganisations.forEach(({\n      _id: organisationId\n    }) => this.removeLink({\n      id: contactId,\n      linkName: 'organisations',\n      linkId: organisationId\n    }));\n    newOrganisations.forEach(({\n      _id: organisationId,\n      metadata\n    }) => this.addLink({\n      id: contactId,\n      linkName: 'organisations',\n      linkId: organisationId,\n      metadata\n    }));\n  }\n\n}\n\nmodule.exportDefault(new ContactService());\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"exposures.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/contacts/server/exposures.js                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet exposeQuery;\nmodule.link(\"../../queries/queryHelpers\", {\n  exposeQuery(v) {\n    exposeQuery = v;\n  }\n\n}, 1);\nlet adminContacts, contactSearch;\nmodule.link(\"../queries\", {\n  adminContacts(v) {\n    adminContacts = v;\n  },\n\n  contactSearch(v) {\n    contactSearch = v;\n  }\n\n}, 2);\nexposeQuery({\n  query: adminContacts,\n  options: {\n    allowFilterById: true\n  }\n});\nexposeQuery({\n  query: contactSearch,\n  overrides: {\n    validateParams: {\n      searchQuery: Match.Maybe(String)\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"hooks.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/contacts/server/hooks.js                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet formatNumbersHook;\nmodule.link(\"../../../utils/phoneFormatting\", {\n  default(v) {\n    formatNumbersHook = v;\n  }\n\n}, 0);\nlet Contacts;\nmodule.link(\"../contacts\", {\n  default(v) {\n    Contacts = v;\n  }\n\n}, 1);\nformatNumbersHook(Contacts, 'phoneNumbers');\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/contacts/server/methods.js                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 0);\nlet contactInsert, contactRemove, contactUpdate, contactChangeOrganisations;\nmodule.link(\"../methodDefinitions\", {\n  contactInsert(v) {\n    contactInsert = v;\n  },\n\n  contactRemove(v) {\n    contactRemove = v;\n  },\n\n  contactUpdate(v) {\n    contactUpdate = v;\n  },\n\n  contactChangeOrganisations(v) {\n    contactChangeOrganisations = v;\n  }\n\n}, 1);\nlet ContactService;\nmodule.link(\"./ContactService\", {\n  default(v) {\n    ContactService = v;\n  }\n\n}, 2);\ncontactInsert.setHandler((context, {\n  contact\n}) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return ContactService.insert(contact);\n});\ncontactRemove.setHandler((context, {\n  contactId\n}) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return ContactService.remove(contactId);\n});\ncontactUpdate.setHandler((context, {\n  contactId,\n  object\n}) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return ContactService._update({\n    id: contactId,\n    object\n  });\n});\ncontactChangeOrganisations.setHandler((context, {\n  contactId,\n  newOrganisations\n}) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return ContactService.changeOrganisations({\n    contactId,\n    newOrganisations\n  });\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"serverReducers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/contacts/server/serverReducers.js                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet Contacts;\nmodule.link(\"../contacts\", {\n  default(v) {\n    Contacts = v;\n  }\n\n}, 0);\nlet tasksReducer;\nmodule.link(\"../../reducers/tasksReducer\", {\n  default(v) {\n    tasksReducer = v;\n  }\n\n}, 1);\nContacts.addReducers((0, _objectSpread2.default)({}, tasksReducer));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"contacts.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/contacts/contacts.js                                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet ContactSchema;\nmodule.link(\"./schemas/contactSchema\", {\n  default(v) {\n    ContactSchema = v;\n  }\n\n}, 1);\nlet CONTACTS_COLLECTION;\nmodule.link(\"./contactsConstants\", {\n  CONTACTS_COLLECTION(v) {\n    CONTACTS_COLLECTION = v;\n  }\n\n}, 2);\nconst Contacts = new Mongo.Collection(CONTACTS_COLLECTION);\nContacts.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true\n});\nContacts.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false\n});\nContacts.attachSchema(ContactSchema);\nmodule.exportDefault(Contacts);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"contactsConstants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/contacts/contactsConstants.js                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  CONTACTS_COLLECTION: () => CONTACTS_COLLECTION,\n  CONTACTS_QUERIES: () => CONTACTS_QUERIES\n});\nconst CONTACTS_COLLECTION = 'contacts';\nconst CONTACTS_QUERIES = {\n  ADMIN_CONTACTS: 'ADMIN_CONTACTS',\n  CONTACT_SEARCH: 'CONTACT_SEARCH'\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/contacts/index.js                                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./methodDefinitions\", {\n  \"*\": \"*\"\n}, 0);\nmodule.link(\"./contacts\", {\n  default: \"default\"\n}, 1);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"links.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/contacts/links.js                                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Contacts;\nmodule.link(\".\", {\n  default(v) {\n    Contacts = v;\n  }\n\n}, 0);\nlet Users, Organisations, Lenders, Offers;\nmodule.link(\"..\", {\n  Users(v) {\n    Users = v;\n  },\n\n  Organisations(v) {\n    Organisations = v;\n  },\n\n  Lenders(v) {\n    Lenders = v;\n  },\n\n  Offers(v) {\n    Offers = v;\n  }\n\n}, 1);\nContacts.addLinks({\n  user: {\n    collection: Users,\n    field: 'userLink',\n    type: 'one',\n    metadata: true\n  },\n  organisations: {\n    collection: Organisations,\n    inversedBy: 'contacts'\n  },\n  lenders: {\n    collection: Lenders,\n    inversedBy: 'contact'\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methodDefinitions.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/contacts/methodDefinitions.js                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  contactInsert: () => contactInsert,\n  contactRemove: () => contactRemove,\n  contactUpdate: () => contactUpdate,\n  contactChangeOrganisations: () => contactChangeOrganisations\n});\nlet Method;\nmodule.link(\"../methods/methods\", {\n  Method(v) {\n    Method = v;\n  }\n\n}, 0);\nconst contactInsert = new Method({\n  name: 'contactInsert',\n  params: {\n    contact: Object\n  }\n});\nconst contactRemove = new Method({\n  name: 'contactRemove',\n  params: {\n    contactId: String\n  }\n});\nconst contactUpdate = new Method({\n  name: 'contactUpdate',\n  params: {\n    contactId: String,\n    object: Object\n  }\n});\nconst contactChangeOrganisations = new Method({\n  name: 'contactChangeOrganisations',\n  params: {\n    contactId: String,\n    newOrganisations: Array\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"queries.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/contacts/queries.js                                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  adminContacts: () => adminContacts,\n  contactSearch: () => contactSearch\n});\nlet generateMatchAnyWordRegexp, createRegexQuery;\nmodule.link(\"../helpers/mongoHelpers\", {\n  generateMatchAnyWordRegexp(v) {\n    generateMatchAnyWordRegexp = v;\n  },\n\n  createRegexQuery(v) {\n    createRegexQuery = v;\n  }\n\n}, 0);\nlet contact;\nmodule.link(\"../fragments\", {\n  contact(v) {\n    contact = v;\n  }\n\n}, 1);\nlet CONTACTS_QUERIES;\nmodule.link(\"./contactsConstants\", {\n  CONTACTS_QUERIES(v) {\n    CONTACTS_QUERIES = v;\n  }\n\n}, 2);\nlet Contacts;\nmodule.link(\".\", {\n  default(v) {\n    Contacts = v;\n  }\n\n}, 3);\nconst adminContacts = Contacts.createQuery(CONTACTS_QUERIES.ADMIN_CONTACTS, contact());\nconst contactSearch = Contacts.createQuery(CONTACTS_QUERIES.CONTACT_SEARCH, {\n  $filter({\n    filters,\n    params: {\n      searchQuery\n    }\n  }) {\n    const formattedSearchQuery = generateMatchAnyWordRegexp(searchQuery);\n    filters.$or = [createRegexQuery('_id', searchQuery), createRegexQuery('firstName', searchQuery), createRegexQuery('lastName', searchQuery), {\n      $and: [createRegexQuery('firstName', formattedSearchQuery), createRegexQuery('lastName', formattedSearchQuery)]\n    }];\n  },\n\n  name: 1,\n  organisations: {\n    name: 1\n  },\n  $options: {\n    sort: {\n      createdAt: -1\n    },\n    limit: 5\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"reducers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/contacts/reducers.js                                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet addressReducer;\nmodule.link(\"../reducers/addressReducer\", {\n  default(v) {\n    addressReducer = v;\n  }\n\n}, 0);\nlet Contacts;\nmodule.link(\"./contacts\", {\n  default(v) {\n    Contacts = v;\n  }\n\n}, 1);\nlet fullOffer;\nmodule.link(\"../fragments\", {\n  fullOffer(v) {\n    fullOffer = v;\n  }\n\n}, 2);\nContacts.addReducers((0, _objectSpread2.default)({\n  name: {\n    body: {\n      firstName: 1,\n      lastName: 1\n    },\n    reduce: ({\n      firstName,\n      lastName\n    }) => [firstName, lastName].filter(x => x).join(' ')\n  },\n  email: {\n    body: {\n      emails: 1\n    },\n    reduce: ({\n      emails\n    }) => emails && !!emails.length && emails[0].address\n  },\n  phoneNumber: {\n    body: {\n      phoneNumbers: 1\n    },\n    reduce: ({\n      phoneNumbers\n    }) => phoneNumbers && !!phoneNumbers.length && phoneNumbers[0]\n  },\n  offers: {\n    body: {\n      lenders: {\n        offers: fullOffer()\n      }\n    },\n    reduce: ({\n      lenders = []\n    }) => {\n      const contactOffers = lenders.reduce((allOffers, {\n        offers = []\n      }) => [...allOffers, ...offers], []);\n      return contactOffers;\n    }\n  }\n}, addressReducer));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"cronitor\":{\"server\":{\"CronitorService.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/cronitor/server/CronitorService.js                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  default: () => CronitorService\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet https;\nmodule.link(\"https\", {\n  default(v) {\n    https = v;\n  }\n\n}, 1);\nlet queryString;\nmodule.link(\"query-string\", {\n  default(v) {\n    queryString = v;\n  }\n\n}, 2);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst CRONITOR_URL = 'https://cronitor.io';\nconst ACTIONS = {\n  RUN: 'run',\n  COMPLETE: 'complete',\n  PAUSE: 'pause',\n  FAIL: 'fail'\n};\nconst REQ_TIMEOUT = 10000;\n\nclass CronitorService {\n  constructor({\n    id,\n    authKey\n  }) {\n    _defineProperty(this, \"run\", () => {\n      const urlObj = this.buildUrlObj({\n        action: ACTIONS.RUN\n      });\n      const url = this.buildUrl({\n        urlObj\n      });\n      return this.getWithTimeout({\n        url\n      });\n    });\n\n    _defineProperty(this, \"complete\", msg => {\n      const urlObj = this.buildUrlObj({\n        action: ACTIONS.COMPLETE\n      });\n\n      if (msg) {\n        if (!urlObj.qs) {\n          urlObj.qs = {};\n        }\n\n        urlObj.qs.msg = JSON.stringify(msg);\n      }\n\n      const url = this.buildUrl({\n        urlObj\n      });\n      return this.getWithTimeout({\n        url\n      });\n    });\n\n    _defineProperty(this, \"pause\", hours => {\n      const urlObj = this.buildUrlObj({\n        action: ACTIONS.PAUSE\n      });\n      urlObj.basePath = `${urlObj.basePath}/${hours}`;\n      const url = this.buildUrl({\n        urlObj\n      });\n      return this.getWithTimeout({\n        url\n      });\n    });\n\n    _defineProperty(this, \"fail\", msg => {\n      const urlObj = this.buildUrlObj({\n        action: ACTIONS.FAIL\n      });\n\n      if (msg) {\n        if (!urlObj.qs) {\n          urlObj.qs = {};\n        }\n\n        if (msg.sanitizedError) {\n          urlObj.qs.msg = JSON.stringify(msg.sanitizedError.message);\n        } else {\n          urlObj.qs.msg = JSON.stringify(msg);\n        }\n      }\n\n      const url = this.buildUrl({\n        urlObj\n      });\n      return this.getWithTimeout({\n        url\n      });\n    });\n\n    _defineProperty(this, \"buildUrlObj\", ({\n      action\n    }) => {\n      const urlObj = {\n        basePath: `${this.baseUrl}/${this.id}/${action}`\n      };\n\n      if (this.authKey) {\n        urlObj.qs = {\n          auth_key: this.authKey\n        };\n      }\n\n      return urlObj;\n    });\n\n    _defineProperty(this, \"buildUrl\", ({\n      urlObj\n    }) => urlObj.basePath + (urlObj.qs ? `?${queryString.stringify(urlObj.qs)}` : ''));\n\n    _defineProperty(this, \"getWithTimeout\", ({\n      url\n    }) => {\n      const promise = new Promise((resolve, reject) => {\n        https.get(url, response => {\n          let data = '';\n          response.on('data', chunk => {\n            data += chunk;\n          });\n          response.on('end', () => {\n            resolve(data);\n          });\n        }).on('error', reject);\n      });\n      const timeout = new Promise((resolve, reject) => {\n        const wait = Meteor.setTimeout(() => {\n          Meteor.clearTimeout(wait);\n          reject(new Meteor.Error('Timed out'));\n        }, REQ_TIMEOUT);\n      });\n      return Promise.race([promise, timeout]);\n    });\n\n    this.id = id;\n    this.authKey = authKey;\n    this.baseUrl = CRONITOR_URL;\n  }\n\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"events\":{\"ClientEventService\":{\"ClientEventService.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/events/ClientEventService/ClientEventService.js                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet EventEmitter;\nmodule.link(\"events\", {\n  EventEmitter(v) {\n    EventEmitter = v;\n  }\n\n}, 0);\nlet EventService;\nmodule.link(\"../EventService\", {\n  default(v) {\n    EventService = v;\n  }\n\n}, 1);\nmodule.link(\"./eventNames\", {\n  \"*\": \"*\"\n}, 2);\nmodule.exportDefault(new EventService({\n  emmitter: new EventEmitter()\n}));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"eventNames.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/events/ClientEventService/eventNames.js                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  MODIFIED_FILES_EVENT: () => MODIFIED_FILES_EVENT,\n  LOAD_LOAN: () => LOAD_LOAN,\n  CALLED_METHOD: () => CALLED_METHOD\n});\nconst MODIFIED_FILES_EVENT = 'MODIFIED_FILES_EVENT';\nconst LOAD_LOAN = 'LOAD_LOAN';\nconst CALLED_METHOD = 'CALLED_METHOD';\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/events/ClientEventService/index.js                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./ClientEventService\", {\n  default: \"default\"\n}, 0);\nmodule.link(\"./eventNames\", {\n  \"*\": \"*\"\n}, 1);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"ServerEventService.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/events/server/ServerEventService.js                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet EventEmitter;\nmodule.link(\"events\", {\n  EventEmitter(v) {\n    EventEmitter = v;\n  }\n\n}, 0);\nlet EventService;\nmodule.link(\"../EventService\", {\n  default(v) {\n    EventService = v;\n  }\n\n}, 1);\nmodule.exportDefault(new EventService({\n  emmitter: new EventEmitter()\n}));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"registerServerListeners.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/events/server/registerServerListeners.js                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"../../activities/server/activityListeners\");\nmodule.link(\"../../analytics/server/activityListeners\");\nmodule.link(\"../../email/server/emailListeners\");\nmodule.link(\"../../loans/server/loanListeners\");\nmodule.link(\"../../slack/server/slackListeners\");\nmodule.link(\"../../tasks/server/taskListeners\");\nmodule.link(\"../../notifications/server/notificationListeners\");\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"EventService.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/events/EventService.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  default: () => EventService\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nconst IS_LOGGING = !Meteor.isProduction;\n\nclass EventService {\n  constructor({\n    emmitter\n  }) {\n    this.emmitter = emmitter; // contains arrays of listener functions, grouped by event names\n\n    this.listenerFunctions = {};\n    this.addErrorListener();\n  }\n\n  emit(eventName, ...args) {\n    this.logEmittedEvent(eventName, ...args);\n    this.emmitter.emit(eventName, ...args);\n  }\n\n  getBeforeMethodEventName(name) {\n    return `__before_${name}`;\n  }\n\n  emitBeforeMethod({\n    name\n  }, ...args) {\n    this.emit(this.getBeforeMethodEventName(name), ...args);\n  }\n\n  emitAfterMethod({\n    name\n  }, ...args) {\n    this.emit(name, ...args);\n  }\n\n  addListener(eventName, listenerFunction) {\n    this.emmitter.addListener(eventName, (...args) => {\n      this.logListener(eventName, ...args);\n      listenerFunction(...args);\n    });\n    const listenersForEvent = this.listenerFunctions[eventName] || [];\n    this.listenerFunctions[eventName] = [...listenersForEvent, listenerFunction];\n  }\n\n  addBeforeMethodListener(methods, listenerFunction) {\n    if (Array.isArray(methods)) {\n      methods.forEach(method => {\n        this.checkMethod(method);\n        const {\n          config: {\n            name\n          }\n        } = method;\n        this.addListener(this.getBeforeMethodEventName(name), listenerFunction);\n      });\n    } else {\n      this.checkMethod(methods);\n      const {\n        config: {\n          name\n        }\n      } = methods;\n      this.addListener(this.getBeforeMethodEventName(name), listenerFunction);\n    }\n  }\n\n  addAfterMethodListener(methods, listenerFunction) {\n    if (Array.isArray(methods)) {\n      methods.forEach(method => {\n        this.checkMethod(method);\n        const {\n          config: {\n            name\n          }\n        } = method;\n        this.addListener(name, listenerFunction);\n      });\n    } else {\n      this.checkMethod(methods);\n      const {\n        config: {\n          name\n        }\n      } = methods;\n      this.addListener(name, listenerFunction);\n    }\n  }\n\n  checkMethod(method) {\n    if (!method || !method.config) {\n      throw new Error('Method does not exist in EventService');\n    }\n  }\n\n  addErrorListener() {\n    this.addListener('error', error => {\n      console.log('An error occured in an event listener:');\n      console.log(error);\n      throw error;\n    });\n  }\n\n  logEmittedEvent(eventName, ...args) {\n    if (IS_LOGGING && !Meteor.isTest) {// console.log(`Event \"${eventName}\" triggered with params:`);\n      // console.log(params);\n    }\n  }\n\n  logListener(eventName, ...args) {\n    if (IS_LOGGING && !Meteor.isTest) {\n      console.log(`Event \"${eventName}\" listened to with args:`);\n      args.forEach(arg => console.log(arg));\n    }\n  }\n\n  getListenerFunctions(eventName) {\n    return this.listenerFunctions[eventName] || [];\n  }\n\n  removeListener(eventName, listener) {\n    this.emmitter.removeListener(eventName, listener);\n  }\n\n  removeAllListeners(eventName) {\n    this.emmitter.removeAllListeners(eventName);\n  }\n\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"files\":{\"server\":{\"FileService.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/files/server/FileService.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet readFileBuffer, removeFile;\nmodule.link(\"../../../utils/filesUtils\", {\n  readFileBuffer(v) {\n    readFileBuffer = v;\n  },\n\n  removeFile(v) {\n    removeFile = v;\n  }\n\n}, 1);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 2);\nlet HTTP_STATUS_CODES;\nmodule.link(\"../../RESTAPI/server/restApiConstants\", {\n  HTTP_STATUS_CODES(v) {\n    HTTP_STATUS_CODES = v;\n  }\n\n}, 3);\nlet FILE_STATUS, S3_ACLS;\nmodule.link(\"../fileConstants\", {\n  FILE_STATUS(v) {\n    FILE_STATUS = v;\n  },\n\n  S3_ACLS(v) {\n    S3_ACLS = v;\n  }\n\n}, 4);\nlet S3Service;\nmodule.link(\"./S3Service\", {\n  default(v) {\n    S3Service = v;\n  }\n\n}, 5);\nlet getS3FileKey;\nmodule.link(\"./meteor-slingshot-server\", {\n  getS3FileKey(v) {\n    getS3FileKey = v;\n  }\n\n}, 6);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass FileService {\n  constructor() {\n    _defineProperty(this, \"listFilesForDoc\", (docId, subdocument) => {\n      const prefix = subdocument ? `${docId}/${subdocument}` : docId;\n      return S3Service.listObjectsWithMetadata(prefix).then(results => results.map(this.formatFile));\n    });\n\n    _defineProperty(this, \"listFilesForDocByCategory\", (docId, subdocument) => this.listFilesForDoc(docId, subdocument).then(this.groupFilesByCategory));\n\n    _defineProperty(this, \"setFileStatus\", (key, status) => {\n      if (status === FILE_STATUS.VALID) {\n        return S3Service.updateMetadata(key, {\n          status,\n          message: ''\n        });\n      }\n\n      return S3Service.updateMetadata(key, {\n        status\n      });\n    });\n\n    _defineProperty(this, \"setFileError\", (key, errorMessage) => S3Service.updateMetadata(key, {\n      status: FILE_STATUS.ERROR,\n      message: errorMessage\n    }));\n\n    _defineProperty(this, \"setFileValid\", key => S3Service.updateMetadata(key, {\n      status: FILE_STATUS.VALID,\n      message: ''\n    }));\n\n    _defineProperty(this, \"deleteFile\", S3Service.deleteObject);\n\n    _defineProperty(this, \"deleteAllFilesForDoc\", (docId, subdocument) => {\n      const prefix = subdocument ? `${docId}/${subdocument}` : docId;\n      return S3Service.deleteObjectsWithPrefix(prefix);\n    });\n\n    _defineProperty(this, \"groupFilesByCategory\", files => files.reduce((groupedFiles, file) => {\n      const category = file.Key.split('/')[1];\n      const currentCategoryFiles = groupedFiles[category] || [];\n      return (0, _objectSpread2.default)({}, groupedFiles, {\n        [category]: [...currentCategoryFiles, file]\n      });\n    }, {}));\n\n    _defineProperty(this, \"updateDocumentsCache\", ({\n      docId,\n      collection\n    }) => this.listFilesForDocByCategory(docId).then(documents => Mongo.Collection.get(collection).update({\n      _id: docId\n    }, {\n      $set: {\n        documents\n      }\n    })));\n\n    _defineProperty(this, \"formatFile\", file => {\n      let fileName = file.name;\n\n      if (!fileName) {\n        const keyParts = file.Key.split('/');\n        fileName = keyParts[keyParts.length - 1];\n      }\n\n      return (0, _objectSpread2.default)({}, file, {\n        name: fileName\n      });\n    });\n\n    _defineProperty(this, \"uploadFileAPI\", ({\n      file,\n      docId,\n      id,\n      collection\n    }) => {\n      const {\n        originalFilename,\n        path\n      } = file;\n      const key = getS3FileKey({\n        name: originalFilename\n      }, {\n        docId,\n        id\n      });\n      return S3Service.putObject(readFileBuffer(path), key, {}, S3_ACLS.PUBLIC_READ_WRITE).then(() => this.updateDocumentsCache({\n        docId,\n        collection\n      })).then(() => this.listFilesForDoc(docId)).then(files => {\n        removeFile(path);\n        return {\n          files\n        };\n      });\n    });\n\n    _defineProperty(this, \"deleteFileAPI\", ({\n      docId,\n      collection,\n      key\n    }) => this.listFilesForDoc(docId).then(files => {\n      const keyExists = files.map(({\n        Key\n      }) => Key).some(Key => Key === key);\n\n      if (!keyExists) {\n        throw new Meteor.Error(HTTP_STATUS_CODES.NOT_FOUND, `Key ${key} not found`);\n      }\n\n      return S3Service.deleteObject(key);\n    }).then(() => this.updateDocumentsCache({\n      docId,\n      collection\n    })).then(() => this.listFilesForDoc(docId)).then(files => ({\n      deletedFiles: [{\n        Key: key\n      }],\n      remainingFiles: files\n    })));\n  }\n\n}\n\nmodule.exportDefault(new FileService());\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"S3Service.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/files/server/S3Service.js                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet AWS;\nmodule.link(\"aws-sdk\", {\n  default(v) {\n    AWS = v;\n  }\n\n}, 1);\nlet Roles;\nmodule.link(\"meteor/alanning:roles\", {\n  Roles(v) {\n    Roles = v;\n  }\n\n}, 2);\nlet Loans, Borrowers, Properties, Promotions;\nmodule.link(\"../..\", {\n  Loans(v) {\n    Loans = v;\n  },\n\n  Borrowers(v) {\n    Borrowers = v;\n  },\n\n  Properties(v) {\n    Properties = v;\n  },\n\n  Promotions(v) {\n    Promotions = v;\n  }\n\n}, 3);\nlet TEST_BUCKET_NAME, S3_ENDPOINT, OBJECT_STORAGE_PATH;\nmodule.link(\"../fileConstants\", {\n  TEST_BUCKET_NAME(v) {\n    TEST_BUCKET_NAME = v;\n  },\n\n  S3_ENDPOINT(v) {\n    S3_ENDPOINT = v;\n  },\n\n  OBJECT_STORAGE_PATH(v) {\n    OBJECT_STORAGE_PATH = v;\n  }\n\n}, 4);\nlet PROPERTY_CATEGORY;\nmodule.link(\"../../constants\", {\n  PROPERTY_CATEGORY(v) {\n    PROPERTY_CATEGORY = v;\n  }\n\n}, 5);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst {\n  API_KEY,\n  SECRET_KEY\n} = Meteor.settings.exoscale;\n\nclass S3Service {\n  constructor() {\n    _defineProperty(this, \"setupS3\", () => {\n      // API Ref: https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html\n      AWS.config.update({\n        accessKeyId: API_KEY,\n        secretAccessKey: SECRET_KEY\n      });\n      this.s3 = new AWS.S3({\n        signatureVersion: 'v4',\n        endpoint: S3_ENDPOINT\n      });\n    });\n\n    _defineProperty(this, \"setBucket\", () => {\n      if (Meteor.isTest || Meteor.isAppTest) {\n        this.params = {\n          Bucket: TEST_BUCKET_NAME\n        };\n      } else {\n        this.params = {\n          Bucket: Meteor.settings.storage.bucketName\n        };\n      }\n    });\n\n    _defineProperty(this, \"makeParams\", (extraParams = {}) => (0, _objectSpread2.default)({}, this.params, extraParams));\n\n    _defineProperty(this, \"isAllowedToAccess\", key => {\n      const loggedInUser = Meteor.userId();\n\n      if (Roles.userIsInRole(loggedInUser, 'admin') || Roles.userIsInRole(loggedInUser, 'dev')) {\n        return true;\n      } // Check if this user is the owner of the document\n\n\n      const keyId = key.split('/')[0];\n      const loanFound = !!Loans.findOne({\n        _id: keyId,\n        userId: loggedInUser\n      });\n\n      if (loanFound) {\n        return true;\n      }\n\n      const borrowerFound = !!Borrowers.findOne({\n        _id: keyId,\n        userId: loggedInUser\n      });\n\n      if (borrowerFound) {\n        return true;\n      }\n\n      const property = Properties.findOne({\n        _id: keyId\n      });\n\n      if (property) {\n        if (!property.category || property.category === PROPERTY_CATEGORY.USER) {\n          if (property.userId === loggedInUser) {\n            return true;\n          }\n\n          throw new Meteor.Error('Unauthorized download');\n        }\n\n        return true;\n      }\n\n      const promotionFound = !!Promotions.findOne({\n        _id: keyId\n      });\n\n      if (promotionFound) {\n        return true;\n      }\n\n      throw new Meteor.Error('Unauthorized download');\n    });\n\n    _defineProperty(this, \"putObject\", (binaryData, Key, Metadata, ACL = 'bucket-owner-full-control') => this.callS3Method('putObject', {\n      Body: binaryData,\n      Key,\n      Metadata,\n      ACL\n    }));\n\n    _defineProperty(this, \"deleteObject\", Key => this.callS3Method('deleteObject', {\n      Key\n    }));\n\n    _defineProperty(this, \"deleteObjects\", keys => this.callS3Method('deleteObjects', {\n      Delete: {\n        Objects: keys.map(Key => ({\n          Key\n        }))\n      }\n    }));\n\n    _defineProperty(this, \"deleteObjectsWithPrefix\", prefix => this.listObjects(prefix).then(results => results.map(({\n      Key\n    }) => Key)).then(this.deleteObjects));\n\n    _defineProperty(this, \"getObject\", Key => this.callS3Method('getObject', {\n      Key\n    }));\n\n    _defineProperty(this, \"listObjects\", Prefix => this.callS3Method('listObjectsV2', {\n      Prefix\n    }).then(results => results.Contents));\n\n    _defineProperty(this, \"listObjectsWithMetadata\", Prefix => this.listObjects(Prefix).then(results => Promise.all(results.map(object => this.headObject(object.Key).then(({\n      Metadata,\n      ContentDisposition\n    }) => {\n      const name = ContentDisposition && decodeURIComponent(ContentDisposition.match(/filename=\"(.*)\"/)[1]);\n      return (0, _objectSpread2.default)({}, object, Metadata, {\n        url: this.buildFileUrl(object),\n        name\n      });\n    })))));\n\n    _defineProperty(this, \"copyObject\", params => this.callS3Method('copyObject', params));\n\n    _defineProperty(this, \"headObject\", Key => this.callS3Method('headObject', {\n      Key\n    }));\n\n    _defineProperty(this, \"callS3Method\", (methodName, params) => this.promisify(methodName, this.makeParams(params)));\n\n    _defineProperty(this, \"promisify\", (methodName, params) => new Promise((resolve, reject) => this.s3[methodName](params, (err, data) => err ? reject(err) : resolve(data))));\n\n    _defineProperty(this, \"updateMetadata\", (key, newMetadata) => this.headObject(key).then(({\n      Metadata: oldMetaData\n    }) => this.copyObject({\n      Key: key,\n      Metadata: (0, _objectSpread2.default)({}, oldMetaData, newMetadata),\n      CopySource: `/${this.params.Bucket}/${key}`,\n      MetadataDirective: 'REPLACE'\n    })));\n\n    _defineProperty(this, \"buildFileUrl\", file => `${OBJECT_STORAGE_PATH}/${file.Key}`);\n\n    _defineProperty(this, \"makeSignedUrl\", Key => this.s3.getSignedUrl('getObject', {\n      Bucket: this.params.Bucket,\n      Key,\n      Expires: 180\n    }));\n\n    this.setupS3();\n    this.setBucket();\n  }\n\n}\n\nmodule.exportDefault(new S3Service());\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"meteor-slingshot-server.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/files/server/meteor-slingshot-server.js                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  getS3FileKey: () => getS3FileKey\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Slingshot;\nmodule.link(\"meteor/edgee:slingshot\", {\n  Slingshot(v) {\n    Slingshot = v;\n  }\n\n}, 1);\nlet ROLES;\nmodule.link(\"../../constants\", {\n  ROLES(v) {\n    ROLES = v;\n  }\n\n}, 2);\nlet COLLECTIONS;\nmodule.link(\"../../constants\", {\n  COLLECTIONS(v) {\n    COLLECTIONS = v;\n  }\n\n}, 3);\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 4);\nlet SLINGSHOT_DIRECTIVE_NAME, MAX_FILE_SIZE, ALLOWED_FILE_TYPES;\nmodule.link(\"../fileConstants\", {\n  SLINGSHOT_DIRECTIVE_NAME(v) {\n    SLINGSHOT_DIRECTIVE_NAME = v;\n  },\n\n  MAX_FILE_SIZE(v) {\n    MAX_FILE_SIZE = v;\n  },\n\n  ALLOWED_FILE_TYPES(v) {\n    ALLOWED_FILE_TYPES = v;\n  }\n\n}, 5);\nlet uploadDirective;\nmodule.link(\"./uploadDirective\", {\n  default(v) {\n    uploadDirective = v;\n  }\n\n}, 6);\n\nconst getS3FileKey = (file, {\n  docId,\n  id\n}) => `${docId}/${id}/${file.name.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '')}`;\n\nSlingshot.createDirective(SLINGSHOT_DIRECTIVE_NAME, uploadDirective, {\n  maxSize: MAX_FILE_SIZE,\n  allowedFileTypes: ALLOWED_FILE_TYPES,\n\n  authorize(file, {\n    collection,\n    docId\n  }) {\n    // Don't use arrow function, this is the current object here\n    // Check for devs and admins\n    if (SecurityService.hasMinimumRole({\n      userId: this.userId,\n      role: ROLES.ADMIN\n    })) {\n      return true;\n    } // Deny uploads if user is not logged in.\n\n\n    if (!this.userId) {\n      throw new Meteor.Error('Login Required', 'Please login before uploading files');\n    }\n\n    if (!Object.values(COLLECTIONS).includes(collection)) {\n      throw new Meteor.Error('Invalid collection', \"Collection doesn't exist\");\n    }\n\n    SecurityService.isAllowedToModifyFiles({\n      collection,\n      docId,\n      userId: this.userId,\n      fileKey: docId\n    });\n    return true;\n  },\n\n  key: getS3FileKey\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/files/server/methods.js                                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 0);\nlet deleteFile, setFileStatus, setFileError, downloadFile, getSignedUrl, updateDocumentsCache;\nmodule.link(\"../methodDefinitions\", {\n  deleteFile(v) {\n    deleteFile = v;\n  },\n\n  setFileStatus(v) {\n    setFileStatus = v;\n  },\n\n  setFileError(v) {\n    setFileError = v;\n  },\n\n  downloadFile(v) {\n    downloadFile = v;\n  },\n\n  getSignedUrl(v) {\n    getSignedUrl = v;\n  },\n\n  updateDocumentsCache(v) {\n    updateDocumentsCache = v;\n  }\n\n}, 1);\nlet FileService;\nmodule.link(\"./FileService\", {\n  default(v) {\n    FileService = v;\n  }\n\n}, 2);\nlet S3Service;\nmodule.link(\"./S3Service\", {\n  default(v) {\n    S3Service = v;\n  }\n\n}, 3);\ndeleteFile.setHandler((context, {\n  collection,\n  docId,\n  fileKey\n}) => {\n  context.unblock();\n  SecurityService.isAllowedToModifyFiles({\n    collection,\n    docId,\n    userId: context.userId,\n    fileKey\n  });\n  return FileService.deleteFile(fileKey).then(() => FileService.updateDocumentsCache({\n    docId,\n    collection\n  }));\n});\nsetFileStatus.setHandler((context, {\n  fileKey,\n  newStatus\n}) => {\n  context.unblock();\n  SecurityService.checkCurrentUserIsAdmin(); // Should update documents cache when we start using this\n\n  return FileService.setFileStatus(fileKey, newStatus);\n});\nsetFileError.setHandler((context, {\n  fileKey,\n  error\n}) => {\n  context.unblock();\n  SecurityService.checkCurrentUserIsAdmin(); // Should update documents cache when we start using this\n\n  return FileService.setFileError(fileKey, error);\n});\ndownloadFile.setHandler((context, {\n  key\n}) => {\n  context.unblock();\n  S3Service.isAllowedToAccess(key);\n  return S3Service.getObject(key);\n});\ngetSignedUrl.setHandler((context, {\n  key\n}) => {\n  context.unblock();\n  SecurityService.checkCurrentUserIsAdmin();\n  return S3Service.makeSignedUrl(key);\n});\nupdateDocumentsCache.setHandler((context, params) => {\n  context.unblock();\n  SecurityService.checkLoggedIn();\n  return FileService.updateDocumentsCache(params);\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"uploadDirective.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/files/server/uploadDirective.js                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Match, check;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  },\n\n  check(v) {\n    check = v;\n  }\n\n}, 1);\nlet Slingshot;\nmodule.link(\"meteor/edgee:slingshot\", {\n  Slingshot(v) {\n    Slingshot = v;\n  }\n\n}, 2);\n\nlet _;\n\nmodule.link(\"meteor/underscore\", {\n  _(v) {\n    _ = v;\n  }\n\n}, 3);\nlet crypto;\nmodule.link(\"crypto\", {\n  default(v) {\n    crypto = v;\n  }\n\n}, 4);\nlet OBJECT_STORAGE_PATH, BUCKET_NAME, OBJECT_STORAGE_REGION, FILE_STATUS, S3_ACLS, MAX_FILE_SIZE, ONE_KB;\nmodule.link(\"../fileConstants\", {\n  OBJECT_STORAGE_PATH(v) {\n    OBJECT_STORAGE_PATH = v;\n  },\n\n  BUCKET_NAME(v) {\n    BUCKET_NAME = v;\n  },\n\n  OBJECT_STORAGE_REGION(v) {\n    OBJECT_STORAGE_REGION = v;\n  },\n\n  FILE_STATUS(v) {\n    FILE_STATUS = v;\n  },\n\n  S3_ACLS(v) {\n    S3_ACLS = v;\n  },\n\n  MAX_FILE_SIZE(v) {\n    MAX_FILE_SIZE = v;\n  },\n\n  ONE_KB(v) {\n    ONE_KB = v;\n  }\n\n}, 5);\nconst {\n  API_KEY,\n  SECRET_KEY\n} = Meteor.settings.exoscale;\nconst FIVE_MINUTES = 5 * 60 * 1000;\n\nconst hmac256 = (key, data, encoding) => crypto.createHmac('sha256', key).update(Buffer.from(data).toString('utf-8')).digest(encoding);\n\nconst formatNumber = (num, digits) => {\n  const string = String(num);\n  return Array(digits - string.length + 1).join('0').concat(string);\n};\n\nconst exoscaleStorageService = {\n  accessId: 'AWSAccessKeyId',\n  secretKey: 'AWSSecretAccessKey',\n  directiveMatch: {\n    bucket: String,\n    bucketUrl: Match.OneOf(String, Function),\n    region: String,\n    AWSAccessKeyId: String,\n    AWSSecretAccessKey: String,\n    acl: Match.Optional(Match.Where(acl => {\n      check(acl, String);\n      return Object.values(S3_ACLS).indexOf(acl) >= 0;\n    })),\n    key: Match.OneOf(String, Function),\n    expire: Match.Where(expire => {\n      check(expire, Number);\n      return expire > 0;\n    }),\n    cacheControl: Match.Optional(String),\n    contentDisposition: Match.Optional(Match.OneOf(String, Function, null)),\n    'x-amz-meta-status': Match.Optional(String)\n  },\n  directiveDefault: {\n    bucket: BUCKET_NAME,\n    bucketUrl: OBJECT_STORAGE_PATH,\n    region: OBJECT_STORAGE_REGION,\n    expire: FIVE_MINUTES,\n    AWSAccessKeyId: API_KEY,\n    AWSSecretAccessKey: SECRET_KEY,\n    acl: 'private'\n  },\n\n  getContentDisposition(method, directive, file, meta) {\n    let getContentDisposition = directive.contentDisposition;\n\n    if (!_.isFunction(getContentDisposition)) {\n      getContentDisposition = function () {\n        const filename = file.name && encodeURIComponent(file.name);\n        return directive.contentDisposition || filename && `inline; filename=\"${filename}\"; filename*=utf-8''${filename}`;\n      };\n    }\n\n    return getContentDisposition.call(method, file, meta);\n  },\n\n  getMaxSize(directive, meta) {\n    // Only allow client maxSizes that are smaller than server defined maxSize\n    if (meta.maxSize && meta.maxSize <= directive.maxSize) {\n      return meta.maxSize;\n    }\n\n    return directive.maxSize || MAX_FILE_SIZE;\n  },\n\n  /**\n   *\n   * @param {{userId: String}} method\n   * @param {Directive} directive\n   * @param {FileInfo} file\n   * @param {Object} [meta]\n   *\n   * @returns {UploadInstructions}\n   */\n  upload(method, directive, file, meta) {\n    const maxSize = this.getMaxSize(directive, meta);\n    const policy = new Slingshot.StoragePolicy().expireIn(directive.expire).contentLength(0, Math.min(file.size, maxSize));\n\n    if (file.size > maxSize) {\n      throw new Meteor.Error(`Votre fichier ne peut pas dépasser ${maxSize / ONE_KB}kb, essayez de réduire la résolution du fichier, ou de le compresser à l'aide de tinyjpg.com`);\n    }\n\n    const payload = {\n      key: _.isFunction(directive.key) ? directive.key.call(method, file, meta) : directive.key,\n      bucket: directive.bucket,\n      'Content-Type': file.type,\n      acl: meta.acl || directive.acl,\n      'Cache-Control': directive.cacheControl,\n      'Content-Disposition': this.getContentDisposition(method, directive, file, meta),\n      'x-amz-meta-status': FILE_STATUS.UNVERIFIED\n    };\n    const bucketUrl = _.isFunction(directive.bucketUrl) ? directive.bucketUrl(directive.bucket, directive.region) : directive.bucketUrl;\n    const downloadUrl = [directive.cdn || bucketUrl, payload.key].map(part => part.replace(/\\/+$/, '')).join('/');\n    this.applySignature(payload, policy, directive);\n    return {\n      upload: bucketUrl,\n      download: downloadUrl,\n      postData: [{\n        name: 'key',\n        value: payload.key\n      }].concat(_.chain(payload).omit('key').map((value, name) => !_.isUndefined(value) && {\n        name,\n        value\n      }).compact().value())\n    };\n  },\n\n  /** Applies signature an upload payload\n   *\n   * @param {Object} payload - Data to be upload along with file\n   * @param {Slingshot.StoragePolicy} policy\n   * @param {Directive} directive\n   */\n  applySignature(payload, policy, directive) {\n    const now = new Date();\n    const today = now.getUTCFullYear() + formatNumber(now.getUTCMonth() + 1, 2) + formatNumber(now.getUTCDate(), 2);\n    const service = 's3';\n\n    _.extend(payload, {\n      'x-amz-algorithm': 'AWS4-HMAC-SHA256',\n      'x-amz-credential': [directive[this.accessId], today, directive.region, service, 'aws4_request'].join('/'),\n      'x-amz-date': `${today}T000000Z`\n    });\n\n    const matchedPolicy = policy.match(payload);\n    const base64Policy = matchedPolicy.stringify();\n    const jsonPolicy = JSON.parse(matchedPolicy.stringify('utf-8'));\n    payload.policy = base64Policy;\n    payload['x-amz-signature'] = this.signAwsV4(payload.policy, directive[this.secretKey], today, directive.region, service);\n  },\n\n  /** Generate a AWS Signature Version 4\n   *\n   * @param {String} policy - Base64 encoded policy to sign.\n   * @param {String} secretKey - AWSSecretAccessKey\n   * @param {String} date - Signature date (yyyymmdd)\n   * @param {String} region - AWS Data-Center region\n   * @param {String} service - type of service to use\n   * @returns {String} hex encoded HMAC-256 signature\n   */\n  signAwsV4(policy, secretKey, date, region, service) {\n    const dateKey = hmac256(`AWS4${secretKey}`, date);\n    const dateRegionKey = hmac256(dateKey, region);\n    const dateRegionServiceKey = hmac256(dateRegionKey, service);\n    const signingKey = hmac256(dateRegionServiceKey, 'aws4_request');\n    return hmac256(signingKey, policy, 'hex');\n  }\n\n};\nmodule.exportDefault(exoscaleStorageService);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"documents.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/files/documents.js                                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  documentHasTooltip: () => documentHasTooltip,\n  allDocuments: () => allDocuments,\n  getPropertyDocuments: () => getPropertyDocuments,\n  getBorrowerDocuments: () => getBorrowerDocuments,\n  getLoanDocuments: () => getLoanDocuments\n});\nlet PROPERTIES_COLLECTION, BORROWERS_COLLECTION, LOANS_COLLECTION;\nmodule.link(\"../constants\", {\n  PROPERTIES_COLLECTION(v) {\n    PROPERTIES_COLLECTION = v;\n  },\n\n  BORROWERS_COLLECTION(v) {\n    BORROWERS_COLLECTION = v;\n  },\n\n  LOANS_COLLECTION(v) {\n    LOANS_COLLECTION = v;\n  }\n\n}, 0);\nlet DOCUMENTS, DOCUMENTS_WITH_TOOLTIP, BORROWER_DOCUMENTS, PROPERTY_DOCUMENTS, LOAN_DOCUMENTS;\nmodule.link(\"./fileConstants\", {\n  DOCUMENTS(v) {\n    DOCUMENTS = v;\n  },\n\n  DOCUMENTS_WITH_TOOLTIP(v) {\n    DOCUMENTS_WITH_TOOLTIP = v;\n  },\n\n  BORROWER_DOCUMENTS(v) {\n    BORROWER_DOCUMENTS = v;\n  },\n\n  PROPERTY_DOCUMENTS(v) {\n    PROPERTY_DOCUMENTS = v;\n  },\n\n  LOAN_DOCUMENTS(v) {\n    LOAN_DOCUMENTS = v;\n  }\n\n}, 1);\n\nconst documentHasTooltip = documentId => !DOCUMENTS_WITH_TOOLTIP.some(id => documentId === id);\n\nconst makeAllObjectDocuments = documents => Object.values(documents).map(id => ({\n  id,\n  noTooltips: documentHasTooltip(id)\n}));\n\nconst allDocuments = ({\n  doc,\n  collection\n}) => {\n  const s3Documents = doc.documents ? Object.keys(doc.documents).map(key => ({\n    id: key\n  })) : [];\n  let documents = [];\n\n  switch (collection) {\n    case BORROWERS_COLLECTION:\n      documents = makeAllObjectDocuments(BORROWER_DOCUMENTS);\n      break;\n\n    case PROPERTIES_COLLECTION:\n      documents = makeAllObjectDocuments(PROPERTY_DOCUMENTS);\n      break;\n\n    case LOANS_COLLECTION:\n      documents = makeAllObjectDocuments(LOAN_DOCUMENTS);\n      break;\n\n    default:\n      break;\n  }\n\n  const otherAdditionalDocuments = documents.filter(({\n    id\n  }) => !doc.additionalDocuments.some(document => id === document.id));\n  const legacyCustomDocuments = s3Documents.filter(({\n    id\n  }) => !doc.additionalDocuments.some(document => id === document.id) && !documents.some(document => id === document.id));\n  return doc.additionalDocuments && doc.additionalDocuments.length > 0 ? [...doc.additionalDocuments, ...otherAdditionalDocuments, ...legacyCustomDocuments] : documents;\n};\n\nconst requiredByAdminOnly = ({\n  requiredByAdmin\n}) => requiredByAdmin !== false;\n\nconst formatAdditionalDoc = additionalDoc => (0, _objectSpread2.default)({}, additionalDoc, {\n  required: true,\n  noTooltips: documentHasTooltip(additionalDoc.id)\n});\n\nconst makeGetDocuments = collection => ({\n  loan,\n  id\n}, options = {}) => {\n  const {\n    doc\n  } = options;\n  const isLoans = collection === LOANS_COLLECTION;\n\n  if (!id && !isLoans) {\n    return [];\n  }\n\n  const document = doc || !isLoans && loan[collection].find(({\n    _id\n  }) => _id === id) || loan;\n  const additionalDocumentsExist = document && document.additionalDocuments && document.additionalDocuments.length > 0;\n  return [...(additionalDocumentsExist ? document.additionalDocuments.filter(requiredByAdminOnly).map(formatAdditionalDoc) : []), {\n    id: DOCUMENTS.OTHER,\n    required: false,\n    noTooltips: true\n  }];\n};\n\nconst getPropertyDocuments = makeGetDocuments(PROPERTIES_COLLECTION);\nconst getBorrowerDocuments = makeGetDocuments(BORROWERS_COLLECTION);\nconst getLoanDocuments = makeGetDocuments(LOANS_COLLECTION);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"fileConstants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/files/fileConstants.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  FILE_STATUS: () => FILE_STATUS,\n  ALLOWED_FILE_TYPES: () => ALLOWED_FILE_TYPES,\n  ONE_KB: () => ONE_KB,\n  MAX_FILE_SIZE: () => MAX_FILE_SIZE,\n  SLINGSHOT_DIRECTIVE_NAME: () => SLINGSHOT_DIRECTIVE_NAME,\n  EXOSCALE_PATH: () => EXOSCALE_PATH,\n  BUCKET_NAME: () => BUCKET_NAME,\n  TEST_BUCKET_NAME: () => TEST_BUCKET_NAME,\n  OBJECT_STORAGE_PATH: () => OBJECT_STORAGE_PATH,\n  OBJECT_STORAGE_REGION: () => OBJECT_STORAGE_REGION,\n  S3_ENDPOINT: () => S3_ENDPOINT,\n  PROPERTY_DOCUMENTS: () => PROPERTY_DOCUMENTS,\n  BORROWER_DOCUMENTS: () => BORROWER_DOCUMENTS,\n  LOAN_DOCUMENTS: () => LOAN_DOCUMENTS,\n  DOCUMENTS: () => DOCUMENTS,\n  DOCUMENTS_CATEGORIES: () => DOCUMENTS_CATEGORIES,\n  DOCUMENTS_WITH_TOOLTIP: () => DOCUMENTS_WITH_TOOLTIP,\n  S3_ACLS: () => S3_ACLS\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nconst FILE_STATUS = {\n  UNVERIFIED: 'UNVERIFIED',\n  VALID: 'VALID',\n  ERROR: 'ERROR'\n};\nconst ALLOWED_FILE_TYPES = ['image/png', 'image/jpeg', 'application/pdf', 'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'];\nconst ONE_KB = 1024;\nconst MAX_FILE_SIZE = 50 * ONE_KB * ONE_KB;\nconst SLINGSHOT_DIRECTIVE_NAME = 'exoscale';\nconst EXOSCALE_PATH = 'sos-ch-dk-2.exo.io';\nconst BUCKET_NAME = Meteor.isServer ? Meteor.settings.storage.bucketName : '';\nconst TEST_BUCKET_NAME = 'e-potek-test-bucket';\nconst OBJECT_STORAGE_PATH = `https://${BUCKET_NAME}.${EXOSCALE_PATH}`;\nconst OBJECT_STORAGE_REGION = 'CH-DK-2';\nconst S3_ENDPOINT = 'https://sos-ch-dk-2.exo.io';\nconst PROPERTY_DOCUMENTS = {\n  COOWNERSHIP_AGREEMENT: 'COOWNERSHIP_AGREEMENT',\n  COOWNERSHIP_ALLOCATION_AGREEMENT: 'COOWNERSHIP_ALLOCATION_AGREEMENT',\n  FIRE_AND_WATER_INSURANCE: 'FIRE_AND_WATER_INSURANCE',\n  INVESTEMENT_PROPERTY_RENTAL_STATEMENT: 'INVESTMENT_PROPERTY_RENTAL_STATEMENT',\n  INVESTEMENT_PROPERTY_SERVICE_CHARGE_SETTLEMENT: 'INVESTEMENT_PROPERTY_SERVICE_CHARGE_SETTLEMENT',\n  INVESTEMENT_PROPERTY_WORKS_HISTORY: 'INVESTEMENT_PROPERTY_WORKS_HISTORY',\n  INVESTMENT_PROPERTY_CONDOMINIUM_OWNERSHIP_DIVISION_REGISTER: 'INVESTMENT_PROPERTY_CONDOMINIUM_OWNERSHIP_DIVISION_REGISTER',\n  INVESTMENT_PROPERTY_CONDOMINIUM_REGULATION: 'INVESTMENT_PROPERTY_CONDOMINIUM_REGULATION',\n  INVESTMENT_PROPERTY_RENT_JUSTIFICATION: 'INVESTMENT_PROPERTY_RENT_JUSTIFICATION',\n  LAND_REGISTER_EXTRACT: 'LAND_REGISTER_EXTRACT',\n  PROPERTY_FUTURE_WORKS: 'PROPERTY_FUTURE_WORKS',\n  PROPERTY_MINERGIE_CERTIFICATE: 'PROPERTY_MINERGIE_CERTIFICATE',\n  PROPERTY_MARKETING_BROCHURE: 'PROPERTY_MARKETING_BROCHURE',\n  PROPERTY_PICTURES: 'PROPERTY_PICTURES',\n  PROPERTY_PLANS: 'PROPERTY_PLANS',\n  PROPERTY_VOLUME: 'PROPERTY_VOLUME',\n  PROPERTY_WORKS_QUOTE: 'PROPERTY_WORKS_QUOTE',\n  PURCHASE_CONTRACT: 'PURCHASE_CONTRACT',\n  SHARE_BUILDING_PERMIT: 'SHARE_BUILDING_PERMIT',\n  SHARE_EASEMENTS: 'SHARE_EASEMENTS',\n  SHARE_FINANCIAL_PLAN: 'SHARE_FINANCIAL_PLAN',\n  SHARE_GC_CONTRACT: 'SHARE_GC_CONTRACT',\n  SHARE_GC_QUOTE_BY_BCC: 'SHARE_GC_QUOTE_BY_BCC',\n  SHARE_INSURANCE_CERTIFICATE: 'SHARE_INSURANCE_CERTIFICATE',\n  SHARE_PLANS: 'SHARE_PLANS',\n  SHARE_WORKS: 'SHARE_WORKS'\n};\nconst BORROWER_DOCUMENTS = {\n  BONUSES: 'BONUSES',\n  CURRENT_MORTGAGES_INTERESTS_STATEMENT: 'CURRENT_MORTGAGE_INTERESTS_STATEMENT',\n  CURRENT_MORTGAGES: 'CURRENT_MORTGAGES',\n  DEBT_COLLECTION_REGISTER_EXTRACT: 'DEBT_COLLECTION_REGISTER_EXTRACT',\n  DIVORCE_RULING: 'DIVORCE_RULING',\n  EXPENSES_JUSTIFICATION: 'EXPENSES_JUSTIFICATION',\n  IDENTITY: 'IDENTITY',\n  LAST_SALARIES: 'LAST_SALARIES',\n  LEGITIMATION_CARD: 'LEGITIMATION_CARD',\n  OTHER_FORTUNE_JUSTIFICATION: 'OTHER_FORTUNE_JUSTIFICATION',\n  OTHER_INCOME_JUSTIFICATION: 'OTHER_INCOME_JUSTIFICATION',\n  OWN_COMPANY_COMMERCIAL_REGISTER: 'OWN_COMPANY_COMMERCIAL_REGISTER',\n  OWN_COMPANY_FINANCIAL_STATEMENTS: 'OWN_COMPANY_FINANCIAL_STATEMENTS',\n  OWN_FUNDS_JUSTIFICATION: 'OWN_FUND_JUSTIFICATION',\n  PENSION_FUND_YEARLY_STATEMENT: 'PENSION_FUND_YEARLY_STATEMENT',\n  RESIDENCY_PERMIT: 'RESIDENCY_PERMIT',\n  SALARY_CERTIFICATE: 'SALARY_CERTIFICATE',\n  TAX_STATEMENT: 'TAX_STATEMENT',\n  TAXES: 'TAXES',\n  THIRD_PILLAR_ACCOUNTS: 'THIRD_PILLAR_ACCOUNTS',\n  WITHDRAWAL_JUSTIFICATION: 'WITHDRAWAL_JUSTIFICATION'\n};\nconst LOAN_DOCUMENTS = {\n  CONTRACT: 'CONTRACT',\n  REIMBURSEMENT_STATEMENT: 'REIMBURSEMENT_STATEMENT',\n  SIGNED_CONTRACT: 'SIGNED_CONTRACT',\n  SIGNED_MANDATE: 'SIGNED_MANDATE'\n};\nconst DOCUMENTS = (0, _objectSpread2.default)({}, PROPERTY_DOCUMENTS, BORROWER_DOCUMENTS, LOAN_DOCUMENTS, {\n  OTHER: 'OTHER'\n});\nconst DOCUMENTS_CATEGORIES = {\n  PERSONAL_DOCUMENTS: [BORROWER_DOCUMENTS.IDENTITY, BORROWER_DOCUMENTS.RESIDENCY_PERMIT, BORROWER_DOCUMENTS.LEGITIMATION_CARD, BORROWER_DOCUMENTS.DEBT_COLLECTION_REGISTER_EXTRACT, BORROWER_DOCUMENTS.DIVORCE_RULING],\n  INCOMES_AND_EXPENSES: [BORROWER_DOCUMENTS.TAXES, BORROWER_DOCUMENTS.SALARY_CERTIFICATE, BORROWER_DOCUMENTS.LAST_SALARIES, BORROWER_DOCUMENTS.BONUSES, BORROWER_DOCUMENTS.OTHER_INCOME_JUSTIFICATION, BORROWER_DOCUMENTS.EXPENSES_JUSTIFICATION, BORROWER_DOCUMENTS.CURRENT_MORTGAGES],\n  FORTUNE_AND_OWN_FUNDS: [BORROWER_DOCUMENTS.OWN_FUNDS_JUSTIFICATION, BORROWER_DOCUMENTS.OTHER_FORTUNE_JUSTIFICATION, BORROWER_DOCUMENTS.OWN_COMPANY_FINANCIAL_STATEMENTS],\n  RETIREMENT: [BORROWER_DOCUMENTS.PENSION_FUND_YEARLY_STATEMENT, BORROWER_DOCUMENTS.THIRD_PILLAR_ACCOUNTS, BORROWER_DOCUMENTS.WITHDRAWAL_JUSTIFICATION],\n  HOUSING: [PROPERTY_DOCUMENTS.PROPERTY_MARKETING_BROCHURE, PROPERTY_DOCUMENTS.PROPERTY_PICTURES, PROPERTY_DOCUMENTS.PROPERTY_PLANS, PROPERTY_DOCUMENTS.PROPERTY_VOLUME, PROPERTY_DOCUMENTS.PROPERTY_MINERGIE_CERTIFICATE, PROPERTY_DOCUMENTS.FIRE_AND_WATER_INSURANCE, PROPERTY_DOCUMENTS.PROPERTY_WORKS_QUOTE, PROPERTY_DOCUMENTS.COOWNERSHIP_AGREEMENT, PROPERTY_DOCUMENTS.COOWNERSHIP_ALLOCATION_AGREEMENT, PROPERTY_DOCUMENTS.PROPERTY_FUTURE_WORKS, PROPERTY_DOCUMENTS.INVESTEMENT_PROPERTY_RENTAL_STATEMENT, PROPERTY_DOCUMENTS.INVESTEMENT_PROPERTY_SERVICE_CHARGE_SETTLEMENT, PROPERTY_DOCUMENTS.PURCHASE_CONTRACT, PROPERTY_DOCUMENTS.LAND_REGISTER_EXTRACT],\n  SHARE: [PROPERTY_DOCUMENTS.SHARE_BUILDING_PERMIT, PROPERTY_DOCUMENTS.SHARE_EASEMENTS, PROPERTY_DOCUMENTS.SHARE_FINANCIAL_PLAN, PROPERTY_DOCUMENTS.SHARE_GC_CONTRACT, PROPERTY_DOCUMENTS.SHARE_GC_QUOTE_BY_BCC, PROPERTY_DOCUMENTS.SHARE_INSURANCE_CERTIFICATE, PROPERTY_DOCUMENTS.SHARE_PLANS, PROPERTY_DOCUMENTS.SHARE_WORKS]\n};\nconst DOCUMENTS_WITH_TOOLTIP = [DOCUMENTS.BONUSES, DOCUMENTS.BUYERS_CONTRACT, DOCUMENTS.COOWNERSHIP_AGREEMENT, DOCUMENTS.COOWNERSHIP_ALLOCATION_AGREEMENT, DOCUMENTS.CURRENT_MORTGAGES, DOCUMENTS.DEBT_COLLECTION_REGISTER_EXTRACT, DOCUMENTS.EXPENSES_JUSTIFICATION, DOCUMENTS.FIRE_AND_WATER_INSURANCE, DOCUMENTS.IDENTITY, DOCUMENTS.INVESTEMENT_PROPERTY_RENTAL_STATEMENT, DOCUMENTS.INVESTEMENT_PROPERTY_SERVICE_CHARGE_SETTLEMENT, DOCUMENTS.PURCHASE_CONTRACT, DOCUMENTS.LAST_SALARIES, DOCUMENTS.LEGITIMATION_CARD, DOCUMENTS.OTHER_INCOME_JUSTIFICATION, DOCUMENTS.OTHER_FORTUNE_JUSTIFICATION, DOCUMENTS.OWN_COMPANY_FINANCIAL_STATEMENTS, DOCUMENTS.OWN_FUNDS_JUSTIFICATION, DOCUMENTS.PENSION_FUND_YEARLY_STATEMENT, DOCUMENTS.PROPERTY_MARKETING_BROCHURE, DOCUMENTS.PROPERTY_PICTURES, DOCUMENTS.PROPERTY_VOLUME, DOCUMENTS.PROPERTY_WORKS_QUOTE, DOCUMENTS.PROPERTY_FUTURE_WORKS, DOCUMENTS.REIMBURSEMENT_STATEMENT, DOCUMENTS.RESIDENCY_PERMIT, DOCUMENTS.SIGNED_CONTRACT, DOCUMENTS.TAXES, DOCUMENTS.THIRD_PILLAR_ACCOUNTS, DOCUMENTS.WITHDRAWAL_JUSTIFICATION];\nconst S3_ACLS = {\n  PRIVATE: 'private',\n  PUBLIC_READ: 'public-read',\n  PUBLIC_READ_WRITE: 'public-read-write',\n  AUTHENTICATED_READ: 'authenticated-read',\n  BUCKET_OWNER_READ: 'bucket-owner-read',\n  BUCKET_OWNER_FULL_CONTROL: 'bucket-owner-full-control',\n  LOG_DELIVERY_WRITE: 'log-delivery-write'\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"fileHelpers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/files/fileHelpers.js                                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  filesPercent: () => filesPercent,\n  getMissingDocumentIds: () => getMissingDocumentIds\n});\nlet getPercent;\nmodule.link(\"../../utils/general\", {\n  getPercent(v) {\n    getPercent = v;\n  }\n\n}, 0);\nlet FILE_STATUS;\nmodule.link(\"./fileConstants\", {\n  FILE_STATUS(v) {\n    FILE_STATUS = v;\n  }\n\n}, 1);\n\nconst documentIsRequired = required => required !== false;\n\nconst getDocumentsToCount = (documentArray, doc, checkDocumentStatus) => {\n  if (!doc || !doc.documents) {\n    return [undefined];\n  }\n\n  const {\n    documents\n  } = doc;\n  return documentArray.reduce((documentsToCount, {\n    required,\n    id: documentId\n  }) => {\n    if (!documentIsRequired(required)) {\n      // Don't count this document\n      return documentsToCount;\n    }\n\n    if (!documents[documentId]) {\n      // No document has been added yet, count this one, and as todo\n      return [...documentsToCount, undefined];\n    }\n\n    if (checkDocumentStatus) {\n      // Make sure all documents have a valid status\n      const allFilesAreValid = documents[documentId].every(({\n        status\n      }) => status === FILE_STATUS.VALID);\n      return [...documentsToCount, allFilesAreValid ? true : undefined];\n    }\n\n    return [...documentsToCount, documents[documentId]];\n  }, []);\n};\n/**\n * filesPercent - Determines the completion rate of file upload for a given\n * step, doc and array of files\n *\n * @param {object} doc           The mongoDB document where files are saved\n * @param {function} fileArray   Array of files\n\n *\n * @return {number} a value between 0 and 1 indicating the percentage of\n * completion, 1 is complete, 0 is not started\n */\n\n\nconst filesPercent = ({\n  fileArray,\n  doc,\n  checkValidity\n}) => {\n  const documentsToCount = getDocumentsToCount(fileArray, doc, checkValidity);\n  return {\n    percent: getPercent(documentsToCount),\n    count: documentsToCount.length\n  };\n};\n\nconst documentExists = (doc, id) => doc && doc.documents && doc.documents[id] && doc.documents[id].length > 0;\n\nconst getMissingDocumentIds = ({\n  fileArray,\n  doc\n}) => {\n  const ids = fileArray.filter(({\n    required,\n    id\n  }) => documentIsRequired(required) && !documentExists(doc, id)).map(({\n    id\n  }) => id);\n  return ids;\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"meteor-slingshot.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/files/meteor-slingshot.js                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Slingshot;\nmodule.link(\"meteor/edgee:slingshot\", {\n  Slingshot(v) {\n    Slingshot = v;\n  }\n\n}, 0);\nlet SLINGSHOT_DIRECTIVE_NAME, ALLOWED_FILE_TYPES, MAX_FILE_SIZE;\nmodule.link(\"./fileConstants\", {\n  SLINGSHOT_DIRECTIVE_NAME(v) {\n    SLINGSHOT_DIRECTIVE_NAME = v;\n  },\n\n  ALLOWED_FILE_TYPES(v) {\n    ALLOWED_FILE_TYPES = v;\n  },\n\n  MAX_FILE_SIZE(v) {\n    MAX_FILE_SIZE = v;\n  }\n\n}, 1);\nSlingshot.fileRestrictions(SLINGSHOT_DIRECTIVE_NAME, {\n  allowedFileTypes: ALLOWED_FILE_TYPES,\n  maxSize: MAX_FILE_SIZE\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methodDefinitions.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/files/methodDefinitions.js                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  deleteFile: () => deleteFile,\n  setFileStatus: () => setFileStatus,\n  setFileError: () => setFileError,\n  downloadFile: () => downloadFile,\n  getSignedUrl: () => getSignedUrl,\n  updateDocumentsCache: () => updateDocumentsCache\n});\nlet Method;\nmodule.link(\"../methods/methods\", {\n  Method(v) {\n    Method = v;\n  }\n\n}, 0);\nconst deleteFile = new Method({\n  name: 'deleteFile',\n  params: {\n    collection: String,\n    docId: String,\n    fileKey: String\n  }\n});\nconst setFileStatus = new Method({\n  name: 'setFileStatus',\n  params: {\n    fileKey: String,\n    newStatus: String\n  }\n});\nconst setFileError = new Method({\n  name: 'setFileError',\n  params: {\n    error: String,\n    fileKey: String\n  }\n});\nconst downloadFile = new Method({\n  name: 'downloadFile',\n  params: {\n    key: String\n  }\n});\nconst getSignedUrl = new Method({\n  name: 'getSignedUrl',\n  params: {\n    key: String\n  }\n});\nconst updateDocumentsCache = new Method({\n  name: 'updateDocumentsCache',\n  params: {\n    docId: String,\n    collection: String\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"helpers\":{\"server\":{\"QueryCacher.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/helpers/server/QueryCacher.js                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  default: () => QueryCacher\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet BaseResultCacher;\nmodule.link(\"meteor/cultofcoders:grapher\", {\n  BaseResultCacher(v) {\n    BaseResultCacher = v;\n  }\n\n}, 1);\nlet EJSON;\nmodule.link(\"meteor/ejson\", {\n  EJSON(v) {\n    EJSON = v;\n  }\n\n}, 2);\nlet hashObject;\nmodule.link(\"object-hash\", {\n  default(v) {\n    hashObject = v;\n  }\n\n}, 3);\n\nconst cloneDeep = require('lodash/cloneDeep');\n\nconst DEFAULT_TTL = 1000 * 60 * 60; // 1 hour\n\nclass QueryCacher extends BaseResultCacher {\n  constructor(config = {}) {\n    super(config);\n    this.store = {};\n  }\n\n  generateQueryId(queryName, params) {\n    // Store the queryname for reuse later\n    if (!this.queryName) {\n      this.queryName = queryName;\n    }\n\n    return `${queryName}::${EJSON.stringify(params)}`;\n  }\n\n  getHash(cacheId) {\n    const params = EJSON.parse(cacheId.split('::')[1]);\n    const {\n      getDataToHash = () => null\n    } = this.config;\n    const dataToHash = getDataToHash(params);\n    return hashObject.MD5(dataToHash);\n  }\n\n  fetch(cacheId, {\n    query,\n    countCursor\n  }) {\n    const cacheData = this.store[cacheId];\n    const hash = this.getHash(cacheId);\n\n    if (cacheData !== undefined) {\n      const {\n        hash: cachedHash,\n        data\n      } = cacheData;\n\n      if (hash === cachedHash) {\n        return cloneDeep(data);\n      }\n    }\n\n    const data = BaseResultCacher.fetchData({\n      query,\n      countCursor\n    }); // this.fetchData is not a function\n\n    this.storeData({\n      cacheId,\n      data,\n      hash\n    });\n    return data;\n  }\n\n  invalidateCache(cacheId) {\n    delete this.store[cacheId];\n  }\n\n  cacheExists(cacheId) {\n    return !!this.store[cacheId];\n  }\n\n  setCache(cacheId, cacheData) {\n    this.store[cacheId] = cacheData;\n  }\n\n  findAndInvalidateCache(params) {\n    const cacheId = this.generateQueryId(this.queryName, params);\n\n    if (this.cacheExists(cacheId)) {\n      this.invalidateCache(cacheId);\n    }\n  }\n\n  storeData({\n    cacheId,\n    data,\n    hash\n  }) {\n    const ttl = this.config.ttl || DEFAULT_TTL;\n    this.setCache(cacheId, {\n      data: cloneDeep(data),\n      hash\n    });\n    Meteor.setTimeout(() => {\n      this.invalidateCache(cacheId);\n    }, ttl);\n  }\n\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methodServerHelpers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/helpers/server/methodServerHelpers.js                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  checkInsertUserId: () => checkInsertUserId\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 1);\n\nconst checkInsertUserId = userId => {\n  if (userId === undefined) {\n    return Meteor.userId();\n  }\n\n  if (userId) {\n    SecurityService.checkCurrentUserIsAdmin();\n    return userId;\n  }\n\n  SecurityService.handleUnauthorized('Unauthorized insert');\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"CollectionService.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/helpers/CollectionService.js                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\n\nclass CollectionService {\n  constructor(collection) {\n    if (!collection) {\n      throw new Error('A collection is needed in CollectionService, but none was passed');\n    }\n\n    this.collection = collection;\n  }\n\n  insert(object = {}) {\n    return this.collection.insert(object);\n  }\n\n  _update({\n    id,\n    object,\n    operator = '$set'\n  }) {\n    if (Object.keys(object).length > 0) {\n      // debugger;\n      return this.collection.update(id, {\n        [operator]: object\n      });\n    }\n\n    return null;\n  }\n\n  baseUpdate(...args) {\n    return this.collection.update(...args);\n  }\n\n  remove(...args) {\n    return this.collection.remove(...args);\n  }\n\n  get(id) {\n    return this.collection.findOne(id);\n  }\n\n  safeGet(id) {\n    const result = this.get(id);\n\n    if (!result) {\n      throw new Meteor.Error(`Could not find object with id \"${id}\" in collection \"${this.collection._name}\"`);\n    }\n\n    return result;\n  }\n\n  find(...args) {\n    return this.collection.find(...args);\n  }\n\n  findOne(...args) {\n    return this.collection.findOne(...args);\n  }\n\n  checkQuery(body) {\n    if (body && body.$filter) {\n      throw new Meteor.Error('$filter found in query body, did you mean $filters?');\n    }\n  }\n\n  createQuery(...args) {\n    this.checkQuery(args[0]);\n    return this.collection.createQuery(...args);\n  }\n\n  fetchOne(...args) {\n    this.checkQuery(args[0]);\n    return this.createQuery(...args).fetchOne();\n  }\n\n  safeFetchOne(...args) {\n    const {\n      $filters = {}\n    } = args.find(arg => arg.$filters);\n    const result = this.fetchOne(...args);\n\n    if (!result) {\n      throw new Meteor.Error(`Could not find object with filters \"${JSON.stringify($filters)}\" in collection \"${this.collection._name}\"`);\n    }\n\n    return result;\n  }\n\n  fetch(...args) {\n    this.checkQuery(args[0]);\n    return this.createQuery(...args).fetch();\n  }\n\n  getLink(...args) {\n    return this.collection.getLink(...args);\n  }\n\n  count(...args) {\n    this.checkQuery(args[0]);\n    return this.createQuery(...args).getCount();\n  }\n\n  countAll() {\n    return this.find({}).count();\n  }\n\n  getAll() {\n    return this.find({}).fetch();\n  }\n\n  get rawCollection() {\n    return this.collection.rawCollection();\n  }\n\n  exists(_id) {\n    return !!(_id && this.findOne({\n      _id\n    }, {\n      fields: {\n        _id: 1\n      }\n    }));\n  }\n\n  aggregate(...args) {\n    return this.rawCollection.aggregate(...args);\n  } // Don't return the results from linker\n\n\n  addLink({\n    id,\n    linkName,\n    linkId,\n    metadata = {}\n  }) {\n    const linker = this.collection.getLink(id, linkName);\n    const {\n      linker: {\n        strategy\n      }\n    } = linker;\n\n    switch (strategy) {\n      case 'one':\n        linker.set(linkId);\n        return;\n\n      case 'many':\n        linker.add(linkId);\n        return;\n\n      case 'one-meta':\n        linker.set(linkId, metadata);\n        return;\n\n      case 'many-meta':\n        linker.add(linkId, metadata);\n        return;\n\n      default:\n        return null;\n    }\n  } // Don't return the results from linker\n\n\n  removeLink({\n    id,\n    linkName,\n    linkId\n  }) {\n    const linker = this.getLink(id, linkName);\n    const {\n      linker: {\n        strategy\n      }\n    } = linker;\n\n    switch (strategy.split('-')[0]) {\n      case 'one':\n        linker.unset(linkId);\n        return;\n\n      case 'many':\n        linker.remove(linkId);\n        return;\n\n      default:\n        return null;\n    }\n  }\n\n  updateLinkMetadata({\n    id,\n    linkName,\n    linkId,\n    metadata\n  }) {\n    const linker = this.getLink(id, linkName);\n    const {\n      linker: {\n        strategy\n      }\n    } = linker;\n\n    switch (strategy.split('-')[0]) {\n      case 'one':\n        linker.metadata(metadata);\n        return;\n\n      case 'many':\n        linker.metadata(linkId, metadata);\n        return;\n\n      default:\n        return null;\n    }\n  }\n\n  getAssignedEmployee({\n    id\n  }) {\n    const {\n      assignee\n    } = this.fetchOne({\n      $filters: {\n        _id: id\n      },\n      assignee: 1\n    });\n    return assignee;\n  }\n\n  getAdditionalDocLabel({\n    label,\n    additionalDoc\n  }) {\n    if (label) {\n      return label;\n    }\n\n    if (additionalDoc.label) {\n      return additionalDoc.label;\n    }\n\n    return undefined;\n  }\n\n  setAdditionalDoc({\n    id,\n    additionalDocId,\n    requiredByAdmin,\n    label,\n    category\n  }) {\n    const {\n      additionalDocuments\n    } = this.get(id);\n    const additionalDoc = additionalDocuments.find(doc => doc.id === additionalDocId);\n\n    if (additionalDoc) {\n      const additionalDocumentsUpdate = [...additionalDocuments.filter(doc => doc.id !== additionalDocId), {\n        id: additionalDocId,\n        requiredByAdmin,\n        label: this.getAdditionalDocLabel({\n          label,\n          additionalDoc\n        }),\n        category\n      }];\n      return this._update({\n        id,\n        object: {\n          additionalDocuments: additionalDocumentsUpdate\n        }\n      });\n    }\n\n    return this._update({\n      id,\n      object: {\n        additionalDocuments: [...additionalDocuments, {\n          id: additionalDocId,\n          requiredByAdmin,\n          label,\n          category\n        }]\n      }\n    });\n  }\n\n  removeAdditionalDoc({\n    id: docId,\n    additionalDocId\n  }) {\n    const {\n      additionalDocuments = []\n    } = this.get(docId);\n    return this._update({\n      id: docId,\n      object: {\n        additionalDocuments: additionalDocuments.filter(({\n          id\n        }) => id !== additionalDocId)\n      }\n    });\n  }\n\n}\n\nmodule.exportDefault(CollectionService);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"helpers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/helpers/helpers.js                                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  getDocFromCollection: () => getDocFromCollection,\n  getIdFieldNameFromCollection: () => getIdFieldNameFromCollection,\n  getCollectionNameFromIdField: () => getCollectionNameFromIdField,\n  createMeteorAsyncFunction: () => createMeteorAsyncFunction,\n  flattenObject: () => flattenObject,\n  getUserOrganisationName: () => getUserOrganisationName,\n  getUserNameAndOrganisation: () => getUserNameAndOrganisation,\n  getReferredBy: () => getReferredBy,\n  sortObject: () => sortObject\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Loans, Borrowers, Offers, Properties, Tasks, Users;\nmodule.link(\"..\", {\n  Loans(v) {\n    Loans = v;\n  },\n\n  Borrowers(v) {\n    Borrowers = v;\n  },\n\n  Offers(v) {\n    Offers = v;\n  },\n\n  Properties(v) {\n    Properties = v;\n  },\n\n  Tasks(v) {\n    Tasks = v;\n  },\n\n  Users(v) {\n    Users = v;\n  }\n\n}, 1);\nlet LOANS_COLLECTION, BORROWERS_COLLECTION, PROPERTIES_COLLECTION;\nmodule.link(\"../constants\", {\n  LOANS_COLLECTION(v) {\n    LOANS_COLLECTION = v;\n  },\n\n  BORROWERS_COLLECTION(v) {\n    BORROWERS_COLLECTION = v;\n  },\n\n  PROPERTIES_COLLECTION(v) {\n    PROPERTIES_COLLECTION = v;\n  }\n\n}, 2);\n\nconst getDocFromCollection = (collectionName, docId) => {\n  let collection;\n\n  switch (collectionName) {\n    case 'loans':\n      collection = Loans;\n      break;\n\n    case 'borrowers':\n      collection = Borrowers;\n      break;\n\n    case 'properties':\n      collection = Properties;\n      break;\n\n    case 'offers':\n      collection = Offers;\n      break;\n\n    case 'tasks':\n      collection = Tasks;\n      break;\n\n    case 'users':\n      collection = Users;\n      break;\n\n    default:\n      break;\n  }\n\n  return collection.findOne(docId);\n};\n\nconst getIdFieldNameFromCollection = collectionName => ({\n  [LOANS_COLLECTION]: 'loanId',\n  [BORROWERS_COLLECTION]: 'borrowerId',\n  [PROPERTIES_COLLECTION]: 'propertyId'\n})[collectionName];\n\nconst getCollectionNameFromIdField = idFieldName => ({\n  loanId: LOANS_COLLECTION,\n  borrowerId: BORROWERS_COLLECTION,\n  propertyId: PROPERTIES_COLLECTION\n})[idFieldName];\n\nconst createMeteorAsyncFunction = promiseFunc => Meteor.wrapAsync((params, callback) => promiseFunc(params).then(result => callback(null, result)).catch(callback));\n\nconst flattenObject = (object, delimiter) => {\n  const delim = delimiter || '.';\n  let flattened = {};\n  Object.keys(object).forEach(key => {\n    const val = object[key];\n\n    if (val instanceof Object && !(val instanceof Array)) {\n      const strip = flattenObject(val);\n      Object.keys(strip).forEach(k => {\n        const v = strip[k];\n        flattened = (0, _objectSpread2.default)({}, flattened, {\n          [`${key}${delim}${k}`]: v\n        });\n      });\n    } else {\n      flattened = (0, _objectSpread2.default)({}, flattened, {\n        [key]: val\n      });\n    }\n  });\n  return flattened;\n};\n\nconst getUserOrganisationName = ({\n  user\n}) => {\n  const {\n    organisations = []\n  } = user;\n  const organisationName = !!organisations.length && organisations[0].name;\n  return organisationName;\n};\n\nconst getUserNameAndOrganisation = ({\n  user\n}) => {\n  const {\n    name,\n    organisations = []\n  } = user;\n  const organisationName = !!organisations.length && organisations[0].name;\n  return organisationName ? `${name} (${organisationName})` : name;\n};\n\nconst isReferredByOrganisation = ({\n  organisations,\n  referredByOrganisation\n}) => organisations.some(({\n  _id\n}) => referredByOrganisation._id === _id);\n\nconst isReferredByOrganisationUser = ({\n  organisationUsers,\n  referredByUser\n}) => organisationUsers.some(({\n  _id\n}) => referredByUser._id === _id);\n\nconst getReferredBy = ({\n  user,\n  proUser = {},\n  isAdmin\n}) => {\n  if (!user) {\n    return {\n      raw: null,\n      label: ''\n    };\n  }\n\n  const {\n    organisations = []\n  } = proUser;\n  const organisationUsers = organisations.length ? organisations[0].users : [];\n  const {\n    referredByUser = {},\n    referredByOrganisation = {}\n  } = user;\n  let label = 'Déjà référé';\n\n  if (isAdmin || isReferredByOrganisation({\n    organisations,\n    referredByOrganisation\n  }) || isReferredByOrganisationUser({\n    organisationUsers,\n    referredByUser\n  })) {\n    label = getUserNameAndOrganisation({\n      user: referredByUser\n    });\n  }\n\n  return {\n    raw: referredByUser.name,\n    label\n  };\n};\n\nconst sortObject = object => {\n  if (!object || typeof object !== 'object' || object instanceof Array) {\n    return object;\n  }\n\n  const sortedObject = {};\n  const keys = Object.keys(object);\n  keys.sort();\n  keys.forEach(key => {\n    sortedObject[key] = sortObject(object[key]);\n  });\n  return sortedObject;\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/helpers/index.js                                                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./helpers\", {\n  \"*\": \"*\"\n}, 0);\nmodule.link(\"./mongoHelpers\", {\n  \"*\": \"*\"\n}, 1);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"mongoHelpers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/helpers/mongoHelpers.js                                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  generateMatchAllWordsRegexp: () => generateMatchAllWordsRegexp,\n  generateMatchAnyWordRegexp: () => generateMatchAnyWordRegexp,\n  splitStringIntoWords: () => splitStringIntoWords,\n  createRegexQuery: () => createRegexQuery,\n  createSearchFilters: () => createSearchFilters\n});\n\nconst generateMatchAllWordsRegexp = words => `${words.map(word => `(?=.*${word})`).join('')}.+`;\n\nconst generateMatchAnyWordRegexp = string => string.trim().replace(/\\s+/g, '|');\n\nconst splitStringIntoWords = string => string.trim().split(/\\s+/);\n\nconst createRegexQuery = (fieldName, searchQuery) => {\n  const searchQueryWords = splitStringIntoWords(searchQuery);\n  const containsMultipleWords = searchQueryWords.length > 1;\n\n  if (containsMultipleWords) {\n    return {\n      [fieldName]: {\n        $regex: generateMatchAllWordsRegexp(searchQueryWords),\n        $options: 'gi'\n      }\n    };\n  }\n\n  return {\n    [fieldName]: {\n      $regex: searchQuery.trim(),\n      $options: 'ix'\n    }\n  };\n};\n\nconst createSearchFilters = (searchFieldsArray, searchQuery) => {\n  if (searchFieldsArray.length > 1) {\n    // multiple fields to match\n    return {\n      $or: searchFieldsArray.map(searchField => createRegexQuery(searchField, searchQuery))\n    };\n  } // single field to match\n\n\n  const fieldName = searchFieldsArray[0];\n  return createRegexQuery(fieldName, searchQuery);\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"sharedHooks.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/helpers/sharedHooks.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  additionalDocumentsHook: () => additionalDocumentsHook\n});\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\n\nconst getOldCustomDocuments = ({\n  additionalDocuments,\n  initialDocuments,\n  conditionalDocuments\n}) => additionalDocuments.filter(document => document.requiredByAdmin === undefined && !initialDocuments.some(({\n  id\n}) => id === document.id) && !conditionalDocuments.some(({\n  id\n}) => id === document.id)).map(document => (0, _objectSpread2.default)({}, document, {\n  requiredByAdmin: true\n}));\n\nconst keepInitialDocuments = ({\n  additionalDocuments,\n  initialDocuments\n}) => additionalDocuments.filter(document => initialDocuments.some(({\n  id\n}) => id === document.id && document.requiredByAdmin === undefined));\n\nconst otherInitialDocuments = ({\n  initialDocuments,\n  additionalDocuments\n}) => initialDocuments.filter(({\n  id\n}) => !additionalDocuments.some(document => document.id === id));\n\nconst otherAdditionalDocuments = ({\n  additionalDocuments\n}) => additionalDocuments.filter(({\n  requiredByAdmin\n}) => requiredByAdmin !== undefined);\n\nconst getDocumentsToAdd = ({\n  additionalDocuments,\n  conditionalDocuments,\n  doc\n}) => conditionalDocuments.reduce((docs, {\n  id,\n  condition\n}) => {\n  const document = additionalDocuments.find(additionalDocument => additionalDocument.id === id);\n\n  if (document && document.requiredByAdmin !== undefined) {\n    return docs;\n  } // Insert conditional documents\n\n\n  if (condition({\n    doc\n  })) {\n    return [...docs, {\n      id\n    }];\n  }\n\n  return docs;\n}, []);\n\nconst additionalDocumentsHook = ({\n  collection,\n  initialDocuments,\n  conditionalDocuments\n}) => (userId, doc) => {\n  let documents = [];\n  const {\n    additionalDocuments = []\n  } = doc || {};\n\n  if (additionalDocuments.length === 0) {\n    documents = initialDocuments;\n  } else {\n    const oldCustomDocuments = getOldCustomDocuments({\n      additionalDocuments,\n      initialDocuments,\n      conditionalDocuments\n    });\n    documents = keepInitialDocuments({\n      additionalDocuments,\n      initialDocuments\n    });\n    documents = [...otherInitialDocuments({\n      initialDocuments,\n      additionalDocuments\n    }), ...oldCustomDocuments, ...documents, ...otherAdditionalDocuments({\n      additionalDocuments\n    })];\n  } // Check conditional documents\n\n\n  const documentsToAdd = getDocumentsToAdd({\n    additionalDocuments,\n    conditionalDocuments,\n    doc\n  });\n  documents = [...documents, ...documentsToAdd]; // Update document\n\n  Mongo.Collection.get(collection).direct.update(doc._id, {\n    $set: {\n      additionalDocuments: documents\n    }\n  });\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"sharedSchemaConstants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/helpers/sharedSchemaConstants.js                                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  MORTGAGE_NOTE_TYPES: () => MORTGAGE_NOTE_TYPES,\n  MORTGAGE_NOTE_CATEGORIES: () => MORTGAGE_NOTE_CATEGORIES\n});\nconst MORTGAGE_NOTE_TYPES = {\n  PAPER: 'PAPER',\n  REGISTRAR: 'REGISTRAR'\n};\nconst MORTGAGE_NOTE_CATEGORIES = {\n  BEARER: 'BEARER',\n  REGISTERED: 'REGISTERED'\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"sharedSchemas.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/helpers/sharedSchemas.js                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  createdAt: () => createdAt,\n  updatedAt: () => updatedAt,\n  additionalDocuments: () => additionalDocuments,\n  address: () => address,\n  contactsSchema: () => contactsSchema,\n  makePermissions: () => makePermissions,\n  userLinksSchema: () => userLinksSchema,\n  mortgageNoteLinks: () => mortgageNoteLinks,\n  roundedInteger: () => roundedInteger,\n  percentageField: () => percentageField,\n  moneyField: () => moneyField,\n  decimalMoneyField: () => decimalMoneyField,\n  documentsField: () => documentsField,\n  dateField: () => dateField,\n  cacheField: () => cacheField\n});\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 0);\nlet CUSTOM_AUTOFIELD_TYPES;\nmodule.link(\"../../components/AutoForm2/constants\", {\n  CUSTOM_AUTOFIELD_TYPES(v) {\n    CUSTOM_AUTOFIELD_TYPES = v;\n  }\n\n}, 1);\nlet CANTONS;\nmodule.link(\"../loans/loanConstants\", {\n  CANTONS(v) {\n    CANTONS = v;\n  }\n\n}, 2);\nlet zipcodes;\nmodule.link(\"../../utils/zipcodes\", {\n  default(v) {\n    zipcodes = v;\n  }\n\n}, 3);\nconst createdAt = {\n  type: Date,\n\n  autoValue() {\n    if (this.isInsert) {\n      return new Date();\n    }\n\n    this.unset();\n  },\n\n  optional: true\n};\nconst updatedAt = {\n  type: Date,\n\n  autoValue() {\n    if (this.isUpdate || this.isInsert || this.isUpsert) {\n      return new Date();\n    }\n  },\n\n  optional: true\n};\n\nconst additionalDocuments = initialDocuments => ({\n  additionalDocuments: {\n    type: Array,\n    defaultValue: initialDocuments\n  },\n  'additionalDocuments.$': Object,\n  'additionalDocuments.$.id': String,\n  'additionalDocuments.$.label': {\n    type: String,\n    optional: true\n  },\n  'additionalDocuments.$.requiredByAdmin': {\n    type: Boolean,\n    optional: true\n  },\n  'additionalDocuments.$.category': {\n    type: String,\n    optional: true\n  }\n});\n\nconst address = {\n  address1: {\n    type: String,\n    optional: true\n  },\n  address2: {\n    type: String,\n    optional: true\n  },\n  zipCode: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 1000,\n    max: 99999\n  },\n  city: {\n    type: String,\n    optional: true\n  },\n  canton: {\n    type: String,\n    allowedValues: Object.keys(CANTONS),\n    optional: true,\n\n    autoValue() {\n      return zipcodes(this.field('zipCode').value);\n    },\n\n    uniforms: {\n      placeholder: null\n    }\n  }\n};\nconst contactsSchema = {\n  contacts: {\n    type: Array,\n    defaultValue: []\n  },\n  'contacts.$': Object,\n  'contacts.$.name': {\n    type: String,\n    uniforms: {\n      label: 'Prénom Nom'\n    }\n  },\n  'contacts.$.title': {\n    type: String,\n    uniforms: {\n      label: 'Fonction/Titre'\n    }\n  },\n  'contacts.$.email': {\n    type: String,\n    regEx: SimpleSchema.RegEx.Email,\n    optional: true\n  },\n  'contacts.$.phoneNumber': {\n    type: String,\n    uniforms: {\n      label: 'No. de Téléphone'\n    },\n    optional: true\n  }\n};\n\nconst makePermissions = ({\n  permissionsSchema,\n  prefix,\n  autoFormDisplayCondition = () => true,\n  autoFormLabel\n}) => Object.keys(permissionsSchema).reduce((permissions, key) => (0, _objectSpread2.default)({}, permissions, {\n  [`${prefix}.${key}`]: permissionsSchema[key]\n}), {\n  [prefix]: {\n    type: Object,\n    optional: true,\n    condition: autoFormDisplayCondition,\n    uniforms: {\n      label: autoFormLabel || prefix\n    }\n  }\n});\n\nconst userLinksSchema = permissionsSchema => (0, _objectSpread2.default)({\n  userLinks: {\n    type: Array,\n    defaultValue: []\n  },\n  'userLinks.$': Object,\n  'userLinks.$._id': {\n    type: String,\n    optional: true\n  }\n}, permissionsSchema ? makePermissions({\n  permissionsSchema,\n  prefix: 'userLinks.$.permissions'\n}) : {});\n\nconst mortgageNoteLinks = {\n  mortgageNoteLinks: {\n    type: Array,\n    optional: true\n  },\n  'mortgageNoteLinks.$': Object,\n  'mortgageNoteLinks.$._id': {\n    type: String,\n    optional: true\n  }\n};\n\nconst roundedInteger = digits => {\n  const rounder = 10 ** digits;\n  return {\n    type: SimpleSchema.Integer,\n    min: 0,\n    max: 1000000000,\n\n    autoValue() {\n      if (this.isSet) {\n        return Math.round(this.value / rounder) * rounder;\n      }\n    },\n\n    optional: true\n  };\n};\n\nconst percentageField = {\n  type: Number,\n  min: -1,\n  max: 1,\n  optional: true,\n\n  autoValue() {\n    if (this.isSet) {\n      return Math.round(Number(this.value) * 10000) / 10000;\n    }\n  },\n\n  uniforms: {\n    type: CUSTOM_AUTOFIELD_TYPES.PERCENT,\n    placeholder: '0.00%'\n  }\n};\nconst moneyField = {\n  type: SimpleSchema.Integer,\n  min: 0,\n  max: 1000000000,\n  optional: true,\n  uniforms: {\n    type: CUSTOM_AUTOFIELD_TYPES.MONEY\n  }\n};\nconst decimalMoneyField = (0, _objectSpread2.default)({}, moneyField, {\n  type: Number,\n  uniforms: {\n    type: CUSTOM_AUTOFIELD_TYPES.MONEY_DECIMAL\n  }\n});\nconst documentsField = {\n  type: Object,\n  defaultValue: {},\n  optional: true,\n  blackbox: true\n};\nconst dateField = {\n  type: Date,\n  optional: true,\n  uniforms: {\n    type: CUSTOM_AUTOFIELD_TYPES.DATE\n  }\n};\nconst cacheField = {\n  type: Object,\n  optional: true,\n  blackbox: true\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"impersonation\":{\"server\":{\"ImpersonateService.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/impersonation/server/ImpersonateService.js                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 1);\nlet Users;\nmodule.link(\"../../users\", {\n  default(v) {\n    Users = v;\n  }\n\n}, 2);\nlet Security;\nmodule.link(\"../../security\", {\n  default(v) {\n    Security = v;\n  }\n\n}, 3);\n\nclass ImpersonateService {\n  /**\n   * Impersonates the user\n   * @param {*} context The context of a given meteor method\n   * @param {*} authToken The token received from client\n   * @param {*} userIdToImpersonate\n   */\n  impersonate({\n    context,\n    authToken,\n    userIdToImpersonate\n  }) {\n    const user = this._findUserByToken(authToken);\n\n    if (user) {\n      this._checkRolesForImpersonation(user._id);\n    } else {\n      this._throwNotAuthorized();\n    }\n\n    context.setUserId(userIdToImpersonate);\n    return Users.findOne(userIdToImpersonate);\n  }\n\n  _throwNotAuthorized() {\n    throw new Meteor.Error(401, 'Unauthorized');\n  }\n\n  _checkRolesForImpersonation(userId) {\n    if (!Security.isUserAdmin(userId)) {\n      this._throwNotAuthorized();\n    }\n  }\n  /**\n   * @param {string} authToken\n   * @returns {object|null}\n   */\n\n\n  _findUserByToken(authToken) {\n    // eslint-disable-next-line\n    const hashedToken = Accounts._hashLoginToken(authToken);\n\n    return Users.findOne({\n      'services.resume.loginTokens.hashedToken': hashedToken\n    }, // We just need to check the validity, no need for other data\n    {\n      fields: {\n        _id: 1\n      }\n    });\n  }\n\n  impersonateAdmin({\n    context,\n    userIdToImpersonate\n  }) {\n    context.setUserId(userIdToImpersonate);\n  }\n\n}\n\nmodule.exportDefault(new ImpersonateService());\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/impersonation/server/methods.js                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 0);\nlet impersonateUser, impersonateAdmin;\nmodule.link(\"../methodDefinitions\", {\n  impersonateUser(v) {\n    impersonateUser = v;\n  },\n\n  impersonateAdmin(v) {\n    impersonateAdmin = v;\n  }\n\n}, 1);\nlet ImpersonateService;\nmodule.link(\"./ImpersonateService\", {\n  default(v) {\n    ImpersonateService = v;\n  }\n\n}, 2);\nimpersonateUser.setHandler((context, {\n  authToken,\n  userId\n}) => {\n  const impersonatedUser = ImpersonateService.impersonate({\n    context,\n    authToken,\n    userIdToImpersonate: userId\n  });\n  return impersonatedUser;\n});\nimpersonateAdmin.setHandler((context, {\n  userId\n}) => {\n  SecurityService.checkUserIsDev(context.userId);\n  const impersonatedUser = ImpersonateService.impersonateAdmin({\n    context,\n    userIdToImpersonate: userId\n  });\n  return impersonatedUser;\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"methodDefinitions.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/impersonation/methodDefinitions.js                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  impersonateUser: () => impersonateUser,\n  impersonateAdmin: () => impersonateAdmin\n});\nlet Method;\nmodule.link(\"../methods/methods\", {\n  Method(v) {\n    Method = v;\n  }\n\n}, 0);\nconst impersonateUser = new Method({\n  name: 'impersonateUser',\n  params: {\n    authToken: String,\n    userId: String\n  }\n});\nconst impersonateAdmin = new Method({\n  name: 'impersonateAdmin',\n  params: {\n    userId: String\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"interestRates\":{\"schemas\":{\"interestRatesSchema.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/interestRates/schemas/interestRatesSchema.js                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 0);\nlet createdAt, updatedAt, percentageField;\nmodule.link(\"../../helpers/sharedSchemas\", {\n  createdAt(v) {\n    createdAt = v;\n  },\n\n  updatedAt(v) {\n    updatedAt = v;\n  },\n\n  percentageField(v) {\n    percentageField = v;\n  }\n\n}, 1);\nlet TRENDS, INTEREST_RATES;\nmodule.link(\"../interestRatesConstants\", {\n  TRENDS(v) {\n    TRENDS = v;\n  },\n\n  INTEREST_RATES(v) {\n    INTEREST_RATES = v;\n  }\n\n}, 2);\n\nconst singleInterestRate = type => ({\n  [type]: {\n    type: Object,\n    optional: true,\n    defaultValue: {}\n  },\n  [`${type}.rateLow`]: percentageField,\n  [`${type}.rateHigh`]: percentageField,\n  [`${type}.trend`]: {\n    type: String,\n    allowedValues: Object.values(TRENDS),\n    optional: true\n  }\n});\n\nconst rates = Object.values(INTEREST_RATES).reduce((interestRates, type) => (0, _objectSpread2.default)({}, interestRates, singleInterestRate(type)), {});\nconst InterestRatesSchema = new SimpleSchema((0, _objectSpread2.default)({\n  createdAt,\n  updatedAt,\n  date: Date\n}, rates));\nmodule.exportDefault(InterestRatesSchema);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"InterestRatesService.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/interestRates/server/InterestRatesService.js                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet InterestRates;\nmodule.link(\"../interestRates\", {\n  default(v) {\n    InterestRates = v;\n  }\n\n}, 0);\nlet CollectionService;\nmodule.link(\"../../helpers/CollectionService\", {\n  default(v) {\n    CollectionService = v;\n  }\n\n}, 1);\n\nclass InterestRatesService extends CollectionService {\n  constructor() {\n    super(InterestRates);\n  }\n\n}\n\nmodule.exportDefault(new InterestRatesService());\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"exposures.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/interestRates/server/exposures.js                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 0);\nlet exposeQuery;\nmodule.link(\"../../queries/queryHelpers\", {\n  exposeQuery(v) {\n    exposeQuery = v;\n  }\n\n}, 1);\nlet currentInterestRates, interestRates;\nmodule.link(\"../queries\", {\n  currentInterestRates(v) {\n    currentInterestRates = v;\n  },\n\n  interestRates(v) {\n    interestRates = v;\n  }\n\n}, 2);\nlet INTEREST_RATES;\nmodule.link(\"../interestRatesConstants\", {\n  INTEREST_RATES(v) {\n    INTEREST_RATES = v;\n  }\n\n}, 3);\nexposeQuery({\n  query: currentInterestRates,\n  overrides: {\n    firewall(userId) {},\n\n    embody(body) {\n      body.$filter = ({\n        filters\n      }) => {\n        filters.date = {\n          $lte: moment().toDate()\n        };\n      };\n\n      body.$options = {\n        sort: {\n          date: -1\n        },\n        limit: 1\n      };\n    }\n\n  }\n});\nexposeQuery({\n  query: interestRates,\n  options: {\n    allowFilterById: true\n  },\n  overrides: {\n    firewall(userId) {},\n\n    embody(body) {\n      body.$postFilter = (rates = []) => rates.map(rate => {\n        const {\n          _id,\n          date\n        } = rate;\n        return Object.values(INTEREST_RATES).reduce((formattedRate, key) => (0, _objectSpread2.default)({}, formattedRate, {\n          [key]: rate[key] || {}\n        }), {\n          _id,\n          date\n        });\n      });\n    }\n\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/interestRates/server/methods.js                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 0);\nlet InterestRatesService;\nmodule.link(\"./InterestRatesService\", {\n  default(v) {\n    InterestRatesService = v;\n  }\n\n}, 1);\nlet interestRatesInsert, interestRatesRemove, interestRatesUpdate;\nmodule.link(\"../methodDefinitions\", {\n  interestRatesInsert(v) {\n    interestRatesInsert = v;\n  },\n\n  interestRatesRemove(v) {\n    interestRatesRemove = v;\n  },\n\n  interestRatesUpdate(v) {\n    interestRatesUpdate = v;\n  }\n\n}, 2);\ninterestRatesInsert.setHandler((context, {\n  interestRates\n}) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return InterestRatesService.insert(interestRates);\n});\ninterestRatesRemove.setHandler((context, {\n  interestRatesId\n}) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return InterestRatesService.remove(interestRatesId);\n});\ninterestRatesUpdate.setHandler((context, {\n  interestRatesId,\n  object\n}) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return InterestRatesService._update({\n    id: interestRatesId,\n    object\n  });\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"fakes.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/interestRates/fakes.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  getRandomInterestRate: () => getRandomInterestRate\n});\nlet TRENDS;\nmodule.link(\"./interestRatesConstants\", {\n  TRENDS(v) {\n    TRENDS = v;\n  }\n\n}, 0);\n\nconst randInArray = array => array[Math.floor(Math.random() * array.length)];\n\nconst getRandomInterestRate = mean => {\n  const rateLow = (mean - Math.random() * 0.2) / 100;\n  const rateHigh = (mean + Math.random() * 0.2) / 100;\n  const trend = randInArray(Object.values(TRENDS));\n  return {\n    rateLow,\n    rateHigh,\n    trend\n  };\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/interestRates/index.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./methodDefinitions\", {\n  \"*\": \"*\"\n}, 0);\nmodule.link(\"./interestRates\", {\n  default: \"default\"\n}, 1);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"interestRates.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/interestRates/interestRates.js                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet InterestRatesSchema;\nmodule.link(\"./schemas/interestRatesSchema\", {\n  default(v) {\n    InterestRatesSchema = v;\n  }\n\n}, 1);\nlet INTEREST_RATES_COLLECTION;\nmodule.link(\"./interestRatesConstants\", {\n  INTEREST_RATES_COLLECTION(v) {\n    INTEREST_RATES_COLLECTION = v;\n  }\n\n}, 2);\nconst InterestRates = new Mongo.Collection(INTEREST_RATES_COLLECTION);\nInterestRates.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true\n});\nInterestRates.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false\n});\nInterestRates.attachSchema(InterestRatesSchema);\nmodule.exportDefault(InterestRates);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"interestRatesConstants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/interestRates/interestRatesConstants.js                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  INTEREST_TREND: () => INTEREST_TREND,\n  INTEREST_RATES_COLLECTION: () => INTEREST_RATES_COLLECTION,\n  TRENDS: () => TRENDS,\n  INTEREST_RATES: () => INTEREST_RATES,\n  INTEREST_RATES_QUERIES: () => INTEREST_RATES_QUERIES\n});\nconst INTEREST_TREND = {\n  UP: 'UP',\n  DOWN: 'DOWN'\n};\nconst INTEREST_RATES_COLLECTION = 'interestRates';\nconst TRENDS = {\n  UP: 'UP',\n  DOWN: 'DOWN',\n  FLAT: 'FLAT'\n};\nconst INTEREST_RATES = {\n  LIBOR: 'interestLibor',\n  YEARS_1: 'interest1',\n  YEARS_2: 'interest2',\n  YEARS_5: 'interest5',\n  YEARS_10: 'interest10',\n  YEARS_15: 'interest15',\n  YEARS_20: 'interest20',\n  YEARS_25: 'interest25'\n};\nconst INTEREST_RATES_QUERIES = {\n  INTEREST_RATES: 'INTEREST_RATES',\n  CURRENT_INTEREST_RATES: 'CURRENT_INTEREST_RATES'\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methodDefinitions.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/interestRates/methodDefinitions.js                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  interestRatesInsert: () => interestRatesInsert,\n  interestRatesRemove: () => interestRatesRemove,\n  interestRatesUpdate: () => interestRatesUpdate\n});\nlet Method;\nmodule.link(\"../methods/methods\", {\n  Method(v) {\n    Method = v;\n  }\n\n}, 0);\nconst interestRatesInsert = new Method({\n  name: 'interestRatesInsert',\n  params: {\n    interestRates: Object\n  }\n});\nconst interestRatesRemove = new Method({\n  name: 'interestRatesRemove',\n  params: {\n    interestRatesId: String\n  }\n});\nconst interestRatesUpdate = new Method({\n  name: 'interestRatesUpdate',\n  params: {\n    interestRatesId: String,\n    object: Object\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"queries.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/interestRates/queries.js                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  currentInterestRates: () => currentInterestRates,\n  interestRates: () => interestRates\n});\nlet currentInterestRatesFragment, interestRatesFragment;\nmodule.link(\"../fragments\", {\n  currentInterestRates(v) {\n    currentInterestRatesFragment = v;\n  },\n\n  interestRates(v) {\n    interestRatesFragment = v;\n  }\n\n}, 0);\nlet InterestRates;\nmodule.link(\".\", {\n  default(v) {\n    InterestRates = v;\n  }\n\n}, 1);\nlet INTEREST_RATES_QUERIES, INTEREST_RATES;\nmodule.link(\"./interestRatesConstants\", {\n  INTEREST_RATES_QUERIES(v) {\n    INTEREST_RATES_QUERIES = v;\n  },\n\n  INTEREST_RATES(v) {\n    INTEREST_RATES = v;\n  }\n\n}, 2);\n\nconst makeCheckIsRate = rates => type => rates[type].rateLow && rates[type].rateHigh && rates[type].trend;\n\nconst makeFormatRate = rates => type => ({\n  type,\n  rateLow: rates[type].rateLow,\n  rateHigh: rates[type].rateHigh,\n  trend: rates[type].trend\n});\n\nconst sortRates = ({\n  type: a\n}, {\n  type: b\n}) => Object.values(INTEREST_RATES).indexOf(a) - Object.values(INTEREST_RATES).indexOf(b);\n\nconst getAverageRates = rates => rates.reduce((avgRates, {\n  type,\n  rateLow,\n  rateHigh\n}) => (0, _objectSpread2.default)({}, avgRates, {\n  [type]: (rateLow + rateHigh) / 2\n}), {});\n\nconst currentInterestRates = InterestRates.createQuery(INTEREST_RATES_QUERIES.CURRENT_INTEREST_RATES, (0, _objectSpread2.default)({\n  $postFilter(results) {\n    const interestRates = results.length > 0 && results[0];\n    const cleanedRates = Object.keys(interestRates).filter(makeCheckIsRate(interestRates)).map(makeFormatRate(interestRates)).sort(sortRates);\n    const averageRates = getAverageRates(cleanedRates);\n    return {\n      rates: cleanedRates,\n      averageRates,\n      date: interestRates.date\n    };\n  }\n\n}, currentInterestRatesFragment()));\nconst interestRates = InterestRates.createQuery(INTEREST_RATES_QUERIES.INTEREST_RATES, (0, _objectSpread2.default)({}, interestRatesFragment(), {\n  $options: {\n    sort: {\n      date: -1\n    }\n  }\n}));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"irs10y\":{\"schemas\":{\"irs10ySchema.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/irs10y/schemas/irs10ySchema.js                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 0);\nlet createdAt, updatedAt, percentageField;\nmodule.link(\"../../helpers/sharedSchemas\", {\n  createdAt(v) {\n    createdAt = v;\n  },\n\n  updatedAt(v) {\n    updatedAt = v;\n  },\n\n  percentageField(v) {\n    percentageField = v;\n  }\n\n}, 1);\nconst Irs10ySchema = new SimpleSchema({\n  createdAt,\n  updatedAt,\n  date: Date,\n  rate: (0, _objectSpread2.default)({}, percentageField, {\n    optional: false\n  })\n});\nmodule.exportDefault(Irs10ySchema);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"Irs10yService.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/irs10y/server/Irs10yService.js                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Irs10y;\nmodule.link(\"../irs10y\", {\n  default(v) {\n    Irs10y = v;\n  }\n\n}, 1);\nlet CollectionService;\nmodule.link(\"../../helpers/CollectionService\", {\n  default(v) {\n    CollectionService = v;\n  }\n\n}, 2);\n\nclass Irs10yService extends CollectionService {\n  constructor() {\n    super(Irs10y);\n  }\n\n  insert({\n    date,\n    rate\n  }) {\n    const start = new Date(date);\n    start.setHours(0, 0, 0, 0);\n    const end = new Date(date);\n    end.setHours(23, 59, 59, 999);\n    const existingFromToday = this.find({\n      date: {\n        $gte: start,\n        $lt: end\n      }\n    }).fetch();\n\n    if (!existingFromToday || existingFromToday.length === 0) {\n      return super.insert({\n        date,\n        rate\n      });\n    }\n\n    throw new Meteor.Error('Un taux existe déjà pour cette date');\n  }\n\n}\n\nmodule.exportDefault(new Irs10yService());\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"exposures.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/irs10y/server/exposures.js                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet exposeQuery;\nmodule.link(\"../../queries/queryHelpers\", {\n  exposeQuery(v) {\n    exposeQuery = v;\n  }\n\n}, 0);\nlet irs10y;\nmodule.link(\"../queries\", {\n  irs10y(v) {\n    irs10y = v;\n  }\n\n}, 1);\nexposeQuery({\n  query: irs10y,\n  options: {\n    allowFilterById: true\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"fetchIrs10y.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/irs10y/server/fetchIrs10y.js                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  fetchIrs10y: () => fetchIrs10y\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\n\nconst cheerio = require('cheerio');\n\nconst request = require('request');\n\nconst URL = 'https://kurse.vermoegenszentrum.ch/vermoegenszentrum/details/details.jsp?listingId=211372,433,1';\n\nconst fetchIrs10y = () => new Promise((resolve, reject) => {\n  request(URL, (error, response, html) => {\n    if (!error && response.statusCode === 200) {\n      const $ = cheerio.load(html);\n      let result = $('.kum-bht-value').text();\n      result = result.split('%')[0] / 100;\n      resolve(result);\n    }\n\n    reject(new Meteor.Error(error));\n  });\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/irs10y/server/methods.js                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  irs10yFetch: () => irs10yFetch\n});\nlet Method;\nmodule.link(\"../../methods/methods\", {\n  Method(v) {\n    Method = v;\n  }\n\n}, 0);\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 1);\nlet irs10yInsert, irs10yRemove, irs10yUpdate;\nmodule.link(\"../methodDefinitions\", {\n  irs10yInsert(v) {\n    irs10yInsert = v;\n  },\n\n  irs10yRemove(v) {\n    irs10yRemove = v;\n  },\n\n  irs10yUpdate(v) {\n    irs10yUpdate = v;\n  }\n\n}, 2);\nlet Irs10yService;\nmodule.link(\"./Irs10yService\", {\n  default(v) {\n    Irs10yService = v;\n  }\n\n}, 3);\nlet fetchIrs10y;\nmodule.link(\"./fetchIrs10y\", {\n  fetchIrs10y(v) {\n    fetchIrs10y = v;\n  }\n\n}, 4);\nirs10yInsert.setHandler((context, {\n  irs10y\n}) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return Irs10yService.insert(irs10y);\n});\nirs10yRemove.setHandler((context, {\n  irs10yId\n}) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return Irs10yService.remove(irs10yId);\n});\nirs10yUpdate.setHandler((context, {\n  irs10yId,\n  object\n}) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return Irs10yService._update({\n    id: irs10yId,\n    object\n  });\n});\nconst irs10yFetch = new Method({\n  name: 'irs10yFetch'\n});\nirs10yFetch.setHandler(() => fetchIrs10y().then(irs10y => {\n  Irs10yService.insert({\n    date: new Date(),\n    rate: irs10y\n  });\n  return {\n    rate: irs10y\n  };\n}).catch(error => {\n  throw error;\n}));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/irs10y/index.js                                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./methodDefinitions\", {\n  \"*\": \"*\"\n}, 0);\nmodule.link(\"./irs10y\", {\n  default: \"default\"\n}, 1);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"irs10y.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/irs10y/irs10y.js                                                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet Irs10ySchema;\nmodule.link(\"./schemas/irs10ySchema\", {\n  default(v) {\n    Irs10ySchema = v;\n  }\n\n}, 1);\nlet IRS10Y_COLLECTION;\nmodule.link(\"./irs10yConstants\", {\n  IRS10Y_COLLECTION(v) {\n    IRS10Y_COLLECTION = v;\n  }\n\n}, 2);\nconst Irs10y = new Mongo.Collection(IRS10Y_COLLECTION);\nIrs10y.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true\n});\nIrs10y.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false\n});\nIrs10y.attachSchema(Irs10ySchema);\nmodule.exportDefault(Irs10y);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"irs10yConstants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/irs10y/irs10yConstants.js                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  IRS10Y_COLLECTION: () => IRS10Y_COLLECTION,\n  IRS10Y_QUERIES: () => IRS10Y_QUERIES\n});\nconst IRS10Y_COLLECTION = 'irs10y';\nconst IRS10Y_QUERIES = {\n  IRS10Y: 'IRS10Y'\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methodDefinitions.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/irs10y/methodDefinitions.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  irs10yInsert: () => irs10yInsert,\n  irs10yRemove: () => irs10yRemove,\n  irs10yUpdate: () => irs10yUpdate\n});\nlet Method;\nmodule.link(\"../methods/methods\", {\n  Method(v) {\n    Method = v;\n  }\n\n}, 0);\nconst irs10yInsert = new Method({\n  name: 'irs10yInsert',\n  params: {\n    irs10y: Object\n  }\n});\nconst irs10yRemove = new Method({\n  name: 'irs10yRemove',\n  params: {\n    irs10yId: String\n  }\n});\nconst irs10yUpdate = new Method({\n  name: 'irs10yUpdate',\n  params: {\n    irs10yId: String,\n    object: Object\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"queries.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/irs10y/queries.js                                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  irs10y: () => irs10y\n});\nlet irs10yFragment;\nmodule.link(\"../fragments\", {\n  irs10y(v) {\n    irs10yFragment = v;\n  }\n\n}, 0);\nlet IRS10Y_QUERIES;\nmodule.link(\"./irs10yConstants\", {\n  IRS10Y_QUERIES(v) {\n    IRS10Y_QUERIES = v;\n  }\n\n}, 1);\nlet Irs10y;\nmodule.link(\".\", {\n  default(v) {\n    Irs10y = v;\n  }\n\n}, 2);\nconst irs10y = Irs10y.createQuery(IRS10Y_QUERIES.IRS10Y, (0, _objectSpread2.default)({}, irs10yFragment(), {\n  $options: {\n    sort: {\n      date: -1\n    }\n  }\n}));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"lenderRules\":{\"schemas\":{\"lenderRulesSchema.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/lenderRules/schemas/lenderRulesSchema.js                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  incomeConsideration: () => incomeConsideration,\n  theoreticalExpenses: () => theoreticalExpenses,\n  cutOffCriteria: () => cutOffCriteria,\n  otherParams: () => otherParams,\n  LenderRulesEditorSchema: () => LenderRulesEditorSchema\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 1);\nlet BONUS_ALGORITHMS, REAL_ESTATE_INCOME_ALGORITHMS;\nmodule.link(\"../../../config/financeConstants\", {\n  BONUS_ALGORITHMS(v) {\n    BONUS_ALGORITHMS = v;\n  },\n\n  REAL_ESTATE_INCOME_ALGORITHMS(v) {\n    REAL_ESTATE_INCOME_ALGORITHMS = v;\n  }\n\n}, 2);\nlet createdAt, updatedAt, percentageField;\nmodule.link(\"../../helpers/sharedSchemas\", {\n  createdAt(v) {\n    createdAt = v;\n  },\n\n  updatedAt(v) {\n    updatedAt = v;\n  },\n\n  percentageField(v) {\n    percentageField = v;\n  }\n\n}, 3);\nlet INCOME_CONSIDERATION_TYPES, EXPENSE_TYPES_WITHOUT_DELTAS;\nmodule.link(\"../lenderRulesConstants\", {\n  INCOME_CONSIDERATION_TYPES(v) {\n    INCOME_CONSIDERATION_TYPES = v;\n  },\n\n  EXPENSE_TYPES_WITHOUT_DELTAS(v) {\n    EXPENSE_TYPES_WITHOUT_DELTAS = v;\n  }\n\n}, 4);\nconst incomeConsideration = {\n  incomeConsiderationType: {\n    type: String,\n    allowedValues: Object.values(INCOME_CONSIDERATION_TYPES),\n    optional: true\n  },\n  bonusAlgorithm: {\n    type: String,\n    allowedValues: Object.values(BONUS_ALGORITHMS),\n    optional: true,\n    uniforms: {\n      placeholder: null\n    }\n  },\n  bonusConsideration: percentageField,\n  bonusHistoryToConsider: {\n    type: SimpleSchema.Integer,\n    optional: true\n  },\n  companyIncomeConsideration: percentageField,\n  companyIncomeHistoryToConsider: {\n    type: SimpleSchema.Integer,\n    optional: true\n  },\n  dividendsConsideration: percentageField,\n  dividendsHistoryToConsider: {\n    type: SimpleSchema.Integer,\n    optional: true\n  },\n  realEstateIncomeAlgorithm: {\n    type: String,\n    allowedValues: Object.values(REAL_ESTATE_INCOME_ALGORITHMS),\n    optional: true,\n    uniforms: {\n      placeholder: null\n    }\n  },\n  realEstateIncomeConsideration: percentageField,\n  // realEstateIncomeConsiderationType: {\n  //   type: String,\n  //   allowedValues: Object.values(REAL_ESTATE_CONSIDERATION_TYPES),\n  //   optional: true,\n  // },\n  investmentIncomeConsideration: percentageField,\n  expensesSubtractFromIncome: {\n    type: Array,\n    optional: true,\n    uniforms: {\n      intlId: 'expenses',\n      placeholder: 'Ajouter toutes les charges aux charges théoriques',\n      label: 'Charges à soustraire aux revenus'\n    },\n\n    autoValue() {\n      if (Meteor.isServer && this.isSet && Array.isArray(this.value) && this.value.length === 0) {\n        return {\n          $unset: true\n        };\n      }\n    }\n\n  },\n  'expensesSubtractFromIncome.$': {\n    type: String,\n    // REAL_ESTATE_DELTAS are handled internally\n    allowedValues: EXPENSE_TYPES_WITHOUT_DELTAS\n  },\n  fortuneReturnsRatio: percentageField\n};\nconst theoreticalExpenses = {\n  theoreticalInterestRate: percentageField,\n  theoreticalInterestRate2ndRank: percentageField,\n  theoreticalMaintenanceRate: percentageField,\n  amortizationGoal: percentageField,\n  amortizationYears: {\n    type: SimpleSchema.Integer,\n    min: 0,\n    max: 20,\n    optional: true\n  }\n};\nconst cutOffCriteria = {\n  maxBorrowRatio: percentageField,\n  maxBorrowRatioWithPledge: percentageField,\n  maxIncomeRatio: percentageField\n};\nconst otherParams = {\n  allowPledge: {\n    type: Boolean,\n    optional: true,\n\n    autoValue() {\n      if (Meteor.isServer && this.isSet && this.value === false) {\n        return {\n          $unset: true\n        };\n      }\n    }\n\n  },\n  adminComments: {\n    type: Array,\n    defaultValue: []\n  },\n  'adminComments.$': String,\n  pdfComments: {\n    type: Array,\n    defaultValue: []\n  },\n  'pdfComments.$': String\n};\nconst LenderRulesSchema = new SimpleSchema((0, _objectSpread2.default)({\n  createdAt,\n  updatedAt,\n  organisationLink: {\n    type: Object,\n    optional: true\n  },\n  'organisationLink._id': {\n    type: String,\n    optional: true\n  },\n  filter: {\n    type: Object,\n    blackbox: true\n  },\n  name: {\n    type: String,\n    optional: true\n  },\n  order: {\n    type: Number,\n    min: 0\n  },\n  organisationCache: {\n    type: Object,\n    blackbox: true,\n    optional: true\n  }\n}, incomeConsideration, theoreticalExpenses, cutOffCriteria, otherParams));\nconst LenderRulesEditorSchema = LenderRulesSchema.pick(...Object.keys(incomeConsideration), ...Object.keys(theoreticalExpenses), ...Object.keys(cutOffCriteria), ...Object.keys(otherParams));\nmodule.exportDefault(LenderRulesSchema);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"LenderRulesService.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/lenderRules/server/LenderRulesService.js                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet OrganisationService;\nmodule.link(\"../../organisations/server/OrganisationService\", {\n  default(v) {\n    OrganisationService = v;\n  }\n\n}, 1);\nlet LenderRules;\nmodule.link(\"../lenderRules\", {\n  default(v) {\n    LenderRules = v;\n  }\n\n}, 2);\nlet CollectionService;\nmodule.link(\"../../helpers/CollectionService\", {\n  default(v) {\n    CollectionService = v;\n  }\n\n}, 3);\nlet DEFAULT_VALUE_FOR_ALL, DEFAULT_MAIN_RESIDENCE_RULES, DEFAULT_SECONDARY_RESIDENCE_RULES;\nmodule.link(\"../lenderRulesConstants\", {\n  DEFAULT_VALUE_FOR_ALL(v) {\n    DEFAULT_VALUE_FOR_ALL = v;\n  },\n\n  DEFAULT_MAIN_RESIDENCE_RULES(v) {\n    DEFAULT_MAIN_RESIDENCE_RULES = v;\n  },\n\n  DEFAULT_SECONDARY_RESIDENCE_RULES(v) {\n    DEFAULT_SECONDARY_RESIDENCE_RULES = v;\n  }\n\n}, 4);\n\nclass LenderRulesService extends CollectionService {\n  constructor() {\n    super(LenderRules);\n  }\n\n  remove({\n    lenderRulesId\n  }) {\n    return super.remove(lenderRulesId);\n  }\n\n  initialize({\n    organisationId\n  }) {\n    const id1 = this.insert({\n      organisationId,\n      object: DEFAULT_VALUE_FOR_ALL,\n      logicRules: [true]\n    });\n    const id2 = this.insert({\n      organisationId,\n      object: {\n        maxBorrowRatio: 0.8\n      },\n      logicRules: DEFAULT_MAIN_RESIDENCE_RULES\n    });\n    const id3 = this.insert({\n      organisationId,\n      object: {\n        maxBorrowRatio: 0.7\n      },\n      logicRules: DEFAULT_SECONDARY_RESIDENCE_RULES\n    });\n    return [id1, id2, id3];\n  }\n\n  insert({\n    organisationId,\n    object = {},\n    logicRules\n  }) {\n    const {\n      lenderRules = []\n    } = OrganisationService.fetchOne({\n      $filters: {\n        _id: organisationId\n      },\n      lenderRules: {\n        _id: 1\n      }\n    });\n    const lenderRulesId = super.insert((0, _objectSpread2.default)({}, object, {\n      filter: {\n        and: logicRules\n      },\n      order: lenderRules.length\n    }));\n    this.addLink({\n      id: lenderRulesId,\n      linkName: 'organisation',\n      linkId: organisationId\n    });\n    return lenderRulesId;\n  }\n\n  update({\n    lenderRulesId,\n    object\n  }) {\n    if (object.filter) {\n      throw new Meteor.Error('You can not update the filter here');\n    }\n\n    return this._update({\n      id: lenderRulesId,\n      object\n    });\n  }\n\n  updateFilter({\n    lenderRulesId,\n    logicRules,\n    name\n  }) {\n    return this._update({\n      id: lenderRulesId,\n      object: {\n        filter: {\n          and: logicRules\n        },\n        name\n      }\n    });\n  }\n\n  setOrder({\n    orders\n  }) {\n    const ids = Object.keys(orders);\n    const numbers = Object.values(orders).sort((a, b) => a - b);\n    const lenderRules = this.fetch({\n      $filters: {\n        _id: {\n          $in: ids\n        }\n      },\n      organisation: {\n        _id: 1\n      },\n      organisationLink: 1\n    });\n    lenderRules.forEach(({\n      organisation: {\n        _id\n      }\n    }) => {\n      if (_id !== lenderRules[0].organisation._id) {\n        throw new Meteor.Error('Tous les filtres doivent appartenir à la même organisation');\n      }\n    });\n    numbers.forEach((num, index) => {\n      if (index !== num) {\n        throw new Meteor.Error(\"L'ordre des filtres doit commencer par 0 et être continu\");\n      }\n    });\n    Object.keys(orders).forEach(lenderRulesId => {\n      const nextOrder = orders[lenderRulesId];\n      this.update({\n        lenderRulesId,\n        object: {\n          order: nextOrder\n        }\n      });\n    });\n  }\n\n}\n\nmodule.exportDefault(new LenderRulesService());\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"exposures.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/lenderRules/server/exposures.js                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet exposeQuery;\nmodule.link(\"../../queries/queryHelpers\", {\n  exposeQuery(v) {\n    exposeQuery = v;\n  }\n\n}, 0);\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 1);\nlet organisationLenderRules;\nmodule.link(\"../queries\", {\n  organisationLenderRules(v) {\n    organisationLenderRules = v;\n  }\n\n}, 2);\nexposeQuery({\n  query: organisationLenderRules,\n  overrides: {\n    firewall() {\n      SecurityService.checkLoggedIn();\n    },\n\n    embody: (body, params) => {\n      body.$filter = ({\n        filters,\n        params: {\n          organisationId\n        }\n      }) => {\n        filters['organisationLink._id'] = organisationId;\n      };\n    },\n    validateParams: {\n      organisationId: String\n    }\n  },\n  options: {\n    allowFilterById: true\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/lenderRules/server/methods.js                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 0);\nlet LenderRulesService;\nmodule.link(\"./LenderRulesService\", {\n  default(v) {\n    LenderRulesService = v;\n  }\n\n}, 1);\nlet lenderRulesInitialize, lenderRulesInsert, lenderRulesRemove, lenderRulesUpdate, lenderRulesUpdateFilter, setLenderRulesOrder;\nmodule.link(\"../methodDefinitions\", {\n  lenderRulesInitialize(v) {\n    lenderRulesInitialize = v;\n  },\n\n  lenderRulesInsert(v) {\n    lenderRulesInsert = v;\n  },\n\n  lenderRulesRemove(v) {\n    lenderRulesRemove = v;\n  },\n\n  lenderRulesUpdate(v) {\n    lenderRulesUpdate = v;\n  },\n\n  lenderRulesUpdateFilter(v) {\n    lenderRulesUpdateFilter = v;\n  },\n\n  setLenderRulesOrder(v) {\n    setLenderRulesOrder = v;\n  }\n\n}, 2);\nlenderRulesInitialize.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return LenderRulesService.initialize(params);\n});\nlenderRulesInsert.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return LenderRulesService.insert(params);\n});\nlenderRulesRemove.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return LenderRulesService.remove(params);\n});\nlenderRulesUpdate.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return LenderRulesService.update(params);\n});\nlenderRulesUpdateFilter.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return LenderRulesService.updateFilter(params);\n});\nsetLenderRulesOrder.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return LenderRulesService.setOrder(params);\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"helpers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/lenderRules/helpers.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nmodule.export({\n  getMatchingRules: () => getMatchingRules,\n  isAllRule: () => isAllRule,\n  parseFilter: () => parseFilter,\n  formatFilter: () => formatFilter\n});\nlet jsonLogic;\nmodule.link(\"json-logic-js\", {\n  default(v) {\n    jsonLogic = v;\n  }\n\n}, 0);\nconst rulesToMerge = ['pdfComments', 'adminComments'];\n\nconst filterIsValid = (filter, variables) => jsonLogic.apply(filter, variables);\n\nconst mergeRules = (_ref, newRules) => {\n  let {\n    names = []\n  } = _ref,\n      oldRules = (0, _objectWithoutProperties2.default)(_ref, [\"names\"]);\n  let mergedObject = (0, _objectSpread2.default)({}, oldRules);\n  Object.keys(newRules).forEach(newRuleName => {\n    const newRule = newRules[newRuleName];\n\n    if (rulesToMerge.includes(newRuleName) && mergedObject[newRuleName]) {\n      mergedObject = (0, _objectSpread2.default)({}, mergedObject, {\n        [newRuleName]: [...mergedObject[newRuleName], ...newRule]\n      });\n    } else if (newRule !== undefined && newRule !== null) {\n      mergedObject = (0, _objectSpread2.default)({}, mergedObject, {\n        [newRuleName]: newRule\n      });\n    }\n  });\n  return (0, _objectSpread2.default)({}, mergedObject, {\n    names: [...names, newRules.name]\n  });\n};\n\nconst getMatchingRules = (lenderRules, variables, storeOrigin = () => {}) => lenderRules.reduce((validRules, _ref2) => {\n  let {\n    filter\n  } = _ref2,\n      rules = (0, _objectWithoutProperties2.default)(_ref2, [\"filter\"]);\n\n  if (filterIsValid(filter, variables)) {\n    storeOrigin(rules, rules._id);\n    return mergeRules(validRules, rules);\n  }\n\n  return validRules;\n}, {});\n\nconst isAllRule = ({\n  filter: {\n    and\n  }\n}) => and[0] === true;\n\nconst parseFilter = ruleObject => {\n  if (ruleObject === true) {\n    // Handle exception for rules that are true, i.e. apply to all loans\n    return {\n      value: true\n    };\n  }\n\n  const [operator] = Object.keys(ruleObject);\n  const {\n    var: variable\n  } = ruleObject[operator].find(o => o && o.var);\n  const value = ruleObject[operator].find(o => !(o && o.var));\n  return {\n    operator,\n    variable,\n    value\n  };\n};\n\nconst formatFilter = ({\n  variable,\n  operator,\n  value\n}) => ({\n  [operator]: [{\n    var: variable\n  }, value]\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/lenderRules/index.js                                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./methodDefinitions\", {\n  \"*\": \"*\"\n}, 0);\nmodule.link(\"./lenderRules\", {\n  default: \"default\"\n}, 1);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lenderRules.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/lenderRules/lenderRules.js                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet LenderRulesSchema;\nmodule.link(\"./schemas/lenderRulesSchema\", {\n  default(v) {\n    LenderRulesSchema = v;\n  }\n\n}, 1);\nlet LENDER_RULES_COLLECTION;\nmodule.link(\"./lenderRulesConstants\", {\n  LENDER_RULES_COLLECTION(v) {\n    LENDER_RULES_COLLECTION = v;\n  }\n\n}, 2);\nconst LenderRules = new Mongo.Collection(LENDER_RULES_COLLECTION);\nLenderRules.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true\n});\nLenderRules.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false\n});\nLenderRules.attachSchema(LenderRulesSchema);\nmodule.exportDefault(LenderRules);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lenderRulesConstants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/lenderRules/lenderRulesConstants.js                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  LENDER_RULES_COLLECTION: () => LENDER_RULES_COLLECTION,\n  LENDER_RULES_QUERIES: () => LENDER_RULES_QUERIES,\n  INCOME_CONSIDERATION_TYPES: () => INCOME_CONSIDERATION_TYPES,\n  REAL_ESTATE_CONSIDERATION_TYPES: () => REAL_ESTATE_CONSIDERATION_TYPES,\n  EXPENSES_CONSIDERATION_TYPES: () => EXPENSES_CONSIDERATION_TYPES,\n  LENDER_RULES_VARIABLES: () => LENDER_RULES_VARIABLES,\n  LENDER_RULES_OPERATORS: () => LENDER_RULES_OPERATORS,\n  DEFAULT_MAIN_RESIDENCE_RULES: () => DEFAULT_MAIN_RESIDENCE_RULES,\n  DEFAULT_SECONDARY_RESIDENCE_RULES: () => DEFAULT_SECONDARY_RESIDENCE_RULES,\n  EXPENSE_TYPES: () => EXPENSE_TYPES,\n  EXPENSE_TYPES_WITHOUT_DELTAS: () => EXPENSE_TYPES_WITHOUT_DELTAS,\n  DEFAULT_VALUE_FOR_ALL: () => DEFAULT_VALUE_FOR_ALL\n});\nlet BONUS_ALGORITHMS;\nmodule.link(\"../../config/financeConstants\", {\n  BONUS_ALGORITHMS(v) {\n    BONUS_ALGORITHMS = v;\n  }\n\n}, 0);\nlet RESIDENCE_TYPE;\nmodule.link(\"../properties/propertyConstants\", {\n  RESIDENCE_TYPE(v) {\n    RESIDENCE_TYPE = v;\n  }\n\n}, 1);\nlet EXPENSES;\nmodule.link(\"../borrowers/borrowerConstants\", {\n  EXPENSES(v) {\n    EXPENSES = v;\n  }\n\n}, 2);\nconst LENDER_RULES_COLLECTION = 'lenderRules';\nconst LENDER_RULES_QUERIES = {\n  ORGANISATION_LENDER_RULES: 'ORGANISATION_LENDER_RULES'\n};\nconst INCOME_CONSIDERATION_TYPES = {\n  GROSS: 'GROSS',\n  NET: 'NET'\n};\nconst REAL_ESTATE_CONSIDERATION_TYPES = {\n  ADD_TO_INCOME: 'ADD_TO_INCOME',\n  SUBTRACT_FROM_EXPENSES: 'SUBTRACT_FROM_EXPENSES'\n};\nconst EXPENSES_CONSIDERATION_TYPES = {\n  SUBTRACT_FROM_INCOME: 'SUBTRACT_FROM_INCOME',\n  ADD_TO_EXPENSES: 'ADD_TO_EXPENSES'\n};\nconst LENDER_RULES_VARIABLES = {\n  INCOME: 'income',\n  RESIDENCE_TYPE: 'residenceType',\n  CANTON: 'canton',\n  BORROW_RATIO: 'borrowRatio',\n  WANTED_LOAN: 'wantedLoan',\n  PROPERTY_VALUE: 'propertyValue',\n  INSIDE_AREA: 'insideArea',\n  BANK_FORTUNE: 'bankFortune',\n  PROPERTY_TYPE: 'propertyType',\n  ZIP_CODE: 'zipCode',\n  REMAINING_BANK_FORTUNE: 'remainingBankFortune'\n};\nconst LENDER_RULES_OPERATORS = {\n  EQUALS: '===',\n  MORE_THAN: '>',\n  MORE_THAN_OR_EQUAL: '>=',\n  LESS_THAN: '<',\n  LESS_THAN_OR_EQUAL: '<=',\n  IN: 'in'\n};\nconst DEFAULT_MAIN_RESIDENCE_RULES = [{\n  [LENDER_RULES_OPERATORS.IN]: [{\n    var: 'residenceType'\n  }, [RESIDENCE_TYPE.MAIN_RESIDENCE]]\n}];\nconst DEFAULT_SECONDARY_RESIDENCE_RULES = [{\n  [LENDER_RULES_OPERATORS.IN]: [{\n    var: 'residenceType'\n  }, [RESIDENCE_TYPE.SECOND_RESIDENCE]]\n}];\nconst EXPENSE_TYPES = (0, _objectSpread2.default)({\n  REAL_ESTATE_DELTA_POSITIVE: 'REAL_ESTATE_DELTA_POSITIVE',\n  REAL_ESTATE_DELTA_NEGATIVE: 'REAL_ESTATE_DELTA_NEGATIVE'\n}, EXPENSES, {\n  THEORETICAL_REAL_ESTATE: 'THEORETICAL_REAL_ESTATE'\n});\nconst EXPENSE_TYPES_WITHOUT_DELTAS = Object.values(EXPENSE_TYPES).filter(value => ![EXPENSE_TYPES.REAL_ESTATE_DELTA_POSITIVE, EXPENSE_TYPES.REAL_ESTATE_DELTA_NEGATIVE].includes(value));\nconst DEFAULT_VALUE_FOR_ALL = {\n  incomeConsiderationType: INCOME_CONSIDERATION_TYPES.GROSS,\n  bonusAlgorithm: BONUS_ALGORITHMS.WEAK_AVERAGE,\n  bonusConsideration: 0.5,\n  bonusHistoryToConsider: 3,\n  companyIncomeConsideration: 1,\n  companyIncomeHistoryToConsider: 3,\n  dividendsConsideration: 1,\n  dividendsHistoryToConsider: 1,\n  pensionIncomeConsideration: 1,\n  realEstateIncomeConsideration: 1,\n  realEstateIncomeConsiderationType: REAL_ESTATE_CONSIDERATION_TYPES.SUBTRACT_FROM_EXPENSES,\n  investmentIncomeConsideration: 1,\n  expensesSubtractFromIncome: EXPENSE_TYPES_WITHOUT_DELTAS,\n  theoreticalInterestRate: 0.05,\n  theoreticalMaintenanceRate: 0.01,\n  amortizationGoal: 0.65,\n  amortizationYears: 15,\n  maxBorrowRatio: 0.9,\n  maxIncomeRatio: 0.3333,\n  allowPledge: true\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"links.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/lenderRules/links.js                                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet LenderRules;\nmodule.link(\".\", {\n  default(v) {\n    LenderRules = v;\n  }\n\n}, 0);\nlet Organisations;\nmodule.link(\"..\", {\n  Organisations(v) {\n    Organisations = v;\n  }\n\n}, 1);\nLenderRules.addLinks({\n  organisation: {\n    field: 'organisationLink',\n    type: 'one',\n    metadata: true,\n    collection: Organisations,\n    denormalize: {\n      field: 'organisationCache',\n      body: {\n        _id: 1,\n        name: 1\n      }\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methodDefinitions.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/lenderRules/methodDefinitions.js                                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  lenderRulesInsert: () => lenderRulesInsert,\n  lenderRulesInitialize: () => lenderRulesInitialize,\n  lenderRulesRemove: () => lenderRulesRemove,\n  lenderRulesUpdate: () => lenderRulesUpdate,\n  lenderRulesUpdateFilter: () => lenderRulesUpdateFilter,\n  setLenderRulesOrder: () => setLenderRulesOrder\n});\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet Method;\nmodule.link(\"../methods/methods\", {\n  Method(v) {\n    Method = v;\n  }\n\n}, 1);\nconst lenderRulesInsert = new Method({\n  name: 'lenderRulesInsert',\n  params: {\n    organisationId: String,\n    logicRules: Array,\n    object: Match.Maybe(Object)\n  }\n});\nconst lenderRulesInitialize = new Method({\n  name: 'lenderRulesInitialize',\n  params: {\n    organisationId: String\n  }\n});\nconst lenderRulesRemove = new Method({\n  name: 'lenderRulesRemove',\n  params: {\n    lenderRulesId: String\n  }\n});\nconst lenderRulesUpdate = new Method({\n  name: 'lenderRulesUpdate',\n  params: {\n    lenderRulesId: String,\n    object: Object\n  }\n});\nconst lenderRulesUpdateFilter = new Method({\n  name: 'lenderRulesUpdateFilter',\n  params: {\n    lenderRulesId: String,\n    logicRules: Array,\n    name: Match.Optional(String)\n  }\n});\nconst setLenderRulesOrder = new Method({\n  name: 'setLenderRulesOrder',\n  params: {\n    orders: Object\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"queries.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/lenderRules/queries.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  organisationLenderRules: () => organisationLenderRules\n});\nlet lenderRules;\nmodule.link(\"../fragments\", {\n  lenderRules(v) {\n    lenderRules = v;\n  }\n\n}, 0);\nlet LENDER_RULES_QUERIES;\nmodule.link(\"./lenderRulesConstants\", {\n  LENDER_RULES_QUERIES(v) {\n    LENDER_RULES_QUERIES = v;\n  }\n\n}, 1);\nlet LenderRules;\nmodule.link(\".\", {\n  default(v) {\n    LenderRules = v;\n  }\n\n}, 2);\nconst organisationLenderRules = LenderRules.createQuery(LENDER_RULES_QUERIES.ORGANISATION_LENDER_RULES, lenderRules());\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"lenders\":{\"schemas\":{\"lenderSchema.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/lenders/schemas/lenderSchema.js                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 0);\nlet createdAt, updatedAt;\nmodule.link(\"../../helpers/sharedSchemas\", {\n  createdAt(v) {\n    createdAt = v;\n  },\n\n  updatedAt(v) {\n    updatedAt = v;\n  }\n\n}, 1);\nlet LENDER_STATUS;\nmodule.link(\"../lenderConstants\", {\n  LENDER_STATUS(v) {\n    LENDER_STATUS = v;\n  }\n\n}, 2);\nconst LenderSchema = new SimpleSchema({\n  createdAt,\n  updatedAt,\n  status: {\n    type: String,\n    allowedValues: Object.values(LENDER_STATUS),\n    defaultValue: LENDER_STATUS.TO_BE_CONTACTED\n  },\n  contactLink: {\n    type: Object,\n    optional: true\n  },\n  'contactLink._id': {\n    type: String,\n    optional: true\n  },\n  organisationLink: {\n    type: Object,\n    optional: true\n  },\n  'organisationLink._id': {\n    type: String,\n    optional: true\n  },\n  loanLink: {\n    type: Object,\n    optional: true\n  },\n  'loanLink._id': {\n    type: String,\n    optional: true\n  },\n  adminNote: {\n    type: String,\n    optional: true\n  }\n});\nmodule.exportDefault(LenderSchema);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"LenderService.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/lenders/server/LenderService.js                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Lenders;\nmodule.link(\"../lenders\", {\n  default(v) {\n    Lenders = v;\n  }\n\n}, 1);\nlet CollectionService;\nmodule.link(\"../../helpers/CollectionService\", {\n  default(v) {\n    CollectionService = v;\n  }\n\n}, 2);\nlet OrganisationService;\nmodule.link(\"../../organisations/server/OrganisationService\", {\n  default(v) {\n    OrganisationService = v;\n  }\n\n}, 3);\n\nclass LenderService extends CollectionService {\n  constructor() {\n    super(Lenders);\n  }\n\n  insert({\n    lender,\n    contactId,\n    organisationId\n  }) {\n    const {\n      loanId\n    } = lender,\n          data = (0, _objectWithoutProperties2.default)(lender, [\"loanId\"]);\n    const existingLender = this.fetchOne({\n      $filters: {\n        'loanLink._id': loanId,\n        'organisationLink._id': organisationId\n      },\n      organisationLink: 1,\n      loanLink: 1\n    });\n\n    if (existingLender) {\n      throw new Meteor.Error('Peut pas ajouter le même prêteur 2 fois');\n    }\n\n    const lenderId = super.insert(data);\n    this.addLink({\n      id: lenderId,\n      linkName: 'loan',\n      linkId: loanId\n    }); // If no contact is set, fetch first contact of organisation\n\n    if (!contactId && organisationId) {\n      const {\n        contacts\n      } = OrganisationService.fetchOne({\n        $filters: {\n          _id: organisationId\n        },\n        contacts: {\n          _id: 1\n        }\n      });\n\n      if (contacts && contacts.length > 0) {\n        contactId = contacts[0]._id;\n      }\n    }\n\n    this.linkOrganisationAndContact({\n      lenderId,\n      organisationId,\n      contactId\n    });\n    return lenderId;\n  }\n\n  linkOrganisationAndContact({\n    lenderId,\n    organisationId,\n    contactId\n  }) {\n    if (organisationId) {\n      this.addLink({\n        id: lenderId,\n        linkName: 'organisation',\n        linkId: organisationId\n      });\n    }\n\n    if (contactId) {\n      this.addLink({\n        id: lenderId,\n        linkName: 'contact',\n        linkId: contactId\n      });\n    } else {\n      this.removeLink({\n        id: lenderId,\n        linkName: 'contact'\n      });\n    }\n  }\n\n  remove({\n    lenderId\n  }) {\n    super.remove(lenderId);\n  }\n\n}\n\nmodule.exportDefault(new LenderService());\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"exposures.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/lenders/server/exposures.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet exposeQuery;\nmodule.link(\"../../queries/queryHelpers\", {\n  exposeQuery(v) {\n    exposeQuery = v;\n  }\n\n}, 0);\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 1);\nlet loanLenders;\nmodule.link(\"../queries\", {\n  loanLenders(v) {\n    loanLenders = v;\n  }\n\n}, 2);\nexposeQuery({\n  query: loanLenders,\n  overrides: {\n    firewall(userId, {\n      loanId\n    }) {\n      if (!SecurityService.isUserAdmin(userId)) {\n        SecurityService.loans.isAllowedToUpdate(loanId);\n      }\n    },\n\n    embody: body => {\n      body.$filter = ({\n        filters,\n        params\n      }) => {\n        filters['loanLink._id'] = params.loanId;\n      };\n    },\n    validateParams: {\n      loanId: String\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/lenders/server/methods.js                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 0);\nlet lenderInsert, lenderRemove, lenderUpdate, lenderLinkOrganisationAndContact;\nmodule.link(\"../methodDefinitions\", {\n  lenderInsert(v) {\n    lenderInsert = v;\n  },\n\n  lenderRemove(v) {\n    lenderRemove = v;\n  },\n\n  lenderUpdate(v) {\n    lenderUpdate = v;\n  },\n\n  lenderLinkOrganisationAndContact(v) {\n    lenderLinkOrganisationAndContact = v;\n  }\n\n}, 1);\nlet LenderService;\nmodule.link(\"./LenderService\", {\n  default(v) {\n    LenderService = v;\n  }\n\n}, 2);\nlenderInsert.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return LenderService.insert(params);\n});\nlenderRemove.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return LenderService.remove(params);\n});\nlenderUpdate.setHandler((context, {\n  lenderId,\n  object\n}) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return LenderService._update({\n    id: lenderId,\n    object\n  });\n});\nlenderLinkOrganisationAndContact.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return LenderService.linkOrganisationAndContact(params);\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/lenders/index.js                                                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./methodDefinitions\", {\n  \"*\": \"*\"\n}, 0);\nmodule.link(\"./lenders\", {\n  default: \"default\"\n}, 1);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lenderConstants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/lenders/lenderConstants.js                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  LENDERS_COLLECTION: () => LENDERS_COLLECTION,\n  LENDERS_QUERIES: () => LENDERS_QUERIES,\n  LENDER_STATUS: () => LENDER_STATUS\n});\nconst LENDERS_COLLECTION = 'lenders';\nconst LENDERS_QUERIES = {\n  LOAN_LENDERS: 'LOAN_LENDERS'\n};\nconst LENDER_STATUS = {\n  TO_BE_CONTACTED: 'TO_BE_CONTACTED',\n  CONTACTED: 'CONTACTED',\n  OFFER_RECEIVED: 'OFFER_RECEIVED',\n  TO_EXCLUDE: 'TO_EXCLUDE'\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lenders.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/lenders/lenders.js                                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet LenderSchema;\nmodule.link(\"./schemas/lenderSchema\", {\n  default(v) {\n    LenderSchema = v;\n  }\n\n}, 1);\nlet LENDERS_COLLECTION;\nmodule.link(\"./lenderConstants\", {\n  LENDERS_COLLECTION(v) {\n    LENDERS_COLLECTION = v;\n  }\n\n}, 2);\nconst Lenders = new Mongo.Collection(LENDERS_COLLECTION);\nLenders.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true\n});\nLenders.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false\n});\nLenders.attachSchema(LenderSchema);\nmodule.exportDefault(Lenders);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"links.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/lenders/links.js                                                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Lenders;\nmodule.link(\".\", {\n  default(v) {\n    Lenders = v;\n  }\n\n}, 0);\nlet Contacts, Organisations, Loans, Offers;\nmodule.link(\"..\", {\n  Contacts(v) {\n    Contacts = v;\n  },\n\n  Organisations(v) {\n    Organisations = v;\n  },\n\n  Loans(v) {\n    Loans = v;\n  },\n\n  Offers(v) {\n    Offers = v;\n  }\n\n}, 1);\nlet Tasks;\nmodule.link(\"../tasks\", {\n  default(v) {\n    Tasks = v;\n  }\n\n}, 2);\nLenders.addLinks({\n  contact: {\n    field: 'contactLink',\n    collection: Contacts,\n    type: 'one',\n    metadata: true\n  },\n  organisation: {\n    field: 'organisationLink',\n    collection: Organisations,\n    type: 'one',\n    metadata: true\n  },\n  loan: {\n    field: 'loanLink',\n    collection: Loans,\n    type: 'one',\n    metadata: true\n  },\n  offers: {\n    collection: Offers,\n    inversedBy: 'lender',\n    autoremove: true\n  },\n  tasks: {\n    inversedBy: 'lender',\n    collection: Tasks,\n    autoremove: true\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methodDefinitions.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/lenders/methodDefinitions.js                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  lenderInsert: () => lenderInsert,\n  lenderRemove: () => lenderRemove,\n  lenderUpdate: () => lenderUpdate,\n  lenderLinkOrganisationAndContact: () => lenderLinkOrganisationAndContact\n});\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet Method;\nmodule.link(\"../methods/methods\", {\n  Method(v) {\n    Method = v;\n  }\n\n}, 1);\nconst lenderInsert = new Method({\n  name: 'lenderInsert',\n  params: {\n    lender: Object,\n    organisationId: String,\n    contactId: Match.OneOf(String, null)\n  }\n});\nconst lenderRemove = new Method({\n  name: 'lenderRemove',\n  params: {\n    lenderId: String\n  }\n});\nconst lenderUpdate = new Method({\n  name: 'lenderUpdate',\n  params: {\n    lenderId: String,\n    object: Object\n  }\n});\nconst lenderLinkOrganisationAndContact = new Method({\n  name: 'lenderLinkOrganisationAndContact',\n  params: {\n    lenderId: String,\n    organisationId: Match.OneOf(String, null),\n    contactId: Match.OneOf(String, null)\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"queries.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/lenders/queries.js                                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  loanLenders: () => loanLenders\n});\nlet lender;\nmodule.link(\"../fragments\", {\n  lender(v) {\n    lender = v;\n  }\n\n}, 0);\nlet LENDERS_QUERIES;\nmodule.link(\"./lenderConstants\", {\n  LENDERS_QUERIES(v) {\n    LENDERS_QUERIES = v;\n  }\n\n}, 1);\nlet Lenders;\nmodule.link(\".\", {\n  default(v) {\n    Lenders = v;\n  }\n\n}, 2);\nconst loanLenders = Lenders.createQuery(LENDERS_QUERIES.LOAN_LENDERS, (0, _objectSpread2.default)({}, lender(), {\n  $options: {\n    sort: {\n      createdAt: -1\n    }\n  }\n}));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"liveSync\":{\"server\":{\"exposures.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/liveSync/server/exposures.js                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet exposeQuery;\nmodule.link(\"../../queries/queryHelpers\", {\n  exposeQuery(v) {\n    exposeQuery = v;\n  }\n\n}, 1);\nlet liveSyncs;\nmodule.link(\"../liveSync\", {\n  liveSyncs(v) {\n    liveSyncs = v;\n  }\n\n}, 2);\nexposeQuery({\n  query: liveSyncs,\n  overrides: {\n    validateParams: {\n      userId: Match.Maybe(Match.OneOf(String, Boolean))\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/liveSync/index.js                                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./liveSync\", {\n  default: \"default\"\n}, 0);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"liveSync.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/liveSync/liveSync.js                                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  liveSyncs: () => liveSyncs\n});\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 2);\nconst LiveSync = new Mongo.Collection('liveSync');\nconst STALE_LIVE_SYNC_MS = 2 * 60 * 1000;\nMeteor.methods({\n  liveSyncStart() {\n    LiveSync.upsert({\n      userId: this.userId\n    }, {\n      userId: this.userId\n    });\n  },\n\n  liveSyncStop() {\n    LiveSync.remove({\n      userId: this.userId\n    });\n  },\n\n  liveSyncUpdate(options) {\n    check(options, String);\n    LiveSync.update({\n      userId: this.userId\n    }, {\n      $set: {\n        options,\n        updatedAt: new Date()\n      }\n    });\n  },\n\n  liveSyncClear() {\n    const now = new Date();\n    LiveSync.remove({\n      updatedAt: {\n        $lt: new Date(now.getTime() - STALE_LIVE_SYNC_MS)\n      }\n    });\n  }\n\n});\nconst liveSyncs = LiveSync.createQuery('liveSyncs', {\n  $filter({\n    filters,\n    params: {\n      userId\n    }\n  }) {\n    if (userId) {\n      filters.userId = userId;\n    }\n  },\n\n  userId: 1,\n  options: 1\n});\nmodule.exportDefault(LiveSync);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"loans\":{\"schemas\":{\"LoanSchema.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/loans/schemas/LoanSchema.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 0);\nlet createdAt, updatedAt, contactsSchema, additionalDocuments, documentsField, cacheField;\nmodule.link(\"../../helpers/sharedSchemas\", {\n  createdAt(v) {\n    createdAt = v;\n  },\n\n  updatedAt(v) {\n    updatedAt = v;\n  },\n\n  contactsSchema(v) {\n    contactsSchema = v;\n  },\n\n  additionalDocuments(v) {\n    additionalDocuments = v;\n  },\n\n  documentsField(v) {\n    documentsField = v;\n  },\n\n  cacheField(v) {\n    cacheField = v;\n  }\n\n}, 1);\nlet LOAN_STATUS, LOAN_VERIFICATION_STATUS, PURCHASE_TYPE, OWNER, CANTONS, STEPS, APPLICATION_TYPES, LOAN_CATEGORIES;\nmodule.link(\"../loanConstants\", {\n  LOAN_STATUS(v) {\n    LOAN_STATUS = v;\n  },\n\n  LOAN_VERIFICATION_STATUS(v) {\n    LOAN_VERIFICATION_STATUS = v;\n  },\n\n  PURCHASE_TYPE(v) {\n    PURCHASE_TYPE = v;\n  },\n\n  OWNER(v) {\n    OWNER = v;\n  },\n\n  CANTONS(v) {\n    CANTONS = v;\n  },\n\n  STEPS(v) {\n    STEPS = v;\n  },\n\n  APPLICATION_TYPES(v) {\n    APPLICATION_TYPES = v;\n  },\n\n  LOAN_CATEGORIES(v) {\n    LOAN_CATEGORIES = v;\n  }\n\n}, 2);\nlet RESIDENCE_TYPE;\nmodule.link(\"../../constants\", {\n  RESIDENCE_TYPE(v) {\n    RESIDENCE_TYPE = v;\n  }\n\n}, 3);\nlet StructureSchema;\nmodule.link(\"./StructureSchema\", {\n  default(v) {\n    StructureSchema = v;\n  }\n\n}, 4);\nlet promotionSchema;\nmodule.link(\"./promotionSchema\", {\n  default(v) {\n    promotionSchema = v;\n  }\n\n}, 5);\nlet borrowerIdsSchema, propertyIdsSchema, previousLoanTranchesSchema, maxPropertyValueSchema;\nmodule.link(\"./otherSchemas\", {\n  borrowerIdsSchema(v) {\n    borrowerIdsSchema = v;\n  },\n\n  propertyIdsSchema(v) {\n    propertyIdsSchema = v;\n  },\n\n  previousLoanTranchesSchema(v) {\n    previousLoanTranchesSchema = v;\n  },\n\n  maxPropertyValueSchema(v) {\n    maxPropertyValueSchema = v;\n  }\n\n}, 6);\nconst LoanSchema = new SimpleSchema((0, _objectSpread2.default)({\n  userId: {\n    type: String,\n    optional: true\n  },\n  createdAt,\n  updatedAt,\n  status: {\n    type: String,\n    defaultValue: LOAN_STATUS.LEAD,\n    allowedValues: Object.values(LOAN_STATUS)\n  },\n  general: {\n    type: Object,\n    optional: true,\n    blackbox: true,\n    defaultValue: {}\n  },\n  // To be removed once migrations are done\n  name: {\n    type: String,\n    unique: true,\n    regEx: /^\\d{2}-\\d{4}$/\n  },\n  adminValidation: {\n    type: Object,\n    defaultValue: {},\n    blackbox: true\n  },\n  userFormsEnabled: {\n    type: Boolean,\n    defaultValue: true,\n    optional: true\n  },\n  structures: {\n    type: Array,\n    defaultValue: []\n  },\n  'structures.$': StructureSchema,\n  selectedStructure: {\n    type: String,\n    optional: true\n  },\n  verificationStatus: {\n    type: String,\n    optional: true,\n    allowedValues: Object.values(LOAN_VERIFICATION_STATUS),\n    defaultValue: LOAN_VERIFICATION_STATUS.NONE,\n    uniforms: {\n      displayEmpty: false\n    }\n  },\n  purchaseType: {\n    type: String,\n    defaultValue: PURCHASE_TYPE.ACQUISITION,\n    allowedValues: Object.values(PURCHASE_TYPE),\n    uniforms: {\n      displayEmpty: false\n    }\n  },\n  residenceType: {\n    type: String,\n    allowedValues: Object.values(RESIDENCE_TYPE),\n    optional: true,\n    uniforms: {\n      displayEmpty: false\n    }\n  },\n  canton: {\n    type: String,\n    optional: true,\n    allowedValues: Object.keys(CANTONS)\n  },\n  currentOwner: {\n    type: String,\n    defaultValue: OWNER.FIRST,\n    allowedValues: Object.values(OWNER)\n  },\n  futureOwner: {\n    type: String,\n    defaultValue: OWNER.FIRST,\n    allowedValues: Object.values(OWNER)\n  },\n  otherOwner: {\n    type: String,\n    optional: true\n  },\n  enableOffers: {\n    type: Boolean,\n    optional: true,\n    defaultValue: false\n  },\n  previousLender: {\n    type: String,\n    optional: true\n  },\n  customName: {\n    type: String,\n    optional: true\n  },\n  applicationType: {\n    type: String,\n    allowedValues: Object.values(APPLICATION_TYPES),\n    defaultValue: APPLICATION_TYPES.SIMPLE,\n    uniforms: {\n      placeholder: null\n    }\n  }\n}, promotionSchema, borrowerIdsSchema, propertyIdsSchema, contactsSchema, previousLoanTranchesSchema, additionalDocuments([]), {\n  revenueLinks: {\n    type: Array,\n    optional: true\n  },\n  'revenueLinks.$': String,\n  userCache: cacheField,\n  step: {\n    type: String,\n    defaultValue: STEPS.SOLVENCY,\n    allowedValues: Object.values(STEPS),\n    uniforms: {\n      placeholder: ''\n    }\n  },\n  displayWelcomeScreen: {\n    type: Boolean,\n    defaultValue: true,\n    optional: true\n  }\n}, maxPropertyValueSchema, {\n  shareSolvency: {\n    type: Boolean,\n    optional: true\n  },\n  documents: documentsField,\n  anonymous: {\n    type: Boolean,\n    optional: true,\n    defaultValue: false\n  },\n  referralId: {\n    type: String,\n    optional: true\n  },\n  category: {\n    type: String,\n    defaultValue: LOAN_CATEGORIES.STANDARD,\n    allowedValues: Object.values(LOAN_CATEGORIES),\n    uniforms: {\n      placeholder: null\n    }\n  },\n  adminNote: {\n    type: String,\n    optional: true\n  },\n  lendersCache: {\n    type: Array,\n    optional: true\n  },\n  'lendersCache.$': cacheField,\n  tasksCache: {\n    type: Array,\n    optional: true\n  },\n  'tasksCache.$': cacheField,\n  financedPromotionLink: {\n    type: Object,\n    optional: true\n  },\n  'financedPromotionLink._id': {\n    type: String,\n    optional: true\n  },\n  simpleBorrowersForm: {\n    type: Boolean,\n    defaultValue: true\n  }\n}));\nmodule.exportDefault(LoanSchema);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"StructureSchema.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/loans/schemas/StructureSchema.js                                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  structureSchema: () => structureSchema\n});\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 0);\nlet AMORTIZATION_TYPE, OWN_FUNDS_USAGE_TYPES;\nmodule.link(\"../loanConstants\", {\n  AMORTIZATION_TYPE(v) {\n    AMORTIZATION_TYPE = v;\n  },\n\n  OWN_FUNDS_USAGE_TYPES(v) {\n    OWN_FUNDS_USAGE_TYPES = v;\n  }\n\n}, 1);\nlet OWN_FUNDS_TYPES;\nmodule.link(\"../../constants\", {\n  OWN_FUNDS_TYPES(v) {\n    OWN_FUNDS_TYPES = v;\n  }\n\n}, 2);\nlet loanTranchesSchema;\nmodule.link(\"./otherSchemas\", {\n  loanTranchesSchema(v) {\n    loanTranchesSchema = v;\n  }\n\n}, 3);\nlet moneyField;\nmodule.link(\"../../helpers/sharedSchemas\", {\n  moneyField(v) {\n    moneyField = v;\n  }\n\n}, 4);\nconst structureSchema = (0, _objectSpread2.default)({\n  amortization: (0, _objectSpread2.default)({}, moneyField, {\n    defaultValue: 0\n  }),\n  amortizationType: {\n    type: String,\n    allowedValues: Object.values(AMORTIZATION_TYPE),\n    optional: true\n  },\n  description: {\n    type: String,\n    optional: true\n  },\n  disabled: {\n    type: Boolean,\n    defaultValue: false\n  },\n  id: String,\n  mortgageNoteIds: {\n    type: Array,\n    optional: true\n  },\n  'mortgageNoteIds.$': String,\n  name: {\n    type: String,\n    optional: true\n  },\n  notaryFees: (0, _objectSpread2.default)({}, moneyField, {\n    defaultValue: null\n  }),\n  propertyValue: (0, _objectSpread2.default)({}, moneyField, {\n    defaultValue: null\n  }),\n  offerId: {\n    type: String,\n    optional: true\n  },\n  propertyId: {\n    type: String,\n    optional: true\n  },\n  promotionOptionId: {\n    type: String,\n    optional: true\n  },\n  propertyWork: (0, _objectSpread2.default)({}, moneyField, {\n    defaultValue: 0\n  }),\n  sortOffersBy: {\n    type: String,\n    optional: true\n  },\n  ownFunds: {\n    type: Array,\n    defaultValue: []\n  },\n  'ownFunds.$': Object,\n  'ownFunds.$.borrowerId': String,\n  'ownFunds.$.type': {\n    type: String,\n    allowedValues: Object.values(OWN_FUNDS_TYPES),\n    optional: true\n  },\n  'ownFunds.$.value': (0, _objectSpread2.default)({}, moneyField, {\n    optional: false\n  }),\n  'ownFunds.$.usageType': {\n    type: String,\n    optional: true,\n    allowedValues: Object.values(OWN_FUNDS_USAGE_TYPES)\n  },\n  'ownFunds.$.description': {\n    type: String,\n    optional: true\n  },\n  wantedLoan: (0, _objectSpread2.default)({}, moneyField, {\n    defaultValue: 0\n  })\n}, loanTranchesSchema);\nmodule.exportDefault(new SimpleSchema(structureSchema));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"otherSchemas.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/loans/schemas/otherSchemas.js                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  borrowerIdsSchema: () => borrowerIdsSchema,\n  loanTranchesSchema: () => loanTranchesSchema,\n  previousLoanTranchesSchema: () => previousLoanTranchesSchema,\n  propertyIdsSchema: () => propertyIdsSchema,\n  maxPropertyValueSchema: () => maxPropertyValueSchema\n});\nlet INTEREST_RATES, SOLVENCY_TYPE, CANTONS;\nmodule.link(\"../../constants\", {\n  INTEREST_RATES(v) {\n    INTEREST_RATES = v;\n  },\n\n  SOLVENCY_TYPE(v) {\n    SOLVENCY_TYPE = v;\n  },\n\n  CANTONS(v) {\n    CANTONS = v;\n  }\n\n}, 0);\nlet moneyField, percentageField;\nmodule.link(\"../../helpers/sharedSchemas\", {\n  moneyField(v) {\n    moneyField = v;\n  },\n\n  percentageField(v) {\n    percentageField = v;\n  }\n\n}, 1);\nconst borrowerIdsSchema = {\n  borrowerIds: {\n    type: Array,\n    defaultValue: []\n  },\n  'borrowerIds.$': String\n};\nconst loanTranchesSchema = {\n  loanTranches: {\n    type: Array,\n    defaultValue: [{\n      type: INTEREST_RATES.YEARS_10,\n      value: 1\n    }],\n    optional: true\n  },\n  'loanTranches.$': Object,\n  'loanTranches.$.type': {\n    type: String,\n    optional: true,\n    allowedValues: Object.values(INTEREST_RATES)\n  },\n  'loanTranches.$.value': (0, _objectSpread2.default)({}, moneyField, {\n    type: Number // Can be specified as percentages or monetary amounts\n\n  })\n};\nconst previousLoanTranchesSchema = {\n  previousLoanTranches: {\n    type: Array,\n    defaultValue: [],\n    optional: true\n  },\n  'previousLoanTranches.$': Object,\n  'previousLoanTranches.$.value': (0, _objectSpread2.default)({}, moneyField, {\n    type: Number // Can be specified as percentages or monetary amounts\n\n  }),\n  'previousLoanTranches.$.dueDate': {\n    type: Date,\n    optional: true\n  },\n  'previousLoanTranches.$.rate': {\n    type: Number,\n    min: 0,\n    max: 1\n  }\n};\nconst propertyIdsSchema = {\n  propertyIds: {\n    type: Array,\n    defaultValue: [],\n    maxCount: 5\n  },\n  'propertyIds.$': String\n};\nconst maxPropertyValueSchema = {\n  maxPropertyValue: {\n    type: Object,\n    optional: true\n  },\n  'maxPropertyValue.type': {\n    type: String,\n    allowedValues: Object.values(SOLVENCY_TYPE),\n    defaultValue: SOLVENCY_TYPE.SIMPLE\n  },\n  'maxPropertyValue.canton': {\n    type: String,\n    allowedValues: Object.keys(CANTONS)\n  },\n  'maxPropertyValue.borrowerHash': {\n    type: String,\n    optional: true\n  },\n  'maxPropertyValue.date': Date,\n  'maxPropertyValue.main': Object,\n  'maxPropertyValue.main.min': {\n    type: Object,\n    optional: true\n  },\n  'maxPropertyValue.main.min.propertyValue': moneyField,\n  'maxPropertyValue.main.min.borrowRatio': percentageField,\n  'maxPropertyValue.main.min.organisationName': String,\n  'maxPropertyValue.main.max': Object,\n  'maxPropertyValue.main.max.propertyValue': moneyField,\n  'maxPropertyValue.main.max.borrowRatio': percentageField,\n  'maxPropertyValue.main.max.organisationName': String,\n  'maxPropertyValue.second': Object,\n  'maxPropertyValue.second.min': {\n    type: Object,\n    optional: true\n  },\n  'maxPropertyValue.second.min.propertyValue': moneyField,\n  'maxPropertyValue.second.min.borrowRatio': percentageField,\n  'maxPropertyValue.second.min.organisationName': String,\n  'maxPropertyValue.second.max': Object,\n  'maxPropertyValue.second.max.propertyValue': moneyField,\n  'maxPropertyValue.second.max.borrowRatio': percentageField,\n  'maxPropertyValue.second.max.organisationName': String\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"promotionSchema.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/loans/schemas/promotionSchema.js                                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nconst promotionSchema = {\n  promotionLinks: {\n    type: Array,\n    defaultValue: []\n  },\n  'promotionLinks.$': Object,\n  'promotionLinks.$._id': {\n    type: String,\n    optional: true\n  },\n  'promotionLinks.$.priorityOrder': {\n    type: Array,\n    defaultValue: []\n  },\n  'promotionLinks.$.priorityOrder.$': String,\n  'promotionLinks.$.invitedBy': {\n    type: String,\n    optional: true\n  },\n  'promotionLinks.$.showAllLots': {\n    type: Boolean,\n    optional: true,\n    defaultValue: true\n  },\n  promotionOptionLinks: {\n    type: Array,\n    defaultValue: []\n  },\n  'promotionOptionLinks.$': Object,\n  'promotionOptionLinks.$._id': {\n    type: String,\n    optional: true\n  }\n};\nmodule.exportDefault(promotionSchema);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"LoanService.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/loans/server/LoanService.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  LoanService: () => LoanService\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Random;\nmodule.link(\"meteor/random\", {\n  Random(v) {\n    Random = v;\n  }\n\n}, 1);\nlet omit;\nmodule.link(\"lodash/omit\", {\n  default(v) {\n    omit = v;\n  }\n\n}, 2);\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 3);\nlet LenderRulesService;\nmodule.link(\"../../lenderRules/server/LenderRulesService\", {\n  default(v) {\n    LenderRulesService = v;\n  }\n\n}, 4);\nlet PROPERTY_CATEGORY;\nmodule.link(\"../../properties/propertyConstants\", {\n  PROPERTY_CATEGORY(v) {\n    PROPERTY_CATEGORY = v;\n  }\n\n}, 5);\nlet ACTIVITY_SECONDARY_TYPES;\nmodule.link(\"../../activities/activityConstants\", {\n  ACTIVITY_SECONDARY_TYPES(v) {\n    ACTIVITY_SECONDARY_TYPES = v;\n  }\n\n}, 6);\nlet ActivityService;\nmodule.link(\"../../activities/server/ActivityService\", {\n  default(v) {\n    ActivityService = v;\n  }\n\n}, 7);\nlet PromotionOptionService;\nmodule.link(\"../../promotionOptions/server/PromotionOptionService\", {\n  default(v) {\n    PromotionOptionService = v;\n  }\n\n}, 8);\nlet shouldSendStepNotification;\nmodule.link(\"../../../utils/loanFunctions\", {\n  shouldSendStepNotification(v) {\n    shouldSendStepNotification = v;\n  }\n\n}, 9);\nlet Intl;\nmodule.link(\"../../../utils/server/intl\", {\n  default(v) {\n    Intl = v;\n  }\n\n}, 10);\nlet makeFeedback, FEEDBACK_OPTIONS;\nmodule.link(\"../../../components/OfferList/feedbackHelpers\", {\n  makeFeedback(v) {\n    makeFeedback = v;\n  },\n\n  FEEDBACK_OPTIONS(v) {\n    FEEDBACK_OPTIONS = v;\n  }\n\n}, 11);\nlet Calculator, CalculatorClass;\nmodule.link(\"../../../utils/Calculator\", {\n  default(v) {\n    Calculator = v;\n  },\n\n  Calculator(v) {\n    CalculatorClass = v;\n  }\n\n}, 12);\nlet getZipcodeForCanton;\nmodule.link(\"../../../utils/zipcodes\", {\n  getZipcodeForCanton(v) {\n    getZipcodeForCanton = v;\n  }\n\n}, 13);\nlet RESIDENCE_TYPE, ORGANISATION_FEATURES, LOAN_STATUS, LOAN_VERIFICATION_STATUS, CANTONS, EMAIL_IDS;\nmodule.link(\"../../constants\", {\n  RESIDENCE_TYPE(v) {\n    RESIDENCE_TYPE = v;\n  },\n\n  ORGANISATION_FEATURES(v) {\n    ORGANISATION_FEATURES = v;\n  },\n\n  LOAN_STATUS(v) {\n    LOAN_STATUS = v;\n  },\n\n  LOAN_VERIFICATION_STATUS(v) {\n    LOAN_VERIFICATION_STATUS = v;\n  },\n\n  CANTONS(v) {\n    CANTONS = v;\n  },\n\n  EMAIL_IDS(v) {\n    EMAIL_IDS = v;\n  }\n\n}, 14);\nlet OfferService;\nmodule.link(\"../../offers/server/OfferService\", {\n  default(v) {\n    OfferService = v;\n  }\n\n}, 15);\nlet adminLoan, lenderRulesFragment, userLoan;\nmodule.link(\"../../fragments\", {\n  adminLoan(v) {\n    adminLoan = v;\n  },\n\n  lenderRules(v) {\n    lenderRulesFragment = v;\n  },\n\n  userLoan(v) {\n    userLoan = v;\n  }\n\n}, 16);\nlet CollectionService;\nmodule.link(\"../../helpers/CollectionService\", {\n  default(v) {\n    CollectionService = v;\n  }\n\n}, 17);\nlet BorrowerService;\nmodule.link(\"../../borrowers/server/BorrowerService\", {\n  default(v) {\n    BorrowerService = v;\n  }\n\n}, 18);\nlet PropertyService;\nmodule.link(\"../../properties/server/PropertyService\", {\n  default(v) {\n    PropertyService = v;\n  }\n\n}, 19);\nlet PromotionService;\nmodule.link(\"../../promotions/server/PromotionService\", {\n  default(v) {\n    PromotionService = v;\n  }\n\n}, 20);\nlet UserService;\nmodule.link(\"../../users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 21);\nlet OrganisationService;\nmodule.link(\"../../organisations/server/OrganisationService\", {\n  default(v) {\n    OrganisationService = v;\n  }\n\n}, 22);\nlet Loans;\nmodule.link(\"../loans\", {\n  default(v) {\n    Loans = v;\n  }\n\n}, 23);\nlet sendEmail;\nmodule.link(\"../../methods\", {\n  sendEmail(v) {\n    sendEmail = v;\n  }\n\n}, 24);\nlet ORGANISATION_NAME_SEPARATOR, STEPS, APPLICATION_TYPES;\nmodule.link(\"../loanConstants\", {\n  ORGANISATION_NAME_SEPARATOR(v) {\n    ORGANISATION_NAME_SEPARATOR = v;\n  },\n\n  STEPS(v) {\n    STEPS = v;\n  },\n\n  APPLICATION_TYPES(v) {\n    APPLICATION_TYPES = v;\n  }\n\n}, 25);\nlet fullLoan;\nmodule.link(\"../queries\", {\n  fullLoan(v) {\n    fullLoan = v;\n  }\n\n}, 26);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\n// Pads a number with zeros: 4 --> 0004\nconst zeroPadding = (num, places) => {\n  const zero = places - num.toString().length + 1;\n  return Array(+(zero > 0 && zero)).join('0') + num;\n};\n\nclass LoanService extends CollectionService {\n  constructor() {\n    super(Loans);\n\n    _defineProperty(this, \"insert\", ({\n      loan = {},\n      userId\n    }) => {\n      const name = this.getNewLoanName();\n      return Loans.insert((0, _objectSpread2.default)({}, loan, {\n        name,\n        userId\n      }));\n    });\n\n    _defineProperty(this, \"insertAnonymousLoan\", ({\n      proPropertyId,\n      referralId\n    }) => {\n      let loanId;\n\n      if (proPropertyId) {\n        loanId = this.insertPropertyLoan({\n          propertyIds: [proPropertyId]\n        });\n      } else {\n        loanId = this.insert({\n          loan: {}\n        });\n      }\n\n      this.update({\n        loanId,\n        object: {\n          anonymous: true,\n          displayWelcomeScreen: false,\n          referralId\n        }\n      });\n      return loanId;\n    });\n\n    _defineProperty(this, \"getNewLoanName\", (now = new Date()) => {\n      const year = now.getYear();\n      const yearPrefix = year - 100;\n      const lastLoan = Loans.findOne({}, {\n        sort: {\n          name: -1\n        }\n      });\n\n      if (!lastLoan) {\n        return `${yearPrefix}-0001`;\n      }\n\n      const [lastPrefix, count] = lastLoan.name.split('-').map(numb => parseInt(numb, 10));\n\n      if (lastPrefix !== yearPrefix) {\n        return `${yearPrefix}-0001`;\n      }\n\n      const nextCountString = zeroPadding(count + 1, 4);\n      return `${yearPrefix}-${nextCountString}`;\n    });\n\n    _defineProperty(this, \"update\", ({\n      loanId,\n      object,\n      operator = '$set'\n    }) => Loans.update(loanId, {\n      [operator]: object\n    }));\n\n    _defineProperty(this, \"remove\", ({\n      loanId\n    }) => Loans.remove(loanId));\n\n    _defineProperty(this, \"fullLoanInsert\", ({\n      userId,\n      loan = {}\n    }) => {\n      const loanId = this.insert({\n        loan,\n        userId\n      });\n      this.addNewStructure({\n        loanId\n      });\n      return loanId;\n    });\n\n    _defineProperty(this, \"askVerification\", ({\n      loanId\n    }) => {\n      const loan = this.get(loanId);\n\n      if (loan.verificationStatus === LOAN_VERIFICATION_STATUS.REQUESTED || loan.verificationStatus === LOAN_VERIFICATION_STATUS.OK) {\n        // Don't do anything if this loan is already in requested mode\n        throw new Meteor.Error('La vérification est déjà en cours, ou effectuée.');\n      }\n\n      return this.update({\n        loanId,\n        object: {\n          verificationStatus: LOAN_VERIFICATION_STATUS.REQUESTED,\n          userFormsEnabled: false\n        }\n      });\n    });\n\n    _defineProperty(this, \"insertPromotionLoan\", ({\n      userId,\n      promotionId,\n      invitedBy,\n      showAllLots,\n      promotionLotIds = [],\n      shareSolvency\n    }) => {\n      const customName = PromotionService.fetchOne({\n        $filters: {\n          _id: promotionId\n        },\n        name: 1\n      }).name;\n      const loanId = this.insert({\n        loan: {\n          promotionLinks: [{\n            _id: promotionId,\n            invitedBy,\n            showAllLots\n          }],\n          customName,\n          shareSolvency\n        },\n        userId\n      });\n      promotionLotIds.forEach(promotionLotId => {\n        PromotionOptionService.insert({\n          promotionLotId,\n          loanId\n        });\n      });\n      this.addNewStructure({\n        loanId\n      });\n      return loanId;\n    });\n\n    _defineProperty(this, \"insertPropertyLoan\", ({\n      userId,\n      propertyIds,\n      shareSolvency,\n      loan\n    }) => {\n      const customName = PropertyService.fetchOne({\n        $filters: {\n          _id: propertyIds[0]\n        },\n        address1: 1\n      }).address1;\n      const loanId = this.insert({\n        loan: (0, _objectSpread2.default)({\n          propertyIds,\n          customName,\n          shareSolvency\n        }, loan),\n        userId\n      });\n      this.addNewStructure({\n        loanId\n      });\n      return loanId;\n    });\n\n    _defineProperty(this, \"confirmClosing\", ({\n      loanId,\n      object\n    }) => this.update({\n      loanId,\n      object: (0, _objectSpread2.default)({\n        status: LOAN_STATUS.BILLING\n      }, object)\n    }));\n\n    _defineProperty(this, \"pushValue\", ({\n      loanId,\n      object\n    }) => Loans.update(loanId, {\n      $push: object\n    }));\n\n    _defineProperty(this, \"popValue\", ({\n      loanId,\n      object\n    }) => Loans.update(loanId, {\n      $pop: object\n    }));\n\n    _defineProperty(this, \"pullValue\", ({\n      loanId,\n      object\n    }) => Loans.update(loanId, {\n      $pull: object\n    }));\n\n    _defineProperty(this, \"addStructure\", ({\n      loanId,\n      structure,\n      atIndex\n    }) => {\n      const newStructureId = Random.id();\n      Loans.update(loanId, {\n        $push: {\n          structures: {\n            $each: [(0, _objectSpread2.default)({}, structure, {\n              id: newStructureId,\n              disabled: false\n            })],\n            $position: atIndex\n          }\n        }\n      });\n      return newStructureId;\n    });\n\n    _defineProperty(this, \"addNewStructure\", ({\n      loanId,\n      structure\n    }) => {\n      const {\n        structures,\n        selectedStructure,\n        propertyIds\n      } = this.get(loanId);\n      const isFirstStructure = structures.length === 0;\n      const shouldCopyExistingStructure = !isFirstStructure && !structure && selectedStructure;\n\n      if (shouldCopyExistingStructure) {\n        structure = omit(structures.find(({\n          id\n        }) => selectedStructure === id), ['name']);\n      }\n\n      const propertyId = structure && structure.propertyId || (propertyIds.length > 0 ? propertyIds[0] : undefined);\n      const newStructureId = this.addStructure({\n        loanId,\n        structure: (0, _objectSpread2.default)({}, structure, {\n          propertyId,\n          name: structure && structure.name || `Plan financier ${structures.length + 1}`\n        })\n      });\n      this.update({\n        loanId,\n        object: isFirstStructure ? {\n          selectedStructure: newStructureId\n        } : {}\n      });\n      return newStructureId;\n    });\n\n    _defineProperty(this, \"removeStructure\", ({\n      loanId,\n      structureId\n    }) => {\n      const {\n        selectedStructure: currentlySelected\n      } = this.get(loanId);\n\n      if (currentlySelected === structureId) {\n        throw new Meteor.Error('Vous ne pouvez pas supprimer votre plan financier choisi');\n      }\n\n      const updateObj = {\n        $pull: {\n          structures: {\n            id: structureId\n          }\n        }\n      };\n      return Loans.update(loanId, updateObj, {\n        // Edge case fix: https://github.com/meteor/meteor/issues/4342\n        getAutoValues: false\n      });\n    });\n\n    _defineProperty(this, \"updateStructure\", ({\n      loanId,\n      structureId,\n      structure\n    }) => {\n      const currentStructure = this.get(loanId).structures.find(({\n        id\n      }) => id === structureId);\n      return Loans.update({\n        _id: loanId,\n        'structures.id': structureId\n      }, {\n        $set: {\n          'structures.$': (0, _objectSpread2.default)({}, currentStructure, structure)\n        }\n      });\n    });\n\n    _defineProperty(this, \"selectStructure\", ({\n      loanId,\n      structureId\n    }) => {\n      // Make sure the structure exists\n      const structureExists = this.get(loanId).structures.some(({\n        id\n      }) => id === structureId);\n\n      if (structureExists) {\n        return this.update({\n          loanId,\n          object: {\n            selectedStructure: structureId\n          }\n        });\n      }\n\n      throw new Meteor.Error(`Structure with id \"${structureId}\" does not exist`);\n    });\n\n    _defineProperty(this, \"duplicateStructure\", ({\n      loanId,\n      structureId\n    }) => {\n      const {\n        structures\n      } = this.get(loanId);\n      const currentStructure = structures.find(({\n        id\n      }) => id === structureId);\n      const currentStructureIndex = structures.findIndex(({\n        id\n      }) => id === structureId);\n      return !!currentStructure && this.addStructure({\n        loanId,\n        structure: (0, _objectSpread2.default)({}, currentStructure, {\n          name: `${currentStructure.name || 'Plan financier'} - copie`,\n          disabled: false\n        }),\n        atIndex: currentStructureIndex + 1\n      });\n    });\n\n    _defineProperty(this, \"addPropertyToLoan\", ({\n      loanId,\n      propertyId\n    }) => {\n      const loan = this.get(loanId);\n      this.addLink({\n        id: loanId,\n        linkName: 'properties',\n        linkId: propertyId\n      }); // Add this property to all structures that don't have a property\n      // for a better user experience\n\n      loan.structures.forEach(({\n        id,\n        propertyId: structurePropertyId,\n        promotionOptionId\n      }) => {\n        if (!structurePropertyId && !promotionOptionId) {\n          this.updateStructure({\n            loanId,\n            structureId: id,\n            structure: {\n              propertyId\n            }\n          });\n        }\n      });\n    });\n\n    _defineProperty(this, \"cleanupRemovedBorrower\", ({\n      borrowerId\n    }) => {\n      // Remove all references to this borrower on the loan\n      const loans = Loans.find({\n        borrowerIds: borrowerId\n      }).fetch();\n      loans.forEach(loan => {\n        this.update({\n          loanId: loan._id,\n          object: {\n            structures: loan.structures.map(structure => (0, _objectSpread2.default)({}, structure, {\n              ownFunds: structure.ownFunds.filter(({\n                borrowerId: bId\n              }) => bId !== borrowerId)\n            }))\n          }\n        });\n      });\n    });\n  }\n\n  setStep({\n    loanId,\n    nextStep\n  }) {\n    const {\n      step,\n      userId,\n      user\n    } = this.fetchOne({\n      $filters: {\n        _id: loanId\n      },\n      step: 1,\n      userId: 1,\n      user: {\n        assignedEmployee: {\n          name: 1\n        }\n      }\n    });\n    this.update({\n      loanId,\n      object: {\n        step: nextStep\n      }\n    });\n\n    if (shouldSendStepNotification(step, nextStep)) {\n      if (!user || !user.assignedEmployee) {\n        throw new Meteor.Error('Il faut un conseiller sur ce dossier pour envoyer un email');\n      }\n\n      sendEmail.run({\n        emailId: EMAIL_IDS.FIND_LENDER_NOTIFICATION,\n        userId,\n        params: {\n          loanId,\n          assigneeName: user.assignedEmployee.name\n        }\n      });\n    }\n  }\n\n  setStatus({\n    loanId,\n    status\n  }) {\n    const {\n      status: oldStatus\n    } = this.fetchOne({\n      $filters: {\n        _id: loanId\n      },\n      status: 1\n    });\n    this.update({\n      loanId,\n      object: {\n        status\n      }\n    });\n    return {\n      oldStatus,\n      nextStatus: status\n    };\n  }\n\n  setPromotionPriorityOrder({\n    loanId,\n    promotionId,\n    priorityOrder\n  }) {\n    return Loans.update({\n      _id: loanId,\n      'promotionLinks._id': promotionId\n    }, {\n      $set: {\n        'promotionLinks.$.priorityOrder': priorityOrder\n      }\n    });\n  }\n\n  getPromotionPriorityOrder({\n    loanId,\n    promotionId\n  }) {\n    const promotionLink = this.get(loanId).promotionLinks.find(({\n      _id\n    }) => _id === promotionId);\n    return promotionLink ? promotionLink.priorityOrder : [];\n  }\n\n  assignLoanToUser({\n    loanId,\n    userId\n  }) {\n    const {\n      properties = [],\n      borrowers = [],\n      referralId,\n      anonymous\n    } = this.fetchOne({\n      $filters: {\n        _id: loanId\n      },\n      referralId: 1,\n      properties: {\n        loans: {\n          _id: 1\n        },\n        address1: 1,\n        category: 1\n      },\n      borrowers: {\n        loans: {\n          _id: 1\n        },\n        name: 1\n      },\n      anonymous: 1\n    });\n    borrowers.forEach(({\n      loans = [],\n      name\n    }) => {\n      if (loans.length > 1) {\n        throw new Meteor.Error(`Peut pas réassigner l'hypothèque, l'emprunteur \"${name}\" est assigné à plus d'une hypothèque`);\n      }\n    });\n    properties.forEach(({\n      loans = [],\n      address1,\n      category\n    }) => {\n      if (category === PROPERTY_CATEGORY.USER && loans.length > 1) {\n        throw new Meteor.Error(`Peut pas réassigner l'hypothèque, le bien immobilier \"${address1}\" est assigné à plus d'une hypothèque`);\n      }\n    });\n    this.update({\n      loanId,\n      object: {\n        userId,\n        anonymous: false,\n        // If the loan was anonymous before, don't show welcome screen again\n        displayWelcomeScreen: anonymous ? false : undefined\n      }\n    });\n    this.update({\n      loanId,\n      object: {\n        referralId: true\n      },\n      operator: '$unset'\n    });\n    borrowers.forEach(({\n      _id: borrowerId\n    }) => {\n      BorrowerService.update({\n        borrowerId,\n        object: {\n          userId\n        }\n      });\n    });\n    properties.forEach(({\n      _id: propertyId,\n      category\n    }) => {\n      if (category === PROPERTY_CATEGORY.USER) {\n        PropertyService.update({\n          propertyId,\n          object: {\n            userId\n          }\n        });\n      }\n    }); // Refer this user only if he hasn't already been referred\n\n    if (referralId && UserService.exists(referralId)) {\n      const {\n        referredByUserLink,\n        referredByOrganisationLink\n      } = UserService.fetchOne({\n        $filters: {\n          _id: userId\n        },\n        referredByUserLink: 1,\n        referredByOrganisationLink: 1\n      });\n\n      if (!referredByUserLink && !referredByOrganisationLink) {\n        UserService.setReferredBy({\n          userId,\n          proId: referralId\n        });\n      }\n    }\n  }\n\n  switchBorrower({\n    loanId,\n    borrowerId,\n    oldBorrowerId\n  }) {\n    const {\n      borrowerIds\n    } = this.get(loanId);\n    const {\n      loans: oldBorrowerLoans = []\n    } = BorrowerService.createQuery({\n      $filters: {\n        _id: oldBorrowerId\n      },\n      loans: {\n        name: 1\n      }\n    }).fetchOne();\n\n    if (borrowerIds.includes(borrowerId)) {\n      throw new Meteor.Error('Cet emprunteur est déjà sur ce prêt hypothécaire');\n    }\n\n    this.update({\n      loanId,\n      object: {\n        borrowerIds: borrowerIds.map(id => id === oldBorrowerId ? borrowerId : id)\n      }\n    });\n\n    if (oldBorrowerLoans.length === 1 && oldBorrowerLoans[0]._id === loanId) {\n      BorrowerService.remove({\n        borrowerId: oldBorrowerId\n      });\n    }\n  }\n\n  sendNegativeFeedbackToAllLenders({\n    loanId\n  }) {\n    const {\n      offers = [],\n      structure: {\n        property\n      }\n    } = this.createQuery((0, _objectSpread2.default)({\n      $filters: {\n        _id: loanId\n      }\n    }, adminLoan({\n      withSort: true\n    }), {\n      $options: {\n        sort: {\n          createdAt: -1\n        }\n      }\n    })).fetchOne() || {}; // Get lenders' last offer\n\n    const filteredOffers = offers.reduce((filtered, offer) => {\n      const {\n        lender: {\n          contact: {\n            email: lenderEmail\n          }\n        }\n      } = offer;\n      const lenderIsAlreadyInMailingList = filtered.find(({\n        lender: {\n          contact: {\n            email\n          }\n        }\n      }) => lenderEmail === email);\n\n      if (lenderIsAlreadyInMailingList) {\n        return filtered;\n      }\n\n      return [...filtered, offer];\n    }, []);\n    const promises = filteredOffers.map(offer => {\n      const feedback = makeFeedback({\n        offer: (0, _objectSpread2.default)({}, offer, {\n          property\n        }),\n        model: {\n          option: FEEDBACK_OPTIONS.NEGATIVE_WITHOUT_FOLLOW_UP\n        },\n        formatMessage: Intl.formatMessage.bind(Intl)\n      });\n      return OfferService.sendFeedback({\n        offerId: offer._id,\n        feedback,\n        saveFeedback: false\n      });\n    });\n    return Promise.all(promises);\n  }\n\n  updatePromotionInvitedBy({\n    loanId,\n    promotionId,\n    invitedBy\n  }) {\n    this.updateLinkMetadata({\n      id: loanId,\n      linkName: 'promotions',\n      linkId: promotionId,\n      metadata: {\n        invitedBy\n      }\n    });\n  }\n\n  reuseProperty({\n    loanId,\n    propertyId\n  }) {\n    const loan = this.get(loanId);\n\n    if (loan.propertyIds.includes(propertyId)) {\n      return false;\n    }\n\n    this.addLink({\n      id: loanId,\n      linkName: 'properties',\n      linkId: propertyId\n    });\n  }\n\n  getMaxPropertyValueRange({\n    organisations,\n    loan,\n    residenceType,\n    canton\n  }) {\n    const {\n      borrowers = []\n    } = loan;\n    const loanObject = Calculator.createLoanObject({\n      residenceType,\n      borrowers,\n      canton\n    });\n    const maxPropertyValues = organisations.map(({\n      lenderRules,\n      name\n    }) => {\n      const calculator = new CalculatorClass({\n        loan: loanObject,\n        lenderRules\n      });\n      const {\n        borrowRatio,\n        propertyValue\n      } = calculator.getMaxPropertyValueWithoutBorrowRatio({\n        borrowers,\n        residenceType,\n        canton\n      });\n\n      if (propertyValue > 0 && borrowRatio > 0) {\n        return {\n          borrowRatio,\n          propertyValue,\n          organisationName: name\n        };\n      }\n\n      return null;\n    }).filter(x => x);\n    const sortedValues = maxPropertyValues.sort(({\n      propertyValue: propertyValueA\n    }, {\n      propertyValue: propertyValueB\n    }) => propertyValueA - propertyValueB);\n\n    if (sortedValues.length === 0) {\n      throw new Meteor.Error(\"Nous ne sommes pas parvenus à calculer votre capacité d'achat, contactez votre conseiller pour plus d'informations\");\n    } // Only show min if there is more than 1 result\n\n\n    const showMin = sortedValues.length >= 2; // Only show second max if there are more than 3 results\n\n    const showSecondMax = sortedValues.length >= 3;\n    const min = showMin ? sortedValues[0] : undefined; // Don't take the max value, because that means there is only one single\n    // lender who can make an offer on this loan\n\n    const max = sortedValues[sortedValues.length - 1];\n    const secondMax = showSecondMax ? sortedValues[sortedValues.length - 2] : max; // If there are at least 3 organisations, show a special label\n    // that combines the best and secondBest org\n\n    const maxOrganisationLabel = showSecondMax ? `${secondMax && secondMax.organisationName}${ORGANISATION_NAME_SEPARATOR}${max.organisationName} (${(max.borrowRatio * 100).toFixed(2)}%)` : max.organisationName;\n    return {\n      min,\n      max: (0, _objectSpread2.default)({}, secondMax, {\n        organisationName: maxOrganisationLabel\n      })\n    };\n  }\n\n  getMaxPropertyValueWithoutBorrowRatio({\n    loan,\n    canton,\n    residenceType\n  }) {\n    let query = {\n      features: {\n        $in: [ORGANISATION_FEATURES.LENDER]\n      }\n    };\n\n    if (loan.hasPromotion && loan.promotions[0].lenderOrganisationLink) {\n      query = {\n        _id: loan.promotions[0].lenderOrganisationLink._id\n      };\n    }\n\n    const lenderOrganisations = OrganisationService.fetch({\n      $filters: query,\n      lenderRules: lenderRulesFragment(),\n      name: 1\n    });\n    return this.getMaxPropertyValueRange({\n      organisations: lenderOrganisations.filter(({\n        lenderRules\n      }) => lenderRules && lenderRules.length > 0),\n      loan,\n      residenceType: residenceType || loan.residenceType,\n      canton\n    });\n  }\n\n  setMaxPropertyValueWithoutBorrowRatio({\n    loanId,\n    canton\n  }) {\n    const loan = this.fetchOne((0, _objectSpread2.default)({\n      $filters: {\n        _id: loanId\n      }\n    }, userLoan()));\n    const mainMaxPropertyValueRange = this.getMaxPropertyValueWithoutBorrowRatio({\n      loan,\n      residenceType: RESIDENCE_TYPE.MAIN_RESIDENCE,\n      canton\n    });\n    const secondMaxPropertyValueRange = this.getMaxPropertyValueWithoutBorrowRatio({\n      loan,\n      residenceType: RESIDENCE_TYPE.SECOND_RESIDENCE,\n      canton\n    });\n    const borrowerHash = Calculator.getBorrowerFormHash({\n      borrowers: loan.borrowers\n    });\n    this.update({\n      loanId,\n      object: {\n        maxPropertyValue: {\n          main: mainMaxPropertyValueRange,\n          second: secondMaxPropertyValueRange,\n          canton,\n          date: new Date(),\n          borrowerHash\n        }\n      }\n    });\n    return Promise.resolve();\n  }\n\n  addNewMaxStructure({\n    loanId,\n    residenceType: newResidenceType,\n    canton\n  }) {\n    if (newResidenceType) {\n      // Set residence type if it is given\n      this.update({\n        loanId,\n        object: {\n          residenceType: newResidenceType\n        }\n      });\n    }\n\n    const loan = this.fetchOne((0, _objectSpread2.default)({\n      $filters: {\n        _id: loanId\n      }\n    }, userLoan()));\n    const {\n      properties = [],\n      userId,\n      borrowers,\n      residenceType\n    } = loan; // Get the highest property value\n\n    const {\n      max: {\n        borrowRatio,\n        propertyValue,\n        organisationName\n      }\n    } = this.getMaxPropertyValueWithoutBorrowRatio({\n      loan,\n      canton\n    });\n    const firstOrganisationName = organisationName.split(ORGANISATION_NAME_SEPARATOR)[0];\n    const organisation = OrganisationService.fetchOne({\n      $filters: {\n        name: firstOrganisationName\n      },\n      lenderRules: lenderRulesFragment()\n    });\n    const calculator = new CalculatorClass({\n      loan,\n      lenderRules: organisation.lenderRules\n    }); // Recalculate the best structure for this propertyvalue\n\n    const ownFunds = calculator.suggestStructure({\n      borrowers,\n      propertyValue,\n      loanValue: Math.round(propertyValue * borrowRatio),\n      canton,\n      residenceType\n    });\n    let propertyWithCanton = properties.find(({\n      canton: propertyCanton\n    }) => propertyCanton === canton);\n    const createNewProperty = !propertyWithCanton; // If there is no property from this canton, insert a new one\n    // with the right canton\n\n    if (createNewProperty) {\n      const propertyId = PropertyService.insert({\n        property: {\n          address1: `Bien immo ${CANTONS[canton]}`,\n          zipCode: getZipcodeForCanton(canton),\n          value: propertyValue\n        },\n        loanId,\n        userId\n      });\n      propertyWithCanton = {\n        _id: propertyId\n      };\n    }\n\n    this.addNewStructure({\n      loanId,\n      structure: {\n        name: \"Capacité d'achat max.\",\n        description: CANTONS[canton],\n        propertyId: propertyWithCanton._id,\n        ownFunds,\n        propertyValue: createNewProperty ? undefined : propertyValue,\n        wantedLoan: Math.round(propertyValue * borrowRatio)\n      }\n    });\n  }\n\n  getLoanCalculator({\n    loanId,\n    structureId\n  }) {\n    const loan = fullLoan.clone({\n      _id: loanId\n    }).fetchOne();\n    let lenderRules;\n\n    if (loan && loan.structure && loan.structure.offerId) {\n      lenderRules = loan.structure.offer.lender.organisation.lenderRules;\n    } else if (loan.hasPromotion) {\n      const {\n        lenderOrganisationLink\n      } = loan.promotions[0];\n\n      if (lenderOrganisationLink) {\n        lenderRules = LenderRulesService.fetch((0, _objectSpread2.default)({\n          $filters: {\n            'organisationLink._id': lenderOrganisationLink._id\n          }\n        }, lenderRulesFragment()));\n      }\n    }\n\n    if (!lenderRules || lenderRules.length === 0) {\n      return Calculator;\n    }\n\n    return new CalculatorClass({\n      loan,\n      structureId,\n      lenderRules\n    });\n  }\n\n  expireAnonymousLoans() {\n    const lastWeek = moment().subtract(5, 'days').toDate();\n    return this.baseUpdate({\n      anonymous: true,\n      status: {\n        $ne: LOAN_STATUS.UNSUCCESSFUL\n      },\n      updatedAt: {\n        $lte: lastWeek\n      }\n    }, {\n      $set: {\n        status: LOAN_STATUS.UNSUCCESSFUL\n      }\n    }, {\n      multi: true\n    });\n  }\n\n  insertBorrowers({\n    loanId,\n    amount\n  }) {\n    const {\n      borrowerIds: existingBorrowers = [],\n      userId\n    } = this.get(loanId);\n\n    if (existingBorrowers.length === 2) {\n      throw new Meteor.Error('Cannot insert more borrowers');\n    }\n\n    if (existingBorrowers.length === 1 && amount === 2) {\n      throw new Meteor.Error('Can insert only one more borrower');\n    }\n\n    if (amount === 1) {\n      const borrowerId = BorrowerService.insert({\n        userId\n      });\n      this.addLink({\n        id: loanId,\n        linkName: 'borrowers',\n        linkId: borrowerId\n      });\n    } else if (amount === 2) {\n      const borrowerId1 = BorrowerService.insert({\n        userId\n      });\n      const borrowerId2 = BorrowerService.insert({\n        userId\n      });\n      this.addLink({\n        id: loanId,\n        linkName: 'borrowers',\n        linkId: borrowerId1\n      });\n      this.addLink({\n        id: loanId,\n        linkName: 'borrowers',\n        linkId: borrowerId2\n      });\n    } else {\n      throw new Meteor.Error('Invalid borrowers number');\n    }\n  } // Useful for demos\n\n\n  resetLoan({\n    loanId\n  }) {\n    const loan = this.findOne({\n      _id: loanId\n    });\n    const {\n      structures = [],\n      borrowerIds = [],\n      status\n    } = loan;\n\n    if (status !== LOAN_STATUS.TEST) {\n      throw new Meteor.Error('Seuls les dossiers avec le statut TEST peuvent être réinitialisés !');\n    } // Set step to solvency\n\n\n    this.setStep({\n      loanId,\n      nextStep: STEPS.SOLVENCY\n    }); // Set application type to simple\n\n    this.update({\n      loanId,\n      object: {\n        applicationType: APPLICATION_TYPES.SIMPLE\n      }\n    }); // Remove structures and an empty one\n    // structures.forEach(({ _id: structureId }) => {\n    //   this.removeStructure({ loanId, structureId });\n    // });\n    // this.addNewStructure({ loanId });\n    // Remove MaxPropertyValue\n\n    this.update({\n      loanId,\n      object: {\n        maxPropertyValue: true\n      },\n      operator: '$unset'\n    }); // Reset borrowers financing info\n    // borrowerIds.forEach((borrowerId) => {\n    //   BorrowerService.update({\n    //     borrowerId,\n    //     object: {\n    //       netSalary: null,\n    //       salary: null,\n    //       bankFortune: null,\n    //       insurance2: [],\n    //       insurance3A: [],\n    //       bank3A: [],\n    //       insurance3B: [],\n    //       otherIncome: [],\n    //       otherFortune: [],\n    //       expenses: [],\n    //       realEstate: [],\n    //       bonusExists: false,\n    //       bonus2015: null,\n    //       bonus2016: null,\n    //       bonus2017: null,\n    //       bonus2018: null,\n    //       bonus2019: null,\n    //     },\n    //   });\n    // });\n  }\n\n  linkPromotion({\n    promotionId,\n    loanId\n  }) {\n    const {\n      name: promotionName,\n      promotionLoan\n    } = PromotionService.fetchOne({\n      $filters: {\n        _id: promotionId\n      },\n      name: 1,\n      promotionLoan: {\n        _id: 1\n      }\n    });\n\n    if (promotionLoan && promotionLoan._id) {\n      this.unlinkPromotion({\n        promotionId,\n        loanId: promotionLoan._id\n      });\n    }\n\n    this.addLink({\n      id: loanId,\n      linkName: 'financedPromotion',\n      linkId: promotionId\n    });\n    this.update({\n      loanId,\n      object: {\n        customName: `Financement de ${promotionName}`\n      }\n    });\n    return loanId;\n  }\n\n  unlinkPromotion({\n    promotionId,\n    loanId\n  }) {\n    this.removeLink({\n      id: loanId,\n      linkName: 'financedPromotion',\n      linkId: promotionId\n    });\n    return this.update({\n      loanId,\n      object: {\n        customName: true\n      },\n      operator: '$unset'\n    });\n  }\n\n  setCreatedAtActivityDescription({\n    loanId,\n    description\n  }) {\n    const {\n      activities = []\n    } = this.fetchOne({\n      $filters: {\n        _id: loanId\n      },\n      activities: {\n        secondaryType: 1\n      }\n    });\n    const {\n      _id: createdAtActivityId\n    } = activities.find(({\n      secondaryType\n    }) => secondaryType === ACTIVITY_SECONDARY_TYPES.CREATED) || {};\n\n    if (createdAtActivityId) {\n      ActivityService._update({\n        id: createdAtActivityId,\n        object: {\n          description\n        }\n      });\n    }\n\n    return loanId;\n  }\n\n}\n\nmodule.exportDefault(new LoanService({}));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"expireLoansCron.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/loans/server/expireLoansCron.js                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet SyncedCron;\nmodule.link(\"meteor/littledata:synced-cron\", {\n  SyncedCron(v) {\n    SyncedCron = v;\n  }\n\n}, 0);\nlet SlackService;\nmodule.link(\"../../slack/server/SlackService\", {\n  default(v) {\n    SlackService = v;\n  }\n\n}, 1);\nlet LoanService;\nmodule.link(\"./LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 2);\nSyncedCron.add({\n  name: 'Expire anonymous loans',\n\n  schedule(parser) {\n    return parser.text('every day');\n  },\n\n  job() {\n    try {\n      const count = LoanService.expireAnonymousLoans();\n      console.log(`Expired ${count} loans`);\n    } catch (error) {\n      SlackService.sendError({\n        error,\n        additionalData: ['Expire anonymous loans CRON error']\n      });\n    }\n  }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"exposures.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/loans/server/exposures.js                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet formatLoanWithDocuments;\nmodule.link(\"../../../utils/loanFunctions\", {\n  formatLoanWithDocuments(v) {\n    formatLoanWithDocuments = v;\n  }\n\n}, 2);\nlet UserService;\nmodule.link(\"../../users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 3);\nlet createSearchFilters;\nmodule.link(\"../../helpers/mongoHelpers\", {\n  createSearchFilters(v) {\n    createSearchFilters = v;\n  }\n\n}, 4);\nlet exposeQuery;\nmodule.link(\"../../queries/queryHelpers\", {\n  exposeQuery(v) {\n    exposeQuery = v;\n  }\n\n}, 5);\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 6);\nlet adminLoans, anonymousLoan, fullLoan, loanSearch, proLoans, proPromotionLoans, proPropertyLoans, proReferredByLoans, userLoans;\nmodule.link(\"../queries\", {\n  adminLoans(v) {\n    adminLoans = v;\n  },\n\n  anonymousLoan(v) {\n    anonymousLoan = v;\n  },\n\n  fullLoan(v) {\n    fullLoan = v;\n  },\n\n  loanSearch(v) {\n    loanSearch = v;\n  },\n\n  proLoans(v) {\n    proLoans = v;\n  },\n\n  proPromotionLoans(v) {\n    proPromotionLoans = v;\n  },\n\n  proPropertyLoans(v) {\n    proPropertyLoans = v;\n  },\n\n  proReferredByLoans(v) {\n    proReferredByLoans = v;\n  },\n\n  userLoans(v) {\n    userLoans = v;\n  }\n\n}, 7);\nlet LOAN_STATUS;\nmodule.link(\"../loanConstants\", {\n  LOAN_STATUS(v) {\n    LOAN_STATUS = v;\n  }\n\n}, 8);\nlet proLoansResolver, getLoanIds, proPromotionLoansResolver, proPropertyLoansResolver, proReferredByLoansResolver;\nmodule.link(\"./resolvers\", {\n  proLoansResolver(v) {\n    proLoansResolver = v;\n  },\n\n  getLoanIds(v) {\n    getLoanIds = v;\n  },\n\n  proPromotionLoansResolver(v) {\n    proPromotionLoansResolver = v;\n  },\n\n  proPropertyLoansResolver(v) {\n    proPropertyLoansResolver = v;\n  },\n\n  proReferredByLoansResolver(v) {\n    proReferredByLoansResolver = v;\n  }\n\n}, 9);\nexposeQuery({\n  query: adminLoans,\n  overrides: {\n    embody: (body, params) => {\n      body.$filter = ({\n        filters,\n        params: {\n          _id,\n          assignedEmployeeId,\n          category,\n          hasPromotion,\n          noPromotion,\n          lenderId,\n          name,\n          owned,\n          promotionId,\n          relevantOnly,\n          status,\n          step\n        }\n      }) => {\n        if (_id) {\n          filters._id = _id;\n        }\n\n        if (name) {\n          filters.name = name;\n        }\n\n        if (owned) {\n          filters.userId = {\n            $exists: true\n          };\n        }\n\n        if (assignedEmployeeId) {\n          filters['userCache.assignedEmployeeCache._id'] = assignedEmployeeId;\n        }\n\n        if (relevantOnly) {\n          filters.status = {\n            $nin: [LOAN_STATUS.TEST, LOAN_STATUS.UNSUCCESSFUL]\n          };\n          filters.anonymous = {\n            $ne: true\n          };\n        }\n\n        if (step) {\n          filters.step = step;\n        }\n\n        if (category) {\n          filters.category = category;\n        }\n\n        if (status) {\n          filters.status = status;\n        }\n\n        if (hasPromotion) {\n          filters.$or = [{\n            'promotionLinks.0._id': {\n              $exists: true\n            }\n          }, {\n            'financedPromotionLink._id': {\n              $exists: true\n            }\n          }];\n        }\n\n        if (promotionId) {\n          filters.$or = [{\n            'promotionLinks.0._id': promotionId\n          }, {\n            'financedPromotionLink._id': promotionId\n          }];\n        }\n\n        if (noPromotion) {\n          filters['promotionLinks.0._id'] = {\n            $exists: false\n          };\n        }\n\n        if (lenderId) {\n          filters.lendersCache = {\n            $elemMatch: {\n              'organisationLink._id': lenderId\n            }\n          };\n        }\n      };\n    },\n    validateParams: {\n      _id: Match.Maybe(String),\n      assignedEmployeeId: Match.Maybe(Match.OneOf(Object, String)),\n      category: Match.Maybe(Match.OneOf(Object, String)),\n      hasPromotion: Match.Maybe(Boolean),\n      lenderId: Match.Maybe(Match.OneOf(Object, String)),\n      name: Match.Maybe(String),\n      noPromotion: Match.Maybe(Boolean),\n      owned: Match.Maybe(Boolean),\n      promotionId: Match.Maybe(Match.OneOf(Object, String)),\n      relevantOnly: Match.Maybe(Boolean),\n      status: Match.Maybe(Match.OneOf(Object, String)),\n      step: Match.Maybe(Match.OneOf(Object, String))\n    }\n  }\n});\nexposeQuery({\n  query: anonymousLoan,\n  overrides: {\n    firewall(userId, params) {\n      SecurityService.loans.checkAnonymousLoan(params._id);\n    },\n\n    validateParams: {\n      _id: String\n    }\n  },\n  options: {\n    allowFilterById: true\n  }\n});\nexposeQuery({\n  query: fullLoan,\n  overrides: {\n    embody: body => {\n      body.$postFilter = (loans = []) => loans.map(formatLoanWithDocuments);\n    }\n  },\n  options: {\n    allowFilterById: true\n  }\n});\nexposeQuery({\n  query: loanSearch,\n  overrides: {\n    firewall(userId) {\n      SecurityService.checkUserIsAdmin(userId);\n    },\n\n    embody: body => {\n      body.$filter = ({\n        filters,\n        params: {\n          searchQuery\n        }\n      }) => {\n        Object.assign(filters, createSearchFilters(['name', '_id', 'customName'], searchQuery));\n      };\n    },\n    validateParams: {\n      searchQuery: Match.Maybe(String)\n    }\n  }\n});\nexposeQuery({\n  query: proLoans,\n  overrides: {\n    firewall(userId, params) {\n      const {\n        userId: providedUserId,\n        fetchOrganisationLoans,\n        organisationId,\n        promotionId,\n        propertyId\n      } = params;\n      params.calledByUserId = userId;\n\n      if (providedUserId && SecurityService.isUserAdmin(userId)) {\n        params.userId = providedUserId;\n      } else {\n        params.userId = userId;\n      }\n\n      if (fetchOrganisationLoans) {\n        if (organisationId) {\n          SecurityService.checkUserIsAdmin(userId);\n        } else {\n          const {\n            organisations\n          } = UserService.fetchOne({\n            $filters: {\n              _id: userId\n            },\n            organisations: {\n              _id: 1\n            }\n          });\n\n          if (!organisations || organisations.length === 0) {\n            throw new Meteor.Error(\"Pas d'organisation!\");\n          }\n\n          params.organisationId = organisations[0]._id;\n        }\n      }\n\n      SecurityService.checkUserIsPro(userId);\n    },\n\n    validateParams: {\n      promotionId: Match.Maybe(Match.OneOf(String, Object)),\n      propertyId: Match.Maybe(Match.OneOf(String, Object)),\n      userId: String,\n      calledByUserId: String,\n      organisationId: Match.Maybe(String),\n      fetchOrganisationLoans: Match.Maybe(Boolean),\n      status: Match.Maybe(Match.OneOf(String, Object))\n    }\n  },\n  cacher: {\n    getDataToHash: getLoanIds({\n      withReferredBy: true\n    }),\n    ttl: 60 * 1000\n  },\n  resolver: proLoansResolver\n});\nexposeQuery({\n  query: proPromotionLoans,\n  overrides: {\n    firewall(userId, params) {\n      const {\n        promotionId\n      } = params;\n      params.userId = userId;\n      SecurityService.checkUserIsPro(userId);\n      SecurityService.promotions.isAllowedToView({\n        userId,\n        promotionId\n      });\n    },\n\n    validateParams: {\n      promotionId: String,\n      userId: String\n    }\n  },\n  resolver: ({\n    userId,\n    promotionId\n  }) => proPromotionLoansResolver({\n    calledByUserId: userId,\n    promotionId\n  })\n});\nexposeQuery({\n  query: proPropertyLoans,\n  overrides: {\n    firewall(userId, params) {\n      const {\n        propertyId\n      } = params;\n      params.userId = userId;\n      SecurityService.checkUserIsPro(userId);\n      SecurityService.properties.isAllowedToView({\n        propertyId,\n        userId\n      });\n    },\n\n    validateParams: {\n      propertyId: String,\n      userId: String\n    }\n  },\n  resolver: ({\n    userId,\n    propertyId\n  }) => proPropertyLoansResolver({\n    calledByUserId: userId,\n    propertyId\n  })\n});\nexposeQuery({\n  query: proReferredByLoans,\n  overrides: {\n    firewall(userId, params) {\n      const {\n        userId: providedUserId\n      } = params;\n      SecurityService.checkUserIsPro(userId);\n\n      if (SecurityService.isUserAdmin(userId)) {\n        params.userId = providedUserId;\n      } else {\n        params.userId = userId;\n      }\n\n      params.calledByUserId = userId;\n    },\n\n    validateParams: {\n      userId: String,\n      calledByUserId: String\n    }\n  },\n  resolver: proReferredByLoansResolver\n});\nexposeQuery({\n  query: userLoans,\n  overrides: {\n    firewall(userId, params) {\n      if (params.userId) {\n        SecurityService.checkUserIsAdmin(userId);\n      } else {\n        params.userId = userId;\n\n        if (!userId) {\n          SecurityService.loans.checkAnonymousLoan(params.loanId);\n        }\n      }\n    },\n\n    embody: (body, embodyParams) => {\n      body.$filter = ({\n        filters,\n        params\n      }) => {\n        filters.userId = params.userId;\n\n        if (params.loanId) {\n          filters._id = params.loanId;\n        }\n      };\n\n      if (!embodyParams.userId) {\n        body.maxPropertyValue = 0;\n      }\n    },\n    validateParams: {\n      loanId: Match.Maybe(String),\n      userId: Match.Maybe(String)\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"hooks.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/loans/server/hooks.js                                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet FileService;\nmodule.link(\"../../files/server/FileService\", {\n  default(v) {\n    FileService = v;\n  }\n\n}, 0);\nlet BorrowerService;\nmodule.link(\"../../borrowers/server/BorrowerService\", {\n  default(v) {\n    BorrowerService = v;\n  }\n\n}, 1);\nlet PropertyService;\nmodule.link(\"../../properties/server/PropertyService\", {\n  default(v) {\n    PropertyService = v;\n  }\n\n}, 2);\nlet UpdateWatcherService;\nmodule.link(\"../../updateWatchers/server/UpdateWatcherService\", {\n  default(v) {\n    UpdateWatcherService = v;\n  }\n\n}, 3);\nlet ActivityService;\nmodule.link(\"../../activities/server/ActivityService\", {\n  default(v) {\n    ActivityService = v;\n  }\n\n}, 4);\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 5);\nlet ROLES, PROPERTY_CATEGORY;\nmodule.link(\"../../constants\", {\n  ROLES(v) {\n    ROLES = v;\n  },\n\n  PROPERTY_CATEGORY(v) {\n    PROPERTY_CATEGORY = v;\n  }\n\n}, 6);\nlet Loans;\nmodule.link(\"../loans\", {\n  default(v) {\n    Loans = v;\n  }\n\n}, 7);\n// Autoremove borrowers and properties\nLoans.before.remove((userId, {\n  borrowerIds,\n  propertyIds\n}) => {\n  borrowerIds.forEach(borrowerId => {\n    const {\n      loans\n    } = BorrowerService.createQuery({\n      $filters: {\n        _id: borrowerId\n      },\n      loans: {\n        _id: 1\n      }\n    }).fetchOne();\n\n    if (loans.length === 1) {\n      BorrowerService.remove({\n        borrowerId\n      });\n    }\n  });\n  propertyIds.forEach(propertyId => {\n    const {\n      loans,\n      category\n    } = PropertyService.createQuery({\n      $filters: {\n        _id: propertyId\n      },\n      loans: {\n        _id: 1\n      },\n      category: 1\n    }).fetchOne();\n\n    if (loans.length === 1 && category === PROPERTY_CATEGORY.USER) {\n      PropertyService.remove({\n        propertyId\n      });\n    }\n  });\n});\nUpdateWatcherService.addUpdateWatching({\n  collection: Loans,\n  fields: ['applicationType', 'contacts', 'customName', 'previousLoanTranches', 'purchaseType', 'residenceType', 'step', 'verificationStatus'],\n  shouldWatch: ({\n    userId\n  }) => SecurityService.hasRole(userId, ROLES.USER) || SecurityService.hasRole(userId, ROLES.PRO)\n});\nLoans.after.remove((userId, {\n  _id\n}) => FileService.deleteAllFilesForDoc(_id));\nLoans.after.insert((userId, doc) => ActivityService.addCreatedAtActivity({\n  createdAt: doc.createdAt,\n  loanLink: {\n    _id: doc._id\n  },\n  title: 'Dossier créé'\n}));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"loanListeners.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/loans/server/loanListeners.js                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  disableUserFormsListener: () => disableUserFormsListener\n});\nlet ServerEventService;\nmodule.link(\"../../events/server/ServerEventService\", {\n  default(v) {\n    ServerEventService = v;\n  }\n\n}, 0);\nlet LoanService;\nmodule.link(\"./LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 1);\nlet requestLoanVerification;\nmodule.link(\"../..\", {\n  requestLoanVerification(v) {\n    requestLoanVerification = v;\n  }\n\n}, 2);\n\nconst disableUserFormsListener = ({\n  params: {\n    loanId\n  }\n}) => {\n  LoanService.update({\n    loanId,\n    object: {\n      userFormsEnabled: false\n    }\n  });\n};\n\nServerEventService.addAfterMethodListener(requestLoanVerification, disableUserFormsListener);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/loans/server/methods.js                                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  adminLoanInsertHandler: () => adminLoanInsertHandler,\n  addStructureHandler: () => addStructureHandler,\n  removeStructureHandler: () => removeStructureHandler,\n  updateStructureHandler: () => updateStructureHandler,\n  selectStructureHandler: () => selectStructureHandler,\n  duplicateStructureHandler: () => duplicateStructureHandler\n});\nlet Analytics;\nmodule.link(\"../../analytics/server/Analytics\", {\n  default(v) {\n    Analytics = v;\n  }\n\n}, 0);\nlet checkInsertUserId;\nmodule.link(\"../../helpers/server/methodServerHelpers\", {\n  checkInsertUserId(v) {\n    checkInsertUserId = v;\n  }\n\n}, 1);\nlet EVENTS;\nmodule.link(\"../../analytics/events\", {\n  default(v) {\n    EVENTS = v;\n  }\n\n}, 2);\nlet Security;\nmodule.link(\"../../security/Security\", {\n  default(v) {\n    Security = v;\n  }\n\n}, 3);\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 4);\nlet loanInsert, loanUpdate, loanDelete, requestLoanVerification, confirmClosing, pushLoanValue, popLoanValue, adminLoanInsert, addNewStructure, removeStructure, updateStructure, selectStructure, duplicateStructure, assignLoanToUser, switchBorrower, sendNegativeFeedbackToAllLenders, loanUpdatePromotionInvitedBy, reuseProperty, setMaxPropertyValueWithoutBorrowRatio, addNewMaxStructure, setLoanStep, loanShareSolvency, anonymousLoanInsert, userLoanInsert, loanInsertBorrowers, adminLoanReset, loanLinkPromotion, loanUnlinkPromotion, loanSetCreatedAtActivityDescription, loanSetStatus;\nmodule.link(\"../methodDefinitions\", {\n  loanInsert(v) {\n    loanInsert = v;\n  },\n\n  loanUpdate(v) {\n    loanUpdate = v;\n  },\n\n  loanDelete(v) {\n    loanDelete = v;\n  },\n\n  requestLoanVerification(v) {\n    requestLoanVerification = v;\n  },\n\n  confirmClosing(v) {\n    confirmClosing = v;\n  },\n\n  pushLoanValue(v) {\n    pushLoanValue = v;\n  },\n\n  popLoanValue(v) {\n    popLoanValue = v;\n  },\n\n  adminLoanInsert(v) {\n    adminLoanInsert = v;\n  },\n\n  addNewStructure(v) {\n    addNewStructure = v;\n  },\n\n  removeStructure(v) {\n    removeStructure = v;\n  },\n\n  updateStructure(v) {\n    updateStructure = v;\n  },\n\n  selectStructure(v) {\n    selectStructure = v;\n  },\n\n  duplicateStructure(v) {\n    duplicateStructure = v;\n  },\n\n  assignLoanToUser(v) {\n    assignLoanToUser = v;\n  },\n\n  switchBorrower(v) {\n    switchBorrower = v;\n  },\n\n  sendNegativeFeedbackToAllLenders(v) {\n    sendNegativeFeedbackToAllLenders = v;\n  },\n\n  loanUpdatePromotionInvitedBy(v) {\n    loanUpdatePromotionInvitedBy = v;\n  },\n\n  reuseProperty(v) {\n    reuseProperty = v;\n  },\n\n  setMaxPropertyValueWithoutBorrowRatio(v) {\n    setMaxPropertyValueWithoutBorrowRatio = v;\n  },\n\n  addNewMaxStructure(v) {\n    addNewMaxStructure = v;\n  },\n\n  setLoanStep(v) {\n    setLoanStep = v;\n  },\n\n  loanShareSolvency(v) {\n    loanShareSolvency = v;\n  },\n\n  anonymousLoanInsert(v) {\n    anonymousLoanInsert = v;\n  },\n\n  userLoanInsert(v) {\n    userLoanInsert = v;\n  },\n\n  loanInsertBorrowers(v) {\n    loanInsertBorrowers = v;\n  },\n\n  adminLoanReset(v) {\n    adminLoanReset = v;\n  },\n\n  loanLinkPromotion(v) {\n    loanLinkPromotion = v;\n  },\n\n  loanUnlinkPromotion(v) {\n    loanUnlinkPromotion = v;\n  },\n\n  loanSetCreatedAtActivityDescription(v) {\n    loanSetCreatedAtActivityDescription = v;\n  },\n\n  loanSetStatus(v) {\n    loanSetStatus = v;\n  }\n\n}, 5);\nlet STEPS, LOAN_STATUS;\nmodule.link(\"../loanConstants\", {\n  STEPS(v) {\n    STEPS = v;\n  },\n\n  LOAN_STATUS(v) {\n    LOAN_STATUS = v;\n  }\n\n}, 6);\nlet LoanService;\nmodule.link(\"./LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 7);\nloanInsert.setHandler((context, {\n  loan,\n  userId\n}) => {\n  userId = checkInsertUserId(userId);\n  return LoanService.insert({\n    loan,\n    userId\n  });\n});\nloanUpdate.setHandler((context, {\n  loanId,\n  object\n}) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.update({\n    loanId,\n    object\n  });\n});\nloanDelete.setHandler((context, {\n  loanId\n}) => {\n  SecurityService.loans.isAllowedToDelete(loanId);\n  return LoanService.remove({\n    loanId\n  });\n});\nrequestLoanVerification.setHandler((context, {\n  loanId\n}) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.askVerification({\n    loanId\n  });\n});\nconfirmClosing.setHandler((context, {\n  loanId,\n  object\n}) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return LoanService.confirmClosing({\n    loanId,\n    object\n  });\n});\npushLoanValue.setHandler((context, {\n  loanId,\n  object\n}) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.pushValue({\n    loanId,\n    object\n  });\n});\npopLoanValue.setHandler((context, {\n  loanId,\n  object\n}) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.popValue({\n    loanId,\n    object\n  });\n});\n\nconst adminLoanInsertHandler = ({\n  userId: adminUserId\n}, {\n  userId\n}) => {\n  SecurityService.checkUserIsAdmin(adminUserId);\n  return LoanService.fullLoanInsert({\n    userId\n  });\n};\n\nadminLoanInsert.setHandler(adminLoanInsertHandler);\nuserLoanInsert.setHandler(({\n  userId\n}, {\n  test,\n  proPropertyId\n}) => {\n  SecurityService.checkLoggedIn();\n\n  if (proPropertyId) {\n    return LoanService.insertPropertyLoan({\n      userId,\n      propertyIds: [proPropertyId],\n      loan: {\n        displayWelcomeScreen: false\n      }\n    });\n  }\n\n  return LoanService.fullLoanInsert({\n    userId,\n    loan: {\n      displayWelcomeScreen: false,\n      status: test ? LOAN_STATUS.TEST : LOAN_STATUS.LEAD\n    }\n  });\n});\n\nconst addStructureHandler = (context, {\n  loanId\n}) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.addNewStructure({\n    loanId\n  });\n};\n\naddNewStructure.setHandler(addStructureHandler);\n\nconst removeStructureHandler = (context, {\n  loanId,\n  structureId\n}) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.removeStructure({\n    loanId,\n    structureId\n  });\n};\n\nremoveStructure.setHandler(removeStructureHandler);\n\nconst updateStructureHandler = (context, {\n  loanId,\n  structureId,\n  structure\n}) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.updateStructure({\n    loanId,\n    structureId,\n    structure\n  });\n};\n\nupdateStructure.setHandler(updateStructureHandler);\n\nconst selectStructureHandler = (context, {\n  loanId,\n  structureId\n}) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.selectStructure({\n    loanId,\n    structureId\n  });\n};\n\nselectStructure.setHandler(selectStructureHandler);\n\nconst duplicateStructureHandler = (context, {\n  loanId,\n  structureId\n}) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.duplicateStructure({\n    loanId,\n    structureId\n  });\n};\n\nduplicateStructure.setHandler(duplicateStructureHandler);\nassignLoanToUser.setHandler(({\n  userId\n}, params) => {\n  const {\n    anonymous\n  } = LoanService.fetchOne({\n    $filters: {\n      _id: params.loanId\n    },\n    anonymous: 1\n  });\n\n  if (anonymous) {\n    SecurityService.loans.checkAnonymousLoan(params.loanId);\n  } else {\n    SecurityService.checkUserIsAdmin(userId);\n  }\n\n  LoanService.assignLoanToUser(params);\n});\nswitchBorrower.setHandler((context, params) => {\n  SecurityService.loans.isAllowedToUpdate(params.loanId);\n  return LoanService.switchBorrower(params);\n});\nsendNegativeFeedbackToAllLenders.setHandler((context, params) => {\n  const {\n    userId\n  } = context;\n  Security.checkUserIsAdmin(userId);\n  context.unblock();\n  return LoanService.sendNegativeFeedbackToAllLenders(params);\n});\nloanUpdatePromotionInvitedBy.setHandler(({\n  userId\n}, params) => {\n  Security.checkUserIsAdmin(userId);\n  LoanService.updatePromotionInvitedBy(params);\n});\nreuseProperty.setHandler((context, params) => {\n  SecurityService.loans.isAllowedToUpdate(params.loanId);\n  LoanService.reuseProperty(params);\n});\nsetMaxPropertyValueWithoutBorrowRatio.setHandler((context, params) => {\n  SecurityService.loans.isAllowedToUpdate(params.loanId);\n  return LoanService.setMaxPropertyValueWithoutBorrowRatio(params);\n});\naddNewMaxStructure.setHandler((context, params) => {\n  SecurityService.loans.isAllowedToUpdate(params.loanId);\n  return LoanService.addNewMaxStructure(params);\n});\nsetLoanStep.setHandler((context, params) => {\n  const userAllowedSteps = [STEPS.SOLVENCY, STEPS.REQUEST];\n\n  if (userAllowedSteps.includes(params.nextStep)) {\n    SecurityService.loans.isAllowedToUpdate(params.loanId);\n  } else {\n    Security.checkUserIsAdmin(context.userId);\n  }\n\n  context.unblock();\n  return LoanService.setStep(params);\n});\nloanShareSolvency.setHandler((context, params) => {\n  const {\n    loanId,\n    shareSolvency\n  } = params;\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.update({\n    loanId: params.loanId,\n    object: {\n      shareSolvency\n    }\n  });\n});\nanonymousLoanInsert.setHandler((context, params) => {\n  const {\n    proPropertyId,\n    existingAnonymousLoanId,\n    referralId,\n    trackingId\n  } = params;\n\n  if (proPropertyId) {\n    SecurityService.properties.isAllowedToAddAnonymousLoan({\n      propertyId: proPropertyId\n    });\n  }\n\n  if (existingAnonymousLoanId) {\n    // If an anonymous loan exists on the client, don't add another one\n    // If a new property is requested on it, add it to the existing loan\n    if (proPropertyId) {\n      const existingLoan = LoanService.fetchOne({\n        $filters: {\n          _id: existingAnonymousLoanId\n        },\n        propertyIds: 1\n      });\n\n      if (existingLoan && existingLoan.propertyIds && !existingLoan.propertyIds.includes(proPropertyId)) {\n        // TODO: Quentin, track this\n        LoanService.addPropertyToLoan({\n          loanId: existingAnonymousLoanId,\n          propertyId: proPropertyId\n        });\n      }\n    }\n\n    return existingAnonymousLoanId;\n  }\n\n  const loanId = LoanService.insertAnonymousLoan(params);\n  const analytics = new Analytics(context);\n  analytics.track(EVENTS.LOAN_CREATED, {\n    loanId,\n    propertyId: proPropertyId,\n    referralId,\n    anonymous: true\n  }, trackingId);\n  return loanId;\n});\nloanInsertBorrowers.setHandler((context, params) => {\n  const {\n    loanId\n  } = params;\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  LoanService.insertBorrowers(params);\n});\nadminLoanReset.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return LoanService.resetLoan(params);\n});\nloanLinkPromotion.setHandler(({\n  userId\n}, params) => {\n  SecurityService.checkUserIsAdmin(userId);\n  return LoanService.linkPromotion(params);\n});\nloanUnlinkPromotion.setHandler(({\n  userId\n}, params) => {\n  SecurityService.checkUserIsAdmin(userId);\n  return LoanService.unlinkPromotion(params);\n});\nloanSetCreatedAtActivityDescription.setHandler(({\n  userId\n}, params) => {\n  SecurityService.checkUserIsAdmin(userId);\n  return LoanService.setCreatedAtActivityDescription(params);\n});\nloanSetStatus.setHandler(({\n  userId\n}, params) => {\n  SecurityService.checkUserIsAdmin(userId);\n  return LoanService.setStatus(params);\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"resolvers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/loans/server/resolvers.js                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nmodule.export({\n  proReferredByLoansResolver: () => proReferredByLoansResolver,\n  proPromotionLoansResolver: () => proPromotionLoansResolver,\n  proPropertyLoansResolver: () => proPropertyLoansResolver,\n  proLoansResolver: () => proLoansResolver,\n  getLoanIds: () => getLoanIds\n});\nlet uniqBy;\nmodule.link(\"lodash/uniqBy\", {\n  default(v) {\n    uniqBy = v;\n  }\n\n}, 0);\nlet PROPERTIES_COLLECTION, PROPERTY_CATEGORY, RESIDENCE_TYPE, PROPERTY_SOLVENCY;\nmodule.link(\"../../properties/propertyConstants\", {\n  PROPERTIES_COLLECTION(v) {\n    PROPERTIES_COLLECTION = v;\n  },\n\n  PROPERTY_CATEGORY(v) {\n    PROPERTY_CATEGORY = v;\n  },\n\n  RESIDENCE_TYPE(v) {\n    RESIDENCE_TYPE = v;\n  },\n\n  PROPERTY_SOLVENCY(v) {\n    PROPERTY_SOLVENCY = v;\n  }\n\n}, 1);\nlet PROMOTIONS_COLLECTION;\nmodule.link(\"../../promotions/promotionConstants\", {\n  PROMOTIONS_COLLECTION(v) {\n    PROMOTIONS_COLLECTION = v;\n  }\n\n}, 2);\nlet UserService;\nmodule.link(\"../../users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 3);\nlet makePromotionLoanAnonymizer;\nmodule.link(\"../../promotions/server/promotionServerHelpers\", {\n  makeLoanAnonymizer(v) {\n    makePromotionLoanAnonymizer = v;\n  }\n\n}, 4);\nlet proLoans, revenue;\nmodule.link(\"../../fragments\", {\n  proLoans(v) {\n    proLoans = v;\n  },\n\n  revenue(v) {\n    revenue = v;\n  }\n\n}, 5);\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 6);\nlet makeProPropertyLoanAnonymizer;\nmodule.link(\"../../properties/server/propertyServerHelpers\", {\n  makeProPropertyLoanAnonymizer(v) {\n    makeProPropertyLoanAnonymizer = v;\n  }\n\n}, 7);\nlet OrganisationService;\nmodule.link(\"../../organisations/server/OrganisationService\", {\n  default(v) {\n    OrganisationService = v;\n  }\n\n}, 8);\nlet LoanService;\nmodule.link(\"./LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 9);\nconst proLoansFragment = proLoans();\n\nconst isSolventForProProperty = ({\n  isAdmin,\n  property,\n  maxPropertyValue,\n  residenceType,\n  shareSolvency\n}) => {\n  if (!maxPropertyValue) {\n    return PROPERTY_SOLVENCY.UNDETERMINED;\n  }\n\n  if (!shareSolvency && !isAdmin) {\n    return PROPERTY_SOLVENCY.NOT_SHARED;\n  }\n\n  const {\n    main: {\n      max: {\n        propertyValue: mainMaxValue\n      }\n    },\n    second: {\n      max: {\n        propertyValue: secondMaxValue\n      }\n    }\n  } = maxPropertyValue;\n  const {\n    totalValue\n  } = property;\n\n  switch (residenceType) {\n    case RESIDENCE_TYPE.MAIN_RESIDENCE:\n      {\n        return totalValue <= mainMaxValue ? PROPERTY_SOLVENCY.SOLVENT : PROPERTY_SOLVENCY.INSOLVENT;\n      }\n\n    case RESIDENCE_TYPE.SECOND_RESIDENCE:\n      {\n        return totalValue <= secondMaxValue ? PROPERTY_SOLVENCY.SOLVENT : PROPERTY_SOLVENCY.INSOLVENT;\n      }\n\n    default:\n      return null;\n  }\n};\n\nconst handleLoanSolvencySharing = ({\n  isAdmin = false\n}) => loanObject => {\n  const {\n    maxPropertyValue,\n    shareSolvency\n  } = loanObject,\n        loan = (0, _objectWithoutProperties2.default)(loanObject, [\"maxPropertyValue\", \"shareSolvency\"]);\n  const propertiesWithSolvency = loan.properties.map(property => (0, _objectSpread2.default)({}, property, {\n    solvent: isSolventForProProperty({\n      isAdmin,\n      property,\n      maxPropertyValue,\n      residenceType: loan.residenceType,\n      shareSolvency\n    })\n  }));\n  return (0, _objectSpread2.default)({}, loan, {\n    properties: propertiesWithSolvency\n  });\n};\n\nconst anonymizePromotionLoans = ({\n  loans = [],\n  userId\n}) => loans.map(loan => {\n  const {\n    promotions\n  } = loan;\n  const promotionId = promotions[0]._id;\n  const promotionLoanAnonymizer = makePromotionLoanAnonymizer({\n    userId,\n    promotionId\n  });\n  return promotionLoanAnonymizer(loan);\n});\n\nconst anonymizePropertyLoans = ({\n  loans = [],\n  userId\n}) => loans.map(loan => {\n  const {\n    properties\n  } = loan;\n  const proPropertyIds = properties.filter(({\n    category\n  }) => category === PROPERTY_CATEGORY.PRO).map(({\n    _id\n  }) => _id);\n  return makeProPropertyLoanAnonymizer({\n    userId,\n    propertyIds: proPropertyIds\n  })(loan);\n});\n\nconst anonymizeReferredByLoans = ({\n  loans = [],\n  userId\n}) => [...loans];\n\nconst doesUserShareCustomers = ({\n  $metadata: {\n    shareCustomers\n  }\n}) => shareCustomers;\n\nconst proReferredByLoansResolver = ({\n  userId,\n  calledByUserId,\n  status\n}) => {\n  const mainOrganisation = UserService.getUserMainOrganisation(userId);\n  let mainOrganisationsUserIds = [];\n\n  if (mainOrganisation) {\n    const {\n      _id: mainOrganisationId\n    } = mainOrganisation;\n    const {\n      users: mainOrganisationUsers = []\n    } = OrganisationService.fetchOne({\n      $filters: {\n        _id: mainOrganisationId\n      },\n      users: {\n        _id: 1\n      }\n    });\n    mainOrganisationsUserIds = mainOrganisationUsers.filter(({\n      _id\n    }) => _id !== userId).filter(doesUserShareCustomers).map(({\n      _id\n    }) => _id);\n  }\n\n  const users = UserService.fetch({\n    $filters: {\n      referredByUserLink: {\n        $in: [userId, ...mainOrganisationsUserIds]\n      }\n    },\n    loans: (0, _objectSpread2.default)({}, proLoansFragment, {\n      $filters: status ? {\n        status\n      } : {}\n    })\n  });\n  const loans = users.reduce((allLoans, {\n    loans: userLoans = []\n  }) => [...allLoans, ...userLoans], []);\n\n  try {\n    SecurityService.checkUserIsAdmin(calledByUserId);\n    return loans;\n  } catch (error) {\n    return anonymizeReferredByLoans({\n      loans,\n      userId: calledByUserId\n    });\n  }\n};\n\nconst proPromotionLoansResolver = ({\n  calledByUserId,\n  promotionId,\n  status\n}) => {\n  const loans = LoanService.fetch((0, _objectSpread2.default)({\n    $filters: {\n      'promotionLinks._id': promotionId,\n      status\n    }\n  }, proLoansFragment));\n\n  try {\n    SecurityService.checkUserIsAdmin(calledByUserId);\n    return loans;\n  } catch (error) {\n    return anonymizePromotionLoans({\n      loans,\n      userId: calledByUserId\n    });\n  }\n};\n\nconst proPropertyLoansResolver = ({\n  calledByUserId,\n  propertyId,\n  status\n}) => {\n  const loans = LoanService.fetch((0, _objectSpread2.default)({\n    $filters: {\n      propertyIds: propertyId,\n      status\n    }\n  }, proLoansFragment));\n\n  try {\n    SecurityService.checkUserIsAdmin(calledByUserId);\n    return loans.map(handleLoanSolvencySharing({\n      isAdmin: true\n    }));\n  } catch (error) {\n    return anonymizePropertyLoans({\n      loans: loans.map(handleLoanSolvencySharing({\n        isAdmin: false\n      })),\n      userId: calledByUserId\n    });\n  }\n};\n\nconst shouldShowPromotionLoan = ({\n  userId\n}) => loan => {\n  const {\n    promotions = []\n  } = loan;\n  const {\n    $metadata: {\n      invitedBy\n    }\n  } = promotions[0];\n  return invitedBy === userId;\n};\n\nconst getRelatedProPropertiesOfUser = ({\n  loan,\n  userId\n}) => {\n  const {\n    properties = []\n  } = loan;\n  return properties.filter(property => property.category === PROPERTY_CATEGORY.PRO).filter(({\n    users = []\n  }) => users.some(({\n    _id\n  }) => _id === userId)).map(property => (0, _objectSpread2.default)({}, property, {\n    collection: PROPERTIES_COLLECTION\n  }));\n};\n\nconst promotionHasUser = userId => ({\n  users = []\n}) => users.some(({\n  _id\n}) => _id === userId);\n\nconst getRelatedPromotionsOfUser = ({\n  loan,\n  userId\n}) => {\n  const {\n    promotions = []\n  } = loan;\n  return promotions.filter(promotionHasUser(userId)).map(promotion => (0, _objectSpread2.default)({}, promotion, {\n    collection: PROMOTIONS_COLLECTION\n  }));\n};\n\nconst organisationLoans = ({\n  organisationId,\n  status\n}) => LoanService.fetch((0, _objectSpread2.default)({\n  $filters: {\n    'userCache.referredByOrganisationLink': organisationId,\n    status\n  }\n}, proLoansFragment, {\n  revenues: revenue(),\n  user: {\n    organisationLink: 1\n  }\n}));\n\nconst proLoansResolver = ({\n  userId,\n  calledByUserId,\n  promotionId,\n  propertyId,\n  fetchOrganisationLoans,\n  organisationId,\n  status\n}) => {\n  let loans = [];\n\n  if (fetchOrganisationLoans) {\n    return organisationLoans({\n      organisationId,\n      status\n    });\n  }\n\n  if (promotionId) {\n    const promotionLoans = proPromotionLoansResolver({\n      calledByUserId,\n      promotionId,\n      status\n    }).filter(shouldShowPromotionLoan({\n      userId\n    })).map(loan => (0, _objectSpread2.default)({}, loan, {\n      relatedTo: getRelatedPromotionsOfUser({\n        loan,\n        userId\n      })\n    }));\n    loans = promotionLoans;\n  }\n\n  if (propertyId) {\n    const propertyLoans = proPropertyLoansResolver({\n      calledByUserId,\n      propertyId,\n      status\n    }).map(loan => (0, _objectSpread2.default)({}, loan, {\n      relatedTo: getRelatedProPropertiesOfUser({\n        loan,\n        userId\n      })\n    }));\n    loans = [...loans, ...propertyLoans];\n  }\n\n  const referredByLoans = proReferredByLoansResolver({\n    userId,\n    calledByUserId,\n    status\n  }).map(loan => (0, _objectSpread2.default)({}, loan, {\n    relatedTo: [...getRelatedProPropertiesOfUser({\n      loan,\n      userId\n    }), ...getRelatedPromotionsOfUser({\n      loan,\n      userId\n    })]\n  }));\n  loans = [...loans, ...referredByLoans];\n  return uniqBy(loans, '_id');\n};\n\nconst getLoanIds = ({\n  withReferredBy = false\n} = {}) => (params = {}) => {\n  const {\n    promotionId,\n    propertyId,\n    userId,\n    status\n  } = params;\n  let loanIds = [];\n\n  if (withReferredBy) {\n    const {\n      organisations = []\n    } = UserService.fetch({\n      $filters: {\n        _id: userId\n      },\n      organisations: {\n        _id: 1\n      }\n    });\n    const organisationId = !!organisations.length && organisations[0]._id;\n    const users = UserService.fetch({\n      $filters: {\n        $or: [{\n          referredByUserLink: userId\n        }, organisationId && {\n          referredByOrganisationLink: organisationId\n        }].filter(x => x)\n      },\n      loans: {\n        _id: 1,\n        $filters: status ? {\n          status\n        } : {}\n      }\n    });\n    loanIds = users.reduce((allLoans, {\n      loans: userLoans = []\n    }) => [...allLoans, ...userLoans.map(({\n      _id\n    }) => _id)], []);\n  }\n\n  if (promotionId) {\n    const promotionLoanIds = LoanService.fetch({\n      $filters: {\n        'promotionLinks._id': promotionId,\n        status\n      },\n      _id: 1\n    });\n    loanIds = [...loanIds, ...promotionLoanIds.map(({\n      _id\n    }) => _id)];\n  }\n\n  if (propertyId) {\n    const propertyLoanIds = LoanService.fetch({\n      $filters: {\n        propertyIds: propertyId,\n        status\n      },\n      _id: 1\n    });\n    loanIds = [...loanIds, ...propertyLoanIds.map(({\n      _id\n    }) => _id)];\n  }\n\n  return loanIds;\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"serverReducers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/loans/server/serverReducers.js                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet merge;\nmodule.link(\"lodash/merge\", {\n  default(v) {\n    merge = v;\n  }\n\n}, 0);\nlet omit;\nmodule.link(\"lodash/omit\", {\n  default(v) {\n    omit = v;\n  }\n\n}, 1);\nlet Calculator;\nmodule.link(\"../../../utils/Calculator\", {\n  default(v) {\n    Calculator = v;\n  }\n\n}, 2);\nlet Loans;\nmodule.link(\"../loans\", {\n  default(v) {\n    Loans = v;\n  }\n\n}, 3);\nlet assigneeReducer;\nmodule.link(\"../../reducers/assigneeReducer\", {\n  default(v) {\n    assigneeReducer = v;\n  }\n\n}, 4);\nlet userLoan;\nmodule.link(\"../../fragments\", {\n  userLoan(v) {\n    userLoan = v;\n  }\n\n}, 5);\nconst body = merge({}, omit(userLoan(), ['maxPropertyValue', 'offers', 'promotions', 'user', 'promotionOptions', 'borrowers.mortgageNotes', 'borrowers.loans']), {\n  documents: 1,\n  borrowers: {\n    documents: 1\n  },\n  properties: {\n    documents: 1\n  }\n});\nLoans.addReducers((0, _objectSpread2.default)({}, assigneeReducer(), {\n  loanProgress: {\n    body,\n    reduce: loan => ({\n      info: Calculator.personalInfoPercent({\n        loan\n      }),\n      documents: Calculator.filesProgress({\n        loan\n      }).percent,\n      verificationStatus: loan.verificationStatus\n    })\n  }\n}));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"fakes.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/loans/fakes.js                                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  emptyLoan: () => emptyLoan,\n  loanStep1: () => loanStep1,\n  loanStep2: () => loanStep2\n});\nlet RESIDENCE_TYPE, STEPS;\nmodule.link(\"../constants\", {\n  RESIDENCE_TYPE(v) {\n    RESIDENCE_TYPE = v;\n  },\n\n  STEPS(v) {\n    STEPS = v;\n  }\n\n}, 0);\nconst emptyLoan = {\n  step: STEPS.SOLVENCY,\n  documents: {},\n  contacts: []\n};\nconst loanStep1 = {\n  residenceType: RESIDENCE_TYPE.MAIN_RESIDENCE,\n  purchaseType: 'ACQUISITION',\n  step: STEPS.SOLVENCY,\n  structures: [{\n    id: 'randomStructureId',\n    wantedLoan: 800000\n  }],\n  selectedStructure: 'randomStructureId'\n};\nconst loanStep2 = {\n  residenceType: RESIDENCE_TYPE.MAIN_RESIDENCE,\n  purchaseType: 'ACQUISITION',\n  step: STEPS.OFFERS,\n  displayWelcomeScreen: false,\n  structures: [{\n    id: 'randomStructureId',\n    wantedLoan: 800000\n  }],\n  selectedStructure: 'randomStructureId',\n  contacts: [{\n    name: 'Jean Dupont',\n    phoneNumber: '+41 22 566 01 10',\n    title: 'Courtier immobilier',\n    email: 'digital@e-potek.ch'\n  }]\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/loans/index.js                                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./methodDefinitions\", {\n  \"*\": \"*\"\n}, 0);\nmodule.link(\"./loans\", {\n  default: \"default\"\n}, 1);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"links.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/loans/links.js                                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  userCache: () => userCache,\n  lendersCache: () => lendersCache,\n  tasksCache: () => tasksCache\n});\nlet Loans;\nmodule.link(\"./loans\", {\n  default(v) {\n    Loans = v;\n  }\n\n}, 0);\nlet Borrowers, Lenders, PromotionLots, PromotionOptions, Promotions, Properties, Revenues, Tasks, Users;\nmodule.link(\"..\", {\n  Borrowers(v) {\n    Borrowers = v;\n  },\n\n  Lenders(v) {\n    Lenders = v;\n  },\n\n  PromotionLots(v) {\n    PromotionLots = v;\n  },\n\n  PromotionOptions(v) {\n    PromotionOptions = v;\n  },\n\n  Promotions(v) {\n    Promotions = v;\n  },\n\n  Properties(v) {\n    Properties = v;\n  },\n\n  Revenues(v) {\n    Revenues = v;\n  },\n\n  Tasks(v) {\n    Tasks = v;\n  },\n\n  Users(v) {\n    Users = v;\n  }\n\n}, 1);\nlet LinkInitializer;\nmodule.link(\"../links/LinkInitializer\", {\n  default(v) {\n    LinkInitializer = v;\n  }\n\n}, 2);\nlet Activities;\nmodule.link(\"../activities/activities\", {\n  default(v) {\n    Activities = v;\n  }\n\n}, 3);\nconst userCache = {\n  _id: 1,\n  firstName: 1,\n  lastName: 1,\n  referredByOrganisationLink: 1,\n  assignedEmployeeCache: 1\n};\nconst lendersCache = {\n  status: 1,\n  contactLink: 1,\n  organisationLink: 1\n};\nconst tasksCache = {\n  createdAt: 1,\n  dueAt: 1,\n  status: 1,\n  title: 1,\n  isPrivate: 1,\n  assigneeLink: 1\n};\nLinkInitializer.directInit(() => {\n  Loans.addLinks({\n    activities: {\n      inversedBy: 'loan',\n      collection: Activities,\n      autoremove: true\n    },\n    borrowers: {\n      field: 'borrowerIds',\n      collection: Borrowers,\n      type: 'many'\n    },\n    promotions: {\n      field: 'promotionLinks',\n      collection: Promotions,\n      type: 'many',\n      metadata: true\n    },\n    promotionOptions: {\n      field: 'promotionOptionLinks',\n      collection: PromotionOptions,\n      type: 'many',\n      unique: true,\n      metadata: true,\n      autoremove: true\n    },\n    properties: {\n      field: 'propertyIds',\n      collection: Properties,\n      type: 'many'\n    },\n    revenues: {\n      field: 'revenueLinks',\n      collection: Revenues,\n      type: 'many',\n      unique: true\n    },\n    user: {\n      field: 'userId',\n      collection: Users,\n      type: 'one',\n      denormalize: {\n        field: 'userCache',\n        body: userCache\n      }\n    },\n    financedPromotion: {\n      field: 'financedPromotionLink',\n      type: 'one',\n      metadata: true,\n      unique: true,\n      collection: Promotions\n    }\n  });\n});\nLinkInitializer.inversedInit(() => {\n  Loans.addLinks({\n    attributedPromotionLots: {\n      collection: PromotionLots,\n      inversedBy: 'attributedTo'\n    },\n    lenders: {\n      collection: Lenders,\n      inversedBy: 'loan',\n      unique: true,\n      autoremove: true,\n      denormalize: {\n        field: 'lendersCache',\n        body: lendersCache\n      }\n    },\n    tasks: {\n      collection: Tasks,\n      inversedBy: 'loan',\n      autoremove: true,\n      denormalize: {\n        field: 'tasksCache',\n        body: tasksCache\n      }\n    }\n  });\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"loanConstants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/loans/loanConstants.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  LOANS_COLLECTION: () => LOANS_COLLECTION,\n  LOAN_STATUS: () => LOAN_STATUS,\n  LOAN_STATUS_ORDER: () => LOAN_STATUS_ORDER,\n  PURCHASE_TYPE: () => PURCHASE_TYPE,\n  CANTONS: () => CANTONS,\n  OWNER: () => OWNER,\n  INSURANCE_USE_PRESET: () => INSURANCE_USE_PRESET,\n  LOAN_STRATEGY_PRESET: () => LOAN_STRATEGY_PRESET,\n  AMORTIZATION_TYPE: () => AMORTIZATION_TYPE,\n  PAYMENT_SCHEDULES: () => PAYMENT_SCHEDULES,\n  LOAN_QUERIES: () => LOAN_QUERIES,\n  OWN_FUNDS_USAGE_TYPES: () => OWN_FUNDS_USAGE_TYPES,\n  STEPS: () => STEPS,\n  STEP_ORDER: () => STEP_ORDER,\n  LOAN_VERIFICATION_STATUS: () => LOAN_VERIFICATION_STATUS,\n  SOLVENCY_TYPE: () => SOLVENCY_TYPE,\n  APPLICATION_TYPES: () => APPLICATION_TYPES,\n  ORGANISATION_NAME_SEPARATOR: () => ORGANISATION_NAME_SEPARATOR,\n  LOCAL_STORAGE_ANONYMOUS_LOAN: () => LOCAL_STORAGE_ANONYMOUS_LOAN,\n  EMPTY_STRUCTURE: () => EMPTY_STRUCTURE,\n  LOAN_CATEGORIES: () => LOAN_CATEGORIES\n});\nconst LOANS_COLLECTION = 'loans';\nconst LOAN_STATUS = {\n  LEAD: 'LEAD',\n  ONGOING: 'ONGOING',\n  CLOSING: 'CLOSING',\n  BILLING: 'BILLING',\n  FINALIZED: 'FINALIZED',\n  PENDING: 'PENDING',\n  UNSUCCESSFUL: 'UNSUCCESSFUL',\n  TEST: 'TEST'\n};\nconst LOAN_STATUS_ORDER = [LOAN_STATUS.LEAD, LOAN_STATUS.ONGOING, LOAN_STATUS.PENDING, LOAN_STATUS.CLOSING, LOAN_STATUS.BILLING, LOAN_STATUS.FINALIZED, LOAN_STATUS.UNSUCCESSFUL, LOAN_STATUS.TEST];\nconst PURCHASE_TYPE = {\n  ACQUISITION: 'ACQUISITION',\n  REFINANCING: 'REFINANCING',\n  // TODO: Figure out what needs to be changed for this\n  CONSTRUCTION: 'CONSTRUCTION'\n};\nconst CANTONS = {\n  AG: 'Aargau',\n  AR: 'Appenzell Ausserrhoden',\n  AI: 'Appenzell Innerrhoden',\n  BL: 'Basel-Land',\n  BS: 'Basel-Stadt',\n  BE: 'Bern',\n  FR: 'Fribourg',\n  GE: 'Genève',\n  GL: 'Glarus',\n  GR: 'Graubünden',\n  JU: 'Jura',\n  LU: 'Luzern',\n  NE: 'Neuchâtel',\n  NW: 'Nidwalden',\n  OW: 'Obwalden',\n  SG: 'St. Gallen',\n  SH: 'Schaffhausen',\n  SZ: 'Schwyz',\n  SO: 'Solothurn',\n  TG: 'Thurgau',\n  TI: 'Ticino',\n  UR: 'Uri',\n  VD: 'Vaud',\n  VS: 'Valais',\n  ZG: 'Zug',\n  ZH: 'Zürich',\n  LI: 'Liechtenstein'\n};\nconst OWNER = {\n  FIRST: '0',\n  SECOND: '1',\n  BOTH: 'BOTH',\n  OTHER: 'OTHER'\n};\nconst INSURANCE_USE_PRESET = {\n  WITHDRAWAL: 'WITHDRAWAL',\n  COLLATERAL: 'COLLATERAL'\n};\nconst LOAN_STRATEGY_PRESET = {\n  FIXED: 'FIXED',\n  MANUAL: 'MANUAL'\n};\nconst AMORTIZATION_TYPE = {\n  INDIRECT: 'INDIRECT',\n  DIRECT: 'DIRECT'\n};\nconst PAYMENT_SCHEDULES = {\n  MONTHLY: 'MONTHLY',\n  YEARLY: 'YEARLY',\n  SEMESTERLY: 'SEMESTERLY'\n};\nconst LOAN_QUERIES = {\n  ADMIN_LOANS: 'ADMIN_LOANS',\n  ANONYMOUS_LOAN: 'ANONYMOUS_LOAN',\n  FULL_LOAN: 'FULL_LOAN',\n  LOAN_FILES: 'LOAN_FILES',\n  LOAN_SEARCH: 'LOAN_SEARCH',\n  PRO_LOANS: 'PRO_LOANS',\n  PRO_PROMOTION_LOANS: 'PRO_PROMOTION_LOANS',\n  PRO_PROPERTY_LOANS: 'PRO_PROPERTY_LOANS',\n  PRO_REFERRED_BY_LOANS: 'PRO_REFERRED_BY_LOANS',\n  USER_LOANS_E2E: 'USER_LOANS_E2E',\n  USER_LOANS: 'USER_LOANS'\n};\nconst OWN_FUNDS_USAGE_TYPES = {\n  WITHDRAW: 'WITHDRAW',\n  PLEDGE: 'PLEDGE'\n};\nconst STEPS = {\n  SOLVENCY: 'SOLVENCY',\n  REQUEST: 'REQUEST',\n  OFFERS: 'OFFERS',\n  CLOSING: 'CLOSING'\n};\nconst STEP_ORDER = [STEPS.SOLVENCY, STEPS.REQUEST, STEPS.OFFERS, STEPS.CLOSING];\nconst LOAN_VERIFICATION_STATUS = {\n  NONE: 'NONE',\n  REQUESTED: 'REQUESTED',\n  OK: 'OK',\n  ERROR: 'ERROR'\n};\nconst SOLVENCY_TYPE = {\n  SIMPLE: 'SIMPLE',\n  FULL: 'FULL'\n};\nconst APPLICATION_TYPES = {\n  SIMPLE: 'SIMPLE',\n  FULL: 'FULL'\n};\nconst ORGANISATION_NAME_SEPARATOR = ' / ';\nconst LOCAL_STORAGE_ANONYMOUS_LOAN = 'ANONYMOUS_LOAN_ID';\nconst EMPTY_STRUCTURE = {\n  ownFunds: [],\n  loanTranches: []\n};\nconst LOAN_CATEGORIES = {\n  STANDARD: 'STANDARD',\n  PREMIUM: 'PREMIUM'\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"loans.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/loans/loans.js                                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet LoanSchema;\nmodule.link(\"./schemas/LoanSchema\", {\n  default(v) {\n    LoanSchema = v;\n  }\n\n}, 1);\nlet LOANS_COLLECTION;\nmodule.link(\"./loanConstants\", {\n  LOANS_COLLECTION(v) {\n    LOANS_COLLECTION = v;\n  }\n\n}, 2);\nconst Loans = new Mongo.Collection(LOANS_COLLECTION); // Prevent all client side modifications of mongoDB\n\nLoans.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true\n});\nLoans.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false\n});\nLoans.attachSchema(LoanSchema);\nmodule.exportDefault(Loans);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methodDefinitions.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/loans/methodDefinitions.js                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  loanInsert: () => loanInsert,\n  loanUpdate: () => loanUpdate,\n  loanDelete: () => loanDelete,\n  requestLoanVerification: () => requestLoanVerification,\n  confirmClosing: () => confirmClosing,\n  pushLoanValue: () => pushLoanValue,\n  popLoanValue: () => popLoanValue,\n  adminLoanInsert: () => adminLoanInsert,\n  userLoanInsert: () => userLoanInsert,\n  addNewStructure: () => addNewStructure,\n  removeStructure: () => removeStructure,\n  updateStructure: () => updateStructure,\n  selectStructure: () => selectStructure,\n  duplicateStructure: () => duplicateStructure,\n  assignLoanToUser: () => assignLoanToUser,\n  switchBorrower: () => switchBorrower,\n  sendNegativeFeedbackToAllLenders: () => sendNegativeFeedbackToAllLenders,\n  loanUpdatePromotionInvitedBy: () => loanUpdatePromotionInvitedBy,\n  reuseProperty: () => reuseProperty,\n  setMaxPropertyValueWithoutBorrowRatio: () => setMaxPropertyValueWithoutBorrowRatio,\n  addNewMaxStructure: () => addNewMaxStructure,\n  setLoanStep: () => setLoanStep,\n  loanShareSolvency: () => loanShareSolvency,\n  anonymousLoanInsert: () => anonymousLoanInsert,\n  loanInsertBorrowers: () => loanInsertBorrowers,\n  adminLoanReset: () => adminLoanReset,\n  loanLinkPromotion: () => loanLinkPromotion,\n  loanUnlinkPromotion: () => loanUnlinkPromotion,\n  loanSetCreatedAtActivityDescription: () => loanSetCreatedAtActivityDescription,\n  loanSetStatus: () => loanSetStatus\n});\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet Method;\nmodule.link(\"../methods/methods\", {\n  Method(v) {\n    Method = v;\n  }\n\n}, 1);\nconst loanInsert = new Method({\n  name: 'loanInsert',\n  params: {\n    loan: Object,\n    userId: Match.Optional(String)\n  }\n});\nconst loanUpdate = new Method({\n  name: 'loanUpdate',\n  params: {\n    loanId: String,\n    object: Object\n  }\n});\nconst loanDelete = new Method({\n  name: 'loanDelete',\n  params: {\n    loanId: String\n  }\n});\nconst requestLoanVerification = new Method({\n  name: 'requestLoanVerification',\n  params: {\n    loanId: String\n  }\n});\nconst confirmClosing = new Method({\n  name: 'confirmClosing',\n  params: {\n    loanId: String,\n    object: Object\n  }\n});\nconst pushLoanValue = new Method({\n  name: 'pushLoanValue',\n  params: {\n    loanId: String,\n    object: Object\n  }\n});\nconst popLoanValue = new Method({\n  name: 'popLoanValue',\n  params: {\n    loanId: String,\n    object: Object\n  }\n});\nconst adminLoanInsert = new Method({\n  name: 'adminLoanInsert',\n  params: {\n    userId: Match.Optional(String)\n  }\n});\nconst userLoanInsert = new Method({\n  name: 'userLoanInsert',\n  params: {\n    proPropertyId: Match.Maybe(String),\n    test: Match.Optional(Boolean)\n  }\n});\nconst addNewStructure = new Method({\n  name: 'addNewStructure',\n  params: {\n    loanId: String\n  }\n});\nconst removeStructure = new Method({\n  name: 'removeStructure',\n  params: {\n    loanId: String,\n    structureId: String\n  }\n});\nconst updateStructure = new Method({\n  name: 'updateStructure',\n  params: {\n    loanId: String,\n    structureId: String,\n    structure: Object\n  }\n});\nconst selectStructure = new Method({\n  name: 'selectStructure',\n  params: {\n    loanId: String,\n    structureId: String\n  }\n});\nconst duplicateStructure = new Method({\n  name: 'duplicateStructure',\n  params: {\n    loanId: String,\n    structureId: String\n  }\n});\nconst assignLoanToUser = new Method({\n  name: 'assignLoanToUser',\n  params: {\n    loanId: String,\n    userId: Match.OneOf(String, null)\n  }\n});\nconst switchBorrower = new Method({\n  name: 'switchBorrower',\n  params: {\n    loanId: String,\n    borrowerId: String,\n    oldBorrowerId: String\n  }\n});\nconst sendNegativeFeedbackToAllLenders = new Method({\n  name: 'sendNegativeFeedbackToAllLenders',\n  params: {\n    loanId: String\n  }\n});\nconst loanUpdatePromotionInvitedBy = new Method({\n  name: 'loanUpdatePromotionInvitedBy',\n  params: {\n    loanId: String,\n    promotionId: String,\n    invitedBy: String\n  }\n});\nconst reuseProperty = new Method({\n  name: 'reuseProperty',\n  params: {\n    loanId: String,\n    propertyId: String\n  }\n});\nconst setMaxPropertyValueWithoutBorrowRatio = new Method({\n  name: 'setMaxPropertyValueWithoutBorrowRatio',\n  params: {\n    loanId: String,\n    canton: String\n  }\n});\nconst addNewMaxStructure = new Method({\n  name: 'addNewMaxStructure',\n  params: {\n    loanId: String,\n    residenceType: Match.Maybe(String),\n    canton: String\n  }\n});\nconst setLoanStep = new Method({\n  name: 'setLoanStep',\n  params: {\n    loanId: String,\n    nextStep: String\n  }\n});\nconst loanShareSolvency = new Method({\n  name: 'loanShareSolvency',\n  params: {\n    loanId: String,\n    shareSolvency: Boolean\n  }\n});\nconst anonymousLoanInsert = new Method({\n  name: 'anonymousLoanInsert',\n  params: {\n    trackingId: String,\n    proPropertyId: Match.Maybe(String),\n    referralId: Match.Maybe(String),\n    existingAnonymousLoanId: Match.Maybe(Match.OneOf(String, null))\n  }\n});\nconst loanInsertBorrowers = new Method({\n  name: 'loanInsertBorrowers',\n  params: {\n    loanId: String,\n    amount: Number\n  }\n});\nconst adminLoanReset = new Method({\n  name: 'adminLoanReset',\n  params: {\n    loanId: String\n  }\n});\nconst loanLinkPromotion = new Method({\n  name: 'loanLinkPromotion',\n  params: {\n    promotionId: String,\n    loanId: String\n  }\n});\nconst loanUnlinkPromotion = new Method({\n  name: 'loanUnlinkPromotion',\n  params: {\n    promotionId: String,\n    loanId: String\n  }\n});\nconst loanSetCreatedAtActivityDescription = new Method({\n  name: 'loanSetCreatedAtActivityDescription',\n  params: {\n    loanId: String,\n    description: String\n  }\n});\nconst loanSetStatus = new Method({\n  name: 'loanSetStatus',\n  params: {\n    loanId: String,\n    status: String\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"queries.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/loans/queries.js                                                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  adminLoans: () => adminLoans,\n  anonymousLoan: () => anonymousLoan,\n  fullLoan: () => fullLoan,\n  loanSearch: () => loanSearch,\n  proLoans: () => proLoans,\n  proPromotionLoans: () => proPromotionLoans,\n  proPropertyLoans: () => proPropertyLoans,\n  proReferredByLoans: () => proReferredByLoans,\n  userLoans: () => userLoans\n});\nlet omit;\nmodule.link(\"lodash/omit\", {\n  default(v) {\n    omit = v;\n  }\n\n}, 0);\nlet Loans;\nmodule.link(\".\", {\n  default(v) {\n    Loans = v;\n  }\n\n}, 1);\nlet LOAN_QUERIES;\nmodule.link(\"./loanConstants\", {\n  LOAN_QUERIES(v) {\n    LOAN_QUERIES = v;\n  }\n\n}, 2);\nlet adminLoan, userLoan;\nmodule.link(\"../fragments\", {\n  adminLoan(v) {\n    adminLoan = v;\n  },\n\n  userLoan(v) {\n    userLoan = v;\n  }\n\n}, 3);\nconst adminLoans = Loans.createQuery(LOAN_QUERIES.ADMIN_LOANS, (0, _objectSpread2.default)({}, adminLoan({\n  withSort: true\n}), {\n  $options: {\n    sort: {\n      createdAt: -1\n    }\n  }\n}), {\n  scoped: true\n});\nconst anonymousLoan = Loans.createQuery(LOAN_QUERIES.ANONYMOUS_LOAN, (0, _objectSpread2.default)({}, omit(userLoan(), ['maxPropertyValue']), {\n  maxPropertyValueExists: 1\n}), {\n  scoped: true\n});\nconst fullLoan = Loans.createQuery(LOAN_QUERIES.FULL_LOAN, (0, _objectSpread2.default)({}, adminLoan({\n  withSort: true\n})));\nconst loanSearch = Loans.createQuery(LOAN_QUERIES.LOAN_SEARCH, {\n  name: 1,\n  createdAt: 1,\n  updatedAt: 1,\n  step: 1,\n  $options: {\n    sort: {\n      createdAt: -1\n    },\n    limit: 5\n  }\n});\nconst proLoans = Loans.createQuery(LOAN_QUERIES.PRO_LOANS, () => {});\nconst proPromotionLoans = Loans.createQuery(LOAN_QUERIES.PRO_PROMOTION_LOANS, () => {});\nconst proPropertyLoans = Loans.createQuery(LOAN_QUERIES.PRO_PROPERTY_LOANS, () => {});\nconst proReferredByLoans = Loans.createQuery(LOAN_QUERIES.PRO_REFERRED_BY_LOANS, () => {});\nconst userLoans = Loans.createQuery(LOAN_QUERIES.USER_LOANS, (0, _objectSpread2.default)({}, userLoan({\n  withSort: true,\n  withFilteredPromotions: true\n}), {\n  maxPropertyValueExists: 1\n}), {\n  scoped: true\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"reducers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/loans/reducers.js                                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet omit;\nmodule.link(\"lodash/omit\", {\n  default(v) {\n    omit = v;\n  }\n\n}, 0);\nlet Loans;\nmodule.link(\".\", {\n  default(v) {\n    Loans = v;\n  }\n\n}, 1);\nlet formatLoanWithStructure, nextDueTaskReducer;\nmodule.link(\"../../utils/loanFunctions\", {\n  formatLoanWithStructure(v) {\n    formatLoanWithStructure = v;\n  },\n\n  nextDueTaskReducer(v) {\n    nextDueTaskReducer = v;\n  }\n\n}, 2);\nlet STEPS, STEP_ORDER;\nmodule.link(\"./loanConstants\", {\n  STEPS(v) {\n    STEPS = v;\n  },\n\n  STEP_ORDER(v) {\n    STEP_ORDER = v;\n  }\n\n}, 3);\nlet fullOffer, userProperty, loanPromotionOption;\nmodule.link(\"../fragments\", {\n  fullOffer(v) {\n    fullOffer = v;\n  },\n\n  userProperty(v) {\n    userProperty = v;\n  },\n\n  loanPromotionOption(v) {\n    loanPromotionOption = v;\n  }\n\n}, 4);\nlet PROPERTY_CATEGORY;\nmodule.link(\"../properties/propertyConstants\", {\n  PROPERTY_CATEGORY(v) {\n    PROPERTY_CATEGORY = v;\n  }\n\n}, 5);\nLoans.addReducers({\n  structure: {\n    body: {\n      selectedStructure: 1,\n      structures: 1,\n      properties: omit(userProperty(), ['loans', '$options', 'user']),\n      offers: 1,\n      promotionOptions: loanPromotionOption()\n    },\n    reduce: formatLoanWithStructure\n  },\n  offers: {\n    body: {\n      lenders: {\n        offers: omit(fullOffer(), ['user'])\n      }\n    },\n    reduce: ({\n      lenders = []\n    }) => lenders.reduce((allOffers, {\n      offers = []\n    }) => [...allOffers, ...offers], [])\n  },\n  hasPromotion: {\n    body: {\n      promotions: {\n        _id: 1\n      }\n    },\n    reduce: ({\n      promotions\n    }) => !!(promotions && promotions.length > 0)\n  },\n  enableOffers: {\n    body: {\n      step: 1\n    },\n    reduce: ({\n      step\n    }) => step && STEP_ORDER.indexOf(step) >= STEP_ORDER.indexOf(STEPS.OFFERS)\n  },\n  hasProProperty: {\n    body: {\n      properties: {\n        category: 1\n      }\n    },\n    reduce: ({\n      properties = []\n    }) => properties.some(({\n      category\n    }) => category === PROPERTY_CATEGORY.PRO)\n  },\n  maxPropertyValueExists: {\n    body: {\n      maxPropertyValue: {\n        date: 1\n      },\n      user: {\n        _id: 1\n      }\n    },\n    reduce: ({\n      maxPropertyValue,\n      user\n    }) => !!(!user && maxPropertyValue && maxPropertyValue.date)\n  },\n  nextDueTask: {\n    body: {\n      tasksCache: 1\n    },\n    reduce: nextDueTaskReducer\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"lots\":{\"schemas\":{\"LotSchema.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/lots/schemas/LotSchema.js                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 0);\nlet LOT_TYPES;\nmodule.link(\"../lotConstants\", {\n  LOT_TYPES(v) {\n    LOT_TYPES = v;\n  }\n\n}, 1);\nlet createdAt, updatedAt, moneyField;\nmodule.link(\"../../helpers/sharedSchemas\", {\n  createdAt(v) {\n    createdAt = v;\n  },\n\n  updatedAt(v) {\n    updatedAt = v;\n  },\n\n  moneyField(v) {\n    moneyField = v;\n  }\n\n}, 2);\nconst LotSchema = new SimpleSchema({\n  createdAt,\n  updatedAt,\n  name: String,\n  type: {\n    type: String,\n    allowedValues: Object.values(LOT_TYPES),\n    uniforms: {\n      displayEmpty: false\n    }\n  },\n  description: {\n    type: String,\n    optional: true\n  },\n  value: (0, _objectSpread2.default)({}, moneyField, {\n    optional: false\n  })\n});\nmodule.exportDefault(LotSchema);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"LotService.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/lots/server/LotService.js                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nmodule.export({\n  LotService: () => LotService\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet CollectionService;\nmodule.link(\"../../helpers/CollectionService\", {\n  default(v) {\n    CollectionService = v;\n  }\n\n}, 1);\nlet PromotionLotService;\nmodule.link(\"../../promotionLots/server/PromotionLotService\", {\n  default(v) {\n    PromotionLotService = v;\n  }\n\n}, 2);\nlet LOT_ERRORS, ERROR_CODES;\nmodule.link(\"../../errors\", {\n  LOT_ERRORS(v) {\n    LOT_ERRORS = v;\n  },\n\n  ERROR_CODES(v) {\n    ERROR_CODES = v;\n  }\n\n}, 3);\nlet PROMOTION_LOT_STATUS;\nmodule.link(\"../../promotionLots/promotionLotConstants\", {\n  PROMOTION_LOT_STATUS(v) {\n    PROMOTION_LOT_STATUS = v;\n  }\n\n}, 4);\nlet Lots;\nmodule.link(\"../lots\", {\n  default(v) {\n    Lots = v;\n  }\n\n}, 5);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass LotService extends CollectionService {\n  constructor() {\n    super(Lots);\n\n    _defineProperty(this, \"update\", (_ref) => {\n      let {\n        lotId,\n        object: {\n          promotionLotId\n        }\n      } = _ref,\n          rest = (0, _objectWithoutProperties2.default)(_ref.object, [\"promotionLotId\"]);\n      const currentPromotionLot = PromotionLotService.findOne({\n        'lotLinks._id': lotId\n      });\n      const currentPromotionLotId = currentPromotionLot ? currentPromotionLot._id : null;\n      const currentPromotionLotStatus = currentPromotionLot ? currentPromotionLot.status : null;\n\n      if (currentPromotionLotStatus && currentPromotionLotStatus !== PROMOTION_LOT_STATUS.AVAILABLE) {\n        throw new Meteor.Error(ERROR_CODES.FORBIDDEN, LOT_ERRORS.PROMOTION_LOT_BOOKED_OR_SOLD);\n      }\n\n      if (currentPromotionLotId !== promotionLotId) {\n        if (currentPromotionLotId !== null && promotionLotId !== undefined) {\n          PromotionLotService.removeLotLink({\n            promotionLotId: currentPromotionLotId,\n            lotId\n          });\n        }\n\n        if (promotionLotId) {\n          PromotionLotService.addLotToPromotionLot({\n            promotionLotId,\n            lotId\n          });\n        }\n      }\n\n      return this._update({\n        id: lotId,\n        object: rest\n      });\n    });\n  }\n\n}\n\nmodule.exportDefault(new LotService());\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/lots/server/methods.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 0);\nlet PromotionService;\nmodule.link(\"../../promotions/server/PromotionService\", {\n  default(v) {\n    PromotionService = v;\n  }\n\n}, 1);\nlet lotInsert, lotUpdate, lotRemove;\nmodule.link(\"../methodDefinitions\", {\n  lotInsert(v) {\n    lotInsert = v;\n  },\n\n  lotUpdate(v) {\n    lotUpdate = v;\n  },\n\n  lotRemove(v) {\n    lotRemove = v;\n  }\n\n}, 2);\nlet LotService;\nmodule.link(\"./LotService\", {\n  default(v) {\n    LotService = v;\n  }\n\n}, 3);\nlotInsert.setHandler(({\n  userId\n}, {\n  promotionId,\n  lot\n}) => {\n  SecurityService.promotions.isAllowedToAddLots({\n    promotionId,\n    userId\n  });\n  const lotId = LotService.insert(lot);\n  PromotionService.addLink({\n    id: promotionId,\n    linkName: 'lots',\n    linkId: lotId\n  });\n  return lotId;\n});\nlotUpdate.setHandler(({\n  userId\n}, params) => {\n  const {\n    lotId\n  } = params;\n  SecurityService.promotions.isAllowedToModifyAdditionalLot({\n    lotId,\n    userId\n  });\n  return LotService.update(params);\n});\nlotRemove.setHandler(({\n  userId\n}, {\n  lotId\n}) => {\n  SecurityService.promotions.isAllowedToRemoveAdditionalLot({\n    lotId,\n    userId\n  });\n  return LotService.remove(lotId);\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"serverReducers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/lots/server/serverReducers.js                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet Lots;\nmodule.link(\"..\", {\n  default(v) {\n    Lots = v;\n  }\n\n}, 0);\nlet assigneeReducer;\nmodule.link(\"../../reducers/assigneeReducer\", {\n  default(v) {\n    assigneeReducer = v;\n  }\n\n}, 1);\nLots.addReducers((0, _objectSpread2.default)({}, assigneeReducer({\n  promotions: {\n    userLinks: 1\n  }\n}, ({\n  promotions\n}) => !!(promotions && promotions.length > 0 && promotions[0].userLinks && promotions[0].userLinks.length > 0) && promotions[0].userLinks[0]._id)));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/lots/index.js                                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./methodDefinitions\", {\n  \"*\": \"*\"\n}, 0);\nmodule.link(\"./lots\", {\n  default: \"default\"\n}, 1);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"links.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/lots/links.js                                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Lots;\nmodule.link(\".\", {\n  default(v) {\n    Lots = v;\n  }\n\n}, 0);\nlet Promotions, PromotionLots, PromotionOptions;\nmodule.link(\"..\", {\n  Promotions(v) {\n    Promotions = v;\n  },\n\n  PromotionLots(v) {\n    PromotionLots = v;\n  },\n\n  PromotionOptions(v) {\n    PromotionOptions = v;\n  }\n\n}, 1);\nLots.addLinks({\n  promotions: {\n    collection: Promotions,\n    inversedBy: 'lots'\n  },\n  promotionLots: {\n    collection: PromotionLots,\n    inversedBy: 'lots'\n  },\n  promotionOptions: {\n    collection: PromotionOptions,\n    inversedBy: 'lots'\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lotConstants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/lots/lotConstants.js                                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  LOTS_COLLECTION: () => LOTS_COLLECTION,\n  LOT_TYPES: () => LOT_TYPES\n});\nconst LOTS_COLLECTION = 'lots';\nconst LOT_TYPES = {\n  BASEMENT: 'BASEMENT',\n  PARKING_MOTORBIKE: 'PARKING_MOTORBIKE',\n  PARKING_CAR: 'PARKING_CAR',\n  PARKING_IN_A_ROW: 'PARKING_IN_A_ROW',\n  PARKING_DISABLED: 'PARKING_DISABLED'\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lots.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/lots/lots.js                                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet LotSchema;\nmodule.link(\"./schemas/LotSchema\", {\n  default(v) {\n    LotSchema = v;\n  }\n\n}, 1);\nlet LOTS_COLLECTION;\nmodule.link(\"./lotConstants\", {\n  LOTS_COLLECTION(v) {\n    LOTS_COLLECTION = v;\n  }\n\n}, 2);\nconst Lots = new Mongo.Collection(LOTS_COLLECTION);\nLots.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true\n});\nLots.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false\n});\nLots.attachSchema(LotSchema);\nmodule.exportDefault(Lots);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methodDefinitions.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/lots/methodDefinitions.js                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  lotInsert: () => lotInsert,\n  lotUpdate: () => lotUpdate,\n  lotRemove: () => lotRemove\n});\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet Method;\nmodule.link(\"../methods/methods\", {\n  Method(v) {\n    Method = v;\n  }\n\n}, 1);\nconst lotInsert = new Method({\n  name: 'lotInsert',\n  params: {\n    promotionId: String,\n    lot: Object\n  }\n});\nconst lotUpdate = new Method({\n  name: 'lotUpdate',\n  params: {\n    lotId: String,\n    object: Object\n  }\n});\nconst lotRemove = new Method({\n  name: 'lotRemove',\n  params: {\n    lotId: String\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"reducers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/lots/reducers.js                                                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Lots;\nmodule.link(\".\", {\n  default(v) {\n    Lots = v;\n  }\n\n}, 0);\nLots.addReducers({\n  status: {\n    body: {\n      promotionLots: {\n        status: 1,\n        value: 1\n      }\n    },\n    reduce: ({\n      promotionLots\n    }) => promotionLots && promotionLots[0] && promotionLots[0].status\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"methods\":{\"server\":{\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/methods/server/index.js                                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./serverMethodsConfig\");\nmodule.link(\"./registerServerMethods\");\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/methods/server/methods.js                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nlet LOANS_COLLECTION;\nmodule.link(\"../../constants\", {\n  LOANS_COLLECTION(v) {\n    LOANS_COLLECTION = v;\n  }\n\n}, 2);\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 3);\nlet Services;\nmodule.link(\"../../server\", {\n  Services(v) {\n    Services = v;\n  }\n\n}, 4);\nlet LoanService;\nmodule.link(\"../../loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 5);\nlet BorrowerService;\nmodule.link(\"../../borrowers/server/BorrowerService\", {\n  default(v) {\n    BorrowerService = v;\n  }\n\n}, 6);\nlet PropertyService;\nmodule.link(\"../../properties/server/PropertyService\", {\n  default(v) {\n    PropertyService = v;\n  }\n\n}, 7);\nlet getMixpanelAuthorization, getServerTime, downloadPDF, addBorrower, setUserToLoan, removeBorrower, submitContactForm, addUserToDoc, throwDevError, setAdditionalDoc, removeAdditionalDoc, migrateToLatest, updateDocument, updateDocumentUnset, generateScenario;\nmodule.link(\"../methodDefinitions\", {\n  getMixpanelAuthorization(v) {\n    getMixpanelAuthorization = v;\n  },\n\n  getServerTime(v) {\n    getServerTime = v;\n  },\n\n  downloadPDF(v) {\n    downloadPDF = v;\n  },\n\n  addBorrower(v) {\n    addBorrower = v;\n  },\n\n  setUserToLoan(v) {\n    setUserToLoan = v;\n  },\n\n  removeBorrower(v) {\n    removeBorrower = v;\n  },\n\n  submitContactForm(v) {\n    submitContactForm = v;\n  },\n\n  addUserToDoc(v) {\n    addUserToDoc = v;\n  },\n\n  throwDevError(v) {\n    throwDevError = v;\n  },\n\n  setAdditionalDoc(v) {\n    setAdditionalDoc = v;\n  },\n\n  removeAdditionalDoc(v) {\n    removeAdditionalDoc = v;\n  },\n\n  migrateToLatest(v) {\n    migrateToLatest = v;\n  },\n\n  updateDocument(v) {\n    updateDocument = v;\n  },\n\n  updateDocumentUnset(v) {\n    updateDocumentUnset = v;\n  },\n\n  generateScenario(v) {\n    generateScenario = v;\n  }\n\n}, 8);\nlet generator;\nmodule.link(\"../../factories\", {\n  default(v) {\n    generator = v;\n  }\n\n}, 9);\nlet migrate;\nmodule.link(\"../../migrations/server\", {\n  migrate(v) {\n    migrate = v;\n  }\n\n}, 10);\ngetMixpanelAuthorization.setHandler(() => {\n  SecurityService.checkCurrentUserIsAdmin();\n\n  const btoa = require('btoa');\n\n  const {\n    API_KEY,\n    API_SECRET\n  } = Meteor.settings.mixpanel;\n  return `Basic ${btoa(`${API_SECRET}:${API_KEY}`)}`;\n});\ngetServerTime.setHandler(() => new Date());\ndownloadPDF.setHandler(() => {// TODO\n});\naddBorrower.setHandler((context, {\n  loanId,\n  borrower\n}) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  const loan = LoanService.get(loanId); // A loan can't have more than 2 borrowers at the moment\n\n  if (loan.borrowerIds.length >= 2) {\n    throw new Meteor.Error('Vous ne pouvez pas avoir plus de 2 emprunteurs');\n  }\n\n  const newBorrowerId = BorrowerService.insert({\n    borrower,\n    userId: loan.userId\n  });\n  return LoanService.pushValue({\n    loanId,\n    object: {\n      borrowerIds: newBorrowerId\n    }\n  });\n});\nsetUserToLoan.setHandler((context, {\n  loanId\n}) => {\n  SecurityService.checkLoggedIn();\n  const loan = LoanService.get(loanId);\n  const {\n    borrowerIds,\n    propertyId\n  } = loan;\n\n  if (loan.userId) {\n    throw new Meteor.Error('loan-already-owned');\n  }\n\n  const currentUserId = Meteor.userId();\n  LoanService.update({\n    loanId,\n    object: {\n      userId: currentUserId\n    }\n  });\n  borrowerIds.forEach(borrowerId => {\n    BorrowerService.update({\n      borrowerId,\n      object: {\n        userId: currentUserId\n      }\n    });\n  });\n  PropertyService.update({\n    propertyId,\n    object: {\n      userId: currentUserId\n    }\n  });\n});\nremoveBorrower.setHandler((context, {\n  loanId,\n  borrowerId\n}) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  SecurityService.borrowers.isAllowedToUpdate(borrowerId);\n  const loan = LoanService.get(loanId); // A loan has to have at least 1 borrower\n\n  if (loan.borrowerIds.length <= 1) {\n    return false;\n  }\n\n  BorrowerService.remove({\n    borrowerId\n  });\n  return LoanService.pullValue({\n    loanId,\n    object: {\n      borrowerIds: borrowerId\n    }\n  });\n}); // This method needs to exist as its being listened to in EmailListeners\n\nsubmitContactForm.setHandler(() => null);\naddUserToDoc.setHandler(({\n  userId\n}, {\n  docId,\n  collection,\n  options,\n  userId: newUserId\n}) => {\n  const doc = Mongo.Collection.get(collection).findOne(docId);\n\n  try {\n    SecurityService.checkUserIsAdmin(userId);\n  } catch (error) {\n    SecurityService.checkOwnership(doc);\n  }\n\n  Mongo.Collection.get(collection).update(docId, {\n    userLinks: {\n      $push: (0, _objectSpread2.default)({\n        _id: newUserId\n      }, options)\n    }\n  });\n});\nthrowDevError.setHandler((_, {\n  promise,\n  promiseNoReturn\n}) => {\n  console.log('Throwing dev error..');\n\n  if (promise) {\n    return new Promise((resolve, reject) => {\n      reject(new Meteor.Error(400, 'Dev promise error!'));\n    });\n  }\n\n  if (promiseNoReturn) {\n    new Promise((resolve, reject) => {\n      reject(new Meteor.Error(400, 'Dev promise error!'));\n    });\n    return;\n  }\n\n  throw new Meteor.Error(400, 'Dev error!');\n});\nsetAdditionalDoc.setHandler((context, _ref) => {\n  let {\n    collection\n  } = _ref,\n      rest = (0, _objectWithoutProperties2.default)(_ref, [\"collection\"]);\n  SecurityService.checkCurrentUserIsAdmin();\n  return Services[collection].setAdditionalDoc(rest);\n});\nremoveAdditionalDoc.setHandler((context, _ref2) => {\n  let {\n    collection\n  } = _ref2,\n      rest = (0, _objectWithoutProperties2.default)(_ref2, [\"collection\"]);\n  SecurityService.checkCurrentUserIsAdmin();\n  return Services[collection].removeAdditionalDoc(rest);\n});\nmigrateToLatest.setHandler(({\n  userId\n}) => {\n  SecurityService.checkCurrentUserIsDev();\n  migrate();\n});\nupdateDocument.setHandler(({\n  userId\n}, {\n  collection,\n  docId,\n  object\n}) => {\n  const service = Services[collection];\n\n  try {\n    SecurityService.checkUserIsAdmin(userId);\n  } catch (error) {\n    if (collection === LOANS_COLLECTION) {\n      SecurityService.loans.isAllowedToUpdate(docId);\n    } else {\n      const doc = service.findOne(docId);\n      SecurityService.checkOwnership(doc);\n    }\n  }\n\n  return service._update({\n    id: docId,\n    object\n  });\n});\nupdateDocumentUnset.setHandler(({\n  userId\n}, {\n  collection,\n  docId,\n  object\n}) => {\n  const service = Services[collection];\n  SecurityService.checkUserIsDev(userId);\n  return service._update({\n    id: docId,\n    object,\n    operator: '$unset'\n  });\n});\ngenerateScenario.setHandler(({\n  userId\n}, {\n  scenario\n}) => {\n  if (!Meteor.isTest) {\n    SecurityService.checkUserIsAdmin(userId);\n  }\n\n  return generator(scenario);\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"registerServerMethods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/methods/server/registerServerMethods.js                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"../../activities/server/methods\");\nmodule.link(\"../../analytics/server/methods\");\nmodule.link(\"../../borrowers/server/methods\");\nmodule.link(\"../../contacts/server/methods\");\nmodule.link(\"../../email/server/methods\");\nmodule.link(\"../../files/server/methods\");\nmodule.link(\"../../impersonation/server/methods\");\nmodule.link(\"../../interestRates/server/methods\");\nmodule.link(\"../../irs10y/server/methods\");\nmodule.link(\"../../lenderRules/server/methods\");\nmodule.link(\"../../lenders/server/methods\");\nmodule.link(\"../../loans/server/methods\");\nmodule.link(\"../../lots/server/methods\");\nmodule.link(\"../../mortgageNotes/server/methods\");\nmodule.link(\"../../notifications/server/methods\");\nmodule.link(\"../../offers/server/methods\");\nmodule.link(\"../../organisations/server/methods\");\nmodule.link(\"../../pdf/server/methods\");\nmodule.link(\"../../promotionLots/server/methods\");\nmodule.link(\"../../promotionOptions/server/methods\");\nmodule.link(\"../../promotions/server/methods\");\nmodule.link(\"../../properties/server/methods\");\nmodule.link(\"../../revenues/server/methods\");\nmodule.link(\"../../slack/server/methods\");\nmodule.link(\"../../tasks/server/methods\");\nmodule.link(\"../../users/server/methods\");\nmodule.link(\"./methods\");\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"serverMethodsConfig.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/methods/server/serverMethodsConfig.js                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet SlackService;\nmodule.link(\"../../slack/server/SlackService\", {\n  default(v) {\n    SlackService = v;\n  }\n\n}, 1);\nlet ServerEventService;\nmodule.link(\"../../events/server/ServerEventService\", {\n  default(v) {\n    ServerEventService = v;\n  }\n\n}, 2);\nlet Method;\nmodule.link(\"../methods\", {\n  Method(v) {\n    Method = v;\n  }\n\n}, 3);\n\nconst logMethod = ({\n  context,\n  config,\n  params,\n  result,\n  error\n}) => {\n  if (Meteor.isProduction || Meteor.isStaging || Meteor.isDevEnvironment) {\n    console.log('---------------------- METHOD CALL ----------------------');\n    console.log(`METHOD Method ${config.name} called`);\n    console.log('METHOD Params:', params);\n    console.log('METHOD userId:', context.userId);\n    console.log('METHOD result:', result);\n    console.log('METHOD error:', error);\n  }\n};\n\nMethod.addBeforeExecution(({\n  context,\n  config,\n  params\n}) => {\n  ServerEventService.emitBeforeMethod(config, {\n    context,\n    config,\n    params\n  });\n});\nMethod.addAfterExecution(({\n  context,\n  config,\n  params,\n  result,\n  error\n}) => {\n  logMethod({\n    context,\n    config,\n    params,\n    result,\n    error\n  });\n\n  if (error) {\n    SlackService.sendError({\n      error,\n      additionalData: [`Server method error in method: \"${config.name}\"`, {\n        name: 'context',\n        data: context\n      }, {\n        name: 'params',\n        data: params\n      }],\n      userId: context.userId\n    });\n  }\n\n  if (!error) {\n    console.log('emit after method');\n    ServerEventService.emitAfterMethod(config, {\n      context,\n      config,\n      params,\n      result,\n      error\n    });\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"clientQueryManager.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/methods/clientQueryManager.js                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  addQueryToRefetch: () => addQueryToRefetch,\n  removeQueryToRefetch: () => removeQueryToRefetch,\n  refetchQuery: () => refetchQuery,\n  refetchQueries: () => refetchQueries\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet ClientEventService;\nmodule.link(\"../events/ClientEventService\", {\n  default(v) {\n    ClientEventService = v;\n  }\n\n}, 1);\n\nconst isActive = () => !!global.window;\n\nconst init = () => {\n  if (isActive()) {\n    window.activeQueries = {};\n  }\n};\n\ninit();\n\nconst addQuery = (queryName, type) => {\n  // Add support for passing method config objects\n  if (typeof type === 'object') {\n    window.activeQueries[type.config.name] = [...(window.activeQueries[type.config.name] || []), queryName];\n  } else {\n    window.activeQueries[type] = [...(window.activeQueries[type] || []), queryName];\n  }\n};\n\nconst addQueryToRefetch = (queryName, type) => {\n  if (isActive()) {\n    if (!type) {\n      return;\n    }\n\n    if (Array.isArray(type)) {\n      type.forEach(t => {\n        addQuery(queryName, t);\n      });\n    } else {\n      addQuery(queryName, type);\n    }\n  }\n};\n\nconst removeQueryToRefetch = queryName => {\n  if (isActive()) {\n    Object.keys(window.activeQueries).forEach(type => {\n      if (Array.isArray(window.activeQueries[type])) {\n        window.activeQueries[type] = window.activeQueries[type].filter(query => query !== queryName); // Clean up this particular refetch key if there is no query in it anymore\n\n        if (window.activeQueries[type].length === 0) {\n          window.activeQueries[type] = undefined;\n        }\n      }\n    });\n  }\n};\n\nconst refetchQuery = query => ClientEventService.emit(query);\n\nconst refetchQueries = methodName => {\n  if (isActive()) {\n    if (window.activeQueries.all) {\n      window.activeQueries.all.forEach(refetchQuery);\n    }\n\n    if (window.activeQueries[methodName]) {\n      window.activeQueries[methodName].forEach(refetchQuery);\n    }\n  }\n};\n\nif (Meteor.isAppTest && global.window) {\n  global.window.refetchQueries = refetchQueries;\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/methods/index.js                                                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./registerMethodDefinitions\", {\n  \"*\": \"*\"\n}, 0);\nmodule.link(\"./methods\", {\n  \"*\": \"*\"\n}, 1);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methodDefinitions.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/methods/methodDefinitions.js                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  getMixpanelAuthorization: () => getMixpanelAuthorization,\n  getServerTime: () => getServerTime,\n  downloadPDF: () => downloadPDF,\n  addBorrower: () => addBorrower,\n  setUserToLoan: () => setUserToLoan,\n  removeBorrower: () => removeBorrower,\n  submitContactForm: () => submitContactForm,\n  addUserToDoc: () => addUserToDoc,\n  throwDevError: () => throwDevError,\n  setAdditionalDoc: () => setAdditionalDoc,\n  removeAdditionalDoc: () => removeAdditionalDoc,\n  migrateToLatest: () => migrateToLatest,\n  updateDocument: () => updateDocument,\n  updateDocumentUnset: () => updateDocumentUnset,\n  generateScenario: () => generateScenario\n});\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet Method;\nmodule.link(\"./methods\", {\n  Method(v) {\n    Method = v;\n  }\n\n}, 1);\nconst getMixpanelAuthorization = new Method({\n  name: 'getMixpanelAuthorization'\n});\nconst getServerTime = new Method({\n  name: 'getServerTime'\n});\nconst downloadPDF = new Method({\n  name: 'downloadPDF',\n  params: {\n    loanId: String,\n    type: String\n  }\n});\nconst addBorrower = new Method({\n  name: 'addBorrower',\n  params: {\n    loanId: String,\n    borrower: Match.Optional(Object)\n  }\n});\nconst setUserToLoan = new Method({\n  name: 'setUserToLoan',\n  params: {\n    loanId: String\n  }\n});\nconst removeBorrower = new Method({\n  name: 'removeBorrower',\n  params: {\n    loanId: String,\n    borrowerId: String\n  }\n});\nconst submitContactForm = new Method({\n  name: 'submitContactForm',\n  params: {\n    name: String,\n    email: String,\n    phoneNumber: String,\n    details: Match.Optional(String)\n  },\n  rateLimit: {\n    global: {\n      limit: 1,\n      timeRange: 5000\n    }\n  }\n});\nconst addUserToDoc = new Method({\n  name: 'addUserToDoc',\n  params: {\n    docId: String,\n    collection: String,\n    options: Object,\n    userId: String\n  }\n});\nconst throwDevError = new Method({\n  name: 'throwDevError',\n  params: {\n    promise: Match.Maybe(Boolean),\n    promiseNoReturn: Match.Maybe(Boolean)\n  }\n});\nconst setAdditionalDoc = new Method({\n  name: 'setAdditionalDoc',\n  params: {\n    collection: String,\n    id: String,\n    additionalDocId: String,\n    requiredByAdmin: Boolean,\n    label: Match.Optional(String),\n    category: Match.Optional(String)\n  }\n});\nconst removeAdditionalDoc = new Method({\n  name: 'removeAdditionalDoc',\n  params: {\n    collection: String,\n    id: String,\n    additionalDocId: String\n  }\n});\nconst migrateToLatest = new Method({\n  name: 'migrateToLatest'\n});\nconst updateDocument = new Method({\n  name: 'updateDocument',\n  params: {\n    collection: String,\n    docId: String,\n    object: Object\n  }\n});\nconst updateDocumentUnset = new Method({\n  name: 'updateDocumentUnset',\n  params: {\n    collection: String,\n    docId: String,\n    object: Object\n  }\n});\nconst generateScenario = new Method({\n  name: 'generateScenario',\n  params: {\n    scenario: Object\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/methods/methods.js                                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  Method: () => Method\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Mutation;\nmodule.link(\"meteor/cultofcoders:mutations\", {\n  Mutation(v) {\n    Mutation = v;\n  }\n\n}, 1);\nlet Match, check;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  },\n\n  check(v) {\n    check = v;\n  }\n\n}, 2);\n\nif (Meteor.isTest) {\n  Mutation.isDebugEnabled = false;\n} else {\n  Mutation.isDebugEnabled = {\n    omit: ['analyticsPage', 'analyticsLogin']\n  };\n}\n\nclass Method extends Mutation {\n  run(callParams = {}, options = {}) {\n    const {\n      config\n    } = this;\n    let location;\n\n    if (Meteor.isClient && window && window.location) {\n      location = {\n        href: window.location.href,\n        host: window.location.host,\n        pathname: window.location.pathname\n      };\n    }\n\n    const aopData = {\n      config,\n      params: callParams\n    };\n    Mutation.callAOP.executeBefores(aopData);\n    this.callAOP.executeBefores(aopData);\n    const {\n      name,\n      params\n    } = config;\n    const additionalData = {\n      location\n    };\n    return new Promise((resolve, reject) => {\n      Meteor.apply(name, [callParams, additionalData], options, (error, result) => {\n        const aopData = {\n          config,\n          params: callParams,\n          result,\n          error\n        };\n        Mutation.callAOP.executeAfters(aopData);\n        this.callAOP.executeAfters(aopData);\n\n        if (error) {\n          reject(error);\n        } else {\n          resolve(result);\n        }\n      });\n    });\n  }\n\n  setHandler(fn) {\n    const {\n      config\n    } = this;\n    const {\n      name,\n      params\n    } = config;\n    const self = this;\n    Meteor.methods({\n      [name](params = {}, additionalData) {\n        check(additionalData, Object);\n        check(additionalData.location, Match.Maybe({\n          href: Match.Maybe(String),\n          host: Match.Maybe(String),\n          pathname: Match.Maybe(String)\n        }));\n\n        if (Meteor.isServer && additionalData.location) {\n          const {\n            setClientUrl\n          } = require(\"../../utils/server/getClientUrl\");\n\n          setClientUrl(additionalData.location);\n        }\n\n        if (config.validate) {\n          config.validate(params);\n        } else if (config.params) {\n          check(params, config.params);\n        }\n\n        let aopData = {\n          context: this,\n          config,\n          params\n        };\n        Mutation.executionAOP.executeBefores(aopData);\n        self.executionAOP.executeBefores(aopData);\n        let error;\n        let result;\n\n        try {\n          result = fn.call(null, this, params);\n        } catch (e) {\n          error = e;\n        }\n\n        aopData = {\n          context: this,\n          config,\n          params,\n          result,\n          error\n        };\n        Mutation.executionAOP.executeAfters(aopData);\n        self.executionAOP.executeAfters(aopData);\n\n        if (error) {\n          throw error;\n        }\n\n        return result;\n      }\n\n    });\n  }\n\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"registerMethodDefinitions.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/methods/registerMethodDefinitions.js                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"../borrowers/methodDefinitions\", {\n  \"*\": \"*\"\n}, 0);\nmodule.link(\"../contacts/methodDefinitions\", {\n  \"*\": \"*\"\n}, 1);\nmodule.link(\"../email/methodDefinitions\", {\n  \"*\": \"*\"\n}, 2);\nmodule.link(\"../files/methodDefinitions\", {\n  \"*\": \"*\"\n}, 3);\nmodule.link(\"../impersonation/methodDefinitions\", {\n  \"*\": \"*\"\n}, 4);\nmodule.link(\"../interestRates/methodDefinitions\", {\n  \"*\": \"*\"\n}, 5);\nmodule.link(\"../irs10y/methodDefinitions\", {\n  \"*\": \"*\"\n}, 6);\nmodule.link(\"../lenderRules/methodDefinitions\", {\n  \"*\": \"*\"\n}, 7);\nmodule.link(\"../lenders/methodDefinitions\", {\n  \"*\": \"*\"\n}, 8);\nmodule.link(\"../loans/methodDefinitions\", {\n  \"*\": \"*\"\n}, 9);\nmodule.link(\"../lots/methodDefinitions\", {\n  \"*\": \"*\"\n}, 10);\nmodule.link(\"../mortgageNotes/methodDefinitions\", {\n  \"*\": \"*\"\n}, 11);\nmodule.link(\"../offers/methodDefinitions\", {\n  \"*\": \"*\"\n}, 12);\nmodule.link(\"../organisations/methodDefinitions\", {\n  \"*\": \"*\"\n}, 13);\nmodule.link(\"../pdf/methodDefinitions\", {\n  \"*\": \"*\"\n}, 14);\nmodule.link(\"../promotionLots/methodDefinitions\", {\n  \"*\": \"*\"\n}, 15);\nmodule.link(\"../promotionOptions/methodDefinitions\", {\n  \"*\": \"*\"\n}, 16);\nmodule.link(\"../promotions/methodDefinitions\", {\n  \"*\": \"*\"\n}, 17);\nmodule.link(\"../properties/methodDefinitions\", {\n  \"*\": \"*\"\n}, 18);\nmodule.link(\"../slack/methodDefinitions\", {\n  \"*\": \"*\"\n}, 19);\nmodule.link(\"../tasks/methodDefinitions\", {\n  \"*\": \"*\"\n}, 20);\nmodule.link(\"../users/methodDefinitions\", {\n  \"*\": \"*\"\n}, 21);\nmodule.link(\"../analytics/methodDefinitions\", {\n  \"*\": \"*\"\n}, 22);\nmodule.link(\"./methodDefinitions\", {\n  \"*\": \"*\"\n}, 23);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"migrations\":{\"server\":{\"1.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/migrations/server/1.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  up: () => up,\n  down: () => down\n});\nlet Migrations;\nmodule.link(\"meteor/percolate:migrations\", {\n  Migrations(v) {\n    Migrations = v;\n  }\n\n}, 0);\nlet Properties;\nmodule.link(\"../..\", {\n  Properties(v) {\n    Properties = v;\n  }\n\n}, 1);\nlet PROPERTY_CATEGORY;\nmodule.link(\"../../properties/propertyConstants\", {\n  PROPERTY_CATEGORY(v) {\n    PROPERTY_CATEGORY = v;\n  }\n\n}, 2);\n\nconst up = () => {\n  Properties.update({}, {\n    $set: {\n      category: PROPERTY_CATEGORY.USER\n    }\n  }, {\n    multi: true\n  });\n};\n\nconst down = () => {\n  Properties.update({}, {\n    $unset: {\n      category: true\n    }\n  }, {\n    multi: true\n  });\n};\n\nMigrations.add({\n  version: 1,\n  name: 'Add property category',\n  up,\n  down\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"10.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/migrations/server/10.js                                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  up: () => up,\n  down: () => down\n});\nlet Migrations;\nmodule.link(\"meteor/percolate:migrations\", {\n  Migrations(v) {\n    Migrations = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet STEPS;\nmodule.link(\"../../loans/loanConstants\", {\n  STEPS(v) {\n    STEPS = v;\n  }\n\n}, 2);\nlet Loans;\nmodule.link(\"../..\", {\n  Loans(v) {\n    Loans = v;\n  }\n\n}, 3);\n\nconst mapStepUp = step => {\n  switch (step) {\n    case STEPS.SOLVENCY:\n      return STEPS.REQUEST;\n\n    case STEPS.REQUEST:\n      return STEPS.OFFERS;\n\n    case STEPS.OFFERS:\n      return STEPS.OFFERS;\n\n    case STEPS.CLOSING:\n      return STEPS.CLOSING;\n\n    default:\n      throw new Meteor.Error(`Unknown step ${step}`);\n  }\n};\n\nconst mapStepDown = step => {\n  switch (step) {\n    case STEPS.SOLVENCY:\n      return STEPS.SOLVENCY;\n\n    case STEPS.REQUEST:\n      return STEPS.REQUEST;\n\n    case STEPS.OFFERS:\n      return STEPS.OFFERS;\n\n    case STEPS.CLOSING:\n      return STEPS.CLOSING;\n\n    default:\n      throw new Meteor.Error(`Unknown step ${step}`);\n  }\n};\n\nconst up = () => {\n  const allLoans = Loans.find({}).fetch();\n  return Promise.all(allLoans.map(({\n    _id,\n    step\n  }) => Loans.rawCollection().update({\n    _id\n  }, {\n    $set: {\n      step: mapStepUp(step)\n    }\n  })));\n};\n\nconst down = () => {\n  const allLoans = Loans.find({}).fetch();\n  return Promise.all(allLoans.map(({\n    _id,\n    step\n  }) => Loans.rawCollection().update({\n    _id\n  }, {\n    $set: {\n      step: mapStepDown(step)\n    }\n  })));\n};\n\nMigrations.add({\n  version: 10,\n  name: 'Correct step for current loans',\n  up,\n  down\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"11.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/migrations/server/11.js                                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  up: () => up,\n  down: () => down\n});\nlet Migrations;\nmodule.link(\"meteor/percolate:migrations\", {\n  Migrations(v) {\n    Migrations = v;\n  }\n\n}, 0);\nlet UserService;\nmodule.link(\"../../users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 1);\n\nconst up = () => {\n  const allUsers = UserService.fetch({\n    organisations: {\n      _id: 1\n    }\n  });\n  return Promise.all(allUsers.map(({\n    _id: userId,\n    organisations = []\n  }) => organisations.forEach(({\n    _id: organisationId,\n    $metadata: metadata\n  }, index) => UserService.updateLinkMetadata({\n    id: userId,\n    linkName: 'organisations',\n    linkId: organisationId,\n    metadata: (0, _objectSpread2.default)({}, metadata, {\n      isMain: index === 0\n    })\n  }))));\n};\n\nconst down = () => {\n  const allUsers = UserService.fetch({\n    organisations: {\n      _id: 1\n    }\n  });\n  return Promise.all(allUsers.map(({\n    _id: userId,\n    organisations = []\n  }) => organisations.forEach(({\n    _id: organisationId,\n    $metadata: metadata\n  }) => {\n    const {\n      isMain\n    } = metadata,\n          restMeta = (0, _objectWithoutProperties2.default)(metadata, [\"isMain\"]);\n    UserService.updateLinkMetadata({\n      id: userId,\n      linkName: 'organisations',\n      linkId: organisationId,\n      metadata: (0, _objectSpread2.default)({\n        isMain: undefined\n      }, restMeta)\n    });\n  })));\n};\n\nMigrations.add({\n  version: 11,\n  name: 'Set first organisation as main',\n  up,\n  down\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"12.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/migrations/server/12.js                                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  up: () => up,\n  down: () => down\n});\nlet Migrations;\nmodule.link(\"meteor/percolate:migrations\", {\n  Migrations(v) {\n    Migrations = v;\n  }\n\n}, 0);\nlet UserService;\nmodule.link(\"../../users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 1);\n\nconst up = () => {\n  const allUsers = UserService.fetch({\n    organisations: {\n      _id: 1\n    }\n  });\n  return Promise.all(allUsers.map(({\n    _id: userId,\n    organisations = []\n  }) => organisations.forEach(({\n    _id: organisationId,\n    $metadata: metadata\n  }) => UserService.updateLinkMetadata({\n    id: userId,\n    linkName: 'organisations',\n    linkId: organisationId,\n    metadata: (0, _objectSpread2.default)({}, metadata, {\n      shareCustomers: true\n    })\n  }))));\n};\n\nconst down = () => {\n  const allUsers = UserService.fetch({\n    organisations: {\n      _id: 1\n    }\n  });\n  return Promise.all(allUsers.map(({\n    _id: userId,\n    organisations = []\n  }) => organisations.forEach(({\n    _id: organisationId,\n    $metadata: metadata\n  }) => {\n    const {\n      shareCustomers\n    } = metadata,\n          restMeta = (0, _objectWithoutProperties2.default)(metadata, [\"shareCustomers\"]);\n    UserService.updateLinkMetadata({\n      id: userId,\n      linkName: 'organisations',\n      linkId: organisationId,\n      metadata: (0, _objectSpread2.default)({\n        shareCustomers: undefined\n      }, restMeta)\n    });\n  })));\n};\n\nMigrations.add({\n  version: 12,\n  name: 'Share customers with organisation users',\n  up,\n  down\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"13.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/migrations/server/13.js                                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  up: () => up,\n  down: () => down\n});\nlet Migrations;\nmodule.link(\"meteor/percolate:migrations\", {\n  Migrations(v) {\n    Migrations = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nlet LOANS_COLLECTION, BORROWERS_COLLECTION, PROPERTIES_COLLECTION, ORGANISATIONS_COLLECTION, PROMOTIONS_COLLECTION;\nmodule.link(\"../../constants\", {\n  LOANS_COLLECTION(v) {\n    LOANS_COLLECTION = v;\n  },\n\n  BORROWERS_COLLECTION(v) {\n    BORROWERS_COLLECTION = v;\n  },\n\n  PROPERTIES_COLLECTION(v) {\n    PROPERTIES_COLLECTION = v;\n  },\n\n  ORGANISATIONS_COLLECTION(v) {\n    ORGANISATIONS_COLLECTION = v;\n  },\n\n  PROMOTIONS_COLLECTION(v) {\n    PROMOTIONS_COLLECTION = v;\n  }\n\n}, 2);\nlet FileService;\nmodule.link(\"../../files/server/FileService\", {\n  default(v) {\n    FileService = v;\n  }\n\n}, 3);\nconst collections = [LOANS_COLLECTION, BORROWERS_COLLECTION, PROPERTIES_COLLECTION, ORGANISATIONS_COLLECTION, PROMOTIONS_COLLECTION];\n\nconst up = () => Promise.asyncApply(() => {\n  for (let index = 0; index < collections.length; index++) {\n    const collection = collections[index];\n    const docs = Mongo.Collection.get(collection).find({}, {\n      fields: {\n        _id: 1\n      }\n    }).fetch();\n\n    for (let index2 = 0; index2 < docs.length; index2++) {\n      const {\n        _id: docId\n      } = docs[index2];\n      Promise.await(FileService.updateDocumentsCache({\n        collection,\n        docId\n      }));\n    }\n  }\n});\n\nconst down = () => {\n  collections.forEach(collection => {\n    Mongo.Collection.get(collection).update({}, {\n      $unset: {\n        documents: true\n      }\n    }, {\n      multi: true\n    });\n  });\n};\n\nMigrations.add({\n  version: 13,\n  name: 'Add documents cache on all collections',\n  up,\n  down\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"14.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/migrations/server/14.js                                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  up: () => up,\n  down: () => down\n});\nlet Migrations;\nmodule.link(\"meteor/percolate:migrations\", {\n  Migrations(v) {\n    Migrations = v;\n  }\n\n}, 0);\nlet Properties;\nmodule.link(\"../..\", {\n  Properties(v) {\n    Properties = v;\n  }\n\n}, 1);\n\nconst up = () => {\n  const allProperties = Properties.find({}).fetch();\n  return Promise.all(allProperties.map(({\n    _id,\n    monthlyExpenses\n  }) => Properties.rawCollection().update({\n    _id\n  }, (0, _objectSpread2.default)({}, monthlyExpenses ? {\n    $set: {\n      yearlyExpenses: monthlyExpenses * 12\n    }\n  } : {}, {\n    $unset: {\n      monthlyExpenses: true\n    }\n  }))));\n};\n\nconst down = () => {\n  const allProperties = Properties.find({}).fetch();\n  return Promise.all(allProperties.map(({\n    _id,\n    yearlyExpenses\n  }) => Properties.rawCollection().update({\n    _id\n  }, (0, _objectSpread2.default)({}, yearlyExpenses ? {\n    $set: {\n      monthlyExpenses: Math.round(yearlyExpenses / 12)\n    }\n  } : {}, {\n    $unset: {\n      yearlyExpenses: true\n    }\n  }))));\n};\n\nMigrations.add({\n  version: 14,\n  name: 'Change monthlyExpenses into yearlyExpenses',\n  up,\n  down\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"15.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/migrations/server/15.js                                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  up: () => up,\n  down: () => down\n});\nlet Migrations;\nmodule.link(\"meteor/percolate:migrations\", {\n  Migrations(v) {\n    Migrations = v;\n  }\n\n}, 0);\nlet Loans;\nmodule.link(\"../..\", {\n  Loans(v) {\n    Loans = v;\n  }\n\n}, 1);\nlet LOAN_CATEGORIES;\nmodule.link(\"../../loans/loanConstants\", {\n  LOAN_CATEGORIES(v) {\n    LOAN_CATEGORIES = v;\n  }\n\n}, 2);\n\nconst up = () => Promise.asyncApply(() => {\n  Promise.await(Loans.rawCollection().update({}, {\n    $set: {\n      category: LOAN_CATEGORIES.STANDARD\n    }\n  }, {\n    multi: true\n  }));\n});\n\nconst down = () => Promise.asyncApply(() => {\n  Promise.await(Loans.rawCollection().update({}, {\n    $unset: {\n      category: true\n    }\n  }, {\n    multi: true\n  }));\n});\n\nMigrations.add({\n  version: 15,\n  name: 'Add loan category',\n  up,\n  down\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"16.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/migrations/server/16.js                                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  up: () => up,\n  down: () => down\n});\nlet Migrations;\nmodule.link(\"meteor/percolate:migrations\", {\n  Migrations(v) {\n    Migrations = v;\n  }\n\n}, 0);\nlet Users, Contacts;\nmodule.link(\"../..\", {\n  Users(v) {\n    Users = v;\n  },\n\n  Contacts(v) {\n    Contacts = v;\n  }\n\n}, 1);\nlet formatPhoneNumber;\nmodule.link(\"../../../utils/phoneFormatting\", {\n  formatPhoneNumber(v) {\n    formatPhoneNumber = v;\n  }\n\n}, 2);\n\nconst up = () => Promise.asyncApply(() => {\n  const allUsers = Users.find({}, {\n    fields: {\n      phoneNumbers: 1\n    }\n  }).fetch();\n  const allContacts = Contacts.find({}, {\n    fields: {\n      phoneNumbers: 1\n    }\n  }).fetch();\n  Promise.await(Promise.all(allUsers.map(({\n    _id,\n    phoneNumbers = []\n  }) => Users.rawCollection().update({\n    _id\n  }, {\n    $set: {\n      phoneNumbers: phoneNumbers.map(formatPhoneNumber)\n    }\n  }))));\n  Promise.await(Promise.all(allContacts.map(({\n    _id,\n    phoneNumbers = []\n  }) => Contacts.rawCollection().update({\n    _id\n  }, {\n    $set: {\n      phoneNumbers: phoneNumbers.map(formatPhoneNumber)\n    }\n  }))));\n});\n\nconst down = () => {};\n\nMigrations.add({\n  version: 16,\n  name: 'Format all phone numbers',\n  up,\n  down\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"17.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/migrations/server/17.js                                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  up: () => up,\n  down: () => down\n});\nlet Migrations;\nmodule.link(\"meteor/percolate:migrations\", {\n  Migrations(v) {\n    Migrations = v;\n  }\n\n}, 0);\nlet ACTIVITY_TYPES;\nmodule.link(\"../../activities/activityConstants\", {\n  ACTIVITY_TYPES(v) {\n    ACTIVITY_TYPES = v;\n  }\n\n}, 1);\nlet ActivityService;\nmodule.link(\"../../activities/server/ActivityService\", {\n  default(v) {\n    ActivityService = v;\n  }\n\n}, 2);\nlet LoanService;\nmodule.link(\"../../loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 3);\n\nconst up = () => Promise.asyncApply(() => {\n  const allLoans = LoanService.fetch({\n    createdAt: 1,\n    closingDate: 1,\n    signingDate: 1,\n    user: {\n      assignedEmployeeId: 1\n    }\n  });\n  Promise.await(Promise.all(allLoans.map(({\n    createdAt,\n    _id,\n    signingDate,\n    closingDate,\n    user = {}\n  }) => {\n    const assignee = user.assignedEmployeeId;\n    ActivityService.addCreatedAtActivity({\n      createdAt,\n      loanLink: {\n        _id\n      },\n      title: 'Dossier créé'\n    });\n\n    if (signingDate) {\n      ActivityService.insert({\n        title: 'Signature',\n        date: signingDate,\n        type: ACTIVITY_TYPES.EVENT,\n        createdBy: assignee,\n        loanLink: {\n          _id\n        }\n      });\n    }\n\n    if (closingDate) {\n      ActivityService.insert({\n        title: 'Closing',\n        date: closingDate,\n        type: ACTIVITY_TYPES.EVENT,\n        createdBy: assignee,\n        loanLink: {\n          _id\n        }\n      });\n    }\n\n    LoanService.baseUpdate(_id, {\n      $unset: {\n        closingDate: 1,\n        signingDate: 1\n      }\n    });\n  })));\n});\n\nconst down = () => {};\n\nMigrations.add({\n  version: 17,\n  name: 'Add activities and remove closing + signing dates',\n  up,\n  down\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"18.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/migrations/server/18.js                                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  up: () => up,\n  down: () => down\n});\nlet Migrations;\nmodule.link(\"meteor/percolate:migrations\", {\n  Migrations(v) {\n    Migrations = v;\n  }\n\n}, 0);\nlet Tasks;\nmodule.link(\"../..\", {\n  Tasks(v) {\n    Tasks = v;\n  }\n\n}, 1);\nlet TASK_PRIORITIES;\nmodule.link(\"../../tasks/taskConstants\", {\n  TASK_PRIORITIES(v) {\n    TASK_PRIORITIES = v;\n  }\n\n}, 2);\n\nconst up = () => Promise.asyncApply(() => {\n  Promise.await(Tasks.rawCollection().update({}, {\n    $set: {\n      priority: TASK_PRIORITIES.DEFAULT\n    }\n  }, {\n    multi: true\n  }));\n});\n\nconst down = () => Promise.asyncApply(() => {\n  Promise.await(Tasks.rawCollection().update({}, {\n    $unset: {\n      priority: true\n    }\n  }, {\n    multi: true\n  }));\n});\n\nMigrations.add({\n  version: 18,\n  name: 'Add task priority',\n  up,\n  down\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"19.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/migrations/server/19.js                                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nmodule.export({\n  up: () => up,\n  down: () => down\n});\nlet Migrations;\nmodule.link(\"meteor/percolate:migrations\", {\n  Migrations(v) {\n    Migrations = v;\n  }\n\n}, 0);\nlet Revenues;\nmodule.link(\"../../revenues\", {\n  default(v) {\n    Revenues = v;\n  }\n\n}, 1);\n\nconst up = () => Promise.asyncApply(() => {\n  const allRevenues = Revenues.find({}).fetch();\n  return Promise.all(allRevenues.map(({\n    _id,\n    organisationLinks\n  }) => Revenues.rawCollection().update({\n    _id\n  }, {\n    $set: {\n      organisationLinks: organisationLinks.map((_ref) => {\n        let {\n          paidDate\n        } = _ref,\n            link = (0, _objectWithoutProperties2.default)(_ref, [\"paidDate\"]);\n        return (0, _objectSpread2.default)({}, link, {\n          paidAt: paidDate\n        });\n      })\n    }\n  })));\n});\n\nconst down = () => Promise.asyncApply(() => {\n  const allRevenues = Revenues.find({}).fetch();\n  return Promise.all(allRevenues.map(({\n    _id,\n    organisationLinks\n  }) => Revenues.rawCollection().update({\n    _id\n  }, {\n    $set: {\n      organisationLinks: organisationLinks.map((_ref2) => {\n        let {\n          paidAt\n        } = _ref2,\n            link = (0, _objectWithoutProperties2.default)(_ref2, [\"paidAt\"]);\n        return (0, _objectSpread2.default)({}, link, {\n          paidDate: paidAt\n        });\n      })\n    }\n  })));\n});\n\nMigrations.add({\n  version: 19,\n  name: 'Use paidAt instead of paidDate of consistency',\n  up,\n  down\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"2.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/migrations/server/2.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  up: () => up,\n  down: () => down\n});\nlet Migrations;\nmodule.link(\"meteor/percolate:migrations\", {\n  Migrations(v) {\n    Migrations = v;\n  }\n\n}, 0);\nlet Loans;\nmodule.link(\"../..\", {\n  Loans(v) {\n    Loans = v;\n  }\n\n}, 1);\n\nconst up = () => {\n  Loans.update({}, {\n    $set: {\n      additionalDocuments: []\n    }\n  }, {\n    multi: true\n  });\n};\n\nconst down = () => {\n  Loans.update({}, {\n    $unset: {\n      additionalDocuments: true\n    }\n  }, {\n    multi: true\n  });\n};\n\nMigrations.add({\n  version: 2,\n  name: 'Add additional documents to loans',\n  up,\n  down\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"3.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/migrations/server/3.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  up: () => up,\n  down: () => down\n});\nlet Migrations;\nmodule.link(\"meteor/percolate:migrations\", {\n  Migrations(v) {\n    Migrations = v;\n  }\n\n}, 0);\nlet Loans;\nmodule.link(\"../..\", {\n  Loans(v) {\n    Loans = v;\n  }\n\n}, 1);\n\nconst up = () => {\n  const allLoans = Loans.find({}).fetch();\n  return Promise.all(allLoans.map(({\n    _id,\n    general\n  }) => Loans.rawCollection().update({\n    _id\n  }, {\n    $set: (0, _objectSpread2.default)({}, general, {\n      previousLoanTranches: []\n    }),\n    $unset: {\n      general: true\n    }\n  })));\n};\n\nconst down = () => {\n  const allLoans = Loans.find({}).fetch();\n  return Promise.all(allLoans.map(({\n    _id,\n    purchaseType,\n    residenceType,\n    canton,\n    currentOwner,\n    futureOwner,\n    otherOwner\n  }) => Loans.rawCollection().update({\n    _id\n  }, {\n    $set: {\n      general: {\n        purchaseType,\n        residenceType,\n        canton,\n        currentOwner,\n        futureOwner,\n        otherOwner\n      }\n    },\n    $unset: {\n      purchaseType: true,\n      residenceType: true,\n      canton: true,\n      currentOwner: true,\n      futureOwner: true,\n      otherOwner: true\n    }\n  })));\n};\n\nMigrations.add({\n  version: 3,\n  name: 'Remove general from loans, and add previousLoanTranches',\n  up,\n  down\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"4.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/migrations/server/4.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nmodule.export({\n  PERMISSIONS: () => PERMISSIONS,\n  up: () => up,\n  down: () => down\n});\nlet Migrations;\nmodule.link(\"meteor/percolate:migrations\", {\n  Migrations(v) {\n    Migrations = v;\n  }\n\n}, 0);\nlet Promotions;\nmodule.link(\"../..\", {\n  Promotions(v) {\n    Promotions = v;\n  }\n\n}, 1);\nconst PERMISSIONS = {\n  canSellLots: false,\n  canModifyLots: false,\n  canRemoveLots: false,\n  canModifyPromotion: false,\n  canManageDocuments: false,\n  canBookLots: false,\n  canInviteCustomers: false,\n  canAddLots: false,\n  displayCustomerNames: false\n};\n\nconst up = () => {\n  const allPromotions = Promotions.find().fetch();\n  return Promise.all(allPromotions.map(promotion => {\n    const {\n      _id,\n      userLinks = []\n    } = promotion;\n    const newUserLinks = userLinks.map((_ref) => {\n      let {\n        permissions\n      } = _ref,\n          user = (0, _objectWithoutProperties2.default)(_ref, [\"permissions\"]);\n      return (0, _objectSpread2.default)({\n        permissions: PERMISSIONS\n      }, user);\n    });\n    return Promotions.rawCollection().update({\n      _id\n    }, {\n      $set: {\n        userLinks: newUserLinks\n      }\n    });\n  }));\n};\n\nconst down = () => {\n  const allPromotions = Promotions.find().fetch();\n  return Promise.all(allPromotions.map(promotion => {\n    const {\n      _id,\n      userLinks = []\n    } = promotion;\n    const oldUserLinks = userLinks.map((_ref2) => {\n      let {\n        permissions\n      } = _ref2,\n          user = (0, _objectWithoutProperties2.default)(_ref2, [\"permissions\"]);\n      return (0, _objectSpread2.default)({\n        permissions: 'READ'\n      }, user);\n    });\n    return Promotions.rawCollection().update({\n      _id\n    }, {\n      $set: {\n        userLinks: oldUserLinks\n      }\n    });\n  }));\n};\n\nMigrations.add({\n  version: 4,\n  name: 'Modify user promotion permissions',\n  up,\n  down\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"5.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/migrations/server/5.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  up: () => up,\n  down: () => down\n});\nlet Migrations;\nmodule.link(\"meteor/percolate:migrations\", {\n  Migrations(v) {\n    Migrations = v;\n  }\n\n}, 0);\nlet Loans;\nmodule.link(\"../..\", {\n  Loans(v) {\n    Loans = v;\n  }\n\n}, 1);\nlet LoanService;\nmodule.link(\"../../loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 2);\n\nconst up = () => {\n  const allLoans = Loans.find().fetch();\n  return Promise.all(allLoans.map(loan => {\n    const {\n      maxSolvency\n    } = loan;\n\n    if (maxSolvency) {\n      const {\n        canton\n      } = maxSolvency;\n      return LoanService.setMaxPropertyValueWithoutBorrowRatio({\n        loanId: loan._id,\n        canton\n      }).then(() => Loans.rawCollection().update({\n        _id: loan._id\n      }, {\n        $unset: {\n          maxSolvency: true\n        }\n      }));\n    }\n\n    return Promise.resolve();\n  }));\n};\n\nconst down = () => {\n  const allLoans = Loans.find().fetch();\n  return Promise.all(allLoans.map(loan => {\n    const {\n      maxPropertyValue\n    } = loan;\n\n    if (maxPropertyValue) {\n      const {\n        main: {\n          max: maxMain\n        },\n        second: {\n          max: maxSecond\n        },\n        canton,\n        date\n      } = maxPropertyValue; // Schema would not be valid if we used LoanService.baseUpdate\n\n      return Loans.rawCollection().update({\n        _id: loan._id\n      }, {\n        $set: {\n          maxSolvency: {\n            date,\n            canton,\n            main: maxMain,\n            second: maxSecond\n          }\n        },\n        $unset: {\n          maxPropertyValue: true\n        }\n      });\n    }\n  }));\n};\n\nMigrations.add({\n  version: 5,\n  name: 'Add lender rules to max solvency',\n  up,\n  down\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"6.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/migrations/server/6.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nmodule.export({\n  up: () => up,\n  down: () => down\n});\nlet Migrations;\nmodule.link(\"meteor/percolate:migrations\", {\n  Migrations(v) {\n    Migrations = v;\n  }\n\n}, 0);\nlet Organisations;\nmodule.link(\"../..\", {\n  Organisations(v) {\n    Organisations = v;\n  }\n\n}, 1);\n\nconst up = () => {\n  const allOrganisations = Organisations.find().fetch();\n  return Promise.all(allOrganisations.map(organisation => {\n    const {\n      contactIds = [],\n      userLinks = []\n    } = organisation;\n    let promises = [];\n\n    if (contactIds.length > 0) {\n      const newContactIds = contactIds.map((_ref) => {\n        let {\n          role\n        } = _ref,\n            contact = (0, _objectWithoutProperties2.default)(_ref, [\"role\"]);\n        return (0, _objectSpread2.default)({\n          title: role\n        }, contact);\n      });\n      promises = [Organisations.rawCollection().update({\n        _id: organisation._id\n      }, {\n        $set: {\n          contactIds: newContactIds\n        }\n      })];\n    }\n\n    if (userLinks.length > 0) {\n      const newUserLinks = userLinks.map((_ref2) => {\n        let {\n          role\n        } = _ref2,\n            user = (0, _objectWithoutProperties2.default)(_ref2, [\"role\"]);\n        return (0, _objectSpread2.default)({\n          title: role\n        }, user);\n      });\n      promises = [...promises, Organisations.rawCollection().update({\n        _id: organisation._id\n      }, {\n        $set: {\n          userLinks: newUserLinks\n        }\n      })];\n    }\n\n    if (promises.length > 0) {\n      return Promise.all(promises);\n    }\n\n    return Promise.resolve();\n  }));\n};\n\nconst down = () => {\n  const allOrganisations = Organisations.find().fetch();\n  return Promise.all(allOrganisations.map(organisation => {\n    const {\n      contactIds = [],\n      userLinks = []\n    } = organisation;\n    let promises = [];\n\n    if (contactIds.length > 0) {\n      const newContactIds = contactIds.map((_ref3) => {\n        let {\n          title\n        } = _ref3,\n            contact = (0, _objectWithoutProperties2.default)(_ref3, [\"title\"]);\n        return (0, _objectSpread2.default)({\n          role: title\n        }, contact);\n      });\n      promises = [Organisations.rawCollection().update({\n        _id: organisation._id\n      }, {\n        $set: {\n          contactIds: newContactIds\n        }\n      })];\n    }\n\n    if (userLinks.length > 0) {\n      const newUserLinks = userLinks.map((_ref4) => {\n        let {\n          title\n        } = _ref4,\n            user = (0, _objectWithoutProperties2.default)(_ref4, [\"title\"]);\n        return (0, _objectSpread2.default)({\n          role: title\n        }, user);\n      });\n      promises = [...promises, Organisations.rawCollection().update({\n        _id: organisation._id\n      }, {\n        $set: {\n          userLinks: newUserLinks\n        }\n      })];\n    }\n\n    if (promises.length > 0) {\n      return Promise.all(promises);\n    }\n\n    return Promise.resolve();\n  }));\n};\n\nMigrations.add({\n  version: 6,\n  name: 'Rename role into title in organisations userLinks and contactIds metadata',\n  up,\n  down\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"7.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/migrations/server/7.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  up: () => up,\n  down: () => down\n});\nlet Migrations;\nmodule.link(\"meteor/percolate:migrations\", {\n  Migrations(v) {\n    Migrations = v;\n  }\n\n}, 0);\nlet Loans;\nmodule.link(\"../..\", {\n  Loans(v) {\n    Loans = v;\n  }\n\n}, 1);\n\nconst up = () => {\n  const allLoans = Loans.find({}).fetch();\n  return Promise.all(allLoans.map(({\n    _id,\n    logic: {\n      step\n    }\n  }) => Loans.rawCollection().update({\n    _id\n  }, {\n    $set: {\n      step\n    },\n    $unset: {\n      logic: true\n    }\n  })));\n};\n\nconst down = () => {\n  const allLoans = Loans.find({}).fetch();\n  return Promise.all(allLoans.map(({\n    _id,\n    step\n  }) => Loans.rawCollection().update({\n    _id\n  }, {\n    $set: {\n      logic: {\n        step\n      }\n    },\n    $unset: {\n      step: true\n    }\n  })));\n};\n\nMigrations.add({\n  version: 7,\n  name: 'Remove loan.logic',\n  up,\n  down\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"8.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/migrations/server/8.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  up: () => up,\n  down: () => down\n});\nlet Migrations;\nmodule.link(\"meteor/percolate:migrations\", {\n  Migrations(v) {\n    Migrations = v;\n  }\n\n}, 0);\nlet APPLICATION_TYPES;\nmodule.link(\"../../loans/loanConstants\", {\n  APPLICATION_TYPES(v) {\n    APPLICATION_TYPES = v;\n  }\n\n}, 1);\nlet Loans;\nmodule.link(\"../..\", {\n  Loans(v) {\n    Loans = v;\n  }\n\n}, 2);\n\nconst up = () => {\n  const allLoans = Loans.find({}).fetch();\n  return Promise.all(allLoans.map(({\n    _id\n  }) => Loans.rawCollection().update({\n    _id\n  }, {\n    $set: {\n      applicationType: APPLICATION_TYPES.FULL\n    }\n  })));\n};\n\nconst down = () => {\n  const allLoans = Loans.find({}).fetch();\n  return Promise.all(allLoans.map(({\n    _id\n  }) => Loans.rawCollection().update({\n    _id\n  }, {\n    $unset: {\n      applicationType: true\n    }\n  })));\n};\n\nMigrations.add({\n  version: 8,\n  name: 'Add applicationType on loans',\n  up,\n  down\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"9.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/migrations/server/9.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  up: () => up,\n  down: () => down\n});\nlet Migrations;\nmodule.link(\"meteor/percolate:migrations\", {\n  Migrations(v) {\n    Migrations = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet STEPS;\nmodule.link(\"../../loans/loanConstants\", {\n  STEPS(v) {\n    STEPS = v;\n  }\n\n}, 2);\nlet Loans;\nmodule.link(\"../..\", {\n  Loans(v) {\n    Loans = v;\n  }\n\n}, 3);\n\nconst mapStepUp = step => {\n  switch (step) {\n    case 'PREPARATION':\n      return STEPS.SOLVENCY;\n\n    case 'FIND_LENDER':\n      return STEPS.REQUEST;\n\n    case 'GET_CONTRACT':\n      return STEPS.OFFERS;\n\n    case 'CLOSING':\n      return STEPS.CLOSING;\n\n    default:\n      throw new Meteor.Error(`Unknown step ${step}`);\n  }\n};\n\nconst mapStepDown = step => {\n  switch (step) {\n    case STEPS.SOLVENCY:\n      return 'PREPARATION';\n\n    case STEPS.REQUEST:\n      return 'FIND_LENDER';\n\n    case STEPS.OFFERS:\n      return 'GET_CONTRACT';\n\n    case STEPS.CLOSING:\n      return 'CLOSING';\n\n    default:\n      throw new Meteor.Error(`Unknown step ${step}`);\n  }\n};\n\nconst up = () => {\n  const allLoans = Loans.find({}).fetch();\n  return Promise.all(allLoans.map(({\n    _id,\n    step\n  }) => Loans.rawCollection().update({\n    _id\n  }, {\n    $set: {\n      step: mapStepUp(step)\n    }\n  })));\n};\n\nconst down = () => {\n  const allLoans = Loans.find({}).fetch();\n  return Promise.all(allLoans.map(({\n    _id,\n    step\n  }) => Loans.rawCollection().update({\n    _id\n  }, {\n    $set: {\n      step: mapStepDown(step)\n    }\n  })));\n};\n\nMigrations.add({\n  version: 9,\n  name: 'Rename steps',\n  up,\n  down\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/migrations/server/index.js                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  migrate: () => migrate\n});\nlet Migrations;\nmodule.link(\"meteor/percolate:migrations\", {\n  Migrations(v) {\n    Migrations = v;\n  }\n\n}, 0);\nmodule.link(\"./1\");\nmodule.link(\"./2\");\nmodule.link(\"./3\");\nmodule.link(\"./4\");\nmodule.link(\"./5\");\nmodule.link(\"./6\");\nmodule.link(\"./7\");\nmodule.link(\"./8\");\nmodule.link(\"./9\");\nmodule.link(\"./10\");\nmodule.link(\"./11\");\nmodule.link(\"./12\");\nmodule.link(\"./13\");\nmodule.link(\"./14\");\nmodule.link(\"./15\");\nmodule.link(\"./16\");\nmodule.link(\"./17\");\nmodule.link(\"./18\");\nmodule.link(\"./19\");\n\nconst migrate = () => {\n  Migrations.migrateTo('latest');\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"monitoring\":{\"server\":{\"exposures.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/monitoring/server/exposures.js                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet exposeQuery;\nmodule.link(\"../../queries/queryHelpers\", {\n  exposeQuery(v) {\n    exposeQuery = v;\n  }\n\n}, 1);\nlet loanMonitoring;\nmodule.link(\"../queries\", {\n  loanMonitoring(v) {\n    loanMonitoring = v;\n  }\n\n}, 2);\nlet loanMonitoringResolver;\nmodule.link(\"./resolvers\", {\n  loanMonitoring(v) {\n    loanMonitoringResolver = v;\n  }\n\n}, 3);\nexposeQuery({\n  query: loanMonitoring,\n  overrides: {\n    validateParams: {\n      groupBy: String,\n      value: String,\n      filters: Match.Maybe(Object)\n    }\n  },\n  resolver: loanMonitoringResolver\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"resolvers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/monitoring/server/resolvers.js                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  loanMonitoring: () => loanMonitoring\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet merge;\nmodule.link(\"lodash/merge\", {\n  default(v) {\n    merge = v;\n  }\n\n}, 1);\nlet REVENUE_STATUS, LOAN_STATUS;\nmodule.link(\"../../constants\", {\n  REVENUE_STATUS(v) {\n    REVENUE_STATUS = v;\n  },\n\n  LOAN_STATUS(v) {\n    LOAN_STATUS = v;\n  }\n\n}, 2);\nlet LoanService;\nmodule.link(\"../../loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 3);\nconst defaultFilters = {\n  status: {\n    $nin: [LOAN_STATUS.TEST]\n  }\n};\n\nconst getPredicate = (filters = {}) => ({\n  $match: merge({}, defaultFilters, filters)\n});\n\nconst getProjection = () => ({\n  $project: {\n    status: 1,\n    revenueLinks: 1,\n    selectedStructure: 1,\n    createdYear: {\n      $year: {\n        date: '$createdAt'\n      }\n    },\n    createdMonth: {\n      $month: {\n        date: '$createdAt'\n      }\n    },\n    structure: {\n      $arrayElemAt: [{\n        $filter: {\n          input: '$structures',\n          as: 'item',\n          cond: {\n            $eq: ['$$item.id', '$selectedStructure']\n          }\n        }\n      }, 0]\n    }\n  }\n});\n\nconst getRevenues = ({\n  value\n}) => {\n  if (value === 'revenues') {\n    return [{\n      $lookup: {\n        from: 'revenues',\n        localField: 'revenueLinks',\n        foreignField: '_id',\n        as: 'revenues'\n      }\n    }, {\n      $unwind: '$revenues'\n    }, {\n      $addFields: {\n        revenueDate: {\n          $cond: {\n            if: {\n              $eq: ['$revenues.status', REVENUE_STATUS.EXPECTED]\n            },\n            then: '$revenues.expectedAt',\n            else: '$revenues.paidAt'\n          }\n        }\n      }\n    }, {\n      $addFields: {\n        revenueYear: {\n          $year: {\n            date: '$revenueDate'\n          }\n        },\n        revenueMonth: {\n          $month: {\n            date: '$revenueDate'\n          }\n        }\n      }\n    }];\n  }\n};\n\nconst getGroupBy = groupBy => {\n  switch (groupBy) {\n    case 'status':\n      return '$status';\n\n    case 'revenueDate':\n      return {\n        month: '$revenueMonth',\n        year: '$revenueYear'\n      };\n\n    case 'createdAt':\n      return {\n        month: '$createdMonth',\n        year: '$createdYear'\n      };\n\n    default:\n      throw new Meteor.Error(`Invalid groupBy: \"${groupBy}\"`);\n  }\n};\n\nconst getGrouping = ({\n  groupBy,\n  value\n}) => {\n  const fields = {};\n\n  switch (value) {\n    case 'count':\n      fields.count = {\n        $sum: 1\n      };\n      break;\n\n    case 'revenues':\n      fields.revenues = {\n        $sum: '$revenues.amount'\n      };\n      fields.paidRevenues = {\n        $sum: {\n          $cond: {\n            if: {\n              $eq: ['$revenues.status', REVENUE_STATUS.CLOSED]\n            },\n            then: '$revenues.amount',\n            else: 0\n          }\n        }\n      };\n      fields.expectedRevenues = {\n        $sum: {\n          $cond: {\n            if: {\n              $eq: ['$revenues.status', REVENUE_STATUS.EXPECTED]\n            },\n            then: '$revenues.amount',\n            else: 0\n          }\n        }\n      };\n      break;\n\n    case 'loanValue':\n      fields.loanValue = {\n        $sum: '$structure.wantedLoan'\n      };\n      break;\n\n    default:\n      throw new Meteor.Error('Invalid grouping value');\n  }\n\n  return {\n    $group: (0, _objectSpread2.default)({\n      _id: getGroupBy(groupBy)\n    }, fields)\n  };\n};\n\nconst getSort = ({\n  groupBy\n}) => {\n  if (groupBy === 'revenueDate' || groupBy === 'createdAt') {\n    return {\n      $sort: {\n        '_id.year': 1,\n        '_id.month': 1\n      }\n    };\n  }\n};\n\nconst buildPipeline = ({\n  filters,\n  groupBy,\n  value\n}) => [getPredicate(filters), getProjection(), getRevenues({\n  value\n}), getGrouping({\n  groupBy,\n  value\n}), getSort({\n  groupBy\n})].reduce((arr, val) => [...arr, ...(Array.isArray(val) ? val : [val])], []).filter(x => x);\n\nconst loanMonitoring = args => Promise.asyncApply(() => {\n  const pipeline = buildPipeline(args);\n  const agg = Promise.await(LoanService.aggregate(pipeline).toArray());\n  return agg;\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"queries.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/monitoring/queries.js                                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  loanMonitoring: () => loanMonitoring\n});\nlet Loans;\nmodule.link(\"../loans\", {\n  default(v) {\n    Loans = v;\n  }\n\n}, 0);\nconst loanMonitoring = Loans.createQuery('loanMonitoring', () => {});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"mortgageNotes\":{\"schemas\":{\"MortgageNoteSchema.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/mortgageNotes/schemas/MortgageNoteSchema.js                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 0);\nlet createdAt, updatedAt, moneyField;\nmodule.link(\"../../helpers/sharedSchemas\", {\n  createdAt(v) {\n    createdAt = v;\n  },\n\n  updatedAt(v) {\n    updatedAt = v;\n  },\n\n  moneyField(v) {\n    moneyField = v;\n  }\n\n}, 1);\nlet CANTONS, MORTGAGE_NOTE_TYPES, MORTGAGE_NOTE_CATEGORIES;\nmodule.link(\"../../constants\", {\n  CANTONS(v) {\n    CANTONS = v;\n  },\n\n  MORTGAGE_NOTE_TYPES(v) {\n    MORTGAGE_NOTE_TYPES = v;\n  },\n\n  MORTGAGE_NOTE_CATEGORIES(v) {\n    MORTGAGE_NOTE_CATEGORIES = v;\n  }\n\n}, 2);\nconst MortgageNoteSchema = new SimpleSchema({\n  createdAt,\n  updatedAt,\n  value: moneyField,\n  rank: {\n    type: Number,\n    min: 0,\n    max: 10,\n    optional: true\n  },\n  type: {\n    type: String,\n    allowedValues: Object.values(MORTGAGE_NOTE_TYPES),\n    optional: true,\n    uniforms: {\n      placeholder: null\n    }\n  },\n  category: {\n    type: String,\n    allowedValues: Object.values(MORTGAGE_NOTE_CATEGORIES),\n    optional: true,\n    uniforms: {\n      placeholder: null\n    }\n  },\n  canton: {\n    type: String,\n    allowedValues: Object.keys(CANTONS),\n    optional: true,\n    uniforms: {\n      placeholder: null\n    }\n  }\n});\nmodule.exportDefault(MortgageNoteSchema);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"MortgageNoteService.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/mortgageNotes/server/MortgageNoteService.js                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet MortgageNotes;\nmodule.link(\"../mortgageNotes\", {\n  default(v) {\n    MortgageNotes = v;\n  }\n\n}, 1);\nlet CollectionService;\nmodule.link(\"../../helpers/CollectionService\", {\n  default(v) {\n    CollectionService = v;\n  }\n\n}, 2);\n\nclass MortgageNoteService extends CollectionService {\n  constructor() {\n    super(MortgageNotes);\n  }\n\n  insert({\n    mortgageNote = {},\n    propertyId,\n    borrowerId\n  }) {\n    if (!borrowerId && !propertyId) {\n      throw new Meteor.Error('Une cédule doit être liée à un emprunteur ou bien immo');\n    }\n\n    const id = super.insert(mortgageNote);\n\n    if (borrowerId) {\n      this.addLink({\n        id,\n        linkName: 'borrower',\n        linkId: borrowerId\n      });\n    }\n\n    if (propertyId) {\n      this.addLink({\n        id,\n        linkName: 'property',\n        linkId: propertyId\n      });\n    }\n\n    return id;\n  }\n\n}\n\nmodule.exportDefault(new MortgageNoteService());\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"hooks.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/mortgageNotes/server/hooks.js                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet BorrowerService;\nmodule.link(\"../../borrowers/server/BorrowerService\", {\n  default(v) {\n    BorrowerService = v;\n  }\n\n}, 0);\nlet MortgageNotes;\nmodule.link(\"../mortgageNotes\", {\n  default(v) {\n    MortgageNotes = v;\n  }\n\n}, 1);\nlet MortgageNoteService;\nmodule.link(\"./MortgageNoteService\", {\n  default(v) {\n    MortgageNoteService = v;\n  }\n\n}, 2);\nMortgageNotes.before.remove((userId, {\n  _id: mortgageNoteId\n}) => {\n  const {\n    borrower\n  } = MortgageNoteService.fetchOne({\n    $filters: {\n      _id: mortgageNoteId\n    },\n    borrower: {\n      _id: 1\n    }\n  });\n\n  if (borrower) {\n    BorrowerService.cleanUpMortgageNotes({\n      borrowerId: borrower._id\n    });\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/mortgageNotes/server/methods.js                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 0);\nlet mortgageNoteInsert, mortgageNoteRemove, mortgageNoteUpdate;\nmodule.link(\"../methodDefinitions\", {\n  mortgageNoteInsert(v) {\n    mortgageNoteInsert = v;\n  },\n\n  mortgageNoteRemove(v) {\n    mortgageNoteRemove = v;\n  },\n\n  mortgageNoteUpdate(v) {\n    mortgageNoteUpdate = v;\n  }\n\n}, 1);\nlet MortgageNoteService;\nmodule.link(\"./MortgageNoteService\", {\n  default(v) {\n    MortgageNoteService = v;\n  }\n\n}, 2);\nmortgageNoteInsert.setHandler(({\n  userId\n}, params) => {\n  if (params.propertyId) {\n    SecurityService.properties.isAllowedToUpdate(params.propertyId, userId);\n  }\n\n  if (params.borrowerId) {\n    SecurityService.borrowers.isAllowedToUpdate(params.borrowerId, userId);\n  }\n\n  MortgageNoteService.insert(params);\n});\nmortgageNoteRemove.setHandler(({\n  userId\n}, {\n  mortgageNoteId\n}) => {\n  const {\n    borrower,\n    property\n  } = MortgageNoteService.fetchOne({\n    $filters: {\n      _id: mortgageNoteId\n    }\n  });\n\n  if (property) {\n    SecurityService.properties.isAllowedToUpdate(property._id, userId);\n  }\n\n  if (borrower) {\n    SecurityService.borrowers.isAllowedToUpdate(borrower._id, userId);\n  }\n\n  return MortgageNoteService.remove(mortgageNoteId);\n});\nmortgageNoteUpdate.setHandler(({\n  userId\n}, {\n  mortgageNoteId,\n  object\n}) => {\n  const {\n    borrower,\n    property\n  } = MortgageNoteService.fetchOne({\n    $filters: {\n      _id: mortgageNoteId\n    },\n    borrower: {\n      _id: 1\n    },\n    property: {\n      _id: 1\n    }\n  });\n\n  if (property) {\n    SecurityService.properties.isAllowedToUpdate(property._id, userId);\n  }\n\n  if (borrower) {\n    SecurityService.borrowers.isAllowedToUpdate(borrower._id, userId);\n  }\n\n  return MortgageNoteService._update({\n    id: mortgageNoteId,\n    object\n  });\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/mortgageNotes/index.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./methodDefinitions\", {\n  \"*\": \"*\"\n}, 0);\nmodule.link(\"./mortgageNotes\", {\n  default: \"default\"\n}, 1);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"links.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/mortgageNotes/links.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet MortgageNotes;\nmodule.link(\".\", {\n  default(v) {\n    MortgageNotes = v;\n  }\n\n}, 0);\nlet Borrowers, Properties;\nmodule.link(\"..\", {\n  Borrowers(v) {\n    Borrowers = v;\n  },\n\n  Properties(v) {\n    Properties = v;\n  }\n\n}, 1);\n// If you want to use links, don't forget to import this file in 'core/api/links.js'\nMortgageNotes.addLinks({\n  borrower: {\n    collection: Borrowers,\n    inversedBy: 'mortgageNotes'\n  },\n  property: {\n    collection: Properties,\n    inversedBy: 'mortgageNotes'\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methodDefinitions.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/mortgageNotes/methodDefinitions.js                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  mortgageNoteInsert: () => mortgageNoteInsert,\n  mortgageNoteRemove: () => mortgageNoteRemove,\n  mortgageNoteUpdate: () => mortgageNoteUpdate\n});\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet Method;\nmodule.link(\"../methods/methods\", {\n  Method(v) {\n    Method = v;\n  }\n\n}, 1);\nconst mortgageNoteInsert = new Method({\n  name: 'mortgageNoteInsert',\n  params: {\n    mortgageNote: Match.Optional(Object),\n    propertyId: Match.Optional(String),\n    borrowerId: Match.Optional(String)\n  }\n});\nconst mortgageNoteRemove = new Method({\n  name: 'mortgageNoteRemove',\n  params: {\n    mortgageNoteId: String\n  }\n});\nconst mortgageNoteUpdate = new Method({\n  name: 'mortgageNoteUpdate',\n  params: {\n    mortgageNoteId: String,\n    object: Object\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"mortgageNoteConstants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/mortgageNotes/mortgageNoteConstants.js                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  MORTGAGE_NOTES_COLLECTION: () => MORTGAGE_NOTES_COLLECTION,\n  MORTGAGE_NOTES_QUERIES: () => MORTGAGE_NOTES_QUERIES\n});\nconst MORTGAGE_NOTES_COLLECTION = 'mortgageNotes';\nconst MORTGAGE_NOTES_QUERIES = {// Insert your queries name here\n  // Example:\n  // EXAMPLE_QUERIE: 'EXAMPLE_QUERIE',\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"mortgageNotes.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/mortgageNotes/mortgageNotes.js                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet MortgageNoteSchema;\nmodule.link(\"./schemas/MortgageNoteSchema\", {\n  default(v) {\n    MortgageNoteSchema = v;\n  }\n\n}, 1);\nlet MORTGAGE_NOTES_COLLECTION;\nmodule.link(\"./mortgageNoteConstants\", {\n  MORTGAGE_NOTES_COLLECTION(v) {\n    MORTGAGE_NOTES_COLLECTION = v;\n  }\n\n}, 2);\nconst MortgageNotes = new Mongo.Collection(MORTGAGE_NOTES_COLLECTION);\nMortgageNotes.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true\n});\nMortgageNotes.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false\n});\nMortgageNotes.attachSchema(MortgageNoteSchema);\nmodule.exportDefault(MortgageNotes);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"notifications\":{\"server\":{\"NotificationService.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/notifications/server/NotificationService.js                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet TaskService;\nmodule.link(\"../../tasks/server/TaskService\", {\n  default(v) {\n    TaskService = v;\n  }\n\n}, 0);\nlet TASK_STATUS;\nmodule.link(\"../../tasks/taskConstants\", {\n  TASK_STATUS(v) {\n    TASK_STATUS = v;\n  }\n\n}, 1);\nlet ActivityService;\nmodule.link(\"../../activities/server/ActivityService\", {\n  default(v) {\n    ActivityService = v;\n  }\n\n}, 2);\nlet UserService;\nmodule.link(\"../../users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 3);\nlet ROLES;\nmodule.link(\"../../users/userConstants\", {\n  ROLES(v) {\n    ROLES = v;\n  }\n\n}, 4);\nlet CollectionService;\nmodule.link(\"../../helpers/CollectionService\", {\n  default(v) {\n    CollectionService = v;\n  }\n\n}, 5);\nlet RevenueService;\nmodule.link(\"../../revenues/server/RevenueService\", {\n  default(v) {\n    RevenueService = v;\n  }\n\n}, 6);\nlet Notifications;\nmodule.link(\"../notifications\", {\n  default(v) {\n    Notifications = v;\n  }\n\n}, 7);\n\nclass NotificationService extends CollectionService {\n  constructor() {\n    super(Notifications);\n  }\n\n  readNotification({\n    userId,\n    notificationId\n  }) {\n    this.updateLinkMetadata({\n      id: notificationId,\n      linkName: 'recipients',\n      linkId: userId,\n      metadata: {\n        read: true\n      }\n    });\n  }\n\n  snoozeNotification({\n    userId,\n    notificationId\n  }) {\n    const inOneHour = new Date();\n    inOneHour.setHours(inOneHour.getHours() + 1);\n    this.updateLinkMetadata({\n      id: notificationId,\n      linkName: 'recipients',\n      linkId: userId,\n      metadata: {\n        snoozeDate: inOneHour\n      }\n    });\n  }\n\n  unreadNotification({\n    userId,\n    notificationId\n  }) {\n    this.updateLinkMetadata({\n      id: notificationId,\n      linkName: 'recipients',\n      linkId: userId,\n      metadata: {\n        read: false\n      }\n    });\n  }\n\n  readNotificationAll({\n    filters\n  }) {\n    const notification = this.fetchOne({\n      $filters: filters,\n      recipientLinks: 1\n    });\n\n    if (notification) {\n      const {\n        _id: notificationId,\n        recipientLinks\n      } = notification;\n\n      this._update({\n        id: notificationId,\n        object: {\n          recipientLinks: recipientLinks.map(recipientLink => (0, _objectSpread2.default)({}, recipientLink, {\n            read: true\n          }))\n        }\n      });\n    }\n  }\n\n  addTaskNotifications() {\n    const tasks = TaskService.fetch({\n      $filters: {\n        status: TASK_STATUS.ACTIVE,\n        dueAt: {\n          $lte: new Date()\n        }\n      },\n      _id: 1,\n      assigneeLink: 1\n    });\n    const admins = UserService.fetch({\n      $filters: {\n        roles: ROLES.ADMIN\n      }\n    });\n    tasks.forEach(({\n      _id: taskId,\n      assigneeLink = {}\n    }) => {\n      const existingNotification = this.fetchOne({\n        $filters: {\n          'taskLink._id': taskId\n        }\n      });\n\n      if (!existingNotification) {\n        this.insert({\n          recipientLinks: this.getNotificationRecipient(assigneeLink._id, admins),\n          taskLink: {\n            _id: taskId\n          }\n        });\n      }\n    });\n  }\n\n  addActivityNotifications() {\n    const now = new Date();\n    const yesterday = new Date();\n    yesterday.setDate(yesterday.getDate() - 2);\n    const activities = ActivityService.fetch({\n      $filters: {\n        shouldNotify: true,\n        date: {\n          $gte: yesterday,\n          $lte: now\n        }\n      },\n      _id: 1,\n      createdBy: 1,\n      loan: {\n        userCache: 1\n      }\n    });\n    activities.forEach(({\n      _id: activityId,\n      createdBy = {},\n      loan\n    }) => {\n      const existingNotification = this.fetchOne({\n        $filters: {\n          'activityLink._id': activityId\n        }\n      });\n      const recipients = [{\n        _id: createdBy\n      }];\n\n      if (loan && loan.userCache && loan.userCache.assignedEmployeeCache) {\n        recipients.push({\n          _id: loan.userCache.assignedEmployeeCache._id\n        });\n      }\n\n      if (!existingNotification) {\n        this.insert({\n          recipientLinks: [{\n            _id: createdBy\n          }],\n          activityLink: {\n            _id: activityId\n          }\n        });\n      }\n    });\n  }\n\n  addRevenueNotifications() {\n    const now = new Date();\n    const revenues = RevenueService.fetch({\n      $filters: {\n        expectedAt: {\n          $lte: now\n        },\n        paidAt: {\n          $exists: false\n        }\n      },\n      loan: {\n        userCache: 1\n      }\n    });\n    const admins = UserService.fetch({\n      $filters: {\n        roles: ROLES.ADMIN\n      }\n    });\n    revenues.forEach(({\n      _id: revenueId,\n      loan\n    }) => {\n      const existingNotification = this.fetchOne({\n        $filters: {\n          'revenueLink._id': revenueId\n        }\n      });\n\n      if (!existingNotification) {\n        this.insert({\n          recipientLinks: this.getNotificationRecipient(loan.userCache && loan.userCache.assignedEmployeeCache && loan.userCache.assignedEmployeeCache._id, admins),\n          revenueLink: {\n            _id: revenueId\n          }\n        });\n      }\n    });\n  }\n\n  getNotificationRecipient(assignee, admins) {\n    if (assignee) {\n      return [{\n        _id: assignee\n      }];\n    }\n\n    return admins.map(({\n      _id\n    }) => ({\n      _id\n    }));\n  }\n\n}\n\nmodule.exportDefault(new NotificationService());\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"exposures.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/notifications/server/exposures.js                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 1);\nlet exposeQuery;\nmodule.link(\"../../queries/queryHelpers\", {\n  exposeQuery(v) {\n    exposeQuery = v;\n  }\n\n}, 2);\nlet adminNotifications;\nmodule.link(\"../queries\", {\n  adminNotifications(v) {\n    adminNotifications = v;\n  }\n\n}, 3);\nexposeQuery({\n  query: adminNotifications,\n  overrides: {\n    embody: body => {\n      body.$filter = ({\n        filters,\n        params: {\n          _userId,\n          userId,\n          read,\n          unread\n        }\n      }) => {\n        if (!read && !unread) {\n          throw new Meteor.Error('You have to provide either read or unread');\n        }\n\n        if (unread) {\n          filters.recipientLinks = {\n            $elemMatch: {\n              _id: _userId || userId,\n              read: false,\n              $or: [{\n                snoozeDate: {\n                  $exists: false\n                }\n              }, {\n                snoozeDate: {\n                  $lte: new Date()\n                }\n              }]\n            }\n          };\n        }\n\n        if (read) {\n          filters.recipientLinks = {\n            $elemMatch: {\n              _id: userId || _userId,\n              read: true\n            }\n          };\n        }\n      };\n    },\n    validateParams: {\n      userId: Match.Maybe(String),\n      read: Match.Maybe(Boolean),\n      unread: Match.Maybe(Boolean)\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/notifications/server/methods.js                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 0);\nlet readNotification, snoozeNotification, unreadNotification, generateAllNotifications;\nmodule.link(\"../methodDefinitions\", {\n  readNotification(v) {\n    readNotification = v;\n  },\n\n  snoozeNotification(v) {\n    snoozeNotification = v;\n  },\n\n  unreadNotification(v) {\n    unreadNotification = v;\n  },\n\n  generateAllNotifications(v) {\n    generateAllNotifications = v;\n  }\n\n}, 1);\nlet NotificationService;\nmodule.link(\"./NotificationService\", {\n  default(v) {\n    NotificationService = v;\n  }\n\n}, 2);\nreadNotification.setHandler(({\n  userId\n}, params) => {\n  SecurityService.checkUserIsAdmin(userId);\n  NotificationService.readNotification((0, _objectSpread2.default)({}, params, {\n    userId\n  }));\n});\nsnoozeNotification.setHandler(({\n  userId\n}, params) => {\n  SecurityService.checkUserIsAdmin(userId);\n  NotificationService.snoozeNotification((0, _objectSpread2.default)({}, params, {\n    userId\n  }));\n});\nunreadNotification.setHandler(({\n  userId\n}, params) => {\n  SecurityService.checkUserIsAdmin(userId);\n  NotificationService.unreadNotification((0, _objectSpread2.default)({}, params, {\n    userId\n  }));\n});\ngenerateAllNotifications.setHandler(({\n  userId\n}) => {\n  SecurityService.checkUserIsDev(userId);\n  NotificationService.addTaskNotifications();\n  NotificationService.addActivityNotifications();\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"notificationGeneratorCron.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/notifications/server/notificationGeneratorCron.js                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet SyncedCron;\nmodule.link(\"meteor/littledata:synced-cron\", {\n  SyncedCron(v) {\n    SyncedCron = v;\n  }\n\n}, 0);\nlet SlackService;\nmodule.link(\"../../slack/server/SlackService\", {\n  default(v) {\n    SlackService = v;\n  }\n\n}, 1);\nlet NotificationService;\nmodule.link(\"./NotificationService\", {\n  default(v) {\n    NotificationService = v;\n  }\n\n}, 2);\nSyncedCron.add({\n  name: 'Generate notifications',\n\n  schedule(parser) {\n    return parser.text('every 1 minute');\n  },\n\n  job() {\n    try {\n      NotificationService.addTaskNotifications();\n      NotificationService.addActivityNotifications();\n      NotificationService.addRevenueNotifications();\n    } catch (error) {\n      SlackService.sendError({\n        error,\n        additionalData: ['Notification generation error']\n      });\n    }\n  }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"notificationListeners.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/notifications/server/notificationListeners.js                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet ServerEventService;\nmodule.link(\"../../events/server/ServerEventService\", {\n  default(v) {\n    ServerEventService = v;\n  }\n\n}, 0);\nlet taskComplete;\nmodule.link(\"../../tasks/methodDefinitions\", {\n  taskComplete(v) {\n    taskComplete = v;\n  }\n\n}, 1);\nlet NotificationService;\nmodule.link(\"./NotificationService\", {\n  default(v) {\n    NotificationService = v;\n  }\n\n}, 2);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/notifications/index.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./notifications\", {\n  default: \"default\"\n}, 0);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"links.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/notifications/links.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Notifications;\nmodule.link(\"./notifications\", {\n  default(v) {\n    Notifications = v;\n  }\n\n}, 0);\nlet Users;\nmodule.link(\"../users\", {\n  default(v) {\n    Users = v;\n  }\n\n}, 1);\nlet Activities;\nmodule.link(\"../activities\", {\n  default(v) {\n    Activities = v;\n  }\n\n}, 2);\nlet Tasks;\nmodule.link(\"../tasks\", {\n  default(v) {\n    Tasks = v;\n  }\n\n}, 3);\nlet Revenues;\nmodule.link(\"../revenues\", {\n  default(v) {\n    Revenues = v;\n  }\n\n}, 4);\nNotifications.addLinks({\n  recipients: {\n    collection: Users,\n    field: 'recipientLinks',\n    type: 'many',\n    metadata: true\n  },\n  activity: {\n    collection: Activities,\n    field: 'activityLink',\n    type: 'one',\n    metadata: true\n  },\n  task: {\n    collection: Tasks,\n    field: 'taskLink',\n    type: 'one',\n    metadata: true\n  },\n  revenue: {\n    collection: Revenues,\n    field: 'revenueLink',\n    type: 'one',\n    metadata: true\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methodDefinitions.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/notifications/methodDefinitions.js                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  snoozeNotification: () => snoozeNotification,\n  readNotification: () => readNotification,\n  unreadNotification: () => unreadNotification,\n  generateAllNotifications: () => generateAllNotifications\n});\nlet Method;\nmodule.link(\"../methods/methods\", {\n  Method(v) {\n    Method = v;\n  }\n\n}, 0);\nconst snoozeNotification = new Method({\n  name: 'snoozeNotification',\n  params: {\n    notificationId: String\n  }\n});\nconst readNotification = new Method({\n  name: 'readNotification',\n  params: {\n    notificationId: String\n  }\n});\nconst unreadNotification = new Method({\n  name: 'unreadNotification',\n  params: {\n    notificationId: String\n  }\n});\nconst generateAllNotifications = new Method({\n  name: 'generateAllNotifications',\n  params: {}\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"notificationConstants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/notifications/notificationConstants.js                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  NOTIFICATIONS_COLLECTION: () => NOTIFICATIONS_COLLECTION,\n  NOTIFICATION_QUERIES: () => NOTIFICATION_QUERIES\n});\nconst NOTIFICATIONS_COLLECTION = 'notifications';\nconst NOTIFICATION_QUERIES = {\n  ADMIN_NOTIFICATIONS: 'ADMIN_NOTIFICATIONS'\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"notifications.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/notifications/notifications.js                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 1);\nlet createdAt, updatedAt;\nmodule.link(\"../helpers/sharedSchemas\", {\n  createdAt(v) {\n    createdAt = v;\n  },\n\n  updatedAt(v) {\n    updatedAt = v;\n  }\n\n}, 2);\nlet NOTIFICATIONS_COLLECTION;\nmodule.link(\"./notificationConstants\", {\n  NOTIFICATIONS_COLLECTION(v) {\n    NOTIFICATIONS_COLLECTION = v;\n  }\n\n}, 3);\nconst Notifications = new Mongo.Collection(NOTIFICATIONS_COLLECTION);\nconst NotificationSchema = new SimpleSchema({\n  createdAt,\n  updatedAt,\n  recipientLinks: {\n    type: Array,\n    minCount: 1\n  },\n  'recipientLinks.$': Object,\n  'recipientLinks.$._id': String,\n  'recipientLinks.$.read': {\n    type: Boolean,\n    defaultValue: false\n  },\n  'recipientLinks.$.readDate': {\n    type: Date,\n    optional: true\n  },\n  'recipientLinks.$.snoozeDate': {\n    type: Date,\n    optional: true\n  },\n  taskLink: {\n    type: Object,\n    optional: true\n  },\n  'taskLink._id': String,\n  activityLink: {\n    type: Object,\n    optional: true\n  },\n  'activityLink._id': String,\n  revenueLink: {\n    type: Object,\n    optional: true\n  },\n  'revenueLink._id': String\n});\nNotifications.attachSchema(NotificationSchema);\nmodule.exportDefault(Notifications);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"queries.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/notifications/queries.js                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  adminNotifications: () => adminNotifications\n});\nlet Notifications;\nmodule.link(\"./notifications\", {\n  default(v) {\n    Notifications = v;\n  }\n\n}, 0);\nlet NOTIFICATION_QUERIES;\nmodule.link(\"./notificationConstants\", {\n  NOTIFICATION_QUERIES(v) {\n    NOTIFICATION_QUERIES = v;\n  }\n\n}, 1);\nlet notification;\nmodule.link(\"../fragments\", {\n  notification(v) {\n    notification = v;\n  }\n\n}, 2);\nconst adminNotifications = Notifications.createQuery(NOTIFICATION_QUERIES.ADMIN_NOTIFICATIONS, notification());\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"reducers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/notifications/reducers.js                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet Notifications;\nmodule.link(\"./notifications\", {\n  default(v) {\n    Notifications = v;\n  }\n\n}, 0);\nlet LOANS_COLLECTION;\nmodule.link(\"../loans/loanConstants\", {\n  LOANS_COLLECTION(v) {\n    LOANS_COLLECTION = v;\n  }\n\n}, 1);\nNotifications.addReducers({\n  relatedDoc: {\n    body: {\n      activity: {\n        loan: {\n          name: 1\n        }\n      },\n      task: {\n        loan: {\n          name: 1\n        }\n      },\n      revenue: {\n        loan: {\n          name: 1\n        }\n      }\n    },\n    reduce: ({\n      activity,\n      task,\n      revenue\n    }) => {\n      if (activity) {\n        if (activity.loan) {\n          return (0, _objectSpread2.default)({}, activity.loan, {\n            collection: LOANS_COLLECTION\n          });\n        }\n      }\n\n      if (task) {\n        if (task.loan) {\n          return (0, _objectSpread2.default)({}, task.loan, {\n            collection: LOANS_COLLECTION\n          });\n        }\n      }\n\n      if (revenue) {\n        if (revenue.loan) {\n          return (0, _objectSpread2.default)({}, revenue.loan, {\n            collection: LOANS_COLLECTION\n          });\n        }\n      }\n    }\n  },\n  title: {\n    body: {\n      task: {\n        title: 1,\n        dueAt: 1\n      },\n      activity: {\n        title: 1,\n        date: 1\n      },\n      revenue: {\n        type: 1,\n        description: 1\n      }\n    },\n    reduce: ({\n      task,\n      activity,\n      revenue\n    }) => {\n      let title;\n\n      if (task) {\n        title = task.title;\n      } else if (activity) {\n        title = activity.title;\n      } else if (revenue) {\n        title = `Paiement \"${revenue.type}\" attendu`;\n      } else {\n        title = \"L'orgine de la notification a été supprimée\";\n      }\n\n      return title;\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"offers\":{\"server\":{\"OfferService.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/offers/server/OfferService.js                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  OfferService: () => OfferService\n});\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 0);\nlet CollectionService;\nmodule.link(\"../../helpers/CollectionService\", {\n  default(v) {\n    CollectionService = v;\n  }\n\n}, 1);\nlet LoanService;\nmodule.link(\"../../loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 2);\nlet LenderService;\nmodule.link(\"../../lenders/server/LenderService\", {\n  default(v) {\n    LenderService = v;\n  }\n\n}, 3);\nlet LENDER_STATUS;\nmodule.link(\"../../lenders/lenderConstants\", {\n  LENDER_STATUS(v) {\n    LENDER_STATUS = v;\n  }\n\n}, 4);\nlet fullOffer;\nmodule.link(\"../../fragments\", {\n  fullOffer(v) {\n    fullOffer = v;\n  }\n\n}, 5);\nlet EMAIL_IDS;\nmodule.link(\"../../email/emailConstants\", {\n  EMAIL_IDS(v) {\n    EMAIL_IDS = v;\n  }\n\n}, 6);\nlet sendEmailToAddress;\nmodule.link(\"../../methods\", {\n  sendEmailToAddress(v) {\n    sendEmailToAddress = v;\n  }\n\n}, 7);\nlet Offers;\nmodule.link(\"../offers\", {\n  default(v) {\n    Offers = v;\n  }\n\n}, 8);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass OfferService extends CollectionService {\n  constructor() {\n    super(Offers);\n\n    _defineProperty(this, \"update\", ({\n      offerId,\n      object\n    }) => Offers.update(offerId, {\n      $set: object\n    }));\n\n    _defineProperty(this, \"sendFeedback\", ({\n      offerId,\n      feedback,\n      saveFeedback = true\n    }) => {\n      if (saveFeedback) {\n        this.update({\n          offerId,\n          object: {\n            feedback: {\n              message: feedback,\n              date: new Date()\n            }\n          }\n        });\n      }\n\n      const {\n        createdAt,\n        lender: {\n          organisation: {\n            name: organisationName\n          },\n          contact: {\n            email: address,\n            name\n          },\n          loan: {\n            name: loanName,\n            user: {\n              assignedEmployee\n            }\n          }\n        }\n      } = this.fetchOne((0, _objectSpread2.default)({\n        $filters: {\n          _id: offerId\n        }\n      }, fullOffer()));\n      const {\n        email: assigneeAddress,\n        name: assigneeName\n      } = assignedEmployee || {};\n      return sendEmailToAddress.run({\n        emailId: EMAIL_IDS.SEND_FEEDBACK_TO_LENDER,\n        address,\n        name,\n        params: {\n          assigneeAddress,\n          assigneeName,\n          loanName,\n          organisationName,\n          date: moment(createdAt).format('DD.MM.YYYY'),\n          feedback\n        }\n      });\n    });\n\n    _defineProperty(this, \"insert\", (_ref) => {\n      let {\n        offer: {\n          lenderId\n        }\n      } = _ref,\n          offer = (0, _objectWithoutProperties2.default)(_ref.offer, [\"lenderId\"]);\n      const offerId = Offers.insert((0, _objectSpread2.default)({}, offer));\n      this.addLink({\n        id: offerId,\n        linkName: 'lender',\n        linkId: lenderId\n      });\n\n      LenderService._update({\n        id: lenderId,\n        object: {\n          status: LENDER_STATUS.OFFER_RECEIVED\n        }\n      });\n\n      return offerId;\n    });\n\n    _defineProperty(this, \"remove\", ({\n      offerId\n    }) => Offers.remove(offerId));\n\n    _defineProperty(this, \"cleanUpOffer\", ({\n      offerId\n    }) => {\n      const loan = LoanService.fetchOne({\n        $filters: {\n          structures: {\n            $elemMatch: {\n              offerId\n            }\n          }\n        }\n      });\n\n      if (loan) {\n        LoanService.update({\n          loanId: loan._id,\n          object: {\n            structures: loan.structures.map(structure => (0, _objectSpread2.default)({}, structure, {\n              offerId: structure.offerId === offerId ? undefined : structure.offerId\n            }))\n          }\n        });\n      }\n    });\n  }\n\n}\n\nmodule.exportDefault(new OfferService());\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"exposures.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/offers/server/exposures.js                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet exposeQuery;\nmodule.link(\"../../queries/queryHelpers\", {\n  exposeQuery(v) {\n    exposeQuery = v;\n  }\n\n}, 0);\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 1);\nlet adminOffers, loanOffers;\nmodule.link(\"../queries\", {\n  adminOffers(v) {\n    adminOffers = v;\n  },\n\n  loanOffers(v) {\n    loanOffers = v;\n  }\n\n}, 2);\nexposeQuery({\n  query: adminOffers,\n  options: {\n    allowFilterById: true\n  }\n});\nexposeQuery({\n  query: loanOffers,\n  overrides: {\n    firewall(userId, {\n      loanId\n    }) {\n      SecurityService.checkLoggedIn();\n\n      if (loanId) {\n        SecurityService.loans.isAllowedToUpdate(loanId);\n      }\n    },\n\n    embody: body => {\n      body.$filter = ({\n        filters,\n        params: {\n          loanId\n        }\n      }) => {\n        if (loanId) {\n          filters['lenderCache.loanLink._id'] = loanId;\n        }\n      };\n    },\n    validateParams: {\n      loanId: String\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"hooks.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/offers/server/hooks.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Offers;\nmodule.link(\"../offers\", {\n  default(v) {\n    Offers = v;\n  }\n\n}, 0);\nlet OfferService;\nmodule.link(\"./OfferService\", {\n  default(v) {\n    OfferService = v;\n  }\n\n}, 1);\nOffers.before.remove((userId, {\n  _id: offerId\n}) => {\n  OfferService.cleanUpOffer({\n    offerId\n  });\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/offers/server/methods.js                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet OfferService;\nmodule.link(\"./OfferService\", {\n  default(v) {\n    OfferService = v;\n  }\n\n}, 0);\nlet offerInsert, offerUpdate, offerDelete, offerSendFeedback;\nmodule.link(\"../methodDefinitions\", {\n  offerInsert(v) {\n    offerInsert = v;\n  },\n\n  offerUpdate(v) {\n    offerUpdate = v;\n  },\n\n  offerDelete(v) {\n    offerDelete = v;\n  },\n\n  offerSendFeedback(v) {\n    offerSendFeedback = v;\n  }\n\n}, 1);\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 2);\nofferInsert.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OfferService.insert(params);\n});\nofferUpdate.setHandler((context, params) => {\n  SecurityService.offers.isAllowedToUpdate(params.offerId);\n  return OfferService.update(params);\n});\nofferDelete.setHandler((context, params) => {\n  SecurityService.offers.isAllowedToDelete(params.offerId);\n  return OfferService.remove(params);\n});\nofferSendFeedback.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OfferService.sendFeedback(params);\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"serverReducers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/offers/server/serverReducers.js                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet Offers;\nmodule.link(\"..\", {\n  default(v) {\n    Offers = v;\n  }\n\n}, 0);\nlet assigneeReducer;\nmodule.link(\"../../reducers/assigneeReducer\", {\n  default(v) {\n    assigneeReducer = v;\n  }\n\n}, 1);\nOffers.addReducers((0, _objectSpread2.default)({}, assigneeReducer()));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"fakes.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/offers/fakes.js                                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  getRandomOffer: () => getRandomOffer\n});\n\nconst randInArray = array => array[Math.floor(Math.random() * array.length)];\n\nconst getRandomCondition = () => {\n  const conditions = ['Expertise additionelle requise', '', '', '', '', '', '', '', ''];\n  return randInArray(conditions);\n};\n\nconst getRandomCounterpart = () => {\n  const counterparts = ['Gestion de toute la fortune', 'Souscrire à une assurance vie', \"Gestion de CHF 100'000 de patrimoine minimum\", 'Souscrire à une assurance voiture', '', '', '', '', '', '', '', ''];\n  return randInArray(counterparts);\n};\n\nconst round = v => Math.round(v * 10000) / 10000;\n\nconst rand = (min, max) => round(Math.random() * (max - min) + min);\n\nconst getRandomOffer = ({\n  loan\n}) => {\n  const rate1 = rand(0.007, 0.012);\n  const rate2 = rand(0.005, 0.009);\n  const loanWanted = loan.structures[0].wantedLoan;\n  const maxAmountLimited = loanWanted > 100000000 ? 100000000 : loanWanted;\n  const counterpart = getRandomCounterpart();\n  const condition = getRandomCondition();\n  return {\n    organisation: 'fake',\n    loanId: loan._id,\n    maxAmount: maxAmountLimited,\n    amortizationGoal: randInArray([0.65, 0.6, 0.5]),\n    interestLibor: rate1,\n    interest1: round(rate1 + rand(0.0004, 0.0016)),\n    interest2: round(rate1 + rand(0.0016, 0.004)),\n    interest5: round(rate1 + rand(0.004, 0.006)),\n    interest10: round(rate1 + rand(0.006, 0.01)),\n    conditions: [condition, counterpart].filter(x => x)\n  };\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/offers/index.js                                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  offerMethods: () => offerMethods\n});\nlet methodDefinitions;\nmodule.link(\"./methodDefinitions\", {\n  \"*\"(v) {\n    methodDefinitions = v;\n  }\n\n}, 0);\nmodule.link(\"./methodDefinitions\", {\n  \"*\": \"*\"\n}, 1);\nmodule.link(\"./offers\", {\n  default: \"default\"\n}, 2);\nconst offerMethods = methodDefinitions;\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"links.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/offers/links.js                                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Offers;\nmodule.link(\"./offers\", {\n  default(v) {\n    Offers = v;\n  }\n\n}, 0);\nlet Users, Lenders;\nmodule.link(\"..\", {\n  Users(v) {\n    Users = v;\n  },\n\n  Lenders(v) {\n    Lenders = v;\n  }\n\n}, 1);\nOffers.addLinks({\n  user: {\n    field: 'userId',\n    collection: Users,\n    type: 'one'\n  },\n  lender: {\n    field: 'lenderLink',\n    collection: Lenders,\n    type: 'one',\n    metadata: true,\n    denormalize: {\n      field: 'lenderCache',\n      body: {\n        loanLink: 1\n      }\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methodDefinitions.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/offers/methodDefinitions.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  offerInsert: () => offerInsert,\n  offerUpdate: () => offerUpdate,\n  offerDelete: () => offerDelete,\n  offerSendFeedback: () => offerSendFeedback\n});\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet Method;\nmodule.link(\"../methods/methods\", {\n  Method(v) {\n    Method = v;\n  }\n\n}, 1);\nconst offerInsert = new Method({\n  name: 'offerInsert',\n  params: {\n    offer: Object\n  }\n});\nconst offerUpdate = new Method({\n  name: 'offerUpdate',\n  params: {\n    offerId: String,\n    object: Object\n  }\n});\nconst offerDelete = new Method({\n  name: 'offerDelete',\n  params: {\n    offerId: String\n  }\n});\nconst offerSendFeedback = new Method({\n  name: 'offerSendFeedback',\n  params: {\n    offerId: String,\n    feedback: String,\n    saveFeedback: Match.Maybe(Boolean)\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"offerConstants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/offers/offerConstants.js                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  OFFER_TYPE: () => OFFER_TYPE,\n  OFFERS_COLLECTION: () => OFFERS_COLLECTION,\n  OFFER_QUERIES: () => OFFER_QUERIES\n});\nconst OFFER_TYPE = {\n  STANDARD: 'STANDARD',\n  COUNTERPARTS: 'COUNTERPARTS'\n};\nconst OFFERS_COLLECTION = 'offers';\nconst OFFER_QUERIES = {\n  LOAN_OFFERS: 'LOAN_OFFERS',\n  ADMIN_OFFERS: 'ADMIN_OFFERS'\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"offers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/offers/offers.js                                                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  OfferSchema: () => OfferSchema,\n  AdminOfferSchema: () => AdminOfferSchema\n});\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 1);\nlet INTEREST_RATES, OFFERS_COLLECTION;\nmodule.link(\"../constants\", {\n  INTEREST_RATES(v) {\n    INTEREST_RATES = v;\n  },\n\n  OFFERS_COLLECTION(v) {\n    OFFERS_COLLECTION = v;\n  }\n\n}, 2);\nlet createdAt, updatedAt, percentageField, moneyField, cacheField;\nmodule.link(\"../helpers/sharedSchemas\", {\n  createdAt(v) {\n    createdAt = v;\n  },\n\n  updatedAt(v) {\n    updatedAt = v;\n  },\n\n  percentageField(v) {\n    percentageField = v;\n  },\n\n  moneyField(v) {\n    moneyField = v;\n  },\n\n  cacheField(v) {\n    cacheField = v;\n  }\n\n}, 3);\nconst Offers = new Mongo.Collection(OFFERS_COLLECTION); // Prevent all client side modifications of mongoDB\n\nOffers.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true\n});\nOffers.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false\n});\nconst OfferSchema = new SimpleSchema((0, _objectSpread2.default)({\n  createdAt,\n  updatedAt,\n  organisationLink: {\n    type: Object,\n    optional: true\n  },\n  'organisationLink._id': {\n    type: String,\n    optional: true\n  },\n  contactLink: {\n    type: Object,\n    optional: true\n  },\n  'contactLink._id': String,\n  'contactLink.feedback': {\n    type: String,\n    optional: true\n  },\n  maxAmount: moneyField,\n  amortizationGoal: percentageField,\n  amortizationYears: {\n    type: SimpleSchema.Integer,\n    min: 0,\n    max: 100,\n    optional: true\n  },\n  fees: moneyField,\n  epotekFees: moneyField\n}, Object.values(INTEREST_RATES).reduce((accumulator, interestKey) => (0, _objectSpread2.default)({}, accumulator, {\n  [interestKey]: percentageField\n}), {}), {\n  conditions: {\n    type: Array,\n    optional: true,\n    defaultValue: []\n  },\n  'conditions.$': {\n    type: String,\n    optional: true\n  },\n  lenderLink: {\n    type: Object,\n    optional: true\n  },\n  'lenderLink._id': {\n    type: String,\n    optional: true\n  },\n  feedback: {\n    type: Object,\n    optional: true\n  },\n  'feedback.message': {\n    type: String,\n    optional: true\n  },\n  'feedback.date': {\n    type: Date,\n    optional: true\n  },\n  withCounterparts: {\n    type: Boolean,\n    optional: true\n  },\n  enableOffer: {\n    type: Boolean,\n    defaultValue: true,\n    optional: true\n  },\n  lenderCache: cacheField\n}));\nconst AdminOfferSchema = OfferSchema.omit('lenderLink', 'organisationLink', 'contactLink', 'createdAt', 'updatedAt', 'feedback', 'lenderCache');\n// Attach schema\nOffers.attachSchema(OfferSchema);\nmodule.exportDefault(Offers);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"queries.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/offers/queries.js                                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  adminOffers: () => adminOffers,\n  loanOffers: () => loanOffers\n});\nlet fullOffer;\nmodule.link(\"../fragments\", {\n  fullOffer(v) {\n    fullOffer = v;\n  }\n\n}, 0);\nlet OFFER_QUERIES;\nmodule.link(\"./offerConstants\", {\n  OFFER_QUERIES(v) {\n    OFFER_QUERIES = v;\n  }\n\n}, 1);\nlet Offers;\nmodule.link(\".\", {\n  default(v) {\n    Offers = v;\n  }\n\n}, 2);\nconst adminOffers = Offers.createQuery(OFFER_QUERIES.ADMIN_OFFERS, fullOffer());\nconst loanOffers = Offers.createQuery(OFFER_QUERIES.LOAN_OFFERS, (0, _objectSpread2.default)({}, fullOffer(), {\n  $options: {\n    sort: {\n      createdAt: -1\n    }\n  }\n}));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"reducers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/offers/reducers.js                                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Offers;\nmodule.link(\".\", {\n  default(v) {\n    Offers = v;\n  }\n\n}, 0);\nOffers.addReducers({\n  loanId: {\n    body: {\n      lender: {\n        loan: {\n          _id: 1\n        }\n      }\n    },\n    reduce: ({\n      lender: {\n        loan: {\n          _id: loanId\n        }\n      }\n    }) => loanId\n  },\n  organisation: {\n    body: {\n      lender: {\n        organisation: {\n          name: 1,\n          logo: 1\n        }\n      }\n    },\n    reduce: ({\n      lender: {\n        organisation\n      }\n    }) => organisation\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"organisations\":{\"server\":{\"OrganisationService.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/organisations/server/OrganisationService.js                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  OrganisationService: () => OrganisationService\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Organisations;\nmodule.link(\"../organisations\", {\n  default(v) {\n    Organisations = v;\n  }\n\n}, 1);\nlet CollectionService;\nmodule.link(\"../../helpers/CollectionService\", {\n  default(v) {\n    CollectionService = v;\n  }\n\n}, 2);\n\nclass OrganisationService extends CollectionService {\n  constructor() {\n    super(Organisations);\n  }\n\n  setCommissionRates({\n    commissionRates,\n    organisationId\n  }) {\n    if (commissionRates.length > 0) {\n      if (commissionRates[0].threshold !== 0) {\n        throw new Meteor.Error('Le premier seuil doit être 0');\n      }\n    }\n\n    commissionRates.forEach(({\n      rate,\n      threshold\n    }, i, arr) => {\n      if (i === 0) {\n        return;\n      }\n\n      const {\n        rate: previousRate,\n        threshold: previousThreshold\n      } = arr[i - 1];\n\n      if (previousRate >= rate) {\n        throw new Meteor.Error('Chaque taux doit être plus élevé que le précédent');\n      }\n\n      if (previousThreshold >= threshold) {\n        throw new Meteor.Error('Chaque seuil doit être plus élevé que le précédent');\n      }\n    });\n    return this._update({\n      id: organisationId,\n      object: {\n        commissionRates\n      }\n    });\n  }\n\n}\n\nmodule.exportDefault(new OrganisationService());\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"exposures.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/organisations/server/exposures.js                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet exposeQuery;\nmodule.link(\"../../queries/queryHelpers\", {\n  exposeQuery(v) {\n    exposeQuery = v;\n  }\n\n}, 1);\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 2);\nlet adminOrganisations, organisationSearch, proOrganisation, userOrganisations;\nmodule.link(\"../queries\", {\n  adminOrganisations(v) {\n    adminOrganisations = v;\n  },\n\n  organisationSearch(v) {\n    organisationSearch = v;\n  },\n\n  proOrganisation(v) {\n    proOrganisation = v;\n  },\n\n  userOrganisations(v) {\n    userOrganisations = v;\n  }\n\n}, 3);\n\nconst makeFilter = ({\n  param,\n  field,\n  filters\n}) => {\n  if (param && !(Array.isArray(param) && !param.length)) {\n    filters[field] = {\n      $in: Array.isArray(param) ? param : [param]\n    };\n  }\n};\n\nexposeQuery({\n  query: adminOrganisations,\n  overrides: {\n    validateParams: {\n      features: Match.Maybe(Match.OneOf(String, [String])),\n      tags: Match.Maybe(Match.OneOf(String, [String])),\n      type: Match.Maybe(Match.OneOf(String, [String])),\n      hasRules: Match.Maybe(Boolean)\n    },\n    embody: (body, params) => {\n      body.$filter = ({\n        filters,\n        params: {\n          features,\n          tags,\n          type,\n          _id,\n          hasRules\n        }\n      }) => {\n        if (_id) {\n          filters._id = _id;\n        }\n\n        if (hasRules) {\n          filters.lenderRulesCount = {\n            $gte: 1\n          };\n        }\n\n        makeFilter({\n          param: features,\n          field: 'features',\n          filters\n        });\n        makeFilter({\n          param: tags,\n          field: 'tags',\n          filters\n        });\n        makeFilter({\n          param: type,\n          field: 'type',\n          filters\n        });\n      };\n\n      body.$options = {\n        sort: {\n          name: 1\n        }\n      };\n    }\n  },\n  options: {\n    allowFilterById: true\n  }\n});\nexposeQuery({\n  query: organisationSearch,\n  overrides: {\n    firewall: () => {\n      SecurityService.checkCurrentUserIsAdmin();\n    },\n    validateParams: {\n      searchQuery: Match.Maybe(String)\n    }\n  }\n});\nexposeQuery({\n  query: proOrganisation,\n  overrides: {\n    firewall: userId => {\n      SecurityService.checkUserIsPro(userId);\n    },\n    validateParams: {\n      organisationId: String,\n      $body: Match.Maybe(Object)\n    },\n    embody: body => {\n      body.$filter = ({\n        filters,\n        params: {\n          organisationId\n        }\n      }) => {\n        filters._id = organisationId;\n      };\n    }\n  }\n});\nexposeQuery({\n  query: userOrganisations,\n  overrides: {\n    firewall: userId => {\n      SecurityService.checkUserLoggedIn(userId);\n    },\n    validateParams: {}\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"hooks.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/organisations/server/hooks.js                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet FileService;\nmodule.link(\"../../files/server/FileService\", {\n  default(v) {\n    FileService = v;\n  }\n\n}, 0);\nlet Organisations;\nmodule.link(\"../organisations\", {\n  default(v) {\n    Organisations = v;\n  }\n\n}, 1);\nOrganisations.after.remove((userId, {\n  _id\n}) => FileService.deleteAllFilesForDoc(_id));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/organisations/server/methods.js                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 0);\nlet organisationInsert, organisationUpdate, organisationRemove, addContactToOrgnaisation, addUserToOrganisation, removeUserFromOrganisation, setCommissionRates;\nmodule.link(\"../methodDefinitions\", {\n  organisationInsert(v) {\n    organisationInsert = v;\n  },\n\n  organisationUpdate(v) {\n    organisationUpdate = v;\n  },\n\n  organisationRemove(v) {\n    organisationRemove = v;\n  },\n\n  addContactToOrgnaisation(v) {\n    addContactToOrgnaisation = v;\n  },\n\n  addUserToOrganisation(v) {\n    addUserToOrganisation = v;\n  },\n\n  removeUserFromOrganisation(v) {\n    removeUserFromOrganisation = v;\n  },\n\n  setCommissionRates(v) {\n    setCommissionRates = v;\n  }\n\n}, 1);\nlet OrganisationService;\nmodule.link(\"./OrganisationService\", {\n  default(v) {\n    OrganisationService = v;\n  }\n\n}, 2);\norganisationInsert.setHandler((context, {\n  organisation\n}) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OrganisationService.insert(organisation);\n});\norganisationUpdate.setHandler((context, {\n  organisationId,\n  object\n}) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OrganisationService._update({\n    id: organisationId,\n    object\n  });\n});\norganisationRemove.setHandler((context, {\n  organisationId\n}) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OrganisationService.remove(organisationId);\n});\naddContactToOrgnaisation.setHandler((context, {\n  organisationId,\n  contactId,\n  metadata\n}) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OrganisationService.addLink({\n    id: organisationId,\n    linkName: 'contacts',\n    linkId: contactId,\n    metadata\n  });\n});\naddUserToOrganisation.setHandler((context, {\n  organisationId,\n  userId,\n  metadata\n}) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OrganisationService.addLink({\n    id: organisationId,\n    linkName: 'users',\n    linkId: userId,\n    metadata\n  });\n});\nremoveUserFromOrganisation.setHandler((context, {\n  organisationId,\n  userId\n}) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OrganisationService.removeLink({\n    id: organisationId,\n    linkName: 'users',\n    linkId: userId\n  });\n});\nsetCommissionRates.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OrganisationService.setCommissionRates(params);\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"serverReducers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/organisations/server/serverReducers.js                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Organisations;\nmodule.link(\"..\", {\n  default(v) {\n    Organisations = v;\n  }\n\n}, 0);\nlet RevenueService;\nmodule.link(\"../../revenues/server/RevenueService\", {\n  default(v) {\n    RevenueService = v;\n  }\n\n}, 1);\nlet getCurrentRate;\nmodule.link(\"../helpers\", {\n  getCurrentRate(v) {\n    getCurrentRate = v;\n  }\n\n}, 2);\nOrganisations.addReducers({\n  generatedRevenues: {\n    body: {\n      _id: 1\n    },\n    reduce: ({\n      _id: organisationId\n    }) => RevenueService.getGeneratedRevenues({\n      organisationId\n    })\n  },\n  commissionRate: {\n    body: {\n      commissionRates: 1\n    },\n    reduce: ({\n      commissionRates = [],\n      _id: organisationId\n    }) => {\n      let generatedRevenues = 0;\n\n      if (commissionRates.length > 1) {\n        generatedRevenues = RevenueService.getGeneratedRevenues({\n          organisationId\n        });\n      }\n\n      return getCurrentRate(commissionRates, generatedRevenues);\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"helpers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/organisations/helpers.js                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  getCurrentRate: () => getCurrentRate\n});\n\nconst getCurrentRate = (commissionRates, referredRevenues) => {\n  if (!commissionRates || commissionRates.length === 0) {\n    return 0;\n  }\n\n  if (commissionRates.length === 1) {\n    return commissionRates[0].rate;\n  }\n\n  let index = 0;\n  commissionRates.some(({\n    threshold\n  }, i) => {\n    if (threshold > referredRevenues) {\n      index = i - 1;\n      return true;\n    }\n\n    index = i;\n    return false;\n  });\n  return commissionRates[index].rate;\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/organisations/index.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./organisations\", {\n  default: \"default\"\n}, 0);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"links.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/organisations/links.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet LinkInitializer;\nmodule.link(\"../links/LinkInitializer\", {\n  default(v) {\n    LinkInitializer = v;\n  }\n\n}, 0);\nlet Contacts, Lenders, Users, LenderRules, Revenues, Tasks;\nmodule.link(\"..\", {\n  Contacts(v) {\n    Contacts = v;\n  },\n\n  Lenders(v) {\n    Lenders = v;\n  },\n\n  Users(v) {\n    Users = v;\n  },\n\n  LenderRules(v) {\n    LenderRules = v;\n  },\n\n  Revenues(v) {\n    Revenues = v;\n  },\n\n  Tasks(v) {\n    Tasks = v;\n  }\n\n}, 1);\nlet Organisations;\nmodule.link(\"./organisations\", {\n  default(v) {\n    Organisations = v;\n  }\n\n}, 2);\nOrganisations.addLinks({\n  contacts: {\n    collection: Contacts,\n    field: 'contactIds',\n    type: 'many',\n    metadata: true\n  },\n  lenders: {\n    collection: Lenders,\n    inversedBy: 'organisation'\n  },\n  users: {\n    collection: Users,\n    field: 'userLinks',\n    type: 'many',\n    metadata: true\n  },\n  lenderRules: {\n    collection: LenderRules,\n    inversedBy: 'organisation',\n    autoremove: true\n  },\n  referredCustomers: {\n    collection: Users,\n    inversedBy: 'referredByOrganisation',\n    type: 'many'\n  },\n  revenues: {\n    collection: Revenues,\n    inversedBy: 'organisations',\n    type: 'many'\n  },\n  tasks: {\n    inversedBy: 'organisation',\n    collection: Tasks,\n    autoremove: true\n  }\n});\nLinkInitializer.inversedInit(() => {\n  Organisations.addLinks({\n    sourceOfRevenues: {\n      collection: Revenues,\n      inversedBy: 'organisations'\n    }\n  });\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methodDefinitions.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/organisations/methodDefinitions.js                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  organisationInsert: () => organisationInsert,\n  organisationUpdate: () => organisationUpdate,\n  organisationRemove: () => organisationRemove,\n  addContactToOrgnaisation: () => addContactToOrgnaisation,\n  addUserToOrganisation: () => addUserToOrganisation,\n  removeUserFromOrganisation: () => removeUserFromOrganisation,\n  setCommissionRates: () => setCommissionRates\n});\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet Method;\nmodule.link(\"../methods/methods\", {\n  Method(v) {\n    Method = v;\n  }\n\n}, 1);\nconst organisationInsert = new Method({\n  name: 'organisationInsert',\n  params: {\n    organisation: Object\n  }\n});\nconst organisationUpdate = new Method({\n  name: 'organisationUpdate',\n  params: {\n    organisationId: String,\n    object: Object\n  }\n});\nconst organisationRemove = new Method({\n  name: 'organisationRemove',\n  params: {\n    organisationId: String\n  }\n});\nconst addContactToOrgnaisation = new Method({\n  name: 'addContactToOrganisation',\n  params: {\n    organisationId: String,\n    contactId: String,\n    metadata: Object\n  }\n});\nconst addUserToOrganisation = new Method({\n  name: 'addUserToOrganisation',\n  params: {\n    organisationId: String,\n    userId: String,\n    metadata: Object\n  }\n});\nconst removeUserFromOrganisation = new Method({\n  name: 'removeUserFromOrganisation',\n  params: {\n    organisationId: String,\n    userId: String\n  }\n});\nconst setCommissionRates = new Method({\n  name: 'setCommissionRates',\n  params: {\n    organisationId: String,\n    commissionRates: Array\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"organisationConstants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/organisations/organisationConstants.js                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  ORGANISATIONS_COLLECTION: () => ORGANISATIONS_COLLECTION,\n  ORGANISATION_TYPES: () => ORGANISATION_TYPES,\n  ORGANISATION_QUERIES: () => ORGANISATION_QUERIES,\n  ORGANISATION_FEATURES: () => ORGANISATION_FEATURES,\n  ORGANISATION_TAGS: () => ORGANISATION_TAGS\n});\nconst ORGANISATIONS_COLLECTION = 'organisations';\nconst ORGANISATION_TYPES = {\n  BANK: 'BANK',\n  INSURANCE: 'INSURANCE',\n  PRIVATE_BANK: 'PRIVATE_BANK',\n  REAL_ESTATE_BROKER: 'REAL_ESTATE_BROKER',\n  NOTARY_OFFICE: 'NOTARY_OFFICE',\n  CONSTRUCTION_COMPANY: 'CONSTRUCTION_COMPANY',\n  DEVELOPER: 'DEVELOPER',\n  ARCHITECT: 'ARCHITECT',\n  OTHER: 'OTHER'\n};\nconst ORGANISATION_QUERIES = {\n  ADMIN_ORGANISATIONS: 'ADMIN_ORGANISATIONS',\n  FILES: 'FILES',\n  ORGANISATION_SEARCH: 'ORGANISATION_SEARCH',\n  PRO_ORGANISATION: 'PRO_ORGANISATION',\n  USER_ORGANISATIONS: 'USER_ORGANISATIONS'\n};\nconst ORGANISATION_FEATURES = {\n  LENDER: 'LENDER',\n  PRO: 'PRO'\n};\nconst ORGANISATION_TAGS = {\n  CH_PREMIUM: 'CH_PREMIUM',\n  CH_RETAIL: 'CH_RETAIL',\n  FR_RETAIL: 'FR_RETAIL',\n  FR_PREMIUM: 'FR_PREMIUM',\n  YACHTING: 'YACHTING',\n  HELICOPTERS_LEASING: 'HELICOPTERS_LEASING',\n  LBO: 'LBO'\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"organisations.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/organisations/organisations.js                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  OrganisationSchema: () => OrganisationSchema\n});\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 1);\nlet address, percentageField, moneyField, documentsField;\nmodule.link(\"../helpers/sharedSchemas\", {\n  address(v) {\n    address = v;\n  },\n\n  percentageField(v) {\n    percentageField = v;\n  },\n\n  moneyField(v) {\n    moneyField = v;\n  },\n\n  documentsField(v) {\n    documentsField = v;\n  }\n\n}, 2);\nlet ORGANISATIONS_COLLECTION, ORGANISATION_TYPES, ORGANISATION_FEATURES, ORGANISATION_TAGS;\nmodule.link(\"./organisationConstants\", {\n  ORGANISATIONS_COLLECTION(v) {\n    ORGANISATIONS_COLLECTION = v;\n  },\n\n  ORGANISATION_TYPES(v) {\n    ORGANISATION_TYPES = v;\n  },\n\n  ORGANISATION_FEATURES(v) {\n    ORGANISATION_FEATURES = v;\n  },\n\n  ORGANISATION_TAGS(v) {\n    ORGANISATION_TAGS = v;\n  }\n\n}, 3);\n// console.trace();\nconst Organisations = new Mongo.Collection(ORGANISATIONS_COLLECTION);\nOrganisations.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true\n});\nOrganisations.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false\n});\nconst OrganisationSchema = new SimpleSchema((0, _objectSpread2.default)({\n  name: {\n    type: String,\n    uniforms: {\n      placeholder: 'Crédit Suisse'\n    },\n    unique: true\n  },\n  type: {\n    type: String,\n    allowedValues: Object.values(ORGANISATION_TYPES),\n    uniforms: {\n      displayEmpty: false\n    }\n  },\n  features: {\n    type: Array,\n    optional: true,\n    defaultValue: [],\n    uniforms: {\n      placeholder: null\n    }\n  },\n  'features.$': {\n    type: String,\n    allowedValues: Object.values(ORGANISATION_FEATURES)\n  },\n  logo: {\n    type: String,\n    optional: true\n  }\n}, address, {\n  contactIds: {\n    type: Array,\n    defaultValue: []\n  },\n  'contactIds.$': Object,\n  'contactIds.$._id': {\n    type: String,\n    optional: true\n  },\n  'contactIds.$.title': {\n    type: String,\n    optional: true\n  },\n  'contactIds.$.useSameAddress': {\n    type: Boolean,\n    optional: true\n  },\n  tags: {\n    type: Array,\n    optional: true,\n    defaultValue: [],\n    uniforms: {\n      placeholder: null\n    }\n  },\n  'tags.$': {\n    type: String,\n    allowedValues: Object.values(ORGANISATION_TAGS)\n  },\n  userLinks: {\n    type: Array,\n    defaultValue: []\n  },\n  'userLinks.$': Object,\n  'userLinks.$._id': {\n    type: String,\n    optional: true\n  },\n  'userLinks.$.title': {\n    type: String,\n    optional: true\n  },\n  'userLinks.$.isMain': {\n    type: Boolean,\n    optional: true\n  },\n  'userLinks.$.shareCustomers': {\n    type: Boolean,\n    optional: true\n  },\n  commissionRates: {\n    type: Array,\n    defaultValue: []\n  },\n  'commissionRates.$': Object,\n  'commissionRates.$.rate': percentageField,\n  'commissionRates.$.threshold': moneyField,\n  documents: documentsField,\n  lenderRulesCount: {\n    type: Number,\n    optional: true\n  }\n}));\nOrganisations.attachSchema(OrganisationSchema);\nmodule.exportDefault(Organisations);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"queries.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/organisations/queries.js                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  adminOrganisations: () => adminOrganisations,\n  organisationSearch: () => organisationSearch,\n  proOrganisation: () => proOrganisation,\n  userOrganisations: () => userOrganisations\n});\nlet createSearchFilters;\nmodule.link(\"../helpers\", {\n  createSearchFilters(v) {\n    createSearchFilters = v;\n  }\n\n}, 0);\nlet fullOrganisation, userOrganisation;\nmodule.link(\"../fragments\", {\n  fullOrganisation(v) {\n    fullOrganisation = v;\n  },\n\n  userOrganisation(v) {\n    userOrganisation = v;\n  }\n\n}, 1);\nlet ORGANISATION_QUERIES, ORGANISATION_FEATURES;\nmodule.link(\"./organisationConstants\", {\n  ORGANISATION_QUERIES(v) {\n    ORGANISATION_QUERIES = v;\n  },\n\n  ORGANISATION_FEATURES(v) {\n    ORGANISATION_FEATURES = v;\n  }\n\n}, 2);\nlet Organisations;\nmodule.link(\".\", {\n  default(v) {\n    Organisations = v;\n  }\n\n}, 3);\nconst adminOrganisations = Organisations.createQuery(ORGANISATION_QUERIES.ADMIN_ORGANISATIONS, fullOrganisation(), {\n  scoped: true\n});\nconst organisationSearch = Organisations.createQuery(ORGANISATION_QUERIES.ORGANISATION_SEARCH, {\n  $filter({\n    filters,\n    params: {\n      searchQuery\n    }\n  }) {\n    Object.assign(filters, createSearchFilters(['name', '_id', 'type'], searchQuery));\n  },\n\n  name: 1,\n  $options: {\n    sort: {\n      name: 1\n    },\n    limit: 5\n  }\n});\nconst proOrganisation = Organisations.createQuery(ORGANISATION_QUERIES.PRO_ORGANISATION, fullOrganisation());\nconst userOrganisations = Organisations.createQuery(ORGANISATION_QUERIES.USER_ORGANISATIONS, (0, _objectSpread2.default)({\n  $filter({\n    filters\n  }) {\n    filters.features = {\n      $in: [ORGANISATION_FEATURES.LENDER]\n    };\n  },\n\n  $options: {\n    sort: {\n      name: 1\n    }\n  }\n}, userOrganisation()));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"reducers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/organisations/reducers.js                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet addressReducer;\nmodule.link(\"../reducers/addressReducer\", {\n  default(v) {\n    addressReducer = v;\n  }\n\n}, 0);\nlet Organisations;\nmodule.link(\"./organisations\", {\n  default(v) {\n    Organisations = v;\n  }\n\n}, 1);\nlet fullOffer;\nmodule.link(\"../fragments\", {\n  fullOffer(v) {\n    fullOffer = v;\n  }\n\n}, 2);\nOrganisations.addReducers((0, _objectSpread2.default)({}, addressReducer, {\n  offers: {\n    body: {\n      lenders: {\n        offers: fullOffer()\n      }\n    },\n    reduce: ({\n      lenders = []\n    }) => lenders.reduce((allOffers, {\n      offers = []\n    }) => [...allOffers, ...offers], [])\n  },\n  offerCount: {\n    body: {\n      lenders: {\n        offers: {\n          _id: 1\n        }\n      }\n    },\n    reduce: ({\n      lenders = []\n    }) => lenders.reduce((tot, {\n      offers = []\n    }) => tot + offers.length, 0)\n  }\n}));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"promotionLots\":{\"schemas\":{\"PromotionLotSchema.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotionLots/schemas/PromotionLotSchema.js                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 0);\nlet PROMOTION_LOT_STATUS;\nmodule.link(\"../promotionLotConstants\", {\n  PROMOTION_LOT_STATUS(v) {\n    PROMOTION_LOT_STATUS = v;\n  }\n\n}, 1);\nlet createdAt, updatedAt;\nmodule.link(\"../../helpers/sharedSchemas\", {\n  createdAt(v) {\n    createdAt = v;\n  },\n\n  updatedAt(v) {\n    updatedAt = v;\n  }\n\n}, 2);\nconst PromotionLotSchema = new SimpleSchema({\n  createdAt,\n  updatedAt,\n  status: {\n    type: String,\n    allowedValues: Object.values(PROMOTION_LOT_STATUS),\n    defaultValue: PROMOTION_LOT_STATUS.AVAILABLE\n  },\n  propertyLinks: {\n    type: Array,\n    minCount: 1,\n    maxCount: 1\n  },\n  'propertyLinks.$': Object,\n  'propertyLinks.$._id': {\n    type: String,\n    optional: true\n  },\n  lotLinks: {\n    type: Array,\n    defaultValue: []\n  },\n  'lotLinks.$': Object,\n  'lotLinks.$._id': {\n    type: String,\n    optional: true\n  },\n  attributedToLink: {\n    type: Object,\n    optional: true\n  },\n  'attributedToLink._id': {\n    type: String,\n    optional: true\n  }\n});\nmodule.exportDefault(PromotionLotSchema);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"PromotionLotService.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotionLots/server/PromotionLotService.js                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nmodule.export({\n  PromotionLotService: () => PromotionLotService\n});\nlet CollectionService;\nmodule.link(\"../../helpers/CollectionService\", {\n  default(v) {\n    CollectionService = v;\n  }\n\n}, 0);\nlet PromotionLots;\nmodule.link(\"../promotionLots\", {\n  default(v) {\n    PromotionLots = v;\n  }\n\n}, 1);\nlet PROMOTION_LOT_STATUS;\nmodule.link(\"../promotionLotConstants\", {\n  PROMOTION_LOT_STATUS(v) {\n    PROMOTION_LOT_STATUS = v;\n  }\n\n}, 2);\n\nclass PromotionLotService extends CollectionService {\n  constructor() {\n    super(PromotionLots);\n  }\n\n  update(_ref) {\n    let {\n      promotionLotId\n    } = _ref,\n        rest = (0, _objectWithoutProperties2.default)(_ref, [\"promotionLotId\"]);\n    return this._update((0, _objectSpread2.default)({\n      id: promotionLotId\n    }, rest));\n  }\n\n  addLotToPromotionLot({\n    promotionLotId,\n    lotId\n  }) {\n    return this.addLink({\n      id: promotionLotId,\n      linkName: 'lots',\n      linkId: lotId\n    });\n  }\n\n  removeLotLink({\n    promotionLotId,\n    lotId\n  }) {\n    return this.removeLink({\n      id: promotionLotId,\n      linkName: 'lots',\n      linkId: lotId\n    });\n  }\n\n  bookPromotionLot({\n    promotionLotId,\n    loanId\n  }) {\n    this.update({\n      promotionLotId,\n      object: {\n        status: PROMOTION_LOT_STATUS.BOOKED\n      }\n    });\n    return this.addLink({\n      id: promotionLotId,\n      linkName: 'attributedTo',\n      linkId: loanId\n    });\n  }\n\n  cancelPromotionLotBooking({\n    promotionLotId\n  }) {\n    this.update({\n      promotionLotId,\n      object: {\n        status: PROMOTION_LOT_STATUS.AVAILABLE\n      }\n    });\n    return this.removeLink({\n      id: promotionLotId,\n      linkName: 'attributedTo'\n    });\n  }\n\n  sellPromotionLot({\n    promotionLotId\n  }) {\n    return this.update({\n      promotionLotId,\n      object: {\n        status: PROMOTION_LOT_STATUS.SOLD\n      }\n    });\n  }\n\n}\n\nmodule.exportDefault(new PromotionLotService());\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"exposures.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotionLots/server/exposures.js                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet exposeQuery;\nmodule.link(\"../../queries/queryHelpers\", {\n  exposeQuery(v) {\n    exposeQuery = v;\n  }\n\n}, 0);\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 1);\nlet appPromotionLot, proPromotionLot;\nmodule.link(\"../queries\", {\n  appPromotionLot(v) {\n    appPromotionLot = v;\n  },\n\n  proPromotionLot(v) {\n    proPromotionLot = v;\n  }\n\n}, 2);\nlet proPromotionLotResolver;\nmodule.link(\"./resolvers\", {\n  proPromotionLotResolver(v) {\n    proPromotionLotResolver = v;\n  }\n\n}, 3);\nexposeQuery({\n  query: appPromotionLot,\n  overrides: {\n    firewall(userId, {\n      promotionLotId\n    }) {\n      SecurityService.promotions.hasAccessToPromotionLot({\n        promotionLotId,\n        userId\n      });\n    },\n\n    validateParams: {\n      promotionLotId: String\n    }\n  }\n});\nexposeQuery({\n  query: proPromotionLot,\n  overrides: {\n    firewall(userId, params) {\n      const {\n        promotionLotId\n      } = params;\n      params.userId = userId;\n      SecurityService.checkUserIsPro(userId);\n      SecurityService.promotions.isAllowedToViewPromotionLot({\n        promotionLotId,\n        userId\n      });\n    },\n\n    validateParams: {\n      promotionLotId: String,\n      userId: String\n    }\n  },\n  resolver: proPromotionLotResolver\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotionLots/server/methods.js                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 0);\nlet PromotionLotService;\nmodule.link(\"./PromotionLotService\", {\n  default(v) {\n    PromotionLotService = v;\n  }\n\n}, 1);\nlet promotionLotInsert, promotionLotUpdate, promotionLotRemove, addLotToPromotionLot, removeLotLink, bookPromotionLot, cancelPromotionLotBooking, sellPromotionLot;\nmodule.link(\"../methodDefinitions\", {\n  promotionLotInsert(v) {\n    promotionLotInsert = v;\n  },\n\n  promotionLotUpdate(v) {\n    promotionLotUpdate = v;\n  },\n\n  promotionLotRemove(v) {\n    promotionLotRemove = v;\n  },\n\n  addLotToPromotionLot(v) {\n    addLotToPromotionLot = v;\n  },\n\n  removeLotLink(v) {\n    removeLotLink = v;\n  },\n\n  bookPromotionLot(v) {\n    bookPromotionLot = v;\n  },\n\n  cancelPromotionLotBooking(v) {\n    cancelPromotionLotBooking = v;\n  },\n\n  sellPromotionLot(v) {\n    sellPromotionLot = v;\n  }\n\n}, 2);\npromotionLotInsert.setHandler(({\n  userId\n}, {\n  promotionLot,\n  promotionId\n}) => {\n  SecurityService.promotions.isAllowedToAddLots({\n    promotionId,\n    userId\n  });\n  return PromotionLotService.insert({\n    promotionLot,\n    promotionId\n  });\n});\npromotionLotUpdate.setHandler(({\n  userId\n}, {\n  promotionLotId,\n  object\n}) => {\n  SecurityService.promotions.isAllowedToModifyPromotionLot({\n    promotionLotId,\n    userId\n  });\n  return PromotionLotService.update({\n    promotionLotId,\n    object\n  });\n});\npromotionLotRemove.setHandler(({\n  userId\n}, {\n  promotionLotId\n}) => {\n  SecurityService.promotions.isAllowedToRemovePromotionLot({\n    promotionLotId,\n    userId\n  });\n  return PromotionLotService.remove(promotionLotId);\n});\naddLotToPromotionLot.setHandler(({\n  userId\n}, params) => {\n  SecurityService.promotions.isAllowedToModifyPromotionLot((0, _objectSpread2.default)({}, params, {\n    userId\n  }));\n  return PromotionLotService.addLotToPromotionLot(params);\n});\nremoveLotLink.setHandler(({\n  userId\n}, params) => {\n  SecurityService.promotions.isAllowedToModifyPromotionLot((0, _objectSpread2.default)({}, params, {\n    userId\n  }));\n  return PromotionLotService.removeLotLink(params);\n});\nbookPromotionLot.setHandler(({\n  userId\n}, params) => {\n  const {\n    promotionLotId,\n    loanId\n  } = params;\n  SecurityService.promotions.isAllowedToBookLotToCustomer({\n    promotionLotId,\n    loanId,\n    userId\n  });\n  return PromotionLotService.bookPromotionLot(params);\n});\ncancelPromotionLotBooking.setHandler(({\n  userId\n}, params) => {\n  const {\n    promotionLotId\n  } = params;\n  SecurityService.promotions.isAllowedToCancelLotBooking({\n    promotionLotId,\n    userId\n  });\n  return PromotionLotService.cancelPromotionLotBooking(params);\n});\nsellPromotionLot.setHandler(({\n  userId\n}, params) => {\n  const {\n    promotionLotId\n  } = params;\n  SecurityService.promotions.isAllowedToSellLotToCustomer({\n    promotionLotId,\n    userId\n  });\n  return PromotionLotService.sellPromotionLot(params);\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"resolvers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotionLots/server/resolvers.js                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  proPromotionLotResolver: () => proPromotionLotResolver\n});\nlet makePromotionLotAnonymizer;\nmodule.link(\"../../promotions/server/promotionServerHelpers\", {\n  makePromotionLotAnonymizer(v) {\n    makePromotionLotAnonymizer = v;\n  }\n\n}, 0);\nlet proPromotionLotFragment;\nmodule.link(\"../../fragments\", {\n  proPromotionLot(v) {\n    proPromotionLotFragment = v;\n  }\n\n}, 1);\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 2);\nlet PromotionLotService;\nmodule.link(\"./PromotionLotService\", {\n  default(v) {\n    PromotionLotService = v;\n  }\n\n}, 3);\n\nconst proPromotionLotResolver = ({\n  userId,\n  promotionLotId\n}) => {\n  const promotionLot = PromotionLotService.fetchOne((0, _objectSpread2.default)({\n    $filters: {\n      _id: promotionLotId\n    }\n  }, proPromotionLotFragment()));\n\n  try {\n    SecurityService.checkCurrentUserIsAdmin(userId);\n    return [promotionLot];\n  } catch (error) {\n    return [promotionLot].map(makePromotionLotAnonymizer({\n      userId\n    }));\n  }\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"serverReducers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotionLots/server/serverReducers.js                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet PromotionLots;\nmodule.link(\"../promotionLots\", {\n  default(v) {\n    PromotionLots = v;\n  }\n\n}, 0);\nlet assigneeReducer;\nmodule.link(\"../../reducers/assigneeReducer\", {\n  default(v) {\n    assigneeReducer = v;\n  }\n\n}, 1);\nPromotionLots.addReducers((0, _objectSpread2.default)({}, assigneeReducer()));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotionLots/index.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./methodDefinitions\", {\n  \"*\": \"*\"\n}, 0);\nmodule.link(\"./promotionLots\", {\n  default: \"default\"\n}, 1);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"links.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotionLots/links.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet PromotionLots;\nmodule.link(\".\", {\n  default(v) {\n    PromotionLots = v;\n  }\n\n}, 0);\nlet Promotions, Properties, Lots, PromotionOptions, Loans;\nmodule.link(\"..\", {\n  Promotions(v) {\n    Promotions = v;\n  },\n\n  Properties(v) {\n    Properties = v;\n  },\n\n  Lots(v) {\n    Lots = v;\n  },\n\n  PromotionOptions(v) {\n    PromotionOptions = v;\n  },\n\n  Loans(v) {\n    Loans = v;\n  }\n\n}, 1);\nPromotionLots.addLinks({\n  promotion: {\n    collection: Promotions,\n    inversedBy: 'promotionLots'\n  },\n  properties: {\n    collection: Properties,\n    field: 'propertyLinks',\n    type: 'many',\n    metadata: true\n  },\n  lots: {\n    collection: Lots,\n    field: 'lotLinks',\n    type: 'many',\n    metadata: true\n  },\n  promotionOptions: {\n    collection: PromotionOptions,\n    inversedBy: 'promotionLots',\n    autoremove: true\n  },\n  attributedTo: {\n    collection: Loans,\n    field: 'attributedToLink',\n    type: 'one',\n    metadata: true\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methodDefinitions.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotionLots/methodDefinitions.js                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  promotionLotInsert: () => promotionLotInsert,\n  promotionLotUpdate: () => promotionLotUpdate,\n  promotionLotRemove: () => promotionLotRemove,\n  addLotToPromotionLot: () => addLotToPromotionLot,\n  removeLotLink: () => removeLotLink,\n  bookPromotionLot: () => bookPromotionLot,\n  cancelPromotionLotBooking: () => cancelPromotionLotBooking,\n  sellPromotionLot: () => sellPromotionLot\n});\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet Method;\nmodule.link(\"../methods/methods\", {\n  Method(v) {\n    Method = v;\n  }\n\n}, 1);\nconst promotionLotInsert = new Method({\n  name: 'promotionLotInsert',\n  params: {\n    promotionLot: Object,\n    promotionId: String\n  }\n});\nconst promotionLotUpdate = new Method({\n  name: 'promotionLotUpdate',\n  params: {\n    promotionLotId: String,\n    object: Object\n  }\n});\nconst promotionLotRemove = new Method({\n  name: 'promotionLotRemove',\n  params: {\n    promotionLotId: String\n  }\n});\nconst addLotToPromotionLot = new Method({\n  name: 'addLotToPromotionLot',\n  params: {\n    promotionLotId: String,\n    lotId: String\n  }\n});\nconst removeLotLink = new Method({\n  name: 'removeLotLink',\n  params: {\n    promotionLotId: String,\n    lotId: String\n  }\n});\nconst bookPromotionLot = new Method({\n  name: 'bookPromotionLot',\n  params: {\n    promotionLotId: String,\n    loanId: String\n  }\n});\nconst cancelPromotionLotBooking = new Method({\n  name: 'cancelPromotionLotBooking',\n  params: {\n    promotionLotId: String\n  }\n});\nconst sellPromotionLot = new Method({\n  name: 'sellPromotionLot',\n  params: {\n    promotionLotId: String\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"promotionLotConstants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotionLots/promotionLotConstants.js                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  PROMOTION_LOTS_COLLECTION: () => PROMOTION_LOTS_COLLECTION,\n  PROMOTION_LOT_STATUS: () => PROMOTION_LOT_STATUS,\n  PROMOTION_LOT_REDUCED_STATUS: () => PROMOTION_LOT_REDUCED_STATUS,\n  PROMOTION_LOT_QUERIES: () => PROMOTION_LOT_QUERIES\n});\nconst PROMOTION_LOTS_COLLECTION = 'promotionLots';\nconst PROMOTION_LOT_STATUS = {\n  AVAILABLE: 'AVAILABLE',\n  BOOKED: 'BOOKED',\n  SOLD: 'SOLD'\n};\nconst PROMOTION_LOT_REDUCED_STATUS = {\n  BOOKED_FOR_ME: 'BOOKED_FOR_ME',\n  NOT_AVAILABLE: 'NOT_AVAILABLE',\n  SOLD_TO_ME: 'SOLD_TO_ME'\n};\nconst PROMOTION_LOT_QUERIES = {\n  APP_PROMOTION_LOT: 'APP_PROMOTION_LOT',\n  PRO_PROMOTION_LOT: 'PRO_PROMOTION_LOT',\n  PROMOTION_LOT_FILES: 'PROMOTION_LOT_FILES'\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"promotionLots.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotionLots/promotionLots.js                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet PromotionLotSchema;\nmodule.link(\"./schemas/PromotionLotSchema\", {\n  default(v) {\n    PromotionLotSchema = v;\n  }\n\n}, 1);\nlet PROMOTION_LOTS_COLLECTION;\nmodule.link(\"./promotionLotConstants\", {\n  PROMOTION_LOTS_COLLECTION(v) {\n    PROMOTION_LOTS_COLLECTION = v;\n  }\n\n}, 2);\nconst PromotionLots = new Mongo.Collection(PROMOTION_LOTS_COLLECTION);\nPromotionLots.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true\n});\nPromotionLots.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false\n});\nPromotionLots.attachSchema(PromotionLotSchema);\nmodule.exportDefault(PromotionLots);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"queries.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotionLots/queries.js                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  appPromotionLot: () => appPromotionLot,\n  proPromotionLot: () => proPromotionLot\n});\nlet appPromotionLotFragment;\nmodule.link(\"../fragments\", {\n  appPromotionLot(v) {\n    appPromotionLotFragment = v;\n  }\n\n}, 0);\nlet PROMOTION_LOT_QUERIES;\nmodule.link(\"./promotionLotConstants\", {\n  PROMOTION_LOT_QUERIES(v) {\n    PROMOTION_LOT_QUERIES = v;\n  }\n\n}, 1);\nlet PromotionLots;\nmodule.link(\".\", {\n  default(v) {\n    PromotionLots = v;\n  }\n\n}, 2);\nconst appPromotionLot = PromotionLots.createQuery(PROMOTION_LOT_QUERIES.APP_PROMOTION_LOT, (0, _objectSpread2.default)({\n  $filter({\n    filters,\n    params: {\n      promotionLotId\n    }\n  }) {\n    filters._id = promotionLotId;\n  }\n\n}, appPromotionLotFragment()));\nconst proPromotionLot = PromotionLots.createQuery(PROMOTION_LOT_QUERIES.PRO_PROMOTION_LOT, () => {});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"reducers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotionLots/reducers.js                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet PROMOTION_LOT_STATUS, PROMOTION_LOT_REDUCED_STATUS;\nmodule.link(\"../constants\", {\n  PROMOTION_LOT_STATUS(v) {\n    PROMOTION_LOT_STATUS = v;\n  },\n\n  PROMOTION_LOT_REDUCED_STATUS(v) {\n    PROMOTION_LOT_REDUCED_STATUS = v;\n  }\n\n}, 1);\nlet PromotionLots;\nmodule.link(\"./promotionLots\", {\n  default(v) {\n    PromotionLots = v;\n  }\n\n}, 2);\nPromotionLots.addReducers({\n  name: {\n    body: {\n      properties: {\n        name: 1\n      }\n    },\n    reduce: ({\n      properties\n    }) => properties && properties[0] && properties[0].name\n  },\n  documents: {\n    body: {\n      properties: {\n        documents: 1\n      }\n    },\n    reduce: ({\n      properties\n    }) => properties && properties[0] && properties[0].documents\n  },\n  value: {\n    body: {\n      properties: {\n        totalValue: 1\n      },\n      lots: {\n        value: 1\n      }\n    },\n    reduce: ({\n      properties,\n      lots\n    }) => {\n      // Sometimes, lots are undefined........ fuck me\n      const propertiesValue = properties.reduce((total, {\n        totalValue\n      }) => total + totalValue, 0);\n      const lotsValue = lots ? lots.reduce((total, {\n        value\n      }) => total + value, 0) : 0;\n      return propertiesValue + lotsValue;\n    }\n  },\n  reducedStatus: {\n    body: {\n      status: 1,\n      attributedTo: {\n        user: {\n          _id: 1\n        }\n      }\n    },\n    reduce: ({\n      status,\n      attributedTo\n    }) => {\n      if (attributedTo && attributedTo.user && attributedTo.user._id === Meteor.userId()) {\n        switch (status) {\n          case PROMOTION_LOT_STATUS.BOOKED:\n            return PROMOTION_LOT_REDUCED_STATUS.BOOKED_FOR_ME;\n\n          case PROMOTION_LOT_STATUS.SOLD:\n            return PROMOTION_LOT_REDUCED_STATUS.SOLD_TO_ME;\n\n          default:\n            return status;\n        }\n      }\n\n      if (status === PROMOTION_LOT_STATUS.BOOKED) {\n        return PROMOTION_LOT_REDUCED_STATUS.NOT_AVAILABLE;\n      }\n\n      return status;\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"promotionOptions\":{\"schemas\":{\"PromotionOptionSchema.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotionOptions/schemas/PromotionOptionSchema.js                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 0);\nlet createdAt, updatedAt;\nmodule.link(\"../../helpers/sharedSchemas\", {\n  createdAt(v) {\n    createdAt = v;\n  },\n\n  updatedAt(v) {\n    updatedAt = v;\n  }\n\n}, 1);\nlet PROMOTION_OPTION_SOLVENCY;\nmodule.link(\"../promotionOptionConstants\", {\n  PROMOTION_OPTION_SOLVENCY(v) {\n    PROMOTION_OPTION_SOLVENCY = v;\n  }\n\n}, 2);\nconst PromotionOptionSchema = new SimpleSchema({\n  createdAt,\n  updatedAt,\n  promotionLotLinks: {\n    type: Array,\n    defaultValue: []\n  },\n  'promotionLotLinks.$': Object,\n  'promotionLotLinks.$._id': {\n    type: String,\n    optional: true\n  },\n  lotLinks: {\n    type: Array,\n    optional: true\n  },\n  'lotLinks.$': Object,\n  'lotLinks.$._id': {\n    type: String,\n    optional: true\n  },\n  custom: {\n    type: String,\n    optional: true\n  },\n  solvency: {\n    type: String,\n    allowedValues: Object.values(PROMOTION_OPTION_SOLVENCY),\n    defaultValue: PROMOTION_OPTION_SOLVENCY.UNDETERMINED,\n    uniforms: {\n      displayEmpty: false\n    }\n  }\n});\nmodule.exportDefault(PromotionOptionSchema);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"PromotionOptionService.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotionOptions/server/PromotionOptionService.js                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nmodule.export({\n  PromotionOptionService: () => PromotionOptionService\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet LoanService;\nmodule.link(\"../../loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 1);\nlet CollectionService;\nmodule.link(\"../../helpers/CollectionService\", {\n  default(v) {\n    CollectionService = v;\n  }\n\n}, 2);\nlet fullPromotionOption;\nmodule.link(\"../../fragments\", {\n  fullPromotionOption(v) {\n    fullPromotionOption = v;\n  }\n\n}, 3);\nlet PromotionOptions;\nmodule.link(\"../promotionOptions\", {\n  default(v) {\n    PromotionOptions = v;\n  }\n\n}, 4);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass PromotionOptionService extends CollectionService {\n  constructor() {\n    super(PromotionOptions);\n\n    _defineProperty(this, \"insert\", ({\n      promotionLotId,\n      loanId\n    }) => {\n      const {\n        promotionOptions\n      } = LoanService.fetchOne({\n        $filters: {\n          _id: loanId\n        },\n        promotionOptions: {\n          _id: 1,\n          promotionLots: {\n            _id: 1\n          }\n        }\n      });\n      const existingPromotionOption = promotionOptions && promotionOptions.find(({\n        promotionLots\n      }) => promotionLots && promotionLots.some(lot => lot._id === promotionLotId));\n\n      if (existingPromotionOption) {\n        throw new Meteor.Error('Vous avez déjà choisi ce lot. Essayez de rafraîchir la page.');\n      }\n\n      const promotionOptionId = super.insert({\n        promotionLotLinks: [{\n          _id: promotionLotId\n        }]\n      });\n      LoanService.addLink({\n        id: loanId,\n        linkName: 'promotionOptions',\n        linkId: promotionOptionId\n      });\n\n      const promotionId = this.getPromotion(promotionOptionId)._id;\n\n      const priorityOrder = LoanService.getPromotionPriorityOrder({\n        loanId,\n        promotionId\n      });\n      LoanService.setPromotionPriorityOrder({\n        loanId,\n        promotionId,\n        priorityOrder: [...priorityOrder, promotionOptionId]\n      });\n      return promotionOptionId;\n    });\n\n    _defineProperty(this, \"update\", (_ref) => {\n      let {\n        promotionOptionId\n      } = _ref,\n          rest = (0, _objectWithoutProperties2.default)(_ref, [\"promotionOptionId\"]);\n      return this._update((0, _objectSpread2.default)({\n        id: promotionOptionId\n      }, rest));\n    });\n  }\n\n  get(promotionOptionId) {\n    return this.collection.createQuery((0, _objectSpread2.default)({\n      $filters: {\n        _id: promotionOptionId\n      }\n    }, fullPromotionOption())).fetchOne();\n  }\n\n  getPromotion(promotionOptionId) {\n    const promotionOption = this.fetchOne({\n      $filters: {\n        _id: promotionOptionId\n      },\n      promotionLots: {\n        promotion: {\n          _id: 1\n        }\n      }\n    });\n    return promotionOption.promotionLots && promotionOption.promotionLots[0].promotion;\n  }\n\n  remove({\n    promotionOptionId\n  }) {\n    const {\n      loan: {\n        _id: loanId\n      }\n    } = this.fetchOne({\n      $filters: {\n        _id: promotionOptionId\n      },\n      loan: {\n        _id: 1\n      }\n    });\n\n    const promotionId = this.getPromotion(promotionOptionId)._id;\n\n    const newPriorityOrder = LoanService.getPromotionPriorityOrder({\n      loanId,\n      promotionId\n    }).filter(id => id !== promotionOptionId);\n    LoanService.setPromotionPriorityOrder({\n      loanId,\n      promotionId,\n      priorityOrder: newPriorityOrder\n    });\n    return super.remove(promotionOptionId);\n  }\n\n  changePriorityOrder({\n    promotionOptionId,\n    change\n  }) {\n    const promotionOption = this.get(promotionOptionId);\n    const {\n      loan\n    } = promotionOption;\n    const {\n      _id: promotionId\n    } = this.getPromotion(promotionOptionId);\n    const priorityOrder = LoanService.getPromotionPriorityOrder({\n      loanId: loan._id,\n      promotionId\n    });\n    const optionIndex = priorityOrder.indexOf(promotionOptionId);\n\n    if (change < 0 && optionIndex === 0) {\n      return false;\n    }\n\n    if (change > 0 && optionIndex === priorityOrder.length - 1) {\n      return false;\n    }\n\n    const newPriorityOrder = priorityOrder.slice();\n    newPriorityOrder[optionIndex] = priorityOrder[optionIndex + change];\n    newPriorityOrder[optionIndex + change] = promotionOptionId;\n    return LoanService.setPromotionPriorityOrder({\n      loanId: loan._id,\n      promotionId,\n      priorityOrder: newPriorityOrder\n    });\n  }\n\n  increasePriorityOrder({\n    promotionOptionId\n  }) {\n    return this.changePriorityOrder({\n      promotionOptionId,\n      change: -1\n    });\n  }\n\n  reducePriorityOrder({\n    promotionOptionId\n  }) {\n    return this.changePriorityOrder({\n      promotionOptionId,\n      change: 1\n    });\n  }\n\n}\n\nmodule.exportDefault(new PromotionOptionService());\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"exposures.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotionOptions/server/exposures.js                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet makePromotionOptionAnonymizer;\nmodule.link(\"../../promotions/server/promotionServerHelpers\", {\n  makePromotionOptionAnonymizer(v) {\n    makePromotionOptionAnonymizer = v;\n  }\n\n}, 1);\nlet exposeQuery;\nmodule.link(\"../../queries/queryHelpers\", {\n  exposeQuery(v) {\n    exposeQuery = v;\n  }\n\n}, 2);\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 3);\nlet appPromotionOption, proPromotionOptions;\nmodule.link(\"../queries\", {\n  appPromotionOption(v) {\n    appPromotionOption = v;\n  },\n\n  proPromotionOptions(v) {\n    proPromotionOptions = v;\n  }\n\n}, 4);\nexposeQuery({\n  query: appPromotionOption,\n  overrides: {\n    firewall(userId, {\n      promotionOptionId\n    }) {\n      SecurityService.promotions.hasAccessToPromotionOption({\n        promotionOptionId,\n        userId\n      });\n    },\n\n    embody: body => {\n      body.$filter = ({\n        filters,\n        params: {\n          promotionOptionId\n        }\n      }) => {\n        filters._id = promotionOptionId;\n      };\n    },\n    validateParams: {\n      promotionOptionId: String\n    }\n  }\n});\nexposeQuery({\n  query: proPromotionOptions,\n  overrides: {\n    firewall(userId, params) {\n      const {\n        promotionOptionIds\n      } = params;\n      params.userId = userId;\n      SecurityService.checkUserIsPro(userId);\n      promotionOptionIds.forEach(promotionOptionId => {\n        SecurityService.promotions.isAllowedToViewPromotionOption({\n          promotionOptionId,\n          userId\n        });\n      });\n\n      if (!SecurityService.isUserAdmin(userId)) {\n        params.anonymize = true;\n      }\n    },\n\n    embody: (body, embodyParams) => {\n      body.$filter = ({\n        filters,\n        params\n      }) => {\n        const {\n          promotionOptionIds = []\n        } = params;\n        filters._id = {\n          $in: promotionOptionIds\n        };\n      };\n\n      body.$postFilter = (promotionOptions = [], params) => {\n        const {\n          anonymize = false,\n          userId\n        } = params;\n        return anonymize ? promotionOptions.map(makePromotionOptionAnonymizer({\n          userId\n        })) : promotionOptions;\n      };\n    },\n    validateParams: {\n      promotionOptionIds: [String],\n      userId: String,\n      anonymize: Match.Maybe(Boolean)\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"hooks.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotionOptions/server/hooks.js                                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet LoanService;\nmodule.link(\"../../loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 0);\nlet PromotionOptions;\nmodule.link(\"..\", {\n  default(v) {\n    PromotionOptions = v;\n  }\n\n}, 1);\nPromotionOptions.before.remove((userId, {\n  _id: promotionOptionId\n}) => {\n  // Remove all references to this promotionOption on the loan\n  const loans = LoanService.find({\n    'promotionOptionLinks._id': promotionOptionId\n  }).fetch();\n  loans.forEach(loan => {\n    LoanService.update({\n      loanId: loan._id,\n      object: {\n        structures: loan.structures.map(structure => (0, _objectSpread2.default)({}, structure, {\n          promotionOptionId: structure.promotionOptionId === promotionOptionId ? null : structure.promotionOptionId\n        }))\n      }\n    });\n  });\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotionOptions/server/methods.js                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 0);\nlet PromotionOptionService;\nmodule.link(\"./PromotionOptionService\", {\n  default(v) {\n    PromotionOptionService = v;\n  }\n\n}, 1);\nlet LoanService;\nmodule.link(\"../../loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 2);\nlet promotionOptionInsert, promotionOptionUpdate, promotionOptionRemove, increaseOptionPriority, reducePriorityOrder;\nmodule.link(\"../methodDefinitions\", {\n  promotionOptionInsert(v) {\n    promotionOptionInsert = v;\n  },\n\n  promotionOptionUpdate(v) {\n    promotionOptionUpdate = v;\n  },\n\n  promotionOptionRemove(v) {\n    promotionOptionRemove = v;\n  },\n\n  increaseOptionPriority(v) {\n    increaseOptionPriority = v;\n  },\n\n  reducePriorityOrder(v) {\n    reducePriorityOrder = v;\n  }\n\n}, 3);\npromotionOptionInsert.setHandler(({\n  userId\n}, params) => {\n  const loan = LoanService.get(params.loanId);\n  SecurityService.checkOwnership(loan);\n  return PromotionOptionService.insert(params);\n});\npromotionOptionUpdate.setHandler(({\n  userId\n}, params) => // TODO: Security check\nPromotionOptionService.update(params));\npromotionOptionRemove.setHandler(({\n  userId\n}, params) => // TODO: Security check\nPromotionOptionService.remove(params));\nincreaseOptionPriority.setHandler((context, params) => PromotionOptionService.increasePriorityOrder(params));\nreducePriorityOrder.setHandler((context, params) => PromotionOptionService.reducePriorityOrder(params));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"serverReducers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotionOptions/server/serverReducers.js                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet PromotionOptions;\nmodule.link(\"..\", {\n  default(v) {\n    PromotionOptions = v;\n  }\n\n}, 0);\nlet assigneeReducer;\nmodule.link(\"../../reducers/assigneeReducer\", {\n  default(v) {\n    assigneeReducer = v;\n  }\n\n}, 1);\nPromotionOptions.addReducers((0, _objectSpread2.default)({}, assigneeReducer({\n  promotionLots: {\n    promotion: {\n      userLinks: 1\n    }\n  }\n}, ({\n  promotionLots\n}) => promotionLots[0].promotion.userLinks.length > 0 && promotionLots[0].promotion.userLinks[0]._id)));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotionOptions/index.js                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./methodDefinitions\", {\n  \"*\": \"*\"\n}, 0);\nmodule.link(\"./promotionOptions\", {\n  default: \"default\"\n}, 1);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"links.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotionOptions/links.js                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet PromotionOptions;\nmodule.link(\".\", {\n  default(v) {\n    PromotionOptions = v;\n  }\n\n}, 0);\nlet PromotionLots, Lots, Loans;\nmodule.link(\"..\", {\n  PromotionLots(v) {\n    PromotionLots = v;\n  },\n\n  Lots(v) {\n    Lots = v;\n  },\n\n  Loans(v) {\n    Loans = v;\n  }\n\n}, 1);\nPromotionOptions.addLinks({\n  promotionLots: {\n    field: 'promotionLotLinks',\n    collection: PromotionLots,\n    type: 'many',\n    metadata: true\n  },\n  lots: {\n    field: 'lotLinks',\n    collection: Lots,\n    type: 'many',\n    metadata: true\n  },\n  loan: {\n    collection: Loans,\n    inversedBy: 'promotionOptions'\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methodDefinitions.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotionOptions/methodDefinitions.js                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  promotionOptionInsert: () => promotionOptionInsert,\n  promotionOptionRemove: () => promotionOptionRemove,\n  promotionOptionUpdate: () => promotionOptionUpdate,\n  increaseOptionPriority: () => increaseOptionPriority,\n  reducePriorityOrder: () => reducePriorityOrder\n});\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet Method;\nmodule.link(\"../methods/methods\", {\n  Method(v) {\n    Method = v;\n  }\n\n}, 1);\nconst promotionOptionInsert = new Method({\n  name: 'promotionOptionInsert',\n  params: {\n    promotionLotId: String,\n    loanId: String\n  }\n});\nconst promotionOptionRemove = new Method({\n  name: 'promotionOptionRemove',\n  params: {\n    promotionOptionId: String\n  }\n});\nconst promotionOptionUpdate = new Method({\n  name: 'promotionOptionUpdate',\n  params: {\n    promotionOptionId: String,\n    object: Object\n  }\n});\nconst increaseOptionPriority = new Method({\n  name: 'increaseOptionPriority',\n  params: {\n    promotionOptionId: String\n  }\n});\nconst reducePriorityOrder = new Method({\n  name: 'reducePriorityOrder',\n  params: {\n    promotionOptionId: String\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"promotionOptionConstants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotionOptions/promotionOptionConstants.js                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  PROMOTION_OPTIONS_COLLECTION: () => PROMOTION_OPTIONS_COLLECTION,\n  PROMOTION_OPTION_QUERIES: () => PROMOTION_OPTION_QUERIES,\n  PROMOTION_OPTION_SOLVENCY: () => PROMOTION_OPTION_SOLVENCY\n});\nconst PROMOTION_OPTIONS_COLLECTION = 'promotionOptions';\nconst PROMOTION_OPTION_QUERIES = {\n  APP_PROMOTION_OPTION: 'APP_PROMOTION_OPTION',\n  PRO_PROMOTION_OPTIONS: 'PRO_PROMOTION_OPTIONS'\n};\nconst PROMOTION_OPTION_SOLVENCY = {\n  UNDETERMINED: 'UNDETERMINED',\n  SOLVENT: 'SOLVENT',\n  INSOLVENT: 'INSOLVENT'\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"promotionOptions.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotionOptions/promotionOptions.js                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet PromotionOptionSchema;\nmodule.link(\"./schemas/PromotionOptionSchema\", {\n  default(v) {\n    PromotionOptionSchema = v;\n  }\n\n}, 1);\nlet PROMOTION_OPTIONS_COLLECTION;\nmodule.link(\"./promotionOptionConstants\", {\n  PROMOTION_OPTIONS_COLLECTION(v) {\n    PROMOTION_OPTIONS_COLLECTION = v;\n  }\n\n}, 2);\nconst PromotionOptions = new Mongo.Collection(PROMOTION_OPTIONS_COLLECTION);\nPromotionOptions.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true\n});\nPromotionOptions.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false\n});\nPromotionOptions.attachSchema(PromotionOptionSchema);\nmodule.exportDefault(PromotionOptions);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"queries.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotionOptions/queries.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  appPromotionOption: () => appPromotionOption,\n  proPromotionOptions: () => proPromotionOptions\n});\nlet appPromotionOptionFragment, proPromotionOption;\nmodule.link(\"../fragments\", {\n  appPromotionOption(v) {\n    appPromotionOptionFragment = v;\n  },\n\n  proPromotionOption(v) {\n    proPromotionOption = v;\n  }\n\n}, 0);\nlet PROMOTION_OPTION_QUERIES;\nmodule.link(\"./promotionOptionConstants\", {\n  PROMOTION_OPTION_QUERIES(v) {\n    PROMOTION_OPTION_QUERIES = v;\n  }\n\n}, 1);\nlet PromotionOptions;\nmodule.link(\".\", {\n  default(v) {\n    PromotionOptions = v;\n  }\n\n}, 2);\nconst appPromotionOption = PromotionOptions.createQuery(PROMOTION_OPTION_QUERIES.APP_PROMOTION_OPTION, appPromotionOptionFragment());\nconst proPromotionOptions = PromotionOptions.createQuery(PROMOTION_OPTION_QUERIES.PRO_PROMOTION_OPTIONS, proPromotionOption());\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"reducers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotionOptions/reducers.js                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet PromotionOptions;\nmodule.link(\".\", {\n  default(v) {\n    PromotionOptions = v;\n  }\n\n}, 1);\nPromotionOptions.addReducers({\n  promotion: {\n    body: {\n      promotionLots: {\n        promotion: {\n          name: 1,\n          address1: 1,\n          address2: 1,\n          zipCode: 1,\n          canton: 1,\n          city: 1\n        }\n      }\n    },\n    reduce: ({\n      promotionLots = []\n    }) => promotionLots.length > 0 ? promotionLots[0].promotion : {}\n  },\n  name: {\n    body: {\n      promotionLots: {\n        name: 1\n      }\n    },\n    reduce: ({\n      promotionLots = []\n    }) => promotionLots.length > 0 ? promotionLots[0].name : ''\n  },\n  value: {\n    body: {\n      promotionLots: {\n        value: 1\n      }\n    },\n    reduce: ({\n      promotionLots = []\n    }) => {\n      if (promotionLots.length === 0) {\n        return 0;\n      }\n\n      const {\n        value\n      } = promotionLots[0];\n      return value;\n    }\n  },\n  priority: {\n    body: {\n      loan: {\n        promotionLinks: 1\n      }\n    },\n    reduce: ({\n      loan,\n      _id: promotionOptionId\n    }) => {\n      const {\n        promotionLinks\n      } = loan;\n\n      if (promotionLinks && promotionLinks.length > 0) {\n        return promotionLinks[0].priorityOrder.findIndex(id => id === promotionOptionId);\n      }\n\n      return null;\n    }\n  },\n  attributedToMe: {\n    body: {\n      promotionLots: {\n        attributedTo: {\n          userId: 1\n        }\n      }\n    },\n    reduce: ({\n      promotionLots = []\n    }) => !!(promotionLots[0] && promotionLots[0].attributedTo && promotionLots[0].attributedTo.userId === Meteor.userId())\n  },\n  canton: {\n    body: {\n      promotionLots: {\n        promotion: {\n          canton: 1\n        }\n      }\n    },\n    reduce: ({\n      promotionLots = []\n    }) => promotionLots.length > 0 ? promotionLots[0].promotion.canton : undefined\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"promotions\":{\"schemas\":{\"PromotionSchema.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotions/schemas/PromotionSchema.js                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  promotionPermissionsSchema: () => promotionPermissionsSchema,\n  BasePromotionSchema: () => BasePromotionSchema\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 1);\nlet PROMOTION_TYPES, PROMOTION_STATUS, PROMOTION_PERMISSIONS;\nmodule.link(\"../promotionConstants\", {\n  PROMOTION_TYPES(v) {\n    PROMOTION_TYPES = v;\n  },\n\n  PROMOTION_STATUS(v) {\n    PROMOTION_STATUS = v;\n  },\n\n  PROMOTION_PERMISSIONS(v) {\n    PROMOTION_PERMISSIONS = v;\n  }\n\n}, 2);\nlet address, contactsSchema, userLinksSchema, createdAt, updatedAt, documentsField, percentageField, dateField;\nmodule.link(\"../../helpers/sharedSchemas\", {\n  address(v) {\n    address = v;\n  },\n\n  contactsSchema(v) {\n    contactsSchema = v;\n  },\n\n  userLinksSchema(v) {\n    userLinksSchema = v;\n  },\n\n  createdAt(v) {\n    createdAt = v;\n  },\n\n  updatedAt(v) {\n    updatedAt = v;\n  },\n\n  documentsField(v) {\n    documentsField = v;\n  },\n\n  percentageField(v) {\n    percentageField = v;\n  },\n\n  dateField(v) {\n    dateField = v;\n  }\n\n}, 3);\nconst SCHEMA_BOOLEAN = {\n  type: Boolean,\n  optional: true,\n  defaultValue: false\n};\nconst promotionPermissionsSchema = {\n  canAddLots: SCHEMA_BOOLEAN,\n  canModifyLots: SCHEMA_BOOLEAN,\n  canRemoveLots: SCHEMA_BOOLEAN,\n  canModifyPromotion: SCHEMA_BOOLEAN,\n  canManageDocuments: SCHEMA_BOOLEAN,\n  displayCustomerNames: {\n    type: SimpleSchema.oneOf(Boolean, Object),\n    optional: true,\n\n    autoValue() {\n      if (Meteor.isServer && this.isSet) {\n        if (this.value === undefined) {\n          return false;\n        }\n\n        if (this.value instanceof Object) {\n          if (!Object.keys(this.value).length) {\n            return false;\n          }\n\n          if (!this.value.invitedBy) {\n            return false;\n          }\n        }\n\n        return this.value;\n      }\n    }\n\n  },\n  'displayCustomerNames.forLotStatus': {\n    type: Array,\n    optional: true,\n    defaultValue: [],\n    uniforms: {\n      displayEmpty: false,\n      placeholder: '',\n      checkboxes: true\n    }\n  },\n  'displayCustomerNames.forLotStatus.$': {\n    type: String,\n    allowedValues: Object.values(PROMOTION_PERMISSIONS.DISPLAY_CUSTOMER_NAMES.FOR_LOT_STATUS)\n  },\n  'displayCustomerNames.invitedBy': {\n    type: String,\n    optional: true,\n    allowedValues: Object.values(PROMOTION_PERMISSIONS.DISPLAY_CUSTOMER_NAMES.INVITED_BY),\n    uniforms: {\n      displayEmpty: false,\n      placeholder: ''\n    }\n  },\n  canInviteCustomers: SCHEMA_BOOLEAN,\n  canBookLots: SCHEMA_BOOLEAN,\n  // canPreBookLots: SCHEMA_BOOLEAN,\n  canSellLots: SCHEMA_BOOLEAN\n};\nconst PromotionSchema = new SimpleSchema((0, _objectSpread2.default)({\n  createdAt,\n  updatedAt,\n  name: {\n    type: String,\n    uniforms: {\n      placeholder: 'Les Terrasses de Versoix'\n    }\n  },\n  type: {\n    type: String,\n    allowedValues: Object.values(PROMOTION_TYPES),\n    uniforms: {\n      displayEmpty: false\n    }\n  },\n  status: {\n    type: String,\n    allowedValues: Object.values(PROMOTION_STATUS),\n    defaultValue: PROMOTION_STATUS.PREPARATION,\n    uniforms: {\n      displayEmpty: false\n    }\n  }\n}, address, contactsSchema, {\n  propertyLinks: {\n    type: Array,\n    defaultValue: []\n  },\n  'propertyLinks.$': Object,\n  'propertyLinks.$._id': {\n    type: String,\n    optional: true\n  },\n  lotLinks: {\n    type: Array,\n    defaultValue: []\n  },\n  'lotLinks.$': Object,\n  'lotLinks.$._id': {\n    type: String,\n    optional: true\n  },\n  promotionLotLinks: {\n    type: Array,\n    defaultValue: []\n  },\n  'promotionLotLinks.$': Object,\n  'promotionLotLinks.$._id': {\n    type: String,\n    optional: true\n  },\n  assignedEmployeeId: {\n    type: String,\n    optional: true\n  }\n}, userLinksSchema(promotionPermissionsSchema), {\n  documents: documentsField,\n  lenderOrganisationLink: {\n    type: Object,\n    optional: true\n  },\n  'lenderOrganisationLink._id': {\n    type: String,\n    optional: true\n  },\n  constructionTimeline: {\n    type: Array,\n    defaultValue: []\n  },\n  'constructionTimeline.$': Object,\n  'constructionTimeline.$.description': String,\n  'constructionTimeline.$.duration': Number,\n  'constructionTimeline.$.percent': (0, _objectSpread2.default)({}, percentageField, {\n    optional: false\n  }),\n  signingDate: dateField\n}));\nconst BasePromotionSchema = PromotionSchema.pick('name', 'type', 'address1', 'address2', 'zipCode', 'city', 'contacts');\nmodule.exportDefault(PromotionSchema);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"PromotionService.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotions/server/PromotionService.js                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  PromotionService: () => PromotionService\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet HTTP_STATUS_CODES;\nmodule.link(\"../../RESTAPI/server/restApiConstants\", {\n  HTTP_STATUS_CODES(v) {\n    HTTP_STATUS_CODES = v;\n  }\n\n}, 1);\nlet UserService;\nmodule.link(\"../../users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 2);\nlet LoanService;\nmodule.link(\"../../loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 3);\nlet FileService;\nmodule.link(\"../../files/server/FileService\", {\n  default(v) {\n    FileService = v;\n  }\n\n}, 4);\nlet CollectionService;\nmodule.link(\"../../helpers/CollectionService\", {\n  default(v) {\n    CollectionService = v;\n  }\n\n}, 5);\nlet PropertyService;\nmodule.link(\"../../properties/server/PropertyService\", {\n  default(v) {\n    PropertyService = v;\n  }\n\n}, 6);\nlet PromotionLotService;\nmodule.link(\"../../promotionLots/server/PromotionLotService\", {\n  default(v) {\n    PromotionLotService = v;\n  }\n\n}, 7);\nlet PROMOTION_STATUS, PROMOTION_PERMISSIONS_FULL_ACCESS;\nmodule.link(\"../../constants\", {\n  PROMOTION_STATUS(v) {\n    PROMOTION_STATUS = v;\n  },\n\n  PROMOTION_PERMISSIONS_FULL_ACCESS(v) {\n    PROMOTION_PERMISSIONS_FULL_ACCESS = v;\n  }\n\n}, 8);\nlet sendEmail;\nmodule.link(\"../../email/methodDefinitions\", {\n  sendEmail(v) {\n    sendEmail = v;\n  }\n\n}, 9);\nlet EMAIL_IDS;\nmodule.link(\"../../email/emailConstants\", {\n  EMAIL_IDS(v) {\n    EMAIL_IDS = v;\n  }\n\n}, 10);\nlet PROPERTY_CATEGORY;\nmodule.link(\"../../properties/propertyConstants\", {\n  PROPERTY_CATEGORY(v) {\n    PROPERTY_CATEGORY = v;\n  }\n\n}, 11);\nlet PromotionOptionService;\nmodule.link(\"../../promotionOptions/server/PromotionOptionService\", {\n  default(v) {\n    PromotionOptionService = v;\n  }\n\n}, 12);\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 13);\nlet Promotions;\nmodule.link(\"../promotions\", {\n  default(v) {\n    Promotions = v;\n  }\n\n}, 14);\n\nclass PromotionService extends CollectionService {\n  constructor() {\n    super(Promotions);\n  }\n\n  insert({\n    promotion = {},\n    userId\n  }) {\n    const isAdmin = SecurityService.isUserAdmin(userId);\n    return super.insert((0, _objectSpread2.default)({}, promotion, {\n      userLinks: isAdmin ? undefined : [{\n        _id: userId,\n        permissions: PROMOTION_PERMISSIONS_FULL_ACCESS()\n      }]\n    }));\n  }\n\n  insertPromotionProperty({\n    promotionId,\n    property\n  }) {\n    const {\n      address1,\n      address2,\n      zipCode,\n      city,\n      canton\n    } = this.get(promotionId);\n    const propertyId = PropertyService.insert({\n      property: (0, _objectSpread2.default)({}, property, {\n        address1,\n        address2,\n        zipCode,\n        city,\n        canton,\n        category: PROPERTY_CATEGORY.PROMOTION\n      })\n    });\n    const promotionLotId = PromotionLotService.insert({\n      propertyLinks: [{\n        _id: propertyId\n      }]\n    });\n    this.addLink({\n      id: promotionId,\n      linkName: 'promotionLots',\n      linkId: promotionLotId\n    });\n    this.addLink({\n      id: promotionId,\n      linkName: 'properties',\n      linkId: propertyId\n    });\n    return promotionLotId;\n  }\n\n  update(_ref) {\n    let {\n      promotionId\n    } = _ref,\n        rest = (0, _objectWithoutProperties2.default)(_ref, [\"promotionId\"]);\n\n    const result = this._update((0, _objectSpread2.default)({\n      id: promotionId\n    }, rest));\n\n    const _this$fetchOne = this.fetchOne({\n      $filters: {\n        _id: promotionId\n      },\n      propertyLinks: 1,\n      address1: 1,\n      address2: 1,\n      city: 1,\n      zipCode: 1\n    }),\n          {\n      propertyLinks\n    } = _this$fetchOne,\n          address = (0, _objectWithoutProperties2.default)(_this$fetchOne, [\"propertyLinks\"]);\n\n    propertyLinks.forEach(({\n      _id\n    }) => {\n      PropertyService.update({\n        propertyId: _id,\n        object: address\n      });\n    });\n    return result;\n  }\n\n  remove({\n    promotionId\n  }) {\n    return super.remove(promotionId);\n  }\n\n  inviteUser({\n    promotionId,\n    userId,\n    isNewUser,\n    pro = {},\n    sendInvitation = true,\n    promotionLotIds,\n    showAllLots,\n    shareSolvency\n  }) {\n    const promotion = this.get(promotionId);\n    const user = UserService.get(userId);\n    const allowAddingUsers = promotion.status === PROMOTION_STATUS.OPEN;\n\n    if (!allowAddingUsers) {\n      throw new Meteor.Error(\"Vous ne pouvez pas inviter de clients lorsque la promotion n'est pas en vente, contactez-nous pour valider la promotion.\");\n    }\n\n    if (UserService.hasPromotion({\n      userId,\n      promotionId\n    })) {\n      throw new Meteor.Error(HTTP_STATUS_CODES.CONFLICT, 'Cet utilisateur est déjà invité à cette promotion');\n    }\n\n    const loanId = LoanService.insertPromotionLoan({\n      userId,\n      promotionId,\n      invitedBy: pro._id,\n      showAllLots,\n      promotionLotIds,\n      shareSolvency\n    });\n\n    if (isNewUser) {\n      const admin = UserService.get(promotion.assignedEmployeeId);\n      UserService.assignAdminToUser({\n        userId,\n        adminId: admin && admin._id\n      });\n    }\n\n    const {\n      assignedEmployeeId\n    } = UserService.fetchOne({\n      $filters: {\n        _id: userId\n      },\n      assignedEmployeeId: 1\n    });\n\n    if (sendInvitation) {\n      return this.sendPromotionInvitationEmail({\n        userId,\n        isNewUser,\n        promotionId,\n        firstName: user.firstName,\n        proId: pro._id,\n        adminId: assignedEmployeeId\n      }).then(() => loanId);\n    }\n\n    return Promise.resolve(loanId);\n  }\n\n  sendPromotionInvitationEmail({\n    userId,\n    isNewUser,\n    promotionId,\n    firstName,\n    proId\n  }) {\n    return FileService.listFilesForDocByCategory(promotionId).then(({\n      promotionImage,\n      logos\n    }) => {\n      const coverImageUrl = promotionImage && promotionImage.length > 0 && promotionImage[0].url;\n      const logoUrls = logos && logos.map(({\n        url\n      }) => url);\n      let ctaUrl = Meteor.settings.public.subdomains.app;\n      const promotion = this.get(promotionId);\n      const assignedEmployee = UserService.get(promotion.assignedEmployeeId);\n\n      if (isNewUser) {\n        // Envoyer invitation avec enrollment link\n        ctaUrl = UserService.getEnrollmentUrl({\n          userId\n        });\n      }\n\n      let invitedBy;\n\n      if (proId) {\n        invitedBy = UserService.fetchOne({\n          $filters: {\n            _id: proId\n          },\n          name: 1\n        }).name;\n      }\n\n      return sendEmail.run({\n        emailId: EMAIL_IDS.INVITE_USER_TO_PROMOTION,\n        userId,\n        params: {\n          proUserId: proId,\n          promotion: (0, _objectSpread2.default)({}, promotion, {\n            assignedEmployee\n          }),\n          coverImageUrl,\n          logoUrls,\n          ctaUrl,\n          name: firstName,\n          invitedBy\n        }\n      });\n    });\n  }\n\n  addProUser({\n    promotionId,\n    userId\n  }) {\n    return this.addLink({\n      id: promotionId,\n      linkName: 'users',\n      linkId: userId,\n      metadata: {\n        permissions: {}\n      }\n    });\n  }\n\n  removeProUser({\n    promotionId,\n    userId\n  }) {\n    const loans = LoanService.fetch({\n      $filters: {\n        'promotionLinks.invitedBy': userId,\n        'promotionLinks._id': promotionId\n      }\n    });\n    loans.forEach(({\n      _id: loanId\n    }) => {\n      this.updateLinkMetadata({\n        id: promotionId,\n        linkName: 'loans',\n        linkId: loanId,\n        metadata: {\n          invitedBy: undefined\n        }\n      });\n    });\n    return this.removeLink({\n      id: promotionId,\n      linkName: 'users',\n      linkId: userId\n    });\n  }\n\n  setUserPermissions({\n    promotionId,\n    userId,\n    permissions\n  }) {\n    return Promotions.update({\n      _id: promotionId,\n      'userLinks._id': userId\n    }, {\n      $set: {\n        'userLinks.$.permissions': permissions\n      }\n    });\n  }\n\n  removeLoan({\n    promotionId,\n    loanId\n  }) {\n    const {\n      promotionOptionLinks = [],\n      attributedPromotionLots = []\n    } = LoanService.fetchOne({\n      $filters: {\n        _id: loanId\n      },\n      promotionOptionLinks: {\n        _id: 1\n      },\n      attributedPromotionLots: {\n        _id: 1\n      }\n    });\n    this.removeLink({\n      id: promotionId,\n      linkName: 'loans',\n      linkId: loanId\n    });\n    promotionOptionLinks.forEach(({\n      _id\n    }) => {\n      PromotionOptionService.remove({\n        promotionOptionId: _id\n      });\n    });\n    attributedPromotionLots.forEach(({\n      _id\n    }) => {\n      PromotionLotService.cancelPromotionLotBooking({\n        promotionLotId: _id\n      });\n    });\n  }\n\n  editPromotionLoan({\n    loanId,\n    promotionId,\n    promotionLotIds = [],\n    showAllLots\n  }) {\n    if (showAllLots !== undefined) {\n      this.updateLinkMetadata({\n        id: promotionId,\n        linkName: 'loans',\n        linkId: loanId,\n        metadata: {\n          showAllLots\n        }\n      });\n    }\n\n    const {\n      promotionOptions = []\n    } = LoanService.fetchOne({\n      $filters: {\n        _id: loanId\n      },\n      promotionOptions: {\n        promotionLots: {\n          attributedTo: {\n            _id: 1\n          },\n          name: 1\n        }\n      }\n    }); // Add any new promotionOptions if they don't already exist\n\n    promotionLotIds.forEach(promotionLotId => {\n      const existingPromotionOption = promotionOptions.find(({\n        promotionLots: promotionOptionLots\n      }) => promotionOptionLots[0]._id === promotionLotId);\n\n      if (!existingPromotionOption) {\n        PromotionOptionService.insert({\n          promotionLotId,\n          loanId\n        });\n      }\n    }); // Remove all promotionOptions that aren't in the specified array\n\n    const promotionOptionsToRemove = promotionOptions.filter(({\n      promotionLots\n    }) => promotionLotIds.indexOf(promotionLots[0]._id) < 0);\n    promotionOptionsToRemove.forEach(promotionOption => {\n      // Try to remove this promotion option\n      const {\n        promotionLots,\n        _id: promotionOptionId\n      } = promotionOption;\n      const {\n        attributedTo,\n        name\n      } = promotionLots[0];\n\n      if (attributedTo && attributedTo._id === loanId) {\n        throw new Meteor.Error(`Vous ne pouvez pas supprimer le lot \"${name}\" de ce client, car il lui est attribué.`);\n      }\n\n      PromotionOptionService.remove({\n        promotionOptionId\n      });\n    });\n  }\n\n}\n\nmodule.exportDefault(new PromotionService());\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"exposures.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotions/server/exposures.js                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet exposeQuery;\nmodule.link(\"../../queries/queryHelpers\", {\n  exposeQuery(v) {\n    exposeQuery = v;\n  }\n\n}, 1);\nlet createSearchFilters;\nmodule.link(\"../../helpers/mongoHelpers\", {\n  createSearchFilters(v) {\n    createSearchFilters = v;\n  }\n\n}, 2);\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 3);\nlet adminPromotions, appPromotion, promotionSearch, proPromotions, proPromotionUsers;\nmodule.link(\"../queries\", {\n  adminPromotions(v) {\n    adminPromotions = v;\n  },\n\n  appPromotion(v) {\n    appPromotion = v;\n  },\n\n  promotionSearch(v) {\n    promotionSearch = v;\n  },\n\n  proPromotions(v) {\n    proPromotions = v;\n  },\n\n  proPromotionUsers(v) {\n    proPromotionUsers = v;\n  }\n\n}, 4);\nlet PROMOTION_STATUS;\nmodule.link(\"../promotionConstants\", {\n  PROMOTION_STATUS(v) {\n    PROMOTION_STATUS = v;\n  }\n\n}, 5);\nlet makePromotionLotAnonymizer;\nmodule.link(\"./promotionServerHelpers\", {\n  makePromotionLotAnonymizer(v) {\n    makePromotionLotAnonymizer = v;\n  }\n\n}, 6);\nexposeQuery({\n  query: adminPromotions,\n  options: {\n    allowFilterById: true\n  }\n});\nexposeQuery({\n  query: appPromotion,\n  overrides: {\n    firewall(userId, {\n      promotionId\n    }) {\n      SecurityService.promotions.hasAccessToPromotion({\n        promotionId,\n        userId\n      });\n    },\n\n    embody: body => {\n      body.$filter = ({\n        filters,\n        params\n      }) => {\n        filters._id = params.promotionId;\n        filters.status = PROMOTION_STATUS.OPEN;\n      };\n    },\n    validateParams: {\n      promotionId: String,\n      loanId: String\n    }\n  }\n});\nexposeQuery({\n  query: promotionSearch,\n  overrides: {\n    embody: body => {\n      body.$filter = ({\n        filters,\n        params: {\n          searchQuery\n        }\n      }) => {\n        Object.assign(filters, createSearchFilters(['name', '_id'], searchQuery));\n      };\n    },\n    validateParams: {\n      searchQuery: Match.Maybe(String)\n    }\n  }\n});\nexposeQuery({\n  query: proPromotions,\n  overrides: {\n    firewall(userId, params) {\n      SecurityService.checkUserIsPro(userId);\n      const {\n        _id: promotionId\n      } = params;\n      params.userId = userId;\n\n      if (promotionId) {\n        SecurityService.promotions.isAllowedToView({\n          promotionId,\n          userId\n        });\n      }\n\n      if (!SecurityService.isUserAdmin(userId)) {\n        params.anonymize = true;\n      }\n    },\n\n    embody: (body, embodyParams) => {\n      body.$filter = ({\n        filters,\n        params\n      }) => {\n        const {\n          _id: promotionId,\n          userId\n        } = params;\n\n        if (promotionId) {\n          filters._id = promotionId;\n        } else {\n          filters['userLinks._id'] = userId;\n        }\n      };\n\n      body.$postFilter = (promotions = [], params) => {\n        const {\n          anonymize = false,\n          simple,\n          userId\n        } = params;\n\n        if (!anonymize) {\n          return promotions;\n        }\n\n        return promotions.map(promotion => {\n          const {\n            promotionLots = []\n          } = promotion,\n                rest = (0, _objectWithoutProperties2.default)(promotion, [\"promotionLots\"]);\n          return simple ? {\n            promotionLots: promotionLots.map(({\n              name\n            }) => name)\n          } : (0, _objectSpread2.default)({\n            promotionLots: promotionLots.map(makePromotionLotAnonymizer({\n              userId\n            }))\n          }, rest);\n        });\n      };\n    },\n    validateParams: {\n      userId: String,\n      simple: Match.Maybe(Boolean),\n      anonymize: Match.Maybe(Boolean),\n      _id: Match.Maybe(String)\n    }\n  }\n});\nexposeQuery({\n  query: proPromotionUsers,\n  overrides: {\n    firewall(userId, {\n      _id: promotionId\n    }) {\n      SecurityService.promotions.hasAccessToPromotion({\n        promotionId,\n        userId\n      });\n    },\n\n    embody: body => {\n      body.$filter = ({\n        filters,\n        params: {\n          promotionId\n        }\n      }) => {\n        filters._id = promotionId;\n      };\n\n      body.$postFilter = (promotion = []) => {\n        const {\n          users = []\n        } = !!promotion.length && promotion[0] || {};\n        return users;\n      };\n    }\n  },\n  options: {\n    allowFilterById: true\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"hooks.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotions/server/hooks.js                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet FileService;\nmodule.link(\"../../files/server/FileService\", {\n  default(v) {\n    FileService = v;\n  }\n\n}, 0);\nlet Promotions;\nmodule.link(\"../promotions\", {\n  default(v) {\n    Promotions = v;\n  }\n\n}, 1);\nlet formatNumbersHook, formatPhoneNumber;\nmodule.link(\"../../../utils/phoneFormatting\", {\n  default(v) {\n    formatNumbersHook = v;\n  },\n\n  formatPhoneNumber(v) {\n    formatPhoneNumber = v;\n  }\n\n}, 2);\nPromotions.after.remove((userId, {\n  _id\n}) => FileService.deleteAllFilesForDoc(_id));\nformatNumbersHook(Promotions, 'contacts', oldContacts => oldContacts.map(contact => (0, _objectSpread2.default)({}, contact, {\n  phoneNumber: formatPhoneNumber(contact.phoneNumber)\n})));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotions/server/methods.js                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 0);\nlet PromotionService;\nmodule.link(\"./PromotionService\", {\n  default(v) {\n    PromotionService = v;\n  }\n\n}, 1);\nlet promotionInsert, promotionUpdate, promotionRemove, insertPromotionProperty, setPromotionUserPermissions, addProUserToPromotion, removeProFromPromotion, sendPromotionInvitationEmail, removeLoanFromPromotion, editPromotionLoan;\nmodule.link(\"../methodDefinitions\", {\n  promotionInsert(v) {\n    promotionInsert = v;\n  },\n\n  promotionUpdate(v) {\n    promotionUpdate = v;\n  },\n\n  promotionRemove(v) {\n    promotionRemove = v;\n  },\n\n  insertPromotionProperty(v) {\n    insertPromotionProperty = v;\n  },\n\n  setPromotionUserPermissions(v) {\n    setPromotionUserPermissions = v;\n  },\n\n  addProUserToPromotion(v) {\n    addProUserToPromotion = v;\n  },\n\n  removeProFromPromotion(v) {\n    removeProFromPromotion = v;\n  },\n\n  sendPromotionInvitationEmail(v) {\n    sendPromotionInvitationEmail = v;\n  },\n\n  removeLoanFromPromotion(v) {\n    removeLoanFromPromotion = v;\n  },\n\n  editPromotionLoan(v) {\n    editPromotionLoan = v;\n  }\n\n}, 2);\npromotionInsert.setHandler(({\n  userId\n}, {\n  promotion\n}) => {\n  SecurityService.checkUserIsPro(userId);\n  return PromotionService.insert({\n    promotion,\n    userId\n  });\n});\npromotionUpdate.setHandler(({\n  userId\n}, {\n  promotionId,\n  object\n}) => {\n  SecurityService.promotions.isAllowedToModify({\n    promotionId,\n    userId\n  });\n  return PromotionService.update({\n    promotionId,\n    object\n  });\n});\npromotionRemove.setHandler(({\n  userId\n}, params) => {\n  SecurityService.checkUserIsAdmin(userId);\n  return PromotionService.remove(params);\n});\ninsertPromotionProperty.setHandler(({\n  userId\n}, {\n  promotionId,\n  property\n}) => {\n  SecurityService.promotions.isAllowedToAddLots({\n    promotionId,\n    userId\n  });\n  return PromotionService.insertPromotionProperty({\n    promotionId,\n    property\n  });\n});\nsetPromotionUserPermissions.setHandler(({\n  userId: currentUserId\n}, {\n  promotionId,\n  userId,\n  permissions\n}) => {\n  SecurityService.checkUserIsAdmin(currentUserId);\n  return PromotionService.setUserPermissions({\n    promotionId,\n    userId,\n    permissions\n  });\n});\naddProUserToPromotion.setHandler(({\n  userId: currentUserId\n}, {\n  promotionId,\n  userId\n}) => {\n  SecurityService.checkUserIsAdmin(currentUserId);\n  return PromotionService.addProUser({\n    promotionId,\n    userId\n  });\n});\nremoveProFromPromotion.setHandler(({\n  userId: currentUserId\n}, {\n  promotionId,\n  userId\n}) => {\n  SecurityService.checkUserIsAdmin(currentUserId);\n  return PromotionService.removeProUser({\n    promotionId,\n    userId\n  });\n});\nsendPromotionInvitationEmail.setHandler(({\n  userId\n}, params) => {\n  SecurityService.promotions.isAllowedToInviteCustomers({\n    promotionId: params.promotionId,\n    userId\n  });\n  return PromotionService.sendPromotionInvitationEmail(params);\n});\nremoveLoanFromPromotion.setHandler(({\n  userId\n}, params) => {\n  const {\n    promotionId,\n    loanId\n  } = params;\n  SecurityService.promotions.isAllowedToRemoveCustomer({\n    promotionId,\n    loanId,\n    userId\n  });\n  return PromotionService.removeLoan(params);\n});\neditPromotionLoan.setHandler(({\n  userId\n}, params) => {\n  const {\n    promotionId,\n    loanId\n  } = params;\n  SecurityService.promotions.isAllowedToSeePromotionCustomer({\n    promotionId,\n    loanId,\n    userId\n  });\n  return PromotionService.editPromotionLoan(params);\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"promotionServerHelpers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotions/server/promotionServerHelpers.js                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nmodule.export({\n  getBestPromotionLotStatus: () => getBestPromotionLotStatus,\n  getPromotionCustomerOwnerType: () => getPromotionCustomerOwnerType,\n  makeLoanAnonymizer: () => makeLoanAnonymizer,\n  makePromotionLotAnonymizer: () => makePromotionLotAnonymizer,\n  makePromotionOptionAnonymizer: () => makePromotionOptionAnonymizer\n});\nlet UserService;\nmodule.link(\"../../users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 0);\nlet PromotionLotService;\nmodule.link(\"../../promotionLots/server/PromotionLotService\", {\n  default(v) {\n    PromotionLotService = v;\n  }\n\n}, 1);\nlet clientShouldAnonymize, getCustomerOwnerType, clientGetBestPromotionLotStatus;\nmodule.link(\"../promotionClientHelpers\", {\n  shouldAnonymize(v) {\n    clientShouldAnonymize = v;\n  },\n\n  getPromotionCustomerOwnerType(v) {\n    getCustomerOwnerType = v;\n  },\n\n  clientGetBestPromotionLotStatus(v) {\n    clientGetBestPromotionLotStatus = v;\n  }\n\n}, 2);\nlet LoanService;\nmodule.link(\"../../loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 3);\nconst ANONYMIZED_STRING = 'XXX';\nconst ANONYMIZED_USER = {\n  name: ANONYMIZED_STRING,\n  phoneNumbers: [ANONYMIZED_STRING],\n  email: ANONYMIZED_STRING\n};\n\nconst getUserPromotionPermissions = ({\n  userId,\n  promotionId\n}) => {\n  const {\n    promotions = []\n  } = UserService.fetchOne({\n    $filters: {\n      _id: userId\n    },\n    promotions: {\n      _id: 1\n    }\n  });\n  const promotion = promotions.find(({\n    _id\n  }) => _id === promotionId);\n\n  if (!promotion) {\n    return {};\n  }\n\n  const {\n    $metadata: {\n      permissions = {}\n    }\n  } = promotion;\n  return permissions;\n};\n\nconst getCustomerInvitedBy = ({\n  customerId,\n  promotionId\n}) => {\n  const {\n    loans = []\n  } = UserService.fetchOne({\n    $filters: {\n      _id: customerId\n    },\n    loans: {\n      promotions: {\n        _id: 1\n      }\n    }\n  }) || {};\n  const {\n    $metadata\n  } = loans.reduce((promotions, loan) => {\n    const {\n      promotions: loanPromotions = []\n    } = loan;\n    return [...promotions, ...loanPromotions];\n  }, []).find(({\n    _id\n  }) => _id === promotionId) || {};\n  return $metadata && $metadata.invitedBy;\n};\n\nconst getPromotionLotStatus = ({\n  promotionLotId\n}) => {\n  if (!promotionLotId) {\n    return {};\n  }\n\n  const {\n    status,\n    attributedToLink = {}\n  } = PromotionLotService.fetchOne({\n    $filters: {\n      _id: promotionLotId\n    },\n    status: 1,\n    attributedToLink: 1\n  }) || {};\n  return {\n    status,\n    attributedTo: attributedToLink._id\n  };\n};\n/**\n * Out of all promotionLots attributed to this user, which one has\n * the most permissive status?\n *\n * @param {String} { loanId }\n * @returns {String} PROMOTION_LOT_STATUS\n */\n\n\nconst getBestPromotionLotStatus = ({\n  loanId\n}) => {\n  const {\n    promotionOptions = []\n  } = LoanService.fetchOne({\n    $filters: {\n      _id: loanId\n    },\n    userId: 1,\n    promotionOptions: {\n      promotionLots: {\n        status: 1,\n        attributedToLink: 1\n      }\n    }\n  });\n  return clientGetBestPromotionLotStatus(promotionOptions, loanId);\n};\n\nconst getPromotionCustomerOwnerType = ({\n  customerId,\n  promotionId,\n  userId\n}) => {\n  const invitedBy = getCustomerInvitedBy({\n    customerId,\n    promotionId\n  });\n  const {\n    organisations = []\n  } = UserService.fetchOne({\n    $filters: {\n      _id: userId\n    },\n    organisations: {\n      users: {\n        _id: 1\n      }\n    }\n  });\n  return getCustomerOwnerType({\n    invitedBy,\n    currentUser: {\n      _id: userId,\n      organisations\n    }\n  });\n};\n\nconst shouldAnonymize = ({\n  customerId,\n  userId,\n  promotionId,\n  promotionLotId,\n  loanId\n}) => {\n  const customerOwnerType = getPromotionCustomerOwnerType({\n    customerId,\n    userId,\n    promotionId\n  });\n  const permissions = getUserPromotionPermissions({\n    userId,\n    promotionId\n  });\n  const {\n    status: promotionLotStatus,\n    attributedTo\n  } = getPromotionLotStatus({\n    promotionLotId\n  });\n  return clientShouldAnonymize({\n    customerOwnerType,\n    permissions,\n    promotionLotStatus,\n    isAttributed: attributedTo === loanId\n  });\n};\n\nconst makeLoanAnonymizer = ({\n  userId,\n  promotionId,\n  promotionLotId,\n  anonymize\n}) => {\n  let permissions;\n  let promotionLotStatus;\n  let attributedTo;\n\n  if (anonymize === undefined) {\n    permissions = getUserPromotionPermissions({\n      userId,\n      promotionId\n    });\n    const {\n      status,\n      attributedTo: attr\n    } = getPromotionLotStatus({\n      promotionLotId,\n      promotionId\n    });\n    promotionLotStatus = status;\n    attributedTo = attr;\n  }\n\n  return loan => {\n    const {\n      _id: loanId,\n      user = {}\n    } = loan,\n          rest = (0, _objectWithoutProperties2.default)(loan, [\"_id\", \"user\"]);\n    const {\n      _id: customerId\n    } = user;\n    let isAttributed = loanId === attributedTo;\n\n    if (!promotionLotId) {\n      // If no promotionLot is passed here, we get the best one from the loan\n      // For statuses BOOKED and SOLD, we check that it is attributed to\n      // this loan\n      promotionLotStatus = getBestPromotionLotStatus({\n        loanId\n      });\n      isAttributed = true;\n    }\n\n    const customerOwnerType = getPromotionCustomerOwnerType({\n      customerId,\n      promotionId,\n      userId\n    });\n    const anonymizeUser = anonymize === undefined ? clientShouldAnonymize({\n      customerOwnerType,\n      permissions,\n      promotionLotStatus,\n      isAttributed\n    }) : anonymize;\n    return (0, _objectSpread2.default)({\n      user: anonymizeUser ? (0, _objectSpread2.default)({\n        _id: user._id\n      }, ANONYMIZED_USER) : user,\n      _id: loanId,\n      isAnonymized: !!anonymizeUser\n    }, rest);\n  };\n};\n\nconst makePromotionLotAnonymizer = ({\n  userId\n}) => promotionLot => {\n  const {\n    attributedTo\n  } = promotionLot,\n        rest = (0, _objectWithoutProperties2.default)(promotionLot, [\"attributedTo\"]);\n  const {\n    _id: promotionLotId,\n    promotion: {\n      _id: promotionId\n    }\n  } = promotionLot;\n  const [loan] = [attributedTo].filter(x => x).map(makeLoanAnonymizer({\n    userId,\n    promotionId,\n    promotionLotId\n  }));\n  return (0, _objectSpread2.default)({\n    attributedTo: loan\n  }, rest);\n};\n\nconst makePromotionOptionAnonymizer = ({\n  userId\n}) => promotionOption => {\n  const {\n    loan,\n    custom\n  } = promotionOption,\n        rest = (0, _objectWithoutProperties2.default)(promotionOption, [\"loan\", \"custom\"]);\n  const {\n    promotionLots,\n    promotion: {\n      _id: promotionId\n    }\n  } = promotionOption;\n  const {\n    _id: promotionLotId\n  } = promotionLots[0];\n  const anonymize = shouldAnonymize({\n    customerId: loan.user._id,\n    userId,\n    promotionId,\n    promotionLotId,\n    loanId: loan._id\n  });\n  return (0, _objectSpread2.default)({\n    loan: makeLoanAnonymizer({\n      userId,\n      promotionId,\n      promotionLotId,\n      anonymize\n    })(loan),\n    custom: anonymize ? ANONYMIZED_STRING : custom,\n    isAnonymized: !!anonymize\n  }, rest);\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"serverReducers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotions/server/serverReducers.js                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet Promotions;\nmodule.link(\"../promotions\", {\n  default(v) {\n    Promotions = v;\n  }\n\n}, 0);\nlet assigneeReducer;\nmodule.link(\"../../reducers/assigneeReducer\", {\n  default(v) {\n    assigneeReducer = v;\n  }\n\n}, 1);\nPromotions.addReducers((0, _objectSpread2.default)({}, assigneeReducer()));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotions/index.js                                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./methodDefinitions\", {\n  \"*\": \"*\"\n}, 0);\nmodule.link(\"./promotions\", {\n  default: \"default\"\n}, 1);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"links.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotions/links.js                                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Promotions;\nmodule.link(\".\", {\n  default(v) {\n    Promotions = v;\n  }\n\n}, 0);\nlet Properties, Lots, PromotionLots, Users, Loans, Organisations;\nmodule.link(\"..\", {\n  Properties(v) {\n    Properties = v;\n  },\n\n  Lots(v) {\n    Lots = v;\n  },\n\n  PromotionLots(v) {\n    PromotionLots = v;\n  },\n\n  Users(v) {\n    Users = v;\n  },\n\n  Loans(v) {\n    Loans = v;\n  },\n\n  Organisations(v) {\n    Organisations = v;\n  }\n\n}, 1);\nlet Tasks;\nmodule.link(\"../tasks\", {\n  default(v) {\n    Tasks = v;\n  }\n\n}, 2);\nPromotions.addLinks({\n  properties: {\n    field: 'propertyLinks',\n    collection: Properties,\n    type: 'many',\n    metadata: true,\n    autoremove: true,\n    unique: true\n  },\n  lots: {\n    field: 'lotLinks',\n    collection: Lots,\n    type: 'many',\n    metadata: true,\n    autoremove: true,\n    unique: true\n  },\n  promotionLots: {\n    field: 'promotionLotLinks',\n    collection: PromotionLots,\n    type: 'many',\n    metadata: true,\n    autoremove: true,\n    unique: true\n  },\n  users: {\n    field: 'userLinks',\n    collection: Users,\n    type: 'many',\n    metadata: true\n  },\n  loans: {\n    collection: Loans,\n    inversedBy: 'promotions'\n  },\n  assignedEmployee: {\n    collection: Users,\n    field: 'assignedEmployeeId',\n    type: 'one'\n  },\n  lenderOrganisation: {\n    field: 'lenderOrganisationLink',\n    type: 'one',\n    metadata: true,\n    collection: Organisations\n  },\n  tasks: {\n    inversedBy: 'promotion',\n    collection: Tasks,\n    autoremove: true\n  },\n  promotionLoan: {\n    inversedBy: 'financedPromotion',\n    type: 'one',\n    collection: Loans\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methodDefinitions.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotions/methodDefinitions.js                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  promotionInsert: () => promotionInsert,\n  promotionUpdate: () => promotionUpdate,\n  promotionRemove: () => promotionRemove,\n  insertPromotionProperty: () => insertPromotionProperty,\n  setPromotionUserPermissions: () => setPromotionUserPermissions,\n  addProUserToPromotion: () => addProUserToPromotion,\n  removeProFromPromotion: () => removeProFromPromotion,\n  sendPromotionInvitationEmail: () => sendPromotionInvitationEmail,\n  removeLoanFromPromotion: () => removeLoanFromPromotion,\n  editPromotionLoan: () => editPromotionLoan\n});\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet Method;\nmodule.link(\"../methods/methods\", {\n  Method(v) {\n    Method = v;\n  }\n\n}, 1);\nconst promotionInsert = new Method({\n  name: 'promotionInsert',\n  params: {\n    promotion: Object\n  }\n});\nconst promotionUpdate = new Method({\n  name: 'promotionUpdate',\n  params: {\n    promotionId: String,\n    object: Object\n  }\n});\nconst promotionRemove = new Method({\n  name: 'promotionRemove',\n  params: {\n    promotionId: String\n  }\n});\nconst insertPromotionProperty = new Method({\n  name: 'insertPromotionProperty',\n  params: {\n    promotionId: String,\n    property: Object\n  }\n});\nconst setPromotionUserPermissions = new Method({\n  name: 'setPromotionUserPermissions',\n  params: {\n    promotionId: String,\n    userId: String,\n    permissions: Object\n  }\n});\nconst addProUserToPromotion = new Method({\n  name: 'addProUserToPromotion',\n  params: {\n    promotionId: String,\n    userId: String\n  }\n});\nconst removeProFromPromotion = new Method({\n  name: 'removeProFromPromotion',\n  params: {\n    promotionId: String,\n    userId: String\n  }\n});\nconst sendPromotionInvitationEmail = new Method({\n  name: 'sendPromotionInvitationEmail',\n  params: {\n    userId: String,\n    email: String,\n    isNewUser: Boolean,\n    promotionId: String,\n    firstName: String\n  }\n});\nconst removeLoanFromPromotion = new Method({\n  name: 'removeLoanFromPromotion',\n  params: {\n    promotionId: String,\n    loanId: String\n  }\n});\nconst editPromotionLoan = new Method({\n  name: 'editPromotionLoan',\n  params: {\n    promotionId: String,\n    loanId: String,\n    promotionLotIds: [String],\n    showAllLots: Match.Optional(Boolean)\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"promotionClientHelpers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotions/promotionClientHelpers.js                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  getCurrentUserPermissionsForPromotion: () => getCurrentUserPermissionsForPromotion,\n  getPromotionCustomerOwnerType: () => getPromotionCustomerOwnerType,\n  clientGetBestPromotionLotStatus: () => clientGetBestPromotionLotStatus,\n  shouldAnonymize: () => shouldAnonymize\n});\nlet PROMOTION_INVITED_BY_TYPE;\nmodule.link(\"./promotionConstants\", {\n  PROMOTION_INVITED_BY_TYPE(v) {\n    PROMOTION_INVITED_BY_TYPE = v;\n  }\n\n}, 0);\nlet PROMOTION_LOT_STATUS;\nmodule.link(\"../promotionLots/promotionLotConstants\", {\n  PROMOTION_LOT_STATUS(v) {\n    PROMOTION_LOT_STATUS = v;\n  }\n\n}, 1);\n\nconst getCurrentUserPermissionsForPromotion = ({\n  currentUser: {\n    promotions = []\n  } = {},\n  promotionId\n}) => {\n  const promotion = promotions.find(({\n    _id\n  }) => _id === promotionId);\n  return promotion && promotion.$metadata.permissions;\n};\n\nconst getPromotionCustomerOwnerType = ({\n  invitedBy,\n  currentUser\n}) => {\n  const {\n    _id: userId,\n    organisations = []\n  } = currentUser; // Is invited by nobody\n\n  if (!invitedBy) {\n    return null;\n  } // Is invited by user\n\n\n  if (invitedBy === userId) {\n    return PROMOTION_INVITED_BY_TYPE.USER;\n  }\n\n  const organisationUserIds = organisations.reduce((userIds, {\n    users = []\n  }) => [...userIds, ...users.map(({\n    _id\n  }) => _id)], []); // Is invited by organisation\n\n  if (organisationUserIds.includes(invitedBy)) {\n    return PROMOTION_INVITED_BY_TYPE.ORGANISATION;\n  } // Is invited by someone else\n\n\n  return PROMOTION_INVITED_BY_TYPE.ANY;\n};\n\nconst clientGetBestPromotionLotStatus = (promotionOptions, loanId) => {\n  const myPromotionLotStatuses = promotionOptions.reduce((arr, {\n    promotionLots\n  }) => [...arr, ...promotionLots], []).filter(({\n    attributedToLink = {}\n  }) => attributedToLink._id === loanId).map(({\n    status\n  }) => status);\n\n  if (myPromotionLotStatuses.indexOf(PROMOTION_LOT_STATUS.SOLD) >= 0) {\n    return PROMOTION_LOT_STATUS.SOLD;\n  }\n\n  if (myPromotionLotStatuses.indexOf(PROMOTION_LOT_STATUS.BOOKED) >= 0) {\n    return PROMOTION_LOT_STATUS.BOOKED;\n  }\n\n  if (myPromotionLotStatuses.indexOf(PROMOTION_LOT_STATUS.AVAILABLE) >= 0) {\n    return PROMOTION_LOT_STATUS.AVAILABLE;\n  } // return undefined if no promotion lots are attributed to this user\n\n};\n\nconst shouldHideForLotStatus = ({\n  forLotStatus = []\n}, promotionLotStatus, isAttributed) => {\n  if (promotionLotStatus === PROMOTION_LOT_STATUS.AVAILABLE && forLotStatus.includes(promotionLotStatus)) {\n    return false;\n  } // For status BOOKED and SOLD, we check that it is attributed\n\n\n  if (forLotStatus.includes(promotionLotStatus) && isAttributed) {\n    return false;\n  }\n\n  return true;\n};\n\nconst shouldAnonymize = ({\n  customerOwnerType,\n  permissions,\n  promotionLotStatus = PROMOTION_LOT_STATUS.AVAILABLE,\n  isAttributed\n}) => {\n  const {\n    displayCustomerNames\n  } = permissions;\n\n  if (displayCustomerNames === false || !customerOwnerType) {\n    return true;\n  }\n\n  const shouldHide = shouldHideForLotStatus(displayCustomerNames, promotionLotStatus, isAttributed);\n\n  if (displayCustomerNames.invitedBy === PROMOTION_INVITED_BY_TYPE.ANY) {\n    return shouldHide;\n  }\n\n  switch (customerOwnerType) {\n    case PROMOTION_INVITED_BY_TYPE.USER:\n      return shouldHide || ![PROMOTION_INVITED_BY_TYPE.USER, PROMOTION_INVITED_BY_TYPE.ORGANISATION].includes(displayCustomerNames.invitedBy);\n\n    case PROMOTION_INVITED_BY_TYPE.ORGANISATION:\n      return shouldHide || displayCustomerNames.invitedBy !== PROMOTION_INVITED_BY_TYPE.ORGANISATION;\n\n    default:\n      return true;\n  }\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"promotionConstants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotions/promotionConstants.js                                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  PROMOTIONS_COLLECTION: () => PROMOTIONS_COLLECTION,\n  PROMOTION_TYPES: () => PROMOTION_TYPES,\n  PROMOTION_STATUS: () => PROMOTION_STATUS,\n  PROMOTION_QUERIES: () => PROMOTION_QUERIES,\n  PROMOTION_INVITED_BY_TYPE: () => PROMOTION_INVITED_BY_TYPE,\n  PROMOTION_PERMISSIONS: () => PROMOTION_PERMISSIONS,\n  PROMOTION_PERMISSIONS_BUNDLES: () => PROMOTION_PERMISSIONS_BUNDLES,\n  PROMOTION_PERMISSIONS_FULL_ACCESS: () => PROMOTION_PERMISSIONS_FULL_ACCESS\n});\nlet merge;\nmodule.link(\"lodash/merge\", {\n  default(v) {\n    merge = v;\n  }\n\n}, 0);\nlet PROMOTION_LOT_STATUS;\nmodule.link(\"../promotionLots/promotionLotConstants\", {\n  PROMOTION_LOT_STATUS(v) {\n    PROMOTION_LOT_STATUS = v;\n  }\n\n}, 1);\nconst PROMOTIONS_COLLECTION = 'promotions';\nconst PROMOTION_TYPES = {\n  CREDIT: 'CREDIT',\n  SHARE: 'SHARE'\n};\nconst PROMOTION_STATUS = {\n  CANCELLED: 'CANCELLED',\n  FINISHED: 'FINISHED',\n  OPEN: 'OPEN',\n  PREPARATION: 'PREPARATION'\n};\nconst PROMOTION_QUERIES = {\n  ADMIN_PROMOTIONS: 'ADMIN_PROMOTIONS',\n  APP_PROMOTION: 'APP_PROMOTION',\n  PRO_PROMOTION: 'PRO_PROMOTION',\n  PRO_PROMOTIONS: 'PRO_PROMOTIONS',\n  PRO_PROMOTION_USERS: 'PRO_PROMOTION_USERS',\n  PROMOTION_FILES: 'PROMOTION_FILES',\n  PROMOTION_SEARCH: 'PROMOTION_SEARCH',\n  PRO_PROMOTION_SIMPLE: 'PRO_PROMOTION_SIMPLE'\n};\nconst PROMOTION_INVITED_BY_TYPE = {\n  ANY: 'ANY',\n  USER: 'USER',\n  ORGANISATION: 'ORGANISATION'\n};\nconst PROMOTION_PERMISSIONS = {\n  DISPLAY_CUSTOMER_NAMES: {\n    FOR_LOT_STATUS: (0, _objectSpread2.default)({}, PROMOTION_LOT_STATUS),\n    INVITED_BY: (0, _objectSpread2.default)({}, PROMOTION_INVITED_BY_TYPE)\n  }\n};\nconst PROMOTION_PERMISSIONS_BUNDLES = {\n  INVITATION: settings => ({\n    canInviteCustomers: true,\n    displayCustomerNames: {\n      forLotStatus: Object.values(PROMOTION_PERMISSIONS.DISPLAY_CUSTOMER_NAMES.FOR_LOT_STATUS),\n      invitedBy: PROMOTION_PERMISSIONS.DISPLAY_CUSTOMER_NAMES.INVITED_BY.ORGANISATION\n    }\n  }),\n  CONSULTATION: ({\n    consultation = {}\n  } = {}) => {\n    const {\n      forLotStatus = [],\n      invitedBy = PROMOTION_PERMISSIONS.DISPLAY_CUSTOMER_NAMES.INVITED_BY.ANY\n    } = consultation;\n    return {\n      displayCustomerNames: {\n        forLotStatus,\n        invitedBy\n      }\n    };\n  },\n  MODIFICATION: settings => ({\n    canAddLots: true,\n    canModifyLots: true,\n    canRemoveLots: true,\n    canModifyPromotion: true,\n    canManageDocuments: true\n  }),\n  BOOKING: settings => ({\n    canBookLots: true\n  }),\n  SELLING: settings => ({\n    canSellLots: true\n  })\n};\n\nconst PROMOTION_PERMISSIONS_FULL_ACCESS = () => {\n  const settings = {\n    consultation: {\n      forLotStatus: Object.values(PROMOTION_PERMISSIONS.DISPLAY_CUSTOMER_NAMES.FOR_LOT_STATUS),\n      invitedBy: PROMOTION_PERMISSIONS.DISPLAY_CUSTOMER_NAMES.INVITED_BY.ANY\n    }\n  };\n  return Object.keys(PROMOTION_PERMISSIONS_BUNDLES).reduce((bundles, bundle) => merge({}, bundles, PROMOTION_PERMISSIONS_BUNDLES[bundle](settings)), {});\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"promotions.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotions/promotions.js                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet PromotionSchema;\nmodule.link(\"./schemas/PromotionSchema\", {\n  default(v) {\n    PromotionSchema = v;\n  }\n\n}, 1);\nlet PROMOTIONS_COLLECTION;\nmodule.link(\"./promotionConstants\", {\n  PROMOTIONS_COLLECTION(v) {\n    PROMOTIONS_COLLECTION = v;\n  }\n\n}, 2);\nconst Promotions = new Mongo.Collection(PROMOTIONS_COLLECTION);\nPromotions.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true\n});\nPromotions.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false\n});\nPromotions.attachSchema(PromotionSchema);\nmodule.exportDefault(Promotions);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"queries.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotions/queries.js                                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  adminPromotions: () => adminPromotions,\n  appPromotion: () => appPromotion,\n  promotionSearch: () => promotionSearch,\n  proPromotions: () => proPromotions,\n  proPromotionUsers: () => proPromotionUsers\n});\nlet adminPromotionsFragment, proPromotion, searchPromotions;\nmodule.link(\"../fragments\", {\n  adminPromotions(v) {\n    adminPromotionsFragment = v;\n  },\n\n  proPromotion(v) {\n    proPromotion = v;\n  },\n\n  searchPromotions(v) {\n    searchPromotions = v;\n  }\n\n}, 0);\nlet PROMOTION_QUERIES;\nmodule.link(\"./promotionConstants\", {\n  PROMOTION_QUERIES(v) {\n    PROMOTION_QUERIES = v;\n  }\n\n}, 1);\nlet Promotions;\nmodule.link(\".\", {\n  default(v) {\n    Promotions = v;\n  }\n\n}, 2);\nconst adminPromotions = Promotions.createQuery(PROMOTION_QUERIES.ADMIN_PROMOTIONS, adminPromotionsFragment());\nconst appPromotion = Promotions.createQuery(PROMOTION_QUERIES.APP_PROMOTION, proPromotion({\n  withFilteredLoan: true\n}));\nconst promotionSearch = Promotions.createQuery(PROMOTION_QUERIES.PROMOTION_SEARCH, (0, _objectSpread2.default)({}, searchPromotions(), {\n  $options: {\n    sort: {\n      createdAt: -1\n    },\n    limit: 5\n  }\n}));\nconst proPromotions = Promotions.createQuery(PROMOTION_QUERIES.PRO_PROMOTIONS, proPromotion());\nconst proPromotionUsers = Promotions.createQuery(PROMOTION_QUERIES.PRO_PROMOTION_USERS, {\n  users: {\n    name: 1,\n    organisations: {\n      name: 1,\n      users: {\n        _id: 1\n      }\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"reducers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/promotions/reducers.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet PROMOTION_LOT_STATUS;\nmodule.link(\"../constants\", {\n  PROMOTION_LOT_STATUS(v) {\n    PROMOTION_LOT_STATUS = v;\n  }\n\n}, 0);\nlet addressReducer;\nmodule.link(\"../reducers/addressReducer\", {\n  default(v) {\n    addressReducer = v;\n  }\n\n}, 1);\nlet Promotions;\nmodule.link(\".\", {\n  default(v) {\n    Promotions = v;\n  }\n\n}, 2);\n\nconst promotionLotStatusReducer = status => ({\n  body: {\n    promotionLots: {\n      status: 1\n    }\n  },\n  reduce: ({\n    promotionLots = []\n  }) => promotionLots.filter(({\n    status: promotionLotStatus\n  }) => status === promotionLotStatus)\n});\n\nPromotions.addReducers((0, _objectSpread2.default)({}, addressReducer, {\n  soldPromotionLots: promotionLotStatusReducer(PROMOTION_LOT_STATUS.SOLD),\n  bookedPromotionLots: promotionLotStatusReducer(PROMOTION_LOT_STATUS.BOOKED),\n  availablePromotionLots: promotionLotStatusReducer(PROMOTION_LOT_STATUS.AVAILABLE)\n}));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"properties\":{\"schemas\":{\"PropertySchema.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/properties/schemas/PropertySchema.js                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  propertyPermissionsSchema: () => propertyPermissionsSchema,\n  PropertySchema: () => PropertySchema,\n  userAllowedKeys: () => userAllowedKeys,\n  PropertySchemaAdmin: () => PropertySchemaAdmin\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 1);\nlet createdAt, updatedAt, additionalDocuments, address, mortgageNoteLinks, moneyField, userLinksSchema, documentsField, cacheField;\nmodule.link(\"../../helpers/sharedSchemas\", {\n  createdAt(v) {\n    createdAt = v;\n  },\n\n  updatedAt(v) {\n    updatedAt = v;\n  },\n\n  additionalDocuments(v) {\n    additionalDocuments = v;\n  },\n\n  address(v) {\n    address = v;\n  },\n\n  mortgageNoteLinks(v) {\n    mortgageNoteLinks = v;\n  },\n\n  moneyField(v) {\n    moneyField = v;\n  },\n\n  userLinksSchema(v) {\n    userLinksSchema = v;\n  },\n\n  documentsField(v) {\n    documentsField = v;\n  },\n\n  cacheField(v) {\n    cacheField = v;\n  }\n\n}, 2);\nlet propertyConstants;\nmodule.link(\"../propertyConstants\", {\n  \"*\"(v) {\n    propertyConstants = v;\n  }\n\n}, 3);\nlet initialDocuments;\nmodule.link(\"../propertiesAdditionalDocuments\", {\n  initialDocuments(v) {\n    initialDocuments = v;\n  }\n\n}, 4);\nconst SCHEMA_BOOLEAN = {\n  type: Boolean,\n  optional: true,\n  defaultValue: false\n};\nconst propertyPermissionsSchema = {\n  canInviteCustomers: SCHEMA_BOOLEAN,\n  canInviteProUsers: SCHEMA_BOOLEAN,\n  canModifyProperty: SCHEMA_BOOLEAN,\n  canManagePermissions: SCHEMA_BOOLEAN,\n  canSellProperty: SCHEMA_BOOLEAN,\n  canBookProperty: SCHEMA_BOOLEAN,\n  displayCustomerNames: {\n    type: SimpleSchema.oneOf(Boolean, Object),\n    optional: true,\n\n    autoValue() {\n      if (Meteor.isServer && this.isSet) {\n        if (this.value === undefined) {\n          return false;\n        }\n\n        if (this.value instanceof Object) {\n          if (!Object.keys(this.value).length) {\n            return false;\n          }\n\n          if (!this.value.referredBy) {\n            return false;\n          }\n        }\n\n        return this.value;\n      }\n    }\n\n  },\n  'displayCustomerNames.referredBy': {\n    type: String,\n    optional: true,\n    allowedValues: Object.values(propertyConstants.PROPERTY_PERMISSIONS.DISPLAY_CUSTOMER_NAMES.REFERRED_BY),\n    uniforms: {\n      displayEmpty: true,\n      placeholder: 'Ne pas afficher le nom des clients'\n    }\n  },\n  'displayCustomerNames.forPropertyStatus': {\n    type: Array,\n    optional: true,\n    defaultValue: [],\n    uniforms: {\n      displayEmpty: false,\n      placeholder: '',\n      checkboxes: true\n    },\n    condition: ({\n      permissions: {\n        displayCustomerNames = {}\n      }\n    }) => {\n      const {\n        referredBy\n      } = displayCustomerNames;\n      return !!referredBy;\n    }\n  },\n  'displayCustomerNames.forPropertyStatus.$': {\n    type: String,\n    allowedValues: Object.values(propertyConstants.PROPERTY_PERMISSIONS.DISPLAY_CUSTOMER_NAMES.FOR_PROPERTY_STATUS)\n  }\n};\nconst PropertySchema = new SimpleSchema((0, _objectSpread2.default)({\n  userId: {\n    type: String,\n    optional: true\n  },\n  createdAt,\n  updatedAt,\n  name: {\n    type: String,\n    optional: true,\n    uniforms: {\n      placeholder: null\n    }\n  },\n  description: {\n    type: String,\n    optional: true,\n    uniforms: {\n      placeholder: null,\n      multiline: true,\n      rows: 5,\n      rowsMax: 15\n    }\n  },\n  category: {\n    type: String,\n    optional: true,\n    defaultValue: propertyConstants.PROPERTY_CATEGORY.USER,\n    allowedValues: Object.values(propertyConstants.PROPERTY_CATEGORY),\n    uniforms: {\n      placeholder: null\n    }\n  },\n  value: moneyField,\n  status: {\n    type: String,\n    defaultValue: propertyConstants.PROPERTY_STATUS.FOR_SALE,\n    allowedValues: Object.values(propertyConstants.PROPERTY_STATUS),\n    uniforms: {\n      placeholder: null\n    }\n  },\n  propertyType: {\n    type: String,\n    optional: true,\n    defaultValue: propertyConstants.PROPERTY_TYPE.FLAT,\n    allowedValues: Object.values(propertyConstants.PROPERTY_TYPE),\n    uniforms: {\n      placeholder: null\n    }\n  },\n  houseType: {\n    type: String,\n    optional: true,\n    defaultValue: propertyConstants.HOUSE_TYPE.DETACHED,\n    allowedValues: Object.values(propertyConstants.HOUSE_TYPE),\n    uniforms: {\n      placeholder: null\n    },\n    condition: ({\n      propertyType\n    }) => propertyType === propertyConstants.PROPERTY_TYPE.HOUSE\n  },\n  flatType: {\n    type: String,\n    optional: true,\n    defaultValue: propertyConstants.FLAT_TYPE.SINGLE_FLOOR_APARTMENT,\n    allowedValues: Object.values(propertyConstants.FLAT_TYPE),\n    uniforms: {\n      placeholder: null\n    },\n    condition: ({\n      propertyType\n    }) => propertyType === propertyConstants.PROPERTY_TYPE.FLAT\n  },\n  investmentRent: {\n    // Rent of property if investment\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n    max: 100000000\n  }\n}, address, {\n  constructionYear: {\n    type: SimpleSchema.Integer,\n    min: 0,\n    max: 2030,\n    optional: true\n  },\n  renovationYear: {\n    type: SimpleSchema.Integer,\n    min: 0,\n    max: 2030,\n    optional: true\n  },\n  insideArea: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0\n  },\n  areaNorm: {\n    type: String,\n    optional: true,\n    allowedValues: Object.values(propertyConstants.AREA_NORM),\n    defaultValue: propertyConstants.AREA_NORM.NIA,\n    uniforms: {\n      placeholder: null\n    }\n  },\n  landArea: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0\n  },\n  terraceArea: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0\n  },\n  gardenArea: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0\n  },\n  numberOfFloors: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n    max: 20\n  },\n  floorNumber: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n    max: 20\n  },\n  roomCount: {\n    type: Number,\n    optional: true,\n    min: 0,\n    max: 100\n  },\n  bathroomCount: {\n    type: Number,\n    optional: true,\n    min: 0,\n    max: 100\n  },\n  volume: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n    max: 100000\n  },\n  volumeNorm: {\n    type: String,\n    defaultValue: propertyConstants.VOLUME_NORM.SIA_416,\n    allowedValues: Object.values(propertyConstants.VOLUME_NORM),\n    uniforms: {\n      placeholder: null\n    }\n  },\n  parkingInside: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n    max: 100\n  },\n  parkingOutside: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n    max: 100\n  },\n  minergie: {\n    type: String,\n    defaultValue: propertyConstants.MINERGIE_CERTIFICATE.WITHOUT_CERTIFICATE,\n    allowedValues: Object.values(propertyConstants.MINERGIE_CERTIFICATE),\n    uniforms: {\n      placeholder: null\n    }\n  },\n  isCoproperty: {\n    type: Boolean,\n    defaultValue: false\n  },\n  copropertyPercentage: {\n    type: SimpleSchema.Integer,\n    min: 0,\n    max: 1000,\n    optional: true\n  },\n  isNew: {\n    type: Boolean,\n    defaultValue: false\n  },\n  latitude: {\n    type: Number,\n    optional: true,\n    min: -90,\n    max: 90\n  },\n  longitude: {\n    type: Number,\n    optional: true,\n    min: -180,\n    max: 180\n  },\n  adminValidation: {\n    type: Object,\n    defaultValue: {},\n    blackbox: true\n  },\n  yearlyExpenses: moneyField,\n  landValue: moneyField,\n  constructionValue: moneyField,\n  additionalMargin: moneyField\n}, additionalDocuments(initialDocuments), mortgageNoteLinks, userLinksSchema(propertyPermissionsSchema), {\n  externalId: {\n    type: String,\n    optional: true\n  },\n  useOpenGraph: {\n    type: Boolean,\n    optional: true,\n    condition: ({\n      externalUrl\n    }) => externalUrl\n  },\n  externalUrl: {\n    type: String,\n    regEx: SimpleSchema.RegEx.Url,\n    optional: true\n  },\n  imageUrls: {\n    type: Array,\n    optional: true,\n    defaultValue: []\n  },\n  'imageUrls.$': {\n    type: String,\n    regEx: SimpleSchema.RegEx.Url\n  },\n  documents: documentsField,\n  loanCount: {\n    type: Number,\n    optional: true\n  }\n}));\nconst protectedKeys = ['_id', 'additionalDocuments', 'address', 'adminValidation', 'createdAt', 'latitude', 'longitude', 'mortgageNoteLinks', 'updatedAt', 'userId', 'documents', 'userLinks'];\nconst userAllowedKeys = ['externalId', 'address1', 'address2', 'zipCode', 'city', 'value', 'description', 'propertyType', 'flatType', 'houseType', 'roomCount', 'insideArea', 'landArea', 'terraceArea', 'gardenArea', 'constructionYear', 'externalUrl', 'useOpenGraph', 'imageUrls'];\nconst PropertySchemaAdmin = PropertySchema.omit(...protectedKeys);\nmodule.exportDefault(PropertySchema);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"PropertyService.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/properties/server/PropertyService.js                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  PropertyService: () => PropertyService\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet EMAIL_IDS;\nmodule.link(\"../../email/emailConstants\", {\n  EMAIL_IDS(v) {\n    EMAIL_IDS = v;\n  }\n\n}, 1);\nlet sendEmail;\nmodule.link(\"../../methods\", {\n  sendEmail(v) {\n    sendEmail = v;\n  }\n\n}, 2);\nlet LoanService;\nmodule.link(\"../../loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 3);\nlet CollectionService;\nmodule.link(\"../../helpers/CollectionService\", {\n  default(v) {\n    CollectionService = v;\n  }\n\n}, 4);\nlet PROPERTY_PERMISSIONS_FULL_ACCESS, PROPERTY_CATEGORY;\nmodule.link(\"../propertyConstants\", {\n  PROPERTY_PERMISSIONS_FULL_ACCESS(v) {\n    PROPERTY_PERMISSIONS_FULL_ACCESS = v;\n  },\n\n  PROPERTY_CATEGORY(v) {\n    PROPERTY_CATEGORY = v;\n  }\n\n}, 5);\nlet Properties;\nmodule.link(\"../properties\", {\n  default(v) {\n    Properties = v;\n  }\n\n}, 6);\nlet UserService;\nmodule.link(\"../../users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 7);\nlet removePropertyFromLoan;\nmodule.link(\"./propertyServerHelpers\", {\n  removePropertyFromLoan(v) {\n    removePropertyFromLoan = v;\n  }\n\n}, 8);\nlet getUserNameAndOrganisation;\nmodule.link(\"../../helpers\", {\n  getUserNameAndOrganisation(v) {\n    getUserNameAndOrganisation = v;\n  }\n\n}, 9);\nlet HTTP_STATUS_CODES;\nmodule.link(\"../../RESTAPI/server/restApiConstants\", {\n  HTTP_STATUS_CODES(v) {\n    HTTP_STATUS_CODES = v;\n  }\n\n}, 10);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass PropertyService extends CollectionService {\n  constructor() {\n    super(Properties);\n\n    _defineProperty(this, \"insert\", ({\n      property,\n      userId,\n      loanId\n    }) => {\n      const propertyId = super.insert((0, _objectSpread2.default)({}, property, {\n        userId\n      }));\n\n      if (loanId) {\n        LoanService.addPropertyToLoan({\n          loanId,\n          propertyId\n        });\n      }\n\n      return propertyId;\n    });\n\n    _defineProperty(this, \"update\", ({\n      propertyId,\n      object\n    }) => Properties.update(propertyId, {\n      $set: object\n    }));\n\n    _defineProperty(this, \"remove\", ({\n      propertyId,\n      loanId\n    }) => {\n      const property = this.fetchOne({\n        $filters: {\n          _id: propertyId\n        },\n        loans: {\n          _id: 1\n        },\n        category: 1\n      });\n\n      if (property && property.loans && property.loans.length > 1) {\n        if (loanId) {\n          const loansLink = this.getLink(propertyId, 'loans');\n          loansLink.remove(loanId);\n          return removePropertyFromLoan({\n            loan: LoanService.get(loanId),\n            propertyId\n          });\n        } // Can't delete a property that has multiple loans without specifying\n        // from where you want to remove it\n\n\n        return false;\n      }\n\n      return Properties.remove(propertyId);\n    });\n\n    _defineProperty(this, \"pushValue\", ({\n      propertyId,\n      object\n    }) => Properties.update(propertyId, {\n      $push: object\n    }));\n\n    _defineProperty(this, \"popValue\", ({\n      propertyId,\n      object\n    }) => Properties.update(propertyId, {\n      $pop: object\n    }));\n\n    _defineProperty(this, \"pullValue\", ({\n      propertyId,\n      object\n    }) => Properties.update(propertyId, {\n      $pull: object\n    }));\n\n    _defineProperty(this, \"hasOneOfProperties\", ({\n      userId,\n      propertyIds\n    }) => propertyIds.some(propertyId => UserService.hasProperty({\n      userId,\n      propertyId\n    })));\n\n    _defineProperty(this, \"inviteUser\", ({\n      propertyIds,\n      admin,\n      pro,\n      userId,\n      isNewUser,\n      shareSolvency\n    }) => {\n      const properties = propertyIds.map(propertyId => this.get(propertyId));\n\n      if (this.hasOneOfProperties({\n        userId,\n        propertyIds\n      })) {\n        throw new Meteor.Error(HTTP_STATUS_CODES.CONFLICT, 'Cet utilisateur est déjà invité à ce bien immobilier');\n      }\n\n      LoanService.insertPropertyLoan({\n        userId,\n        propertyIds,\n        shareSolvency\n      });\n      const addresses = properties.map(({\n        address1\n      }) => `\"${address1}\"`);\n      return this.sendPropertyInvitationEmail({\n        userId,\n        isNewUser,\n        addresses,\n        proName: pro ? getUserNameAndOrganisation({\n          user: pro\n        }) : admin.name,\n        proUserId: pro && pro._id\n      });\n    });\n  }\n\n  sendPropertyInvitationEmail({\n    userId,\n    isNewUser,\n    proName,\n    addresses,\n    proUserId\n  }) {\n    let ctaUrl = Meteor.settings.public.subdomains.app;\n    const formattedAddresses = [addresses.slice(0, -1).join(', '), addresses.slice(-1)[0]].join(addresses.length < 2 ? '' : ' et ');\n\n    if (isNewUser) {\n      // Envoyer invitation avec enrollment link\n      ctaUrl = UserService.getEnrollmentUrl({\n        userId\n      });\n    }\n\n    return sendEmail.run({\n      emailId: EMAIL_IDS.INVITE_USER_TO_PROPERTY,\n      userId,\n      params: {\n        proUserId,\n        proName,\n        address: formattedAddresses,\n        ctaUrl,\n        multiple: addresses.length > 1\n      }\n    });\n  }\n\n  addProUser({\n    propertyId,\n    userId\n  }) {\n    this.addLink({\n      id: propertyId,\n      linkName: 'users',\n      linkId: userId,\n      metadata: {\n        permissions: {}\n      }\n    });\n  }\n\n  proPropertyInsert({\n    property,\n    userId\n  }) {\n    const propertyId = this.insert({\n      property: (0, _objectSpread2.default)({}, property, {\n        category: PROPERTY_CATEGORY.PRO\n      })\n    });\n    this.addLink({\n      id: propertyId,\n      linkName: 'users',\n      linkId: userId,\n      metadata: {\n        permissions: PROPERTY_PERMISSIONS_FULL_ACCESS\n      }\n    });\n    return propertyId;\n  }\n\n  setProUserPermissions({\n    propertyId,\n    userId,\n    permissions\n  }) {\n    this.updateLinkMetadata({\n      id: propertyId,\n      linkName: 'users',\n      linkId: userId,\n      metadata: {\n        permissions\n      }\n    });\n  }\n\n  removeProFromProperty({\n    propertyId,\n    proUserId\n  }) {\n    this.removeLink({\n      id: propertyId,\n      linkName: 'users',\n      linkId: proUserId\n    });\n  }\n\n  removeCustomerFromProperty({\n    propertyId,\n    loanId\n  }) {\n    const loan = LoanService.findOne({\n      _id: loanId\n    });\n    const {\n      structures = []\n    } = loan;\n\n    if (structures.length) {\n      removePropertyFromLoan({\n        loan,\n        propertyId\n      });\n    }\n\n    this.removeLink({\n      id: propertyId,\n      linkName: 'loans',\n      linkId: loanId\n    });\n  }\n\n  insertExternalProperty(_ref) {\n    let {\n      userId,\n      property: {\n        externalId\n      }\n    } = _ref,\n        property = (0, _objectWithoutProperties2.default)(_ref.property, [\"externalId\"]);\n    const existingProperty = this.fetchOne({\n      $filters: {\n        externalId\n      }\n    });\n\n    if (existingProperty) {\n      throw new Meteor.Error(`Property with externalId \"${externalId}\" exists already`);\n    }\n\n    return this.proPropertyInsert({\n      userId,\n      property: (0, _objectSpread2.default)({\n        externalId\n      }, property)\n    });\n  }\n\n}\n\nmodule.exportDefault(new PropertyService());\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"exposures.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/properties/server/exposures.js                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet UserService;\nmodule.link(\"../../users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 1);\nlet exposeQuery;\nmodule.link(\"../../queries/queryHelpers\", {\n  exposeQuery(v) {\n    exposeQuery = v;\n  }\n\n}, 2);\nlet createSearchFilters;\nmodule.link(\"../../helpers/mongoHelpers\", {\n  createSearchFilters(v) {\n    createSearchFilters = v;\n  }\n\n}, 3);\nlet Security;\nmodule.link(\"../../security\", {\n  default(v) {\n    Security = v;\n  }\n\n}, 4);\nlet adminProperties, anonymousProperty, proProperties, userProperty, proPropertyUsers, propertySearch;\nmodule.link(\"../queries\", {\n  adminProperties(v) {\n    adminProperties = v;\n  },\n\n  anonymousProperty(v) {\n    anonymousProperty = v;\n  },\n\n  proProperties(v) {\n    proProperties = v;\n  },\n\n  userProperty(v) {\n    userProperty = v;\n  },\n\n  proPropertyUsers(v) {\n    proPropertyUsers = v;\n  },\n\n  propertySearch(v) {\n    propertySearch = v;\n  }\n\n}, 5);\nexposeQuery({\n  query: adminProperties,\n  options: {\n    allowFilterById: true\n  }\n});\nexposeQuery({\n  query: anonymousProperty,\n  overrides: {\n    firewall(userId, {\n      _id\n    }) {\n      Security.properties.checkPropertyIsPublic({\n        propertyId: _id\n      });\n    }\n\n  },\n  options: {\n    allowFilterById: true\n  }\n});\nexposeQuery({\n  query: proProperties,\n  overrides: {\n    firewall(userId, params) {\n      if (params.userId) {\n        // When visiting a pro user's page from admin\n        Security.checkUserIsAdmin(userId);\n      } else {\n        Security.checkUserIsPro(userId);\n        params.userId = userId;\n      }\n\n      if (params._id) {\n        Security.properties.hasAccessToProperty({\n          propertyId: params._id,\n          userId\n        });\n      }\n    },\n\n    embody: (body, embodyParams) => {\n      body.$filter = ({\n        filters,\n        params\n      }) => {\n        const {\n          _id: propertyId,\n          userId,\n          fetchOrganisationProperties\n        } = params;\n\n        if (propertyId) {\n          filters._id = propertyId;\n        }\n\n        if (userId) {\n          filters['userLinks._id'] = userId;\n        }\n\n        if (fetchOrganisationProperties) {\n          const {\n            organisations = []\n          } = UserService.fetchOne({\n            $filters: {\n              _id: userId\n            },\n            organisations: {\n              users: {\n                _id: 1\n              }\n            }\n          });\n          const otherOrganisationUsers = organisations.length ? organisations[0].users.map(({\n            _id: orgUserId\n          }) => orgUserId).filter(id => id !== userId) : [];\n          filters['userLinks._id'] = {\n            $in: otherOrganisationUsers\n          };\n        }\n      };\n\n      body.$postFilter = (properties, params) => {\n        const {\n          fetchOrganisationProperties,\n          userId\n        } = params;\n\n        if (fetchOrganisationProperties) {\n          return properties.filter(({\n            userLinks\n          }) => !userLinks.some(({\n            _id: userLinkId\n          }) => userLinkId === userId));\n        }\n\n        return properties;\n      };\n    },\n    validateParams: {\n      userId: Match.Maybe(String),\n      fetchOrganisationProperties: Match.Maybe(Boolean)\n    }\n  },\n  options: {\n    allowFilterById: true\n  }\n});\nexposeQuery({\n  query: userProperty,\n  overrides: {\n    firewall(userId, {\n      _id: propertyId\n    }) {\n      Security.properties.hasAccessToProperty({\n        propertyId,\n        userId\n      });\n    }\n\n  },\n  options: {\n    allowFilterById: true\n  }\n});\nexposeQuery({\n  query: proPropertyUsers,\n  overrides: {\n    firewall(userId, params) {\n      const {\n        propertyId\n      } = params;\n      params.userId = userId;\n      Security.properties.isAllowedToView({\n        propertyId,\n        userId\n      });\n    },\n\n    embody: (body, embodyParams) => {\n      body.$filter = ({\n        filters,\n        params: {\n          propertyId\n        }\n      }) => {\n        filters._id = propertyId;\n      };\n\n      body.$postFilter = (properties = [], params) => {\n        const property = !!properties.length && properties[0];\n\n        if (!property) {\n          return [];\n        }\n\n        const {\n          users = []\n        } = property;\n        return users;\n      };\n    },\n    validateParams: {\n      propertyId: String,\n      userId: String\n    }\n  }\n});\nexposeQuery({\n  query: propertySearch,\n  overrides: {\n    validateParams: {\n      searchQuery: Match.Maybe(String)\n    },\n    embody: body => {\n      body.$filter = ({\n        filters,\n        params: {\n          searchQuery\n        }\n      }) => {\n        Object.assign(filters, createSearchFilters(['address1', 'city', '_id'], searchQuery));\n      };\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"hooks.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/properties/server/hooks.js                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet LoanService;\nmodule.link(\"../../loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 0);\nlet Properties;\nmodule.link(\"..\", {\n  default(v) {\n    Properties = v;\n  }\n\n}, 1);\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 2);\nlet additionalDocumentsHook;\nmodule.link(\"../../helpers/sharedHooks\", {\n  additionalDocumentsHook(v) {\n    additionalDocumentsHook = v;\n  }\n\n}, 3);\nlet PROPERTIES_COLLECTION;\nmodule.link(\"../propertyConstants\", {\n  PROPERTIES_COLLECTION(v) {\n    PROPERTIES_COLLECTION = v;\n  }\n\n}, 4);\nlet initialDocuments, conditionalDocuments;\nmodule.link(\"../propertiesAdditionalDocuments\", {\n  initialDocuments(v) {\n    initialDocuments = v;\n  },\n\n  conditionalDocuments(v) {\n    conditionalDocuments = v;\n  }\n\n}, 5);\nlet UpdateWatcherService;\nmodule.link(\"../../updateWatchers/server/UpdateWatcherService\", {\n  default(v) {\n    UpdateWatcherService = v;\n  }\n\n}, 6);\nlet ROLES;\nmodule.link(\"../../constants\", {\n  ROLES(v) {\n    ROLES = v;\n  }\n\n}, 7);\nlet FileService;\nmodule.link(\"../../files/server/FileService\", {\n  default(v) {\n    FileService = v;\n  }\n\n}, 8);\nlet PropertySchemaAdmin;\nmodule.link(\"../schemas/PropertySchema\", {\n  PropertySchemaAdmin(v) {\n    PropertySchemaAdmin = v;\n  }\n\n}, 9);\nlet removePropertyFromLoan;\nmodule.link(\"./propertyServerHelpers\", {\n  removePropertyFromLoan(v) {\n    removePropertyFromLoan = v;\n  }\n\n}, 10);\nProperties.before.remove((userId, {\n  _id: propertyId\n}) => {\n  // Remove all references to this property on the loan\n  const loans = LoanService.find({\n    propertyIds: propertyId\n  }).fetch();\n  loans.forEach(loan => {\n    removePropertyFromLoan({\n      loan,\n      propertyId\n    });\n  });\n});\nProperties.after.insert(additionalDocumentsHook({\n  collection: PROPERTIES_COLLECTION,\n  initialDocuments,\n  conditionalDocuments\n}));\nProperties.after.update(additionalDocumentsHook({\n  collection: PROPERTIES_COLLECTION,\n  initialDocuments,\n  conditionalDocuments\n}));\nUpdateWatcherService.addUpdateWatching({\n  collection: Properties,\n  fields: PropertySchemaAdmin._schemaKeys,\n  shouldWatch: ({\n    userId\n  }) => SecurityService.hasRole(userId, ROLES.USER) || SecurityService.hasRole(userId, ROLES.PRO)\n});\nProperties.after.remove((userId, {\n  _id\n}) => FileService.deleteAllFilesForDoc(_id));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/properties/server/methods.js                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 0);\nlet checkInsertUserId;\nmodule.link(\"../../helpers/server/methodServerHelpers\", {\n  checkInsertUserId(v) {\n    checkInsertUserId = v;\n  }\n\n}, 1);\nlet propertyInsert, propertyUpdate, propertyDelete, pushPropertyValue, popPropertyValue, pullPropertyValue, evaluateProperty, propertyDataIsInvalid, addProUserToProperty, proPropertyInsert, setProPropertyPermissions, removeProFromProperty, removeCustomerFromProperty, insertExternalProperty;\nmodule.link(\"../methodDefinitions\", {\n  propertyInsert(v) {\n    propertyInsert = v;\n  },\n\n  propertyUpdate(v) {\n    propertyUpdate = v;\n  },\n\n  propertyDelete(v) {\n    propertyDelete = v;\n  },\n\n  pushPropertyValue(v) {\n    pushPropertyValue = v;\n  },\n\n  popPropertyValue(v) {\n    popPropertyValue = v;\n  },\n\n  pullPropertyValue(v) {\n    pullPropertyValue = v;\n  },\n\n  evaluateProperty(v) {\n    evaluateProperty = v;\n  },\n\n  propertyDataIsInvalid(v) {\n    propertyDataIsInvalid = v;\n  },\n\n  addProUserToProperty(v) {\n    addProUserToProperty = v;\n  },\n\n  proPropertyInsert(v) {\n    proPropertyInsert = v;\n  },\n\n  setProPropertyPermissions(v) {\n    setProPropertyPermissions = v;\n  },\n\n  removeProFromProperty(v) {\n    removeProFromProperty = v;\n  },\n\n  removeCustomerFromProperty(v) {\n    removeCustomerFromProperty = v;\n  },\n\n  insertExternalProperty(v) {\n    insertExternalProperty = v;\n  }\n\n}, 2);\nlet PropertyService;\nmodule.link(\"./PropertyService\", {\n  default(v) {\n    PropertyService = v;\n  }\n\n}, 3);\npropertyInsert.setHandler((context, params) => {\n  const userId = checkInsertUserId(params.userId);\n  return PropertyService.insert((0, _objectSpread2.default)({}, params, {\n    userId\n  }));\n});\npropertyUpdate.setHandler(({\n  userId\n}, params) => {\n  SecurityService.properties.isAllowedToUpdate(params.propertyId, userId);\n  return PropertyService.update(params);\n});\npropertyDelete.setHandler((context, params) => {\n  SecurityService.properties.isAllowedToDelete(params.propertyId, context.userId);\n  return PropertyService.remove(params);\n});\npushPropertyValue.setHandler(({\n  userId\n}, params) => {\n  SecurityService.properties.isAllowedToUpdate(params.propertyId, userId);\n  return PropertyService.pushValue(params);\n});\npopPropertyValue.setHandler(({\n  userId\n}, params) => {\n  SecurityService.properties.isAllowedToUpdate(params.propertyId, userId);\n  return PropertyService.popValue(params);\n});\npullPropertyValue.setHandler(({\n  userId\n}, params) => {\n  SecurityService.properties.isAllowedToUpdate(params.propertyId, userId);\n  return PropertyService.pullValue(params);\n});\nevaluateProperty.setHandler(({\n  userId\n}, params) => {\n  context.unblock();\n  SecurityService.properties.isAllowedToUpdate(params.propertyId, userId);\n  return PropertyService.evaluateProperty(params);\n});\npropertyDataIsInvalid.setHandler(({\n  userId\n}, params) => {\n  context.unblock();\n  SecurityService.properties.isAllowedToUpdate(params.propertyId, userId);\n  return PropertyService.propertyDataIsInvalid(params);\n});\naddProUserToProperty.setHandler(({\n  userId\n}, params) => {\n  SecurityService.checkUserIsPro(userId);\n  SecurityService.properties.isAllowedToInviteProUsers({\n    userId,\n    propertyId: params.propertyId\n  });\n  return PropertyService.addProUser(params);\n});\nproPropertyInsert.setHandler(({\n  userId\n}, params) => {\n  SecurityService.checkUserIsPro(userId);\n  return PropertyService.proPropertyInsert(params);\n});\nsetProPropertyPermissions.setHandler(({\n  userId\n}, params) => {\n  SecurityService.checkUserIsPro(userId);\n  SecurityService.properties.isAllowedToManagePermissions({\n    userId,\n    propertyId: params.propertyId\n  });\n  PropertyService.setProUserPermissions(params);\n});\nremoveProFromProperty.setHandler(({\n  userId\n}, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  PropertyService.removeProFromProperty(params);\n});\nremoveCustomerFromProperty.setHandler(({\n  userId\n}, params) => {\n  const {\n    loanId,\n    propertyId\n  } = params;\n  SecurityService.checkUserIsPro(userId);\n  SecurityService.properties.isAllowedToRemoveCustomer({\n    userId,\n    propertyId,\n    loanId\n  });\n  PropertyService.removeCustomerFromProperty(params);\n});\ninsertExternalProperty.setHandler(({\n  userId\n}, params) => {\n  SecurityService.checkUserIsPro(userId);\n  PropertyService.insertExternalProperty((0, _objectSpread2.default)({\n    userId\n  }, params));\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"propertyServerHelpers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/properties/server/propertyServerHelpers.js                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  getProPropertyCustomerOwnerType: () => getProPropertyCustomerOwnerType,\n  makeProPropertyLoanAnonymizer: () => makeProPropertyLoanAnonymizer,\n  removePropertyFromLoan: () => removePropertyFromLoan\n});\nlet UserService;\nmodule.link(\"../../users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 0);\nlet clientShouldAnonymize, getCustomerOwnerType;\nmodule.link(\"../propertyClientHelper\", {\n  shouldAnonymize(v) {\n    clientShouldAnonymize = v;\n  },\n\n  getProPropertyCustomerOwnerType(v) {\n    getCustomerOwnerType = v;\n  }\n\n}, 1);\nlet PropertyService;\nmodule.link(\"./PropertyService\", {\n  default(v) {\n    PropertyService = v;\n  }\n\n}, 2);\nlet LoanService;\nmodule.link(\"../../loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 3);\nconst ANONYMIZED_STRING = 'XXX';\nconst ANONYMIZED_USER = {\n  name: ANONYMIZED_STRING,\n  phoneNumbers: [ANONYMIZED_STRING],\n  email: ANONYMIZED_STRING\n};\n\nconst anonymizeUser = ({\n  user\n}) => (0, _objectSpread2.default)({}, user, ANONYMIZED_USER);\n\nconst getUserProPropertyPermissions = ({\n  userId,\n  propertyId\n}) => {\n  const user = UserService.fetchOne({\n    $filters: {\n      _id: userId\n    },\n    proProperties: {\n      _id: 1\n    }\n  });\n\n  if (!user) {\n    return {};\n  }\n\n  const {\n    proProperties: properties = []\n  } = user;\n  const {\n    $metadata: {\n      permissions = {}\n    } = {}\n  } = properties.find(({\n    _id\n  }) => _id === propertyId) || {};\n  return permissions;\n};\n\nconst getCustomerReferredBy = ({\n  customerId\n}) => {\n  const {\n    referredByUser,\n    referredByOrganisation\n  } = UserService.fetchOne({\n    $filters: {\n      _id: customerId\n    },\n    referredByUser: {\n      _id: 1\n    },\n    referredByOrganisation: {\n      _id: 1\n    }\n  }) || {};\n  return {\n    referredByUser,\n    referredByOrganisation\n  };\n};\n\nconst getProPropertyStatus = ({\n  propertyId\n}) => {\n  const {\n    status\n  } = PropertyService.fetchOne({\n    $filters: {\n      _id: propertyId\n    },\n    status: 1\n  }) || {};\n  return status;\n};\n\nconst getProPropertyCustomerOwnerType = ({\n  customerId,\n  userId\n}) => {\n  const {\n    referredByUser,\n    referredByOrganisation\n  } = getCustomerReferredBy({\n    customerId\n  });\n  const user = UserService.fetchOne({\n    $filters: {\n      _id: userId\n    },\n    organisations: {\n      users: {\n        _id: 1\n      }\n    }\n  });\n\n  if (!user) {\n    return null;\n  }\n\n  const {\n    organisations = []\n  } = user;\n  return getCustomerOwnerType({\n    referredByUser,\n    referredByOrganisation,\n    currentUser: {\n      _id: userId,\n      organisations\n    }\n  });\n};\n\nconst shouldAnonymize = ({\n  customerId,\n  userId,\n  propertyId\n}) => {\n  const customerOwnerType = getProPropertyCustomerOwnerType({\n    customerId,\n    userId\n  });\n  const permissions = getUserProPropertyPermissions({\n    userId,\n    propertyId\n  });\n  const propertyStatus = getProPropertyStatus({\n    propertyId\n  });\n  return clientShouldAnonymize({\n    customerOwnerType,\n    permissions,\n    propertyStatus\n  });\n};\n\nconst makeProPropertyLoanAnonymizer = ({\n  userId,\n  propertyIds = [],\n  anonymize\n}) => {\n  let propertiesPermissionsAndStatus;\n\n  if (anonymize === undefined) {\n    propertiesPermissionsAndStatus = propertyIds.map(propertyId => ({\n      propertyId,\n      permissions: getUserProPropertyPermissions({\n        userId,\n        propertyId\n      }),\n      status: getProPropertyStatus({\n        propertyId\n      })\n    }));\n  }\n\n  return loan => {\n    const {\n      user = {},\n      properties = []\n    } = loan,\n          rest = (0, _objectWithoutProperties2.default)(loan, [\"user\", \"properties\"]);\n    const {\n      _id: customerId\n    } = user;\n    const shouldAnonymizeUser = anonymize === undefined ? propertiesPermissionsAndStatus.map(({\n      propertyId,\n      permissions,\n      status: propertyStatus\n    }) => {\n      const customerOwnerType = getProPropertyCustomerOwnerType({\n        customerId,\n        propertyId,\n        userId\n      });\n      return clientShouldAnonymize({\n        customerOwnerType,\n        permissions,\n        propertyStatus\n      });\n    }).every(anonymizeForProperty => anonymizeForProperty) : anonymize;\n    return (0, _objectSpread2.default)({\n      user: shouldAnonymizeUser ? anonymizeUser({\n        user\n      }) : user,\n      properties: shouldAnonymizeUser ? properties.map((_ref) => {\n        let {\n          solvent\n        } = _ref,\n            property = (0, _objectWithoutProperties2.default)(_ref, [\"solvent\"]);\n        return property;\n      }) : properties,\n      isAnonymized: !!shouldAnonymizeUser\n    }, rest);\n  };\n};\n\nconst removePropertyFromLoan = ({\n  loan,\n  propertyId\n}) => LoanService.update({\n  loanId: loan._id,\n  object: {\n    structures: loan.structures.map(structure => (0, _objectSpread2.default)({}, structure, {\n      propertyId: structure.propertyId === propertyId ? null : structure.propertyId\n    }))\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"serverReducers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/properties/server/serverReducers.js                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet Properties;\nmodule.link(\"../properties\", {\n  default(v) {\n    Properties = v;\n  }\n\n}, 0);\nlet assigneeReducer;\nmodule.link(\"../../reducers/assigneeReducer\", {\n  default(v) {\n    assigneeReducer = v;\n  }\n\n}, 1);\nlet createMeteorAsyncFunction;\nmodule.link(\"../../helpers\", {\n  createMeteorAsyncFunction(v) {\n    createMeteorAsyncFunction = v;\n  }\n\n}, 2);\nlet getOpenGraphMeta;\nmodule.link(\"../../../utils/openGraph\", {\n  getOpenGraphMeta(v) {\n    getOpenGraphMeta = v;\n  }\n\n}, 3);\nProperties.addReducers((0, _objectSpread2.default)({}, assigneeReducer(), {\n  openGraphData: {\n    body: {\n      externalUrl: 1\n    },\n    reduce: ({\n      externalUrl\n    }) => {\n      const asyncFunc = createMeteorAsyncFunction(getOpenGraphMeta);\n\n      if (externalUrl) {\n        return asyncFunc(externalUrl);\n      }\n\n      return undefined;\n    }\n  }\n}));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"fakes.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/properties/fakes.js                                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  emptyProperty: () => emptyProperty,\n  fakeProperty: () => fakeProperty\n});\nlet RESIDENCE_TYPE, PROPERTY_TYPE, MINERGIE_CERTIFICATE, VOLUME_NORM;\nmodule.link(\"./propertyConstants\", {\n  RESIDENCE_TYPE(v) {\n    RESIDENCE_TYPE = v;\n  },\n\n  PROPERTY_TYPE(v) {\n    PROPERTY_TYPE = v;\n  },\n\n  MINERGIE_CERTIFICATE(v) {\n    MINERGIE_CERTIFICATE = v;\n  },\n\n  VOLUME_NORM(v) {\n    VOLUME_NORM = v;\n  }\n\n}, 0);\nconst emptyProperty = {};\nconst fakeProperty = {\n  value: 1000000,\n  address1: 'Rue du Succès 18',\n  zipCode: 1000,\n  city: 'Lausanne',\n  residenceType: RESIDENCE_TYPE.MAIN_RESIDENCE,\n  type: PROPERTY_TYPE.FLAT,\n  futureOwner: 0,\n  constructionYear: 2010,\n  landArea: 300,\n  insideArea: 140,\n  volume: 1500,\n  volumeNorm: VOLUME_NORM.SIA_416,\n  roomCount: 5,\n  numberOfFloors: 5,\n  floorNumber: 3,\n  parkingInside: 1,\n  parkingOutside: 2,\n  minergie: MINERGIE_CERTIFICATE.MINERGIE_ECO,\n  isCoproperty: true,\n  copropertyPercentage: 400,\n  terraceArea: 20\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/properties/index.js                                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  propertyMethods: () => propertyMethods\n});\nlet methodDefinitions;\nmodule.link(\"./methodDefinitions\", {\n  \"*\"(v) {\n    methodDefinitions = v;\n  }\n\n}, 0);\nmodule.link(\"./methodDefinitions\", {\n  \"*\": \"*\"\n}, 1);\nmodule.link(\"./properties\", {\n  default: \"default\"\n}, 2);\nconst propertyMethods = methodDefinitions;\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"links.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/properties/links.js                                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Properties;\nmodule.link(\"./properties\", {\n  default(v) {\n    Properties = v;\n  }\n\n}, 0);\nlet Users, Loans, Promotions, PromotionLots, MortgageNotes;\nmodule.link(\"..\", {\n  Users(v) {\n    Users = v;\n  },\n\n  Loans(v) {\n    Loans = v;\n  },\n\n  Promotions(v) {\n    Promotions = v;\n  },\n\n  PromotionLots(v) {\n    PromotionLots = v;\n  },\n\n  MortgageNotes(v) {\n    MortgageNotes = v;\n  }\n\n}, 1);\nProperties.addLinks({\n  user: {\n    field: 'userId',\n    collection: Users,\n    type: 'one'\n  },\n  loans: {\n    collection: Loans,\n    inversedBy: 'properties'\n  },\n  promotion: {\n    collection: Promotions,\n    inversedBy: 'properties',\n    unique: true\n  },\n  promotionLots: {\n    collection: PromotionLots,\n    inversedBy: 'properties'\n  },\n  mortgageNotes: {\n    field: 'mortgageNoteLinks',\n    collection: MortgageNotes,\n    type: 'many',\n    metadata: true,\n    autoremove: true,\n    unique: true\n  },\n  users: {\n    field: 'userLinks',\n    collection: Users,\n    type: 'many',\n    metadata: true\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methodDefinitions.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/properties/methodDefinitions.js                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  propertyInsert: () => propertyInsert,\n  propertyUpdate: () => propertyUpdate,\n  propertyDelete: () => propertyDelete,\n  pushPropertyValue: () => pushPropertyValue,\n  popPropertyValue: () => popPropertyValue,\n  pullPropertyValue: () => pullPropertyValue,\n  evaluateProperty: () => evaluateProperty,\n  propertyDataIsInvalid: () => propertyDataIsInvalid,\n  addProUserToProperty: () => addProUserToProperty,\n  proPropertyInsert: () => proPropertyInsert,\n  setProPropertyPermissions: () => setProPropertyPermissions,\n  removeProFromProperty: () => removeProFromProperty,\n  removeCustomerFromProperty: () => removeCustomerFromProperty,\n  insertExternalProperty: () => insertExternalProperty\n});\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet Method;\nmodule.link(\"../methods/methods\", {\n  Method(v) {\n    Method = v;\n  }\n\n}, 1);\nconst propertyInsert = new Method({\n  name: 'propertyInsert',\n  params: {\n    property: Object,\n    userId: Match.Optional(String),\n    loanId: Match.Optional(String)\n  }\n});\nconst propertyUpdate = new Method({\n  name: 'propertyUpdate',\n  params: {\n    propertyId: String,\n    object: Object\n  }\n});\nconst propertyDelete = new Method({\n  name: 'propertyDelete',\n  params: {\n    propertyId: String,\n    loanId: Match.Maybe(String)\n  }\n});\nconst pushPropertyValue = new Method({\n  name: 'pushPropertyValue',\n  params: {\n    propertyId: String,\n    object: Object\n  }\n});\nconst popPropertyValue = new Method({\n  name: 'popPropertyValue',\n  params: {\n    propertyId: String,\n    object: Object\n  }\n});\nconst pullPropertyValue = new Method({\n  name: 'pullPropertyValue',\n  params: {\n    propertyId: String,\n    object: Object\n  }\n});\nconst evaluateProperty = new Method({\n  name: 'evaluateProperty',\n  params: {\n    propertyId: String,\n    loanResidenceType: String\n  }\n});\nconst propertyDataIsInvalid = new Method({\n  name: 'propertyDataIsInvalid',\n  params: {\n    propertyId: String,\n    loanResidenceType: Match.Optional(String)\n  }\n});\nconst addProUserToProperty = new Method({\n  name: 'addProUserToProperty',\n  params: {\n    propertyId: String,\n    userId: String\n  }\n});\nconst proPropertyInsert = new Method({\n  name: 'proPropertyInsert',\n  params: {\n    userId: String,\n    property: Object\n  }\n});\nconst setProPropertyPermissions = new Method({\n  name: 'setProPropertyPermissions',\n  params: {\n    propertyId: String,\n    userId: String,\n    permissions: Object\n  }\n});\nconst removeProFromProperty = new Method({\n  name: 'removeProFromProperty',\n  params: {\n    propertyId: String,\n    proUserId: String\n  }\n});\nconst removeCustomerFromProperty = new Method({\n  name: 'removeCustomerFromProperty',\n  params: {\n    propertyId: String,\n    loanId: String\n  }\n});\nconst insertExternalProperty = new Method({\n  name: 'insertExternalProperty',\n  params: {\n    property: Object\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"properties.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/properties/properties.js                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet propertyConstants;\nmodule.link(\"./propertyConstants\", {\n  \"*\"(v) {\n    propertyConstants = v;\n  }\n\n}, 1);\nlet PropertySchema;\nmodule.link(\"./schemas/PropertySchema\", {\n  default(v) {\n    PropertySchema = v;\n  }\n\n}, 2);\nconst Properties = new Mongo.Collection(propertyConstants.PROPERTIES_COLLECTION); // Prevent all client side modifications of mongoDB\n\nProperties.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true\n});\nProperties.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false\n}); // Attach schema\n\nProperties.attachSchema(PropertySchema);\nmodule.exportDefault(Properties);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"propertiesAdditionalDocuments.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/properties/propertiesAdditionalDocuments.js                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  initialDocuments: () => initialDocuments,\n  conditionalDocuments: () => conditionalDocuments\n});\nlet DOCUMENTS;\nmodule.link(\"../files/fileConstants\", {\n  DOCUMENTS(v) {\n    DOCUMENTS = v;\n  }\n\n}, 0);\nlet propertyConstants;\nmodule.link(\"./propertyConstants\", {\n  \"*\"(v) {\n    propertyConstants = v;\n  }\n\n}, 1);\nlet RESIDENCE_TYPE;\nmodule.link(\"../constants\", {\n  RESIDENCE_TYPE(v) {\n    RESIDENCE_TYPE = v;\n  }\n\n}, 2);\nlet Loans;\nmodule.link(\"../loans\", {\n  default(v) {\n    Loans = v;\n  }\n\n}, 3);\nconst initialDocuments = [{\n  id: DOCUMENTS.PURCHASE_CONTRACT\n}, {\n  id: DOCUMENTS.LAND_REGISTER_EXTRACT\n}, {\n  id: DOCUMENTS.PROPERTY_MARKETING_BROCHURE\n}, {\n  id: DOCUMENTS.PROPERTY_PICTURES\n}, {\n  id: DOCUMENTS.PROPERTY_PLANS\n}, {\n  id: DOCUMENTS.FIRE_AND_WATER_INSURANCE\n}];\n\nconst getLoanResidenceType = propertyId => {\n  // If a property is shared among multiple loans, this may work in unexpected ways,\n  // since each of those properties could have a different residenceType\n  const loan = Loans.findOne({\n    propertyIds: propertyId\n  }, {\n    fields: {\n      residenceType: 1\n    },\n    sort: {\n      createdAt: 1\n    }\n  });\n  return loan && loan.residenceType;\n};\n\nconst conditionalDocuments = [{\n  id: DOCUMENTS.PROPERTY_VOLUME,\n  condition: ({\n    doc: {\n      propertyType\n    }\n  }) => propertyType === propertyConstants.PROPERTY_TYPE.HOUSE\n}, {\n  id: DOCUMENTS.PROPERTY_MINERGIE_CERTIFICATE,\n  condition: ({\n    doc: {\n      minergie\n    }\n  }) => minergie !== propertyConstants.MINERGIE_CERTIFICATE.WITHOUT_CERTIFICATE\n}, {\n  id: DOCUMENTS.COOWNERSHIP_AGREEMENT,\n  condition: ({\n    doc: {\n      isCoproperty\n    }\n  }) => isCoproperty === true\n}, {\n  id: DOCUMENTS.COOWNERSHIP_ALLOCATION_AGREEMENT,\n  condition: ({\n    doc: {\n      isCoproperty\n    }\n  }) => isCoproperty === true\n}, {\n  id: DOCUMENTS.INVESTEMENT_PROPERTY_RENTAL_STATEMENT,\n  condition: ({\n    doc: {\n      _id: propertyId\n    }\n  }) => getLoanResidenceType(propertyId) === RESIDENCE_TYPE.INVESTMENT\n}, {\n  id: DOCUMENTS.INVESTEMENT_PROPERTY_SERVICE_CHARGE_SETTLEMENT,\n  condition: ({\n    doc: {\n      _id: propertyId\n    }\n  }) => getLoanResidenceType(propertyId) === RESIDENCE_TYPE.INVESTMENT\n}];\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"propertyClientHelper.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/properties/propertyClientHelper.js                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  getCurrentUserPermissionsForProProperty: () => getCurrentUserPermissionsForProProperty,\n  getProPropertyCustomerOwnerType: () => getProPropertyCustomerOwnerType,\n  shouldAnonymize: () => shouldAnonymize\n});\nlet PROPERTY_REFERRED_BY_TYPE;\nmodule.link(\"./propertyConstants\", {\n  PROPERTY_REFERRED_BY_TYPE(v) {\n    PROPERTY_REFERRED_BY_TYPE = v;\n  }\n\n}, 0);\n\nconst getCurrentUserPermissionsForProProperty = ({\n  currentUser: {\n    properties = []\n  } = {},\n  propertyId\n}) => {\n  const property = properties.find(({\n    _id\n  }) => _id === propertyId);\n  return property && property.$metadata.permissions;\n};\n\nconst getProPropertyCustomerOwnerType = ({\n  referredByUser = {},\n  referredByOrganisation = {},\n  currentUser = {}\n}) => {\n  const {\n    _id: userId,\n    organisations = []\n  } = currentUser; // Is referred by nobody\n\n  if (!referredByUser) {\n    return null;\n  } // Is referred by user\n\n\n  if (referredByUser._id === userId) {\n    return PROPERTY_REFERRED_BY_TYPE.USER;\n  }\n\n  const organisationIds = organisations.map(({\n    _id\n  }) => _id);\n  const organisationUserIds = organisations.reduce((userIds, {\n    users = []\n  }) => [...userIds, ...users.map(({\n    _id\n  }) => _id)], []); // Is referred by organisation\n\n  if (organisationIds.includes(referredByOrganisation._id) // User is not referred by organisation, but by a user in current user's organisations\n  || organisationUserIds.includes(referredByUser._id)) {\n    return PROPERTY_REFERRED_BY_TYPE.ORGANISATION;\n  } // Is referred by someone else\n\n\n  return PROPERTY_REFERRED_BY_TYPE.ANY;\n};\n\nconst hasNoPermissions = ({\n  permissions\n}) => !Object.keys(permissions).length;\n\nconst shouldAnonymizeWhenReferredByTypeUser = ({\n  shouldHideForPropertyStatus,\n  referredBy\n}) => shouldHideForPropertyStatus || ![PROPERTY_REFERRED_BY_TYPE.USER, PROPERTY_REFERRED_BY_TYPE.ORGANISATION].includes(referredBy);\n\nconst shouldAnonymizeWhenReferredByTypeOrganisation = ({\n  shouldHideForPropertyStatus,\n  referredBy\n}) => shouldHideForPropertyStatus || referredBy !== PROPERTY_REFERRED_BY_TYPE.ORGANISATION;\n\nconst shouldAnonymize = ({\n  customerOwnerType,\n  permissions = {},\n  propertyStatus\n}) => {\n  // Never anonymize if referred by user\n  if (customerOwnerType === PROPERTY_REFERRED_BY_TYPE.USER) {\n    return false;\n  }\n\n  if (hasNoPermissions({\n    permissions\n  })) {\n    return true;\n  }\n\n  const {\n    displayCustomerNames\n  } = permissions;\n\n  if (displayCustomerNames === false || !customerOwnerType) {\n    return true;\n  }\n\n  const shouldHideForPropertyStatus = !!propertyStatus && !displayCustomerNames.forPropertyStatus.includes(propertyStatus);\n\n  if (displayCustomerNames.referredBy === PROPERTY_REFERRED_BY_TYPE.ANY) {\n    return shouldHideForPropertyStatus;\n  }\n\n  switch (customerOwnerType) {\n    case PROPERTY_REFERRED_BY_TYPE.ORGANISATION:\n      return shouldAnonymizeWhenReferredByTypeOrganisation({\n        shouldHideForPropertyStatus,\n        referredBy: displayCustomerNames.referredBy\n      });\n\n    default:\n      return true;\n  }\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"propertyConstants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/properties/propertyConstants.js                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  PROPERTIES_COLLECTION: () => PROPERTIES_COLLECTION,\n  PROPERTY_STATUS: () => PROPERTY_STATUS,\n  RESIDENCE_TYPE: () => RESIDENCE_TYPE,\n  PROPERTY_TYPE: () => PROPERTY_TYPE,\n  VOLUME_NORM: () => VOLUME_NORM,\n  AREA_NORM: () => AREA_NORM,\n  PROPERTY_QUERIES: () => PROPERTY_QUERIES,\n  HOUSE_TYPE: () => HOUSE_TYPE,\n  FLAT_TYPE: () => FLAT_TYPE,\n  MINERGIE_CERTIFICATE: () => MINERGIE_CERTIFICATE,\n  PROPERTY_CATEGORY: () => PROPERTY_CATEGORY,\n  PROPERTY_REFERRED_BY_TYPE: () => PROPERTY_REFERRED_BY_TYPE,\n  PROPERTY_PERMISSIONS: () => PROPERTY_PERMISSIONS,\n  PROPERTY_PERMISSIONS_FULL_ACCESS: () => PROPERTY_PERMISSIONS_FULL_ACCESS,\n  PROPERTY_SOLVENCY: () => PROPERTY_SOLVENCY\n});\nconst PROPERTIES_COLLECTION = 'properties';\nconst PROPERTY_STATUS = {\n  FOR_SALE: 'FOR_SALE',\n  BOOKED: 'BOOKED',\n  SOLD: 'SOLD'\n};\nconst RESIDENCE_TYPE = {\n  MAIN_RESIDENCE: 'MAIN_RESIDENCE',\n  SECOND_RESIDENCE: 'SECOND_RESIDENCE',\n  INVESTMENT: 'INVESTMENT',\n  COMMERCE: 'COMMERCE'\n};\nconst PROPERTY_TYPE = {\n  FLAT: 'FLAT',\n  HOUSE: 'HOUSE'\n};\nconst VOLUME_NORM = {\n  SIA_416: 'SIA_416',\n  SIA_116: 'SIA_116',\n  BIC: 'BIC'\n};\nconst AREA_NORM = {\n  NIA: 'NIA',\n  NLS: 'NLS'\n};\nconst PROPERTY_QUERIES = {\n  ADMIN_PROPERTIES: 'ADMIN_PROPERTIES',\n  ANONYMOUS_PROPERTY: 'ANONYMOUS_PROPERTY',\n  PRO_PROPERTIES: 'PRO_PROPERTIES',\n  PRO_PROPERTY_USERS: 'PRO_PROPERTY_USERS',\n  PROPERTY_FILES: 'PROPERTY_FILES',\n  PROPERTY_SEARCH: 'PROPERTY_SEARCH',\n  USER_PROPERTY: 'USER_PROPERTY'\n};\nconst HOUSE_TYPE = {\n  DETACHED: 'DETACHED',\n  ATTACHED_END_BUILDING: 'ATTACHED_END_BUILDING',\n  ATTACHED_MID_TERRACE_BUILDING: 'ATTACHED_MID_TERRACE_BUILDING'\n};\nconst FLAT_TYPE = {\n  SINGLE_FLOOR_APARTMENT: 'SINGLE_FLOOR_APARTMENT',\n  DUPLEX_APARTMENT: 'DUPLEX_APARTMENT',\n  PENTHOUSE_APARTMENT: 'PENTHOUSE_APARTMENT',\n  PENTHOUSE_MAISONETTE: 'PENTHOUSE_MAISONETTE',\n  TERRACE_APARTMENT: 'TERRACE_APARTMENT'\n};\nconst MINERGIE_CERTIFICATE = {\n  WITHOUT_CERTIFICATE: 'WITHOUT_CERTIFICATE',\n  MINERGIE_P: 'MINERGIE_P',\n  MINERGIE_ECO: 'MINERGIE_ECO',\n  MINERGIE_P_ECO: 'MINERGIE_P_ECO',\n  OTHER_CERTIFICATE: 'OTHER_CERTIFICATE'\n};\nconst PROPERTY_CATEGORY = {\n  USER: 'USER',\n  PRO: 'PRO',\n  PROMOTION: 'PROMOTION'\n};\nconst PROPERTY_REFERRED_BY_TYPE = {\n  ANY: 'ANY',\n  USER: 'USER',\n  ORGANISATION: 'ORGANISATION'\n};\nconst PROPERTY_PERMISSIONS = {\n  DISPLAY_CUSTOMER_NAMES: {\n    FOR_PROPERTY_STATUS: PROPERTY_STATUS,\n    REFERRED_BY: PROPERTY_REFERRED_BY_TYPE\n  }\n};\nconst PROPERTY_PERMISSIONS_FULL_ACCESS = {\n  canInviteCustomers: true,\n  canInviteProUsers: true,\n  canModifyProperty: true,\n  canManagePermissions: true,\n  canSellProperty: true,\n  canBookProperty: true,\n  displayCustomerNames: {\n    forPropertyStatus: Object.values(PROPERTY_STATUS),\n    referredBy: PROPERTY_REFERRED_BY_TYPE.ANY\n  }\n};\nconst PROPERTY_SOLVENCY = {\n  UNDETERMINED: 'UNDETERMINED',\n  NOT_SHARED: 'NOT_SHARED',\n  SOLVENT: 'SOLVENT',\n  INSOLVENT: 'INSOLVENT'\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"queries.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/properties/queries.js                                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  adminProperties: () => adminProperties,\n  anonymousProperty: () => anonymousProperty,\n  propertySearch: () => propertySearch,\n  proProperties: () => proProperties,\n  proPropertyUsers: () => proPropertyUsers,\n  userProperty: () => userProperty\n});\nlet Properties;\nmodule.link(\".\", {\n  default(v) {\n    Properties = v;\n  }\n\n}, 0);\nlet PROPERTY_QUERIES;\nmodule.link(\"./propertyConstants\", {\n  PROPERTY_QUERIES(v) {\n    PROPERTY_QUERIES = v;\n  }\n\n}, 1);\nlet adminProperty, userPropertyFragment, proProperty, proUser;\nmodule.link(\"../fragments\", {\n  adminProperty(v) {\n    adminProperty = v;\n  },\n\n  userProperty(v) {\n    userPropertyFragment = v;\n  },\n\n  proProperty(v) {\n    proProperty = v;\n  },\n\n  proUser(v) {\n    proUser = v;\n  }\n\n}, 2);\nconst adminProperties = Properties.createQuery(PROPERTY_QUERIES.ADMIN_PROPERTIES, adminProperty());\nconst anonymousProperty = Properties.createQuery(PROPERTY_QUERIES.ANONYMOUS_PROPERTY, (0, _objectSpread2.default)({}, userPropertyFragment(), {\n  // Ask these for non-reactive queries, like ProPropertyPage\n  documents: 1,\n  openGraphData: 1\n}));\nconst propertySearch = Properties.createQuery(PROPERTY_QUERIES.PROPERTY_SEARCH, {\n  address1: 1,\n  address2: 1,\n  city: 1,\n  zipCode: 1,\n  totalValue: 1,\n  status: 1,\n  style: 1,\n  insideArea: 1,\n  $options: {\n    limit: 5\n  }\n});\nconst proProperties = Properties.createQuery(PROPERTY_QUERIES.PRO_PROPERTIES, proProperty());\nconst proPropertyUsers = Properties.createQuery(PROPERTY_QUERIES.PRO_PROPERTY_USERS, {\n  users: proUser()\n});\nconst userProperty = Properties.createQuery(PROPERTY_QUERIES.USER_PROPERTY, (0, _objectSpread2.default)({\n  $filter({\n    filters,\n    params: {\n      propertyId\n    }\n  }) {\n    filters._id = propertyId;\n  }\n\n}, userPropertyFragment(), {\n  // Ask these for non-reactive queries, like ProPropertyPage\n  openGraphData: 1,\n  documents: 1\n}));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"reducers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/properties/reducers.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet addressReducer;\nmodule.link(\"../reducers/addressReducer\", {\n  default(v) {\n    addressReducer = v;\n  }\n\n}, 0);\nlet Properties;\nmodule.link(\".\", {\n  default(v) {\n    Properties = v;\n  }\n\n}, 1);\nlet PROPERTY_DOCUMENTS;\nmodule.link(\"../files/fileConstants\", {\n  PROPERTY_DOCUMENTS(v) {\n    PROPERTY_DOCUMENTS = v;\n  }\n\n}, 2);\nProperties.addReducers((0, _objectSpread2.default)({}, addressReducer, {\n  thumbnail: {\n    body: {\n      documents: {\n        [PROPERTY_DOCUMENTS.PROPERTY_PICTURES]: {\n          url: 1\n        }\n      },\n      imageUrls: 1\n    },\n    reduce: ({\n      documents = {},\n      imageUrls = []\n    }) => {\n      if (imageUrls.length > 0) {\n        return imageUrls[0];\n      }\n\n      if (documents && documents[PROPERTY_DOCUMENTS.PROPERTY_PICTURES] && documents[PROPERTY_DOCUMENTS.PROPERTY_PICTURES].length) {\n        return documents[PROPERTY_DOCUMENTS.PROPERTY_PICTURES][0].url;\n      }\n    }\n  },\n  totalValue: {\n    body: {\n      value: 1,\n      landValue: 1,\n      constructionValue: 1,\n      additionalMargin: 1\n    },\n    reduce: ({\n      value = 0,\n      landValue = 0,\n      constructionValue = 0,\n      additionalMargin = 0\n    }) => value || landValue + constructionValue + additionalMargin\n  },\n  valuePerSquareMeterInside: {\n    body: {\n      totalValue: 1,\n      insideArea: 1\n    },\n    reduce: ({\n      totalValue = 0,\n      insideArea = 0\n    }) => insideArea === 0 ? 0 : totalValue / insideArea\n  },\n  valuePerSquareMeterLand: {\n    body: {\n      totalValue: 1,\n      landArea: 1\n    },\n    reduce: ({\n      totalValue = 0,\n      landArea = 0\n    }) => landArea === 0 ? 0 : totalValue / landArea\n  },\n  organisation: {\n    body: {\n      users: {\n        organisations: {\n          name: 1\n        }\n      }\n    },\n    reduce: ({\n      users = []\n    }) => {\n      if (users.length === 0) {\n        return undefined;\n      }\n\n      let org;\n      const hasOrg = users.every(({\n        organisations = []\n      }) => {\n        if (organisations.length !== 1) {\n          return false;\n        }\n\n        if (!org) {\n          org = organisations[0];\n          return true;\n        }\n\n        return organisations[0]._id === org._id;\n      });\n      return hasOrg ? org : null;\n    }\n  }\n}));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"queries\":{\"server\":{\"exposures.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/queries/server/exposures.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet searchDatabase;\nmodule.link(\"../queries\", {\n  searchDatabase(v) {\n    searchDatabase = v;\n  }\n\n}, 1);\nlet exposeQuery;\nmodule.link(\"../queryHelpers\", {\n  exposeQuery(v) {\n    exposeQuery = v;\n  }\n\n}, 2);\nlet searchDatabaseResolver;\nmodule.link(\"./resolvers\", {\n  searchDatabaseResolver(v) {\n    searchDatabaseResolver = v;\n  }\n\n}, 3);\nexposeQuery({\n  query: searchDatabase,\n  overrides: {\n    validateParams: {\n      searchQuery: Match.Maybe(String)\n    }\n  },\n  resolver: searchDatabaseResolver,\n  cacher: {\n    ttl: 20 * 1000\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/queries/server/index.js                                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"../../activities/server/exposures\");\nmodule.link(\"../../borrowers/server/exposures\");\nmodule.link(\"../../contacts/server/exposures\");\nmodule.link(\"../../interestRates/server/exposures\");\nmodule.link(\"../../irs10y/server/exposures\");\nmodule.link(\"../../lenderRules/server/exposures\");\nmodule.link(\"../../lenders/server/exposures\");\nmodule.link(\"../../liveSync/server/exposures\");\nmodule.link(\"../../loans/server/exposures\");\nmodule.link(\"../../monitoring/server/exposures\");\nmodule.link(\"../../notifications/server/exposures\");\nmodule.link(\"../../offers/server/exposures\");\nmodule.link(\"../../organisations/server/exposures\");\nmodule.link(\"../../promotionLots/server/exposures\");\nmodule.link(\"../../promotionOptions/server/exposures\");\nmodule.link(\"../../promotions/server/exposures\");\nmodule.link(\"../../properties/server/exposures\");\nmodule.link(\"../../revenues/server/exposures\");\nmodule.link(\"../../stats/server/exposures\");\nmodule.link(\"../../tasks/server/exposures\");\nmodule.link(\"../../users/server/exposures\");\nmodule.link(\"./exposures\");\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"resolvers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/queries/server/resolvers.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  searchDatabaseResolver: () => searchDatabaseResolver\n});\nlet borrowerSearch;\nmodule.link(\"../../borrowers/queries\", {\n  borrowerSearch(v) {\n    borrowerSearch = v;\n  }\n\n}, 0);\nlet loanSearch;\nmodule.link(\"../../loans/queries\", {\n  loanSearch(v) {\n    loanSearch = v;\n  }\n\n}, 1);\nlet propertySearch;\nmodule.link(\"../../properties/queries\", {\n  propertySearch(v) {\n    propertySearch = v;\n  }\n\n}, 2);\nlet userSearch;\nmodule.link(\"../../users/queries\", {\n  userSearch(v) {\n    userSearch = v;\n  }\n\n}, 3);\nlet promotionSearch;\nmodule.link(\"../../promotions/queries\", {\n  promotionSearch(v) {\n    promotionSearch = v;\n  }\n\n}, 4);\nlet contactSearch;\nmodule.link(\"../../contacts/queries\", {\n  contactSearch(v) {\n    contactSearch = v;\n  }\n\n}, 5);\nlet organisationSearch;\nmodule.link(\"../../organisations/queries\", {\n  organisationSearch(v) {\n    organisationSearch = v;\n  }\n\n}, 6);\nlet COLLECTIONS;\nmodule.link(\"../../constants\", {\n  COLLECTIONS(v) {\n    COLLECTIONS = v;\n  }\n\n}, 7);\nconst collectionSearches = {\n  [COLLECTIONS.USERS_COLLECTION]: searchQuery => userSearch.clone({\n    searchQuery\n  }).fetch(),\n  [COLLECTIONS.LOANS_COLLECTION]: searchQuery => loanSearch.clone({\n    searchQuery\n  }).fetch(),\n  [COLLECTIONS.CONTACTS_COLLECTION]: searchQuery => contactSearch.clone({\n    searchQuery\n  }).fetch(),\n  [COLLECTIONS.ORGANISATIONS_COLLECTION]: searchQuery => organisationSearch.clone({\n    searchQuery\n  }).fetch(),\n  [COLLECTIONS.PROMOTIONS_COLLECTION]: searchQuery => promotionSearch.clone({\n    searchQuery\n  }).fetch(),\n  [COLLECTIONS.PROPERTIES_COLLECTION]: searchQuery => propertySearch.clone({\n    searchQuery\n  }).fetch(),\n  [COLLECTIONS.BORROWERS_COLLECTION]: searchQuery => borrowerSearch.clone({\n    searchQuery\n  }).fetch()\n};\n\nconst searchDatabaseResolver = ({\n  searchQuery,\n  collection\n}) => {\n  if (collection) {\n    return collectionSearches[collection](searchQuery);\n  }\n\n  return (0, _objectSpread2.default)({}, Object.keys(collectionSearches).reduce((obj, collectionName) => (0, _objectSpread2.default)({}, obj, {\n    [collectionName]: collectionSearches[collectionName](searchQuery)\n  }), {}), {\n    searchQuery\n  });\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"queries.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/queries/queries.js                                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  searchDatabase: () => searchDatabase\n});\nlet createQuery;\nmodule.link(\"meteor/cultofcoders:grapher\", {\n  createQuery(v) {\n    createQuery = v;\n  }\n\n}, 0);\nlet RESOLVERS;\nmodule.link(\"./resolversConstants\", {\n  RESOLVERS(v) {\n    RESOLVERS = v;\n  }\n\n}, 1);\nconst searchDatabase = createQuery(RESOLVERS.SEARCH_DATABASE, () => {});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"queryHelpers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/queries/queryHelpers.js                                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  exposeQuery: () => exposeQuery\n});\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet Security;\nmodule.link(\"../security\", {\n  default(v) {\n    Security = v;\n  }\n\n}, 2);\nlet QueryCacher;\nmodule.link(\"../helpers/server/QueryCacher\", {\n  default(v) {\n    QueryCacher = v;\n  }\n\n}, 3);\n\nconst defaultParams = options => {\n  const {\n    allowFilterById = false\n  } = options;\n  return (0, _objectSpread2.default)({\n    $body: Match.Maybe(Object),\n    limit: Match.Maybe(Number),\n    skip: Match.Maybe(Number),\n    $sort: Match.Maybe(Object),\n    $skip: Match.Maybe(Number),\n    $limit: Match.Maybe(Number),\n    _userId: Match.Maybe(Match.OneOf(String, null))\n  }, allowFilterById ? {\n    _id: Match.Maybe(String)\n  } : {});\n};\n\nconst defaultFilter = options => ({\n  filters,\n  params: {\n    _id\n  }\n}) => {\n  const {\n    allowFilterById = false\n  } = options;\n\n  if (allowFilterById && _id) {\n    filters._id = _id;\n  }\n};\n\nconst getValidateParams = ({\n  validateParams = {}\n} = {}, options) => (0, _objectSpread2.default)({}, defaultParams(options), validateParams);\n\nconst addSort = (body, params) => {\n  const {\n    $sort\n  } = params;\n  body.$options = (0, _objectSpread2.default)({}, body.$options, $sort !== undefined ? {\n    sort: $sort\n  } : {});\n};\n\nconst addSkip = (body, params) => {\n  const {\n    $skip\n  } = params;\n\n  if ($skip) {\n    body.$options = (0, _objectSpread2.default)({}, body.$options, {\n      skip: $skip\n    });\n  }\n};\n\nconst addLimit = (body, params) => {\n  const {\n    $limit\n  } = params;\n\n  if ($limit) {\n    const {\n      $options: {\n        limit\n      } = {}\n    } = body;\n    body.$options = (0, _objectSpread2.default)({}, body.$options, {\n      limit: limit ? Math.min($limit, limit) : $limit\n    });\n  }\n};\n\nconst addPaginate = body => {\n  body.$paginate = true;\n};\n\nconst addOptions = (body, params) => {\n  addSort(body, params);\n  addSkip(body, params);\n  addLimit(body, params);\n  addPaginate(body);\n};\n\nconst addFilters = (body, embody, options) => {\n  const {\n    $filter: bodyFilter\n  } = body;\n  const {\n    $filter: overrideFilter\n  } = embody || {};\n\n  body.$filter = (...args) => {\n    if (bodyFilter) {\n      bodyFilter(...args);\n    }\n\n    if (overrideFilter) {\n      overrideFilter(...args);\n    }\n\n    defaultFilter(options)(...args);\n  };\n};\n\nconst getEmbody = (overrides, options) => function customEmbody(body, params) {\n  if (overrides.embody) {\n    if (typeof overrides.embody !== 'function') {\n      throw new Meteor.Error('Embody must be a function!');\n    }\n\n    overrides.embody(body, params);\n  }\n\n  addFilters(body, overrides.embody, options);\n  addOptions(body, params);\n};\n\nconst getFirewall = (overrides, options) => (userId, params) => {\n  params._userId = userId;\n\n  if (!overrides.firewall) {\n    Security.checkUserIsAdmin(userId);\n  } else {\n    overrides.firewall(userId, params);\n  }\n};\n\nconst exposeQuery = ({\n  query,\n  overrides = {},\n  options = {},\n  resolver,\n  caching\n}) => {\n  query.expose((0, _objectSpread2.default)({}, overrides, {\n    firewall: getFirewall(overrides, options),\n    embody: getEmbody(overrides, options),\n    validateParams: getValidateParams(overrides, options)\n  }));\n\n  if (resolver) {\n    query.resolve(resolver);\n  }\n\n  if (caching) {\n    const {\n      ttl,\n      getDataToHash\n    } = caching;\n    const cacher = new QueryCacher({\n      ttl,\n      getDataToHash\n    });\n    query.cacheResults(cacher);\n  }\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"resolversConstants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/queries/resolversConstants.js                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  RESOLVERS: () => RESOLVERS\n});\nconst RESOLVERS = {\n  SEARCH_DATABASE: 'searchDatabase'\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"revenues\":{\"schemas\":{\"revenueSchema.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/revenues/schemas/revenueSchema.js                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 0);\nlet CUSTOM_AUTOFIELD_TYPES;\nmodule.link(\"../../../components/AutoForm2/constants\", {\n  CUSTOM_AUTOFIELD_TYPES(v) {\n    CUSTOM_AUTOFIELD_TYPES = v;\n  }\n\n}, 1);\nlet createdAt, updatedAt, percentageField, decimalMoneyField, cacheField;\nmodule.link(\"../../helpers/sharedSchemas\", {\n  createdAt(v) {\n    createdAt = v;\n  },\n\n  updatedAt(v) {\n    updatedAt = v;\n  },\n\n  percentageField(v) {\n    percentageField = v;\n  },\n\n  decimalMoneyField(v) {\n    decimalMoneyField = v;\n  },\n\n  cacheField(v) {\n    cacheField = v;\n  }\n\n}, 2);\nlet REVENUE_TYPES, REVENUE_STATUS, COMMISSION_STATUS, REVENUE_SECONDARY_TYPES;\nmodule.link(\"../revenueConstants\", {\n  REVENUE_TYPES(v) {\n    REVENUE_TYPES = v;\n  },\n\n  REVENUE_STATUS(v) {\n    REVENUE_STATUS = v;\n  },\n\n  COMMISSION_STATUS(v) {\n    COMMISSION_STATUS = v;\n  },\n\n  REVENUE_SECONDARY_TYPES(v) {\n    REVENUE_SECONDARY_TYPES = v;\n  }\n\n}, 3);\nconst RevenueSchema = new SimpleSchema({\n  createdAt,\n  updatedAt,\n  amount: (0, _objectSpread2.default)({}, decimalMoneyField, {\n    optional: false\n  }),\n  description: {\n    type: String,\n    optional: true\n  },\n  type: {\n    type: String,\n    allowedValues: Object.values(REVENUE_TYPES),\n    uniforms: {\n      displayEmpty: false,\n      placeholder: ''\n    }\n  },\n  secondaryType: {\n    type: String,\n    optional: true,\n    allowedValues: Object.values(REVENUE_SECONDARY_TYPES),\n    uniforms: {\n      displayEmpty: false,\n      placeholder: ''\n    },\n    condition: ({\n      type\n    }) => type === REVENUE_TYPES.INSURANCE\n  },\n  status: {\n    type: String,\n    allowedValues: Object.values(REVENUE_STATUS),\n    uniforms: {\n      displayEmpty: false,\n      placeholder: ''\n    },\n    defaultValue: REVENUE_STATUS.EXPECTED\n  },\n  expectedAt: {\n    type: Date,\n    optional: true,\n    uniforms: {\n      type: CUSTOM_AUTOFIELD_TYPES.DATE\n    }\n  },\n  paidAt: {\n    type: Date,\n    optional: true,\n    uniforms: {\n      type: CUSTOM_AUTOFIELD_TYPES.DATE\n    }\n  },\n  organisationLinks: {\n    type: Array,\n    defaultValue: []\n  },\n  'organisationLinks.$': Object,\n  'organisationLinks.$._id': String,\n  'organisationLinks.$.commissionRate': (0, _objectSpread2.default)({}, percentageField, {\n    optional: false\n  }),\n  'organisationLinks.$.paidAt': {\n    type: Date,\n    optional: true,\n    uniforms: {\n      type: CUSTOM_AUTOFIELD_TYPES.DATE\n    }\n  },\n  'organisationLinks.$.status': {\n    type: String,\n    allowedValues: Object.values(COMMISSION_STATUS),\n    defaultValue: COMMISSION_STATUS.TO_BE_PAID\n  },\n  sourceOrganisationLink: {\n    type: Object,\n    defaultValue: {},\n    optional: true\n  },\n  'sourceOrganisationLink._id': {\n    type: String,\n    optional: true\n  },\n  // This should be an object, since there's only one loan\n  // https://github.com/Herteby/denormalize/issues/17\n  loanCache: {\n    type: Array,\n    optional: true\n  },\n  'loanCache.$': cacheField\n});\nmodule.exportDefault(RevenueSchema);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"RevenueService.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/revenues/server/RevenueService.js                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet COMMISSION_STATUS;\nmodule.link(\"../../constants\", {\n  COMMISSION_STATUS(v) {\n    COMMISSION_STATUS = v;\n  }\n\n}, 0);\nlet Revenues;\nmodule.link(\"../revenues\", {\n  default(v) {\n    Revenues = v;\n  }\n\n}, 1);\nlet CollectionService;\nmodule.link(\"../../helpers/CollectionService\", {\n  default(v) {\n    CollectionService = v;\n  }\n\n}, 2);\nlet LoanService;\nmodule.link(\"../../loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 3);\nlet REVENUE_STATUS;\nmodule.link(\"../revenueConstants\", {\n  REVENUE_STATUS(v) {\n    REVENUE_STATUS = v;\n  }\n\n}, 4);\n\nclass RevenueService extends CollectionService {\n  constructor() {\n    super(Revenues);\n  }\n\n  insert({\n    revenue,\n    loanId\n  }) {\n    const revenueId = this.collection.insert(revenue);\n\n    if (loanId) {\n      LoanService.addLink({\n        id: loanId,\n        linkName: 'revenues',\n        linkId: revenueId\n      });\n    }\n\n    return revenueId;\n  }\n\n  remove({\n    revenueId\n  }) {\n    return super.remove(revenueId);\n  }\n\n  getGeneratedRevenues({\n    organisationId\n  }) {\n    const revenues = this.fetch({\n      $filters: {\n        $and: [{\n          status: REVENUE_STATUS.CLOSED\n        }, {\n          organisationLinks: {\n            $elemMatch: {\n              _id: organisationId\n            }\n          }\n        }]\n      },\n      amount: 1,\n      organisationLinks: 1,\n      status: 1\n    });\n    return revenues.reduce((total, {\n      amount,\n      organisationLinks\n    }) => {\n      const sharedAmount = amount / organisationLinks.length;\n      return total + sharedAmount;\n    }, 0);\n  }\n\n  consolidateRevenue({\n    revenueId,\n    amount,\n    paidAt\n  }) {\n    return this._update({\n      id: revenueId,\n      object: {\n        amount,\n        paidAt,\n        status: REVENUE_STATUS.CLOSED\n      }\n    });\n  }\n\n  consolidateCommission({\n    revenueId,\n    organisationId,\n    paidAt,\n    commissionRate\n  }) {\n    return this.updateLinkMetadata({\n      id: revenueId,\n      linkName: 'organisations',\n      linkId: organisationId,\n      metadata: {\n        paidAt,\n        status: COMMISSION_STATUS.PAID,\n        commissionRate\n      }\n    });\n  }\n\n}\n\nmodule.exportDefault(new RevenueService());\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"exposures.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/revenues/server/exposures.js                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet exposeQuery;\nmodule.link(\"../../queries/queryHelpers\", {\n  exposeQuery(v) {\n    exposeQuery = v;\n  }\n\n}, 1);\nlet adminRevenues;\nmodule.link(\"../queries\", {\n  adminRevenues(v) {\n    adminRevenues = v;\n  }\n\n}, 2);\nexposeQuery({\n  query: adminRevenues,\n  overrides: {\n    embody: body => {\n      body.$filter = ({\n        filters,\n        params: {\n          _id,\n          status,\n          loanId,\n          sourceOrganisationId,\n          organisationId,\n          commissionStatus\n        }\n      }) => {\n        if (_id) {\n          filters._id = _id;\n        }\n\n        if (status) {\n          filters.status = status;\n        }\n\n        if (loanId) {\n          filters['loanCache.0._id'] = loanId;\n        }\n\n        if (sourceOrganisationId) {\n          filters['sourceOrganisationLink._id'] = sourceOrganisationId;\n        }\n\n        if (organisationId) {\n          if (commissionStatus) {\n            filters.organisationLinks = {\n              $elemMatch: {\n                _id: organisationId,\n                status: commissionStatus\n              }\n            };\n          } else {\n            filters.organisationLinks = {\n              $elemMatch: {\n                _id: organisationId\n              }\n            };\n          }\n        }\n      };\n    },\n    validateParams: {\n      _id: Match.Maybe(String),\n      loanId: Match.Maybe(String),\n      sourceOrganisationId: Match.Maybe(String),\n      organisationId: Match.Maybe(String),\n      status: Match.Maybe(Match.OneOf(Object, String)),\n      commissionStatus: Match.Maybe(Match.OneOf(Object, String))\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"hooks.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/revenues/server/hooks.js                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet NotificationService;\nmodule.link(\"../../notifications/server/NotificationService\", {\n  default(v) {\n    NotificationService = v;\n  }\n\n}, 0);\nlet Revenues;\nmodule.link(\"..\", {\n  default(v) {\n    Revenues = v;\n  }\n\n}, 1);\nlet REVENUE_STATUS;\nmodule.link(\"../revenueConstants\", {\n  REVENUE_STATUS(v) {\n    REVENUE_STATUS = v;\n  }\n\n}, 2);\nRevenues.before.update((userId, {\n  _id: revenueId,\n  expectedAt: oldDate\n}, fieldNames, modifier) => {\n  // Read the notification automatically if a paidAt date is added, or if\n  // the status is set to CLOSED\n  if (fieldNames.includes('status') || fieldNames.includes('paidAt')) {\n    const newStatus = modifier.$set && modifier.$set.status;\n    const newPaidAt = modifier.$set && modifier.$set.paidAt;\n\n    if (newStatus === REVENUE_STATUS.CLOSED || newPaidAt) {\n      NotificationService.readNotificationAll({\n        filters: {\n          'revenueLink._id': revenueId\n        }\n      });\n    }\n  } // Cancel notification if expetedAt changes\n\n\n  if (fieldNames.includes('expectedAt')) {\n    const newDate = modifier.$set && modifier.$set.expectedAt;\n\n    if ((newDate && newDate.getTime()) !== (oldDate && oldDate.getTime())) {\n      NotificationService.remove({\n        'revenueLink._id': revenueId\n      });\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/revenues/server/methods.js                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 0);\nlet RevenueService;\nmodule.link(\"./RevenueService\", {\n  default(v) {\n    RevenueService = v;\n  }\n\n}, 1);\nlet revenueInsert, revenueRemove, revenueUpdate, consolidateRevenue, consolidateCommission;\nmodule.link(\"../methodDefinitions\", {\n  revenueInsert(v) {\n    revenueInsert = v;\n  },\n\n  revenueRemove(v) {\n    revenueRemove = v;\n  },\n\n  revenueUpdate(v) {\n    revenueUpdate = v;\n  },\n\n  consolidateRevenue(v) {\n    consolidateRevenue = v;\n  },\n\n  consolidateCommission(v) {\n    consolidateCommission = v;\n  }\n\n}, 2);\nrevenueInsert.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return RevenueService.insert(params);\n});\nrevenueRemove.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return RevenueService.remove(params);\n});\nrevenueUpdate.setHandler((context, {\n  revenueId,\n  object\n}) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return RevenueService._update({\n    id: revenueId,\n    object\n  });\n});\nconsolidateRevenue.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return RevenueService.consolidateRevenue(params);\n});\nconsolidateCommission.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return RevenueService.consolidateCommission(params);\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/revenues/index.js                                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./methodDefinitions\", {\n  \"*\": \"*\"\n}, 0);\nmodule.link(\"./revenues\", {\n  default: \"default\"\n}, 1);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"links.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/revenues/links.js                                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet LinkInitializer;\nmodule.link(\"../links/LinkInitializer\", {\n  default(v) {\n    LinkInitializer = v;\n  }\n\n}, 0);\nlet Revenues;\nmodule.link(\".\", {\n  default(v) {\n    Revenues = v;\n  }\n\n}, 1);\nlet Loans, Organisations;\nmodule.link(\"..\", {\n  Loans(v) {\n    Loans = v;\n  },\n\n  Organisations(v) {\n    Organisations = v;\n  }\n\n}, 2);\nRevenues.addLinks({\n  organisations: {\n    collection: Organisations,\n    field: 'organisationLinks',\n    type: 'many',\n    metadata: true\n  },\n  sourceOrganisation: {\n    collection: Organisations,\n    field: 'sourceOrganisationLink',\n    type: 'one',\n    metadata: true\n  }\n});\nLinkInitializer.inversedInit(() => {\n  Revenues.addLinks({\n    loan: {\n      collection: Loans,\n      inversedBy: 'revenues',\n      denormalize: {\n        field: 'loanCache',\n        body: {\n          _id: 1,\n          name: 1\n        }\n      }\n    }\n  });\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methodDefinitions.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/revenues/methodDefinitions.js                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  revenueInsert: () => revenueInsert,\n  revenueRemove: () => revenueRemove,\n  revenueUpdate: () => revenueUpdate,\n  consolidateRevenue: () => consolidateRevenue,\n  consolidateCommission: () => consolidateCommission\n});\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet Method;\nmodule.link(\"../methods/methods\", {\n  Method(v) {\n    Method = v;\n  }\n\n}, 1);\nconst revenueInsert = new Method({\n  name: 'revenueInsert',\n  params: {\n    revenue: Object,\n    loanId: Match.Maybe(String)\n  }\n});\nconst revenueRemove = new Method({\n  name: 'revenueRemove',\n  params: {\n    revenueId: String\n  }\n});\nconst revenueUpdate = new Method({\n  name: 'revenueUpdate',\n  params: {\n    revenueId: String,\n    object: Object\n  }\n});\nconst consolidateRevenue = new Method({\n  name: 'consolidateRevenue',\n  params: {\n    revenueId: String,\n    amount: Number,\n    paidAt: String\n  }\n});\nconst consolidateCommission = new Method({\n  name: 'consolidateCommission',\n  params: {\n    revenueId: String,\n    organisationId: String,\n    paidAt: String,\n    commissionRate: Number\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"queries.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/revenues/queries.js                                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  adminRevenues: () => adminRevenues\n});\nlet revenue;\nmodule.link(\"../fragments\", {\n  revenue(v) {\n    revenue = v;\n  }\n\n}, 0);\nlet REVENUE_QUERIES;\nmodule.link(\"./revenueConstants\", {\n  REVENUE_QUERIES(v) {\n    REVENUE_QUERIES = v;\n  }\n\n}, 1);\nlet Revenues;\nmodule.link(\".\", {\n  default(v) {\n    Revenues = v;\n  }\n\n}, 2);\nconst adminRevenues = Revenues.createQuery(REVENUE_QUERIES.ADMIN_REVENUES, revenue());\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"revenueConstants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/revenues/revenueConstants.js                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  REVENUES_COLLECTION: () => REVENUES_COLLECTION,\n  REVENUE_QUERIES: () => REVENUE_QUERIES,\n  REVENUE_TYPES: () => REVENUE_TYPES,\n  REVENUE_SECONDARY_TYPES: () => REVENUE_SECONDARY_TYPES,\n  REVENUE_STATUS: () => REVENUE_STATUS,\n  COMMISSION_STATUS: () => COMMISSION_STATUS\n});\nconst REVENUES_COLLECTION = 'revenues';\nconst REVENUE_QUERIES = {\n  ADMIN_REVENUES: 'ADMIN_REVENUES'\n};\nconst REVENUE_TYPES = {\n  INSURANCE: 'INSURANCE',\n  MORTGAGE: 'MORTGAGE',\n  FEE: 'FEE',\n  OTHER: 'OTHER'\n};\nconst REVENUE_TYPES_INSURANCE = {\n  DEATH_3A: 'DEATH_3A',\n  DEATH_3B: 'DEATH_3B',\n  INCOME_PROTECTION_3A: 'INCOME_PROTECTION_3A',\n  INCOME_PROTECTION_3B: 'INCOME_PROTECTION_3B',\n  LIFE_3A: 'LIFE_3A',\n  LIFE_3B: 'LIFE_3B'\n};\nconst REVENUE_SECONDARY_TYPES = (0, _objectSpread2.default)({}, REVENUE_TYPES_INSURANCE);\nconst REVENUE_STATUS = {\n  EXPECTED: 'EXPECTED',\n  CLOSED: 'CLOSED'\n};\nconst COMMISSION_STATUS = {\n  PAID: 'PAID',\n  TO_BE_PAID: 'TO_BE_PAID'\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"revenues.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/revenues/revenues.js                                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet RevenueSchema;\nmodule.link(\"./schemas/revenueSchema\", {\n  default(v) {\n    RevenueSchema = v;\n  }\n\n}, 1);\nlet REVENUES_COLLECTION;\nmodule.link(\"./revenueConstants\", {\n  REVENUES_COLLECTION(v) {\n    REVENUES_COLLECTION = v;\n  }\n\n}, 2);\nconst Revenues = new Mongo.Collection(REVENUES_COLLECTION);\nRevenues.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true\n});\nRevenues.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false\n});\nRevenues.attachSchema(RevenueSchema);\nmodule.exportDefault(Revenues);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"security\":{\"clientSecurityHelpers\":{\"generalSecurityHelpers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/security/clientSecurityHelpers/generalSecurityHelpers.js                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  hasMinimumRole: () => hasMinimumRole\n});\nlet SecurityService;\nmodule.link(\"../Security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 0);\n\nconst hasMinimumRole = ({\n  role,\n  userId\n}) => {\n  try {\n    SecurityService.minimumRole(role)(userId);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/security/clientSecurityHelpers/index.js                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./generalSecurityHelpers\", {\n  \"*\": \"*\"\n}, 0);\nmodule.link(\"./proPropertySecurityHelpers\", {\n  \"*\": \"*\"\n}, 1);\nmodule.link(\"./promotionSecurityHelpers\", {\n  \"*\": \"*\"\n}, 2);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"proPropertySecurityHelpers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/security/clientSecurityHelpers/proPropertySecurityHelpers.js                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  isAllowedToViewProProperty: () => isAllowedToViewProProperty,\n  isAllowedToInviteCustomersToProProperty: () => isAllowedToInviteCustomersToProProperty,\n  isAllowedToInviteProUsersToProProperty: () => isAllowedToInviteProUsersToProProperty,\n  isAllowedToManageProPropertyPermissions: () => isAllowedToManageProPropertyPermissions,\n  isAllowedToRemoveCustomerFromProProperty: () => isAllowedToRemoveCustomerFromProProperty,\n  isAllowedToModifyProProperty: () => isAllowedToModifyProProperty,\n  isAllowedToSeeProPropertyCustomers: () => isAllowedToSeeProPropertyCustomers,\n  isAllowedToBookProProperty: () => isAllowedToBookProProperty,\n  isAllowedToBookProPropertyToCustomer: () => isAllowedToBookProPropertyToCustomer,\n  isAllowedToSellProProperty: () => isAllowedToSellProProperty,\n  isAllowedToSellProPropertyToCustomer: () => isAllowedToSellProPropertyToCustomer\n});\nlet hasMinimumRole;\nmodule.link(\"./generalSecurityHelpers\", {\n  hasMinimumRole(v) {\n    hasMinimumRole = v;\n  }\n\n}, 0);\nlet ROLES;\nmodule.link(\"../../users/userConstants\", {\n  ROLES(v) {\n    ROLES = v;\n  }\n\n}, 1);\nlet SecurityService;\nmodule.link(\"../Security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 2);\nlet PROPERTY_STATUS;\nmodule.link(\"../../properties/propertyConstants\", {\n  PROPERTY_STATUS(v) {\n    PROPERTY_STATUS = v;\n  }\n\n}, 3);\nlet getCurrentUserPermissionsForProProperty, shouldAnonymize;\nmodule.link(\"../../properties/propertyClientHelper\", {\n  getCurrentUserPermissionsForProProperty(v) {\n    getCurrentUserPermissionsForProProperty = v;\n  },\n\n  shouldAnonymize(v) {\n    shouldAnonymize = v;\n  }\n\n}, 4);\n\nconst checkProPropertyPermissions = ({\n  property,\n  userId,\n  requiredPermissions,\n  propertyStatus = []\n}) => {\n  if (propertyStatus.length && !propertyStatus.includes(property.status)) {\n    return false;\n  }\n\n  if (hasMinimumRole({\n    role: ROLES.ADMIN,\n    userId\n  })) {\n    return true;\n  }\n\n  try {\n    SecurityService.hasPermissionOnDoc({\n      doc: property,\n      requiredPermissions,\n      userId\n    });\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nconst isUserLinkedToProperty = ({\n  userId,\n  property = {}\n}) => {\n  const {\n    userLinks = [],\n    users = [],\n    loans = []\n  } = property;\n  const userLoans = loans.reduce((usersLoans, {\n    user\n  }) => [...usersLoans, user], []).filter(x => x);\n  const user = userLinks.find(({\n    _id\n  }) => _id === userId) || users.find(({\n    _id\n  }) => _id === userId) || userLoans.find(({\n    _id\n  }) => _id === userId);\n\n  if (!user) {\n    return false;\n  }\n\n  return true;\n};\n\nconst isAllowedToViewProProperty = ({\n  property,\n  currentUser\n}) => {\n  const {\n    _id: userId\n  } = currentUser;\n\n  if (hasMinimumRole({\n    role: ROLES.ADMIN,\n    userId\n  })) {\n    return true;\n  }\n\n  return isUserLinkedToProperty({\n    userId,\n    property\n  });\n};\n\nconst isAllowedToInviteCustomersToProProperty = ({\n  property,\n  currentUser\n}) => {\n  const {\n    _id: userId\n  } = currentUser;\n  const requiredPermissions = {\n    canInviteCustomers: true\n  };\n  return checkProPropertyPermissions({\n    property,\n    userId,\n    requiredPermissions,\n    propertyStatus: [PROPERTY_STATUS.FOR_SALE, PROPERTY_STATUS.BOOKED]\n  });\n};\n\nconst isAllowedToInviteProUsersToProProperty = ({\n  property,\n  currentUser\n}) => {\n  const {\n    _id: userId\n  } = currentUser;\n  const requiredPermissions = {\n    canInviteProUsers: true\n  };\n  return checkProPropertyPermissions({\n    property,\n    userId,\n    requiredPermissions\n  });\n};\n\nconst isAllowedToManageProPropertyPermissions = ({\n  property,\n  currentUser\n}) => {\n  const {\n    _id: userId\n  } = currentUser;\n  const requiredPermissions = {\n    canManagePermissions: true\n  };\n  return checkProPropertyPermissions({\n    property,\n    userId,\n    requiredPermissions\n  });\n};\n\nconst isAllowedToRemoveCustomerFromProProperty = ({\n  property,\n  currentUser,\n  customerOwnerType\n}) => {\n  const {\n    _id: userId\n  } = currentUser;\n\n  if (hasMinimumRole({\n    role: ROLES.ADMIN,\n    userId\n  })) {\n    return true;\n  }\n\n  const {\n    _id: propertyId\n  } = property;\n  const permissions = getCurrentUserPermissionsForProProperty({\n    currentUser,\n    propertyId\n  });\n  return isAllowedToInviteCustomersToProProperty({\n    property,\n    currentUser\n  }) && !shouldAnonymize({\n    customerOwnerType,\n    permissions\n  });\n};\n\nconst isAllowedToModifyProProperty = ({\n  property,\n  currentUser\n}) => {\n  const {\n    _id: userId\n  } = currentUser;\n  const requiredPermissions = {\n    canModifyProperty: true\n  };\n  return checkProPropertyPermissions({\n    property,\n    userId,\n    requiredPermissions,\n    propertyStatus: [PROPERTY_STATUS.FOR_SALE]\n  });\n};\n\nconst isAllowedToSeeProPropertyCustomers = ({\n  property,\n  currentUser\n}) => {\n  const {\n    _id: userId\n  } = currentUser;\n\n  if (hasMinimumRole({\n    role: ROLES.ADMIN,\n    userId\n  })) {\n    return true;\n  }\n\n  const {\n    userLinks = [],\n    users = []\n  } = property;\n  const user = userLinks.find(({\n    _id\n  }) => _id === userId) || users.find(({\n    _id\n  }) => _id === userId);\n\n  if (!user) {\n    return false;\n  }\n\n  const userPermissions = user.permissions || user.$metadata.permissions;\n\n  if (userPermissions.displayCustomerNames === false) {\n    return false;\n  }\n\n  return true;\n};\n\nconst isAllowedToBookProProperty = ({\n  property,\n  currentUser\n}) => {\n  const {\n    _id: userId\n  } = currentUser;\n  const requiredPermissions = {\n    canBookLots: true\n  };\n  return checkProPropertyPermissions({\n    property,\n    userId,\n    requiredPermissions\n  });\n};\n\nconst isAllowedToBookProPropertyToCustomer = ({\n  property,\n  currentUser,\n  customerOwnerType\n}) => {\n  const {\n    _id: userId\n  } = currentUser;\n\n  if (hasMinimumRole({\n    role: ROLES.ADMIN,\n    userId\n  })) {\n    return true;\n  }\n\n  const {\n    _id: propertyId\n  } = property;\n  const permissions = getCurrentUserPermissionsForProProperty({\n    propertyId,\n    currentUser\n  });\n  return isAllowedToBookProProperty({\n    property,\n    currentUser\n  }) && !shouldAnonymize({\n    customerOwnerType,\n    permissions\n  });\n};\n\nconst isAllowedToSellProProperty = ({\n  property,\n  currentUser\n}) => {\n  const {\n    _id: userId\n  } = currentUser;\n  const requiredPermissions = {\n    canSellLots: true\n  };\n  return checkProPropertyPermissions({\n    property,\n    userId,\n    requiredPermissions\n  });\n};\n\nconst isAllowedToSellProPropertyToCustomer = ({\n  property,\n  currentUser,\n  customerOwnerType\n}) => {\n  const {\n    _id: userId\n  } = currentUser;\n\n  if (hasMinimumRole({\n    role: ROLES.ADMIN,\n    userId\n  })) {\n    return true;\n  }\n\n  const {\n    _id: propertyId\n  } = property;\n  const permissions = getCurrentUserPermissionsForProProperty({\n    propertyId,\n    currentUser\n  });\n  return isAllowedToSellProProperty({\n    property,\n    currentUser\n  }) && !shouldAnonymize({\n    customerOwnerType,\n    permissions\n  });\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"promotionSecurityHelpers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/security/clientSecurityHelpers/promotionSecurityHelpers.js                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  isAllowedToViewPromotion: () => isAllowedToViewPromotion,\n  isAllowedToInviteCustomersToPromotion: () => isAllowedToInviteCustomersToPromotion,\n  isAllowedToRemoveCustomerFromPromotion: () => isAllowedToRemoveCustomerFromPromotion,\n  isAllowedToModifyPromotion: () => isAllowedToModifyPromotion,\n  isAllowedToManagePromotionDocuments: () => isAllowedToManagePromotionDocuments,\n  isAllowedToSeePromotionCustomers: () => isAllowedToSeePromotionCustomers,\n  isAllowedToAddLotsToPromotion: () => isAllowedToAddLotsToPromotion,\n  isAllowedToModifyPromotionLots: () => isAllowedToModifyPromotionLots,\n  isAllowedToRemovePromotionLots: () => isAllowedToRemovePromotionLots,\n  isAllowedToBookPromotionLots: () => isAllowedToBookPromotionLots,\n  isAllowedToBookPromotionLotToCustomer: () => isAllowedToBookPromotionLotToCustomer,\n  isAllowedToSellPromotionLots: () => isAllowedToSellPromotionLots,\n  isAllowedToSellPromotionLotToCustomer: () => isAllowedToSellPromotionLotToCustomer\n});\nlet PROMOTION_STATUS, ROLES;\nmodule.link(\"../../constants\", {\n  PROMOTION_STATUS(v) {\n    PROMOTION_STATUS = v;\n  },\n\n  ROLES(v) {\n    ROLES = v;\n  }\n\n}, 0);\nlet SecurityService;\nmodule.link(\"../Security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 1);\nlet shouldAnonymize, getCurrentUserPermissionsForPromotion;\nmodule.link(\"../../promotions/promotionClientHelpers\", {\n  shouldAnonymize(v) {\n    shouldAnonymize = v;\n  },\n\n  getCurrentUserPermissionsForPromotion(v) {\n    getCurrentUserPermissionsForPromotion = v;\n  }\n\n}, 2);\nlet hasMinimumRole;\nmodule.link(\"./generalSecurityHelpers\", {\n  hasMinimumRole(v) {\n    hasMinimumRole = v;\n  }\n\n}, 3);\n\nconst checkPromotionPermissions = ({\n  promotion,\n  userId,\n  requiredPermissions,\n  promotionStatus = []\n}) => {\n  if (promotionStatus.length && !promotionStatus.includes(promotion.status)) {\n    return false;\n  }\n\n  if (hasMinimumRole({\n    role: ROLES.ADMIN,\n    userId\n  })) {\n    return true;\n  }\n\n  try {\n    SecurityService.hasPermissionOnDoc({\n      doc: promotion,\n      requiredPermissions,\n      userId\n    });\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nconst isAllowedToViewPromotion = ({\n  promotion,\n  currentUser: {\n    _id: userId\n  }\n}) => {\n  if (hasMinimumRole({\n    role: ROLES.ADMIN,\n    userId\n  })) {\n    return true;\n  }\n\n  const {\n    userLinks = [],\n    users = []\n  } = promotion;\n  const user = userLinks.find(({\n    _id\n  }) => _id === userId) || users.find(({\n    _id\n  }) => _id === userId);\n\n  if (!user) {\n    return false;\n  }\n\n  return true;\n};\n\nconst isAllowedToInviteCustomersToPromotion = ({\n  promotion,\n  currentUser\n}) => {\n  const {\n    _id: userId\n  } = currentUser;\n  const requiredPermissions = {\n    canInviteCustomers: true\n  };\n  return checkPromotionPermissions({\n    promotion,\n    userId,\n    requiredPermissions,\n    promotionStatus: [PROMOTION_STATUS.OPEN]\n  });\n};\n\nconst isAllowedToRemoveCustomerFromPromotion = ({\n  promotion,\n  currentUser,\n  customerOwnerType\n}) => {\n  const {\n    _id: userId\n  } = currentUser;\n\n  if (hasMinimumRole({\n    role: ROLES.ADMIN,\n    userId\n  })) {\n    return true;\n  }\n\n  const {\n    _id: promotionId\n  } = promotion;\n  const permissions = getCurrentUserPermissionsForPromotion({\n    currentUser,\n    promotionId\n  });\n  return isAllowedToInviteCustomersToPromotion({\n    promotion,\n    currentUser\n  }) && !shouldAnonymize({\n    customerOwnerType,\n    permissions\n  });\n};\n\nconst isAllowedToModifyPromotion = ({\n  promotion,\n  currentUser\n}) => {\n  const {\n    _id: userId\n  } = currentUser;\n  const requiredPermissions = {\n    canModifyPromotion: true\n  };\n  return checkPromotionPermissions({\n    promotion,\n    userId,\n    requiredPermissions,\n    promotionStatus: [PROMOTION_STATUS.OPEN, PROMOTION_STATUS.PREPARATION]\n  });\n};\n\nconst isAllowedToManagePromotionDocuments = ({\n  promotion,\n  currentUser\n}) => {\n  const {\n    _id: userId\n  } = currentUser;\n  const requiredPermissions = {\n    canManageDocuments: true\n  };\n  return checkPromotionPermissions({\n    promotion,\n    userId,\n    requiredPermissions,\n    promotionStatus: [PROMOTION_STATUS.OPEN, PROMOTION_STATUS.PREPARATION]\n  });\n};\n\nconst isAllowedToSeePromotionCustomers = ({\n  promotion,\n  currentUser\n}) => {\n  const {\n    _id: userId\n  } = currentUser;\n\n  if (hasMinimumRole({\n    role: ROLES.ADMIN,\n    userId\n  })) {\n    return true;\n  }\n\n  const {\n    userLinks = [],\n    users = []\n  } = promotion;\n  const user = userLinks.find(({\n    _id\n  }) => _id === userId) || users.find(({\n    _id\n  }) => _id === userId);\n\n  if (!user) {\n    return false;\n  }\n\n  const userPermissions = user.permissions || user.$metadata.permissions;\n\n  if (userPermissions.displayCustomerNames === false) {\n    return false;\n  }\n\n  return true;\n};\n\nconst isAllowedToAddLotsToPromotion = ({\n  promotion,\n  currentUser\n}) => {\n  const {\n    _id: userId\n  } = currentUser;\n  const requiredPermissions = {\n    canModifyPromotion: true,\n    canAddLots: true\n  };\n  return checkPromotionPermissions({\n    promotion,\n    userId,\n    requiredPermissions\n  });\n};\n\nconst isAllowedToModifyPromotionLots = ({\n  promotion,\n  currentUser\n}) => {\n  const {\n    _id: userId\n  } = currentUser;\n  const requiredPermissions = {\n    canModifyPromotion: true,\n    canModifyLots: true\n  };\n  return checkPromotionPermissions({\n    promotion,\n    userId,\n    requiredPermissions\n  });\n};\n\nconst isAllowedToRemovePromotionLots = ({\n  promotion,\n  currentUser\n}) => {\n  const {\n    _id: userId\n  } = currentUser;\n  const requiredPermissions = {\n    canModifyPromotion: true,\n    canRemoveLots: true\n  };\n  return checkPromotionPermissions({\n    promotion,\n    userId,\n    requiredPermissions\n  });\n};\n\nconst isAllowedToBookPromotionLots = ({\n  promotion,\n  currentUser\n}) => {\n  const {\n    _id: userId\n  } = currentUser;\n  const requiredPermissions = {\n    canBookLots: true\n  };\n  return checkPromotionPermissions({\n    promotion,\n    userId,\n    requiredPermissions\n  });\n};\n\nconst isAllowedToBookPromotionLotToCustomer = ({\n  promotion,\n  currentUser,\n  customerOwnerType\n}) => {\n  const {\n    _id: userId\n  } = currentUser;\n\n  if (hasMinimumRole({\n    role: ROLES.ADMIN,\n    userId\n  })) {\n    return true;\n  }\n\n  const {\n    _id: promotionId\n  } = promotion;\n  const permissions = getCurrentUserPermissionsForPromotion({\n    currentUser,\n    promotionId\n  });\n  return isAllowedToBookPromotionLots({\n    promotion,\n    currentUser\n  }) && !shouldAnonymize({\n    customerOwnerType,\n    permissions\n  });\n};\n\nconst isAllowedToSellPromotionLots = ({\n  promotion,\n  currentUser\n}) => {\n  const {\n    _id: userId\n  } = currentUser;\n  const requiredPermissions = {\n    canSellLots: true\n  };\n  return checkPromotionPermissions({\n    promotion,\n    userId,\n    requiredPermissions\n  });\n};\n\nconst isAllowedToSellPromotionLotToCustomer = ({\n  promotion,\n  currentUser,\n  customerOwnerType\n}) => {\n  const {\n    _id: userId\n  } = currentUser;\n\n  if (hasMinimumRole({\n    role: ROLES.ADMIN,\n    userId\n  })) {\n    return true;\n  }\n\n  const {\n    _id: promotionId\n  } = promotion;\n  const permissions = getCurrentUserPermissionsForPromotion({\n    currentUser,\n    promotionId\n  });\n  return isAllowedToSellPromotionLots({\n    promotion,\n    currentUser\n  }) && !shouldAnonymize({\n    customerOwnerType,\n    permissions\n  });\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"collections\":{\"BorrowerSecurity.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/security/collections/BorrowerSecurity.js                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet BorrowerService;\nmodule.link(\"../../borrowers/server/BorrowerService\", {\n  default(v) {\n    BorrowerService = v;\n  }\n\n}, 0);\nlet Security;\nmodule.link(\"../Security\", {\n  default(v) {\n    Security = v;\n  }\n\n}, 1);\nlet LoanSecurity;\nmodule.link(\"./index\", {\n  LoanSecurity(v) {\n    LoanSecurity = v;\n  }\n\n}, 2);\n\nclass BorrowerSecurity {\n  static isAllowedToInsert() {\n    Security.checkLoggedIn();\n  }\n\n  static isAllowedToUpdate(borrowerId, userId) {\n    if (!borrowerId) {\n      Security.handleUnauthorized();\n    }\n\n    if (Security.currentUserIsAdmin()) {\n      return;\n    }\n\n    const borrower = BorrowerService.fetchOne({\n      $filters: {\n        _id: borrowerId\n      },\n      userId: 1,\n      loans: {\n        anonymous: 1\n      }\n    });\n\n    if (borrower.userId) {\n      Security.checkOwnership(borrower, userId);\n    } else if (borrower.loans.length === 1 && borrower.loans[0].anonymous) {\n      LoanSecurity.checkAnonymousLoan(borrower.loans[0]._id);\n    } else {\n      Security.handleUnauthorized('borrowerUpdate not allowed');\n    }\n  }\n\n  static isAllowedToDelete(borrowerId) {\n    this.isAllowedToUpdate(borrowerId);\n  }\n\n}\n\nmodule.exportDefault(BorrowerSecurity);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"LoanSecurity.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/security/collections/LoanSecurity.js                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet LOAN_STATUS;\nmodule.link(\"../../loans/loanConstants\", {\n  LOAN_STATUS(v) {\n    LOAN_STATUS = v;\n  }\n\n}, 0);\nlet Security;\nmodule.link(\"../Security\", {\n  default(v) {\n    Security = v;\n  }\n\n}, 1);\nlet LoanService;\nmodule.link(\"../../loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 2);\n\nclass LoanSecurity {\n  static isAllowedToInsert() {\n    Security.checkLoggedIn();\n  }\n\n  static isAllowedToUpdate(loanId, userId) {\n    if (!loanId) {\n      Security.handleUnauthorized();\n    }\n\n    if (Security.currentUserIsAdmin()) {\n      return;\n    }\n\n    const loan = LoanService.fetchOne({\n      $filters: {\n        _id: loanId\n      },\n      userId: 1,\n      userLinks: 1\n    });\n\n    if (loan.userId) {\n      Security.checkOwnership(loan, userId);\n    } else {\n      this.checkAnonymousLoan(loanId);\n    }\n  }\n\n  static isAllowedToDelete() {\n    Security.checkCurrentUserIsAdmin();\n  }\n\n  static checkAnonymousLoan(loanId) {\n    const loan = LoanService.fetchOne({\n      $filters: {\n        _id: loanId\n      },\n      anonymous: 1,\n      status: 1\n    });\n\n    if (!loan || loan.anonymous !== true || loan.status === LOAN_STATUS.UNSUCCESSFUL || loan.userId) {\n      Security.handleUnauthorized();\n    }\n  }\n\n}\n\nmodule.exportDefault(LoanSecurity);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"OfferSecurity.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/security/collections/OfferSecurity.js                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Security;\nmodule.link(\"../Security\", {\n  default(v) {\n    Security = v;\n  }\n\n}, 0);\nlet Offers;\nmodule.link(\"../..\", {\n  Offers(v) {\n    Offers = v;\n  }\n\n}, 1);\n\nclass OfferSecurity {\n  static isAllowedToInsert() {\n    Security.checkLoggedIn();\n  }\n\n  static isAllowedToUpdate(offerId) {\n    if (Security.currentUserIsAdmin()) {\n      return;\n    }\n\n    const offer = Offers.findOne(offerId);\n    Security.checkOwnership(offer);\n  }\n\n  static isAllowedToDelete() {\n    Security.checkCurrentUserIsAdmin();\n  }\n\n}\n\nmodule.exportDefault(OfferSecurity);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"PromotionSecurity.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/security/collections/PromotionSecurity.js                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet PromotionService;\nmodule.link(\"../../promotions/server/PromotionService\", {\n  default(v) {\n    PromotionService = v;\n  }\n\n}, 0);\nlet PromotionLotService;\nmodule.link(\"../../promotionLots/server/PromotionLotService\", {\n  default(v) {\n    PromotionLotService = v;\n  }\n\n}, 1);\nlet PromotionOptionService;\nmodule.link(\"../../promotionOptions/server/PromotionOptionService\", {\n  default(v) {\n    PromotionOptionService = v;\n  }\n\n}, 2);\nlet UserService;\nmodule.link(\"../../users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 3);\nlet ROLES;\nmodule.link(\"../../users/userConstants\", {\n  ROLES(v) {\n    ROLES = v;\n  }\n\n}, 4);\nlet Security;\nmodule.link(\"../Security\", {\n  default(v) {\n    Security = v;\n  }\n\n}, 5);\nlet LoanSecurity;\nmodule.link(\"./LoanSecurity\", {\n  default(v) {\n    LoanSecurity = v;\n  }\n\n}, 6);\nlet isAllowedToInviteCustomersToPromotion, isAllowedToRemoveCustomerFromPromotion, isAllowedToModifyPromotion, isAllowedToManagePromotionDocuments, isAllowedToAddLotsToPromotion, isAllowedToModifyPromotionLots, isAllowedToRemovePromotionLots, isAllowedToViewPromotion, isAllowedToBookPromotionLots, isAllowedToBookPromotionLotToCustomer, isAllowedToSellPromotionLots, isAllowedToSellPromotionLotToCustomer;\nmodule.link(\"../clientSecurityHelpers\", {\n  isAllowedToInviteCustomersToPromotion(v) {\n    isAllowedToInviteCustomersToPromotion = v;\n  },\n\n  isAllowedToRemoveCustomerFromPromotion(v) {\n    isAllowedToRemoveCustomerFromPromotion = v;\n  },\n\n  isAllowedToModifyPromotion(v) {\n    isAllowedToModifyPromotion = v;\n  },\n\n  isAllowedToManagePromotionDocuments(v) {\n    isAllowedToManagePromotionDocuments = v;\n  },\n\n  isAllowedToAddLotsToPromotion(v) {\n    isAllowedToAddLotsToPromotion = v;\n  },\n\n  isAllowedToModifyPromotionLots(v) {\n    isAllowedToModifyPromotionLots = v;\n  },\n\n  isAllowedToRemovePromotionLots(v) {\n    isAllowedToRemovePromotionLots = v;\n  },\n\n  isAllowedToViewPromotion(v) {\n    isAllowedToViewPromotion = v;\n  },\n\n  isAllowedToBookPromotionLots(v) {\n    isAllowedToBookPromotionLots = v;\n  },\n\n  isAllowedToBookPromotionLotToCustomer(v) {\n    isAllowedToBookPromotionLotToCustomer = v;\n  },\n\n  isAllowedToSellPromotionLots(v) {\n    isAllowedToSellPromotionLots = v;\n  },\n\n  isAllowedToSellPromotionLotToCustomer(v) {\n    isAllowedToSellPromotionLotToCustomer = v;\n  }\n\n}, 7);\nlet LoanService;\nmodule.link(\"../../loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 8);\nlet getPromotionCustomerOwnerType, makeLoanAnonymizer;\nmodule.link(\"../../promotions/server/promotionServerHelpers\", {\n  getPromotionCustomerOwnerType(v) {\n    getPromotionCustomerOwnerType = v;\n  },\n\n  makeLoanAnonymizer(v) {\n    makeLoanAnonymizer = v;\n  }\n\n}, 9);\nlet LotService;\nmodule.link(\"../../lots/server/LotService\", {\n  default(v) {\n    LotService = v;\n  }\n\n}, 10);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass PromotionSecurity {\n  static checkPermissions({\n    promotionId,\n    userId,\n    checkingFunction,\n    errorMessage\n  }) {\n    if (Security.isUserAdmin(userId)) {\n      return;\n    }\n\n    const promotion = PromotionService.safeFetchOne({\n      $filters: {\n        _id: promotionId\n      },\n      status: 1,\n      users: {\n        _id: 1\n      },\n      userLinks: {\n        _id: 1\n      }\n    });\n    const currentUser = UserService.safeFetchOne({\n      $filters: {\n        _id: userId\n      },\n      promotions: {\n        permissions: 1,\n        status: 1,\n        users: {\n          _id: 1\n        }\n      },\n      organisations: {\n        users: {\n          _id: 1\n        }\n      }\n    });\n\n    if (!checkingFunction({\n      promotion,\n      currentUser\n    })) {\n      Security.handleUnauthorized(errorMessage || 'Checking permissions');\n    }\n  }\n\n  static hasAccessToPromotion({\n    promotionId,\n    userId\n  }) {\n    try {\n      this.isAllowedToView({\n        promotionId,\n        userId\n      });\n      return;\n    } catch (error) {\n      const hasPromotion = UserService.hasPromotion({\n        promotionId,\n        userId\n      });\n\n      if (!hasPromotion) {\n        Security.handleUnauthorized(\"Vous n'avez pas accès à cette promotion\");\n      }\n    }\n  }\n\n  static hasAccessToPromotionLot({\n    promotionLotId,\n    userId\n  }) {\n    this.hasAccessToPromotion({\n      promotionId: this.getPromotionIdFromPromotionLot({\n        promotionLotId\n      }),\n      userId\n    });\n  }\n\n  static hasAccessToPromotionOption({\n    promotionOptionId,\n    userId\n  }) {\n    if (Security.isUserAdmin(userId)) {\n      return;\n    }\n\n    const {\n      loan,\n      promotionLots\n    } = PromotionOptionService.safeFetchOne({\n      $filters: {\n        _id: promotionOptionId\n      },\n      loan: {\n        _id: 1,\n        userId: 1\n      },\n      promotionLots: {\n        _id: 1\n      }\n    });\n\n    if (Security.hasRole(userId, ROLES.PRO)) {\n      this.hasAccessToPromotionLot(promotionLots[0]._id, userId);\n    } else {\n      LoanSecurity.isAllowedToUpdate(loan && loan._id);\n    }\n  }\n\n  static isAllowedToModify({\n    promotionId,\n    userId\n  }) {\n    this.checkPermissions({\n      promotionId,\n      userId,\n      checkingFunction: isAllowedToModifyPromotion,\n      errorMessage: 'Vous ne pouvez pas modifier cette promotion'\n    });\n  }\n\n  static isAllowedToManageDocuments({\n    promotionId,\n    userId\n  }) {\n    this.checkPermissions({\n      promotionId,\n      userId,\n      checkingFunction: isAllowedToManagePromotionDocuments,\n      errorMessage: 'Vous ne pouvez pas gérer les documents de cette promotion'\n    });\n  }\n\n  static isAllowedToManagePromotionLotDocuments({\n    propertyId,\n    userId\n  }) {\n    const {\n      promotion\n    } = PromotionLotService.safeFetchOne({\n      $filters: {\n        'propertyLinks._id': propertyId\n      },\n      promotion: {\n        _id: 1\n      }\n    });\n    this.isAllowedToManageDocuments({\n      promotionId: promotion._id,\n      userId\n    });\n  }\n\n  static isAllowedToAddLots({\n    promotionId,\n    userId\n  }) {\n    this.checkPermissions({\n      promotionId,\n      userId,\n      checkingFunction: isAllowedToAddLotsToPromotion,\n      errorMessage: 'Vous ne pouvez pas ajouter de lots à cette promotion'\n    });\n  }\n\n  static isAllowedToModifyLots({\n    promotionId,\n    userId\n  }) {\n    this.checkPermissions({\n      promotionId,\n      userId,\n      checkingFunction: isAllowedToModifyPromotionLots,\n      errorMessage: 'Vous ne pouvez pas modifier les lots de cette promotion'\n    });\n  }\n\n  static isAllowedToRemoveLots({\n    promotionId,\n    userId\n  }) {\n    this.checkPermissions({\n      promotionId,\n      userId,\n      checkingFunction: isAllowedToRemovePromotionLots,\n      errorMessage: 'Vous ne pouvez pas supprimer les lots de cette promotion'\n    });\n  }\n\n  static isAllowedToInviteCustomers({\n    promotionId,\n    userId\n  }) {\n    this.checkPermissions({\n      promotionId,\n      userId,\n      checkingFunction: isAllowedToInviteCustomersToPromotion,\n      errorMessage: 'Vous ne pouvez pas inviter des clients à cette promotion'\n    });\n  }\n\n  static isAllowedToRemoveCustomer({\n    promotionId,\n    loanId,\n    userId\n  }) {\n    if (Security.isUserAdmin(userId)) {\n      return;\n    }\n\n    const promotion = PromotionService.safeFetchOne({\n      $filters: {\n        _id: promotionId\n      },\n      status: 1,\n      users: {\n        _id: 1\n      },\n      userLinks: {\n        _id: 1\n      }\n    });\n    const currentUser = UserService.safeFetchOne({\n      $filters: {\n        _id: userId\n      },\n      promotions: {\n        permissions: 1,\n        status: 1,\n        users: {\n          _id: 1\n        }\n      },\n      organisations: {\n        users: {\n          _id: 1\n        }\n      }\n    });\n    const loan = LoanService.safeFetchOne({\n      $filters: {\n        _id: loanId\n      },\n      user: {\n        _id: 1\n      }\n    });\n    const customerOwnerType = getPromotionCustomerOwnerType({\n      customerId: loan.user._id,\n      userId,\n      promotionId\n    });\n\n    if (!isAllowedToRemoveCustomerFromPromotion({\n      promotion,\n      currentUser,\n      customerOwnerType\n    })) {\n      Security.handleUnauthorized('Vous ne pouvez pas supprimer ce client de cette promotion');\n    }\n  }\n\n  static isAllowedToView({\n    promotionId,\n    userId\n  }) {\n    this.checkPermissions({\n      promotionId,\n      userId,\n      checkingFunction: isAllowedToViewPromotion,\n      errorMessage: \"Vous n'avez pas accès à cette promotion\"\n    });\n  }\n\n  static isAllowedToViewPromotionLot({\n    promotionLotId,\n    userId\n  }) {\n    if (Security.isUserAdmin(userId)) {\n      return;\n    }\n\n    this.isAllowedToView({\n      promotionId: this.getPromotionIdFromPromotionLot({\n        promotionLotId\n      }),\n      userId\n    });\n  }\n\n  static isAllowedToViewPromotionOption({\n    promotionOptionId,\n    userId\n  }) {\n    if (Security.isUserAdmin(userId)) {\n      return;\n    }\n\n    const {\n      promotionLots = []\n    } = PromotionOptionService.safeFetchOne({\n      $filters: {\n        _id: promotionOptionId\n      },\n      promotionLots: {\n        _id: 1\n      }\n    });\n    promotionLots.forEach(({\n      _id: promotionLotId\n    }) => {\n      this.isAllowedToViewPromotionLot({\n        promotionLotId,\n        userId\n      });\n    });\n  }\n\n  static isAllowedToModifyPromotionLot({\n    promotionLotId,\n    userId\n  }) {\n    this.isAllowedToModifyLots({\n      promotionId: this.getPromotionIdFromPromotionLot({\n        promotionLotId\n      }),\n      userId\n    });\n  }\n\n  static isAllowedToRemovePromotionLot({\n    promotionLotId,\n    userId\n  }) {\n    this.isAllowedToRemoveLots({\n      promotionId: this.getPromotionIdFromPromotionLot({\n        promotionLotId\n      }),\n      userId\n    });\n  }\n\n  static isAllowedToBookLots({\n    promotionLotId,\n    userId\n  }) {\n    this.checkPermissions({\n      promotionId: this.getPromotionIdFromPromotionLot({\n        promotionLotId\n      }),\n      userId,\n      checkingFunction: isAllowedToBookPromotionLots,\n      errorMessage: 'Vous ne pouvez pas réserver des lots dans cette promotion'\n    });\n  }\n\n  static isAllowedToBookLotToCustomer({\n    promotionLotId,\n    loanId,\n    userId\n  }) {\n    if (Security.isUserAdmin(userId)) {\n      return;\n    }\n\n    const {\n      promotion\n    } = PromotionLotService.safeFetchOne({\n      $filters: {\n        _id: promotionLotId\n      },\n      promotion: {\n        _id: 1,\n        users: {\n          _id: 1\n        }\n      }\n    });\n    const loan = LoanService.safeFetchOne({\n      $filters: {\n        _id: loanId\n      },\n      user: {\n        _id: 1\n      }\n    });\n    const customerOwnerType = getPromotionCustomerOwnerType({\n      customerId: loan.user._id,\n      userId,\n      promotionId: promotion._id\n    });\n    const currentUser = UserService.safeFetchOne({\n      $filters: {\n        _id: userId\n      },\n      promotions: {\n        permissions: 1,\n        status: 1,\n        users: {\n          _id: 1\n        }\n      },\n      organisations: {\n        users: {\n          _id: 1\n        }\n      }\n    });\n\n    if (!isAllowedToBookPromotionLotToCustomer({\n      promotion,\n      currentUser,\n      customerOwnerType\n    })) {\n      Security.handleUnauthorized('Vous ne pouvez pas réserver de lot à ce client');\n    }\n  }\n\n  static isAllowedToCancelLotBooking({\n    promotionLotId,\n    userId\n  }) {\n    const {\n      attributedTo\n    } = PromotionLotService.safeFetchOne({\n      $filters: {\n        _id: promotionLotId\n      },\n      attributedTo: {\n        _id: 1\n      }\n    });\n    this.isAllowedToBookLotToCustomer({\n      promotionLotId,\n      loanId: attributedTo._id,\n      userId\n    });\n  }\n\n  static isAllowedToSellLots({\n    promotionLotId,\n    userId\n  }) {\n    this.checkPermissions({\n      promotionId: this.getPromotionIdFromPromotionLot({\n        promotionLotId\n      }),\n      userId,\n      checkingFunction: isAllowedToSellPromotionLots,\n      errorMessage: 'Vous ne pouvez pas vendre des lots dans cette promotion'\n    });\n  }\n\n  static isAllowedToSellLotToCustomer({\n    promotionLotId,\n    userId\n  }) {\n    if (Security.currentUserIsAdmin()) {\n      return;\n    }\n\n    const {\n      promotion,\n      attributedTo\n    } = PromotionLotService.safeFetchOne({\n      $filters: {\n        _id: promotionLotId\n      },\n      promotion: {\n        _id: 1,\n        users: {\n          _id: 1\n        }\n      },\n      attributedTo: {\n        _id: 1\n      }\n    });\n    const loan = LoanService.safeFetchOne({\n      $filters: {\n        _id: attributedTo._id\n      },\n      user: {\n        _id: 1\n      }\n    });\n    const customerOwnerType = getPromotionCustomerOwnerType({\n      customerId: loan.user._id,\n      userId,\n      promotionId: promotion._id\n    });\n    const currentUser = UserService.safeFetchOne({\n      $filters: {\n        _id: userId\n      },\n      promotions: {\n        permissions: 1,\n        status: 1,\n        users: {\n          _id: 1\n        }\n      },\n      organisations: {\n        users: {\n          _id: 1\n        }\n      }\n    });\n\n    if (!isAllowedToSellPromotionLotToCustomer({\n      promotion,\n      currentUser,\n      customerOwnerType\n    })) {\n      Security.handleUnauthorized('Vous ne pouvez pas vendre de lot à ce client');\n    }\n  }\n\n  static isAllowedToModifyAdditionalLot({\n    lotId,\n    userId\n  }) {\n    const {\n      promotions\n    } = LotService.safeFetchOne({\n      $filters: {\n        _id: lotId\n      },\n      promotions: {\n        _id: 1\n      }\n    });\n    this.isAllowedToModifyLots({\n      promotionId: promotions._id,\n      userId\n    });\n  }\n\n  static isAllowedToRemoveAdditionalLot({\n    lotId,\n    userId\n  }) {\n    const {\n      promotions\n    } = LotService.safeFetchOne({\n      $filters: {\n        _id: lotId\n      },\n      promotions: {\n        _id: 1\n      }\n    });\n    this.isAllowedToRemoveLots({\n      promotionId: promotions._id,\n      userId\n    });\n  }\n\n  static isAllowedToSeePromotionCustomer({\n    userId,\n    promotionId,\n    loanId\n  }) {\n    if (Security.isUserAdmin(userId)) {\n      return;\n    }\n\n    const loan = LoanService.fetchOne({\n      $filters: {\n        _id: loanId\n      },\n      _id: 1,\n      user: {\n        _id: 1\n      }\n    });\n    const anonymizer = makeLoanAnonymizer({\n      userId,\n      promotionId\n    });\n\n    if (anonymizer(loan).isAnonymized) {\n      Security.handleUnauthorized(\"Vous n'avez pas accès à ce client\");\n    }\n  }\n\n}\n\n_defineProperty(PromotionSecurity, \"getPromotionIdFromPromotionLot\", ({\n  promotionLotId\n}) => {\n  const {\n    promotion = {}\n  } = PromotionLotService.safeFetchOne({\n    $filters: {\n      _id: promotionLotId\n    },\n    promotion: {\n      _id: 1\n    }\n  });\n  return promotion._id;\n});\n\nmodule.exportDefault(PromotionSecurity);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"PropertySecurity.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/security/collections/PropertySecurity.js                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet HTTP_STATUS_CODES;\nmodule.link(\"../../RESTAPI/server/restApiConstants\", {\n  HTTP_STATUS_CODES(v) {\n    HTTP_STATUS_CODES = v;\n  }\n\n}, 1);\nlet Security;\nmodule.link(\"../Security\", {\n  default(v) {\n    Security = v;\n  }\n\n}, 2);\nlet Properties, Promotions;\nmodule.link(\"../..\", {\n  Properties(v) {\n    Properties = v;\n  },\n\n  Promotions(v) {\n    Promotions = v;\n  }\n\n}, 3);\nlet UserService;\nmodule.link(\"../../users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 4);\nlet ROLES;\nmodule.link(\"../../users/userConstants\", {\n  ROLES(v) {\n    ROLES = v;\n  }\n\n}, 5);\nlet PromotionSecurity;\nmodule.link(\"./PromotionSecurity\", {\n  default(v) {\n    PromotionSecurity = v;\n  }\n\n}, 6);\nlet PropertyService;\nmodule.link(\"../../properties/server/PropertyService\", {\n  default(v) {\n    PropertyService = v;\n  }\n\n}, 7);\nlet PROPERTY_CATEGORY;\nmodule.link(\"../../properties/propertyConstants\", {\n  PROPERTY_CATEGORY(v) {\n    PROPERTY_CATEGORY = v;\n  }\n\n}, 8);\nlet isAllowedToViewProProperty, isAllowedToModifyProProperty, isAllowedToInviteCustomersToProProperty, isAllowedToInviteProUsersToProProperty, isAllowedToRemoveCustomerFromProProperty, isAllowedToBookProProperty, isAllowedToBookProPropertyToCustomer, isAllowedToSellProProperty, isAllowedToSellProPropertyToCustomer, isAllowedToManageProPropertyPermissions;\nmodule.link(\"../clientSecurityHelpers\", {\n  isAllowedToViewProProperty(v) {\n    isAllowedToViewProProperty = v;\n  },\n\n  isAllowedToModifyProProperty(v) {\n    isAllowedToModifyProProperty = v;\n  },\n\n  isAllowedToInviteCustomersToProProperty(v) {\n    isAllowedToInviteCustomersToProProperty = v;\n  },\n\n  isAllowedToInviteProUsersToProProperty(v) {\n    isAllowedToInviteProUsersToProProperty = v;\n  },\n\n  isAllowedToRemoveCustomerFromProProperty(v) {\n    isAllowedToRemoveCustomerFromProProperty = v;\n  },\n\n  isAllowedToBookProProperty(v) {\n    isAllowedToBookProProperty = v;\n  },\n\n  isAllowedToBookProPropertyToCustomer(v) {\n    isAllowedToBookProPropertyToCustomer = v;\n  },\n\n  isAllowedToSellProProperty(v) {\n    isAllowedToSellProProperty = v;\n  },\n\n  isAllowedToSellProPropertyToCustomer(v) {\n    isAllowedToSellProPropertyToCustomer = v;\n  },\n\n  isAllowedToManageProPropertyPermissions(v) {\n    isAllowedToManageProPropertyPermissions = v;\n  }\n\n}, 9);\nlet LoanService;\nmodule.link(\"../../loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 10);\nlet getProPropertyCustomerOwnerType;\nmodule.link(\"../../properties/server/propertyServerHelpers\", {\n  getProPropertyCustomerOwnerType(v) {\n    getProPropertyCustomerOwnerType = v;\n  }\n\n}, 11);\n\nclass PropertySecurity {\n  static getProperty({\n    propertyId\n  }) {\n    const property = PropertyService.fetchOne({\n      $filters: {\n        _id: propertyId\n      },\n      category: 1,\n      loans: {\n        user: {\n          _id: 1\n        }\n      },\n      status: 1,\n      userId: 1,\n      userLinks: {\n        _id: 1\n      },\n      users: {\n        _id: 1\n      }\n    });\n    return property;\n  }\n\n  static getCurrentUser({\n    userId\n  }) {\n    const currentUser = UserService.fetchOne({\n      $filters: {\n        _id: userId\n      },\n      organisations: {\n        users: {\n          _id: 1\n        }\n      },\n      properties: {\n        _id: 1,\n        permissions: 1,\n        status: 1\n      }\n    });\n    return currentUser;\n  }\n\n  static getLoan({\n    loanId\n  }) {\n    const loan = LoanService.fetchOne({\n      $filters: {\n        _id: loanId\n      },\n      user: {\n        _id: 1\n      }\n    });\n    return loan;\n  }\n\n  static getObjects({\n    propertyId,\n    userId,\n    loanId\n  }) {\n    const objects = {};\n\n    if (propertyId) {\n      objects.property = this.getProperty({\n        propertyId\n      });\n    }\n\n    if (userId) {\n      objects.currentUser = this.getCurrentUser({\n        userId\n      });\n    }\n\n    if (loanId) {\n      objects.loan = this.getLoan({\n        loanId\n      });\n    }\n\n    return objects;\n  }\n\n  static checkPermissions({\n    propertyId,\n    userId,\n    checkingFunction,\n    errorMessage\n  }) {\n    if (Security.hasMinimumRole({\n      role: ROLES.ADMIN,\n      userId\n    })) {\n      return;\n    }\n\n    const {\n      property,\n      currentUser\n    } = this.getObjects({\n      propertyId,\n      userId\n    });\n\n    if (!property) {\n      throw new Meteor.Error(HTTP_STATUS_CODES.NOT_FOUND, `Property with id \"${propertyId}\" not found`);\n    }\n\n    if (!checkingFunction({\n      property,\n      currentUser\n    })) {\n      Security.handleUnauthorized(errorMessage || 'Checking permissions');\n    }\n  }\n\n  static isAllowedToInsert() {\n    Security.checkLoggedIn();\n  }\n\n  static isPromotionLot(propertyId) {\n    const {\n      category\n    } = PropertyService.fetchOne({\n      $filters: {\n        _id: propertyId\n      },\n      category: 1\n    });\n    return category === PROPERTY_CATEGORY.PROMOTION;\n  }\n\n  static checkBelongsToPromotion(propertyId, userId) {\n    const promotion = Promotions.findOne({\n      'propertyLinks._id': propertyId\n    });\n\n    if (promotion) {\n      PromotionSecurity.isAllowedToModify({\n        promotionId: promotion._id,\n        userId\n      });\n      return;\n    }\n\n    Security.handleUnauthorized('Not allowed to modify promotion property');\n  }\n\n  static isProUserAllowedToUpdate({\n    propertyId,\n    userId\n  }) {\n    const {\n      category\n    } = Properties.findOne(propertyId);\n\n    if (category === PROPERTY_CATEGORY.PRO) {\n      this.checkPermissions({\n        propertyId,\n        userId,\n        checkingFunction: isAllowedToModifyProProperty,\n        errorMessage: 'Vous ne pouvez pas modifier ce bien immobilier'\n      });\n    } else if (category === PROPERTY_CATEGORY.PROMOTION) {\n      this.checkBelongsToPromotion(propertyId, userId);\n    } else {\n      Security.handleUnauthorized('Vous ne pouvez pas modifier ce bien immobilier');\n    }\n  }\n\n  static isAllowedToUpdate(propertyId, userId) {\n    if (Security.hasMinimumRole({\n      role: ROLES.ADMIN,\n      userId\n    })) {\n      return;\n    }\n\n    if (Security.hasMinimumRole({\n      role: ROLES.PRO,\n      userId\n    })) {\n      this.isProUserAllowedToUpdate({\n        propertyId,\n        userId\n      });\n    } else {\n      const property = Properties.findOne(propertyId);\n      Security.checkOwnership(property, userId);\n    }\n  }\n\n  static isAllowedToDelete(propertyId, userId) {\n    if (Security.hasMinimumRole({\n      role: ROLES.ADMIN,\n      userId\n    })) {\n      return;\n    }\n\n    const property = Properties.findOne(propertyId);\n    Security.checkOwnership(property);\n  }\n\n  static hasAccessToProperty({\n    propertyId,\n    userId\n  }) {\n    try {\n      this.isAllowedToView({\n        propertyId,\n        userId\n      });\n      return;\n    } catch (error) {\n      const hasProperty = UserService.hasProperty({\n        userId,\n        propertyId\n      });\n\n      if (!hasProperty) {\n        Security.handleUnauthorized(\"Vous n'avez pas accès à ce bien immobilier\");\n      }\n    }\n  }\n\n  static isPropertyPublic({\n    propertyId\n  }) {\n    const property = PropertyService.fetchOne({\n      $filters: {\n        _id: propertyId\n      },\n      category: 1\n    });\n    return property && property.category === PROPERTY_CATEGORY.PRO;\n  }\n\n  static checkPropertyIsPublic({\n    propertyId\n  }) {\n    if (!this.isPropertyPublic({\n      propertyId\n    })) {\n      Security.handleUnauthorized();\n    }\n  }\n\n  static isAllowedToView({\n    userId,\n    propertyId\n  }) {\n    this.checkPermissions({\n      propertyId,\n      userId,\n      checkingFunction: isAllowedToViewProProperty,\n      errorMessage: \"Vous n'avez pas accès à ce bien immobilier\"\n    });\n  }\n\n  static isAllowedToManageDocuments({\n    userId,\n    propertyId\n  }) {\n    this.checkPermissions({\n      propertyId,\n      userId,\n      checkingFunction: isAllowedToModifyProProperty,\n      errorMessage: 'Vous ne pouvez pas gérer les documents de ce bien immobilier'\n    });\n  }\n\n  static isAllowedToInviteCustomers({\n    userId,\n    propertyId\n  }) {\n    this.checkPermissions({\n      propertyId,\n      userId,\n      checkingFunction: isAllowedToInviteCustomersToProProperty,\n      errorMessage: 'Vous ne pouvez pas inviter de clients sur ce bien immobilier'\n    });\n  }\n\n  static isAllowedToInviteProUsers({\n    userId,\n    propertyId\n  }) {\n    this.checkPermissions({\n      propertyId,\n      userId,\n      checkingFunction: isAllowedToInviteProUsersToProProperty,\n      errorMessage: \"Vous ne pouvez pas inviter d'utilisateurs sur ce bien immobilier\"\n    });\n  }\n\n  static isAllowedToRemoveCustomer({\n    userId,\n    propertyId,\n    loanId\n  }) {\n    if (Security.hasMinimumRole({\n      role: ROLES.ADMIN,\n      userId\n    })) {\n      return;\n    }\n\n    const {\n      property,\n      currentUser,\n      loan\n    } = this.getObjects({\n      propertyId,\n      userId,\n      loanId\n    });\n    const customerOwnerType = getProPropertyCustomerOwnerType({\n      customerId: loan.user._id,\n      userId,\n      propertyId\n    });\n\n    if (!isAllowedToRemoveCustomerFromProProperty({\n      property,\n      currentUser,\n      customerOwnerType\n    })) {\n      Security.handleUnauthorized('Vous ne pouvez pas supprimer ce client de ce bien immobilier');\n    }\n  }\n\n  static isAllowedToBook({\n    userId,\n    propertyId\n  }) {\n    this.checkPermissions({\n      propertyId,\n      userId,\n      checkingFunction: isAllowedToBookProProperty,\n      errorMessage: 'Vous ne pouvez pas réserver ce bien immobilier'\n    });\n  }\n\n  static isAllowedToBookToCustomer({\n    propertyId,\n    loanId,\n    userId\n  }) {\n    if (Security.hasMinimumRole({\n      role: ROLES.ADMIN,\n      userId\n    })) {\n      return;\n    }\n\n    const {\n      property,\n      currentUser,\n      loan\n    } = this.getObjects({\n      propertyId,\n      userId,\n      loanId\n    });\n    const customerOwnerType = getProPropertyCustomerOwnerType({\n      customerId: loan.user._id,\n      userId,\n      propertyId\n    });\n\n    if (!isAllowedToBookProPropertyToCustomer({\n      property,\n      currentUser,\n      customerOwnerType\n    })) {\n      Security.handleUnauthorized('Vous ne pouvez pas réserver ce bien immobilier à ce client');\n    }\n  }\n\n  static isAllowedToCancelBooking({\n    propertyId,\n    loanId,\n    userId\n  }) {// TODO\n  }\n\n  static isAllowedToSell({\n    propertyId,\n    userId\n  }) {\n    this.checkPermissions({\n      propertyId,\n      userId,\n      checkingFunction: isAllowedToSellProProperty,\n      errorMessage: 'Vous ne pouvez pas vendre ce bien immobilier'\n    });\n  }\n\n  static isAllowedToSellToCustomer({\n    propertyId,\n    loanId,\n    userId\n  }) {\n    if (Security.hasMinimumRole({\n      role: ROLES.ADMIN,\n      userId\n    })) {\n      return;\n    }\n\n    const {\n      property,\n      currentUser,\n      loan\n    } = this.getObjects({\n      propertyId,\n      userId,\n      loanId\n    });\n    const customerOwnerType = getProPropertyCustomerOwnerType({\n      customerId: loan.user._id,\n      userId,\n      propertyId\n    });\n\n    if (!isAllowedToSellProPropertyToCustomer({\n      property,\n      currentUser,\n      customerOwnerType\n    })) {\n      Security.handleUnauthorized('Vous ne pouvez pas vendre ce bien immobilier à ce client');\n    }\n  }\n\n  static isAllowedToManagePermissions({\n    propertyId,\n    userId\n  }) {\n    this.checkPermissions({\n      propertyId,\n      userId,\n      checkingFunction: isAllowedToManageProPropertyPermissions,\n      errorMessage: 'Vous ne pouvez pas gérer les permissions sur ce bien immobilier'\n    });\n  }\n\n  static isAllowedToAddAnonymousLoan({\n    propertyId\n  }) {\n    const property = this.getProperty({\n      propertyId\n    });\n\n    if (!property || property.category !== PROPERTY_CATEGORY.PRO) {\n      Security.handleUnauthorized('Unauthorized propertyId');\n    }\n  }\n\n}\n\nmodule.exportDefault(PropertySecurity);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"UserSecurity.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/security/collections/UserSecurity.js                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Security;\nmodule.link(\"../Security\", {\n  default(v) {\n    Security = v;\n  }\n\n}, 0);\nlet ROLES;\nmodule.link(\"../../constants\", {\n  ROLES(v) {\n    ROLES = v;\n  }\n\n}, 1);\nlet UserService;\nmodule.link(\"../../users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 2);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass UserSecurity {\n  constructor() {\n    _defineProperty(this, \"isAllowedToInsertByRole\", ({\n      role\n    }) => {\n      if (!role || !Object.values(ROLES).includes(role)) {\n        Security.handleUnauthorized('You can only create accounts with one of the accepted roles.');\n      } else if (!Security.currentUserIsAdmin()) {\n        Security.handleUnauthorized(\"You don't have enough privileges to create an account\");\n      } else if (role === ROLES.DEV || role === ROLES.ADMIN) {\n        Security.checkCurrentUserIsDev();\n      }\n    });\n\n    _defineProperty(this, \"isAllowedToUpdate\", (userId, userId2) => {\n      if (Security.currentUserIsAdmin()) {\n        return;\n      }\n\n      if (userId !== userId2) {\n        Security.handleUnauthorized('Pas autorisé');\n      }\n    });\n\n    _defineProperty(this, \"isAllowedToInviteUsersToOrganisation\", ({\n      userId,\n      organisationId\n    }) => {\n      if (Security.currentUserIsAdmin()) {\n        return;\n      }\n\n      const {\n        organisations = []\n      } = UserService.fetchOne({\n        $filters: {\n          _id: userId\n        },\n        organisations: {\n          _id: 1\n        }\n      });\n\n      if (!organisations.some(({\n        _id\n      }) => _id === organisationId)) {\n        Security.handleUnauthorized('Pas autorisé à inviter des utilisateurs à cette organisation');\n      }\n    });\n  }\n\n}\n\nmodule.exportDefault(new UserSecurity());\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/security/collections/index.js                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./BorrowerSecurity\", {\n  default: \"BorrowerSecurity\"\n}, 0);\nmodule.link(\"./LoanSecurity\", {\n  default: \"LoanSecurity\"\n}, 1);\nmodule.link(\"./OfferSecurity\", {\n  default: \"OfferSecurity\"\n}, 2);\nmodule.link(\"./PromotionSecurity\", {\n  default: \"PromotionSecurity\"\n}, 3);\nmodule.link(\"./PropertySecurity\", {\n  default: \"PropertySecurity\"\n}, 4);\nmodule.link(\"./UserSecurity\", {\n  default: \"UserSecurity\"\n}, 5);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"Security.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/security/Security.js                                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  SECURITY_ERROR: () => SECURITY_ERROR,\n  default: () => Security\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Roles;\nmodule.link(\"meteor/alanning:roles\", {\n  Roles(v) {\n    Roles = v;\n  }\n\n}, 1);\nlet get;\nmodule.link(\"lodash/get\", {\n  default(v) {\n    get = v;\n  }\n\n}, 2);\nlet flattenObject;\nmodule.link(\"../helpers\", {\n  flattenObject(v) {\n    flattenObject = v;\n  }\n\n}, 3);\nlet ROLES, COLLECTIONS;\nmodule.link(\"../constants\", {\n  ROLES(v) {\n    ROLES = v;\n  },\n\n  COLLECTIONS(v) {\n    COLLECTIONS = v;\n  }\n\n}, 4);\nlet DOCUMENT_USER_PERMISSIONS;\nmodule.link(\"./constants\", {\n  DOCUMENT_USER_PERMISSIONS(v) {\n    DOCUMENT_USER_PERMISSIONS = v;\n  }\n\n}, 5);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst SECURITY_ERROR = 'NOT_AUTHORIZED';\n\nclass Security {\n  static hasRole(userId, role) {\n    return Roles.userIsInRole(userId, role);\n  }\n\n  static handleUnauthorized(message) {\n    throw new Meteor.Error(SECURITY_ERROR, message);\n  }\n\n  static checkRole(userId, role) {\n    if (!this.hasRole(userId, role)) {\n      this.handleUnauthorized(`Checking role: ${role}`);\n    }\n  }\n\n  static checkLoggedIn() {\n    this.checkUserLoggedIn(Meteor.userId());\n  }\n\n  static checkUserLoggedIn(userId) {\n    if (!userId) {\n      this.handleUnauthorized('Checking if logged in, no user');\n    }\n\n    if (userId !== Meteor.userId()) {\n      this.handleUnauthorized('Checking if logged in, not the right user');\n    }\n  }\n\n  static checkLoggedOut() {\n    if (Meteor.userId()) {\n      this.handleUnauthorized('Checking if logged out');\n    }\n  }\n\n  static currentUserHasRole(role) {\n    return this.hasRole(Meteor.userId(), role);\n  }\n\n  static isUserAdmin(userId) {\n    return this.hasRole(userId, ROLES.ADMIN) || this.hasRole(userId, ROLES.DEV);\n  }\n\n  static isUserDev(userId) {\n    return this.hasRole(userId || Meteor.userId(), ROLES.DEV);\n  }\n\n  static isUserPro(userId) {\n    return this.hasRole(userId, ROLES.PRO) || this.hasRole(userId, ROLES.ADMIN) || this.hasRole(userId, ROLES.DEV);\n  }\n\n  static currentUserIsAdmin() {\n    const userId = Meteor.userId();\n    return this.hasRole(userId, ROLES.ADMIN) || this.hasRole(userId, ROLES.DEV);\n  }\n\n  static checkCurrentUserIsAdmin() {\n    if (!this.currentUserIsAdmin()) {\n      this.handleUnauthorized('Checking if current user is admin');\n    }\n  }\n\n  static checkUserIsAdmin(userId) {\n    if (!this.isUserAdmin(userId)) {\n      this.handleUnauthorized('Checking if user is admin');\n    }\n  }\n\n  static checkUserIsDev(userId) {\n    if (!this.isUserDev(userId)) {\n      this.handleUnauthorized('Checking if user is dev');\n    }\n  }\n\n  static checkUserIsPro(userId) {\n    if (!this.isUserPro(userId)) {\n      this.handleUnauthorized('Checking if user is pro');\n    }\n  }\n\n  static checkOwnership(doc, userId) {\n    userId = userId || Meteor.userId();\n    const userIdIsValid = doc && doc.userId === userId;\n    const userLinksIsValid = doc && doc.userLinks && doc.userLinks.filter(({\n      _id\n    }) => userId === _id).length > 0;\n\n    if (!(userIdIsValid || userLinksIsValid)) {\n      this.handleUnauthorized('Checking ownership');\n    }\n  }\n\n  static checkRequiredPermissions({\n    requiredPermissions,\n    userPermissions\n  }) {\n    if (!Object.keys(flattenObject(requiredPermissions)).every(permission => {\n      const userPermission = get(userPermissions, permission);\n      const requiredPermission = get(requiredPermissions, permission);\n\n      if (!userPermission) {\n        return false;\n      }\n\n      if (Array.isArray(requiredPermission)) {\n        if (!Array.isArray(userPermission)) {\n          return false;\n        }\n\n        return requiredPermission.every(required => userPermission.includes(required));\n      }\n\n      return userPermission === requiredPermission;\n    })) {\n      this.handleUnauthorized('Checking permissions');\n    }\n  }\n\n  static hasPermissionOnDoc({\n    doc,\n    requiredPermissions,\n    userId = Meteor.userId()\n  }) {\n    const {\n      userLinks = [],\n      users = []\n    } = doc;\n    const user = userLinks.find(({\n      _id\n    }) => _id === userId) || users.find(({\n      _id\n    }) => _id === userId);\n\n    if (!user) {\n      this.handleUnauthorized('Checking permissions');\n    }\n\n    const userPermissions = user.permissions || user.$metadata.permissions;\n    this.checkRequiredPermissions({\n      requiredPermissions,\n      userPermissions\n    });\n  }\n\n  static checkCurrentUserIsDev() {\n    if (!this.currentUserHasRole(ROLES.DEV)) {\n      this.handleUnauthorized('unauthorized developer');\n    }\n\n    return true;\n  }\n\n  static hasMinimumRole({\n    role,\n    userId\n  }) {\n    let allowedRoles;\n\n    switch (role) {\n      case ROLES.DEV:\n        allowedRoles = [ROLES.DEV];\n        break;\n\n      case ROLES.ADMIN:\n        allowedRoles = [ROLES.DEV, ROLES.ADMIN];\n        break;\n\n      case ROLES.USER:\n        allowedRoles = [ROLES.DEV, ROLES.ADMIN, ROLES.USER];\n        break;\n\n      case ROLES.PRO:\n        allowedRoles = [ROLES.DEV, ROLES.ADMIN, ROLES.PRO];\n        break;\n\n      default:\n        throw new Meteor.Error(`Invalid role: ${role} at minimumRole`);\n    }\n\n    const isAllowed = allowedRoles.some(allowedRole => this.hasRole(userId, allowedRole));\n\n    if (!isAllowed) {\n      return false;\n    }\n\n    return true;\n  }\n\n  static minimumRole(role) {\n    return userId => this.hasMinimumRole({\n      userId,\n      role\n    }) ? undefined : this.handleUnauthorized('Unauthorized role');\n  }\n\n  static isAllowedToModifyFiles({\n    collection,\n    docId,\n    userId,\n    fileKey\n  }) {\n    const keyId = fileKey.split('/')[0];\n\n    if (keyId !== docId) {\n      this.handleUnauthorized('Invalid fileKey or docId');\n    }\n\n    try {\n      this.minimumRole(ROLES.ADMIN)(userId);\n      return;\n    } catch (error) {}\n\n    switch (collection) {\n      case COLLECTIONS.PROMOTIONS_COLLECTION:\n        {\n          this.promotions.isAllowedToManageDocuments({\n            promotionId: docId,\n            userId\n          });\n          break;\n        }\n\n      case COLLECTIONS.PROPERTIES_COLLECTION:\n        {\n          if (this.properties.isPromotionLot(docId)) {\n            this.promotions.isAllowedToManagePromotionLotDocuments({\n              propertyId: docId,\n              userId\n            });\n            break;\n          }\n\n          this.properties.isAllowedToUpdate(docId, userId);\n          break;\n        }\n\n      default:\n        this[collection].isAllowedToUpdate(docId);\n    }\n  }\n\n}\n\n_defineProperty(Security, \"canModifyDoc\", doc => {\n  // Only for client side docs that replace userLinks with users\n  const {\n    _id: userId\n  } = Meteor.user();\n\n  if (Security.minimumRole(ROLES.ADMIN)(userId)) {\n    return;\n  }\n\n  const me = doc.users.find(({\n    _id\n  }) => _id === userId);\n  return me && me.$metadata && me.$metadata.permissions === DOCUMENT_USER_PERMISSIONS.MODIFY;\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"constants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/security/constants.js                                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  DOCUMENT_USER_PERMISSIONS: () => DOCUMENT_USER_PERMISSIONS\n});\nconst DOCUMENT_USER_PERMISSIONS = {\n  MODIFY: 'MODIFY',\n  READ: 'READ'\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/security/index.js                                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Security;\nmodule.link(\"./Security\", {\n  default(v) {\n    Security = v;\n  }\n\n}, 0);\nlet LoanSecurity, OfferSecurity, BorrowerSecurity, PropertySecurity, UserSecurity, PromotionSecurity;\nmodule.link(\"./collections\", {\n  LoanSecurity(v) {\n    LoanSecurity = v;\n  },\n\n  OfferSecurity(v) {\n    OfferSecurity = v;\n  },\n\n  BorrowerSecurity(v) {\n    BorrowerSecurity = v;\n  },\n\n  PropertySecurity(v) {\n    PropertySecurity = v;\n  },\n\n  UserSecurity(v) {\n    UserSecurity = v;\n  },\n\n  PromotionSecurity(v) {\n    PromotionSecurity = v;\n  }\n\n}, 1);\nmodule.link(\"./Security\", {\n  SECURITY_ERROR: \"SECURITY_ERROR\"\n}, 2);\n\nclass SecurityService extends Security {\n  static get users() {\n    return UserSecurity;\n  }\n\n  static get loans() {\n    return LoanSecurity;\n  }\n\n  static get offers() {\n    return OfferSecurity;\n  }\n\n  static get properties() {\n    return PropertySecurity;\n  }\n\n  static get borrowers() {\n    return BorrowerSecurity;\n  }\n\n  static get promotions() {\n    return PromotionSecurity;\n  }\n\n}\n\nmodule.exportDefault(SecurityService);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"slack\":{\"server\":{\"SlackService.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/slack/server/SlackService.js                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nmodule.export({\n  SlackService: () => SlackService\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet isArray;\nmodule.link(\"lodash/isArray\", {\n  default(v) {\n    isArray = v;\n  }\n\n}, 1);\nlet pick;\nmodule.link(\"lodash/pick\", {\n  default(v) {\n    pick = v;\n  }\n\n}, 2);\nlet fetch;\nmodule.link(\"node-fetch\", {\n  default(v) {\n    fetch = v;\n  }\n\n}, 3);\nlet colors;\nmodule.link(\"../../../config/colors\", {\n  default(v) {\n    colors = v;\n  }\n\n}, 4);\nlet getAPIUser;\nmodule.link(\"../../RESTAPI/server/helpers\", {\n  getAPIUser(v) {\n    getAPIUser = v;\n  }\n\n}, 5);\nlet UserService;\nmodule.link(\"../../users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 6);\nlet ROLES;\nmodule.link(\"../../constants\", {\n  ROLES(v) {\n    ROLES = v;\n  }\n\n}, 7);\nlet fullLoan;\nmodule.link(\"../../loans/queries\", {\n  fullLoan(v) {\n    fullLoan = v;\n  }\n\n}, 8);\nlet Calculator;\nmodule.link(\"../../../utils/Calculator\", {\n  default(v) {\n    Calculator = v;\n  }\n\n}, 9);\nlet getClientMicroservice;\nmodule.link(\"../../../utils/server/getClientUrl\", {\n  getClientMicroservice(v) {\n    getClientMicroservice = v;\n  }\n\n}, 10);\nlet percentFormatters;\nmodule.link(\"../../../utils/formHelpers\", {\n  percentFormatters(v) {\n    percentFormatters = v;\n  }\n\n}, 11);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst LOGO_URL = 'http://d2gb1cl8lbi69k.cloudfront.net/E-Potek_icon_signature.jpg';\nconst shouldNotLog = Meteor.isDevelopment || Meteor.isAppTest || Meteor.isTest;\nconst ERRORS_TO_IGNORE = ['INVALID_STATE_ERR'];\n\nclass SlackService {\n  constructor() {\n    _defineProperty(this, \"send\", (_ref) => {\n      let {\n        channel = '#clients_general',\n        username = 'e-Potek Bot',\n        text\n      } = _ref,\n          rest = (0, _objectWithoutProperties2.default)(_ref, [\"channel\", \"username\", \"text\"]);\n      const body = (0, _objectSpread2.default)({\n        channel,\n        username,\n        text: this.formatText(text),\n        icon_url: LOGO_URL,\n        mrkdwn: true\n      }, rest);\n\n      if (shouldNotLog) {\n        return Promise.resolve(body);\n      }\n\n      return fetch('https://hooks.slack.com/services/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', {\n        method: 'POST',\n        headers: {},\n        body: JSON.stringify(body)\n      }).catch(err => {\n        // Somehow, this error is catched somewhere if we don't do this\n        throw err;\n      });\n    });\n\n    _defineProperty(this, \"formatText\", text => isArray(text) ? text.join('\\n') : text);\n\n    _defineProperty(this, \"sendAttachments\", (_ref2) => {\n      let {\n        attachments\n      } = _ref2,\n          rest = (0, _objectWithoutProperties2.default)(_ref2, [\"attachments\"]);\n      return this.send((0, _objectSpread2.default)({\n        attachments: attachments.map(this.formatAttachment)\n      }, rest));\n    });\n\n    _defineProperty(this, \"formatAttachment\", (_ref3) => {\n      let {\n        text\n      } = _ref3,\n          rest = (0, _objectWithoutProperties2.default)(_ref3, [\"text\"]);\n      return (0, _objectSpread2.default)({\n        text: this.formatText(text),\n        mrkdwn_in: ['text', 'pretext']\n      }, rest);\n    });\n\n    _defineProperty(this, \"sendError\", ({\n      error,\n      additionalData = [],\n      userId,\n      url,\n      connection\n    }) => {\n      if (Meteor.isDevelopment && !Meteor.isTest) {\n        console.log('error', error);\n        console.log('additionalData', additionalData);\n        console.log('userId', userId);\n        console.log('url', url);\n      }\n\n      if (error && ERRORS_TO_IGNORE.includes(error.name) || ERRORS_TO_IGNORE.includes(error.message || error.reason)) {\n        return false;\n      }\n\n      let user;\n\n      try {\n        // Can't use Meteor.user() outside of client or server-methods-body\n        user = Meteor.user(); // Can't access window on server\n      } catch (err) {\n        user = null;\n      }\n\n      if (!user && userId) {\n        user = UserService.get(userId);\n      }\n\n      const attachments = [{\n        title: error && error.name,\n        pretext: `Une erreur est arrivée sur *e-Potek ${getClientMicroservice()}*`,\n        text: error && (error.message || error.reason),\n        color: colors.error,\n        footer: 'c la merde',\n        ts: new Date() / 1000\n      }, {\n        title: 'Stack',\n        text: error && `\\`\\`\\`${error.stack && error.stack.toString()}\\`\\`\\``,\n        color: colors.error\n      }, {\n        title: 'User',\n        text: `\\`\\`\\`${JSON.stringify(user, null, 2)}\\`\\`\\``,\n        color: colors.primary\n      }, {\n        title: 'URL',\n        text: url,\n        color: colors.primary\n      }];\n\n      if (additionalData.length > 0) {\n        attachments.push(...additionalData.map((data, index) => ({\n          title: `Additional data ${index + 1}`,\n          text: JSON.stringify(data)\n        })));\n      }\n\n      if (connection) {\n        attachments.push({\n          title: 'Connection',\n          text: `\\`\\`\\`${JSON.stringify(pick(connection, ['clientAdress', 'httpHeaders']), null, 2)}\\`\\`\\``\n        });\n      }\n\n      return this.sendAttachments({\n        channel: `errors-${Meteor.settings.public.environment}`,\n        username: this.getNotificationOrigin(user),\n        attachments\n      });\n    });\n\n    _defineProperty(this, \"getChannelForAdmin\", admin => admin ? `#clients_${admin.email.split('@')[0]}` : '#clients_general');\n\n    _defineProperty(this, \"notifyAssignee\", ({\n      currentUser,\n      message,\n      title,\n      link,\n      assignee,\n      notifyAlways\n    }) => {\n      const isAdmin = currentUser && (currentUser.roles.includes(ROLES.ADMIN) || currentUser.roles.includes(ROLES.DEV));\n\n      if (!notifyAlways && isAdmin) {\n        return false;\n      }\n\n      const admin = assignee || currentUser && currentUser.assignedEmployee;\n      const channel = this.getChannelForAdmin(admin);\n      const slackPayload = {\n        channel,\n        attachments: [{\n          title,\n          title_link: link,\n          text: message\n        }],\n        username: this.getNotificationOrigin(currentUser)\n      };\n\n      if ((Meteor.isStaging || Meteor.isDevEnvironment || Meteor.isDevelopment) && !Meteor.isTest) {\n        console.log('Slack dev/staging notification');\n        console.log('Payload:', slackPayload);\n        return slackPayload;\n      }\n\n      return this.sendAttachments(slackPayload);\n    });\n\n    _defineProperty(this, \"getNotificationOrigin\", currentUser => {\n      const APIUser = getAPIUser();\n      const username = currentUser ? currentUser.name : undefined;\n\n      if (APIUser) {\n        const mainOrg = UserService.getUserMainOrganisation(APIUser._id);\n        return [username, `(API ${mainOrg && mainOrg.name})`].join(' ');\n      }\n\n      return username;\n    });\n\n    _defineProperty(this, \"notifyOfUpload\", ({\n      currentUser,\n      fileName,\n      docLabel,\n      loanId\n    }) => {\n      const isUser = currentUser && currentUser.roles.includes(ROLES.USER);\n\n      if (!isUser) {\n        return false;\n      }\n\n      const loan = loanId && fullLoan.clone({\n        _id: loanId\n      }).fetchOne();\n      const loanNameEnd = loan ? ` pour ${loan.name}.` : '.';\n      const title = `Upload: ${fileName} dans ${docLabel}${loanNameEnd}`;\n      let link = `${Meteor.settings.public.subdomains.admin}/users/${currentUser._id}`;\n      let message = '';\n\n      if (loan) {\n        const infoProgress = Calculator.personalInfoPercent({\n          loan\n        });\n        const propertyProgress = Calculator.propertyPercent({\n          loan\n        });\n        const documentsProgress = Calculator.filesProgress({\n          loan\n        }).percent;\n        const progressParts = [`Emprunteurs \\`${percentFormatters.format(infoProgress)}%\\``, `Documents: \\`${percentFormatters.format(documentsProgress)}%\\``, `Bien immo: \\`${percentFormatters.format(propertyProgress)}%\\``];\n\n        if (loan.hasPromotion) {\n          message = `_Promotion: \\`${loan.promotions[0].name}\\`_ `;\n          progressParts.pop(); // Remove property progress in case of a promotion\n        }\n\n        message += `*Progrès:* ${progressParts.join(', ')}`;\n        link = `${Meteor.settings.public.subdomains.admin}/loans/${loan._id}`;\n      }\n\n      return this.notifyAssignee({\n        currentUser,\n        message,\n        title,\n        link\n      });\n    });\n  }\n\n}\n\nmodule.exportDefault(new SlackService({\n  serverSide: Meteor.isServer\n}));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/slack/server/methods.js                                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet notifyAssignee, logError, notifyOfUpload;\nmodule.link(\"../methodDefinitions\", {\n  notifyAssignee(v) {\n    notifyAssignee = v;\n  },\n\n  logError(v) {\n    logError = v;\n  },\n\n  notifyOfUpload(v) {\n    notifyOfUpload = v;\n  }\n\n}, 1);\nlet UserService;\nmodule.link(\"../../users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 2);\nlet SlackService;\nmodule.link(\"./SlackService\", {\n  default(v) {\n    SlackService = v;\n  }\n\n}, 3);\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 4);\nnotifyAssignee.setHandler((context, {\n  message,\n  title\n}) => {\n  context.unblock();\n  SecurityService.checkLoggedIn();\n  const user = UserService.get(context.userId);\n  SlackService.notifyAssignee({\n    currentUser: user,\n    message,\n    title,\n    link: `${Meteor.settings.public.subdomains.admin}/users/${context.userId}`\n  });\n});\nnotifyOfUpload.setHandler((context, params) => {\n  context.unblock();\n  SecurityService.checkLoggedIn();\n  const user = UserService.get(context.userId);\n  SlackService.notifyOfUpload((0, _objectSpread2.default)({\n    currentUser: user\n  }, params));\n});\nlogError.setHandler((context, params) => {\n  context.unblock();\n  SlackService.sendError((0, _objectSpread2.default)({}, params, {\n    connection: context.connection\n  }));\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"slackListeners.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/slack/server/slackListeners.js                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nlet PropertyService;\nmodule.link(\"../../properties/server/PropertyService\", {\n  default(v) {\n    PropertyService = v;\n  }\n\n}, 0);\nlet ServerEventService;\nmodule.link(\"../../events/server/ServerEventService\", {\n  default(v) {\n    ServerEventService = v;\n  }\n\n}, 1);\nlet bookPromotionLot, sellPromotionLot, proInviteUser, anonymousLoanInsert, userLoanInsert, anonymousCreateUser;\nmodule.link(\"../../methods\", {\n  bookPromotionLot(v) {\n    bookPromotionLot = v;\n  },\n\n  sellPromotionLot(v) {\n    sellPromotionLot = v;\n  },\n\n  proInviteUser(v) {\n    proInviteUser = v;\n  },\n\n  anonymousLoanInsert(v) {\n    anonymousLoanInsert = v;\n  },\n\n  userLoanInsert(v) {\n    userLoanInsert = v;\n  },\n\n  anonymousCreateUser(v) {\n    anonymousCreateUser = v;\n  }\n\n}, 2);\nlet PromotionLotService;\nmodule.link(\"../../promotionLots/server/PromotionLotService\", {\n  default(v) {\n    PromotionLotService = v;\n  }\n\n}, 3);\nlet UserService;\nmodule.link(\"../../users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 4);\nlet LoanService;\nmodule.link(\"../../loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 5);\nlet promotionLotBooked, promotionLotSold, referralOnlyNotification, newAnonymousLoan, newLoan, newUser;\nmodule.link(\"./slackNotifications\", {\n  promotionLotBooked(v) {\n    promotionLotBooked = v;\n  },\n\n  promotionLotSold(v) {\n    promotionLotSold = v;\n  },\n\n  referralOnlyNotification(v) {\n    referralOnlyNotification = v;\n  },\n\n  newAnonymousLoan(v) {\n    newAnonymousLoan = v;\n  },\n\n  newLoan(v) {\n    newLoan = v;\n  },\n\n  newUser(v) {\n    newUser = v;\n  }\n\n}, 6);\nlet sendPropertyInvitations, sendPromotionInvitations;\nmodule.link(\"./slackNotificationHelpers\", {\n  sendPropertyInvitations(v) {\n    sendPropertyInvitations = v;\n  },\n\n  sendPromotionInvitations(v) {\n    sendPromotionInvitations = v;\n  }\n\n}, 7);\nServerEventService.addAfterMethodListener(bookPromotionLot, ({\n  context: {\n    userId\n  },\n  params: {\n    promotionLotId,\n    loanId\n  }\n}) => {\n  const currentUser = UserService.get(userId);\n  const promotionLot = PromotionLotService.fetchOne({\n    $filters: {\n      _id: promotionLotId\n    },\n    name: 1,\n    promotion: {\n      name: 1,\n      assignedEmployee: {\n        email: 1\n      }\n    }\n  });\n  const {\n    user\n  } = LoanService.fetchOne({\n    $filters: {\n      _id: loanId\n    },\n    user: {\n      name: 1\n    }\n  });\n  promotionLotBooked({\n    currentUser,\n    promotionLot,\n    user\n  });\n});\nServerEventService.addAfterMethodListener(sellPromotionLot, ({\n  context: {\n    userId\n  },\n  params: {\n    promotionLotId\n  }\n}) => {\n  const currentUser = UserService.get(userId);\n\n  const _PromotionLotService$ = PromotionLotService.fetchOne({\n    $filters: {\n      _id: promotionLotId\n    },\n    name: 1,\n    promotion: {\n      name: 1,\n      assignedEmployee: {\n        email: 1\n      }\n    },\n    attributedTo: {\n      _id: 1\n    }\n  }),\n        {\n    attributedTo\n  } = _PromotionLotService$,\n        promotionLot = (0, _objectWithoutProperties2.default)(_PromotionLotService$, [\"attributedTo\"]);\n\n  const {\n    user\n  } = LoanService.fetchOne({\n    $filters: {\n      _id: attributedTo._id\n    },\n    user: {\n      name: 1\n    }\n  });\n  promotionLotSold({\n    currentUser,\n    promotionLot,\n    user\n  });\n});\nServerEventService.addAfterMethodListener(proInviteUser, ({\n  context: {\n    userId\n  },\n  params: {\n    propertyIds = [],\n    properties = [],\n    promotionIds = [],\n    user\n  }\n}) => {\n  const notificationPropertyIds = [...propertyIds, ...properties.map(({\n    _id,\n    externalId\n  }) => _id || externalId)];\n  const currentUser = UserService.get(userId);\n  const invitedUser = UserService.getByEmail(user.email);\n  sendPropertyInvitations(notificationPropertyIds, currentUser, (0, _objectSpread2.default)({}, invitedUser, {\n    email: user.email\n  }));\n  sendPromotionInvitations(promotionIds, currentUser, (0, _objectSpread2.default)({}, invitedUser, {\n    email: user.email\n  }));\n\n  if (notificationPropertyIds.length === 0 && promotionIds.length === 0) {\n    referralOnlyNotification({\n      currentUser,\n      user: (0, _objectSpread2.default)({}, invitedUser, {\n        email: user.email\n      })\n    });\n  }\n});\nServerEventService.addAfterMethodListener(anonymousLoanInsert, ({\n  params: {\n    proPropertyId,\n    referralId\n  },\n  result: loanId\n}) => {\n  const property = proPropertyId && PropertyService.fetchOne({\n    $filters: {\n      _id: proPropertyId\n    },\n    address1: 1\n  });\n  const {\n    name: loanName\n  } = LoanService.fetchOne({\n    $filters: {\n      _id: loanId\n    },\n    name: 1\n  });\n  const referral = referralId && UserService.fetchOne({\n    $filters: {\n      _id: referralId\n    },\n    name: 1,\n    organisations: {\n      name: 1\n    }\n  });\n  newAnonymousLoan({\n    loanName,\n    loanId,\n    property,\n    referral\n  });\n});\nServerEventService.addAfterMethodListener(userLoanInsert, ({\n  context: {\n    userId\n  },\n  result: loanId\n}) => {\n  const currentUser = UserService.get(userId);\n  const {\n    name: loanName\n  } = LoanService.fetchOne({\n    $filters: {\n      _id: loanId\n    },\n    name: 1\n  });\n  newLoan({\n    loanId,\n    loanName,\n    currentUser\n  });\n});\nServerEventService.addAfterMethodListener(anonymousCreateUser, ({\n  result: userId\n}) => {\n  const currentUser = UserService.get(userId);\n  const {\n    loans,\n    name\n  } = UserService.get(userId);\n  newUser({\n    loans,\n    name,\n    currentUser\n  });\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"slackNotificationHelpers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/slack/server/slackNotificationHelpers.js                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  sendPropertyInvitations: () => sendPropertyInvitations,\n  sendPromotionInvitations: () => sendPromotionInvitations\n});\nlet PropertyService;\nmodule.link(\"../../properties/server/PropertyService\", {\n  default(v) {\n    PropertyService = v;\n  }\n\n}, 0);\nlet PromotionService;\nmodule.link(\"../../promotions/server/PromotionService\", {\n  default(v) {\n    PromotionService = v;\n  }\n\n}, 1);\nlet promotionInviteNotification, propertyInviteNotification;\nmodule.link(\"./slackNotifications\", {\n  promotionInviteNotification(v) {\n    promotionInviteNotification = v;\n  },\n\n  propertyInviteNotification(v) {\n    propertyInviteNotification = v;\n  }\n\n}, 2);\n\nconst sendPropertyInvitations = (propertyIds, currentUser, invitedUser) => {\n  propertyIds.forEach(id => {\n    const property = PropertyService.fetchOne({\n      $filters: {\n        $or: [{\n          _id: id\n        }, {\n          externalId: id\n        }]\n      },\n      address1: 1\n    });\n    propertyInviteNotification({\n      currentUser,\n      user: invitedUser,\n      property\n    });\n  });\n};\n\nconst sendPromotionInvitations = (promotionIds, currentUser, invitedUser) => {\n  promotionIds.forEach(id => {\n    const promotion = PromotionService.fetchOne({\n      $filters: {\n        _id: id\n      },\n      name: 1,\n      assignedEmployee: {\n        email: 1\n      }\n    });\n    promotionInviteNotification({\n      currentUser,\n      promotion,\n      user: invitedUser\n    });\n  });\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"slackNotifications.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/slack/server/slackNotifications.js                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  referralOnlyNotification: () => referralOnlyNotification,\n  propertyInviteNotification: () => propertyInviteNotification,\n  promotionInviteNotification: () => promotionInviteNotification,\n  promotionLotBooked: () => promotionLotBooked,\n  promotionLotSold: () => promotionLotSold,\n  updateWatcherNotification: () => updateWatcherNotification,\n  newAnonymousLoan: () => newAnonymousLoan,\n  newLoan: () => newLoan,\n  newUser: () => newUser\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet getUserNameAndOrganisation;\nmodule.link(\"../../helpers\", {\n  getUserNameAndOrganisation(v) {\n    getUserNameAndOrganisation = v;\n  }\n\n}, 1);\nlet SlackService;\nmodule.link(\"./SlackService\", {\n  default(v) {\n    SlackService = v;\n  }\n\n}, 2);\n\nconst referralOnlyNotification = ({\n  currentUser,\n  user\n}) => {\n  const {\n    _id: userId,\n    firstName,\n    lastName\n  } = user;\n  SlackService.notifyAssignee({\n    currentUser,\n    link: `${Meteor.settings.public.subdomains.admin}/users/${userId}`,\n    title: `${firstName} ${lastName} a été invité sur e-Potek en referral uniquement`\n  });\n};\n\nconst propertyInviteNotification = ({\n  currentUser,\n  property,\n  user\n}) => {\n  const {\n    _id: userId,\n    firstName,\n    lastName\n  } = user;\n  const {\n    address1\n  } = property;\n  SlackService.notifyAssignee({\n    currentUser,\n    link: `${Meteor.settings.public.subdomains.admin}/users/${userId}`,\n    title: `${firstName} ${lastName} a été invité au bien immo \"${address1}\"`\n  });\n};\n\nconst promotionInviteNotification = ({\n  currentUser,\n  promotion: {\n    name,\n    assignedEmployee,\n    _id: promotionId\n  },\n  user\n}) => {\n  const {\n    firstName,\n    lastName,\n    email\n  } = user;\n  SlackService.notifyAssignee({\n    currentUser,\n    title: `Promotion ${name}`,\n    message: `${firstName} ${lastName} a été invité! ${email}`,\n    link: `${Meteor.settings.public.subdomains.admin}/promotions/${promotionId}`,\n    assignee: assignedEmployee,\n    notifyAlways: true\n  });\n};\n\nconst promotionLotBooked = ({\n  currentUser,\n  promotionLot,\n  user: {\n    name\n  }\n}) => {\n  const {\n    name: lotName,\n    promotion: {\n      name: promotionName,\n      assignedEmployee,\n      _id: promotionId\n    }\n  } = promotionLot;\n  SlackService.notifyAssignee({\n    currentUser,\n    title: `Promotion ${promotionName}`,\n    message: `Le lot ${lotName} a été réservé pour ${name}`,\n    link: `${Meteor.settings.public.subdomains.admin}/promotions/${promotionId}`,\n    assignee: assignedEmployee,\n    notifyAlways: true\n  });\n};\n\nconst promotionLotSold = ({\n  currentUser,\n  promotionLot,\n  user: {\n    name\n  }\n}) => {\n  const {\n    name: lotName,\n    promotion: {\n      name: promotionName,\n      assignedEmployee,\n      _id: promotionId\n    }\n  } = promotionLot;\n  SlackService.notifyAssignee({\n    currentUser,\n    title: `Promotion ${promotionName}`,\n    message: `Le lot ${lotName} a été vendu à ${name}`,\n    link: `${Meteor.settings.public.subdomains.admin}/promotions/${promotionId}`,\n    assignee: assignedEmployee,\n    notifyAlways: true\n  });\n};\n\nconst updateWatcherNotification = ({\n  user,\n  title,\n  collection,\n  docId,\n  message\n}) => {\n  SlackService.notifyAssignee({\n    currentUser: user,\n    title,\n    link: `${Meteor.settings.public.subdomains.admin}/${collection}/${docId}`,\n    message\n  });\n};\n\nconst newAnonymousLoan = ({\n  loanName,\n  loanId,\n  property,\n  referral\n}) => {\n  SlackService.notifyAssignee({\n    title: `Nouveau dossier anonyme: ${loanName}`,\n    link: `${Meteor.settings.public.subdomains.admin}/loans/${loanId}`,\n    message: property ? `Pour le bien immo ${property.address1} ${referral ? `de ${getUserNameAndOrganisation({\n      user: referral\n    })}` : ''}` : ''\n  });\n};\n\nconst newLoan = ({\n  loanId,\n  loanName,\n  currentUser\n}) => {\n  SlackService.notifyAssignee({\n    currentUser,\n    title: `Nouveau dossier: ${loanName}`,\n    link: `${Meteor.settings.public.subdomains.admin}/loans/${loanId}`\n  });\n};\n\nconst newUser = ({\n  loans = [],\n  currentUser\n}) => {\n  SlackService.notifyAssignee({\n    currentUser,\n    title: `Nouvel utilisateur! ${loans.length ? `(dossier ${loans[0].name})` : ''}`,\n    link: `${Meteor.settings.public.subdomains.admin}/users/${currentUser._id}`\n  });\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"methodDefinitions.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/slack/methodDefinitions.js                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  notifyAssignee: () => notifyAssignee,\n  notifyOfUpload: () => notifyOfUpload,\n  logError: () => logError\n});\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet Method;\nmodule.link(\"../methods/methods\", {\n  Method(v) {\n    Method = v;\n  }\n\n}, 1);\nconst notifyAssignee = new Method({\n  name: 'notifyAssignee',\n  params: {\n    message: Match.Optional(String),\n    title: Match.Optional(String)\n  }\n});\nconst notifyOfUpload = new Method({\n  name: 'notifyOfUpload',\n  params: {\n    docLabel: String,\n    fileName: String,\n    loanId: Match.Optional(String)\n  }\n});\nconst logError = new Method({\n  name: 'logError',\n  params: {\n    error: Match.Any,\n    additionalData: Match.Maybe(Match.Any),\n    url: Match.Optional(String)\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"stats\":{\"server\":{\"exposures.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/stats/server/exposures.js                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet exposeQuery;\nmodule.link(\"../../queries/queryHelpers\", {\n  exposeQuery(v) {\n    exposeQuery = v;\n  }\n\n}, 0);\nlet newLoans, loanHistogram;\nmodule.link(\"../queries\", {\n  newLoans(v) {\n    newLoans = v;\n  },\n\n  loanHistogram(v) {\n    loanHistogram = v;\n  }\n\n}, 1);\nlet newLoansResolver, loanHistogramResolver;\nmodule.link(\"../stats\", {\n  newLoansResolver(v) {\n    newLoansResolver = v;\n  },\n\n  loanHistogramResolver(v) {\n    loanHistogramResolver = v;\n  }\n\n}, 2);\nexposeQuery({\n  query: newLoans,\n  overrides: {\n    validateParams: {\n      period: Number\n    }\n  },\n  options: {\n    allowFilterById: true\n  },\n  resolver: newLoansResolver\n});\nexposeQuery({\n  query: loanHistogram,\n  overrides: {\n    validateParams: {\n      period: Number\n    }\n  },\n  options: {\n    allowFilterById: true\n  },\n  resolver: loanHistogramResolver\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"queries.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/stats/queries.js                                                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  newLoans: () => newLoans,\n  loanHistogram: () => loanHistogram\n});\nlet Loans;\nmodule.link(\"../loans\", {\n  default(v) {\n    Loans = v;\n  }\n\n}, 0);\nconst newLoans = Loans.createQuery('newLoans', () => {});\nconst loanHistogram = Loans.createQuery('loanHistogram', () => {});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"stats.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/stats/stats.js                                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  newLoansResolver: () => newLoansResolver,\n  loanHistogramResolver: () => loanHistogramResolver\n});\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 0);\nlet LoanService;\nmodule.link(\"../loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 1);\n\nconst dateInPast = days => moment().subtract(days, 'days').startOf('day').toDate();\n\nconst newLoansResolver = ({\n  period = 7\n} = {}) => {\n  const end1 = dateInPast(period);\n  const end2 = dateInPast(period * 2);\n  const period1 = LoanService.count({\n    $filters: {\n      createdAt: {\n        $gte: end1\n      }\n    }\n  });\n  const period2 = LoanService.count({\n    $filters: {\n      createdAt: {\n        $gte: end2,\n        $lte: end1\n      }\n    }\n  });\n  const change = period2 === 0 ? 1 : (period1 - period2) / period2;\n  return {\n    count: period1,\n    change\n  };\n};\n\nconst loanHistogramResolver = ({\n  period = 7\n}) => Promise.asyncApply(() => {\n  const aggregation = Promise.await(LoanService.aggregate([{\n    $match: {\n      createdAt: {\n        $gte: dateInPast(period)\n      }\n    }\n  }, {\n    $project: {\n      // Filter out time of day\n      date: {\n        $dateToString: {\n          format: '%Y-%m-%d',\n          date: '$createdAt'\n        }\n      }\n    }\n  }, {\n    $group: {\n      _id: '$date',\n      count: {\n        $sum: 1\n      }\n    }\n  }, {\n    $sort: {\n      _id: 1\n    }\n  }]).toArray());\n  return aggregation;\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"tasks\":{\"server\":{\"TaskService.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/tasks/server/TaskService.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 1);\nlet LOANS_COLLECTION, USERS_COLLECTION;\nmodule.link(\"../../constants\", {\n  LOANS_COLLECTION(v) {\n    LOANS_COLLECTION = v;\n  },\n\n  USERS_COLLECTION(v) {\n    USERS_COLLECTION = v;\n  }\n\n}, 2);\nlet CollectionService;\nmodule.link(\"../../helpers/CollectionService\", {\n  default(v) {\n    CollectionService = v;\n  }\n\n}, 3);\nlet TASK_STATUS;\nmodule.link(\"../taskConstants\", {\n  TASK_STATUS(v) {\n    TASK_STATUS = v;\n  }\n\n}, 4);\nlet Tasks;\nmodule.link(\"../tasks\", {\n  default(v) {\n    Tasks = v;\n  }\n\n}, 5);\nlet PROMOTIONS_COLLECTION;\nmodule.link(\"../../promotions/promotionConstants\", {\n  PROMOTIONS_COLLECTION(v) {\n    PROMOTIONS_COLLECTION = v;\n  }\n\n}, 6);\nlet ORGANISATIONS_COLLECTION;\nmodule.link(\"../../organisations/organisationConstants\", {\n  ORGANISATIONS_COLLECTION(v) {\n    ORGANISATIONS_COLLECTION = v;\n  }\n\n}, 7);\nlet LENDERS_COLLECTION;\nmodule.link(\"../../lenders/lenderConstants\", {\n  LENDERS_COLLECTION(v) {\n    LENDERS_COLLECTION = v;\n  }\n\n}, 8);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass TaskService extends CollectionService {\n  constructor() {\n    super(Tasks);\n\n    _defineProperty(this, \"insert\", (_ref) => {\n      let {\n        object: {\n          collection,\n          dueAt,\n          dueAtTime,\n          docId,\n          assigneeLink = {}\n        }\n      } = _ref,\n          rest = (0, _objectWithoutProperties2.default)(_ref.object, [\"collection\", \"dueAt\", \"dueAtTime\", \"docId\", \"assigneeLink\"]);\n      let assignee = assigneeLink._id;\n\n      if (!assignee && docId && collection) {\n        assignee = this.getAssigneeForDoc(docId, collection);\n      }\n\n      const taskId = Tasks.insert((0, _objectSpread2.default)({\n        dueAt: this.getDueDate({\n          dueAt,\n          dueAtTime\n        })\n      }, rest));\n\n      if (collection === LOANS_COLLECTION) {\n        this.addLink({\n          id: taskId,\n          linkName: 'loan',\n          linkId: docId\n        });\n      }\n\n      if (collection === USERS_COLLECTION) {\n        this.addLink({\n          id: taskId,\n          linkName: 'user',\n          linkId: docId\n        });\n      }\n\n      if (collection === PROMOTIONS_COLLECTION) {\n        this.addLink({\n          id: taskId,\n          linkName: 'promotion',\n          linkId: docId\n        });\n      }\n\n      if (collection === ORGANISATIONS_COLLECTION) {\n        this.addLink({\n          id: taskId,\n          linkName: 'organisation',\n          linkId: docId\n        });\n      }\n\n      if (collection === LENDERS_COLLECTION) {\n        this.addLink({\n          id: taskId,\n          linkName: 'lender',\n          linkId: docId\n        });\n      }\n\n      if (assignee) {\n        this.addLink({\n          id: taskId,\n          linkName: 'assignee',\n          linkId: assignee\n        });\n      }\n\n      return taskId;\n    });\n\n    _defineProperty(this, \"remove\", ({\n      taskId\n    }) => Tasks.remove(taskId));\n\n    _defineProperty(this, \"update\", ({\n      taskId,\n      object\n    }) => Tasks.update(taskId, {\n      $set: object\n    }));\n\n    _defineProperty(this, \"getTaskById\", taskId => Tasks.findOne(taskId));\n\n    _defineProperty(this, \"getTasksForDoc\", docId => Tasks.find({\n      docId\n    }).fetch());\n\n    _defineProperty(this, \"getDueDate\", ({\n      dueAt,\n      dueAtTime\n    }) => {\n      if (dueAt && !dueAtTime) {\n        return dueAt;\n      }\n\n      if (dueAtTime) {\n        const [hours = 0, minutes = 0] = dueAtTime.split(':');\n        const date = moment(dueAt || undefined).hour(hours).minute(minutes).seconds(0).milliseconds(0);\n\n        if (dueAt) {\n          return date.toDate();\n        }\n\n        if (moment().isAfter(date)) {\n          // If it is 14:00, and you choose 10:00 as the time, you don't want it\n          // in the past, but tomorrow\n          date.add(1, 'd');\n        }\n\n        return date.toDate();\n      }\n    });\n\n    _defineProperty(this, \"complete\", ({\n      taskId\n    }) => this.update({\n      taskId,\n      object: {\n        status: TASK_STATUS.COMPLETED,\n        completedAt: new Date()\n      }\n    }));\n\n    _defineProperty(this, \"changeStatus\", ({\n      taskId,\n      newStatus\n    }) => this.update({\n      taskId,\n      object: {\n        status: newStatus,\n        completedAt: newStatus === TASK_STATUS.COMPLETED ? new Date() : undefined\n      }\n    }));\n\n    _defineProperty(this, \"changeAssignedTo\", ({\n      taskId,\n      newAssigneeId\n    }) => {\n      this.addLink({\n        id: taskId,\n        linkName: 'assignee',\n        linkId: newAssigneeId\n      });\n    });\n\n    _defineProperty(this, \"getAssigneeForDoc\", (docId, collection) => {\n      const doc = Mongo.Collection.get(collection).createQuery({\n        $filters: {\n          _id: docId\n        },\n        assignee: 1\n      }).fetchOne();\n      return doc && doc.assignee ? doc.assignee._id : null;\n    });\n  }\n\n}\n\nmodule.exportDefault(new TaskService());\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"exposures.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/tasks/server/exposures.js                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 1);\nlet exposeQuery;\nmodule.link(\"../../queries/queryHelpers\", {\n  exposeQuery(v) {\n    exposeQuery = v;\n  }\n\n}, 2);\nlet tasks;\nmodule.link(\"../queries\", {\n  tasks(v) {\n    tasks = v;\n  }\n\n}, 3);\n\nconst getUptoDate = uptoDate => {\n  switch (uptoDate) {\n    case 'TODAY':\n      return moment().endOf('day').toDate();\n\n    case 'TOMORROW':\n      return moment().endOf('day').add(1, 'days').endOf('day').toDate();\n\n    default:\n      return null;\n  }\n};\n\nexposeQuery({\n  query: tasks,\n  overrides: {\n    embody: (body, params) => {\n      body.$filter = ({\n        filters,\n        params: {\n          assignee,\n          loanId,\n          status,\n          uptoDate\n        }\n      }) => {\n        if (assignee) {\n          filters['assigneeLink._id'] = assignee;\n        }\n\n        if (status) {\n          filters.status = status;\n        }\n\n        if (getUptoDate(uptoDate)) {\n          filters.$or = [{\n            dueAt: {\n              $lt: getUptoDate(uptoDate)\n            }\n          }, {\n            dueAt: {\n              $exists: false\n            }\n          }];\n        }\n\n        if (loanId) {\n          filters['loanLink._id'] = loanId;\n        }\n      };\n\n      body.$postFilter = (results, postFilterParams) => {\n        const {\n          _userId\n        } = postFilterParams;\n        return results.filter(task => {\n          const {\n            assigneeLink: {\n              _id: assigneeId\n            } = {},\n            isPrivate = false\n          } = task;\n\n          if (isPrivate && assigneeId) {\n            return assigneeId === _userId;\n          }\n\n          return true;\n        });\n      };\n    },\n    validateParams: {\n      assignee: Match.Maybe(Match.OneOf(Object, String)),\n      loanId: Match.Maybe(String),\n      status: Match.Maybe(Match.OneOf(Object, String)),\n      uptoDate: Match.Maybe(String)\n    }\n  },\n  options: {\n    allowFilterById: true\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"hooks.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/tasks/server/hooks.js                                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet NotificationService;\nmodule.link(\"../../notifications/server/NotificationService\", {\n  default(v) {\n    NotificationService = v;\n  }\n\n}, 0);\nlet TASK_STATUS;\nmodule.link(\"../taskConstants\", {\n  TASK_STATUS(v) {\n    TASK_STATUS = v;\n  }\n\n}, 1);\nlet Tasks;\nmodule.link(\"..\", {\n  default(v) {\n    Tasks = v;\n  }\n\n}, 2);\nTasks.before.update((userId, {\n  _id: taskId,\n  status: oldStatus,\n  dueAt: oldDate\n}, fieldNames, modifier) => {\n  if (fieldNames.includes('status')) {\n    const newStatus = modifier.$set && modifier.$set.status;\n\n    if (oldStatus !== TASK_STATUS.COMPLETED && newStatus === TASK_STATUS.COMPLETED) {\n      modifier.$set.completedAt = new Date();\n    }\n\n    if (oldStatus === TASK_STATUS.COMPLETED && newStatus !== TASK_STATUS.COMPLETED) {\n      modifier.$set.completedAt = null;\n    }\n\n    if (newStatus === TASK_STATUS.COMPLETED || newStatus === TASK_STATUS.CANCELLED) {\n      NotificationService.readNotificationAll({\n        filters: {\n          'taskLink._id': taskId\n        }\n      });\n    }\n  }\n\n  if (fieldNames.includes('dueAt')) {\n    const newDate = modifier.$set && modifier.$set.dueAt;\n\n    if ((newDate && newDate.getTime()) !== (oldDate && oldDate.getTime())) {\n      NotificationService.remove({\n        'taskLink._id': taskId\n      });\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/tasks/server/methods.js                                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 0);\nlet TaskService;\nmodule.link(\"./TaskService\", {\n  default(v) {\n    TaskService = v;\n  }\n\n}, 1);\nlet taskInsert, taskUpdate, taskComplete, taskChangeStatus, setAssigneeOfTask;\nmodule.link(\"../methodDefinitions\", {\n  taskInsert(v) {\n    taskInsert = v;\n  },\n\n  taskUpdate(v) {\n    taskUpdate = v;\n  },\n\n  taskComplete(v) {\n    taskComplete = v;\n  },\n\n  taskChangeStatus(v) {\n    taskChangeStatus = v;\n  },\n\n  setAssigneeOfTask(v) {\n    setAssigneeOfTask = v;\n  }\n\n}, 2);\ntaskInsert.setHandler(({\n  userId\n}, params) => {\n  SecurityService.checkUserIsAdmin(userId);\n  return TaskService.insert(params);\n});\ntaskUpdate.setHandler(({\n  userId\n}, params) => {\n  SecurityService.checkUserIsAdmin(userId);\n  return TaskService.update(params);\n});\ntaskComplete.setHandler(({\n  userId\n}, params) => {\n  SecurityService.checkUserIsAdmin(userId);\n  return TaskService.complete(params);\n});\ntaskChangeStatus.setHandler(({\n  userId\n}, params) => {\n  SecurityService.checkUserIsAdmin(userId);\n  return TaskService.changeStatus(params);\n});\nsetAssigneeOfTask.setHandler(({\n  userId\n}, params) => {\n  SecurityService.checkUserIsAdmin(userId);\n  return TaskService.changeAssignedTo(params);\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"serverReducers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/tasks/server/serverReducers.js                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Tasks;\nmodule.link(\"../tasks\", {\n  default(v) {\n    Tasks = v;\n  }\n\n}, 0);\nTasks.addReducers({});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"taskListeners.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/tasks/server/taskListeners.js                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet UserService;\nmodule.link(\"../../users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 0);\nlet ServerEventService;\nmodule.link(\"../../events/server/ServerEventService\", {\n  default(v) {\n    ServerEventService = v;\n  }\n\n}, 1);\nlet requestLoanVerification, adminCreateUser, anonymousCreateUser;\nmodule.link(\"../../methods\", {\n  requestLoanVerification(v) {\n    requestLoanVerification = v;\n  },\n\n  adminCreateUser(v) {\n    adminCreateUser = v;\n  },\n\n  anonymousCreateUser(v) {\n    anonymousCreateUser = v;\n  }\n\n}, 2);\nlet LOANS_COLLECTION, USERS_COLLECTION;\nmodule.link(\"../../constants\", {\n  LOANS_COLLECTION(v) {\n    LOANS_COLLECTION = v;\n  },\n\n  USERS_COLLECTION(v) {\n    USERS_COLLECTION = v;\n  }\n\n}, 3);\nlet TaskService;\nmodule.link(\"./TaskService\", {\n  default(v) {\n    TaskService = v;\n  }\n\n}, 4);\nServerEventService.addAfterMethodListener(requestLoanVerification, ({\n  params: {\n    loanId\n  }\n}) => {\n  TaskService.insert({\n    object: {\n      title: 'Vérification du dossier demandée',\n      docId: loanId,\n      collection: LOANS_COLLECTION\n    }\n  });\n});\nServerEventService.addAfterMethodListener([adminCreateUser, anonymousCreateUser], ({\n  result: userId\n}) => {\n  if (userId) {\n    const user = UserService.fetchOne({\n      $filters: {\n        _id: userId\n      },\n      assignedEmployeeId: 1\n    });\n\n    if (user && !user.assignedEmployeeId) {\n      TaskService.insert({\n        object: {\n          title: 'Assigner un conseiller',\n          docId: userId,\n          collection: USERS_COLLECTION\n        }\n      });\n    } else {\n      TaskService.insert({\n        object: {\n          title: 'Nouvel utilisateur: prendre contact',\n          docId: userId,\n          collection: USERS_COLLECTION\n        }\n      });\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/tasks/index.js                                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  taskMethods: () => taskMethods\n});\nlet methodDefinitions;\nmodule.link(\"./methodDefinitions\", {\n  \"*\"(v) {\n    methodDefinitions = v;\n  }\n\n}, 0);\nmodule.link(\"./methodDefinitions\", {\n  \"*\": \"*\"\n}, 1);\nmodule.link(\"./tasks\", {\n  default: \"default\"\n}, 2);\nconst taskMethods = methodDefinitions;\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"links.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/tasks/links.js                                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Tasks;\nmodule.link(\"./tasks\", {\n  default(v) {\n    Tasks = v;\n  }\n\n}, 0);\nlet Users, Loans;\nmodule.link(\"..\", {\n  Users(v) {\n    Users = v;\n  },\n\n  Loans(v) {\n    Loans = v;\n  }\n\n}, 1);\nlet Notifications;\nmodule.link(\"../notifications\", {\n  default(v) {\n    Notifications = v;\n  }\n\n}, 2);\nlet Promotions;\nmodule.link(\"../promotions\", {\n  default(v) {\n    Promotions = v;\n  }\n\n}, 3);\nlet Organisations;\nmodule.link(\"../organisations\", {\n  default(v) {\n    Organisations = v;\n  }\n\n}, 4);\nlet Lenders;\nmodule.link(\"../lenders\", {\n  default(v) {\n    Lenders = v;\n  }\n\n}, 5);\nTasks.addLinks({\n  assignee: {\n    field: 'assigneeLink',\n    collection: Users,\n    type: 'one',\n    metadata: true\n  },\n  loan: {\n    field: 'loanLink',\n    collection: Loans,\n    type: 'one',\n    metadata: true\n  },\n  user: {\n    field: 'userLink',\n    collection: Users,\n    type: 'one',\n    metadata: true\n  },\n  promotion: {\n    field: 'promotionLink',\n    collection: Promotions,\n    type: 'one',\n    metadata: true\n  },\n  organisation: {\n    field: 'organisationLink',\n    collection: Organisations,\n    type: 'one',\n    metadata: true\n  },\n  lender: {\n    field: 'lenderLink',\n    collection: Lenders,\n    type: 'one',\n    metadata: true\n  },\n  notifications: {\n    collection: Notifications,\n    inversedBy: 'task',\n    autoremove: true\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methodDefinitions.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/tasks/methodDefinitions.js                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  taskInsert: () => taskInsert,\n  taskUpdate: () => taskUpdate,\n  taskComplete: () => taskComplete,\n  taskChangeStatus: () => taskChangeStatus,\n  setAssigneeOfTask: () => setAssigneeOfTask\n});\nlet Method;\nmodule.link(\"../methods/methods\", {\n  Method(v) {\n    Method = v;\n  }\n\n}, 0);\nconst taskInsert = new Method({\n  name: 'taskInsert',\n  params: {\n    object: Object\n  }\n});\nconst taskUpdate = new Method({\n  name: 'taskUpdate',\n  params: {\n    taskId: String,\n    object: Object\n  }\n});\nconst taskComplete = new Method({\n  name: 'taskComplete',\n  params: {\n    taskId: String\n  }\n});\nconst taskChangeStatus = new Method({\n  name: 'taskChangeStatus',\n  params: {\n    taskId: String,\n    newStatus: String\n  }\n});\nconst setAssigneeOfTask = new Method({\n  name: 'setAssigneeOfTask',\n  params: {\n    taskId: String,\n    newAssigneeId: String\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"queries.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/tasks/queries.js                                                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  tasks: () => tasks\n});\nlet Tasks;\nmodule.link(\".\", {\n  default(v) {\n    Tasks = v;\n  }\n\n}, 0);\nlet TASK_QUERIES;\nmodule.link(\"./taskConstants\", {\n  TASK_QUERIES(v) {\n    TASK_QUERIES = v;\n  }\n\n}, 1);\nlet task;\nmodule.link(\"../fragments\", {\n  task(v) {\n    task = v;\n  }\n\n}, 2);\nconst tasks = Tasks.createQuery(TASK_QUERIES.TASKS, task());\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"taskConstants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/tasks/taskConstants.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  TASKS_COLLECTION: () => TASKS_COLLECTION,\n  TASK_STATUS: () => TASK_STATUS,\n  TASK_QUERIES: () => TASK_QUERIES,\n  TASK_PRIORITIES: () => TASK_PRIORITIES\n});\nconst TASKS_COLLECTION = 'tasks';\nconst TASK_STATUS = {\n  ACTIVE: 'ACTIVE',\n  COMPLETED: 'COMPLETED',\n  CANCELLED: 'CANCELLED'\n};\nconst TASK_QUERIES = {\n  TASKS: 'TASKS',\n  UNASSIGNED_TASKS: 'UNASSIGNED_TASKS',\n  TASKS_FOR_DOC: 'TASKS_FOR_DOC',\n  SIDENAV_TASKS: 'SIDENAV_TASKS'\n};\nconst TASK_PRIORITIES = {\n  DEFAULT: 'DEFAULT',\n  HIGH: 'HIGH'\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"tasks.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/tasks/tasks.js                                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  TasksSchema: () => TasksSchema\n});\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 1);\nlet createdAt, updatedAt;\nmodule.link(\"../helpers/sharedSchemas\", {\n  createdAt(v) {\n    createdAt = v;\n  },\n\n  updatedAt(v) {\n    updatedAt = v;\n  }\n\n}, 2);\nlet TASK_STATUS, TASKS_COLLECTION, TASK_PRIORITIES;\nmodule.link(\"./taskConstants\", {\n  TASK_STATUS(v) {\n    TASK_STATUS = v;\n  },\n\n  TASKS_COLLECTION(v) {\n    TASKS_COLLECTION = v;\n  },\n\n  TASK_PRIORITIES(v) {\n    TASK_PRIORITIES = v;\n  }\n\n}, 3);\nconst Tasks = new Mongo.Collection(TASKS_COLLECTION); // Prevent all client side modifications of mongoDB\n\nTasks.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true\n});\nTasks.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false\n});\nconst TasksSchema = new SimpleSchema({\n  createdAt,\n  updatedAt,\n  status: {\n    type: String,\n    defaultValue: TASK_STATUS.ACTIVE,\n    allowedValues: Object.values(TASK_STATUS)\n  },\n  completedAt: {\n    type: Date,\n    optional: true\n  },\n  dueAt: {\n    type: Date,\n    optional: true\n  },\n  createdBy: {\n    type: String,\n    optional: true,\n\n    autoValue() {\n      if (this.isInsert) {\n        return this.userId;\n      }\n\n      this.unset();\n    }\n\n  },\n  assigneeLink: {\n    type: Object,\n    optional: true\n  },\n  'assigneeLink._id': {\n    type: String,\n    optional: true\n  },\n  title: {\n    type: String,\n    optional: true\n  },\n  description: {\n    type: String,\n    optional: true\n  },\n  loanLink: {\n    type: Object,\n    optional: true\n  },\n  'loanLink._id': {\n    type: String,\n    optional: true\n  },\n  userLink: {\n    type: Object,\n    optional: true\n  },\n  'userLink._id': {\n    type: String,\n    optional: true\n  },\n  promotionLink: {\n    type: Object,\n    optional: true\n  },\n  'promotionLink._id': {\n    type: String,\n    optional: true\n  },\n  organisationLink: {\n    type: Object,\n    optional: true\n  },\n  'organisationLink._id': {\n    type: String,\n    optional: true\n  },\n  lenderLink: {\n    type: Object,\n    optional: true\n  },\n  'lenderLink._id': {\n    type: String,\n    optional: true\n  },\n  isPrivate: {\n    type: Boolean,\n    defaultValue: false\n  },\n  priority: {\n    type: String,\n    defaultValue: TASK_PRIORITIES.DEFAULT,\n    allowedValues: Object.values(TASK_PRIORITIES)\n  }\n});\nTasks.attachSchema(TasksSchema);\nmodule.exportDefault(Tasks);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"updateWatchers\":{\"server\":{\"UpdateWatcherService.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/updateWatchers/server/UpdateWatcherService.js                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet intersection;\nmodule.link(\"lodash/intersection\", {\n  default(v) {\n    intersection = v;\n  }\n\n}, 1);\nlet difference;\nmodule.link(\"lodash/difference\", {\n  default(v) {\n    difference = v;\n  }\n\n}, 2);\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 3);\nlet LOANS_COLLECTION;\nmodule.link(\"../../loans/loanConstants\", {\n  LOANS_COLLECTION(v) {\n    LOANS_COLLECTION = v;\n  }\n\n}, 4);\nlet LoanService;\nmodule.link(\"../../loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 5);\nlet Intl;\nmodule.link(\"../../../utils/server/intl\", {\n  default(v) {\n    Intl = v;\n  }\n\n}, 6);\nlet toMoney;\nmodule.link(\"../../../utils/conversionFunctions\", {\n  toMoney(v) {\n    toMoney = v;\n  }\n\n}, 7);\nlet percentFormatters;\nmodule.link(\"../../../utils/formHelpers\", {\n  percentFormatters(v) {\n    percentFormatters = v;\n  }\n\n}, 8);\nlet BORROWERS_COLLECTION, PROPERTIES_COLLECTION;\nmodule.link(\"../../constants\", {\n  BORROWERS_COLLECTION(v) {\n    BORROWERS_COLLECTION = v;\n  },\n\n  PROPERTIES_COLLECTION(v) {\n    PROPERTIES_COLLECTION = v;\n  }\n\n}, 9);\nlet updateWatcherNotification;\nmodule.link(\"../../slack/server/slackNotifications\", {\n  updateWatcherNotification(v) {\n    updateWatcherNotification = v;\n  }\n\n}, 10);\nlet UserService;\nmodule.link(\"../../users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 11);\nlet CollectionService;\nmodule.link(\"../../helpers/CollectionService\", {\n  default(v) {\n    CollectionService = v;\n  }\n\n}, 12);\nlet UpdateWatchers;\nmodule.link(\"./updateWatchers\", {\n  default(v) {\n    UpdateWatchers = v;\n  }\n\n}, 13);\n\nclass UpdateWatcherService extends CollectionService {\n  constructor() {\n    super(UpdateWatchers);\n  }\n\n  addUpdateWatching({\n    collection,\n    fields,\n    shouldWatch = () => true\n  }) {\n    const that = this;\n    const hookHandle = collection.after.update(function (userId, doc, fieldNames) {\n      const collectionName = collection._name;\n      const changedFields = that.getChangedFields({\n        fieldNames,\n        fields\n      });\n\n      if (!changedFields || changedFields.length === 0) {\n        return;\n      }\n\n      if (shouldWatch({\n        userId,\n        fieldNames\n      })) {\n        that.updateWatcher({\n          userId,\n          collectionName,\n          doc,\n          changedFields,\n          previousDoc: this.previous\n        });\n      }\n    });\n    return hookHandle;\n  }\n\n  getChangedFields({\n    fieldNames,\n    fields\n  }) {\n    return intersection(fieldNames, fields);\n  }\n\n  updateWatcher({\n    collectionName,\n    doc,\n    changedFields,\n    previousDoc,\n    userId\n  }) {\n    const existingUpdateWatcher = this.findOne({\n      collection: collectionName,\n      docId: doc._id\n    });\n\n    if (!existingUpdateWatcher) {\n      this.insertWatcher({\n        userId,\n        doc,\n        previousDoc,\n        collection: collectionName,\n        changedFields\n      });\n    } else {\n      this.update({\n        currentWatcher: existingUpdateWatcher,\n        doc,\n        previousDoc,\n        changedFields\n      });\n    }\n  }\n\n  insertWatcher({\n    doc,\n    previousDoc,\n    collection,\n    changedFields,\n    userId\n  }) {\n    return this.insert({\n      userId,\n      docId: doc._id,\n      collection,\n      updatedFields: this.createFieldDiffs({\n        previous: previousDoc,\n        current: doc,\n        fieldNames: changedFields\n      })\n    });\n  }\n\n  createFieldDiffs({\n    previous,\n    current,\n    fieldNames\n  }) {\n    return fieldNames.map(fieldName => {\n      if (previous[fieldName] === current[fieldName]) {\n        return null;\n      }\n\n      return {\n        fieldName,\n        previousValue: previous[fieldName],\n        currentValue: current[fieldName]\n      };\n    }).filter(x => x);\n  }\n\n  getUpdatedFieldDiffs({\n    updatedFields,\n    doc\n  }) {\n    return updatedFields.map(updatedField => {\n      const newValue = doc[updatedField.fieldName]; // If a value is changed back to its old value, remove it\n\n      if (newValue === updatedField.previousValue) {\n        return null;\n      }\n\n      if (newValue !== undefined) {\n        return (0, _objectSpread2.default)({}, updatedField, {\n          currentValue: newValue\n        });\n      }\n\n      return updatedField;\n    }).filter(x => x);\n  }\n\n  update({\n    currentWatcher,\n    doc,\n    previousDoc,\n    changedFields\n  }) {\n    const previouslyUpdatedFields = currentWatcher.updatedFields.map(({\n      fieldName\n    }) => fieldName);\n    const newFields = difference(changedFields, previouslyUpdatedFields);\n    const updatedDiffs = this.getUpdatedFieldDiffs({\n      updatedFields: currentWatcher.updatedFields,\n      doc\n    });\n    const newDiffs = this.createFieldDiffs({\n      current: doc,\n      previous: previousDoc,\n      fieldNames: newFields\n    });\n    return this.baseUpdate({\n      _id: currentWatcher._id\n    }, {\n      $set: {\n        updatedFields: [...updatedDiffs, ...newDiffs]\n      }\n    });\n  }\n\n  getOldUpdateWatchers({\n    secondsFromNow\n  }) {\n    const date = new Date();\n    date.setSeconds(date.getSeconds() - secondsFromNow);\n    const foundWatchers = this.find({\n      updatedAt: {\n        $lt: date\n      }\n    }).fetch();\n    return foundWatchers;\n  }\n\n  processUpdateWatcher({\n    _id: updateWatcherId,\n    userId,\n    docId,\n    collection,\n    updatedFields\n  }) {\n    const user = UserService.fetchOne({\n      $filters: {\n        _id: userId\n      },\n      assignedEmployee: {\n        email: 1\n      },\n      name: 1,\n      roles: 1\n    });\n\n    if (!user) {\n      return this.remove(updateWatcherId);\n    }\n\n    const title = this.getNotificationTitle({\n      docId,\n      collection\n    });\n    const message = this.formatUpdatedFields(updatedFields);\n    updateWatcherNotification({\n      user,\n      title,\n      collection,\n      docId,\n      message\n    });\n    this.remove(updateWatcherId);\n  }\n\n  getNotificationTitle({\n    docId,\n    collection\n  }) {\n    const doc = Mongo.Collection.get(collection).findOne({\n      _id: docId\n    }); // Document has been deleted\n\n    if (!doc) {\n      return;\n    }\n\n    switch (collection) {\n      case BORROWERS_COLLECTION:\n        {\n          const {\n            firstName,\n            lastName\n          } = doc;\n          return `Modifications pour l'emprunteur \"${firstName || ''} ${lastName || ''}\"`;\n        }\n\n      case PROPERTIES_COLLECTION:\n        {\n          const {\n            address1\n          } = doc;\n          return `Modifications pour le bien immo \"${address1}\"`;\n        }\n\n      case LOANS_COLLECTION:\n        {\n          const {\n            name,\n            promotions,\n            hasPromotion\n          } = LoanService.fetchOne({\n            $filters: {\n              _id: docId\n            },\n            name: 1,\n            promotions: {\n              name: 1\n            },\n            hasPromotion: 1\n          });\n          const text = `Modifications dans le dossier ${name}`;\n          const suffix = hasPromotion ? ` (${promotions[0].name})` : '';\n          return text + suffix;\n        }\n\n      default:\n        return `Modifications dans ${collection}`;\n    }\n  }\n\n  formatUpdatedFields(updatedFields) {\n    return updatedFields.map(field => this.formatField(field)).join('\\n');\n  }\n\n  formatField({\n    fieldName,\n    previousValue,\n    currentValue\n  }) {\n    const previousValueIsNonEmpty = previousValue || Array.isArray(previousValue) && previousValue.length > 0;\n\n    if (previousValueIsNonEmpty) {\n      if (Array.isArray(currentValue)) {\n        return this.formatArrayDiff(fieldName, previousValue, currentValue);\n      }\n\n      return `*${Intl.formatMessage({\n        id: `Forms.${fieldName}`\n      })}*: ${this.formatValue(previousValue, fieldName)} -> ${this.formatValue(currentValue, fieldName)}`;\n    }\n\n    return `*${Intl.formatMessage({\n      id: `Forms.${fieldName}`\n    })}*: ${this.formatValue(currentValue, fieldName)}`;\n  }\n\n  formatArrayDiff(fieldName, previousValue, currentValue) {\n    const stringifiedPrevious = previousValue.map(JSON.stringify);\n    const stringifiedCurrent = currentValue.map(JSON.stringify);\n    const differentValues = currentValue.map((val, i) => ({\n      val,\n      _currIndex: i,\n      _atIndex: stringifiedPrevious.indexOf(stringifiedCurrent[i])\n    })).filter(({\n      _atIndex\n    }) => _atIndex < 0);\n    const diff = differentValues.map(({\n      _currIndex,\n      val\n    }) => {\n      const prefix = `\\`${_currIndex + 1}\\`\\n`;\n      const prev = previousValue && previousValue[_currIndex];\n\n      if (val && typeof val === 'object') {\n        return `${prefix}${this.formatObjectDiff(fieldName, prev, val)}`;\n      }\n\n      if (prev) {\n        const previous = this.formatValue(prev, fieldName);\n        const current = this.formatValue(val, fieldName, true);\n        return `${prefix}${previous} -> ${current}`;\n      }\n\n      return `${prefix}${this.formatValue(val, fieldName)}`;\n    }).join('\\n');\n    const removedValues = previousValue.length > currentValue.length ? previousValue.map((item, i) => {\n      if (i >= currentValue.length) {\n        const prefix = `\\`${i + 1}\\`\\n`;\n        return `${prefix}${this.formatValue(item, fieldName)} -> _supprimé_`;\n      }\n\n      return null;\n    }).filter(x => x).join('\\n') : '';\n    return `*${Intl.formatMessage({\n      id: `Forms.${fieldName}`\n    })}*:\\n${diff}${removedValues}`;\n  }\n\n  formatObjectDiff(parentName, previousValue, currentValue) {\n    const updated = Object.keys(currentValue).map(key => {\n      const value = currentValue[key];\n      const previous = previousValue && previousValue[key];\n\n      if (value === previous) {\n        return null;\n      }\n\n      if (previous !== undefined) {\n        return `*${Intl.formatMessage({\n          id: `Forms.${parentName}.${key}`\n        })}*: ${previous} -> ${value}`;\n      }\n\n      return `*${Intl.formatMessage({\n        id: `Forms.${parentName}.${key}`\n      })}*: ${value}`;\n    }).filter(x => x).join('\\n');\n    return updated;\n  }\n\n  formatValue(value, parentKey, skipPrefix) {\n    if (typeof value === 'boolean') {\n      return value ? 'Oui' : 'Non';\n    }\n\n    if (typeof value === 'number') {\n      return value === 0 ? '0' : value > 1 ? toMoney(value) : `${percentFormatters.format(value)}%`;\n    }\n\n    if (!value) {\n      return '-';\n    }\n\n    if (value instanceof Date) {\n      return moment(value).format('D/M/YYYY');\n    }\n\n    if (Array.isArray(value)) {\n      return value.map(item => this.formatValue(item, parentKey)).join('\\n');\n    }\n\n    if (typeof value === 'object') {\n      return Object.keys(value).map(key => {\n        const val = value[key];\n\n        if (skipPrefix) {\n          return this.formatValue(val, `${parentKey}.${key}`);\n        }\n\n        return `*${Intl.formatMessage({\n          id: `Forms.${parentKey}.${key}`\n        })}*: ${this.formatValue(val, `${parentKey}.${key}`)}`;\n      }).join(', ');\n    }\n\n    return value;\n  }\n\n  manageUpdateWatchers({\n    secondsFromNow\n  }) {\n    this.getOldUpdateWatchers({\n      secondsFromNow\n    }).forEach(updateWatcher => this.processUpdateWatcher(updateWatcher));\n  }\n\n}\n\nmodule.exportDefault(new UpdateWatcherService());\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"updateWatcherCron.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/updateWatchers/server/updateWatcherCron.js                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet SyncedCron;\nmodule.link(\"meteor/littledata:synced-cron\", {\n  SyncedCron(v) {\n    SyncedCron = v;\n  }\n\n}, 0);\nlet UpdateWatcherService;\nmodule.link(\"./UpdateWatcherService\", {\n  default(v) {\n    UpdateWatcherService = v;\n  }\n\n}, 1);\nlet SlackService;\nmodule.link(\"../../slack/server/SlackService\", {\n  default(v) {\n    SlackService = v;\n  }\n\n}, 2);\nSyncedCron.add({\n  name: 'Manage update watchers',\n\n  schedule(parser) {\n    return parser.text('every 1 minute');\n  },\n\n  job() {\n    try {\n      UpdateWatcherService.manageUpdateWatchers({\n        secondsFromNow: 120\n      });\n    } catch (error) {\n      SlackService.sendError({\n        error,\n        additionalData: ['Manage update watchers CRON error']\n      });\n    }\n  }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"updateWatchers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/updateWatchers/server/updateWatchers.js                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 2);\nlet createdAt, updatedAt;\nmodule.link(\"../../helpers/sharedSchemas\", {\n  createdAt(v) {\n    createdAt = v;\n  },\n\n  updatedAt(v) {\n    updatedAt = v;\n  }\n\n}, 3);\nlet UPDATE_WATCHERS_COLLECTION;\nmodule.link(\"../updateWatcherConstants\", {\n  UPDATE_WATCHERS_COLLECTION(v) {\n    UPDATE_WATCHERS_COLLECTION = v;\n  }\n\n}, 4);\nconst UpdateWatchers = new Mongo.Collection(UPDATE_WATCHERS_COLLECTION);\nUpdateWatchers.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true\n});\nUpdateWatchers.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false\n});\nconst UpdateWatcherSchema = new SimpleSchema({\n  createdAt,\n  updatedAt,\n  collection: String,\n  docId: String,\n  userId: {\n    type: String,\n    optional: true\n  },\n  updatedFields: {\n    type: Array,\n    defaultValue: []\n  },\n  'updatedFields.$': {\n    type: Object,\n    blackbox: true\n  }\n});\nUpdateWatchers.attachSchema(UpdateWatcherSchema);\nMeteor.startup(() => {\n  UpdateWatchers._ensureIndex({\n    docId: 1,\n    collection: 1\n  });\n\n  UpdateWatchers._ensureIndex({\n    updatedAt: -1\n  });\n});\nmodule.exportDefault(UpdateWatchers);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"updateWatcherConstants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/updateWatchers/updateWatcherConstants.js                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  UPDATE_WATCHERS_COLLECTION: () => UPDATE_WATCHERS_COLLECTION\n});\nconst UPDATE_WATCHERS_COLLECTION = 'updateWatchers';\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"users\":{\"server\":{\"UserService.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/users/server/UserService.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nmodule.export({\n  UserServiceClass: () => UserServiceClass\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Roles;\nmodule.link(\"meteor/alanning:roles\", {\n  Roles(v) {\n    Roles = v;\n  }\n\n}, 1);\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 2);\nlet NodeRSA;\nmodule.link(\"node-rsa\", {\n  default(v) {\n    NodeRSA = v;\n  }\n\n}, 3);\nlet omit;\nmodule.link(\"lodash/omit\", {\n  default(v) {\n    omit = v;\n  }\n\n}, 4);\nlet EMAIL_IDS;\nmodule.link(\"../../email/emailConstants\", {\n  EMAIL_IDS(v) {\n    EMAIL_IDS = v;\n  }\n\n}, 5);\nlet sendEmail;\nmodule.link(\"../../methods\", {\n  sendEmail(v) {\n    sendEmail = v;\n  }\n\n}, 6);\nlet fullUser;\nmodule.link(\"../../fragments\", {\n  fullUser(v) {\n    fullUser = v;\n  }\n\n}, 7);\nlet CollectionService;\nmodule.link(\"../../helpers/CollectionService\", {\n  default(v) {\n    CollectionService = v;\n  }\n\n}, 8);\nlet LoanService;\nmodule.link(\"../../loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 9);\nlet PropertyService;\nmodule.link(\"../../properties/server/PropertyService\", {\n  default(v) {\n    PropertyService = v;\n  }\n\n}, 10);\nlet PromotionService;\nmodule.link(\"../../promotions/server/PromotionService\", {\n  default(v) {\n    PromotionService = v;\n  }\n\n}, 11);\nlet OrganisationService;\nmodule.link(\"../../organisations/server/OrganisationService\", {\n  default(v) {\n    OrganisationService = v;\n  }\n\n}, 12);\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 13);\nlet getUserNameAndOrganisation;\nmodule.link(\"../../helpers\", {\n  getUserNameAndOrganisation(v) {\n    getUserNameAndOrganisation = v;\n  }\n\n}, 14);\nlet ROLES;\nmodule.link(\"../userConstants\", {\n  ROLES(v) {\n    ROLES = v;\n  }\n\n}, 15);\nlet roundRobinAdvisors;\nmodule.link(\"./userServerContants\", {\n  roundRobinAdvisors(v) {\n    roundRobinAdvisors = v;\n  }\n\n}, 16);\nlet Users;\nmodule.link(\"../users\", {\n  default(v) {\n    Users = v;\n  }\n\n}, 17);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass UserServiceClass extends CollectionService {\n  constructor({\n    employees\n  }) {\n    super(Users);\n\n    _defineProperty(this, \"createUser\", ({\n      options,\n      role\n    }) => {\n      if (!options.password) {\n        // password is not even allowed to be undefined,\n        // it has to be stripped from the options object\n        options = omit(options, ['password']);\n      }\n\n      const newUserId = Accounts.createUser(options);\n\n      if (role) {\n        Roles.setUserRoles(newUserId, role);\n      }\n\n      return newUserId;\n    });\n\n    _defineProperty(this, \"adminCreateUser\", (_ref) => {\n      let {\n        options: {\n          email,\n          password,\n          sendEnrollmentEmail\n        },\n        role = ROLES.USER,\n        adminId\n      } = _ref,\n          additionalData = (0, _objectWithoutProperties2.default)(_ref.options, [\"email\", \"password\", \"sendEnrollmentEmail\"]);\n      const newUserId = this.createUser({\n        options: {\n          email,\n          password\n        },\n        role\n      });\n\n      if (additionalData.phoneNumber && additionalData.phoneNumber.length) {\n        additionalData.phoneNumbers = [additionalData.phoneNumber];\n      }\n\n      this.update({\n        userId: newUserId,\n        object: additionalData\n      });\n\n      if (role === ROLES.USER && adminId && !additionalData.assignedEmployeeId) {\n        this.assignAdminToUser({\n          userId: newUserId,\n          adminId\n        });\n      } else if (!additionalData.assignedEmployeeId) {\n        this.setAssigneeForNewUser(newUserId);\n      }\n\n      if (sendEnrollmentEmail) {\n        this.sendEnrollmentEmail({\n          userId: newUserId\n        });\n      }\n\n      return newUserId;\n    });\n\n    _defineProperty(this, \"anonymousCreateUser\", ({\n      user,\n      loanId,\n      referralId\n    }) => {\n      const userId = this.adminCreateUser({\n        options: (0, _objectSpread2.default)({}, user, {\n          sendEnrollmentEmail: true\n        })\n      });\n\n      if (loanId) {\n        LoanService.assignLoanToUser({\n          userId,\n          loanId\n        });\n      }\n\n      if (referralId) {\n        this.setReferredBy({\n          userId,\n          proId: referralId\n        });\n      }\n\n      return userId;\n    });\n\n    _defineProperty(this, \"doesUserExist\", ({\n      email\n    }) => this.getByEmail(email) != null);\n\n    _defineProperty(this, \"sendVerificationEmail\", ({\n      userId\n    }) => Accounts.sendVerificationEmail(userId));\n\n    _defineProperty(this, \"sendEnrollmentEmail\", ({\n      userId\n    }) => {\n      try {\n        Accounts.sendEnrollmentEmail(userId);\n      } catch (error) {\n        // FIXME: Temporary fix for meteor toys in dev\n        // https://github.com/MeteorToys/meteor-devtools/issues/111\n        if (error.message !== 'MeteorToys is not defined') {\n          throw error;\n        }\n      }\n    });\n\n    _defineProperty(this, \"remove\", ({\n      userId\n    }) => Users.remove(userId));\n\n    _defineProperty(this, \"allowUpdate\", ({\n      object\n    }) => object && Object.keys(object).length !== 0);\n\n    _defineProperty(this, \"update\", ({\n      userId,\n      object\n    }) => this.allowUpdate({\n      object\n    }) && Users.update(userId, {\n      $set: object\n    }));\n\n    _defineProperty(this, \"assignAdminToUser\", ({\n      userId,\n      adminId\n    }) => adminId && this.update({\n      userId,\n      object: {\n        assignedEmployeeId: adminId\n      }\n    }));\n\n    _defineProperty(this, \"getUsersByRole\", role => Users.find({\n      roles: {\n        $in: [role]\n      }\n    }).fetch());\n\n    _defineProperty(this, \"setRole\", ({\n      userId,\n      role\n    }) => Roles.setUserRoles(userId, role));\n\n    _defineProperty(this, \"getUserById\", ({\n      userId\n    }) => Users.findOne(userId));\n\n    _defineProperty(this, \"getUserByPasswordResetToken\", ({\n      token\n    }) => Users.findOne({\n      'services.password.reset.token': token\n    }, {\n      fields: {\n        firstName: 1,\n        lastName: 1,\n        emails: 1\n      }\n    }));\n\n    _defineProperty(this, \"getLoginToken\", ({\n      userId\n    }) => {\n      const user = Users.findOne(userId, {\n        fields: {\n          services: 1\n        }\n      });\n      return user.services.password && user.services.password.reset && user.services.password.reset.token;\n    });\n\n    _defineProperty(this, \"testCreateUser\", ({\n      user\n    }) => Users.insert(user));\n\n    _defineProperty(this, \"hasPromotion\", ({\n      userId,\n      promotionId\n    }) => {\n      const loans = LoanService.fetch({\n        $filters: {\n          userId\n        },\n        promotionLinks: 1\n      });\n\n      if (!promotionId) {\n        // Return true if any promotion exists\n        return loans && loans.some(({\n          promotionLinks\n        }) => promotionLinks && promotionLinks.length > 0);\n      }\n\n      return loans && loans.some(({\n        promotionLinks = []\n      }) => promotionLinks.some(({\n        _id\n      }) => _id === promotionId));\n    });\n\n    _defineProperty(this, \"hasProperty\", ({\n      userId,\n      propertyId\n    }) => {\n      if (!propertyId) {\n        return false;\n      }\n\n      const loans = LoanService.fetch({\n        $filters: {\n          userId\n        },\n        propertyIds: 1\n      });\n      return loans && loans.some(({\n        propertyIds = []\n      }) => propertyIds.some(id => id === propertyId));\n    });\n\n    _defineProperty(this, \"changeEmail\", ({\n      userId,\n      newEmail\n    }) => {\n      const {\n        emails\n      } = Users.findOne(userId);\n      Accounts.addEmail(userId, newEmail);\n      Accounts.removeEmail(userId, emails[0].address);\n      Accounts.sendVerificationEmail(userId);\n    });\n\n    _defineProperty(this, \"updateOrganisations\", ({\n      userId,\n      newOrganisations = []\n    }) => {\n      const {\n        organisations: oldOrganisations = []\n      } = this.get(userId);\n      oldOrganisations.forEach(({\n        _id: organisationId\n      }) => this.removeLink({\n        id: userId,\n        linkName: 'organisations',\n        linkId: organisationId\n      }));\n      newOrganisations.forEach(({\n        _id: organisationId,\n        metadata\n      }) => this.linkOrganisation({\n        userId,\n        organisationId,\n        metadata\n      }));\n    });\n\n    _defineProperty(this, \"testUserAccount\", ({\n      email,\n      password,\n      role\n    }) => {\n      if (this.doesUserExist({\n        email\n      })) {\n        // Sometimes this methods is called twice from a test.....???????\n        // Apparently due to a duplicate websocket connection\n        return this.getByEmail(email);\n      }\n\n      const userId = Accounts.createUser({\n        email,\n        password\n      });\n      Roles.setUserRoles(userId, role);\n      return this.get(userId);\n    });\n\n    _defineProperty(this, \"generateKeyPair\", ({\n      userId\n    }) => {\n      const key = new NodeRSA();\n      key.generateKeyPair(512);\n      const publicKey = key.exportKey('pkcs1-public-pem').replace(/\\r?\\n|\\r/g, '');\n      const privateKey = key.exportKey('pkcs1-private-pem').replace(/\\r?\\n|\\r/g, '');\n      const createdAt = new Date();\n\n      this._update({\n        id: userId,\n        object: {\n          apiPublicKey: {\n            publicKey,\n            createdAt\n          }\n        }\n      });\n\n      return {\n        publicKey,\n        privateKey,\n        createdAt\n      };\n    });\n\n    _defineProperty(this, \"proReferUser\", ({\n      user,\n      proUserId,\n      shareSolvency\n    }) => {\n      const {\n        email\n      } = user;\n\n      if (this.doesUserExist({\n        email\n      })) {\n        throw new Meteor.Error(\"Ce client existe déjà. Vous ne pouvez pas le référer, mais vous pouvez l'inviter sur un de vos biens immobiliers.\");\n      }\n\n      const {\n        userId,\n        pro,\n        admin\n      } = this.proCreateUser({\n        user,\n        proUserId,\n        sendInvitation: false\n      });\n      const loanId = LoanService.fullLoanInsert({\n        userId\n      });\n      LoanService.update({\n        loanId,\n        object: {\n          shareSolvency\n        }\n      });\n      return sendEmail.run({\n        emailId: EMAIL_IDS.REFER_USER,\n        userId,\n        params: {\n          proUserId,\n          proName: getUserNameAndOrganisation({\n            user: pro\n          }),\n          ctaUrl: this.getEnrollmentUrl({\n            userId\n          })\n        }\n      });\n    });\n\n    _defineProperty(this, \"proCreateUser\", ({\n      user: {\n        email,\n        firstName,\n        lastName,\n        phoneNumber\n      },\n      proUserId,\n      sendInvitation = true,\n      adminId\n    }) => {\n      let pro;\n      let assignedEmployeeId;\n\n      if (proUserId) {\n        pro = this.fetchOne({\n          $filters: {\n            _id: proUserId\n          },\n          name: 1,\n          assignedEmployeeId: 1,\n          organisations: {\n            name: 1\n          }\n        });\n        const {\n          assignedEmployeeId: proAssignedEmployeeId\n        } = pro;\n        assignedEmployeeId = proAssignedEmployeeId;\n      } else if (adminId) {\n        assignedEmployeeId = adminId;\n      }\n\n      const isNewUser = !this.doesUserExist({\n        email\n      });\n      let userId;\n      let admin;\n\n      if (isNewUser) {\n        admin = this.get(assignedEmployeeId);\n        userId = this.adminCreateUser({\n          options: {\n            email,\n            sendEnrollmentEmail: sendInvitation && !pro && Meteor.isProduction,\n            firstName,\n            lastName,\n            phoneNumbers: [phoneNumber]\n          },\n          adminId: admin && admin._id\n        });\n\n        if (pro) {\n          this.setReferredBy({\n            userId,\n            proId: proUserId\n          });\n        }\n      } else {\n        const {\n          _id: existingUserId,\n          assignedEmployeeId: existingAssignedEmployeeId\n        } = this.getByEmail(email);\n        admin = this.get(existingAssignedEmployeeId);\n        userId = existingUserId;\n      }\n\n      return {\n        userId,\n        admin,\n        pro,\n        isNewUser\n      };\n    });\n\n    _defineProperty(this, \"proInviteUser\", ({\n      user,\n      propertyIds = [],\n      promotionIds = [],\n      properties = [],\n      proUserId,\n      adminId,\n      shareSolvency\n    }) => {\n      const referOnly = propertyIds.length === 0 && promotionIds.length === 0 && properties.length === 0;\n\n      if (referOnly) {\n        return this.proReferUser({\n          user,\n          proUserId,\n          shareSolvency\n        });\n      }\n\n      const {\n        invitedBy\n      } = user;\n      const {\n        userId,\n        admin,\n        pro,\n        isNewUser\n      } = this.proCreateUser({\n        user,\n        proUserId: proUserId || invitedBy,\n        adminId,\n        // Invitation will be sent by the propertyInvitationEmail or\n        // promotionInvitationEmail\n        sendInvitation: false\n      });\n      let promises = [];\n\n      if (propertyIds && propertyIds.length) {\n        promises = [...promises, PropertyService.inviteUser({\n          propertyIds,\n          admin,\n          pro,\n          userId,\n          isNewUser,\n          shareSolvency\n        })];\n      }\n\n      if (promotionIds && promotionIds.length) {\n        promises = [...promises, ...promotionIds.map(promotionId => PromotionService.inviteUser({\n          promotionId,\n          userId,\n          pro,\n          isNewUser,\n          promotionLotIds: user.promotionLotIds,\n          showAllLots: user.showAllLots,\n          shareSolvency\n        }))];\n      }\n\n      if (properties && properties.length) {\n        const internalPropertyIds = properties.map(property => {\n          let propertyId;\n          const existingProperty = PropertyService.fetchOne({\n            $filters: {\n              externalId: property.externalId\n            }\n          });\n\n          if (!existingProperty) {\n            propertyId = PropertyService.insertExternalProperty({\n              userId: pro._id,\n              property\n            });\n          } else {\n            propertyId = existingProperty._id;\n          }\n\n          if (!propertyId) {\n            throw new Meteor.Error('No property found');\n          }\n\n          return propertyId;\n        });\n        promises = [...promises, PropertyService.inviteUser({\n          propertyIds: internalPropertyIds,\n          admin,\n          pro,\n          userId,\n          isNewUser,\n          shareSolvency\n        })];\n      }\n\n      return Promise.all(promises);\n    });\n\n    this.setupRoundRobin(employees);\n  }\n\n  get(userId) {\n    return this.fetchOne((0, _objectSpread2.default)({\n      $filters: {\n        _id: userId\n      }\n    }, fullUser()));\n  }\n\n  getByEmail(email) {\n    return Accounts.findUserByEmail(email);\n  }\n\n  getEnrollmentUrl({\n    userId\n  }) {\n    let domain = Meteor.settings.public.subdomains.app;\n\n    if (SecurityService.hasRole(userId, ROLES.PRO)) {\n      domain = Meteor.settings.public.subdomains.pro;\n    }\n\n    const {\n      token\n    } = Accounts.generateResetToken(userId, null, 'enrollAccount');\n    return `${domain}/enroll-account/${token}`;\n  }\n\n  setReferredBy({\n    userId,\n    proId,\n    organisationId\n  }) {\n    if (!organisationId) {\n      const mainOrg = this.getUserMainOrganisation(proId);\n      organisationId = mainOrg && mainOrg._id;\n    }\n\n    return this.update({\n      userId,\n      object: {\n        referredByUserLink: proId,\n        referredByOrganisationLink: organisationId\n      }\n    });\n  }\n\n  setReferredByOrganisation({\n    userId,\n    organisationId\n  }) {\n    return this.update({\n      userId,\n      object: {\n        referredByOrganisationLink: organisationId\n      }\n    });\n  }\n\n  proInviteUserToOrganisation({\n    user,\n    organisationId,\n    title,\n    proId,\n    adminId\n  }) {\n    const {\n      email,\n      phoneNumber\n    } = user;\n    let assigneeId;\n\n    if (this.doesUserExist({\n      email\n    })) {\n      throw new Meteor.Error('Cet utilisateur existe déjà');\n    }\n\n    if (proId) {\n      const {\n        assignedEmployeeId\n      } = this.fetchOne({\n        $filters: {\n          _id: proId\n        },\n        assignedEmployeeId: 1\n      });\n      assigneeId = assignedEmployeeId;\n    } else {\n      assigneeId = adminId;\n    }\n\n    const userId = this.adminCreateUser({\n      options: (0, _objectSpread2.default)({}, user, {\n        phoneNumbers: [phoneNumber],\n        sendEnrollmentEmail: !Meteor.isDevelopment // Meteor toys is not defined\n\n      }),\n      role: ROLES.PRO,\n      adminId: assigneeId\n    });\n    this.linkOrganisation({\n      userId,\n      organisationId,\n      metadata: {\n        title\n      }\n    });\n    return userId;\n  }\n\n  linkOrganisation({\n    userId,\n    organisationId,\n    metadata\n  }) {\n    const {\n      organisations: userOrganisations = []\n    } = this.fetchOne({\n      $filters: {\n        _id: userId\n      },\n      organisations: {\n        _id: 1\n      }\n    });\n    const isMain = userOrganisations.length === 0;\n    this.addLink({\n      id: userId,\n      linkName: 'organisations',\n      linkId: organisationId,\n      metadata: (0, _objectSpread2.default)({}, metadata, {\n        isMain,\n        shareCustomers: true\n      })\n    });\n  }\n\n  getUserMainOrganisation(userId) {\n    const organisations = OrganisationService.fetch({\n      $filters: {\n        userLinks: {\n          $elemMatch: {\n            _id: userId\n          }\n        }\n      },\n      userLinks: 1,\n      name: 1\n    });\n    let mainOrganisation = null;\n\n    if (organisations.length === 1) {\n      mainOrganisation = organisations[0];\n    } else if (organisations.length > 1) {\n      mainOrganisation = organisations.find(({\n        userLinks\n      }) => {\n        const userLink = userLinks.find(({\n          _id\n        }) => _id === userId);\n        return userLink.isMain;\n      }) || organisations[0];\n    }\n\n    return mainOrganisation;\n  }\n\n  proSetShareCustomers({\n    userId,\n    organisationId,\n    shareCustomers\n  }) {\n    this.updateLinkMetadata({\n      id: userId,\n      linkName: 'organisations',\n      linkId: organisationId,\n      metadata: {\n        shareCustomers\n      }\n    });\n  }\n\n  setupRoundRobin(employees = []) {\n    this.employees = employees.map(email => {\n      const employee = this.getByEmail(email);\n\n      if (employee) {\n        return employee._id;\n      }\n    }).filter(x => x);\n  }\n\n  setAssigneeForNewUser(userId) {\n    const {\n      roles,\n      assignedEmployeeId\n    } = this.fetchOne({\n      $filters: {\n        _id: userId\n      },\n      assignedEmployeeId: 1,\n      roles: 1\n    });\n\n    if (assignedEmployeeId) {\n      return;\n    }\n\n    let newAssignee;\n\n    if (roles.includes(ROLES.USER)) {\n      const lastCreatedUser = this.fetchOne({\n        $filters: {\n          roles: ROLES.USER,\n          assignedEmployeeId: {\n            $in: this.employees\n          }\n        },\n        $options: {\n          sort: {\n            createdAt: -1\n          }\n        },\n        assignedEmployeeId: 1,\n        createdAt: 1\n      });\n\n      if (lastCreatedUser && lastCreatedUser.assignedEmployeeId) {\n        const index = this.employees.indexOf(lastCreatedUser.assignedEmployeeId);\n\n        if (index >= this.employees.length - 1) {\n          newAssignee = this.employees[0];\n        } else {\n          newAssignee = this.employees[index + 1];\n        }\n      } else {\n        // Assign the very first user\n        newAssignee = this.employees[0];\n      }\n    }\n\n    return this.update({\n      userId,\n      object: {\n        assignedEmployeeId: newAssignee\n      }\n    });\n  }\n\n}\n\nmodule.exportDefault(new UserServiceClass({\n  employees: roundRobinAdvisors\n}));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"accounts-server-config.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/users/server/accounts-server-config.js                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 0);\nlet pick;\nmodule.link(\"lodash/pick\", {\n  default(v) {\n    pick = v;\n  }\n\n}, 1);\nAccounts.onCreateUser((options, user) => {\n  if (options.profile) {\n    return (0, _objectSpread2.default)({}, pick(options.profile, ['firstName', 'lastName', 'phoneNumbers']), user);\n  }\n\n  return user;\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"exposures.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/users/server/exposures.js                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet Roles;\nmodule.link(\"meteor/alanning:roles\", {\n  Roles(v) {\n    Roles = v;\n  }\n\n}, 1);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 2);\nlet exposeQuery;\nmodule.link(\"../../queries/queryHelpers\", {\n  exposeQuery(v) {\n    exposeQuery = v;\n  }\n\n}, 3);\nlet ROLES;\nmodule.link(\"../../constants\", {\n  ROLES(v) {\n    ROLES = v;\n  }\n\n}, 4);\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 5);\nlet adminUsers, appUser, currentUser, proReferredByUsers, userEmails, userSearch, proUser;\nmodule.link(\"../queries\", {\n  adminUsers(v) {\n    adminUsers = v;\n  },\n\n  appUser(v) {\n    appUser = v;\n  },\n\n  currentUser(v) {\n    currentUser = v;\n  },\n\n  proReferredByUsers(v) {\n    proReferredByUsers = v;\n  },\n\n  userEmails(v) {\n    userEmails = v;\n  },\n\n  userSearch(v) {\n    userSearch = v;\n  },\n\n  proUser(v) {\n    proUser = v;\n  }\n\n}, 6);\nlet proReferredByUsersResolver;\nmodule.link(\"./resolvers\", {\n  proReferredByUsersResolver(v) {\n    proReferredByUsersResolver = v;\n  }\n\n}, 7);\nexposeQuery({\n  query: adminUsers,\n  overrides: {\n    embody: (body, params) => {\n      body.$filter = ({\n        filters,\n        params: {\n          roles,\n          _id,\n          admins,\n          assignedEmployeeId,\n          _userId\n        }\n      }) => {\n        if (_id) {\n          filters._id = _id;\n        }\n\n        if (roles) {\n          filters.roles = {\n            $in: roles\n          };\n        }\n\n        if (admins) {\n          const userIsDev = Roles.userIsInRole(Meteor.user(), ROLES.DEV);\n\n          if (userIsDev) {\n            filters.roles = {\n              $in: [ROLES.ADMIN, ROLES.DEV]\n            };\n          } else {\n            filters.roles = {\n              $in: [ROLES.ADMIN]\n            };\n          }\n        }\n\n        if (assignedEmployeeId) {\n          filters.assignedEmployeeId = assignedEmployeeId;\n        }\n      };\n    },\n    validateParams: {\n      roles: Match.Maybe([String]),\n      admins: Match.Maybe(Boolean),\n      assignedEmployeeId: Match.Maybe(Match.OneOf(Object, String))\n    }\n  },\n  options: {\n    allowFilterById: true\n  }\n});\nexposeQuery({\n  query: appUser,\n  overrides: {\n    firewall(userId, params) {\n      if (!userId) {\n        // Don't throw unauthorized error here, it causes race-conditions in E2E tests\n        // to not reload this subscription\n        // So simply set userId to an impossible id\n        params._userId = 'none';\n      }\n    },\n\n    embody: body => {\n      body.$filter = ({\n        filters,\n        params\n      }) => {\n        filters._id = params._userId;\n      };\n    }\n  }\n});\nexposeQuery({\n  query: currentUser,\n  overrides: {\n    firewall(userId, params) {\n      if (!userId) {\n        // Don't throw unauthorized error here, it causes race-conditions in E2E tests\n        // to not reload this subscription\n        // So simply set userId to an impossible id\n        params._userId = 'none';\n      }\n    },\n\n    embody: body => {\n      // This will deepExtend your body\n      body.$filter = ({\n        filters,\n        params\n      }) => {\n        filters._id = params._userId;\n      };\n    }\n  }\n});\nexposeQuery({\n  query: proReferredByUsers,\n  overrides: {\n    firewall(userId, params) {\n      const {\n        userId: providedUserId,\n        organisationId,\n        ownReferredUsers\n      } = params;\n      SecurityService.checkUserIsPro(userId);\n\n      if (providedUserId) {\n        SecurityService.checkUserIsAdmin(userId);\n        params.userId = providedUserId;\n      }\n\n      if (ownReferredUsers) {\n        params.userId = userId;\n      }\n\n      if (organisationId) {\n        SecurityService.checkUserIsAdmin(userId);\n      }\n    },\n\n    validateParams: {\n      userId: Match.Maybe(String),\n      organisationId: Match.Maybe(String),\n      ownReferredUsers: Match.Maybe(Boolean)\n    }\n  },\n  resolver: proReferredByUsersResolver\n});\nexposeQuery({\n  query: userEmails,\n  options: {\n    allowFilterById: true\n  }\n});\nexposeQuery({\n  query: userSearch,\n  overrides: {\n    validateParams: {\n      searchQuery: Match.Maybe(String),\n      roles: Match.Maybe([String])\n    }\n  }\n});\nexposeQuery({\n  query: proUser,\n  overrides: {\n    firewall(userId, params) {},\n\n    embody: body => {\n      body.$filter = ({\n        filters,\n        params\n      }) => {\n        filters._id = params._userId;\n      };\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"hooks.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/users/server/hooks.js                                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet formatNumbersHook;\nmodule.link(\"../../../utils/phoneFormatting\", {\n  default(v) {\n    formatNumbersHook = v;\n  }\n\n}, 0);\nlet Users;\nmodule.link(\"../users\", {\n  default(v) {\n    Users = v;\n  }\n\n}, 1);\nformatNumbersHook(Users, 'phoneNumbers');\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/users/server/methods.js                                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Analytics;\nmodule.link(\"../../analytics/server/Analytics\", {\n  default(v) {\n    Analytics = v;\n  }\n\n}, 1);\nlet EVENTS;\nmodule.link(\"../../analytics/events\", {\n  default(v) {\n    EVENTS = v;\n  }\n\n}, 2);\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 3);\nlet doesUserExist, sendVerificationLink, assignAdminToUser, assignAdminToNewUser, setRole, adminCreateUser, updateUser, getUserByPasswordResetToken, testCreateUser, removeUser, sendEnrollmentEmail, changeEmail, userUpdateOrganisations, testUserAccount, generateApiKeyPair, proInviteUser, getUserByEmail, setUserReferredBy, setUserReferredByOrganisation, proInviteUserToOrganisation, proSetShareCustomers, anonymousCreateUser, referralExists;\nmodule.link(\"../methodDefinitions\", {\n  doesUserExist(v) {\n    doesUserExist = v;\n  },\n\n  sendVerificationLink(v) {\n    sendVerificationLink = v;\n  },\n\n  assignAdminToUser(v) {\n    assignAdminToUser = v;\n  },\n\n  assignAdminToNewUser(v) {\n    assignAdminToNewUser = v;\n  },\n\n  setRole(v) {\n    setRole = v;\n  },\n\n  adminCreateUser(v) {\n    adminCreateUser = v;\n  },\n\n  updateUser(v) {\n    updateUser = v;\n  },\n\n  getUserByPasswordResetToken(v) {\n    getUserByPasswordResetToken = v;\n  },\n\n  testCreateUser(v) {\n    testCreateUser = v;\n  },\n\n  removeUser(v) {\n    removeUser = v;\n  },\n\n  sendEnrollmentEmail(v) {\n    sendEnrollmentEmail = v;\n  },\n\n  changeEmail(v) {\n    changeEmail = v;\n  },\n\n  userUpdateOrganisations(v) {\n    userUpdateOrganisations = v;\n  },\n\n  testUserAccount(v) {\n    testUserAccount = v;\n  },\n\n  generateApiKeyPair(v) {\n    generateApiKeyPair = v;\n  },\n\n  proInviteUser(v) {\n    proInviteUser = v;\n  },\n\n  getUserByEmail(v) {\n    getUserByEmail = v;\n  },\n\n  setUserReferredBy(v) {\n    setUserReferredBy = v;\n  },\n\n  setUserReferredByOrganisation(v) {\n    setUserReferredByOrganisation = v;\n  },\n\n  proInviteUserToOrganisation(v) {\n    proInviteUserToOrganisation = v;\n  },\n\n  proSetShareCustomers(v) {\n    proSetShareCustomers = v;\n  },\n\n  anonymousCreateUser(v) {\n    anonymousCreateUser = v;\n  },\n\n  referralExists(v) {\n    referralExists = v;\n  }\n\n}, 4);\nlet UserService;\nmodule.link(\"./UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 5);\nlet PropertyService;\nmodule.link(\"../../properties/server/PropertyService\", {\n  default(v) {\n    PropertyService = v;\n  }\n\n}, 6);\nlet ROLES;\nmodule.link(\"../userConstants\", {\n  ROLES(v) {\n    ROLES = v;\n  }\n\n}, 7);\ndoesUserExist.setHandler((context, {\n  email\n}) => UserService.doesUserExist({\n  email\n}));\nsendVerificationLink.setHandler((context, {\n  userId\n} = {}) => {\n  if (userId) {\n    SecurityService.checkCurrentUserIsAdmin();\n  } else {\n    SecurityService.checkLoggedIn();\n  }\n\n  const id = userId || Meteor.userId();\n\n  if (Meteor.isDevelopment) {\n    console.log(`Not sending verification link in development for userId: ${id}`);\n    return false;\n  }\n\n  return UserService.sendVerificationEmail({\n    userId: id\n  });\n});\nassignAdminToUser.setHandler((context, {\n  userId,\n  adminId\n}) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return UserService.assignAdminToUser({\n    userId,\n    adminId\n  });\n});\nassignAdminToNewUser.setHandler((context, {\n  userId,\n  adminId\n}) => {\n  // same action as assignAdminToUser, but with a dedicated\n  // listener that would complete & reassign the user's tasks\n  SecurityService.checkCurrentUserIsAdmin();\n  return UserService.assignAdminToUser({\n    userId,\n    adminId\n  });\n});\nsetRole.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return UserService.setRole(params);\n});\nadminCreateUser.setHandler((context, {\n  options,\n  role\n}) => {\n  SecurityService.users.isAllowedToInsertByRole({\n    role\n  });\n  return UserService.adminCreateUser({\n    options,\n    role,\n    adminId: context.userId\n  });\n});\nupdateUser.setHandler((context, {\n  userId,\n  object\n}) => {\n  SecurityService.users.isAllowedToUpdate(userId, context.userId);\n\n  if (object.roles) {\n    SecurityService.handleUnauthorized('Vous ne pouvez pas changer le rôle');\n  }\n\n  return UserService.update({\n    userId,\n    object\n  });\n});\ngetUserByPasswordResetToken.setHandler((context, params) => UserService.getUserByPasswordResetToken(params));\ntestCreateUser.setHandler((context, params) => {\n  if (!Meteor.isTest) {\n    throw new Meteor.Error('Test only');\n  }\n\n  return UserService.testCreateUser(params);\n});\nremoveUser.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsDev();\n  UserService.remove(params);\n});\nsendEnrollmentEmail.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return UserService.sendEnrollmentEmail(params);\n});\nchangeEmail.setHandler(({\n  userId\n}, params) => {\n  SecurityService.users.isAllowedToUpdate(userId, params.userId);\n  return UserService.changeEmail(params);\n});\nuserUpdateOrganisations.setHandler((context, {\n  userId,\n  newOrganisations\n}) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return UserService.updateOrganisations({\n    userId,\n    newOrganisations\n  });\n});\ntestUserAccount.setHandler((context, params) => {\n  if (Meteor.isTest) {\n    return UserService.testUserAccount(params);\n  }\n});\ngenerateApiKeyPair.setHandler((context, params) => {\n  SecurityService.checkUserIsPro(context.userId);\n  return UserService.generateKeyPair(params);\n});\nproInviteUser.setHandler((context, params) => {\n  const {\n    userId\n  } = context;\n  const {\n    propertyIds,\n    promotionIds,\n    properties\n  } = params;\n  SecurityService.checkUserIsPro(userId);\n\n  if (propertyIds && propertyIds.length) {\n    propertyIds.forEach(propertyId => SecurityService.properties.isAllowedToInviteCustomers({\n      userId,\n      propertyId\n    }));\n  }\n\n  if (promotionIds && promotionIds.length) {\n    promotionIds.forEach(promotionId => SecurityService.promotions.isAllowedToInviteCustomers({\n      promotionId,\n      userId\n    }));\n  }\n\n  if (properties && properties.length) {\n    properties.forEach(({\n      externalId\n    }) => {\n      const existingProperty = PropertyService.fetchOne({\n        $filters: {\n          externalId\n        }\n      });\n\n      if (existingProperty) {\n        SecurityService.properties.isAllowedToInviteCustomers({\n          userId,\n          propertyId: existingProperty._id\n        });\n      }\n    });\n  } // Only pass proUserId if this is a pro user\n\n\n  const isProUser = SecurityService.hasRole(userId, ROLES.PRO);\n  return UserService.proInviteUser((0, _objectSpread2.default)({}, params, {\n    proUserId: isProUser ? userId : undefined,\n    adminId: !isProUser ? userId : undefined\n  }));\n});\ngetUserByEmail.setHandler(({\n  userId\n}, {\n  email\n}) => {\n  SecurityService.checkUserIsPro(userId);\n  const user = UserService.getByEmail(email);\n\n  if (user) {\n    return UserService.fetchOne({\n      $filters: {\n        $and: [{\n          _id: user._id\n        }, {\n          roles: {\n            $in: [ROLES.PRO]\n          }\n        }]\n      },\n      name: 1,\n      organisations: {\n        name: 1\n      }\n    });\n  }\n});\nsetUserReferredBy.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return UserService.setReferredBy(params);\n});\nsetUserReferredByOrganisation.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return UserService.setReferredByOrganisation(params);\n});\nproInviteUserToOrganisation.setHandler(({\n  userId\n}, params) => {\n  const {\n    organisationId\n  } = params;\n  SecurityService.checkUserIsPro(userId);\n  SecurityService.users.isAllowedToInviteUsersToOrganisation({\n    userId,\n    organisationId\n  });\n\n  if (SecurityService.currentUserIsAdmin()) {\n    params.adminId = userId;\n  } else {\n    params.proId = userId;\n  }\n\n  return UserService.proInviteUserToOrganisation(params);\n});\nproSetShareCustomers.setHandler(({\n  userId\n}, params) => {\n  SecurityService.checkUserIsPro(userId);\n  return UserService.proSetShareCustomers(params);\n});\nanonymousCreateUser.setHandler((context, params) => {\n  if (params.loanId) {\n    SecurityService.loans.checkAnonymousLoan(params.loanId);\n  }\n\n  const userId = UserService.anonymousCreateUser(params);\n  const analytics = new Analytics((0, _objectSpread2.default)({}, context, {\n    userId\n  }));\n  analytics.alias(params.trackingId);\n  analytics.track(EVENTS.USER_CREATED, {\n    userId,\n    origin: params.referralId ? 'referral' : 'organic',\n    referralId: params.referralId\n  });\n\n  if (params.loanId) {\n    analytics.track(EVENTS.LOAN_ANONYMOUS_LOAN_CLAIMED, {\n      loanId: params.loanId\n    });\n  }\n\n  return userId;\n});\nreferralExists.setHandler((context, params) => {\n  const {\n    ref\n  } = params;\n  const referral = UserService.fetchOne({\n    $filters: {\n      _id: ref,\n      roles: {\n        $in: [ROLES.PRO]\n      }\n    }\n  });\n  return !!referral;\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"resolvers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/users/server/resolvers.js                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  proReferredByUsersResolver: () => proReferredByUsersResolver\n});\nlet proUserFragment;\nmodule.link(\"../../fragments\", {\n  proUser(v) {\n    proUserFragment = v;\n  }\n\n}, 0);\nlet UserService;\nmodule.link(\"./UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 1);\n\nconst proReferredByUsersResolver = ({\n  userId,\n  organisationId: providedOrganisationId\n}) => {\n  let organisationId;\n\n  if (!providedOrganisationId) {\n    const {\n      organisations = []\n    } = UserService.fetchOne({\n      $filters: {\n        _id: userId\n      },\n      organisations: {\n        _id: 1\n      }\n    });\n    organisationId = !!organisations.length && organisations[0]._id;\n  } else {\n    organisationId = providedOrganisationId;\n  }\n\n  const users = UserService.fetch((0, _objectSpread2.default)({\n    $filters: {\n      $or: [userId && {\n        referredByUserLink: userId\n      }, organisationId && {\n        referredByOrganisationLink: organisationId\n      }].filter(x => x)\n    }\n  }, proUserFragment()));\n  return users;\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"serverReducers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/users/server/serverReducers.js                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet Users;\nmodule.link(\"..\", {\n  default(v) {\n    Users = v;\n  }\n\n}, 0);\nlet getEmailsForAddress;\nmodule.link(\"../../email/server/mandrill\", {\n  getEmailsForAddress(v) {\n    getEmailsForAddress = v;\n  }\n\n}, 1);\nlet createMeteorAsyncFunction;\nmodule.link(\"../../helpers\", {\n  createMeteorAsyncFunction(v) {\n    createMeteorAsyncFunction = v;\n  }\n\n}, 2);\nlet assigneeReducer;\nmodule.link(\"../../reducers/assigneeReducer\", {\n  default(v) {\n    assigneeReducer = v;\n  }\n\n}, 3);\nUsers.addReducers((0, _objectSpread2.default)({}, assigneeReducer(), {\n  sentEmails: {\n    body: {\n      emails: 1\n    },\n    reduce: user => // Simplify this to use email reducer once feature/pro is merged with grapher fixes\n    createMeteorAsyncFunction(getEmailsForAddress)(user.emails[0].address)\n  }\n}));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"userServerContants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/users/server/userServerContants.js                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  roundRobinAdvisors: () => roundRobinAdvisors\n});\nconst roundRobinAdvisors = ['lydia@e-potek.ch', 'max@e-potek.ch'];\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/users/index.js                                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  userMutations: () => userMutations\n});\nlet methodDefinitions;\nmodule.link(\"./methodDefinitions\", {\n  \"*\"(v) {\n    methodDefinitions = v;\n  }\n\n}, 0);\nmodule.link(\"./methodDefinitions\", {\n  \"*\": \"*\"\n}, 1);\nmodule.link(\"./users\", {\n  default: \"default\"\n}, 2);\nconst userMutations = methodDefinitions;\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"links.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/users/links.js                                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Users;\nmodule.link(\"./users\", {\n  default(v) {\n    Users = v;\n  }\n\n}, 0);\nlet Loans, Offers, Borrowers, Properties, Promotions, Contacts, Organisations, Tasks;\nmodule.link(\"..\", {\n  Loans(v) {\n    Loans = v;\n  },\n\n  Offers(v) {\n    Offers = v;\n  },\n\n  Borrowers(v) {\n    Borrowers = v;\n  },\n\n  Properties(v) {\n    Properties = v;\n  },\n\n  Promotions(v) {\n    Promotions = v;\n  },\n\n  Contacts(v) {\n    Contacts = v;\n  },\n\n  Organisations(v) {\n    Organisations = v;\n  },\n\n  Tasks(v) {\n    Tasks = v;\n  }\n\n}, 1);\nconst assignedEmployeeCache = {\n  _id: 1,\n  firstName: 1,\n  lastName: 1\n};\nUsers.addLinks({\n  assignedEmployee: {\n    collection: Users,\n    field: 'assignedEmployeeId',\n    type: 'one',\n    denormalize: {\n      field: 'assignedEmployeeCache',\n      body: assignedEmployeeCache\n    }\n  },\n  assignedEndUsers: {\n    collection: Users,\n    inversedBy: 'assignedEmployee'\n  },\n  assignedPromotions: {\n    collection: Promotions,\n    inversedBy: 'assignedEmployee'\n  },\n  assignedTasks: {\n    collection: Tasks,\n    inversedBy: 'assignee'\n  },\n  borrowers: {\n    collection: Borrowers,\n    inversedBy: 'user',\n    autoremove: true\n  },\n  contact: {\n    collection: Contacts,\n    inversedBy: 'user'\n  },\n  loans: {\n    collection: Loans,\n    inversedBy: 'user',\n    autoremove: true\n  },\n  promotions: {\n    collection: Promotions,\n    inversedBy: 'users'\n  },\n  properties: {\n    collection: Properties,\n    inversedBy: 'user',\n    autoremove: true\n  },\n  offers: {\n    collection: Offers,\n    inversedBy: 'user'\n  },\n  organisations: {\n    collection: Organisations,\n    inversedBy: 'users'\n  },\n  proProperties: {\n    collection: Properties,\n    inversedBy: 'users'\n  },\n  referredByUser: {\n    collection: Users,\n    field: 'referredByUserLink',\n    type: 'one'\n  },\n  referredCustomers: {\n    collection: Users,\n    inversedBy: 'referredByUser',\n    type: 'many'\n  },\n  referredByOrganisation: {\n    collection: Organisations,\n    field: 'referredByOrganisationLink',\n    type: 'one'\n  },\n  tasks: {\n    collection: Tasks,\n    inversedBy: 'user',\n    autoremove: true\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methodDefinitions.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/users/methodDefinitions.js                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  doesUserExist: () => doesUserExist,\n  sendVerificationLink: () => sendVerificationLink,\n  assignAdminToUser: () => assignAdminToUser,\n  assignAdminToNewUser: () => assignAdminToNewUser,\n  setRole: () => setRole,\n  adminCreateUser: () => adminCreateUser,\n  updateUser: () => updateUser,\n  getUserByPasswordResetToken: () => getUserByPasswordResetToken,\n  testCreateUser: () => testCreateUser,\n  removeUser: () => removeUser,\n  sendEnrollmentEmail: () => sendEnrollmentEmail,\n  changeEmail: () => changeEmail,\n  userUpdateOrganisations: () => userUpdateOrganisations,\n  testUserAccount: () => testUserAccount,\n  generateApiKeyPair: () => generateApiKeyPair,\n  proInviteUser: () => proInviteUser,\n  getUserByEmail: () => getUserByEmail,\n  setUserReferredBy: () => setUserReferredBy,\n  setUserReferredByOrganisation: () => setUserReferredByOrganisation,\n  proInviteUserToOrganisation: () => proInviteUserToOrganisation,\n  proSetShareCustomers: () => proSetShareCustomers,\n  anonymousCreateUser: () => anonymousCreateUser,\n  referralExists: () => referralExists\n});\nlet check, Match;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet Method;\nmodule.link(\"../methods/methods\", {\n  Method(v) {\n    Method = v;\n  }\n\n}, 2);\nconst doesUserExist = new Method({\n  name: 'doesUserExist',\n  params: {\n    email: String\n  }\n});\nconst sendVerificationLink = new Method({\n  name: 'sendVerificationLink',\n  params: {\n    userId: Match.Optional(String)\n  }\n});\nconst assignAdminToUser = new Method({\n  name: 'assignAdminToUser',\n  params: {\n    userId: String,\n    adminId: String\n  }\n});\nconst assignAdminToNewUser = new Method({\n  name: 'assignAdminToNewUser',\n  params: {\n    userId: String,\n    adminId: String\n  }\n});\nconst setRole = new Method({\n  name: 'setRole',\n  params: {\n    userId: String,\n    role: String\n  }\n});\nconst adminCreateUser = new Method({\n  name: 'adminCreateUser',\n  params: {\n    options: Object,\n    role: String\n  }\n});\nconst updateUser = new Method({\n  name: 'updateUser',\n  params: {\n    userId: String,\n    object: Object\n  }\n});\nconst getUserByPasswordResetToken = new Method({\n  name: 'getUserByPasswordResetToken',\n  params: {\n    token: String\n  }\n});\nconst testCreateUser = new Method({\n  name: 'testCreateUser',\n  params: {\n    user: Object\n  }\n});\nconst removeUser = new Method({\n  name: 'removeUser',\n  params: {\n    userId: String\n  }\n});\nconst sendEnrollmentEmail = new Method({\n  name: 'sendEnrollmentEmail',\n  params: {\n    userId: String\n  }\n});\nconst changeEmail = new Method({\n  name: 'changeEmail',\n  params: {\n    userId: String,\n    newEmail: String\n  }\n});\nconst userUpdateOrganisations = new Method({\n  name: 'userUpdateOrganisations',\n  params: {\n    userId: String,\n    newOrganisations: Array\n  }\n});\nconst testUserAccount = new Method({\n  name: 'testUserAccount',\n  params: {\n    email: String,\n    password: String,\n    role: String\n  }\n});\nconst generateApiKeyPair = new Method({\n  name: 'generateApiKeyPair',\n  params: {\n    userId: String\n  }\n});\nconst proInviteUser = new Method({\n  name: 'proInviteUser',\n  params: {\n    user: Object,\n    propertyIds: Match.Maybe([String]),\n    promotionIds: Match.Maybe([String]),\n    properties: Match.Maybe(Array),\n    shareSolvency: Match.Maybe(Match.OneOf(Boolean, undefined))\n  }\n});\nconst getUserByEmail = new Method({\n  name: 'getUserByEmail',\n  params: {\n    email: String\n  }\n});\nconst setUserReferredBy = new Method({\n  name: 'setUserReferredBy',\n  params: {\n    userId: String,\n    proId: String\n  }\n});\nconst setUserReferredByOrganisation = new Method({\n  name: 'setUserReferredByOrganisation',\n  params: {\n    userId: String,\n    organisationId: String\n  }\n});\nconst proInviteUserToOrganisation = new Method({\n  name: 'proInviteUserToOrganisation',\n  params: {\n    user: Object,\n    organisationId: String,\n    title: String\n  }\n});\nconst proSetShareCustomers = new Method({\n  name: 'proSetShareCustomers',\n  params: {\n    userId: String,\n    organisationId: String,\n    shareCustomers: Boolean\n  }\n});\nconst anonymousCreateUser = new Method({\n  name: 'anonymousCreateUser',\n  params: {\n    loanId: Match.Maybe(String),\n    user: {\n      firstName: String,\n      lastName: String,\n      email: String,\n      phoneNumber: String\n    },\n    trackingId: String,\n    referralId: Match.Maybe(String)\n  }\n});\nconst referralExists = new Method({\n  name: 'referralExists',\n  params: {\n    ref: String\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"queries.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/users/queries.js                                                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  adminUsers: () => adminUsers,\n  appUser: () => appUser,\n  currentUser: () => currentUser,\n  proReferredByUsers: () => proReferredByUsers,\n  proUser: () => proUser,\n  userEmails: () => userEmails,\n  userSearch: () => userSearch\n});\nlet createRegexQuery, generateMatchAnyWordRegexp;\nmodule.link(\"../helpers/mongoHelpers\", {\n  createRegexQuery(v) {\n    createRegexQuery = v;\n  },\n\n  generateMatchAnyWordRegexp(v) {\n    generateMatchAnyWordRegexp = v;\n  }\n\n}, 0);\nlet adminUser, appUserFragment, fullUser, proUserFragment;\nmodule.link(\"../fragments\", {\n  adminUser(v) {\n    adminUser = v;\n  },\n\n  appUser(v) {\n    appUserFragment = v;\n  },\n\n  fullUser(v) {\n    fullUser = v;\n  },\n\n  proUser(v) {\n    proUserFragment = v;\n  }\n\n}, 1);\nlet USER_QUERIES;\nmodule.link(\"./userConstants\", {\n  USER_QUERIES(v) {\n    USER_QUERIES = v;\n  }\n\n}, 2);\nlet Users;\nmodule.link(\".\", {\n  default(v) {\n    Users = v;\n  }\n\n}, 3);\nconst adminUsers = Users.createQuery(USER_QUERIES.ADMIN_USERS, adminUser());\nconst appUser = Users.createQuery(USER_QUERIES.APP_USER, appUserFragment(), {\n  scoped: true\n});\nconst currentUser = Users.createQuery(USER_QUERIES.CURRENT_USER, fullUser(), {\n  scoped: true\n});\nconst proReferredByUsers = Users.createQuery(USER_QUERIES.PRO_REFERRED_BY, () => {});\nconst proUser = Users.createQuery(USER_QUERIES.PRO_USER, proUserFragment());\nconst userEmails = Users.createQuery(USER_QUERIES.USER_EMAILS, {\n  $filter({\n    filters,\n    params: {\n      _id\n    }\n  }) {\n    filters._id = _id;\n  },\n\n  sentEmails: 1\n});\nconst userSearch = Users.createQuery(USER_QUERIES.USER_SEARCH, {\n  $filter({\n    filters,\n    params: {\n      searchQuery,\n      roles\n    }\n  }) {\n    const formattedSearchQuery = generateMatchAnyWordRegexp(searchQuery);\n\n    if (roles) {\n      filters.roles = {\n        $in: roles\n      };\n    }\n\n    filters.$or = [createRegexQuery('_id', searchQuery), createRegexQuery('emails.0.address', searchQuery), createRegexQuery('firstName', searchQuery), createRegexQuery('lastName', searchQuery), {\n      $and: [createRegexQuery('firstName', formattedSearchQuery), createRegexQuery('lastName', formattedSearchQuery)]\n    }];\n  },\n\n  assignedEmployee: {\n    name: 1\n  },\n  createdAt: 1,\n  email: 1,\n  loans: {\n    name: 1\n  },\n  name: 1,\n  organisations: {\n    name: 1\n  },\n  roles: 1,\n  $options: {\n    limit: 5\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"reducers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/users/reducers.js                                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet getUserDisplayName;\nmodule.link(\"../../utils/userFunctions\", {\n  getUserDisplayName(v) {\n    getUserDisplayName = v;\n  }\n\n}, 0);\nlet Users;\nmodule.link(\"./users\", {\n  default(v) {\n    Users = v;\n  }\n\n}, 1);\nUsers.addReducers({\n  email: {\n    body: {\n      emails: 1\n    },\n    reduce: ({\n      emails\n    }) => emails && emails.length && emails[0].address\n  },\n  name: {\n    body: {\n      firstName: 1,\n      lastName: 1,\n      emails: 1\n    },\n    reduce: getUserDisplayName\n  },\n  phoneNumber: {\n    body: {\n      phoneNumbers: 1\n    },\n    reduce: ({\n      phoneNumbers = []\n    }) => !!phoneNumbers.length && phoneNumbers[0] || ''\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"userConstants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/users/userConstants.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  USERS_COLLECTION: () => USERS_COLLECTION,\n  ROLES: () => ROLES,\n  USER_QUERIES: () => USER_QUERIES,\n  USER_EVENTS: () => USER_EVENTS,\n  LOCAL_STORAGE_REFERRAL: () => LOCAL_STORAGE_REFERRAL,\n  LOCAL_STORAGE_OLD_REFERRAL: () => LOCAL_STORAGE_OLD_REFERRAL\n});\nconst USERS_COLLECTION = 'users';\nconst ROLES = {\n  ADMIN: 'admin',\n  DEV: 'dev',\n  USER: 'user',\n  PRO: 'pro'\n};\nconst USER_QUERIES = {\n  ADMIN_USERS: 'ADMIN_USERS',\n  APP_USER: 'APP_USER',\n  CURRENT_USER: 'CURRENT_USER',\n  PRO_REFERRED_BY: 'PRO_REFERRED_BY',\n  PRO_USER: 'PRO_USER',\n  REFERRED_USERS: 'REFERRED_USERS',\n  USER_EMAILS: 'USER_EMAILS',\n  USER_SEARCH: 'USER_SEARCH'\n};\nconst USER_EVENTS = {\n  USER_CREATED: 'USER_CREATED'\n};\nconst LOCAL_STORAGE_REFERRAL = 'REFERRAL_ID';\nconst LOCAL_STORAGE_OLD_REFERRAL = 'OLD_REFERRAL_ID';\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"users.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/users/users.js                                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  UserSchema: () => UserSchema\n});\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet createdAt, updatedAt, cacheField;\nmodule.link(\"../helpers/sharedSchemas\", {\n  createdAt(v) {\n    createdAt = v;\n  },\n\n  updatedAt(v) {\n    updatedAt = v;\n  },\n\n  cacheField(v) {\n    cacheField = v;\n  }\n\n}, 2);\nlet ROLES;\nmodule.link(\"./userConstants\", {\n  ROLES(v) {\n    ROLES = v;\n  }\n\n}, 3);\nconst UserSchema = new SimpleSchema({\n  username: {\n    type: String,\n    // For accounts-password, either emails or username is required, but not both. It is OK to make this\n    // optional here because the accounts-password package does its own validation.\n    // Third-party login packages may not require either. Adjust this schema as necessary for your usage.\n    optional: true\n  },\n  emails: {\n    type: Array,\n    // For accounts-password, either emails or username is required, but not both. It is OK to make this\n    // optional here because the accounts-password package does its own validation.\n    // Third-party login packages may not require either. Adjust this schema as necessary for your usage.\n    optional: true\n  },\n  'emails.$': {\n    type: Object\n  },\n  'emails.$.address': {\n    type: String,\n    regEx: SimpleSchema.RegEx.Email\n  },\n  'emails.$.verified': {\n    type: Boolean\n  },\n  createdAt,\n  updatedAt,\n  // Make sure this services field is in your schema if you're using any of the accounts packages\n  services: {\n    type: Object,\n    optional: true,\n    blackbox: true\n  },\n  // Add `roles` to your schema if you use the meteor-roles package.\n  // Option 1: Object type\n  // If you specify that type as Object, you must also specify the\n  // `Roles.GLOBAL_GROUP` group whenever you add a user to a role.\n  // Example:\n  // Roles.addUsersToRoles(userId, [\"admin\"], Roles.GLOBAL_GROUP);\n  // You can't mix and match adding with and without a group since\n  // you will fail validation in some cases.\n  // roles: {\n  //   type: Object,\n  //   optional: true,\n  //   blackbox: true,\n  // },\n  // Option 2: [String] type\n  // If you are sure you will never need to use role groups, then\n  // you can specify [String] as the type\n  roles: {\n    type: Array,\n    optional: true,\n    defaultValue: [ROLES.USER]\n  },\n  'roles.$': {\n    type: String,\n    allowedValues: Object.values(ROLES)\n  },\n  // In order to avoid an 'Exception in setInterval callback' from Meteor\n  heartbeat: {\n    type: Date,\n    optional: true\n  },\n  assignedEmployeeId: {\n    type: String,\n    optional: true\n  },\n  firstName: {\n    type: String,\n    optional: true\n  },\n  lastName: {\n    type: String,\n    optional: true\n  },\n  phoneNumbers: {\n    type: Array,\n    optional: true\n  },\n  'phoneNumbers.$': {\n    type: String\n  },\n  apiPublicKey: {\n    type: Object,\n    optional: true\n  },\n  'apiPublicKey.publicKey': {\n    type: String,\n    optional: true\n  },\n  'apiPublicKey.createdAt': {\n    type: Date,\n    optional: true\n  },\n  referredByUserLink: {\n    type: String,\n    optional: true\n  },\n  referredByOrganisationLink: {\n    type: String,\n    optional: true\n  },\n  assignedEmployeeCache: cacheField\n});\nMeteor.users.attachSchema(UserSchema);\nconst Users = Meteor.users;\nmodule.exportDefault(Users);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"containerToolkit\":{\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/containerToolkit/index.js                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./withSmartQuery\", {\n  default: \"withSmartQuery\"\n}, 0);\nmodule.link(\"recompose\", {\n  branch: \"branch\",\n  renderComponent: \"renderComponent\"\n}, 1);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"skipContainer.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/containerToolkit/skipContainer.jsx                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React, Component;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\n\n// Determine whether to skip adding an HOC `container` based on a `skip`\n// function, only change the wrappedComponent when needed to avoid UI flashes\nconst makeSkipContainer = (container, skip) => WrappedComponent => class extends Component {\n  constructor(props) {\n    super(props);\n    this.setWrappedComponent(props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (skip(this.props) !== skip(nextProps)) {\n      this.setWrappedComponent(nextProps);\n      this.forceUpdate();\n    }\n  }\n\n  setWrappedComponent(props) {\n    this.wrappedComponent = skip(props) ? WrappedComponent : container(WrappedComponent);\n  }\n\n  render() {\n    const FinalComponent = this.wrappedComponent;\n    return React.createElement(FinalComponent, this.props);\n  }\n\n};\n\nmodule.exportDefault(makeSkipContainer);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"withSmartQuery.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/containerToolkit/withSmartQuery.js                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nlet withQuery;\nmodule.link(\"meteor/cultofcoders:grapher-react\", {\n  withQuery(v) {\n    withQuery = v;\n  }\n\n}, 0);\nlet mapProps, compose, branch, renderComponent, lifecycle;\nmodule.link(\"recompose\", {\n  mapProps(v) {\n    mapProps = v;\n  },\n\n  compose(v) {\n    compose = v;\n  },\n\n  branch(v) {\n    branch = v;\n  },\n\n  renderComponent(v) {\n    renderComponent = v;\n  },\n\n  lifecycle(v) {\n    lifecycle = v;\n  }\n\n}, 1);\nlet withLoading;\nmodule.link(\"../../components/Loading\", {\n  withLoading(v) {\n    withLoading = v;\n  }\n\n}, 2);\nlet MissingDoc;\nmodule.link(\"../../components/MissingDoc\", {\n  default(v) {\n    MissingDoc = v;\n  }\n\n}, 3);\nlet ClientEventService;\nmodule.link(\"../events/ClientEventService\", {\n  default(v) {\n    ClientEventService = v;\n  }\n\n}, 4);\nlet addQueryToRefetch, removeQueryToRefetch;\nmodule.link(\"../methods/clientQueryManager\", {\n  addQueryToRefetch(v) {\n    addQueryToRefetch = v;\n  },\n\n  removeQueryToRefetch(v) {\n    removeQueryToRefetch = v;\n  }\n\n}, 5);\nlet makeSkipContainer;\nmodule.link(\"./skipContainer\", {\n  default(v) {\n    makeSkipContainer = v;\n  }\n\n}, 6);\n\n// render the missing doc component only when we want to\nconst makeRenderMissingDocIfNoData = (render = false, {\n  single\n}) => {\n  let renderFunc;\n\n  if (typeof render === 'function') {\n    renderFunc = props => render(props) && single && !props.isLoading && !props.data;\n  } else {\n    renderFunc = ({\n      isLoading,\n      data\n    }) => render && single && !isLoading && !data;\n  }\n\n  return branch(renderFunc, renderComponent(MissingDoc));\n}; // Use proper name for data, and remove unnecessary props from children\n// error should be thrown and catched by our errorboundaries anyways\n// or displayed by an alert\n\n\nconst makeMapProps = dataName => mapProps((_ref) => {\n  let {\n    data,\n    isLoading,\n    error\n  } = _ref,\n      rest = (0, _objectWithoutProperties2.default)(_ref, [\"data\", \"isLoading\", \"error\"]);\n  return (0, _objectSpread2.default)({\n    [dataName]: data\n  }, rest);\n});\n\nconst withQueryRefetcher = ({\n  queryName\n}) => lifecycle({\n  componentDidMount() {\n    const {\n      refetch\n    } = this.props;\n\n    if (refetch) {\n      ClientEventService.addListener(queryName, refetch);\n    }\n  },\n\n  componentWillUnmount() {\n    const {\n      refetch\n    } = this.props;\n\n    if (refetch) {\n      ClientEventService.removeListener(queryName, refetch);\n    }\n  }\n\n}); // This adds all non-reactive queries on the window object, and removes them\n// when the query disappears\n// These queries can then all be refreshed from `clientMethodsConfig`\n// every time a method is called\n\n\nconst withGlobalQueryManager = ({\n  queryName\n}, {\n  reactive\n}, refetchOnMethodCall) => {\n  const shouldActivateGlobalRefetch = refetchOnMethodCall && !reactive && global.window;\n\n  if (!shouldActivateGlobalRefetch) {\n    return x => x;\n  }\n\n  return lifecycle({\n    componentDidMount() {\n      addQueryToRefetch(queryName, refetchOnMethodCall);\n    },\n\n    componentWillUnmount() {\n      removeQueryToRefetch(queryName);\n    }\n\n  });\n};\n\nconst calculateParams = (params, props) => {\n  if (typeof params === 'function') {\n    return params(props);\n  }\n\n  return params;\n};\n\nconst withSmartQuery = ({\n  query,\n  params = {},\n  queryOptions = {\n    single: false\n  },\n  dataName = 'data',\n  // used to bypass the missing doc component\n  renderMissingDoc = true,\n  smallLoader = false,\n  refetchOnMethodCall = 'all',\n  skip\n}) => {\n  let completeQuery;\n\n  if (typeof query === 'function') {\n    completeQuery = props => query(props).clone(calculateParams(params, props));\n  } else {\n    completeQuery = props => query.clone(calculateParams(params, props));\n  }\n\n  const container = compose(withGlobalQueryManager(query, queryOptions, refetchOnMethodCall), withQuery(completeQuery, (0, _objectSpread2.default)({\n    loadOnRefetch: false\n  }, queryOptions)), withLoading(smallLoader), makeRenderMissingDocIfNoData(renderMissingDoc, queryOptions), makeMapProps(dataName), withQueryRefetcher(query));\n\n  if (skip) {\n    return makeSkipContainer(container, skip);\n  }\n\n  return container;\n};\n\nmodule.exportDefault(withSmartQuery);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"errors\":{\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/errors/index.js                                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  ERROR_CODES: () => ERROR_CODES,\n  LOT_ERRORS: () => LOT_ERRORS\n});\nconst ERROR_CODES = {\n  BAD_REQUEST: 400,\n  UNAUTHORIZED: 401,\n  FORBIDDEN: 403,\n  NOT_FOUND: 404\n};\nconst LOT_ERRORS = {\n  PROMOTION_LOT_BOOKED_OR_SOLD: 'PROMOTION_LOT_BOOKED_OR_SOLD'\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"factories\":{\"factories.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/factories/factories.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet Factory;\nmodule.link(\"meteor/dburles:factory\", {\n  Factory(v) {\n    Factory = v;\n  }\n\n}, 0);\nlet faker;\nmodule.link(\"faker\", {\n  default(v) {\n    faker = v;\n  }\n\n}, 1);\nlet LOT_TYPES, ORGANISATION_TYPES, PROMOTION_TYPES, REVENUE_TYPES, ROLES, STEPS, TASK_STATUS, DEFAULT_VALUE_FOR_ALL, DEFAULT_MAIN_RESIDENCE_RULES, DEFAULT_SECONDARY_RESIDENCE_RULES;\nmodule.link(\"../constants\", {\n  LOT_TYPES(v) {\n    LOT_TYPES = v;\n  },\n\n  ORGANISATION_TYPES(v) {\n    ORGANISATION_TYPES = v;\n  },\n\n  PROMOTION_TYPES(v) {\n    PROMOTION_TYPES = v;\n  },\n\n  REVENUE_TYPES(v) {\n    REVENUE_TYPES = v;\n  },\n\n  ROLES(v) {\n    ROLES = v;\n  },\n\n  STEPS(v) {\n    STEPS = v;\n  },\n\n  TASK_STATUS(v) {\n    TASK_STATUS = v;\n  },\n\n  DEFAULT_VALUE_FOR_ALL(v) {\n    DEFAULT_VALUE_FOR_ALL = v;\n  },\n\n  DEFAULT_MAIN_RESIDENCE_RULES(v) {\n    DEFAULT_MAIN_RESIDENCE_RULES = v;\n  },\n\n  DEFAULT_SECONDARY_RESIDENCE_RULES(v) {\n    DEFAULT_SECONDARY_RESIDENCE_RULES = v;\n  }\n\n}, 2);\nlet Borrowers, Contacts, InterestRates, LenderRules, Lenders, Loans, Lots, MortgageNotes, Offers, Organisations, PromotionLots, PromotionOptions, Promotions, Properties, Revenues, Tasks, Users;\nmodule.link(\"..\", {\n  Borrowers(v) {\n    Borrowers = v;\n  },\n\n  Contacts(v) {\n    Contacts = v;\n  },\n\n  InterestRates(v) {\n    InterestRates = v;\n  },\n\n  LenderRules(v) {\n    LenderRules = v;\n  },\n\n  Lenders(v) {\n    Lenders = v;\n  },\n\n  Loans(v) {\n    Loans = v;\n  },\n\n  Lots(v) {\n    Lots = v;\n  },\n\n  MortgageNotes(v) {\n    MortgageNotes = v;\n  },\n\n  Offers(v) {\n    Offers = v;\n  },\n\n  Organisations(v) {\n    Organisations = v;\n  },\n\n  PromotionLots(v) {\n    PromotionLots = v;\n  },\n\n  PromotionOptions(v) {\n    PromotionOptions = v;\n  },\n\n  Promotions(v) {\n    Promotions = v;\n  },\n\n  Properties(v) {\n    Properties = v;\n  },\n\n  Revenues(v) {\n    Revenues = v;\n  },\n\n  Tasks(v) {\n    Tasks = v;\n  },\n\n  Users(v) {\n    Users = v;\n  }\n\n}, 3);\nlet PROPERTY_CATEGORY;\nmodule.link(\"../properties/propertyConstants\", {\n  PROPERTY_CATEGORY(v) {\n    PROPERTY_CATEGORY = v;\n  }\n\n}, 4);\nlet Notifications;\nmodule.link(\"../notifications/index\", {\n  default(v) {\n    Notifications = v;\n  }\n\n}, 5);\nlet Activities;\nmodule.link(\"../activities/index\", {\n  default(v) {\n    Activities = v;\n  }\n\n}, 6);\nconst TEST_LASTNAME = 'TestLastName';\nconst TEST_FIRSTNAME = 'TestFirstName';\nconst TEST_PHONE = '0123456789';\n\nconst getRandomLoanName = () => `19-0${Math.floor(Math.random() * 899 + 100)}`;\n\nFactory.define('user', Users, {\n  roles: [ROLES.USER],\n  emails: () => [{\n    address: faker.internet.email(),\n    verified: false\n  }],\n  lastName: TEST_LASTNAME,\n  firstName: TEST_FIRSTNAME,\n  phoneNumbers: [TEST_PHONE]\n});\nFactory.define('dev', Users, {\n  roles: [ROLES.DEV],\n  emails: () => [{\n    address: faker.internet.email(),\n    verified: false\n  }],\n  lastName: TEST_LASTNAME,\n  firstName: TEST_FIRSTNAME,\n  phoneNumbers: [TEST_PHONE]\n});\nFactory.define('admin', Users, {\n  roles: [ROLES.ADMIN],\n  emails: () => [{\n    address: faker.internet.email(),\n    verified: false\n  }],\n  lastName: TEST_LASTNAME,\n  firstName: TEST_FIRSTNAME,\n  phoneNumbers: [TEST_PHONE]\n});\nFactory.define('adminEpotek', Users, {\n  roles: [ROLES.ADMIN],\n  emails: () => [{\n    address: 'dev@e-potek.ch',\n    verified: true\n  }],\n  lastName: 'e-Potek',\n  firstName: 'Dev',\n  phoneNumbers: [TEST_PHONE]\n});\nFactory.define('pro', Users, {\n  roles: [ROLES.PRO],\n  emails: () => [{\n    address: faker.internet.email(),\n    verified: false\n  }],\n  lastName: TEST_LASTNAME,\n  firstName: TEST_FIRSTNAME,\n  phoneNumbers: [TEST_PHONE]\n});\nFactory.define('borrower', Borrowers);\nFactory.define('task', Tasks, {\n  createdAt: () => new Date(),\n  status: TASK_STATUS.ACTIVE\n});\nFactory.define('loan', Loans, {\n  createdAt: () => new Date(),\n  borrowerIds: [],\n  documents: () => ({}),\n  step: STEPS.SOLVENCY,\n  name: () => {\n    // there is a 1/900% chance that 2 loan names collide,\n    // make sure it never happens instead\n    while (true) {\n      const name = getRandomLoanName();\n\n      if (!Loans.findOne({\n        name\n      })) {\n        return name;\n      }\n    }\n  },\n  emails: () => [],\n  propertyIds: []\n});\nFactory.define('property', Properties, {\n  value: 1000000,\n  category: PROPERTY_CATEGORY.USER\n});\nFactory.define('offer', Offers, {\n  userId: () => faker.random.uuid(),\n  createdAt: () => new Date(),\n  canton: 'GE',\n  conditions: ['Do something'],\n  maxAmount: 800000,\n  amortizationGoal: 0.65\n});\nFactory.define('promotion', Promotions, {\n  name: 'Test promotion',\n  type: PROMOTION_TYPES.CREDIT\n});\nFactory.define('promotionOption', PromotionOptions, {});\nFactory.define('promotionLot', PromotionLots, {});\nFactory.define('lot', Lots, {\n  name: 'test',\n  type: LOT_TYPES.PARKING_CAR,\n  value: 1000\n});\nFactory.define('task', Tasks, {});\nFactory.define('mortgageNote', MortgageNotes, {\n  value: 100000,\n  canton: 'GE'\n});\nFactory.define('organisation', Organisations, {\n  name: () => {\n    // Make sure organisation names don't collide\n    while (true) {\n      const name = faker.company.companyName();\n\n      if (!Organisations.findOne({\n        name\n      })) {\n        return name;\n      }\n    }\n  },\n  type: ORGANISATION_TYPES.BANK\n});\nFactory.define('lender', Lenders, {});\nFactory.define('interestRates', InterestRates, {});\nFactory.define('contact', Contacts, {\n  firstName: 'John',\n  lastName: 'Doe'\n});\nFactory.define('lenderRules', LenderRules, {\n  filter: {\n    and: []\n  },\n  order: 0\n});\nFactory.define('revenues', Revenues, {\n  amount: 1000,\n  type: REVENUE_TYPES.MORTGAGE\n});\nFactory.define('lenderRulesAll', LenderRules, (0, _objectSpread2.default)({}, DEFAULT_VALUE_FOR_ALL, {\n  order: 0,\n  filter: {\n    and: [true]\n  }\n}));\nFactory.define('lenderRulesMain', LenderRules, {\n  maxBorrowRatio: 0.8,\n  order: 0,\n  filter: {\n    and: DEFAULT_MAIN_RESIDENCE_RULES\n  }\n});\nFactory.define('lenderRulesSecondary', LenderRules, {\n  maxBorrowRatio: 0.7,\n  order: 0,\n  filter: {\n    and: DEFAULT_SECONDARY_RESIDENCE_RULES\n  }\n});\nFactory.define('notification', Notifications, {});\nFactory.define('activity', Activities, {});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"factoriesHelpers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/factories/factoriesHelpers.js                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet Factory;\nmodule.link(\"meteor/dburles:factory\", {\n  Factory(v) {\n    Factory = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nlet pick;\nmodule.link(\"lodash/pick\", {\n  default(v) {\n    pick = v;\n  }\n\n}, 2);\nlet omit;\nmodule.link(\"lodash/omit\", {\n  default(v) {\n    omit = v;\n  }\n\n}, 3);\nlet uniq;\nmodule.link(\"lodash/uniq\", {\n  default(v) {\n    uniq = v;\n  }\n\n}, 4);\nlet uniqBy;\nmodule.link(\"lodash/uniqBy\", {\n  default(v) {\n    uniqBy = v;\n  }\n\n}, 5);\nlet CollectionService;\nmodule.link(\"../helpers/CollectionService\", {\n  default(v) {\n    CollectionService = v;\n  }\n\n}, 6);\nlet COLLECTIONS;\nmodule.link(\"../constants\", {\n  COLLECTIONS(v) {\n    COLLECTIONS = v;\n  }\n\n}, 7);\nlet NOTIFICATIONS_COLLECTION;\nmodule.link(\"../notifications/notificationConstants\", {\n  NOTIFICATIONS_COLLECTION(v) {\n    NOTIFICATIONS_COLLECTION = v;\n  }\n\n}, 8);\nlet ACTIVITIES_COLLECTION;\nmodule.link(\"../activities/activityConstants\", {\n  ACTIVITIES_COLLECTION(v) {\n    ACTIVITIES_COLLECTION = v;\n  }\n\n}, 9);\n\nconst getSingularFactoryName = collection => {\n  switch (collection) {\n    case COLLECTIONS.LOANS_COLLECTION:\n      return 'loan';\n\n    case COLLECTIONS.BORROWERS_COLLECTION:\n      return 'borrower';\n\n    case COLLECTIONS.PROPERTIES_COLLECTION:\n      return 'property';\n\n    case COLLECTIONS.USERS_COLLECTION:\n      return 'user';\n\n    case COLLECTIONS.TASKS_COLLECTION:\n      return 'task';\n\n    case COLLECTIONS.OFFERS_COLLECTION:\n      return 'offer';\n\n    case COLLECTIONS.PROMOTIONS_COLLECTION:\n      return 'promotion';\n\n    case COLLECTIONS.PROMOTION_OPTIONS_COLLECTION:\n      return 'promotionOption';\n\n    case COLLECTIONS.PROMOTION_LOTS_COLLECTION:\n      return 'promotionLot';\n\n    case COLLECTIONS.LOTS_COLLECTION:\n      return 'lot';\n\n    case COLLECTIONS.MORTGAGE_NOTES_COLLECTION:\n      return 'mortgageNote';\n\n    case COLLECTIONS.ORGANISATIONS_COLLECTION:\n      return 'organisation';\n\n    case COLLECTIONS.LENDERS_COLLECTION:\n      return 'lender';\n\n    case COLLECTIONS.CONTACTS_COLLECTION:\n      return 'contact';\n\n    case NOTIFICATIONS_COLLECTION:\n      return 'notification';\n\n    case ACTIVITIES_COLLECTION:\n      return 'activity';\n\n    default:\n      throw new Error(`No singular factory name found for ${collection}, add it in the generator`);\n  }\n};\n\nconst arrayify = maybeArray => Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n\nconst findCollectionNameByLinkName = ({\n  collection,\n  linkName\n}) => Mongo.Collection.get(collection).__links[linkName].linkConfig.collection._name;\n\nconst findLinkKeys = ({\n  collection\n}) => {\n  const {\n    __links: linkNames = {}\n  } = Mongo.Collection.get(collection);\n  const links = Object.keys(linkNames);\n  return links;\n};\n\nconst insertDoc = ({\n  doc,\n  collection,\n  useFactories,\n  factory\n}) => {\n  let docExists = false;\n\n  if (doc._id) {\n    docExists = !!Mongo.Collection.get(collection).findOne(doc._id);\n  }\n\n  if (docExists) {\n    return doc;\n  }\n\n  if (useFactories && factory !== null) {\n    if (factory) {\n      return Factory.create(factory, doc);\n    }\n\n    try {\n      return Factory.create(collection, doc);\n    } catch (error) {\n      if (error.message && error.message === `Factory: There is no factory named ${collection}`) {\n        return Factory.create(getSingularFactoryName(collection), doc);\n      }\n\n      throw error;\n    }\n  }\n\n  const _id = Mongo.Collection.get(collection).insert(doc);\n\n  return Mongo.Collection.get(collection).findOne(_id);\n};\n\nconst generator = (scenario, {\n  useFactories = true\n} = {}) => {\n  const ids = {};\n  const docs = {};\n  const docsById = {};\n\n  const pushId = ({\n    id,\n    collection\n  }) => {\n    ids[collection] = ids[collection] ? [...ids[collection], id] : [id];\n    ids[collection] = uniq(ids[collection]);\n  };\n\n  const pushDoc = ({\n    doc,\n    collection\n  }) => {\n    docs[collection] = docs[collection] ? [...docs[collection], doc] : [doc];\n    docs[collection] = uniqBy(docs[collection], '_id');\n    docsById[collection] = docsById[collection] ? (0, _objectSpread2.default)({}, docsById[collection], {\n      [doc._id]: doc\n    }) : {\n      [doc._id]: doc\n    };\n  };\n\n  const createNestedObject = ({\n    doc,\n    collection\n  }) => {\n    const linkKeys = findLinkKeys({\n      doc,\n      collection\n    });\n    const docToInsert = omit(doc, [...linkKeys, '_factory', '$metadata']);\n    const insertedDoc = insertDoc({\n      collection,\n      doc: docToInsert,\n      useFactories,\n      factory: doc._factory\n    });\n    const {\n      _id: id\n    } = insertedDoc;\n    pushId({\n      id,\n      collection\n    });\n    pushDoc({\n      doc: insertedDoc,\n      collection\n    });\n    const linksToInsert = pick(doc, linkKeys);\n    Object.keys(linksToInsert).forEach(linkName => {\n      const linkCollection = findCollectionNameByLinkName({\n        collection,\n        linkName\n      });\n      const linkedDocs = arrayify(linksToInsert[linkName]);\n      linkedDocs.forEach(linkedDoc => {\n        const linkId = createNestedObject({\n          doc: linkedDoc,\n          collection: linkCollection,\n          parentId: id\n        });\n        const collectionService = new CollectionService(Mongo.Collection.get(collection));\n        collectionService.addLink({\n          id,\n          linkName,\n          linkId,\n          metadata: linkedDoc.$metadata\n        });\n      });\n    });\n    return id;\n  };\n\n  Object.keys(scenario).forEach(collection => {\n    const docsInCollection = arrayify(scenario[collection]);\n    docsInCollection.forEach(doc => createNestedObject({\n      doc,\n      collection\n    }));\n  });\n  return {\n    ids,\n    docs,\n    docsById\n  };\n};\n\nmodule.exportDefault(generator);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/factories/index.js                                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./factories\");\nmodule.link(\"./factoriesHelpers\", {\n  default: \"default\"\n}, 0);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"links\":{\"LinkInitializer.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/links/LinkInitializer.js                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n// Inversed links need to be defined after direct links, use this\n// class to manage that\n// Might become obsolete after this is fixed in grapher\n// https://github.com/cult-of-coders/grapher/issues/200#issuecomment-500803766\nclass LinkInitializer {\n  constructor() {\n    this.direct = [];\n    this.inversed = [];\n  }\n\n  directInit(fn) {\n    this.direct.push(fn);\n  }\n\n  inversedInit(fn) {\n    this.inversed.push(fn);\n  }\n\n  setLinks() {\n    this.direct.forEach(fn => fn());\n    this.inversed.forEach(fn => fn()); // Don't unnecessarily store these functions\n\n    delete this.direct;\n    delete this.inversed;\n  }\n\n}\n\nmodule.exportDefault(new LinkInitializer());\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/links/index.js                                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"../activities/links\");\nmodule.link(\"../borrowers/links\");\nmodule.link(\"../contacts/links\");\nmodule.link(\"../lenderRules/links\");\nmodule.link(\"../lenders/links\");\nmodule.link(\"../loans/links\");\nmodule.link(\"../lots/links\");\nmodule.link(\"../mortgageNotes/links\");\nmodule.link(\"../notifications/links\");\nmodule.link(\"../offers/links\");\nmodule.link(\"../organisations/links\");\nmodule.link(\"../promotionLots/links\");\nmodule.link(\"../promotionOptions/links\");\nmodule.link(\"../promotions/links\");\nmodule.link(\"../properties/links\");\nmodule.link(\"../revenues/links\");\nmodule.link(\"../tasks/links\");\nmodule.link(\"../users/links\");\nlet LinkInitializer;\nmodule.link(\"./LinkInitializer\", {\n  default(v) {\n    LinkInitializer = v;\n  }\n\n}, 0);\nLinkInitializer.setLinks();\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"reducers\":{\"addressReducer.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/reducers/addressReducer.js                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nconst addressReducer = {\n  address: {\n    body: {\n      address1: 1,\n      zipCode: 1,\n      city: 1\n    },\n\n    reduce(object) {\n      const {\n        address1,\n        zipCode,\n        city\n      } = object;\n      return address1 ? `${address1}, ${zipCode} ${city}` : 'Aucune addresse indiquée';\n    }\n\n  }\n};\nmodule.exportDefault(addressReducer);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"assigneeReducer.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/reducers/assigneeReducer.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet UserService;\nmodule.link(\"../users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 0);\n\nconst assigneeReducer = (body = {}, getUserId) => ({\n  assignee: {\n    body: (0, _objectSpread2.default)({\n      userId: 1,\n      userLinks: 1,\n      promotions: {\n        userLinks: 1\n      },\n      promotion: {\n        userLinks: 1\n      },\n      assignedEmployeeId: 1\n    }, body),\n\n    reduce(data) {\n      const {\n        userId,\n        userLinks,\n        promotion,\n        promotions,\n        assignedEmployeeId\n      } = data;\n      let userToFind = userId;\n      let users = userLinks;\n\n      if (assignedEmployeeId) {\n        return UserService.findOne({\n          _id: assignedEmployeeId\n        });\n      }\n\n      if (promotion && promotion.userLinks) {\n        users = promotion.userLinks;\n      }\n\n      if (promotions && promotions.length > 0) {\n        users = promotions[0].userLinks;\n      }\n\n      if (!userToFind && users && users.length > 0) {\n        userToFind = users[0]._id;\n      }\n\n      if (!userToFind && getUserId) {\n        userToFind = getUserId(data);\n      }\n\n      if (userToFind) {\n        const user = UserService.findOne({\n          _id: userToFind\n        });\n\n        if (user) {\n          return UserService.findOne({\n            _id: user.assignedEmployeeId\n          });\n        }\n      }\n\n      return null;\n    }\n\n  }\n});\n\nmodule.exportDefault(assigneeReducer);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"registerReducers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/reducers/registerReducers.js                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"../borrowers/reducers\");\nmodule.link(\"../contacts/reducers\");\nmodule.link(\"../loans/reducers\");\nmodule.link(\"../lots/reducers\");\nmodule.link(\"../notifications/reducers\");\nmodule.link(\"../offers/reducers\");\nmodule.link(\"../organisations/reducers\");\nmodule.link(\"../promotionLots/reducers\");\nmodule.link(\"../promotionOptions/reducers\");\nmodule.link(\"../promotions/reducers\");\nmodule.link(\"../properties/reducers\");\nmodule.link(\"../users/reducers\");\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"tasksReducer.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/reducers/tasksReducer.js                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet TaskService;\nmodule.link(\"../tasks/server/TaskService\", {\n  default(v) {\n    TaskService = v;\n  }\n\n}, 0);\nconst tasksReducer = {\n  tasks: {\n    body: {\n      _id: 1\n    },\n\n    reduce({\n      _id: docId\n    }) {\n      return TaskService.getTasksForDoc(docId);\n    }\n\n  }\n};\nmodule.exportDefault(tasksReducer);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"caches.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/server/caches.js                                                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet migrate;\nmodule.link(\"meteor/herteby:denormalize\", {\n  migrate(v) {\n    migrate = v;\n  }\n\n}, 1);\nlet Organisations, LenderRules, Properties, Loans;\nmodule.link(\"..\", {\n  Organisations(v) {\n    Organisations = v;\n  },\n\n  LenderRules(v) {\n    LenderRules = v;\n  },\n\n  Properties(v) {\n    Properties = v;\n  },\n\n  Loans(v) {\n    Loans = v;\n  }\n\n}, 2);\nOrganisations.cacheCount({\n  collection: LenderRules,\n  referenceField: 'organisationLink._id',\n  cacheField: 'lenderRulesCount'\n});\nProperties.cacheCount({\n  collection: Loans,\n  referenceField: 'propertyIds',\n  cacheField: 'loanCount'\n});\nMeteor.startup(() => {\n  migrate('properties', 'loanCount', {\n    loanCount: {\n      $exists: false\n    }\n  }); // migrate('revenues', 'loanCache', { loanCache: { $exists: false } });\n  //\n  // Old migrations\n  //\n  // migrate('users', 'assignedEmployeeCache', {\n  //   $or: [\n  //     { 'assignedEmployeeCache.lastName': { $exists: false } },\n  //     { 'assignedEmployeeCache.firstName': { $exists: false } },\n  //   ],\n  // });\n  // migrate('loans', 'userCache', { 'userCache._id': { $exists: false } });\n  // migrate('loans', 'lendersCache', { lendersCache: { $exists: false } });\n  // migrate('loans', 'tasksCache', { tasksCache: { $exists: false } });\n  // migrate('offers', 'lenderCache', { lenderCache: { $exists: false } });\n  // migrate('lenderRules', 'organisationCache', {\n  //   'organisationCache._id': { $exists: false },\n  // });\n  // migrate('organisations', 'lenderRulesCount', {\n  //   lenderRulesCount: { $exists: false },\n  // });\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"grapher-live.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/server/grapher-live.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nconst isDev = false; // process.env.NODE_ENV === 'development';\n\nMeteor.startup(() => {\n  const enableGrapherLive = false;\n\n  if (isDev && enableGrapherLive) {\n    const {\n      initialize\n    } = require('meteor/cultofcoders:grapher-live');\n\n    initialize(); // exposes a method \"grapher_live\", used by the React Component\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"hooks.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/server/hooks.js                                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"../activities/server/hooks\");\nmodule.link(\"../borrowers/server/hooks\");\nmodule.link(\"../contacts/server/hooks\");\nmodule.link(\"../loans/server/hooks\");\nmodule.link(\"../mortgageNotes/server/hooks\");\nmodule.link(\"../offers/server/hooks\");\nmodule.link(\"../organisations/server/hooks\");\nmodule.link(\"../promotionOptions/server/hooks\");\nmodule.link(\"../promotions/server/hooks\");\nmodule.link(\"../properties/server/hooks\");\nmodule.link(\"../revenues/server/hooks\");\nmodule.link(\"../tasks/server/hooks\");\nmodule.link(\"../users/server/hooks\");\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/server/index.js                                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  Services: () => Services\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nmodule.link(\"../initialization\");\nmodule.link(\"../../fixtures/server/fixtureMethods\");\nmodule.link(\"../users/server/accounts-server-config\");\nmodule.link(\"../methods/server\");\nmodule.link(\"../methods\");\nmodule.link(\"../factories\");\nmodule.link(\"../files/server/methods\");\nmodule.link(\"../files/server/meteor-slingshot-server\");\nmodule.link(\"../email/server\");\nmodule.link(\"../events/server/registerServerListeners\");\nmodule.link(\"../links\");\nmodule.link(\"../reducers/registerReducers\");\nmodule.link(\"./grapher-live\");\nmodule.link(\"./hooks\");\nmodule.link(\"../queries/server\");\nmodule.link(\"./reducers\");\nmodule.link(\"./mongoIndexes\");\nmodule.link(\"./caches\");\nlet COLLECTIONS;\nmodule.link(\"../constants\", {\n  COLLECTIONS(v) {\n    COLLECTIONS = v;\n  }\n\n}, 1);\nlet BorrowerService;\nmodule.link(\"../borrowers/server/BorrowerService\", {\n  default(v) {\n    BorrowerService = v;\n  }\n\n}, 2);\nlet ContactService;\nmodule.link(\"../contacts/server/ContactService\", {\n  default(v) {\n    ContactService = v;\n  }\n\n}, 3);\nlet InterestRatesService;\nmodule.link(\"../interestRates/server/InterestRatesService\", {\n  default(v) {\n    InterestRatesService = v;\n  }\n\n}, 4);\nlet Irs10yService;\nmodule.link(\"../irs10y/server/Irs10yService\", {\n  default(v) {\n    Irs10yService = v;\n  }\n\n}, 5);\nlet LenderService;\nmodule.link(\"../lenders/server/LenderService\", {\n  default(v) {\n    LenderService = v;\n  }\n\n}, 6);\nlet LoanService;\nmodule.link(\"../loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 7);\nlet LotService;\nmodule.link(\"../lots/server/LotService\", {\n  default(v) {\n    LotService = v;\n  }\n\n}, 8);\nlet MortgageNoteService;\nmodule.link(\"../mortgageNotes/server/MortgageNoteService\", {\n  default(v) {\n    MortgageNoteService = v;\n  }\n\n}, 9);\nlet OfferService;\nmodule.link(\"../offers/server/OfferService\", {\n  default(v) {\n    OfferService = v;\n  }\n\n}, 10);\nlet PromotionLotService;\nmodule.link(\"../promotionLots/server/PromotionLotService\", {\n  default(v) {\n    PromotionLotService = v;\n  }\n\n}, 11);\nlet PromotionOptionService;\nmodule.link(\"../promotionOptions/server/PromotionOptionService\", {\n  default(v) {\n    PromotionOptionService = v;\n  }\n\n}, 12);\nlet PromotionService;\nmodule.link(\"../promotions/server/PromotionService\", {\n  default(v) {\n    PromotionService = v;\n  }\n\n}, 13);\nlet PropertyService;\nmodule.link(\"../properties/server/PropertyService\", {\n  default(v) {\n    PropertyService = v;\n  }\n\n}, 14);\nlet TaskService;\nmodule.link(\"../tasks/server/TaskService\", {\n  default(v) {\n    TaskService = v;\n  }\n\n}, 15);\nlet UserService;\nmodule.link(\"../users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 16);\nlet SlackService;\nmodule.link(\"../slack/server/SlackService\", {\n  default(v) {\n    SlackService = v;\n  }\n\n}, 17);\nlet LenderRulesService;\nmodule.link(\"../lenderRules/server/LenderRulesService\", {\n  default(v) {\n    LenderRulesService = v;\n  }\n\n}, 18);\nlet RevenueService;\nmodule.link(\"../revenues/server/RevenueService\", {\n  default(v) {\n    RevenueService = v;\n  }\n\n}, 19);\nmodule.link(\"../liveSync\");\nprocess.on('uncaughtException', error => {\n  if (!Meteor.isProduction) {\n    console.log('uncaughtException error', JSON.stringify(error, null, 2));\n  }\n\n  SlackService.sendError({\n    error,\n    additionalData: ['Server uncaughtException']\n  });\n  process.exit(1);\n});\nprocess.on('unhandledRejection', error => {\n  if (!Meteor.isProduction) {\n    console.log('unhandledRejection error', JSON.stringify(error, null, 2));\n  }\n\n  SlackService.sendError({\n    error,\n    additionalData: ['Server unhandledRejection']\n  });\n});\nconst Services = {\n  [COLLECTIONS.LOANS_COLLECTION]: LoanService,\n  [COLLECTIONS.PROPERTIES_COLLECTION]: PropertyService,\n  [COLLECTIONS.BORROWERS_COLLECTION]: BorrowerService,\n  [COLLECTIONS.LOTS_COLLECTION]: LotService,\n  [COLLECTIONS.OFFERS_COLLECTION]: OfferService,\n  [COLLECTIONS.PROMOTION_LOTS_COLLECTION]: PromotionLotService,\n  [COLLECTIONS.PROMOTIONS_COLLECTION]: PromotionService,\n  [COLLECTIONS.PROMOTION_OPTIONS_COLLECTION]: PromotionOptionService,\n  [COLLECTIONS.USERS_COLLECTION]: UserService,\n  [COLLECTIONS.TASKS_COLLECTION]: TaskService,\n  [COLLECTIONS.INTEREST_RATES_COLLECTION]: InterestRatesService,\n  [COLLECTIONS.IRS10Y_COLLECTION]: Irs10yService,\n  [COLLECTIONS.MORTGAGE_NOTES_COLLECTION]: MortgageNoteService,\n  [COLLECTIONS.CONTACTS_COLLECTION]: ContactService,\n  [COLLECTIONS.LENDERS_COLLECTION]: LenderService,\n  [COLLECTIONS.LENDER_RULES_COLLECTION]: LenderRulesService,\n  [COLLECTIONS.REVENUES_COLLECTION]: RevenueService\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"mongoIndexes.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/server/mongoIndexes.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Loans, Borrowers, Offers, Properties, Tasks, Users;\nmodule.link(\"..\", {\n  Loans(v) {\n    Loans = v;\n  },\n\n  Borrowers(v) {\n    Borrowers = v;\n  },\n\n  Offers(v) {\n    Offers = v;\n  },\n\n  Properties(v) {\n    Properties = v;\n  },\n\n  Tasks(v) {\n    Tasks = v;\n  },\n\n  Users(v) {\n    Users = v;\n  }\n\n}, 0);\n\nLoans._ensureIndex({\n  userId: 1\n});\n\nBorrowers._ensureIndex({\n  userId: 1\n});\n\nOffers._ensureIndex({\n  loanId: 1\n});\n\nProperties._ensureIndex({\n  userId: 1\n});\n\nTasks._ensureIndex({\n  docId: 1\n});\n\nUsers._ensureIndex({\n  referredByUserLink: 1\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"reducers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/server/reducers.js                                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"../borrowers/server/serverReducers\");\nmodule.link(\"../contacts/server/serverReducers\");\nmodule.link(\"../loans/server/serverReducers\");\nmodule.link(\"../lots/server/serverReducers\");\nmodule.link(\"../offers/server/serverReducers\");\nmodule.link(\"../organisations/server/serverReducers\");\nmodule.link(\"../promotionLots/server/serverReducers\");\nmodule.link(\"../promotionOptions/server/serverReducers\");\nmodule.link(\"../promotions/server/serverReducers\");\nmodule.link(\"../properties/server/serverReducers\");\nmodule.link(\"../tasks/server/serverReducers\");\nmodule.link(\"../users/server/serverReducers\");\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"api.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/api.js                                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./initialization\");\nmodule.link(\"./files/meteor-slingshot\");\nmodule.link(\"./links\");\nmodule.link(\"./reducers/registerReducers\");\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"constants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/constants.js                                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  SUCCESS: () => SUCCESS,\n  WARNING: () => WARNING,\n  ERROR: () => ERROR,\n  COLLECTIONS: () => COLLECTIONS\n});\nlet BORROWERS_COLLECTION;\nmodule.link(\"./borrowers/borrowerConstants\", {\n  BORROWERS_COLLECTION(v) {\n    BORROWERS_COLLECTION = v;\n  }\n\n}, 0);\nlet LOANS_COLLECTION;\nmodule.link(\"./loans/loanConstants\", {\n  LOANS_COLLECTION(v) {\n    LOANS_COLLECTION = v;\n  }\n\n}, 1);\nlet LOTS_COLLECTION;\nmodule.link(\"./lots/lotConstants\", {\n  LOTS_COLLECTION(v) {\n    LOTS_COLLECTION = v;\n  }\n\n}, 2);\nlet OFFERS_COLLECTION;\nmodule.link(\"./offers/offerConstants\", {\n  OFFERS_COLLECTION(v) {\n    OFFERS_COLLECTION = v;\n  }\n\n}, 3);\nlet ORGANISATIONS_COLLECTION;\nmodule.link(\"./organisations/organisationConstants\", {\n  ORGANISATIONS_COLLECTION(v) {\n    ORGANISATIONS_COLLECTION = v;\n  }\n\n}, 4);\nlet PROMOTION_LOTS_COLLECTION;\nmodule.link(\"./promotionLots/promotionLotConstants\", {\n  PROMOTION_LOTS_COLLECTION(v) {\n    PROMOTION_LOTS_COLLECTION = v;\n  }\n\n}, 5);\nlet PROMOTION_OPTIONS_COLLECTION;\nmodule.link(\"./promotionOptions/promotionOptionConstants\", {\n  PROMOTION_OPTIONS_COLLECTION(v) {\n    PROMOTION_OPTIONS_COLLECTION = v;\n  }\n\n}, 6);\nlet PROMOTIONS_COLLECTION;\nmodule.link(\"./promotions/promotionConstants\", {\n  PROMOTIONS_COLLECTION(v) {\n    PROMOTIONS_COLLECTION = v;\n  }\n\n}, 7);\nlet PROPERTIES_COLLECTION;\nmodule.link(\"./properties/propertyConstants\", {\n  PROPERTIES_COLLECTION(v) {\n    PROPERTIES_COLLECTION = v;\n  }\n\n}, 8);\nlet TASKS_COLLECTION;\nmodule.link(\"./tasks/taskConstants\", {\n  TASKS_COLLECTION(v) {\n    TASKS_COLLECTION = v;\n  }\n\n}, 9);\nlet USERS_COLLECTION;\nmodule.link(\"./users/userConstants\", {\n  USERS_COLLECTION(v) {\n    USERS_COLLECTION = v;\n  }\n\n}, 10);\nlet INTEREST_RATES_COLLECTION;\nmodule.link(\"./interestRates/interestRatesConstants\", {\n  INTEREST_RATES_COLLECTION(v) {\n    INTEREST_RATES_COLLECTION = v;\n  }\n\n}, 11);\nlet IRS10Y_COLLECTION;\nmodule.link(\"./irs10y/irs10yConstants\", {\n  IRS10Y_COLLECTION(v) {\n    IRS10Y_COLLECTION = v;\n  }\n\n}, 12);\nlet MORTGAGE_NOTES_COLLECTION;\nmodule.link(\"./mortgageNotes/mortgageNoteConstants\", {\n  MORTGAGE_NOTES_COLLECTION(v) {\n    MORTGAGE_NOTES_COLLECTION = v;\n  }\n\n}, 13);\nlet CONTACTS_COLLECTION;\nmodule.link(\"./contacts/contactsConstants\", {\n  CONTACTS_COLLECTION(v) {\n    CONTACTS_COLLECTION = v;\n  }\n\n}, 14);\nlet LENDERS_COLLECTION;\nmodule.link(\"./lenders/lenderConstants\", {\n  LENDERS_COLLECTION(v) {\n    LENDERS_COLLECTION = v;\n  }\n\n}, 15);\nlet LENDER_RULES_COLLECTION;\nmodule.link(\"./lenderRules/lenderRulesConstants\", {\n  LENDER_RULES_COLLECTION(v) {\n    LENDER_RULES_COLLECTION = v;\n  }\n\n}, 16);\nlet REVENUES_COLLECTION;\nmodule.link(\"./revenues/revenueConstants\", {\n  REVENUES_COLLECTION(v) {\n    REVENUES_COLLECTION = v;\n  }\n\n}, 17);\nmodule.link(\"./borrowers/borrowerConstants\", {\n  \"*\": \"*\"\n}, 18);\nmodule.link(\"./contacts/contactsConstants\", {\n  \"*\": \"*\"\n}, 19);\nmodule.link(\"./email/emailConstants\", {\n  \"*\": \"*\"\n}, 20);\nmodule.link(\"./files/fileConstants\", {\n  \"*\": \"*\"\n}, 21);\nmodule.link(\"./helpers/sharedSchemaConstants\", {\n  \"*\": \"*\"\n}, 22);\nmodule.link(\"./interestRates/interestRatesConstants\", {\n  \"*\": \"*\"\n}, 23);\nmodule.link(\"./irs10y/irs10yConstants\", {\n  \"*\": \"*\"\n}, 24);\nmodule.link(\"./lenderRules/lenderRulesConstants\", {\n  \"*\": \"*\"\n}, 25);\nmodule.link(\"./lenders/lenderConstants\", {\n  \"*\": \"*\"\n}, 26);\nmodule.link(\"./loans/loanConstants\", {\n  \"*\": \"*\"\n}, 27);\nmodule.link(\"./lots/lotConstants\", {\n  \"*\": \"*\"\n}, 28);\nmodule.link(\"./mortgageNotes/mortgageNoteConstants\", {\n  \"*\": \"*\"\n}, 29);\nmodule.link(\"./offers/offerConstants\", {\n  \"*\": \"*\"\n}, 30);\nmodule.link(\"./organisations/organisationConstants\", {\n  \"*\": \"*\"\n}, 31);\nmodule.link(\"./pdf/pdfConstants\", {\n  \"*\": \"*\"\n}, 32);\nmodule.link(\"./promotionLots/promotionLotConstants\", {\n  \"*\": \"*\"\n}, 33);\nmodule.link(\"./promotionOptions/promotionOptionConstants\", {\n  \"*\": \"*\"\n}, 34);\nmodule.link(\"./promotions/promotionConstants\", {\n  \"*\": \"*\"\n}, 35);\nmodule.link(\"./properties/propertyConstants\", {\n  \"*\": \"*\"\n}, 36);\nmodule.link(\"./revenues/revenueConstants\", {\n  \"*\": \"*\"\n}, 37);\nmodule.link(\"./security/constants\", {\n  \"*\": \"*\"\n}, 38);\nmodule.link(\"./tasks/taskConstants\", {\n  \"*\": \"*\"\n}, 39);\nmodule.link(\"./updateWatchers/updateWatcherConstants\", {\n  \"*\": \"*\"\n}, 40);\nmodule.link(\"./users/userConstants\", {\n  \"*\": \"*\"\n}, 41);\nconst SUCCESS = 'SUCCESS';\nconst WARNING = 'WARNING';\nconst ERROR = 'ERROR';\nconst COLLECTIONS = {\n  LOANS_COLLECTION,\n  BORROWERS_COLLECTION,\n  PROPERTIES_COLLECTION,\n  PROMOTIONS_COLLECTION,\n  LOTS_COLLECTION,\n  PROMOTION_OPTIONS_COLLECTION,\n  PROMOTION_LOTS_COLLECTION,\n  TASKS_COLLECTION,\n  OFFERS_COLLECTION,\n  ORGANISATIONS_COLLECTION,\n  USERS_COLLECTION,\n  INTEREST_RATES_COLLECTION,\n  IRS10Y_COLLECTION,\n  MORTGAGE_NOTES_COLLECTION,\n  CONTACTS_COLLECTION,\n  LENDERS_COLLECTION,\n  LENDER_RULES_COLLECTION,\n  REVENUES_COLLECTION\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"fragments.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/fragments.js                                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  activity: () => activity,\n  baseBorrower: () => baseBorrower,\n  loanBorrower: () => loanBorrower,\n  adminBorrower: () => adminBorrower,\n  contact: () => contact,\n  interestRates: () => interestRates,\n  currentInterestRates: () => currentInterestRates,\n  irs10y: () => irs10y,\n  lender: () => lender,\n  adminLender: () => adminLender,\n  lenderRules: () => lenderRules,\n  loan: () => loan,\n  loanBase: () => loanBase,\n  userLoan: () => userLoan,\n  adminLoan: () => adminLoan,\n  adminLoans: () => adminLoans,\n  proLoans: () => proLoans,\n  mortgageNote: () => mortgageNote,\n  notification: () => notification,\n  fullOffer: () => fullOffer,\n  baseOrganisation: () => baseOrganisation,\n  fullOrganisation: () => fullOrganisation,\n  userOrganisation: () => userOrganisation,\n  proPromotionLot: () => proPromotionLot,\n  appPromotionLot: () => appPromotionLot,\n  fullPromotionOption: () => fullPromotionOption,\n  proPromotionOption: () => proPromotionOption,\n  appPromotionOption: () => appPromotionOption,\n  loanPromotionOption: () => loanPromotionOption,\n  basePromotion: () => basePromotion,\n  proPromotion: () => proPromotion,\n  proPromotions: () => proPromotions,\n  adminPromotions: () => adminPromotions,\n  searchPromotions: () => searchPromotions,\n  propertySummary: () => propertySummary,\n  fullProperty: () => fullProperty,\n  adminProperty: () => adminProperty,\n  promotionProperty: () => promotionProperty,\n  userProperty: () => userProperty,\n  proPropertySummary: () => proPropertySummary,\n  proProperty: () => proProperty,\n  apiProperty: () => apiProperty,\n  baseTask: () => baseTask,\n  task: () => task,\n  simpleUser: () => simpleUser,\n  organisationUser: () => organisationUser,\n  fullUser: () => fullUser,\n  adminUser: () => adminUser,\n  appUser: () => appUser,\n  proUser: () => proUser,\n  revenue: () => revenue\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet INTEREST_RATES;\nmodule.link(\"./constants\", {\n  INTEREST_RATES(v) {\n    INTEREST_RATES = v;\n  }\n\n}, 1);\n\nconst activity = () => ({\n  createdAt: 1,\n  createdBy: 1,\n  date: 1,\n  description: 1,\n  loan: {\n    name: 1\n  },\n  secondaryType: 1,\n  shouldNotify: 1,\n  title: 1,\n  type: 1,\n  updatedAt: 1\n});\n\nconst baseBorrower = () => ({\n  createdAt: 1,\n  firstName: 1,\n  lastName: 1,\n  name: 1,\n  updatedAt: 1,\n  userId: 1\n});\n\nconst loanBorrower = ({\n  withSort\n} = {}) => (0, _objectSpread2.default)({}, baseBorrower(), {\n  additionalDocuments: 1,\n  address1: 1,\n  address2: 1,\n  adminValidation: 1,\n  age: 1,\n  bank3A: 1,\n  bankFortune: 1,\n  birthDate: 1,\n  birthPlace: 1,\n  bonus2015: 1,\n  bonus2016: 1,\n  bonus2017: 1,\n  bonus2018: 1,\n  bonus2019: 1,\n  bonusExists: 1,\n  canton: 1,\n  childrenCount: 1,\n  citizenship: 1,\n  city: 1,\n  civilStatus: 1,\n  company: 1,\n  documents: 1,\n  expenses: 1,\n  gender: 1,\n  hasOwnCompany: 1,\n  insurance2: 1,\n  insurance3A: 1,\n  insurance3B: 1,\n  isSwiss: 1,\n  isUSPerson: 1,\n  loans: {\n    name: 1\n  },\n  mortgageNotes: mortgageNote(),\n  netSalary: 1,\n  otherFortune: 1,\n  otherIncome: 1,\n  ownCompanies: 1,\n  personalBank: 1,\n  realEstate: 1,\n  residencyPermit: 1,\n  salary: 1,\n  sameAddress: 1,\n  step: 1,\n  thirdPartyFortune: 1,\n  worksForOwnCompany: 1,\n  zipCode: 1\n}, withSort ? {\n  $options: {\n    sort: {\n      createdAt: 1\n    }\n  }\n} : {});\n\nconst adminBorrower = () => (0, _objectSpread2.default)({}, loanBorrower(), {\n  loans: loanBase(),\n  user: appUser()\n});\n\nconst contact = () => ({\n  address: 1,\n  address1: 1,\n  address2: 1,\n  canton: 1,\n  city: 1,\n  email: 1,\n  emails: 1,\n  firstName: 1,\n  lastName: 1,\n  name: 1,\n  organisations: {\n    name: 1,\n    address: 1\n  },\n  phoneNumber: 1,\n  phoneNumbers: 1,\n  zipCode: 1,\n  offers: {\n    _id: 1\n  }\n});\n\n// //\n// // InterestRate fragments\n// //\nconst singleInterestRate = type => ({\n  [type]: {\n    rateLow: 1,\n    rateHigh: 1,\n    trend: 1\n  }\n});\n\nconst rates = Object.values(INTEREST_RATES).reduce((interestRates, type) => (0, _objectSpread2.default)({}, interestRates, singleInterestRate(type)), {});\n\nconst interestRates = () => (0, _objectSpread2.default)({}, rates, {\n  createdAt: 1,\n  updatedAt: 1,\n  date: 1\n});\n\nconst currentInterestRates = () => (0, _objectSpread2.default)({}, rates, {\n  date: 1\n});\n\nconst irs10y = () => ({\n  date: 1,\n  rate: 1\n});\n\nconst lender = () => ({\n  contact: contact(),\n  loan: {\n    _id: 1\n  },\n  offers: fullOffer(),\n  organisation: {\n    address: 1,\n    address1: 1,\n    address2: 1,\n    canton: 1,\n    city: 1,\n    contacts: contact(),\n    logo: 1,\n    name: 1,\n    type: 1,\n    zipCode: 1\n  }\n});\n\nconst adminLender = () => (0, _objectSpread2.default)({}, lender(), {\n  status: 1,\n  adminNote: 1\n});\n\nconst lenderRules = () => ({\n  adminComments: 1,\n  allowPledge: 1,\n  amortizationGoal: 1,\n  amortizationYears: 1,\n  bonusAlgorithm: 1,\n  bonusConsideration: 1,\n  bonusHistoryToConsider: 1,\n  companyIncomeConsideration: 1,\n  companyIncomeHistoryToConsider: 1,\n  createdAt: 1,\n  dividendsConsideration: 1,\n  dividendsHistoryToConsider: 1,\n  expensesSubtractFromIncome: 1,\n  filter: 1,\n  fortuneReturnsRatio: 1,\n  incomeConsiderationType: 1,\n  investmentIncomeConsideration: 1,\n  maxBorrowRatio: 1,\n  maxBorrowRatioWithPledge: 1,\n  maxIncomeRatio: 1,\n  maxIncomeRatioTight: 1,\n  minCash: 1,\n  name: 1,\n  order: 1,\n  organisation: {\n    name: 1\n  },\n  pdfComments: 1,\n  pensionIncomeConsideration: 1,\n  realEstateIncomeAlgorithm: 1,\n  realEstateIncomeConsideration: 1,\n  realEstateIncomeConsiderationType: 1,\n  theoreticalInterestRate: 1,\n  theoreticalInterestRate2ndRank: 1,\n  theoreticalMaintenanceRate: 1,\n  updatedAt: 1\n});\n\nconst loan = () => ({\n  additionalDocuments: 1,\n  applicationType: 1,\n  anonymous: 1,\n  borrowerIds: 1,\n  borrowers: {\n    firstName: 1,\n    lastName: 1,\n    name: 1\n  },\n  canton: 1,\n  createdAt: 1,\n  currentOwner: 1,\n  customName: 1,\n  enableOffers: 1,\n  futureOwner: 1,\n  hasProProperty: 1,\n  hasPromotion: 1,\n  name: 1,\n  otherOwner: 1,\n  previousLender: 1,\n  previousLoanTranches: 1,\n  promotions: {\n    address: 1,\n    contacts: 1,\n    lenderOrganisationLink: 1,\n    name: 1,\n    type: 1,\n    users: {\n      name: 1,\n      email: 1,\n      phoneNumber: 1\n    }\n  },\n  properties: {\n    totalValue: 1,\n    address1: 1\n  },\n  propertyIds: 1,\n  purchaseType: 1,\n  residenceType: 1,\n  selectedStructure: 1,\n  status: 1,\n  step: 1,\n  structure: 1,\n  structures: {\n    amortization: 1,\n    amortizationType: 1,\n    description: 1,\n    disabled: 1,\n    id: 1,\n    loanTranches: 1,\n    mortgageNoteIds: 1,\n    name: 1,\n    notaryFees: 1,\n    offerId: 1,\n    ownFunds: 1,\n    promotionOptionId: 1,\n    propertyId: 1,\n    propertyValue: 1,\n    propertyWork: 1,\n    sortOffersBy: 1,\n    wantedLoan: 1\n  },\n  updatedAt: 1,\n  userId: 1,\n  verificationStatus: 1,\n  shareSolvency: 1,\n  simpleBorrowersForm: 1\n});\n\nconst loanBase = () => (0, _objectSpread2.default)({}, loan(), {\n  promotionOptions: loanPromotionOption()\n});\n\nconst userPropertyValue = {\n  borrowRatio: 1,\n  propertyValue: 1\n};\nconst adminPropertyValue = (0, _objectSpread2.default)({}, userPropertyValue, {\n  organisationName: 1\n});\nconst userMaxPropertyValue = {\n  main: {\n    min: userPropertyValue,\n    max: userPropertyValue\n  },\n  second: {\n    min: userPropertyValue,\n    max: userPropertyValue\n  },\n  canton: 1,\n  date: 1,\n  borrowerHash: 1\n};\nconst adminMaxPropertyValue = {\n  main: {\n    min: adminPropertyValue,\n    max: adminPropertyValue\n  },\n  second: {\n    min: adminPropertyValue,\n    max: adminPropertyValue\n  },\n  canton: 1,\n  date: 1,\n  borrowerHash: 1\n};\n\nconst userLoan = ({\n  withSort,\n  withFilteredPromotions\n} = {}) => (0, _objectSpread2.default)({}, loanBase(), {\n  adminValidation: 1,\n  borrowers: loanBorrower({\n    withSort\n  }),\n  contacts: 1,\n  displayWelcomeScreen: 1,\n  documents: 1,\n  offers: 1,\n  properties: userProperty({\n    withSort\n  }),\n  user: appUser(),\n  userFormsEnabled: 1,\n  maxPropertyValue: userMaxPropertyValue\n}, withFilteredPromotions ? {\n  promotions: {\n    address: 1,\n    contacts: 1,\n    documents: {\n      promotionImage: 1\n    },\n    lenderOrganisationLink: 1,\n    name: 1,\n    status: 1,\n    type: 1,\n    canton: 1,\n    users: {\n      _id: 1,\n      name: 1,\n      email: 1,\n      phoneNumber: 1,\n      organisations: {\n        users: {\n          title: 1\n        }\n      }\n    },\n    loans: {\n      _id: 1,\n\n      $filter({\n        filters,\n        params: {\n          loanId\n        }\n      }) {\n        filters.userId = Meteor.userId();\n        filters._id = loanId;\n      }\n\n    }\n  }\n} : {});\n\nconst adminLoan = ({\n  withSort\n} = {}) => (0, _objectSpread2.default)({}, userLoan({\n  withSort\n}), {\n  adminNote: 1,\n  category: 1,\n  lenders: adminLender(),\n  maxPropertyValue: adminMaxPropertyValue,\n  nextDueTask: 1,\n  properties: adminProperty({\n    withSort\n  }),\n  revenues: revenue(),\n  status: 1,\n  tasksCache: {\n    createdAt: 1,\n    dueAt: 1,\n    status: 1,\n    title: 1,\n    isPrivate: 1,\n    assigneeLink: 1\n  },\n  user: adminUser(),\n  financedPromotion: {\n    name: 1\n  },\n  financedPromotionLink: 1\n});\n\nconst adminLoans = () => (0, _objectSpread2.default)({}, loanBase(), {\n  borrowers: {\n    name: 1\n  },\n  category: 1,\n  properties: {\n    totalValue: 1,\n    address1: 1\n  },\n  status: 1,\n  user: {\n    assignedEmployee: {\n      email: 1\n    },\n    name: 1\n  }\n});\n\nconst proLoans = () => ({\n  anonymous: 1,\n  createdAt: 1,\n  name: 1,\n  status: 1,\n  promotions: {\n    name: 1,\n    users: {\n      _id: 1\n    },\n    status: 1,\n    lenderOrganisationLink: 1\n  },\n  promotionLinks: 1,\n  promotionOptions: {\n    name: 1,\n    status: 1,\n    promotionLots: {\n      attributedTo: {\n        user: {\n          _id: 1\n        }\n      }\n    },\n    solvency: 1,\n    value: 1\n  },\n  loanProgress: 1,\n  user: {\n    name: 1,\n    phoneNumbers: 1,\n    email: 1,\n    referredByUser: {\n      name: 1,\n      organisations: {\n        name: 1\n      }\n    },\n    referredByOrganisation: {\n      name: 1\n    }\n  },\n  hasPromotion: 1,\n  hasProProperty: 1,\n  maxPropertyValue: userMaxPropertyValue,\n  properties: {\n    address1: 1,\n    category: 1,\n    users: {\n      _id: 1\n    },\n    totalValue: 1\n  },\n  referralId: 1,\n  residenceType: 1,\n  shareSolvency: 1,\n  structure: 1\n});\n\nconst mortgageNote = () => ({\n  canton: 1,\n  category: 1,\n  rank: 1,\n  type: 1,\n  value: 1\n});\n\nconst notification = () => ({\n  activity: activity(),\n  createdAt: 1,\n  readAt: 1,\n  recipients: {\n    firstName: 1,\n    lastName: 1,\n    name: 1\n  },\n  relatedDoc: 1,\n  task: task(),\n  title: 1,\n  revenue: revenue(),\n  updatedAt: 1\n});\n\nconst fullOffer = () => (0, _objectSpread2.default)({\n  amortizationGoal: 1,\n  amortizationYears: 1,\n  conditions: 1,\n  epotekFees: 1,\n  feedback: 1\n}, Object.values(INTEREST_RATES).reduce((obj, rate) => (0, _objectSpread2.default)({}, obj, {\n  [rate]: 1\n}), {}), {\n  fees: 1,\n  lender: {\n    loan: {\n      status: 1,\n      name: 1,\n      user: {\n        name: 1,\n        assignedEmployee: {\n          email: 1,\n          name: 1,\n          firstName: 1\n        }\n      },\n      borrowers: {\n        name: 1\n      }\n    },\n    contact: {\n      name: 1,\n      email: 1\n    },\n    organisation: {\n      name: 1,\n      lenderRules: lenderRules()\n    }\n  },\n  loanId: 1,\n  maxAmount: 1,\n  organisation: 1,\n  user: simpleUser(),\n  createdAt: 1,\n  withCounterparts: 1,\n  enableOffer: 1\n});\n\nconst baseOrganisation = () => ({\n  address: 1,\n  address1: 1,\n  address2: 1,\n  canton: 1,\n  city: 1,\n  contacts: {\n    title: 1,\n    email: 1,\n    name: 1\n  },\n  features: 1,\n  logo: 1,\n  name: 1,\n  type: 1,\n  zipCode: 1,\n  tags: 1,\n  users: {\n    _id: 1\n  }\n});\n\nconst fullOrganisation = () => (0, _objectSpread2.default)({}, baseOrganisation(), {\n  commissionRate: 1,\n  commissionRates: 1,\n  contacts: contact(),\n  documents: 1,\n  generatedRevenues: 1,\n  lenderRules: lenderRules(),\n  lenders: lender(),\n  offers: 1,\n  offerCount: 1,\n  users: organisationUser()\n});\n\nconst userOrganisation = () => ({\n  logo: 1,\n  name: 1,\n  lenderRules: lenderRules()\n});\n\nconst proPromotionLot = () => ({\n  attributedTo: {\n    user: {\n      name: 1\n    }\n  },\n  createdAt: 1,\n  documents: 1,\n  lots: {\n    name: 1,\n    value: 1,\n    type: 1,\n    description: 1\n  },\n  name: 1,\n  promotion: {\n    status: 1,\n    name: 1,\n    promotionLots: {\n      name: 1\n    },\n    users: {\n      _id: 1\n    },\n    lots: {\n      name: 1,\n      value: 1,\n      type: 1,\n      description: 1,\n      promotionLots: {\n        _id: 1\n      }\n    }\n  },\n  promotionOptions: {\n    _id: 1\n  },\n  properties: promotionProperty(),\n  status: 1,\n  updatedAt: 1,\n  value: 1\n});\n\nconst appPromotionLot = () => ({\n  attributedTo: {\n    user: {\n      _id: 1\n    }\n  },\n  createdAt: 1,\n  documents: 1,\n  lots: {\n    name: 1,\n    value: 1,\n    type: 1,\n    description: 1\n  },\n  name: 1,\n  promotion: {\n    name: 1,\n    status: 1\n  },\n  properties: promotionProperty(),\n  reducedStatus: 1,\n  status: 1,\n  updatedAt: 1,\n  value: 1\n});\n\nconst fullPromotionOption = () => ({\n  canton: 1,\n  createdAt: 1,\n  custom: 1,\n  loan: {\n    name: 1\n  },\n  lots: {\n    name: 1,\n    type: 1,\n    status: 1,\n    description: 1\n  },\n  priority: 1,\n  promotionLots: {\n    name: 1,\n    promotion: {\n      name: 1\n    }\n  },\n  solvency: 1,\n  updatedAt: 1\n});\n\nconst proPromotionOption = () => ({\n  canton: 1,\n  createdAt: 1,\n  custom: 1,\n  loan: {\n    name: 1,\n    solvency: 1,\n    status: 1,\n    user: {\n      phoneNumbers: 1,\n      name: 1,\n      email: 1\n    },\n    promotions: {\n      users: {\n        _id: 1,\n        name: 1,\n        organisations: {\n          name: 1\n        }\n      }\n    },\n    promotionOptions: {\n      name: 1,\n      promotionLots: {\n        attributedTo: {\n          user: {\n            _id: 1\n          }\n        }\n      },\n      solvency: 1\n    },\n    loanProgress: 1\n  },\n  lots: {\n    name: 1,\n    type: 1,\n    description: 1\n  },\n  priority: 1,\n  solvency: 1,\n  updatedAt: 1,\n  promotion: {\n    users: {\n      _id: 1\n    }\n  },\n  promotionLots: {\n    _id: 1\n  }\n});\n\nconst appPromotionOption = () => ({\n  attributedToMe: 1,\n  canton: 1,\n  createdAt: 1,\n  custom: 1,\n  lots: {\n    description: 1,\n    name: 1,\n    type: 1,\n    value: 1\n  },\n  promotionLots: appPromotionLot(),\n  priority: 1,\n  solvency: 1,\n  updatedAt: 1\n});\n\nconst loanPromotionOption = () => ({\n  attributedToMe: 1,\n  canton: 1,\n  custom: 1,\n  name: 1,\n  priority: 1,\n  promotion: 1,\n  promotionLots: {\n    name: 1,\n    status: 1,\n    reducedStatus: 1,\n    value: 1,\n    properties: promotionProperty()\n  },\n  solvency: 1,\n  value: 1\n});\n\nconst basePromotion = () => ({\n  address: 1,\n  address1: 1,\n  availablePromotionLots: 1,\n  bookedPromotionLots: 1,\n  canton: 1,\n  city: 1,\n  constructionTimeline: 1,\n  contacts: 1,\n  createdAt: 1,\n  documents: 1,\n  lenderOrganisation: {\n    name: 1,\n    logo: 1\n  },\n  loans: {\n    _id: 1\n  },\n  lots: {\n    value: 1,\n    name: 1,\n    type: 1,\n    description: 1,\n    promotionLots: {\n      name: 1\n    },\n    status: 1\n  },\n  name: 1,\n  promotionLots: {\n    status: 1,\n    reducedStatus: 1,\n    lots: {\n      name: 1\n    },\n    promotionOptions: {\n      _id: 1\n    },\n    name: 1\n  },\n  properties: promotionProperty(),\n  soldPromotionLots: 1,\n  status: 1,\n  type: 1,\n  updatedAt: 1,\n  users: {\n    name: 1,\n    email: 1,\n    roles: 1,\n    phoneNumber: 1,\n    organisations: {\n      name: 1\n    }\n  },\n  zipCode: 1\n});\n\nconst proPromotion = ({\n  withFilteredLoan\n} = {}) => (0, _objectSpread2.default)({}, basePromotion(), {\n  assignedEmployee: {\n    name: 1,\n    email: 1\n  },\n  assignedEmployeeId: 1,\n  promotionLots: {\n    attributedTo: {\n      user: {\n        name: 1\n      }\n    },\n    lots: {\n      name: 1,\n      value: 1,\n      type: 1,\n      description: 1,\n      status: 1\n    },\n    name: 1,\n    promotionOptions: {\n      _id: 1\n    },\n    properties: promotionProperty(),\n    reducedStatus: 1,\n    status: 1,\n    value: 1,\n    promotion: {\n      _id: 1\n    }\n  },\n  promotionLoan: {\n    _id: 1,\n    name: 1\n  }\n}, withFilteredLoan ? {\n  loans: {\n    $filter({\n      filters,\n      params: {\n        loanId\n      }\n    }) {\n      filters._id = loanId;\n    }\n\n  }\n} : {});\n\nconst proPromotions = () => (0, _objectSpread2.default)({}, basePromotion(), {\n  promotionLots: {\n    attributedTo: {\n      user: {\n        name: 1\n      }\n    },\n    promotion: {\n      _id: 1\n    }\n  }\n});\n\nconst adminPromotions = proPromotion;\n\nconst searchPromotions = () => ({\n  createdAt: 1,\n  name: 1,\n  promotionLotLinks: 1,\n  updatedAt: 1\n});\n\nconst propertySummary = () => ({\n  address: 1,\n  address1: 1,\n  address2: 1,\n  canton: 1,\n  city: 1,\n  externalId: 1,\n  externalUrl: 1,\n  imageUrls: 1,\n  insideArea: 1,\n  organisation: 1,\n  promotion: {\n    name: 1\n  },\n  propertyType: 1,\n  status: 1,\n  thumbnail: 1,\n  totalValue: 1,\n  userId: 1,\n  value: 1,\n  zipCode: 1\n});\n\nconst fullProperty = ({\n  withSort\n} = {}) => (0, _objectSpread2.default)({}, propertySummary(), {\n  additionalDocuments: 1,\n  additionalMargin: 1,\n  adminValidation: 1,\n  areaNorm: 1,\n  bathroomCount: 1,\n  category: 1,\n  constructionValue: 1,\n  constructionYear: 1,\n  copropertyPercentage: 1,\n  createdAt: 1,\n  description: 1,\n  documents: 1,\n  flatType: 1,\n  floorNumber: 1,\n  gardenArea: 1,\n  houseType: 1,\n  investmentRent: 1,\n  isCoproperty: 1,\n  isNew: 1,\n  landArea: 1,\n  landValue: 1,\n  latitude: 1,\n  loans: loanBase(),\n  longitude: 1,\n  minergie: 1,\n  mortgageNotes: mortgageNote(),\n  name: 1,\n  numberOfFloors: 1,\n  parkingInside: 1,\n  parkingOutside: 1,\n  pictures: 1,\n  promotion: {\n    name: 1\n  },\n  renovationYear: 1,\n  residenceType: 1,\n  roomCount: 1,\n  terraceArea: 1,\n  totalValue: 1,\n  updatedAt: 1,\n  user: appUser(),\n  users: {\n    _id: 1\n  },\n  useOpenGraph: 1,\n  volume: 1,\n  volumeNorm: 1,\n  yearlyExpenses: 1\n}, withSort ? {\n  $options: {\n    sort: {\n      createdAt: 1\n    }\n  }\n} : {});\n\nconst adminProperty = ({\n  withSort\n} = {}) => (0, _objectSpread2.default)({}, fullProperty({\n  withSort\n}), {\n  loanCount: 1,\n  useOpenGraph: 1\n});\n\nconst promotionProperty = () => ({\n  additionalMargin: 1,\n  address: 1,\n  bathroomCount: 1,\n  canton: 1,\n  constructionValue: 1,\n  description: 1,\n  gardenArea: 1,\n  insideArea: 1,\n  landValue: 1,\n  mortgageNotes: mortgageNote(),\n  name: 1,\n  propertyType: 1,\n  roomCount: 1,\n  terraceArea: 1,\n  totalValue: 1,\n  value: 1,\n  yearlyExpenses: 1\n});\n\nconst userProperty = ({\n  withSort\n} = {}) => {\n  const obj = (0, _objectSpread2.default)({}, fullProperty({\n    withSort\n  }));\n  delete obj.users;\n  return obj;\n};\n\nconst proPropertySummary = () => ({\n  address1: 1,\n  city: 1,\n  status: 1,\n  totalValue: 1,\n  loanCount: 1\n});\n\nconst proProperty = ({\n  withSort\n} = {}) => (0, _objectSpread2.default)({}, fullProperty({\n  withSort\n}), {\n  loanCount: 1,\n  useOpenGraph: 1,\n  users: {\n    name: 1,\n    organisations: {\n      name: 1\n    },\n    email: 1,\n    phoneNumber: 1\n  }\n});\n\nconst apiProperty = () => ({\n  externalId: 1,\n  address1: 1,\n  address2: 1,\n  city: 1,\n  zipCode: 1,\n  value: 1,\n  description: 1,\n  propertyType: 1,\n  houseType: 1,\n  flatType: 1,\n  roomCount: 1,\n  insideArea: 1,\n  landArea: 1,\n  terraceArea: 1,\n  constructionYear: 1,\n  externalUrl: 1,\n  useOpenGraph: 1,\n  imageUrls: 1\n});\n\nconst baseTask = () => ({\n  completedAt: 1,\n  createdAt: 1,\n  dueAt: 1,\n  status: 1,\n  title: 1,\n  description: 1,\n  updatedAt: 1,\n  isPrivate: 1,\n  priority: 1\n});\n\nconst task = () => (0, _objectSpread2.default)({}, baseTask(), {\n  assigneeLink: 1,\n  assignee: simpleUser(),\n  loan: {\n    name: 1,\n    borrowers: {\n      name: 1\n    },\n    user: {\n      name: 1\n    }\n  },\n  user: {\n    name: 1\n  }\n});\n\nconst simpleUser = () => ({\n  email: 1,\n  emails: 1,\n  name: 1,\n  firstName: 1,\n  lastName: 1,\n  phoneNumbers: 1,\n  phoneNumber: 1,\n  roles: 1\n});\n\nconst organisationUser = () => (0, _objectSpread2.default)({}, simpleUser(), {\n  organisations: baseOrganisation()\n});\n\nconst fullUser = () => (0, _objectSpread2.default)({}, simpleUser(), {\n  apiPublicKey: 1,\n  assignedEmployee: simpleUser(),\n  createdAt: 1,\n  emails: 1,\n  loans: loanBase(),\n  updatedAt: 1,\n  organisations: fullOrganisation()\n});\n\nconst adminUser = () => (0, _objectSpread2.default)({}, fullUser(), {\n  assignedEmployee: simpleUser(),\n  assignedEmployeeCache: 1,\n  promotions: {\n    name: 1,\n    status: 1\n  },\n  proProperties: {\n    address1: 1,\n    status: 1,\n    loanCount: 1,\n    totalValue: 1\n  },\n  referredByUser: {\n    name: 1,\n    organisations: {\n      name: 1\n    }\n  },\n  referredByOrganisation: {\n    name: 1\n  },\n  referredByOrganisationLink: 1\n});\n\nconst appUser = () => (0, _objectSpread2.default)({}, fullUser(), {\n  assignedEmployee: simpleUser(),\n  borrowers: {\n    name: 1\n  },\n  loans: {\n    borrowers: {\n      _id: 1,\n      name: 1\n    },\n    customName: 1,\n    hasPromotion: 1,\n    hasProProperty: 1,\n    name: 1,\n    promotions: {\n      address: 1,\n      name: 1,\n      documents: 1\n    },\n    properties: {\n      address: 1,\n      documents: 1\n    },\n    purchaseType: 1,\n    step: 1\n  },\n  properties: {\n    _id: 1\n  }\n});\n\nconst proUser = () => (0, _objectSpread2.default)({}, fullUser(), {\n  assignedEmployee: simpleUser(),\n  promotions: {\n    _id: 1,\n    name: 1,\n    permissions: 1,\n    status: 1,\n    users: {\n      _id: 1\n    }\n  },\n  properties: {\n    _id: 1\n  },\n  proProperties: {\n    _id: 1,\n    address1: 1,\n    permissions: 1,\n    status: 1,\n    users: {\n      _id: 1\n    }\n  }\n});\n\nconst revenue = () => ({\n  amount: 1,\n  createdAt: 1,\n  description: 1,\n  expectedAt: 1,\n  loan: {\n    name: 1\n  },\n  organisationLinks: 1,\n  organisations: {\n    name: 1\n  },\n  paidAt: 1,\n  secondaryType: 1,\n  sourceOrganisationLink: 1,\n  sourceOrganisation: {\n    name: 1\n  },\n  status: 1,\n  type: 1\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/index.js                                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  constants: () => constants,\n  schemas: () => schemas\n});\nmodule.link(\"./initialization\");\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\n\nlet _constants;\n\nmodule.link(\"./constants\", {\n  \"*\"(v) {\n    _constants = v;\n  }\n\n}, 1);\nlet LoanSchema;\nmodule.link(\"./loans/schemas/LoanSchema\", {\n  default(v) {\n    LoanSchema = v;\n  }\n\n}, 2);\nlet PromotionOptionSchema;\nmodule.link(\"./promotionOptions/schemas/PromotionOptionSchema\", {\n  default(v) {\n    PromotionOptionSchema = v;\n  }\n\n}, 3);\nlet BorrowerSchema;\nmodule.link(\"./borrowers/schemas/BorrowerSchema\", {\n  default(v) {\n    BorrowerSchema = v;\n  }\n\n}, 4);\nlet PropertySchema;\nmodule.link(\"./properties/schemas/PropertySchema\", {\n  default(v) {\n    PropertySchema = v;\n  }\n\n}, 5);\nlet TasksSchema;\nmodule.link(\"./tasks/tasks\", {\n  TasksSchema(v) {\n    TasksSchema = v;\n  }\n\n}, 6);\nlet PromotionSchema;\nmodule.link(\"./promotions/schemas/PromotionSchema\", {\n  default(v) {\n    PromotionSchema = v;\n  }\n\n}, 7);\nlet LotSchema;\nmodule.link(\"./lots/schemas/LotSchema\", {\n  default(v) {\n    LotSchema = v;\n  }\n\n}, 8);\nlet OfferSchema;\nmodule.link(\"./offers/offers\", {\n  OfferSchema(v) {\n    OfferSchema = v;\n  }\n\n}, 9);\nlet PromotionLotSchema;\nmodule.link(\"./promotionLots/schemas/PromotionLotSchema\", {\n  default(v) {\n    PromotionLotSchema = v;\n  }\n\n}, 10);\nlet OrganisationSchema;\nmodule.link(\"./organisations/organisations\", {\n  OrganisationSchema(v) {\n    OrganisationSchema = v;\n  }\n\n}, 11);\nlet UserSchema;\nmodule.link(\"./users/users\", {\n  UserSchema(v) {\n    UserSchema = v;\n  }\n\n}, 12);\nlet InterestRatesSchema;\nmodule.link(\"./interestRates/schemas/interestRatesSchema\", {\n  default(v) {\n    InterestRatesSchema = v;\n  }\n\n}, 13);\nlet Irs10ySchema;\nmodule.link(\"./irs10y/schemas/irs10ySchema\", {\n  default(v) {\n    Irs10ySchema = v;\n  }\n\n}, 14);\nlet MortgageNoteSchema;\nmodule.link(\"./mortgageNotes/schemas/MortgageNoteSchema\", {\n  default(v) {\n    MortgageNoteSchema = v;\n  }\n\n}, 15);\nlet ContactSchema;\nmodule.link(\"./contacts/schemas/contactSchema\", {\n  default(v) {\n    ContactSchema = v;\n  }\n\n}, 16);\nlet LenderSchema;\nmodule.link(\"./lenders/schemas/lenderSchema\", {\n  default(v) {\n    LenderSchema = v;\n  }\n\n}, 17);\nlet RevenueSchema;\nmodule.link(\"./revenues/schemas/revenueSchema\", {\n  default(v) {\n    RevenueSchema = v;\n  }\n\n}, 18);\nmodule.link(\"./borrowers\", {\n  default: \"Borrowers\"\n}, 19);\nmodule.link(\"./loans\", {\n  default: \"Loans\"\n}, 20);\nmodule.link(\"./lots\", {\n  default: \"Lots\"\n}, 21);\nmodule.link(\"./offers\", {\n  default: \"Offers\"\n}, 22);\nmodule.link(\"./organisations\", {\n  default: \"Organisations\"\n}, 23);\nmodule.link(\"./promotionLots\", {\n  default: \"PromotionLots\"\n}, 24);\nmodule.link(\"./promotionOptions\", {\n  default: \"PromotionOptions\"\n}, 25);\nmodule.link(\"./promotions\", {\n  default: \"Promotions\"\n}, 26);\nmodule.link(\"./properties\", {\n  default: \"Properties\"\n}, 27);\nmodule.link(\"./tasks\", {\n  default: \"Tasks\"\n}, 28);\nmodule.link(\"./users\", {\n  default: \"Users\"\n}, 29);\nmodule.link(\"./interestRates\", {\n  default: \"InterestRates\"\n}, 30);\nmodule.link(\"./irs10y\", {\n  default: \"Irs10y\"\n}, 31);\nmodule.link(\"./mortgageNotes\", {\n  default: \"MortgageNotes\"\n}, 32);\nmodule.link(\"./contacts\", {\n  default: \"Contacts\"\n}, 33);\nmodule.link(\"./lenders\", {\n  default: \"Lenders\"\n}, 34);\nmodule.link(\"./lenderRules\", {\n  default: \"LenderRules\"\n}, 35);\nmodule.link(\"./revenues\", {\n  default: \"Revenues\"\n}, 36);\nmodule.link(\"./methods\", {\n  \"*\": \"*\"\n}, 37);\nmodule.link(\"./helpers\", {\n  \"*\": \"*\"\n}, 38);\nmodule.link(\"./containerToolkit\", {\n  \"*\": \"*\"\n}, 39);\nconst constants = _constants;\nconst schemas = {\n  [constants.BORROWERS_COLLECTION]: BorrowerSchema,\n  [constants.LOANS_COLLECTION]: LoanSchema,\n  [constants.LOTS_COLLECTION]: LotSchema,\n  [constants.OFFERS_COLLECTION]: OfferSchema,\n  [constants.PROMOTION_LOTS_COLLECTION]: PromotionLotSchema,\n  [constants.PROMOTION_OPTIONS_COLLECTION]: PromotionOptionSchema,\n  [constants.PROMOTIONS_COLLECTION]: PromotionSchema,\n  [constants.PROPERTIES_COLLECTION]: PropertySchema,\n  [constants.TASKS_COLLECTION]: TasksSchema,\n  [constants.ORGANISATIONS_COLLECTION]: OrganisationSchema,\n  [constants.USERS_COLLECTION]: UserSchema,\n  [constants.INTEREST_RATES_COLLECTION]: InterestRatesSchema,\n  [constants.IRS10Y_COLLECTION]: Irs10ySchema,\n  [constants.MORTGAGE_NOTES_COLLECTION]: MortgageNoteSchema,\n  [constants.CONTACTS_COLLECTION]: ContactSchema,\n  [constants.LENDERS_COLLECTION]: LenderSchema,\n  [constants.REVENUES_COLLECTION]: RevenueSchema\n};\nMeteor.isStaging = Meteor.settings.public.environment === 'staging';\nMeteor.isDevEnvironment = Meteor.settings.public.environment === 'dev-production';\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"initialization.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/api/initialization.js                                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"uniforms-bridge-simple-schema-2\");\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 0);\nSimpleSchema.extendOptions(['condition', 'customAllowedValues', 'customAutoValue']);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"components\":{\"AutoForm\":{\"ValidIcon\":{\"ValidIcon.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/AutoForm/ValidIcon/ValidIcon.jsx                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 0);\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 1);\nlet classnames;\nmodule.link(\"classnames\", {\n  default(v) {\n    classnames = v;\n  }\n\n}, 2);\nlet Icon;\nmodule.link(\"../../Icon\", {\n  default(v) {\n    Icon = v;\n  }\n\n}, 3);\nlet colors;\nmodule.link(\"../../../config/colors\", {\n  default(v) {\n    colors = v;\n  }\n\n}, 4);\nlet ValidIconContainer, STATUS;\nmodule.link(\"./ValidIconContainer\", {\n  default(v) {\n    ValidIconContainer = v;\n  },\n\n  STATUS(v) {\n    STATUS = v;\n  }\n\n}, 5);\n\nconst ValidIcon = ({\n  status,\n  style,\n  fade,\n  hide\n}) => {\n  if (hide) {\n    return null;\n  }\n\n  switch (status) {\n    case STATUS.HIDE:\n      return null;\n\n    case STATUS.ERROR:\n      return React.createElement(Icon, {\n        style: (0, _objectSpread2.default)({}, style, {\n          color: colors.error\n        }),\n        icon: \"close\",\n        size: 50\n      });\n\n    case STATUS.VALID:\n      return React.createElement(\"span\", {\n        style: style,\n        className: classnames('saving-icon', {\n          'animated zoomOut': !!fade\n        })\n      }, React.createElement(\"svg\", {\n        className: \"checkmark\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 52 52\"\n      }, React.createElement(\"circle\", {\n        className: \"checkmark__circle\",\n        cx: \"26\",\n        cy: \"26\",\n        r: \"25\",\n        fill: \"none\"\n      }), React.createElement(\"path\", {\n        className: \"checkmark__check\",\n        fill: \"none\",\n        d: \"M14.1 27.2l7.1 7.2 16.7-16.8\"\n      })));\n\n    case STATUS.TODO:\n      return React.createElement(\"span\", {\n        className: \"todo-circle\",\n        style: style\n      }, React.createElement(\"span\", {\n        className: \"inside\"\n      }));\n\n    default:\n      return null;\n  }\n};\n\nValidIcon.propTypes = {\n  hide: PropTypes.bool,\n  style: PropTypes.objectOf(PropTypes.any)\n};\nValidIcon.defaultProps = {\n  style: {},\n  hide: false\n};\nmodule.exportDefault(ValidIconContainer(ValidIcon));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ValidIconContainer.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/AutoForm/ValidIcon/ValidIconContainer.jsx                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nmodule.export({\n  STATUS: () => STATUS\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet React, Component;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 1);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst STATUS = {\n  ERROR: 'ERROR',\n  VALID: 'VALID',\n  HIDE: 'HIDE',\n  TODO: 'TODO'\n};\nconst SAVING_ANIMATION_DURATION_MS = 900;\nmodule.exportDefault(WrappedComponent => {\n  var _temp;\n\n  return _temp = class extends Component {\n    constructor(props) {\n      super(props);\n\n      _defineProperty(this, \"getStatus\", () => {\n        const {\n          error,\n          required,\n          value,\n          todo\n        } = this.props;\n\n        if (error) {\n          return STATUS.ERROR;\n        }\n\n        if (todo || required === true && [undefined, '', null].includes(value)) {\n          return STATUS.TODO;\n        }\n\n        return STATUS.VALID;\n      });\n\n      this.state = {\n        status: this.getStatus()\n      };\n      this.timer = null;\n    }\n\n    componentWillReceiveProps({\n      saving: nextSaving\n    }) {\n      // If the animation is going on, don't trigger this again\n      if (this.timer) {\n        return;\n      }\n\n      const {\n        saving\n      } = this.props;\n\n      if (saving === false && nextSaving === true) {\n        // If saving is happening, hide the icon, and then make it reappear\n        this.setState({\n          status: STATUS.HIDE\n        }, () => {\n          this.timer = Meteor.setTimeout(() => {\n            Meteor.clearTimeout(this.timer);\n            this.timer = null;\n          }, SAVING_ANIMATION_DURATION_MS);\n          this.setState({\n            status: this.getStatus()\n          });\n        });\n      }\n    }\n\n    render() {\n      const {\n        status\n      } = this.state;\n      return React.createElement(WrappedComponent, (0, _extends2.default)({}, this.props, {\n        status: status\n      }));\n    }\n\n  }, _temp;\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/AutoForm/ValidIcon/index.js                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./ValidIcon.jsx\", {\n  default: \"default\"\n}, 0);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"AutoFormTextInput.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/AutoForm/AutoFormTextInput.jsx                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet React, Component;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 1);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 2);\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 3);\nlet constants;\nmodule.link(\"../../config/constants\", {\n  \"*\"(v) {\n    constants = v;\n  }\n\n}, 4);\nlet colors;\nmodule.link(\"../../config/colors\", {\n  default(v) {\n    colors = v;\n  }\n\n}, 5);\nlet toNumber, toDecimalNumber;\nmodule.link(\"../../utils/conversionFunctions\", {\n  toNumber(v) {\n    toNumber = v;\n  },\n\n  toDecimalNumber(v) {\n    toDecimalNumber = v;\n  }\n\n}, 6);\nlet MyTextInput;\nmodule.link(\"../TextInput\", {\n  default(v) {\n    MyTextInput = v;\n  }\n\n}, 7);\nlet ValidIcon;\nmodule.link(\"./ValidIcon\", {\n  default(v) {\n    ValidIcon = v;\n  }\n\n}, 8);\nlet FormValidator;\nmodule.link(\"./FormValidator\", {\n  default(v) {\n    FormValidator = v;\n  }\n\n}, 9);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst styles = {\n  div: {\n    position: 'relative'\n  },\n  infoIcon: {\n    position: 'absolute',\n    bottom: 5,\n    left: -40,\n    padding: 10\n  },\n  infoStyle: {\n    color: colors.primary,\n    borderColor: colors.primary\n  }\n};\n\nconst cleanValue = v => v === 0 ? 0 : v || '';\n\nconst isEqual = (value, currentValue, type) => {\n  if (type === 'date') {\n    // To avoid the saving icon from firing twice when chaning the date,\n    // only compare the date without times\n    // If we ever have date inputs in autoform that need time, we'll have to find another hack\n    return moment(value).isSame(currentValue, 'day');\n  }\n\n  return value === cleanValue(currentValue);\n};\n\nclass AutoFormTextInput extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleBlur\", () => {\n      this.setState({\n        showInfo: false\n      }); // If the value has changed, save it\n      // state is initialized as '', but currentValue is initially undefined, so check that too\n\n      this.saveValue(true);\n    });\n\n    _defineProperty(this, \"handleChange\", (_, value) => {\n      const {\n        saveOnChange,\n        showValidIconOnChange,\n        inputProps: {\n          currentValue,\n          inputType\n        }\n      } = this.props; // Make sure value is a number if this is a number or money input\n      // const safeValue =\n      //   this.props.number || this.props.money\n      //     ? toNumber(event.target.value)\n      //     : event.target.value;\n\n      if (isEqual(value, currentValue, inputType)) {\n        return;\n      }\n\n      this.setState(({\n        history\n      }) => ({\n        value,\n        history: [...history, value]\n      }), () => {\n        // do not show saving icon when changing text, only show it on blur\n        if (saveOnChange) {\n          this.saveValue(showValidIconOnChange);\n        }\n      });\n    });\n\n    _defineProperty(this, \"handleFocus\", () => {\n      this.setState({\n        showInfo: true\n      });\n    });\n\n    _defineProperty(this, \"saveValue\", showSaving => {\n      const {\n        updateFunc,\n        docId,\n        inputProps: {\n          id,\n          currentValue,\n          inputType\n        }\n      } = this.props;\n      const {\n        value\n      } = this.state; // Save data to DB\n\n      const object = {\n        [id]: value\n      };\n      let shouldSave = true; // Don't save if value hasn't changed\n\n      if (isEqual(value, currentValue, inputType)) {\n        shouldSave = false;\n      }\n\n      Meteor.clearTimeout(this.timeout);\n      this.timeout = Meteor.setTimeout(() => {\n        Promise.resolve().then(() => shouldSave && updateFunc({\n          object,\n          id: docId\n        })) // on success, set saving briefly to true, before setting it to false again to trigger icon\n        .then(() => this.setState({\n          errorText: '',\n          saving: showSaving\n        })) // If there was an error, reset value to the backend value\n        .catch(() => this.setState({\n          value: currentValue\n        })).finally(() => this.setState({\n          saving: false\n        }));\n      }, constants.AUTOSAVE_DEBOUNCE);\n    });\n\n    const {\n      currentValue: _currentValue,\n      number,\n      decimal\n    } = props.inputProps;\n    this.state = {\n      // Make sure 0 values are displayed properly\n      value: cleanValue(_currentValue),\n      errorText: '',\n      saving: false,\n      showInfo: false,\n      history: [cleanValue(_currentValue)]\n    };\n\n    if (number) {\n      if (decimal) {\n        this.formatter = toDecimalNumber;\n      } else {\n        this.formatter = toNumber;\n      }\n    } else {\n      this.formatter = v => v;\n    }\n  }\n\n  componentWillUnmount() {\n    Meteor.clearTimeout(this.timeout);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const valueIsDifferent = nextProps.inputProps.currentValue !== this.props.inputProps.currentValue;\n\n    if (valueIsDifferent) {\n      // To handle race conditions, check if the new value from the DB\n      // has been typed in the past\n      // If it has, then don't update the textfield\n      // If it hasn't, override it, because the backend says it should be a new value\n      const valueExistsInHistory = this.state.history.includes(nextProps.inputProps.currentValue);\n\n      if (!valueExistsInHistory) {\n        this.handleChange(null, nextProps.inputProps.currentValue);\n      }\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      inputProps: {\n        style,\n        label,\n        placeholder,\n        number,\n        id,\n        multiline,\n        rows,\n        info,\n        disabled,\n        money,\n        required,\n        date,\n        percent,\n        onFocusChange,\n        focused,\n        todo,\n        // Destructure these props to avoid warnings\n        inputRef,\n        currentValue,\n        condition,\n        decimal,\n        intlId,\n        saveOnChange\n      },\n      noValidator,\n      savingIconStyle,\n      admin,\n      inputLabelProps\n    } = _this$props,\n          otherProps = (0, _objectWithoutProperties2.default)(_this$props.inputProps, [\"style\", \"label\", \"placeholder\", \"number\", \"id\", \"multiline\", \"rows\", \"info\", \"disabled\", \"money\", \"required\", \"date\", \"percent\", \"onFocusChange\", \"focused\", \"todo\", \"inputRef\", \"currentValue\", \"condition\", \"decimal\", \"intlId\", \"saveOnChange\"]);\n    const {\n      value,\n      errorText,\n      saving,\n      showInfo\n    } = this.state;\n    let type;\n\n    if (money) {\n      type = 'money';\n    } else if (number) {\n      type = 'number';\n    } else if (date) {\n      type = 'date';\n    } else if (percent) {\n      type = 'percent';\n    } else {\n      type = 'text';\n    }\n\n    return React.createElement(\"div\", {\n      className: \"form-input__row\",\n      style: (0, _objectSpread2.default)({}, styles.div, style)\n    }, React.createElement(MyTextInput, (0, _extends2.default)({}, otherProps, {\n      InputProps: {\n        onFocusChange,\n        focused\n      },\n      label: label,\n      placeholder: placeholder,\n      value: value,\n      onChange: this.handleChange,\n      onBlur: this.handleBlur,\n      onFocus: this.handleFocus,\n      type: type,\n      id: id,\n      multiline: multiline,\n      rows: rows,\n      info: errorText || showInfo && info,\n      error: !!errorText,\n      disabled: disabled,\n      style: (0, _objectSpread2.default)({\n        width: '100%'\n      }, style, {\n        marginBottom: 16\n      }),\n      noValidate: true,\n      fullWidth: true,\n      inputLabelProps: inputLabelProps\n    })), React.createElement(ValidIcon, {\n      saving: saving,\n      error: !!errorText,\n      style: (0, _objectSpread2.default)({}, styles.savingIcon, savingIconStyle),\n      value: value,\n      required: required,\n      hide: admin,\n      todo: todo\n    }), !noValidator && React.createElement(FormValidator, this.props));\n  }\n\n}\n\nAutoFormTextInput.propTypes = {\n  autocomplete: PropTypes.string,\n  currentValue: PropTypes.any,\n  decimal: PropTypes.bool,\n  docId: PropTypes.string.isRequired,\n  floatingLabelFixed: PropTypes.bool,\n  info: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]),\n  inputProps: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.node.isRequired,\n    placeholder: PropTypes.node.isRequired,\n    style: PropTypes.objectOf(PropTypes.any),\n    multiline: PropTypes.bool,\n    disabled: PropTypes.bool\n  }).isRequired,\n  inputStyle: PropTypes.objectOf(PropTypes.any),\n  money: PropTypes.bool,\n  noValidator: PropTypes.bool,\n  number: PropTypes.bool,\n  rows: PropTypes.number,\n  saveOnChange: PropTypes.bool,\n  savingIconStyle: PropTypes.object,\n  showValidIconOnChange: PropTypes.bool,\n  updateFunc: PropTypes.func\n};\nAutoFormTextInput.defaultProps = {\n  autocomplete: '',\n  currentValue: '',\n  decimal: false,\n  floatingLabelFixed: true,\n  info: '',\n  inputStyle: undefined,\n  money: false,\n  noValidator: false,\n  number: false,\n  rows: 1,\n  saveOnChange: true,\n  savingIconStyle: {},\n  showValidIconOnChange: false\n};\nmodule.exportDefault(AutoFormTextInput);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"FormValidator.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/AutoForm/FormValidator.jsx                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet get;\nmodule.link(\"lodash/get\", {\n  default(v) {\n    get = v;\n  }\n\n}, 2);\nlet Checkbox;\nmodule.link(\"../Checkbox\", {\n  default(v) {\n    Checkbox = v;\n  }\n\n}, 3);\n\nconst handleCheck = ({\n  updateFunc,\n  docId,\n  inputProps: {\n    id\n  }\n}, isInputChecked) => {\n  const object = {\n    [`adminValidation.${id}`]: isInputChecked\n  };\n  updateFunc({\n    object,\n    id: docId\n  });\n};\n\nconst styles = {\n  div: {\n    position: 'absolute',\n    top: '0px',\n    right: '0px'\n  },\n  wrapper: {\n    position: 'relative',\n    right: '-100%'\n  }\n};\n\nconst FormValidator = props => {\n  let id;\n  const {\n    admin,\n    doc,\n    inputProps\n  } = props;\n\n  if (!admin) {\n    return null;\n  }\n\n  if (!inputProps) {\n    id = props.id;\n  } else {\n    id = inputProps.id;\n  }\n\n  const checked = !!get(doc.adminValidation, id);\n  return React.createElement(\"div\", {\n    style: styles.div\n  }, React.createElement(\"div\", {\n    style: styles.wrapper\n  }, React.createElement(Checkbox, {\n    label: checked ? 'Validé' : 'Valider',\n    value: checked,\n    onChange: (e, c) => handleCheck(props, c)\n  })));\n};\n\nFormValidator.propTypes = {\n  admin: PropTypes.bool,\n  doc: PropTypes.objectOf(PropTypes.any).isRequired\n};\nFormValidator.defaultProps = {\n  admin: false\n};\nmodule.exportDefault(FormValidator);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"LoanChecklist\":{\"LoanChecklistEmail\":{\"EmailLoanChecklist.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/LoanChecklist/LoanChecklistEmail/EmailLoanChecklist.jsx                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet LoanChecklistEmailTable;\nmodule.link(\"./LoanChecklistEmailTable\", {\n  default(v) {\n    LoanChecklistEmailTable = v;\n  }\n\n}, 1);\n\nconst EmailLoanChecklist = ({\n  labels,\n  title,\n  formatMessage\n}) => React.createElement(React.Fragment, null, React.createElement(LoanChecklistEmailTable, {\n  columns: [React.createElement(\"h4\", {\n    className: \"list-title\",\n    key: title\n  }, title)]\n}), labels.length === 0 && React.createElement(LoanChecklistEmailTable, {\n  columns: [{\n    el: React.createElement(\"div\", {\n      className: \"check-mark\"\n    }, \"\\u2713\"),\n    style: {\n      width: '15px'\n    }\n  }, {\n    el: formatMessage({\n      id: 'LoanChecklist.done'\n    }),\n    style: {\n      className: 'secondary'\n    }\n  }]\n}), labels.map(label => React.createElement(LoanChecklistEmailTable, {\n  key: label,\n  columns: [{\n    el: React.createElement(\"div\", {\n      className: \"bullet\"\n    }, React.createElement(\"div\", null, \"\\xA0\")),\n    style: {\n      width: '15px'\n    }\n  }, label]\n})));\n\nmodule.exportDefault(EmailLoanChecklist);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"LoanChecklistEmail.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/LoanChecklist/LoanChecklistEmail/LoanChecklistEmail.jsx                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet getChecklistMissingInformations;\nmodule.link(\"../helpers\", {\n  getChecklistMissingInformations(v) {\n    getChecklistMissingInformations = v;\n  }\n\n}, 1);\nlet styles;\nmodule.link(\"./styles\", {\n  default(v) {\n    styles = v;\n  }\n\n}, 2);\nlet LoanChecklistEmailSection;\nmodule.link(\"./LoanChecklistEmailSection\", {\n  default(v) {\n    LoanChecklistEmailSection = v;\n  }\n\n}, 3);\nlet LoanChecklistEmailTable;\nmodule.link(\"./LoanChecklistEmailTable\", {\n  default(v) {\n    LoanChecklistEmailTable = v;\n  }\n\n}, 4);\n\nconst LoanChecklistEmail = props => {\n  const {\n    intl: {\n      formatMessage\n    }\n  } = props;\n  const {\n    fields,\n    documents\n  } = getChecklistMissingInformations(props);\n  return React.createElement(React.Fragment, null, React.createElement(LoanChecklistEmailSection, {\n    key: \"fields\",\n    missingInformations: fields,\n    label: formatMessage({\n      id: 'LoanChecklist.missingFields'\n    }),\n    formatMessage: formatMessage\n  }), React.createElement(LoanChecklistEmailTable, {\n    columns: [React.createElement(\"span\", null, \"\\xA0\")]\n  }), React.createElement(\"div\", {\n    className: \"separator\"\n  }), React.createElement(LoanChecklistEmailSection, {\n    key: \"documents\",\n    missingInformations: documents,\n    label: formatMessage({\n      id: 'LoanChecklist.missingDocuments'\n    }),\n    formatMessage: formatMessage\n  }));\n};\n\nmodule.exportDefault(LoanChecklistEmail);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"LoanChecklistEmailSection.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/LoanChecklist/LoanChecklistEmail/LoanChecklistEmailSection.jsx                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet EmailLoanChecklist;\nmodule.link(\"./EmailLoanChecklist\", {\n  default(v) {\n    EmailLoanChecklist = v;\n  }\n\n}, 1);\nlet LoanChecklistEmailTable;\nmodule.link(\"./LoanChecklistEmailTable\", {\n  default(v) {\n    LoanChecklistEmailTable = v;\n  }\n\n}, 2);\n\nconst LoanChecklistEmailSection = props => {\n  const {\n    missingInformations: {\n      property = {},\n      borrowers = []\n    } = {},\n    label,\n    formatMessage\n  } = props;\n  return React.createElement(React.Fragment, null, React.createElement(LoanChecklistEmailTable, {\n    columns: [React.createElement(\"h3\", {\n      className: \"section-title\",\n      key: label\n    }, label)]\n  }), !!Object.keys(property).length && React.createElement(EmailLoanChecklist, {\n    title: property.title,\n    labels: property.labels,\n    formatMessage: formatMessage\n  }), borrowers.map(borrower => React.createElement(EmailLoanChecklist, {\n    key: borrower.title,\n    title: borrower.title,\n    labels: borrower.labels,\n    formatMessage: formatMessage\n  })));\n};\n\nmodule.exportDefault(LoanChecklistEmailSection);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"LoanChecklistEmailTable.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/LoanChecklist/LoanChecklistEmail/LoanChecklistEmailTable.jsx                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\n\nconst displayColumn = (column, index = 0) => {\n  if (column.el) {\n    return React.createElement(\"td\", (0, _extends2.default)({\n      key: index\n    }, column.style), column.el);\n  }\n\n  return React.createElement(\"td\", {\n    key: index\n  }, column);\n};\n\nconst LoanChecklistEmailTable = ({\n  columns = []\n}) => React.createElement(\"table\", {\n  align: \"center\",\n  cellPadding: \"0\",\n  cellSpacing: \"0\"\n}, React.createElement(\"tbody\", null, React.createElement(\"tr\", null, columns.map(displayColumn))));\n\nmodule.exportDefault(LoanChecklistEmailTable);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"styles.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/LoanChecklist/LoanChecklistEmail/styles.js                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nconst styles = `\n.check-mark {\n    width: 15px;\n    height: 15px;\n    border-radius: 50%;     \n    background-color: #86E9DA;\n    color: white;     \n    margin: 0;\n    text-align: center;\n    font-size: 12px;\n    line-height: 16px;\n}\n\n.bullet {\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    border: 1px solid #2F5DE1;\n}\n\n.bullet div {\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    background-color: #2F5DE1;\n    margin: 2px ;\n }\n\n table {\n     width: 100%;\n }\n\n td {\n     padding: 9px;\n }\n\n .secondary {\n     color: rgba(0,0,0,0.3);\n }\n\n .section-title {\n     text-align: center;\n }\n\n .list-title {\n     text-align: center;\n     color: #ABABAB;\n }\n\n .separator {\n     margin: 8px;\n }\n`;\nmodule.exportDefault(styles);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"helpers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/LoanChecklist/helpers.js                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  getChecklistMissingInformations: () => getChecklistMissingInformations\n});\nlet PROPERTY_CATEGORY;\nmodule.link(\"../../api/constants\", {\n  PROPERTY_CATEGORY(v) {\n    PROPERTY_CATEGORY = v;\n  }\n\n}, 0);\nlet Calculator;\nmodule.link(\"../../utils/Calculator\", {\n  default(v) {\n    Calculator = v;\n  }\n\n}, 1);\n\nconst shouldDisplayPropertyChecklist = props => {\n  const {\n    loan = {}\n  } = props;\n  const property = Calculator.selectProperty({\n    loan\n  });\n  return !loan.hasPromotion && property && property._id // Perform extra check in case property is an empty object\n  && property.category !== PROPERTY_CATEGORY.PRO;\n};\n\nconst makeLabelOverrider = doc => id => {\n  const additionalDocument = doc.additionalDocuments.find(({\n    id: documentId\n  }) => documentId === id);\n\n  if (additionalDocument) {\n    return additionalDocument.label;\n  }\n\n  return false;\n};\n\nconst formatFileTitle = ({\n  doc,\n  formatMessage\n}) => file => {\n  const labelOverrider = makeLabelOverrider(doc);\n  const label = labelOverrider(file);\n  return label || formatMessage({\n    id: `files.${file}`\n  });\n};\n\nconst getPropertyMissingFields = props => {\n  const {\n    loan = {},\n    intl: {\n      formatMessage\n    }\n  } = props;\n  const displayPropertyChecklist = shouldDisplayPropertyChecklist(props);\n  const property = Calculator.selectProperty({\n    loan\n  });\n  return (0, _objectSpread2.default)({}, displayPropertyChecklist ? {\n    property: {\n      title: property && property.address1 || formatMessage({\n        id: 'general.property'\n      }),\n      labels: Calculator.getMissingPropertyFields({\n        loan\n      }).map(field => formatMessage({\n        id: `Forms.${field}`\n      }))\n    }\n  } : {});\n};\n\nconst getPropertyMissingDocuments = props => {\n  const {\n    loan = {},\n    intl: {\n      formatMessage\n    }\n  } = props;\n  const displayPropertyChecklist = shouldDisplayPropertyChecklist(props);\n  const property = Calculator.selectProperty({\n    loan\n  });\n  return (0, _objectSpread2.default)({}, displayPropertyChecklist ? {\n    property: {\n      title: property && property.address1 || formatMessage({\n        id: 'general.property'\n      }),\n      labels: Calculator.getMissingPropertyDocuments({\n        loan\n      }).map(formatFileTitle({\n        doc: property,\n        formatMessage\n      }))\n    }\n  } : {});\n};\n\nconst getBorrowersMissingFields = props => {\n  const {\n    loan = {},\n    intl: {\n      formatMessage\n    }\n  } = props;\n  const {\n    borrowers = []\n  } = loan;\n  return {\n    borrowers: borrowers.map((borrower, index) => ({\n      title: borrower.name || formatMessage({\n        id: 'general.borrowerWithIndex'\n      }, {\n        index: index + 1\n      }),\n      labels: Calculator.getMissingBorrowerFields({\n        borrowers: borrower\n      }).map(field => formatMessage({\n        id: `Forms.${field}`\n      }))\n    }))\n  };\n};\n\nconst getBorrowersMissingDocuments = props => {\n  const {\n    loan = {},\n    intl: {\n      formatMessage\n    }\n  } = props;\n  const {\n    borrowers = []\n  } = loan;\n  return {\n    borrowers: borrowers.map((borrower, index) => ({\n      title: borrower.name || formatMessage({\n        id: 'general.borrowerWithIndex'\n      }, {\n        index: index + 1\n      }),\n      labels: Calculator.getMissingBorrowerDocuments({\n        loan,\n        borrowers: borrower\n      }).map(formatFileTitle({\n        doc: borrower,\n        formatMessage\n      }))\n    }))\n  };\n};\n\nconst getChecklistMissingInformations = props => ({\n  fields: (0, _objectSpread2.default)({}, getPropertyMissingFields(props), getBorrowersMissingFields(props)),\n  documents: (0, _objectSpread2.default)({}, getPropertyMissingDocuments(props), getBorrowersMissingDocuments(props))\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"Translation\":{\"formattingComponents\":{\"IntlDate.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/Translation/formattingComponents/IntlDate.jsx                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nmodule.export({\n  IntlDate: () => IntlDate\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet FormattedDate, FormattedTime, FormattedRelative;\nmodule.link(\"react-intl\", {\n  FormattedDate(v) {\n    FormattedDate = v;\n  },\n\n  FormattedTime(v) {\n    FormattedTime = v;\n  },\n\n  FormattedRelative(v) {\n    FormattedRelative = v;\n  }\n\n}, 2);\n\nconst IntlDate = (_ref) => {\n  let {\n    type\n  } = _ref,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"type\"]);\n\n  switch (type) {\n    case 'time':\n      return React.createElement(FormattedTime, props);\n\n    case 'relative':\n      return React.createElement(FormattedRelative, props);\n\n    default:\n      return React.createElement(FormattedDate, props);\n  }\n};\n\nIntlDate.propTypes = {\n  type: PropTypes.string\n};\nmodule.exportDefault(IntlDate);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"MetricArea.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/Translation/formattingComponents/MetricArea.jsx                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\n\nconst MetricArea = ({\n  value,\n  placeholder\n}) => {\n  if (!value || value === 0) {\n    return placeholder || React.createElement(\"span\", null, \"0 m\", React.createElement(\"sup\", null, \"2\"));\n  }\n\n  return React.createElement(\"span\", null, value, \" m\", React.createElement(\"sup\", null, \"2\"));\n};\n\nMetricArea.propTypes = {\n  value: PropTypes.number\n};\nMetricArea.defaultProps = {\n  value: undefined\n};\nmodule.exportDefault(MetricArea);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/Translation/formattingComponents/index.js                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./MetricArea\", {\n  default: \"MetricArea\"\n}, 0);\nmodule.link(\"./IntlDate\", {\n  default: \"IntlDate\"\n}, 1);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"numberComponents\":{\"IntlNumber.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/Translation/numberComponents/IntlNumber.jsx                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet FormattedNumber, FormattedPlural;\nmodule.link(\"react-intl\", {\n  FormattedNumber(v) {\n    FormattedNumber = v;\n  },\n\n  FormattedPlural(v) {\n    FormattedPlural = v;\n  }\n\n}, 2);\n\nconst shouldRenderDash = value => !value && value !== 0 || value === Infinity;\n\nconst IntlNumber = (_ref) => {\n  let {\n    type,\n    value\n  } = _ref,\n      rest = (0, _objectWithoutProperties2.default)(_ref, [\"type\", \"value\"]);\n\n  // Render a dash if the number is not well specified\n  if (shouldRenderDash(value)) {\n    return '-';\n  }\n\n  if (typeof value !== 'number') {\n    // Render whatever comes if it is not a number\n    return value;\n  }\n\n  switch (type) {\n    case 'plural':\n      return React.createElement(FormattedPlural, (0, _extends2.default)({}, rest, {\n        value: value\n      }));\n\n    default:\n      return React.createElement(FormattedNumber, (0, _extends2.default)({}, rest, {\n        value: value\n      }));\n  }\n};\n\nIntlNumber.propTypes = {\n  value: PropTypes.number\n};\nIntlNumber.defaultProps = {\n  value: undefined\n};\nmodule.exportDefault(IntlNumber);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Money.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/Translation/numberComponents/Money.jsx                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet toMoney;\nmodule.link(\"../../../utils/conversionFunctions\", {\n  toMoney(v) {\n    toMoney = v;\n  }\n\n}, 2);\n\nconst getValue = ({\n  displayZero,\n  value,\n  currency,\n  rounded\n}) => {\n  if (!displayZero && (!value || value === 0)) {\n    return '-';\n  }\n\n  if (value !== 0 && !value) {\n    return currency ? 0 : React.createElement(React.Fragment, null, \"CHF\\xA00\");\n  }\n\n  return currency ? React.createElement(React.Fragment, null, \"CHF\\xA0\", toMoney(value, {\n    rounded\n  })) : toMoney(value, {\n    rounded\n  });\n}; // The Intl standard for CHF is messed up, and display the currency after the\n// monetary value, which is not what we want. We can use IntlNumber later on\n// if needed\n\n\nconst Money = ({\n  value,\n  currency,\n  displayZero,\n  className,\n  tag: Tag,\n  rounded\n}) => React.createElement(Tag, {\n  className: className\n}, getValue({\n  displayZero,\n  value,\n  currency,\n  rounded\n}));\n\nMoney.propTypes = {\n  className: PropTypes.string,\n  currency: PropTypes.bool,\n  displayZero: PropTypes.bool,\n  tag: PropTypes.string,\n  value: PropTypes.number\n};\nMoney.defaultProps = {\n  className: '',\n  currency: true,\n  displayZero: true,\n  tag: 'span',\n  value: 0\n};\nmodule.exportDefault(Money);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Percent.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/Translation/numberComponents/Percent.jsx                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet IntlNumber;\nmodule.link(\"..\", {\n  IntlNumber(v) {\n    IntlNumber = v;\n  }\n\n}, 2);\n\nconst Percent = ({\n  value,\n  rounded,\n  showPlus\n}) => React.createElement(IntlNumber, {\n  value: value,\n  format: rounded ? 'percentageRounded' : 'percentage'\n}, formattedValue => React.createElement(\"span\", null, showPlus ? value > 0 ? '+' : '' : '', formattedValue));\n\nPercent.propTypes = {\n  showPlus: PropTypes.boolean,\n  value: PropTypes.number\n};\nPercent.defaultProps = {\n  showPlus: false,\n  value: undefined\n};\nmodule.exportDefault(Percent);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/Translation/numberComponents/index.js                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./Money\", {\n  default: \"Money\"\n}, 0);\nmodule.link(\"./Percent\", {\n  default: \"Percent\"\n}, 1);\nmodule.link(\"./IntlNumber\", {\n  default: \"IntlNumber\"\n}, 2);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"FormattedMessage.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/Translation/FormattedMessage.jsx                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet FormattedMessage;\nmodule.link(\"react-intl\", {\n  FormattedMessage(v) {\n    FormattedMessage = v;\n  }\n\n}, 1);\nlet Consumer;\nmodule.link(\"./withTranslationContext\", {\n  Consumer(v) {\n    Consumer = v;\n  }\n\n}, 2);\n// For some \"select\" strings that need a default value\nconst defaultTranslationValues = {\n  purchaseType: 'ACQUISITION'\n};\nmodule.exportDefault((_ref) => {\n  let {\n    values = {}\n  } = _ref,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"values\"]);\n  return React.createElement(Consumer, null, (translationValues = {}) => React.createElement(FormattedMessage, (0, _extends2.default)({}, props, {\n    values: (0, _objectSpread2.default)({}, defaultTranslationValues, translationValues, values)\n  })));\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Translation.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/Translation/Translation.jsx                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nmodule.export({\n  T: () => T\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet AutoTooltip;\nmodule.link(\"../tooltips/AutoTooltip\", {\n  default(v) {\n    AutoTooltip = v;\n  }\n\n}, 2);\nlet defaultIntlValues;\nmodule.link(\"./defaultIntlValues\", {\n  default(v) {\n    defaultIntlValues = v;\n  }\n\n}, 3);\nlet FormattedMessage;\nmodule.link(\"./FormattedMessage\", {\n  default(v) {\n    FormattedMessage = v;\n  }\n\n}, 4);\n\nconst makeAutoTooltip = props => (content, key) => React.createElement(AutoTooltip, (0, _extends2.default)({}, props, {\n  placement: props.tooltipPlacement,\n  key: key\n}), content);\n/**\n * T - A wrapper around react-intl's Formatted Message, it\n * automatically adds tooltips if they exist.\n * It is only rerendered if the id changes\n * @extends Component\n */\n\n\nconst T = props => {\n  const {\n    noTooltips,\n    id,\n    values,\n    tooltipPlacement\n  } = props,\n        rest = (0, _objectWithoutProperties2.default)(props, [\"noTooltips\", \"id\", \"values\", \"tooltipPlacement\"]);\n\n  if (noTooltips) {\n    return React.createElement(FormattedMessage, props);\n  }\n\n  if (typeof id !== 'string') {\n    return id;\n  }\n\n  if (!id) {\n    throw new Error('Undefined id in Translation component');\n  }\n\n  const Auto = makeAutoTooltip(props);\n  return React.createElement(FormattedMessage, (0, _extends2.default)({\n    id: id,\n    values: (0, _objectSpread2.default)({}, defaultIntlValues, values)\n  }, rest), (...formattedMessage) => formattedMessage.map((msg, i) => Auto(msg, i)));\n};\n\nT.propTypes = {\n  id: PropTypes.string.isRequired,\n  noTooltips: PropTypes.bool,\n  tooltipPlacement: PropTypes.string,\n  values: PropTypes.object\n};\nT.defaultProps = {\n  noTooltips: false,\n  tooltipPlacement: undefined,\n  values: {}\n};\nmodule.exportDefault(T);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"defaultIntlValues.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/Translation/defaultIntlValues.jsx                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\n// These values are injected into every intl message for convenience\nconst defaultIntlValues = {\n  verticalSpace: React.createElement(\"span\", null, React.createElement(\"br\", null), React.createElement(\"br\", null)),\n  purchaseType: '',\n  name: ''\n};\nmodule.exportDefault(defaultIntlValues);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/Translation/index.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./Translation\", {\n  \"*\": \"*\"\n}, 0);\nmodule.link(\"./Translation\", {\n  default: \"default\"\n}, 1);\nmodule.link(\"./numberComponents\", {\n  \"*\": \"*\"\n}, 2);\nmodule.link(\"./formattingComponents\", {\n  \"*\": \"*\"\n}, 3);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"withTranslationContext.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/Translation/withTranslationContext.jsx                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  Consumer: () => Consumer,\n  Provider: () => Provider\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nconst {\n  Consumer,\n  Provider\n} = React.createContext();\nmodule.exportDefault(translationValues => Component => props => React.createElement(Consumer, null, (translationContext = {}) => React.createElement(Provider, {\n  value: (0, _objectSpread2.default)({}, translationContext, translationValues(props))\n}, React.createElement(Component, props))));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"tooltips\":{\"Tooltip\":{\"Tooltip.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/tooltips/Tooltip/Tooltip.jsx                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet omit;\nmodule.link(\"lodash/omit\", {\n  default(v) {\n    omit = v;\n  }\n\n}, 2);\nlet FormattedMessage;\nmodule.link(\"react-intl\", {\n  FormattedMessage(v) {\n    FormattedMessage = v;\n  }\n\n}, 3);\nlet Popover;\nmodule.link(\"react-bootstrap/lib/Popover\", {\n  default(v) {\n    Popover = v;\n  }\n\n}, 4);\nlet DialogSimple;\nmodule.link(\"../../DialogSimple/loadable\", {\n  default(v) {\n    DialogSimple = v;\n  }\n\n}, 5);\nlet Button;\nmodule.link(\"../../Button\", {\n  default(v) {\n    Button = v;\n  }\n\n}, 6);\nlet defaultIntlValues;\nmodule.link(\"../../Translation/defaultIntlValues\", {\n  default(v) {\n    defaultIntlValues = v;\n  }\n\n}, 7);\nlet T;\nmodule.link(\"../../Translation\", {\n  default(v) {\n    T = v;\n  }\n\n}, 8);\nlet TooltipSynonyms;\nmodule.link(\"../TooltipSynonyms\", {\n  default(v) {\n    TooltipSynonyms = v;\n  }\n\n}, 9);\n\nconst getTooltip1Id = id => id.includes('tooltip') ? id : `tooltip.${id}`;\n\nconst getTooltip2Id = id => id.includes('tooltip') ? id : `tooltip2.${id}`;\n\nconst Tooltip = (_ref) => {\n  let {\n    tooltipConfig: {\n      id,\n      double: isDoubleTooltip\n    },\n    match\n  } = _ref,\n      rest = (0, _objectWithoutProperties2.default)(_ref, [\"tooltipConfig\", \"match\"]);\n  let content = null;\n\n  if (isDoubleTooltip) {\n    content = React.createElement(\"span\", {\n      className: \"tooltip\"\n    }, React.createElement(FormattedMessage, {\n      id: getTooltip1Id(id)\n    }), React.createElement(DialogSimple, {\n      title: match // Dialogs normally have zIndex of 1500\n      // Usually dialogs should be behind tooltips (which are\n      // at zindex 1501), but when you trigger a dialog from a tooltip,\n      // it should be above the previous tooltip, hence 1502\n      ,\n      style: {\n        zIndex: 1502\n      },\n      buttonStyle: {\n        marginTop: 16\n      },\n      label: React.createElement(FormattedMessage, {\n        id: \"general.learnMore\"\n      }),\n      autoFocus: true,\n      actions: handleClose => React.createElement(Button, {\n        primary: true,\n        label: React.createElement(T, {\n          id: \"general.ok\"\n        }),\n        onClick: handleClose\n      })\n    }, React.createElement(TooltipSynonyms, {\n      tooltipId: id,\n      match: match\n    }), React.createElement(\"br\", null), React.createElement(\"br\", null), React.createElement(FormattedMessage, {\n      id: getTooltip2Id(id),\n      values: defaultIntlValues\n    })));\n  } else {\n    content = React.createElement(FormattedMessage, {\n      id: getTooltip1Id(id)\n    });\n  }\n\n  const passedProps = omit(rest, ['trigger', 'hide', 'match']);\n  return React.createElement(Popover, (0, _extends2.default)({}, passedProps, {\n    id: id\n  }), content);\n};\n\nTooltip.propTypes = {\n  match: PropTypes.string,\n  tooltipConfig: PropTypes.object.isRequired\n};\nmodule.exportDefault(Tooltip);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/tooltips/Tooltip/index.js                                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./Tooltip\", {\n  default: \"default\"\n}, 0);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"loadable.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/tooltips/Tooltip/loadable.js                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet loadable;\nmodule.link(\"../../../utils/loadable\", {\n  default(v) {\n    loadable = v;\n  }\n\n}, 0);\nmodule.exportDefault(loadable({\n  req: () => require(\"./index\"),\n  loader: () => module.dynamicImport(\"./index\")\n}));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"AutoTooltip.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/tooltips/AutoTooltip.jsx                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nmodule.export({\n  createRegexThatFindsAnyWordFromList: () => createRegexThatFindsAnyWordFromList,\n  reformatString: () => reformatString,\n  autoTooltipParser: () => autoTooltipParser,\n  AutoTooltip: () => AutoTooltip\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet reactStringReplace;\nmodule.link(\"react-string-replace\", {\n  default(v) {\n    reactStringReplace = v;\n  }\n\n}, 2);\nlet tooltips, TOOLTIP_LISTS;\nmodule.link(\"../../arrays/tooltips\", {\n  tooltips(v) {\n    tooltips = v;\n  },\n\n  TOOLTIP_LISTS(v) {\n    TOOLTIP_LISTS = v;\n  }\n\n}, 3);\nlet TooltipOverlay;\nmodule.link(\"./TooltipOverlay\", {\n  default(v) {\n    TooltipOverlay = v;\n  }\n\n}, 4);\nlet TooltipContainer;\nmodule.link(\"./TooltipContext\", {\n  TooltipContainer(v) {\n    TooltipContainer = v;\n  }\n\n}, 5);\n\nconst createRegexThatFindsAnyWordFromList = list => {\n  if (list) {\n    return new RegExp(`(${Object.keys(tooltips(list)).join('|')})`, 'gi');\n  }\n\n  return null;\n};\n\nconst reformatString = string => string.replace(/’/gi, \"'\");\n\nconst parseTextForTooltips = props => reactStringReplace(reformatString(props.children), createRegexThatFindsAnyWordFromList(props.tooltipList), (match, index) => React.createElement(TooltipOverlay, (0, _extends2.default)({}, props, {\n  key: index,\n  match: match\n}), match));\n\nconst autoTooltipParser = (string, tooltipList = TOOLTIP_LISTS.GENERAL) => parseTextForTooltips({\n  children: string,\n  tooltipList\n});\n\nconst AutoTooltip = props => {\n  const {\n    children,\n    tooltipId\n  } = props;\n\n  if (!children) {\n    return null;\n  }\n\n  if (typeof children !== 'string') {\n    // If no id is given and children is not a string, return\n    return children;\n  }\n\n  if (tooltipId) {\n    return React.createElement(TooltipOverlay, props, children);\n  } // If no id is given and children is a string,\n  // automatically replace all matching strings with tooltips\n\n\n  const content = parseTextForTooltips(props);\n  return React.createElement(\"span\", null, content);\n};\n\nAutoTooltip.propTypes = {\n  children: PropTypes.node,\n  tooltipList: PropTypes.string\n};\nAutoTooltip.defaultProps = {\n  children: null,\n  tooltipList: TOOLTIP_LISTS.GENERAL\n};\nmodule.exportDefault(TooltipContainer(AutoTooltip));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"TooltipContext.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/tooltips/TooltipContext.jsx                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nmodule.export({\n  TooltipProvider: () => TooltipProvider,\n  TooltipProviderContainer: () => TooltipProviderContainer,\n  TooltipContainer: () => TooltipContainer,\n  TOOLTIP_LISTS: () => TOOLTIP_LISTS\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet TOOLTIP_LISTS;\nmodule.link(\"../../arrays/tooltips\", {\n  TOOLTIP_LISTS(v) {\n    TOOLTIP_LISTS = v;\n  }\n\n}, 2);\nconst {\n  Provider,\n  Consumer\n} = React.createContext();\n\nconst TooltipProvider = ({\n  tooltipList,\n  children\n}) => React.createElement(Provider, {\n  value: tooltipList\n}, children);\n\nconst TooltipProviderContainer = tooltipList => Component => props => React.createElement(Provider, {\n  value: tooltipList\n}, React.createElement(Component, props));\n\nconst TooltipContainer = Component => props => React.createElement(Consumer, null, tooltipList => React.createElement(Component, (0, _extends2.default)({\n  tooltipList: tooltipList\n}, props)));\n\nTooltipProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n  tooltipList: PropTypes.string\n};\nTooltipProvider.defaultProps = {\n  tooltipList: TOOLTIP_LISTS.GENERAL\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"TooltipOverlay.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/tooltips/TooltipOverlay.jsx                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet OverlayTrigger;\nmodule.link(\"react-bootstrap/lib/OverlayTrigger\", {\n  default(v) {\n    OverlayTrigger = v;\n  }\n\n}, 2);\nlet tooltips;\nmodule.link(\"../../arrays/tooltips\", {\n  tooltips(v) {\n    tooltips = v;\n  }\n\n}, 3);\nlet Tooltip;\nmodule.link(\"./Tooltip/loadable\", {\n  default(v) {\n    Tooltip = v;\n  }\n\n}, 4);\n\nconst handleClick = event => {\n  // Trigger tooltip instead of another onClick handler in a parent\n  event.preventDefault();\n  event.stopPropagation();\n};\n\nconst TooltipOverlay = ({\n  placement,\n  tooltipList,\n  match,\n  trigger,\n  delayShow,\n  children,\n  tooltipId\n}) => {\n  const tooltipConfig = tooltipId ? {\n    id: tooltipId,\n    double: Array.isArray(tooltipId)\n  } : tooltips(tooltipList)[match.toLowerCase()];\n  return React.createElement(OverlayTrigger, {\n    placement: placement,\n    overlay: React.createElement(Tooltip, {\n      placement: placement,\n      trigger: trigger,\n      tooltipConfig: tooltipConfig,\n      match: match\n    }),\n    rootClose: true,\n    animation: false,\n    trigger: trigger,\n    delayShow: delayShow,\n    container: global.document !== undefined ? document.body : undefined,\n    onClick: handleClick\n  }, React.createElement(\"span\", {\n    className: \"tooltip-overlay\",\n    tabIndex: -1\n  }, children));\n};\n\nTooltipOverlay.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.string]).isRequired,\n  delayShow: PropTypes.number,\n  match: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n  placement: PropTypes.string,\n  tooltipList: PropTypes.string.isRequired,\n  trigger: PropTypes.arrayOf(PropTypes.string)\n};\nTooltipOverlay.defaultProps = {\n  delayShow: 300,\n  match: undefined,\n  placement: 'bottom',\n  trigger: ['click'] // Can be 'click', 'hover', and/or 'focus'\n\n};\nmodule.exportDefault(TooltipOverlay);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"TooltipSynonyms.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/tooltips/TooltipSynonyms.jsx                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  TooltipSynonyms: () => TooltipSynonyms\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet withProps;\nmodule.link(\"recompose\", {\n  withProps(v) {\n    withProps = v;\n  }\n\n}, 2);\nlet generalTooltips;\nmodule.link(\"../../arrays/tooltips\", {\n  generalTooltips(v) {\n    generalTooltips = v;\n  }\n\n}, 3);\nlet T;\nmodule.link(\"../Translation\", {\n  default(v) {\n    T = v;\n  }\n\n}, 4);\n\nconst findSynonymsForTooltipId = (tooltipId, match, tooltips) => Object.keys(tooltips).filter(tooltipMatcher => tooltips[tooltipMatcher].id === tooltipId).filter(synonym => synonym !== match.toLowerCase());\n\nconst TooltipSynonyms = ({\n  tooltipId,\n  match,\n  tooltips\n}) => {\n  const synonyms = findSynonymsForTooltipId(tooltipId, match, tooltips);\n\n  if (!synonyms || synonyms.length <= 0) {\n    return null;\n  }\n\n  return React.createElement(\"span\", {\n    className: \"tooltip-synonyms\"\n  }, React.createElement(\"b\", null, React.createElement(T, {\n    id: \"TooltipSynonyms.title\",\n    values: {\n      count: synonyms.length\n    }\n  }), ': '), React.createElement(\"i\", null, synonyms.join(', ')));\n};\n\nTooltipSynonyms.propTypes = {\n  match: PropTypes.string.isRequired,\n  tooltipId: PropTypes.string.isRequired,\n  tooltips: PropTypes.object.isRequired\n};\nmodule.exportDefault(withProps({\n  tooltips: generalTooltips\n})(TooltipSynonyms));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"AutoForm2\":{\"constants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/AutoForm2/constants.js                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  CUSTOM_AUTOFIELD_TYPES: () => CUSTOM_AUTOFIELD_TYPES,\n  COMPONENT_TYPES: () => COMPONENT_TYPES,\n  FIELDS_TO_IGNORE: () => FIELDS_TO_IGNORE\n});\nconst CUSTOM_AUTOFIELD_TYPES = {\n  DATE: 'DATE',\n  PERCENT: 'PERCENT',\n  TEXT_AREA: 'TEXT_AREA',\n  MONEY: 'MONEY',\n  MONEY_DECIMAL: 'MONEY_DECIMAL',\n  HTML_PREVIEW: 'HTML_PREVIEW'\n};\nconst COMPONENT_TYPES = {\n  ARRAY: 'ARRAY',\n  DATE: 'DATE',\n  PERCENT: 'PERCENT',\n  SELECT: 'SELECT',\n  TEXT_AREA: 'TEXT_AREA',\n  MONEY: 'MONEY',\n  RENDER: 'RENDER',\n  HTML_PREVIEW: 'HTML_PREVIEW'\n};\nconst FIELDS_TO_IGNORE = ['label', 'field', 'fields', 'uniforms', 'InputLabelProps', 'onChange', 'model', 'changedMap'];\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"BorrowerAddPartner\":{\"BorrowerAddPartner.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/BorrowerAddPartner/BorrowerAddPartner.jsx                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet withProps, withState, compose;\nmodule.link(\"recompose\", {\n  withProps(v) {\n    withProps = v;\n  },\n\n  withState(v) {\n    withState = v;\n  },\n\n  compose(v) {\n    compose = v;\n  }\n\n}, 1);\nlet RadioButtons;\nmodule.link(\"../RadioButtons\", {\n  default(v) {\n    RadioButtons = v;\n  }\n\n}, 2);\nlet addBorrower;\nmodule.link(\"../../api\", {\n  addBorrower(v) {\n    addBorrower = v;\n  }\n\n}, 3);\nlet T;\nmodule.link(\"../Translation\", {\n  default(v) {\n    T = v;\n  }\n\n}, 4);\nlet Button;\nmodule.link(\"../Button\", {\n  default(v) {\n    Button = v;\n  }\n\n}, 5);\nlet CIVIL_STATUS;\nmodule.link(\"../../api/constants\", {\n  CIVIL_STATUS(v) {\n    CIVIL_STATUS = v;\n  }\n\n}, 6);\n\nconst BorrowerAddPartner = ({\n  handleClick,\n  isLoading\n}) => React.createElement(\"div\", {\n  className: \"borrower-add-partner\"\n}, React.createElement(Button, {\n  onClick: handleClick,\n  primary: true,\n  outlined: true,\n  label: React.createElement(T, {\n    id: \"BorrowerAddPartner.label\"\n  }),\n  loading: isLoading\n}));\n\nmodule.exportDefault(compose(withState('isLoading', 'setLoading', false), withProps(({\n  loanId,\n  setLoading\n}) => ({\n  handleClick: () => {\n    setLoading(true);\n    addBorrower.run({\n      loanId,\n      borrower: {\n        sameAddress: true,\n        civilStatus: CIVIL_STATUS.MARRIED\n      }\n    }).finally(() => setLoading(false));\n  }\n})))(BorrowerAddPartner));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/BorrowerAddPartner/index.js                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./BorrowerAddPartner\", {\n  default: \"default\"\n}, 0);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"Button\":{\"Button.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/Button/Button.jsx                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet omit;\nmodule.link(\"lodash/omit\", {\n  default(v) {\n    omit = v;\n  }\n\n}, 2);\nlet MuiButton;\nmodule.link(\"@material-ui/core/Button\", {\n  default(v) {\n    MuiButton = v;\n  }\n\n}, 3);\nlet withStyles;\nmodule.link(\"@material-ui/core/styles\", {\n  withStyles(v) {\n    withStyles = v;\n  }\n\n}, 4);\nlet fade;\nmodule.link(\"@material-ui/core/styles/colorManipulator\", {\n  fade(v) {\n    fade = v;\n  }\n\n}, 5);\nlet Tooltip;\nmodule.link(\"@material-ui/core/Tooltip\", {\n  default(v) {\n    Tooltip = v;\n  }\n\n}, 6);\nlet Fab;\nmodule.link(\"@material-ui/core/Fab\", {\n  default(v) {\n    Fab = v;\n  }\n\n}, 7);\nlet mapProps, compose;\nmodule.link(\"recompose\", {\n  mapProps(v) {\n    mapProps = v;\n  },\n\n  compose(v) {\n    compose = v;\n  }\n\n}, 8);\nlet cx;\nmodule.link(\"classnames\", {\n  default(v) {\n    cx = v;\n  }\n\n}, 9);\nlet Icon;\nmodule.link(\"../Icon\", {\n  default(v) {\n    Icon = v;\n  }\n\n}, 10);\nlet Link;\nmodule.link(\"../Link\", {\n  default(v) {\n    Link = v;\n  }\n\n}, 11);\n\nconst styles = theme => ({\n  root: {\n    color: theme.palette.error.main,\n    borderColor: theme.palette.error.main,\n    '&$raised': {\n      color: theme.palette.error.contrastText,\n      backgroundColor: theme.palette.error.main\n    },\n    '&:hover': {\n      backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity)\n    }\n  },\n  raised: {}\n});\n\nconst getColor = ({\n  primary,\n  secondary,\n  color,\n  error\n}) => {\n  if (primary) {\n    return 'primary';\n  }\n\n  if (secondary) {\n    return 'secondary';\n  }\n\n  if (error) {\n    return 'error';\n  }\n\n  return color;\n};\n\nconst getVariant = ({\n  raised,\n  outlined\n}) => {\n  if (raised) {\n    return 'contained';\n  }\n\n  if (outlined) {\n    return 'outlined';\n  }\n\n  return undefined;\n};\n\nconst getContent = ({\n  icon,\n  fab,\n  label,\n  children,\n  iconAfter\n}) => {\n  if (iconAfter) {\n    return React.createElement(React.Fragment, null, label || children, icon && !fab && React.createElement(\"span\", {\n      style: {\n        height: '100%',\n        width: 8\n      }\n    }), icon);\n  }\n\n  return React.createElement(React.Fragment, null, icon, icon && !fab && React.createElement(\"span\", {\n    style: {\n      height: '100%',\n      width: 8\n    }\n  }), label || children);\n};\n\nconst Button = props => {\n  const childProps = omit(props, ['iconAfter', 'primary', 'secondary', 'label', 'icon', 'link', 'raised', 'outlined', 'error', 'classes']);\n  const variant = props.variant || getVariant(props);\n  const color = props.color || getColor(props);\n  const Comp = props.fab ? Fab : MuiButton;\n  const button = React.createElement(Comp, (0, _extends2.default)({}, childProps, {\n    color: color,\n    variant: variant,\n    component: props.component || (props.link ? Link : 'button'),\n    to: props.to || undefined,\n    className: cx(props.className, {\n      [props.classes.root]: color === 'error',\n      [props.classes.raised]: !!(color === 'error' && variant === 'raised')\n    })\n  }), getContent(props));\n\n  if (props.tooltip) {\n    if (props.disabled) {\n      // When the button is disabled, it does not trigger pointer-events,\n      // so a tooltip will not appear\n      // Careful with styling here, as the additional span might break layouts\n      return React.createElement(Tooltip, {\n        title: props.tooltip\n      }, React.createElement(\"span\", null, button));\n    }\n\n    return React.createElement(Tooltip, {\n      title: props.tooltip\n    }, button);\n  }\n\n  return button;\n};\n\nButton.propTypes = {\n  children: PropTypes.node,\n  icon: PropTypes.node,\n  label: PropTypes.node,\n  link: PropTypes.bool,\n  raised: PropTypes.bool\n};\nButton.defaultProps = {\n  raised: false,\n  link: false\n};\nconst withLoadingProp = mapProps((_ref) => {\n  let {\n    loading\n  } = _ref,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"loading\"]);\n  return loading ? (0, _objectSpread2.default)({}, props, {\n    disabled: true,\n    icon: React.createElement(Icon, {\n      type: \"loop-spin\"\n    }),\n    children: props.fab ? null : props.children\n  }) : props;\n});\nmodule.exportDefault(compose(withLoadingProp, withStyles(styles))(Button));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/Button/index.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./Button\", {\n  default: \"default\"\n}, 0);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"CantonField\":{\"CantonField.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/CantonField/CantonField.jsx                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet injectIntl;\nmodule.link(\"react-intl\", {\n  injectIntl(v) {\n    injectIntl = v;\n  }\n\n}, 1);\nlet T;\nmodule.link(\"../Translation\", {\n  default(v) {\n    T = v;\n  }\n\n}, 2);\nlet AutoFormTextInput;\nmodule.link(\"../AutoForm/AutoFormTextInput\", {\n  default(v) {\n    AutoFormTextInput = v;\n  }\n\n}, 3);\nlet CANTONS;\nmodule.link(\"../../api/constants\", {\n  CANTONS(v) {\n    CANTONS = v;\n  }\n\n}, 4);\n\nconst CantonField = ({\n  canton,\n  intl: {\n    formatMessage\n  }\n}) => React.createElement(AutoFormTextInput, {\n  inputProps: {\n    currentValue: CANTONS[canton] || formatMessage({\n      id: 'Forms.canton.placeholder'\n    }),\n    label: React.createElement(T, {\n      id: \"Forms.canton\"\n    }),\n    style: {\n      width: '100%',\n      maxWidth: '400px'\n    },\n    readOnly: true,\n    required: true,\n    todo: !canton,\n    multiline: true\n  },\n  saveOnChange: true,\n  showValidIconOnChange: true,\n  updateFunc: () => Promise.resolve()\n});\n\nmodule.exportDefault(injectIntl(CantonField));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"Checkbox\":{\"Checkbox.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/Checkbox/Checkbox.jsx                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet FormControlLabel;\nmodule.link(\"@material-ui/core/FormControlLabel\", {\n  default(v) {\n    FormControlLabel = v;\n  }\n\n}, 2);\nlet MuiCheckbox;\nmodule.link(\"@material-ui/core/Checkbox\", {\n  default(v) {\n    MuiCheckbox = v;\n  }\n\n}, 3);\n\nconst Checkbox = (_ref) => {\n  let {\n    value,\n    onChange,\n    id\n  } = _ref,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"value\", \"onChange\", \"id\"]);\n  return React.createElement(FormControlLabel, (0, _extends2.default)({\n    control: React.createElement(MuiCheckbox, {\n      className: \"checkbox\",\n      checked: value,\n      onChange: onChange,\n      value: id\n    })\n  }, props));\n};\n\nCheckbox.propTypes = {\n  disabled: PropTypes.bool,\n  id: PropTypes.string,\n  label: PropTypes.node,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.bool.isRequired\n};\nCheckbox.defaultProps = {\n  id: undefined,\n  label: undefined,\n  disabled: false\n};\nmodule.exportDefault(Checkbox);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/Checkbox/index.js                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./Checkbox\", {\n  default: \"default\"\n}, 0);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"DialogSimple\":{\"DialogSimple.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/DialogSimple/DialogSimple.jsx                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nmodule.export({\n  default: () => DialogSimple\n});\nlet React, Component;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet Dialog;\nmodule.link(\"../Material/Dialog\", {\n  default(v) {\n    Dialog = v;\n  }\n\n}, 2);\nlet Button;\nmodule.link(\"../Button\", {\n  default(v) {\n    Button = v;\n  }\n\n}, 3);\nlet T;\nmodule.link(\"../Translation\", {\n  default(v) {\n    T = v;\n  }\n\n}, 4);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass DialogSimple extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleOpen\", event => this.setState({\n      open: true\n    }, () => this.props.onOpen && this.props.onOpen()));\n\n    _defineProperty(this, \"handleClose\", isSubmit => this.setState({\n      open: false,\n      isCancel: !isSubmit\n    }));\n\n    _defineProperty(this, \"disableClose\", () => this.setState({\n      disabled: true\n    }));\n\n    _defineProperty(this, \"enableClose\", () => this.setState({\n      disabled: false\n    }));\n\n    this.state = {\n      open: false,\n      disabled: false,\n      isCancel: true\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!this.props.close && nextProps.close) {\n      this.setState({\n        open: false\n      });\n    }\n  }\n\n  render() {\n    const {\n      open,\n      disabled,\n      isCancel\n    } = this.state;\n    const _this$props = this.props,\n          {\n      actions,\n      autoFocus,\n      autoScroll,\n      bodyStyle,\n      buttonProps,\n      buttonStyle,\n      closeOnly,\n      children,\n      contentStyle,\n      important,\n      label,\n      onOpen,\n      passProps,\n      primary,\n      raised = true,\n      renderProps,\n      rootStyle,\n      secondary,\n      style,\n      title,\n      renderTrigger,\n      onClose = () => null\n    } = _this$props,\n          otherProps = (0, _objectWithoutProperties2.default)(_this$props, [\"actions\", \"autoFocus\", \"autoScroll\", \"bodyStyle\", \"buttonProps\", \"buttonStyle\", \"closeOnly\", \"children\", \"contentStyle\", \"important\", \"label\", \"onOpen\", \"passProps\", \"primary\", \"raised\", \"renderProps\", \"rootStyle\", \"secondary\", \"style\", \"title\", \"renderTrigger\", \"onClose\"]);\n    const finalActions = actions && actions(this.handleClose) || (closeOnly ? [React.createElement(Button, {\n      primary: true,\n      label: React.createElement(T, {\n        id: \"general.close\"\n      }),\n      onClick: args => {\n        onClose();\n        this.handleClose(args);\n      },\n      key: \"close\"\n    })] : [React.createElement(Button, {\n      primary: true,\n      label: React.createElement(T, {\n        id: \"general.cancel\"\n      }),\n      onClick: this.handleClose,\n      key: \"cancel\"\n    }), React.createElement(Button, {\n      primary: true,\n      label: \"Ok\",\n      onClick: () => this.handleClose(true),\n      autoFocus: autoFocus // TODO doesn't work with tooltips\n      ,\n      disabled: disabled,\n      key: \"submit\"\n    })]);\n    const childProps = {\n      disableClose: this.disableClose,\n      enableClose: this.enableClose,\n      isCancel,\n      handleClose: this.handleClose\n    };\n    return (// Prevent triggering background clicks\n      React.createElement(\"span\", {\n        style: rootStyle,\n        onClick: e => e.stopPropagation()\n      }, renderTrigger ? renderTrigger({\n        handleOpen: this.handleOpen\n      }) : React.createElement(Button, (0, _extends2.default)({\n        raised: raised,\n        label: label,\n        onClick: this.handleOpen,\n        primary: primary,\n        secondary: secondary,\n        style: buttonStyle\n      }, buttonProps)), React.createElement(Dialog, (0, _extends2.default)({}, otherProps, {\n        title: title,\n        actions: finalActions,\n        important: important,\n        open: open,\n        onClose: this.handleClose,\n        style: style\n      }), !!children && passProps ? React.cloneElement(children, (0, _objectSpread2.default)({}, childProps)) : renderProps ? children(childProps) : children))\n    );\n  }\n\n}\n\nDialogSimple.propTypes = {\n  actions: PropTypes.func,\n  autoFocus: PropTypes.bool,\n  autoScroll: PropTypes.bool,\n  buttonStyle: PropTypes.objectOf(PropTypes.any),\n  close: PropTypes.bool,\n  closeOnly: PropTypes.bool,\n  important: PropTypes.bool,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  onOpen: PropTypes.func,\n  passProps: PropTypes.bool,\n  primary: PropTypes.bool,\n  rootStyle: PropTypes.objectOf(PropTypes.any),\n  secondary: PropTypes.bool,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n};\nDialogSimple.defaultProps = {\n  actions: undefined,\n  autoFocus: false,\n  autoScroll: false,\n  buttonStyle: {},\n  closeOnly: false,\n  close: undefined,\n  important: false,\n  label: null,\n  onOpen: () => {},\n  passProps: false,\n  primary: false,\n  rootStyle: {},\n  secondary: false,\n  title: null\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/DialogSimple/index.js                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./DialogSimple\", {\n  default: \"default\"\n}, 0);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"loadable.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/DialogSimple/loadable.js                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet loadable;\nmodule.link(\"../../utils/loadable\", {\n  default(v) {\n    loadable = v;\n  }\n\n}, 0);\nmodule.exportDefault(loadable({\n  req: () => require(\"./index\"),\n  loader: () => module.dynamicImport(\"./index\")\n}));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"ErrorBoundary\":{\"DevError.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/ErrorBoundary/DevError.jsx                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 1);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 2);\n\nconst DevError = ({\n  error\n}) => Meteor.isDevelopment || Meteor.isTest ? React.createElement(\"div\", {\n  className: \"error\",\n  style: {\n    margin: 40\n  }\n}, React.createElement(\"span\", {\n  style: {\n    display: 'flex',\n    alignItems: 'center'\n  }\n}, React.createElement(\"h4\", null, error.name), \":\", React.createElement(\"h3\", {\n  style: {\n    marginLeft: 16\n  }\n}, error.message)), error.stack) : null;\n\nDevError.propTypes = {\n  error: PropTypes.object.isRequired\n};\nmodule.exportDefault(DevError);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"LayoutError.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/ErrorBoundary/LayoutError.jsx                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet Button;\nmodule.link(\"../Button\", {\n  default(v) {\n    Button = v;\n  }\n\n}, 2);\nlet DevError;\nmodule.link(\"./DevError\", {\n  default(v) {\n    DevError = v;\n  }\n\n}, 3);\n\n// Don't user Translation here, because Loadable depends on it...\n// Find another solution once we really need this to be translated\nconst LayoutError = ({\n  style,\n  error\n}) => React.createElement(\"div\", {\n  className: \"flex-col center animated jackInTheBox\",\n  style: style\n}, React.createElement(\"h2\", {\n  className: \"error\"\n}, \"Woops une erreur!\"), React.createElement(\"div\", {\n  className: \"description\"\n}, React.createElement(\"p\", null, \"Quelque chose n'a pas fonctionn\\xE9 comme pr\\xE9vu, on en est d\\xE9j\\xE0 inform\\xE9s, et vous pouvez essayer de recharger la page.\", React.createElement(\"br\", null), \"Si \\xE7a ne r\\xE9soud pas le probl\\xE8me, \\xE9crivez-nous \\xE0 digital@e-potek.ch.\")), React.createElement(DevError, {\n  error: error\n}), React.createElement(\"div\", {\n  className: \"flex center\"\n}, React.createElement(Button, {\n  raised: true,\n  color: \"primary\",\n  onClick: () => location.reload()\n}, \"Recharger la page\"), React.createElement(\"a\", {\n  href: \"/\",\n  className: \"home-link\"\n}, React.createElement(Button, {\n  raised: true,\n  color: \"secondary\"\n}, \"Page d'accueil\"))));\n\nLayoutError.propTypes = {\n  error: PropTypes.object.isRequired,\n  style: PropTypes.object\n};\nLayoutError.defaultProps = {\n  style: {}\n};\nmodule.exportDefault(LayoutError);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"Icon\":{\"Icon.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/Icon/Icon.jsx                                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nmodule.export({\n  iconMap: () => iconMap\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet Tooltip;\nmodule.link(\"@material-ui/core/Tooltip\", {\n  default(v) {\n    Tooltip = v;\n  }\n\n}, 2);\nlet Badge;\nmodule.link(\"@material-ui/core/Badge\", {\n  default(v) {\n    Badge = v;\n  }\n\n}, 3);\nlet CheckIcon;\nmodule.link(\"@material-ui/icons/Check\", {\n  default(v) {\n    CheckIcon = v;\n  }\n\n}, 4);\nlet CloseIcon;\nmodule.link(\"@material-ui/icons/Close\", {\n  default(v) {\n    CloseIcon = v;\n  }\n\n}, 5);\nlet AddIcon;\nmodule.link(\"@material-ui/icons/AddCircleOutline\", {\n  default(v) {\n    AddIcon = v;\n  }\n\n}, 6);\nlet RemoveIcon;\nmodule.link(\"@material-ui/icons/RemoveCircleOutline\", {\n  default(v) {\n    RemoveIcon = v;\n  }\n\n}, 7);\nlet LoopIcon;\nmodule.link(\"@material-ui/icons/Loop\", {\n  default(v) {\n    LoopIcon = v;\n  }\n\n}, 8);\nlet WarningIcon;\nmodule.link(\"@material-ui/icons/Warning\", {\n  default(v) {\n    WarningIcon = v;\n  }\n\n}, 9);\nlet ForumIcon;\nmodule.link(\"@material-ui/icons/Forum\", {\n  default(v) {\n    ForumIcon = v;\n  }\n\n}, 10);\nlet MailIcon;\nmodule.link(\"@material-ui/icons/MailOutline\", {\n  default(v) {\n    MailIcon = v;\n  }\n\n}, 11);\nlet PhoneIcon;\nmodule.link(\"@material-ui/icons/Call\", {\n  default(v) {\n    PhoneIcon = v;\n  }\n\n}, 12);\nlet MenuIcon;\nmodule.link(\"@material-ui/icons/Menu\", {\n  default(v) {\n    MenuIcon = v;\n  }\n\n}, 13);\nlet WaitingIcon;\nmodule.link(\"@material-ui/icons/HourglassEmpty\", {\n  default(v) {\n    WaitingIcon = v;\n  }\n\n}, 14);\nlet ArrowUp;\nmodule.link(\"@material-ui/icons/KeyboardArrowUp\", {\n  default(v) {\n    ArrowUp = v;\n  }\n\n}, 15);\nlet DropDownCircle;\nmodule.link(\"@material-ui/icons/ArrowDropDownCircle\", {\n  default(v) {\n    DropDownCircle = v;\n  }\n\n}, 16);\nlet ArrowDown;\nmodule.link(\"@material-ui/icons/KeyboardArrowDown\", {\n  default(v) {\n    ArrowDown = v;\n  }\n\n}, 17);\nlet ArrowLeft;\nmodule.link(\"@material-ui/icons/KeyboardArrowLeft\", {\n  default(v) {\n    ArrowLeft = v;\n  }\n\n}, 18);\nlet ArrowRight;\nmodule.link(\"@material-ui/icons/KeyboardArrowRight\", {\n  default(v) {\n    ArrowRight = v;\n  }\n\n}, 19);\nlet SearchIcon;\nmodule.link(\"@material-ui/icons/Search\", {\n  default(v) {\n    SearchIcon = v;\n  }\n\n}, 20);\nlet PowerOffIcon;\nmodule.link(\"@material-ui/icons/PowerSettingsNew\", {\n  default(v) {\n    PowerOffIcon = v;\n  }\n\n}, 21);\nlet LockOpen;\nmodule.link(\"@material-ui/icons/LockOpen\", {\n  default(v) {\n    LockOpen = v;\n  }\n\n}, 22);\nlet Lock;\nmodule.link(\"@material-ui/icons/Lock\", {\n  default(v) {\n    Lock = v;\n  }\n\n}, 23);\nlet BuildingIcon;\nmodule.link(\"@material-ui/icons/Business\", {\n  default(v) {\n    BuildingIcon = v;\n  }\n\n}, 24);\nlet HomeIcon;\nmodule.link(\"@material-ui/icons/Home\", {\n  default(v) {\n    HomeIcon = v;\n  }\n\n}, 25);\nlet AssessmentIcon;\nmodule.link(\"@material-ui/icons/Assessment\", {\n  default(v) {\n    AssessmentIcon = v;\n  }\n\n}, 26);\nlet FolderIcon;\nmodule.link(\"@material-ui/icons/FolderOpen\", {\n  default(v) {\n    FolderIcon = v;\n  }\n\n}, 27);\nlet Person;\nmodule.link(\"@material-ui/icons/Person\", {\n  default(v) {\n    Person = v;\n  }\n\n}, 28);\nlet FaceIcon;\nmodule.link(\"@material-ui/icons/Face\", {\n  default(v) {\n    FaceIcon = v;\n  }\n\n}, 29);\nlet Eye;\nmodule.link(\"@material-ui/icons/Visibility\", {\n  default(v) {\n    Eye = v;\n  }\n\n}, 30);\nlet EyeCrossed;\nmodule.link(\"@material-ui/icons/VisibilityOff\", {\n  default(v) {\n    EyeCrossed = v;\n  }\n\n}, 31);\nlet SortIcon;\nmodule.link(\"@material-ui/icons/Sort\", {\n  default(v) {\n    SortIcon = v;\n  }\n\n}, 32);\nlet MoreIcon;\nmodule.link(\"@material-ui/icons/MoreHoriz\", {\n  default(v) {\n    MoreIcon = v;\n  }\n\n}, 33);\nlet AccountCircle;\nmodule.link(\"@material-ui/icons/AccountCircle\", {\n  default(v) {\n    AccountCircle = v;\n  }\n\n}, 34);\nlet Apps;\nmodule.link(\"@material-ui/icons/Apps\", {\n  default(v) {\n    Apps = v;\n  }\n\n}, 35);\nlet DollarSign;\nmodule.link(\"@material-ui/icons/AttachMoney\", {\n  default(v) {\n    DollarSign = v;\n  }\n\n}, 36);\nlet ContactMail;\nmodule.link(\"@material-ui/icons/ContactMail\", {\n  default(v) {\n    ContactMail = v;\n  }\n\n}, 37);\nlet People;\nmodule.link(\"@material-ui/icons/People\", {\n  default(v) {\n    People = v;\n  }\n\n}, 38);\nlet DeveloperMode;\nmodule.link(\"@material-ui/icons/DeveloperMode\", {\n  default(v) {\n    DeveloperMode = v;\n  }\n\n}, 39);\nlet ErrorIcon;\nmodule.link(\"@material-ui/icons/Error\", {\n  default(v) {\n    ErrorIcon = v;\n  }\n\n}, 40);\nlet CheckCircle;\nmodule.link(\"@material-ui/icons/CheckCircle\", {\n  default(v) {\n    CheckCircle = v;\n  }\n\n}, 41);\nlet RadioButtonChecked;\nmodule.link(\"@material-ui/icons/RadioButtonChecked\", {\n  default(v) {\n    RadioButtonChecked = v;\n  }\n\n}, 42);\nlet Edit;\nmodule.link(\"@material-ui/icons/Edit\", {\n  default(v) {\n    Edit = v;\n  }\n\n}, 43);\nlet TrendingUp;\nmodule.link(\"@material-ui/icons/TrendingUp\", {\n  default(v) {\n    TrendingUp = v;\n  }\n\n}, 44);\nlet TrendingDown;\nmodule.link(\"@material-ui/icons/TrendingDown\", {\n  default(v) {\n    TrendingDown = v;\n  }\n\n}, 45);\nlet TrendingFlat;\nmodule.link(\"@material-ui/icons/TrendingFlat\", {\n  default(v) {\n    TrendingFlat = v;\n  }\n\n}, 46);\nlet Star;\nmodule.link(\"@material-ui/icons/Star\", {\n  default(v) {\n    Star = v;\n  }\n\n}, 47);\nlet StarHalf;\nmodule.link(\"@material-ui/icons/StarHalf\", {\n  default(v) {\n    StarHalf = v;\n  }\n\n}, 48);\nlet StarEmpty;\nmodule.link(\"@material-ui/icons/StarBorder\", {\n  default(v) {\n    StarEmpty = v;\n  }\n\n}, 49);\nlet PersonAdd;\nmodule.link(\"@material-ui/icons/PersonAdd\", {\n  default(v) {\n    PersonAdd = v;\n  }\n\n}, 50);\nlet OfflinePin;\nmodule.link(\"@material-ui/icons/OfflinePin\", {\n  default(v) {\n    OfflinePin = v;\n  }\n\n}, 51);\nlet Save;\nmodule.link(\"@material-ui/icons/Save\", {\n  default(v) {\n    Save = v;\n  }\n\n}, 52);\nlet SupervisorAccount;\nmodule.link(\"@material-ui/icons/SupervisedUserCircle\", {\n  default(v) {\n    SupervisorAccount = v;\n  }\n\n}, 53);\nlet FlashOn;\nmodule.link(\"@material-ui/icons/FlashOn\", {\n  default(v) {\n    FlashOn = v;\n  }\n\n}, 54);\nlet Report;\nmodule.link(\"@material-ui/icons/Report\", {\n  default(v) {\n    Report = v;\n  }\n\n}, 55);\nlet DeleteForever;\nmodule.link(\"@material-ui/icons/DeleteForever\", {\n  default(v) {\n    DeleteForever = v;\n  }\n\n}, 56);\nlet DeleteSweep;\nmodule.link(\"@material-ui/icons/DeleteSweep\", {\n  default(v) {\n    DeleteSweep = v;\n  }\n\n}, 57);\nlet GroupAdd;\nmodule.link(\"@material-ui/icons/GroupAdd\", {\n  default(v) {\n    GroupAdd = v;\n  }\n\n}, 58);\nlet ExpandMoreIcon;\nmodule.link(\"@material-ui/icons/ExpandMore\", {\n  default(v) {\n    ExpandMoreIcon = v;\n  }\n\n}, 59);\nlet SettingsBackupRestore;\nmodule.link(\"@material-ui/icons/SettingsBackupRestore\", {\n  default(v) {\n    SettingsBackupRestore = v;\n  }\n\n}, 60);\nlet FilterList;\nmodule.link(\"@material-ui/icons/FilterList\", {\n  default(v) {\n    FilterList = v;\n  }\n\n}, 61);\nlet ArrowDownward;\nmodule.link(\"@material-ui/icons/ArrowDownward\", {\n  default(v) {\n    ArrowDownward = v;\n  }\n\n}, 62);\nlet ArrowUpward;\nmodule.link(\"@material-ui/icons/ArrowUpward\", {\n  default(v) {\n    ArrowUpward = v;\n  }\n\n}, 63);\nlet Domain;\nmodule.link(\"@material-ui/icons/Domain\", {\n  default(v) {\n    Domain = v;\n  }\n\n}, 64);\nlet Info;\nmodule.link(\"@material-ui/icons/Info\", {\n  default(v) {\n    Info = v;\n  }\n\n}, 65);\nlet AttachFile;\nmodule.link(\"@material-ui/icons/AttachFile\", {\n  default(v) {\n    AttachFile = v;\n  }\n\n}, 66);\nlet CloudDownload;\nmodule.link(\"@material-ui/icons/CloudDownload\", {\n  default(v) {\n    CloudDownload = v;\n  }\n\n}, 67);\nlet LocalHospital;\nmodule.link(\"@material-ui/icons/LocalHospital\", {\n  default(v) {\n    LocalHospital = v;\n  }\n\n}, 68);\nlet Help;\nmodule.link(\"@material-ui/icons/Help\", {\n  default(v) {\n    Help = v;\n  }\n\n}, 69);\nlet MonetizationOn;\nmodule.link(\"@material-ui/icons/MonetizationOn\", {\n  default(v) {\n    MonetizationOn = v;\n  }\n\n}, 70);\nlet InsertChart;\nmodule.link(\"@material-ui/icons/InsertChart\", {\n  default(v) {\n    InsertChart = v;\n  }\n\n}, 71);\nlet Image;\nmodule.link(\"@material-ui/icons/Image\", {\n  default(v) {\n    Image = v;\n  }\n\n}, 72);\nlet Delete;\nmodule.link(\"@material-ui/icons/Delete\", {\n  default(v) {\n    Delete = v;\n  }\n\n}, 73);\nlet Phonelink;\nmodule.link(\"@material-ui/icons/Phonelink\", {\n  default(v) {\n    Phonelink = v;\n  }\n\n}, 74);\nlet OpenInNew;\nmodule.link(\"@material-ui/icons/OpenInNew\", {\n  default(v) {\n    OpenInNew = v;\n  }\n\n}, 75);\nlet Add;\nmodule.link(\"@material-ui/icons/Add\", {\n  default(v) {\n    Add = v;\n  }\n\n}, 76);\nlet Settings;\nmodule.link(\"@material-ui/icons/Settings\", {\n  default(v) {\n    Settings = v;\n  }\n\n}, 77);\nlet Event;\nmodule.link(\"@material-ui/icons/Event\", {\n  default(v) {\n    Event = v;\n  }\n\n}, 78);\nlet Computer;\nmodule.link(\"@material-ui/icons/Computer\", {\n  default(v) {\n    Computer = v;\n  }\n\n}, 79);\nlet Notifications;\nmodule.link(\"@material-ui/icons/Notifications\", {\n  default(v) {\n    Notifications = v;\n  }\n\n}, 80);\nlet Snooze;\nmodule.link(\"@material-ui/icons/Snooze\", {\n  default(v) {\n    Snooze = v;\n  }\n\n}, 81);\nlet DragHandle;\nmodule.link(\"@material-ui/icons/DragHandle\", {\n  default(v) {\n    DragHandle = v;\n  }\n\n}, 82);\nlet PriorityHigh;\nmodule.link(\"@material-ui/icons/PriorityHigh\", {\n  default(v) {\n    PriorityHigh = v;\n  }\n\n}, 83);\nconst iconMap = {\n  close: CloseIcon,\n  check: CheckIcon,\n  add: AddIcon,\n  addBasic: Add,\n  remove: RemoveIcon,\n  warning: WarningIcon,\n  menu: MenuIcon,\n  forum: ForumIcon,\n  mail: MailIcon,\n  phone: PhoneIcon,\n  waiting: WaitingIcon,\n  up: ArrowUp,\n  down: ArrowDown,\n  right: ArrowRight,\n  left: ArrowLeft,\n  dropdown: DropDownCircle,\n  search: SearchIcon,\n  powerOff: PowerOffIcon,\n  lock: Lock,\n  lockOpen: LockOpen,\n  home: HomeIcon,\n  building: BuildingIcon,\n  dashboard: AssessmentIcon,\n  folder: FolderIcon,\n  loop: LoopIcon,\n  'loop-spin': {\n    component: LoopIcon,\n    props: {\n      className: 'fa-spin'\n    }\n  },\n  person: Person,\n  face: FaceIcon,\n  eye: Eye,\n  eyeCrossed: EyeCrossed,\n  sort: SortIcon,\n  more: MoreIcon,\n  star: Star,\n  starHalf: StarHalf,\n  starEmpty: StarEmpty,\n  accountCircle: AccountCircle,\n  app: Apps,\n  personAdd: PersonAdd,\n  offlinePin: OfflinePin,\n  dollarSign: DollarSign,\n  contactMail: ContactMail,\n  people: People,\n  developerMode: DeveloperMode,\n  save: Save,\n  supervisorAccount: SupervisorAccount,\n  error: ErrorIcon,\n  checkCircle: CheckCircle,\n  radioButtonChecked: RadioButtonChecked,\n  flash: FlashOn,\n  report: Report,\n  deleteForever: DeleteForever,\n  deleteSweep: DeleteSweep,\n  groupAdd: GroupAdd,\n  edit: Edit,\n  trendingUp: TrendingUp,\n  trendingDown: TrendingDown,\n  trendingFlat: TrendingFlat,\n  expandMore: ExpandMoreIcon,\n  backupRestore: SettingsBackupRestore,\n  filter: FilterList,\n  arrowUp: ArrowUpward,\n  arrowDown: ArrowDownward,\n  domain: Domain,\n  info: Info,\n  attachFile: AttachFile,\n  download: CloudDownload,\n  health: LocalHospital,\n  help: Help,\n  monetizationOn: MonetizationOn,\n  chart: InsertChart,\n  image: Image,\n  delete: Delete,\n  phoneLink: Phonelink,\n  openInNew: OpenInNew,\n  settings: Settings,\n  event: Event,\n  computer: Computer,\n  notifications: Notifications,\n  snooze: Snooze,\n  dragHandle: DragHandle,\n  priorityHigh: PriorityHigh\n};\nconst Icon = React.forwardRef((_ref, ref) => {\n  let {\n    type,\n    size,\n    tooltip,\n    tooltipPlacement,\n    style = {},\n    badgeContent\n  } = _ref,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"type\", \"size\", \"tooltip\", \"tooltipPlacement\", \"style\", \"badgeContent\"]);\n  const iconStyle = (0, _objectSpread2.default)({}, style, size ? {\n    width: size,\n    height: size\n  } : {});\n\n  if (type !== null && typeof type === 'object') {\n    return React.cloneElement(type, {\n      style: iconStyle\n    });\n  }\n\n  const MyIcon = iconMap[type];\n\n  if (!MyIcon) {\n    throw new Error(`invalid icon type: ${type}`);\n  } else if (MyIcon.component) {\n    return React.createElement(MyIcon.component, (0, _extends2.default)({}, MyIcon.props, props, iconStyle));\n  }\n\n  let icon = React.createElement(MyIcon, (0, _extends2.default)({\n    ref: ref,\n    style: iconStyle\n  }, props));\n\n  if (tooltip) {\n    icon = React.createElement(Tooltip, {\n      placement: tooltipPlacement,\n      title: tooltip,\n      enterTouchDelay: 0\n    }, icon);\n  }\n\n  if (badgeContent) {\n    icon = React.createElement(Badge, {\n      badgeContent: badgeContent,\n      color: \"error\"\n    }, icon);\n  }\n\n  return icon;\n});\nIcon.propTypes = {\n  size: PropTypes.number,\n  type: PropTypes.node.isRequired\n};\nIcon.defaultProps = {\n  size: undefined\n};\nmodule.exportDefault(Icon);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/Icon/index.js                                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./Icon\", {\n  default: \"default\"\n}, 0);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"Link\":{\"Link.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/Link/Link.jsx                                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet DefaultLink;\nmodule.link(\"react-router-dom\", {\n  Link(v) {\n    DefaultLink = v;\n  }\n\n}, 0);\nlet withProps;\nmodule.link(\"recompose\", {\n  withProps(v) {\n    withProps = v;\n  }\n\n}, 1);\nmodule.exportDefault(withProps(({\n  disabled,\n  onClick\n}) => ({\n  onClick: disabled ? e => e.preventDefault() : onClick\n}))(DefaultLink));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/Link/index.js                                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./Link\", {\n  default: \"default\"\n}, 0);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"Loading\":{\"Loading.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/Loading/Loading.jsx                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet cx;\nmodule.link(\"classnames\", {\n  default(v) {\n    cx = v;\n  }\n\n}, 1);\n\n// http://codepen.io/TaniaLD/pen/oKxep\nconst Loading = ({\n  small\n}) => // Fade it in so that the loader doesn't show up if loading is super fast\nReact.createElement(\"div\", {\n  className: cx('loading-container animated fadeIn', {\n    small\n  })\n}, React.createElement(\"div\", {\n  className: \"loading-box\"\n}, React.createElement(\"div\", {\n  className: \"loader2\"\n})));\n\nmodule.exportDefault(Loading);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/Loading/index.js                                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./Loading\", {\n  default: \"default\"\n}, 0);\nmodule.link(\"./withLoading\", {\n  default: \"withLoading\"\n}, 1);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"withLoading.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/Loading/withLoading.jsx                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet branch, renderComponent;\nmodule.link(\"recompose\", {\n  branch(v) {\n    branch = v;\n  },\n\n  renderComponent(v) {\n    renderComponent = v;\n  }\n\n}, 1);\nlet Loading;\nmodule.link(\"./Loading\", {\n  default(v) {\n    Loading = v;\n  }\n\n}, 2);\nmodule.exportDefault((small, disableVar) => branch((_ref) => {\n  let {\n    loading,\n    isLoading\n  } = _ref,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"loading\", \"isLoading\"]);\n  return (loading || isLoading) && (!disableVar || !props[disableVar]);\n}, renderComponent(() => React.createElement(Loading, {\n  small: small\n}))));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"Material\":{\"Dialog.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/Material/Dialog.jsx                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet MuiDialog;\nmodule.link(\"@material-ui/core/Dialog\", {\n  default(v) {\n    MuiDialog = v;\n  }\n\n}, 2);\nlet DialogActions;\nmodule.link(\"@material-ui/core/DialogActions\", {\n  default(v) {\n    DialogActions = v;\n  }\n\n}, 3);\nlet DialogContent;\nmodule.link(\"@material-ui/core/DialogContent\", {\n  default(v) {\n    DialogContent = v;\n  }\n\n}, 4);\nlet DialogContentText;\nmodule.link(\"@material-ui/core/DialogContentText\", {\n  default(v) {\n    DialogContentText = v;\n  }\n\n}, 5);\nlet DialogTitle;\nmodule.link(\"@material-ui/core/DialogTitle\", {\n  default(v) {\n    DialogTitle = v;\n  }\n\n}, 6);\n\nconst Dialog = props => {\n  const {\n    title,\n    actions,\n    children,\n    important,\n    text\n  } = props,\n        otherProps = (0, _objectWithoutProperties2.default)(props, [\"title\", \"actions\", \"children\", \"important\", \"text\"]);\n  return React.createElement(MuiDialog, (0, _extends2.default)({\n    disableBackdropClick: important,\n    disableEscapeKeyDown: important\n  }, otherProps), title && React.createElement(DialogTitle, null, title), React.createElement(DialogContent, null, text && React.createElement(DialogContentText, null, text), children), actions && React.createElement(DialogActions, null, actions));\n};\n\nDialog.propTypes = {\n  // A dialog can only be closed using the buttons if this boolean is set\n  actions: PropTypes.array,\n  children: PropTypes.node,\n  important: PropTypes.bool,\n  text: PropTypes.node,\n  title: PropTypes.node\n};\nDialog.defaultProps = {\n  important: false,\n  title: undefined,\n  text: undefined,\n  actions: undefined,\n  children: undefined\n};\nmodule.exportDefault(Dialog);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"FormControl.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/Material/FormControl.jsx                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet FormControl;\nmodule.link(\"@material-ui/core/FormControl\", {\n  default(v) {\n    FormControl = v;\n  }\n\n}, 1);\nmodule.exportDefault(props => React.createElement(FormControl, (0, _extends2.default)({\n  variant: \"outlined\"\n}, props)));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"FormHelperText.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/Material/FormHelperText.jsx                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet FormHelperText;\nmodule.link(\"@material-ui/core/FormHelperText\", {\n  default(v) {\n    FormHelperText = v;\n  }\n\n}, 1);\nmodule.exportDefault(props => React.createElement(FormHelperText, (0, _extends2.default)({\n  variant: \"outlined\"\n}, props)));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Input.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/Material/Input.jsx                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"@material-ui/core/OutlinedInput\", {\n  default: \"default\"\n}, 0);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"InputAdornment.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/Material/InputAdornment.jsx                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet InputAdornment;\nmodule.link(\"@material-ui/core/InputAdornment\", {\n  default(v) {\n    InputAdornment = v;\n  }\n\n}, 1);\nmodule.exportDefault(props => React.createElement(InputAdornment, props));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"InputLabel.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/Material/InputLabel.jsx                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nmodule.export({\n  useInputLabelWidth: () => useInputLabelWidth\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet InputLabel;\nmodule.link(\"@material-ui/core/InputLabel\", {\n  default(v) {\n    InputLabel = v;\n  }\n\n}, 1);\nmodule.exportDefault(React.forwardRef((props, ref) => React.createElement(InputLabel, (0, _extends2.default)({\n  variant: \"outlined\",\n  ref: ref\n}, props))));\n\nconst useInputLabelWidth = () => {\n  const inputLabelRef = React.useRef(null);\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  React.useEffect(() => {\n    if (inputLabelRef && inputLabelRef.current) {\n      setLabelWidth(inputLabelRef.current.offsetWidth);\n    }\n  }, []);\n  return {\n    inputLabelRef,\n    labelWidth\n  };\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Radio.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/Material/Radio.jsx                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"@material-ui/core/Radio\", {\n  default: \"default\"\n}, 0);\nmodule.link(\"@material-ui/core/RadioGroup\", {\n  default: \"RadioGroup\"\n}, 1);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"MissingDoc\":{\"MissingDoc.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/MissingDoc/MissingDoc.jsx                                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React, Component;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet Link;\nmodule.link(\"../Link\", {\n  default(v) {\n    Link = v;\n  }\n\n}, 1);\nlet T;\nmodule.link(\"../Translation\", {\n  default(v) {\n    T = v;\n  }\n\n}, 2);\nlet Button;\nmodule.link(\"../Button\", {\n  default(v) {\n    Button = v;\n  }\n\n}, 3);\nlet Loading;\nmodule.link(\"../Loading\", {\n  default(v) {\n    Loading = v;\n  }\n\n}, 4);\n\nclass MissingDoc extends Component {\n  constructor() {\n    super();\n    this.state = {\n      render: false\n    };\n  }\n\n  componentDidMount() {\n    // Set a timeout to allow subscriptions to refetch data before\n    // showing the missingdoc component\n    // 500ms is chosen because it should catch most subscription refreshes\n    // on regular connections\n    setTimeout(() => {\n      this.setState({\n        render: true\n      });\n    }, 500);\n  }\n\n  render() {\n    const {\n      render\n    } = this.state;\n\n    if (!render) {\n      return React.createElement(Loading, null);\n    }\n\n    return React.createElement(\"div\", {\n      className: \"flex-col center animated jackInTheBox\"\n    }, React.createElement(\"div\", {\n      className: \"description\"\n    }, React.createElement(\"p\", null, React.createElement(T, {\n      id: \"MissingDoc.text\"\n    }))), React.createElement(\"div\", {\n      className: \"flex center\"\n    }, React.createElement(Link, {\n      to: \"/\",\n      className: \"home-link\"\n    }, React.createElement(Button, {\n      raised: true,\n      color: \"secondary\"\n    }, React.createElement(T, {\n      id: \"MissingDoc.redirectHome\"\n    })))));\n  }\n\n}\n\nmodule.exportDefault(MissingDoc);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/MissingDoc/index.js                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./MissingDoc\", {\n  default: \"default\"\n}, 0);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"OfferList\":{\"feedbackHelpers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/OfferList/feedbackHelpers.js                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  FEEDBACK_OPTIONS: () => FEEDBACK_OPTIONS,\n  FEEDBACK_OPTIONS_SETTINGS: () => FEEDBACK_OPTIONS_SETTINGS,\n  makeFeedback: () => makeFeedback\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 1);\nconst FEEDBACK_OPTIONS = {\n  POSITIVE: 'POSITIVE',\n  NEGATIVE_NOT_COMPETITIVE: 'NEGATIVE_NOT_COMPETITIVE',\n  NEGATIVE_WITHOUT_FOLLOW_UP: 'NEGATIVE_WITHOUT_FOLLOW_UP',\n  CUSTOM: 'CUSTOM'\n};\nconst FEEDBACK_OPTIONS_SETTINGS = {\n  [FEEDBACK_OPTIONS.POSITIVE]: {\n    enableComments: true,\n    enableOutro: true\n  },\n  [FEEDBACK_OPTIONS.NEGATIVE_NOT_COMPETITIVE]: {\n    enableComments: true,\n    enableOutro: true\n  },\n  [FEEDBACK_OPTIONS.NEGATIVE_WITHOUT_FOLLOW_UP]: {\n    enableComments: true,\n    enableCustomIntro: true,\n    enableOutro: true\n  },\n  [FEEDBACK_OPTIONS.CUSTOM]: {\n    enableCustomIntro: false,\n    enableComments: false,\n    enableOutro: false\n  }\n};\n\nconst greetings = ({\n  contactName,\n  formatMessage\n}) => formatMessage({\n  id: 'Feedback.greetings'\n}, {\n  contactName\n});\n\nconst introduction = ({\n  option,\n  borrowers,\n  singleBorrower,\n  address,\n  date,\n  formatMessage\n}) => {\n  if (singleBorrower) {\n    return formatMessage({\n      id: FEEDBACK_OPTIONS_SETTINGS[option].enableCustomIntro ? `Feedback.${option}.introduction.singleBorrower` : 'Feedback.introduction.singleBorrower'\n    }, {\n      borrower: borrowers[0].name,\n      address,\n      date\n    });\n  }\n\n  return formatMessage({\n    id: FEEDBACK_OPTIONS_SETTINGS[option].enableCustomIntro ? `Feedback.${option}.introduction.twoBorrowers` : 'Feedback.introduction.twoBorrowers'\n  }, {\n    borrower1: borrowers[0].name,\n    borrower2: borrowers[1].name,\n    address,\n    date\n  });\n};\n\nconst outro = ({\n  borrowers,\n  singleBorrower,\n  option,\n  formatMessage\n}) => {\n  if (singleBorrower) {\n    return formatMessage({\n      id: `Feedback.${option}.outro.singleBorrower`\n    }, {\n      borrower: borrowers[0].name,\n      singleBorrower: true\n    });\n  }\n\n  return formatMessage({\n    id: `Feedback.${option}.outro.twoBorrowers`\n  }, {\n    borrower1: borrowers[0].name,\n    borrower2: borrowers[1].name,\n    singleBorrower: false\n  });\n};\n\nconst closing = ({\n  assignee,\n  formatMessage\n}) => formatMessage({\n  id: 'Feedback.closing'\n}, {\n  assignee\n});\n\nconst makeFeedback = ({\n  model,\n  offer,\n  formatMessage\n}) => {\n  const {\n    option,\n    comments = [],\n    customFeedback = ''\n  } = model;\n  const {\n    lender: {\n      contact: {\n        firstName: contactName\n      },\n      loan: {\n        borrowers,\n        user: {\n          assignedEmployee\n        }\n      }\n    },\n    property,\n    createdAt\n  } = offer;\n  const {\n    firstName: assignee = 'e-Potek'\n  } = assignedEmployee || {};\n  const {\n    address1,\n    zipCode,\n    city\n  } = property || {};\n\n  if (!property || !address1 || !zipCode || !city) {\n    throw new Meteor.Error('No property or address');\n  }\n\n  const address = `${address1}, ${zipCode} ${city}`;\n\n  if (option === FEEDBACK_OPTIONS.CUSTOM) {\n    // Replace all returns into HTML\n    return customFeedback.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>');\n  }\n\n  let feedback = '';\n  const singleBorrower = borrowers.length === 1;\n\n  if (option) {\n    feedback = feedback.concat(greetings({\n      contactName,\n      formatMessage\n    }));\n    feedback = feedback.concat(introduction({\n      option,\n      borrowers,\n      singleBorrower,\n      address,\n      date: moment(createdAt).format('DD.MM.YYYY'),\n      formatMessage\n    }));\n    feedback = feedback.concat(formatMessage({\n      id: `Feedback.${option}.body`\n    }, {\n      singleBorrower\n    }));\n\n    if (comments.length && FEEDBACK_OPTIONS_SETTINGS[option].enableComments) {\n      feedback = feedback.concat(formatMessage({\n        id: `Feedback.${option}.comments`\n      }, {\n        singleBorrower\n      }));\n      feedback = feedback.concat('<ul>', comments.filter(x => x).map(comment => `<li><b>${comment}</b></li>`).join('\\n'), '</ul>');\n    }\n\n    if (FEEDBACK_OPTIONS_SETTINGS[option].enableOutro) {\n      feedback = feedback.concat(outro({\n        option,\n        singleBorrower,\n        borrowers,\n        formatMessage\n      }));\n    }\n\n    feedback = feedback.concat(closing({\n      assignee,\n      formatMessage\n    }));\n  }\n\n  return feedback;\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"PercentWithStatus\":{\"PercentWithStatus.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/PercentWithStatus/PercentWithStatus.jsx                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Percent;\nmodule.link(\"../Translation\", {\n  Percent(v) {\n    Percent = v;\n  }\n\n}, 1);\nlet StatusIcon;\nmodule.link(\"../StatusIcon\", {\n  default(v) {\n    StatusIcon = v;\n  }\n\n}, 2);\nlet SUCCESS, ERROR;\nmodule.link(\"../../api/constants\", {\n  SUCCESS(v) {\n    SUCCESS = v;\n  },\n\n  ERROR(v) {\n    ERROR = v;\n  }\n\n}, 3);\n\nconst PercentWithStatus = ({\n  value,\n  status = value >= 1 ? SUCCESS : ERROR,\n  id,\n  tooltip,\n  rounded\n}) => React.createElement(React.Fragment, null, Number.isNaN(value) ? '-' : React.createElement(Percent, {\n  value: value,\n  rounded: rounded\n}), !Number.isNaN(value) && React.createElement(StatusIcon, {\n  status: status,\n  className: \"icon\",\n  style: {\n    marginLeft: 4\n  },\n  tooltip: tooltip,\n  id: id\n}));\n\nmodule.exportDefault(PercentWithStatus);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/PercentWithStatus/index.js                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./PercentWithStatus\", {\n  default: \"default\"\n}, 0);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"StatusIcon\":{\"StatusIcon.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/StatusIcon/StatusIcon.jsx                                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet Tooltip;\nmodule.link(\"@material-ui/core/Tooltip\", {\n  default(v) {\n    Tooltip = v;\n  }\n\n}, 2);\nlet Icon;\nmodule.link(\"../Icon\", {\n  default(v) {\n    Icon = v;\n  }\n\n}, 3);\nlet SUCCESS, WARNING, ERROR;\nmodule.link(\"../../api/constants\", {\n  SUCCESS(v) {\n    SUCCESS = v;\n  },\n\n  WARNING(v) {\n    WARNING = v;\n  },\n\n  ERROR(v) {\n    ERROR = v;\n  }\n\n}, 4);\nlet colors;\nmodule.link(\"../../config/colors\", {\n  default(v) {\n    colors = v;\n  }\n\n}, 5);\nlet T;\nmodule.link(\"../Translation\", {\n  default(v) {\n    T = v;\n  }\n\n}, 6);\nconst styles = {\n  [SUCCESS]: {\n    color: colors.success,\n    fill: colors.success\n  },\n  [WARNING]: {\n    color: colors.warning,\n    fill: colors.warning\n  },\n  [ERROR]: {\n    color: colors.error,\n    fill: colors.error\n  }\n};\nconst StatusIcon = React.forwardRef((_ref, ref) => {\n  let {\n    id,\n    status,\n    style = {},\n    tooltip\n  } = _ref,\n      rest = (0, _objectWithoutProperties2.default)(_ref, [\"id\", \"status\", \"style\", \"tooltip\"]);\n\n  if (!status) {\n    return null;\n  }\n\n  const icon = React.createElement(Icon, (0, _extends2.default)({\n    type: status === SUCCESS ? 'checkCircle' : 'error',\n    style: (0, _objectSpread2.default)({}, styles[status], style),\n    ref: ref\n  }, rest));\n\n  if (tooltip) {\n    return React.createElement(Tooltip, {\n      title: typeof tooltip === 'object' ? tooltip : React.createElement(T, {\n        id: `StatusIconTooltip.${id}.${status}`\n      }),\n      placement: \"right\",\n      enterTouchDelay: 0\n    }, icon);\n  }\n\n  return icon;\n});\nStatusIcon.propTypes = {\n  status: PropTypes.oneOfType([PropTypes.string, PropTypes.bool])\n};\nStatusIcon.defaultProps = {\n  status: undefined\n};\nmodule.exportDefault(StatusIcon);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/StatusIcon/index.js                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./StatusIcon.jsx\", {\n  default: \"default\"\n}, 0);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"TextInput\":{\"TextInput.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/TextInput/TextInput.jsx                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nmodule.export({\n  getFinalPlaceholder: () => getFinalPlaceholder\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet injectIntl;\nmodule.link(\"react-intl\", {\n  injectIntl(v) {\n    injectIntl = v;\n  }\n\n}, 2);\nlet MaskedInput;\nmodule.link(\"react-text-mask\", {\n  default(v) {\n    MaskedInput = v;\n  }\n\n}, 3);\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 4);\nlet classnames;\nmodule.link(\"classnames\", {\n  default(v) {\n    classnames = v;\n  }\n\n}, 5);\nlet InputAdornment;\nmodule.link(\"../Material/InputAdornment\", {\n  default(v) {\n    InputAdornment = v;\n  }\n\n}, 6);\nlet FormHelperText;\nmodule.link(\"../Material/FormHelperText\", {\n  default(v) {\n    FormHelperText = v;\n  }\n\n}, 7);\nlet InputLabel, useInputLabelWidth;\nmodule.link(\"../Material/InputLabel\", {\n  default(v) {\n    InputLabel = v;\n  },\n\n  useInputLabelWidth(v) {\n    useInputLabelWidth = v;\n  }\n\n}, 8);\nlet FormControl;\nmodule.link(\"../Material/FormControl\", {\n  default(v) {\n    FormControl = v;\n  }\n\n}, 9);\nlet Input;\nmodule.link(\"../Material/Input\", {\n  default(v) {\n    Input = v;\n  }\n\n}, 10);\nlet swissFrancMask, percentMask;\nmodule.link(\"../../utils/textMasks\", {\n  swissFrancMask(v) {\n    swissFrancMask = v;\n  },\n\n  percentMask(v) {\n    percentMask = v;\n  }\n\n}, 11);\nlet toNumber;\nmodule.link(\"../../utils/conversionFunctions\", {\n  toNumber(v) {\n    toNumber = v;\n  }\n\n}, 12);\n\nconst getDefaults = ({\n  type,\n  id,\n  onChange,\n  value,\n  simpleOnChange\n}) => {\n  if (simpleOnChange) {\n    return {\n      onChangeHandler: onChange,\n      value\n    };\n  }\n\n  switch (type) {\n    case 'money':\n      return {\n        onChangeHandler: event => onChange(id, toNumber(event.target.value)),\n        showMask: true,\n        mask: swissFrancMask,\n        placeholder: 0,\n        value\n      };\n\n    case 'percent':\n      return {\n        onChangeHandler: event => onChange(id, Math.round(parseFloat(event.target.value) * 100) / 10000),\n        showMask: true,\n        mask: percentMask,\n        placeholder: '%',\n        value: (value * 100).toFixed(2)\n      };\n\n    case 'number':\n      return {\n        onChangeHandler: event => onChange(id, toNumber(event.target.value)),\n        showMask: false,\n        value\n      };\n\n    case 'date':\n      return {\n        onChangeHandler: event => onChange(id, event.target.value, event),\n        onDateChange: val => {\n          // This specific format should be used for the server to get the\n          // date in the right order\n          const date = moment(val).format('YYYY-MM-DD'); // Allow setting a date to null\n\n          onChange(id, val ? date : null, {});\n        },\n        showMask: false,\n        value: value ? moment(value) : null\n      };\n\n    default:\n      return {\n        // Pass event as third argument, for some components which need it\n        // like react-autosuggest\n        onChangeHandler: event => onChange(id, event.target.value, event),\n        showMask: false,\n        value\n      };\n  }\n};\n\nconst getFinalPlaceholder = ({\n  noIntl,\n  placeholder,\n  defaultPlaceholder,\n  intl,\n  type\n}) => {\n  let finalPlaceholder;\n\n  if (noIntl) {\n    finalPlaceholder = placeholder || defaultPlaceholder;\n  } else {\n    finalPlaceholder = placeholder && typeof placeholder === 'string' ? `${intl.formatMessage({\n      id: 'Forms.textInput.placeholderPrefix'\n    })} ${intl.formatMessage({\n      id: placeholder\n    })}` : defaultPlaceholder;\n  } // Ignore placeholder for money inputs, and just show the currency\n  // Showing an amount is confusing\n\n\n  if (type === 'money') {\n    finalPlaceholder = defaultPlaceholder;\n  }\n\n  return finalPlaceholder;\n};\n\nconst TextInput = props => {\n  const {\n    classes,\n    className,\n    error,\n    fullWidth,\n    id,\n    info,\n    inputComponent,\n    InputProps,\n    inputProps,\n    inputRef,\n    intl,\n    label,\n    labelStyle,\n    noIntl,\n    onChange,\n    placeholder,\n    simpleOnChange,\n    style,\n    type,\n    inputType,\n    inputLabelProps\n  } = props,\n        otherProps = (0, _objectWithoutProperties2.default)(props, [\"classes\", \"className\", \"error\", \"fullWidth\", \"id\", \"info\", \"inputComponent\", \"InputProps\", \"inputProps\", \"inputRef\", \"intl\", \"label\", \"labelStyle\", \"noIntl\", \"onChange\", \"placeholder\", \"simpleOnChange\", \"style\", \"type\", \"inputType\", \"inputLabelProps\"]);\n  const {\n    onChangeHandler,\n    onDateChange,\n    showMask,\n    mask,\n    placeholder: defaultPlaceholder,\n    value\n  } = getDefaults(props);\n  const {\n    inputLabelRef,\n    labelWidth\n  } = useInputLabelWidth(!!label);\n  return React.createElement(FormControl, {\n    error: error,\n    className: classnames('mui-text-input', className),\n    style: style,\n    fullWidth: fullWidth\n  }, label && React.createElement(InputLabel, (0, _extends2.default)({\n    ref: inputLabelRef,\n    htmlFor: id,\n    style: labelStyle\n  }, inputLabelProps), label), React.createElement(Input, (0, _extends2.default)({}, otherProps, {\n    labelWidth: labelWidth,\n    className: classes ? Object.values(classes).join(' ') : '',\n    id: id,\n    onChange: onChangeHandler,\n    type: inputType || 'text',\n    style: {\n      fontSize: 'inherit'\n    },\n    inputComponent: showMask ? MaskedInput : inputComponent || undefined,\n    inputProps: (0, _objectSpread2.default)({}, inputProps, InputProps, {\n      value,\n      placeholder: getFinalPlaceholder({\n        noIntl,\n        placeholder,\n        defaultPlaceholder,\n        intl,\n        type\n      }),\n      noValidate: true,\n      mask: mask || undefined,\n      pattern: mask ? '[0-9]*' : undefined,\n      onDateChange: inputType === 'date' ? onDateChange : undefined\n    }),\n    startAdornment: props.type === 'money' ? React.createElement(InputAdornment, {\n      position: \"start\"\n    }, \"CHF\") : null\n  })), info && React.createElement(FormHelperText, null, info));\n};\n\nTextInput.propTypes = {\n  error: PropTypes.bool,\n  id: PropTypes.string,\n  info: PropTypes.node,\n  inputComponent: PropTypes.func,\n  inputProps: PropTypes.object,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  noIntl: PropTypes.bool,\n  onChange: PropTypes.func,\n  placeholder: PropTypes.node,\n  simpleOnChange: PropTypes.bool,\n  // Removes all onChange modifications\n  type: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};\nTextInput.defaultProps = {\n  error: false,\n  id: undefined,\n  info: undefined,\n  inputComponent: null,\n  inputProps: undefined,\n  label: '',\n  noIntl: false,\n  onChange: undefined,\n  placeholder: undefined,\n  simpleOnChange: false,\n  type: undefined,\n  value: undefined\n};\nmodule.exportDefault(injectIntl(TextInput));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/TextInput/index.js                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./TextInput\", {\n  default: \"default\"\n}, 0);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"RadioButtons.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/components/RadioButtons.jsx                                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet Radio, RadioGroup;\nmodule.link(\"./Material/Radio\", {\n  default(v) {\n    Radio = v;\n  },\n\n  RadioGroup(v) {\n    RadioGroup = v;\n  }\n\n}, 2);\nlet FormLabel;\nmodule.link(\"@material-ui/core/FormLabel\", {\n  default(v) {\n    FormLabel = v;\n  }\n\n}, 3);\nlet FormControl;\nmodule.link(\"@material-ui/core/FormControl\", {\n  default(v) {\n    FormControl = v;\n  }\n\n}, 4);\nlet FormControlLabel;\nmodule.link(\"@material-ui/core/FormControlLabel\", {\n  default(v) {\n    FormControlLabel = v;\n  }\n\n}, 5);\nlet T;\nmodule.link(\"./Translation\", {\n  default(v) {\n    T = v;\n  }\n\n}, 6);\n\nconst safeChange = (value, id, onChange, options) => {\n  // If all options are booleans, transform the onChange handler's value\n  // to booleans\n  if (options.every(o => typeof o === 'boolean' || typeof o.id === 'boolean')) {\n    return onChange(id, value === 'true');\n  }\n\n  return onChange(id, value);\n}; // Cast value to strings, so that is plays nicely with material-ui,\n// in the onChange handler, convert back to boolean\n\n\nconst RadioButtons = ({\n  options,\n  onChange,\n  id,\n  intlPrefix,\n  value,\n  label,\n  style,\n  radioGroupStyle,\n  disabled\n}) => React.createElement(FormControl, {\n  style: style,\n  className: \"mui-radio-group\"\n}, React.isValidElement(label) && React.createElement(FormLabel, {\n  htmlFor: id\n}, label), React.createElement(RadioGroup, {\n  onChange: (event, newValue) => safeChange(newValue, id, onChange, options),\n  value: `${value}`,\n  name: id,\n  id: id,\n  className: \"radio-group flex\",\n  style: radioGroupStyle || {\n    justifyContent: 'flex-start',\n    flexDirection: 'row'\n  }\n}, options.map(option => React.createElement(FormControlLabel, {\n  control: React.createElement(Radio, {\n    className: \"radio\"\n  }),\n  key: option.id || option,\n  value: `${option.id !== undefined ? option.id : option}`,\n  label: option.label || React.createElement(T, {\n    id: `${intlPrefix}.${option}`\n  }),\n  disabled: disabled\n}))));\n\nRadioButtons.propTypes = {\n  disabled: PropTypes.bool,\n  id: PropTypes.string,\n  intlPrefix: PropTypes.string,\n  label: PropTypes.node,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired,\n  style: PropTypes.object,\n  value: PropTypes.any\n};\nRadioButtons.defaultProps = {\n  label: '',\n  style: {},\n  value: undefined,\n  intlPrefix: '',\n  disabled: false\n};\nmodule.exportDefault(RadioButtons);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"fixtures\":{\"promotionDemo\":{\"data.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/fixtures/promotionDemo/data.js                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  properties: () => properties\n});\nconst properties = [{\n  name: '2.01',\n  value: 1290000,\n  lots: ['2', '3', 'a']\n}, {\n  name: '2.02',\n  value: 920000,\n  lots: ['4', '5', 'b']\n}, {\n  name: '2.03',\n  value: 950000,\n  lots: ['6', '7', 'c']\n}, {\n  name: '2.04',\n  value: 1340000,\n  lots: ['8', '9', 'd']\n}, {\n  name: '3.01',\n  value: 1360000,\n  lots: ['10', '11', 'e']\n}, {\n  name: '3.02',\n  value: 920000,\n  lots: ['12', '13', 'f']\n}, {\n  name: '3.03',\n  value: 970000,\n  lots: ['14', '15', 'g']\n}, {\n  name: '3.04',\n  value: 1410000,\n  lots: ['16', '17', 'h']\n}, {\n  name: '4.01',\n  value: 1370000,\n  lots: ['18', '19', 'i']\n}, {\n  name: '4.02',\n  value: 955000,\n  lots: ['1', 'j']\n}, {\n  name: '4.03',\n  value: 1460000,\n  lots: ['20', '21', 'k']\n}];\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"promotionDemoFixtures.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/fixtures/promotionDemo/promotionDemoFixtures.js                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  createPromotionDemo: () => createPromotionDemo\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 1);\nlet Roles;\nmodule.link(\"meteor/alanning:roles\", {\n  Roles(v) {\n    Roles = v;\n  }\n\n}, 2);\nlet range;\nmodule.link(\"lodash/range\", {\n  default(v) {\n    range = v;\n  }\n\n}, 3);\nlet random;\nmodule.link(\"lodash/random\", {\n  default(v) {\n    random = v;\n  }\n\n}, 4);\nlet shuffle;\nmodule.link(\"lodash/shuffle\", {\n  default(v) {\n    shuffle = v;\n  }\n\n}, 5);\nlet faker;\nmodule.link(\"faker/locale/fr\", {\n  default(v) {\n    faker = v;\n  }\n\n}, 6);\nlet LoanService;\nmodule.link(\"../../api/loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 7);\nlet PromotionService;\nmodule.link(\"../../api/promotions/server/PromotionService\", {\n  default(v) {\n    PromotionService = v;\n  }\n\n}, 8);\nlet UserService;\nmodule.link(\"../../api/users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 9);\nlet PromotionOptionService;\nmodule.link(\"../../api/promotionOptions/server/PromotionOptionService\", {\n  default(v) {\n    PromotionOptionService = v;\n  }\n\n}, 10);\nlet PromotionLotService;\nmodule.link(\"../../api/promotionLots/server/PromotionLotService\", {\n  default(v) {\n    PromotionLotService = v;\n  }\n\n}, 11);\nlet LotService;\nmodule.link(\"../../api/lots/server/LotService\", {\n  default(v) {\n    LotService = v;\n  }\n\n}, 12);\nlet LOT_TYPES, PROMOTION_TYPES, PROMOTION_STATUS, ROLES;\nmodule.link(\"../../api/constants\", {\n  LOT_TYPES(v) {\n    LOT_TYPES = v;\n  },\n\n  PROMOTION_TYPES(v) {\n    PROMOTION_TYPES = v;\n  },\n\n  PROMOTION_STATUS(v) {\n    PROMOTION_STATUS = v;\n  },\n\n  ROLES(v) {\n    ROLES = v;\n  }\n\n}, 13);\nlet properties;\nmodule.link(\"./data\", {\n  properties(v) {\n    properties = v;\n  }\n\n}, 14);\nconst DEMO_PROMOTION = {\n  name: 'Pré Polly',\n  type: PROMOTION_TYPES.SHARE,\n  status: PROMOTION_STATUS.OPEN,\n  address1: 'Chemin de Pré-Polly 1',\n  zipCode: 1233,\n  city: 'Bernex',\n  contacts: [{\n    name: 'Marc Steiner',\n    title: 'Commercialisation',\n    email: 'marc@test.com',\n    phoneNumber: '+41 21 800 90 70'\n  }, {\n    name: 'Léo Dind',\n    title: 'Architecte',\n    email: 'leo@test.com',\n    phoneNumber: '+41 58 999 21 21'\n  }]\n};\n\nconst createLots = promotionId => {\n  properties.forEach(({\n    name,\n    value,\n    lots\n  }) => {\n    const promotionLotId = PromotionService.insertPromotionProperty({\n      promotionId,\n      property: {\n        name,\n        value\n      }\n    });\n    const lotIds = lots.map(lotName => LotService.insert({\n      name: lotName,\n      value: 0,\n      type: Number.parseInt(lotName, 10) > 0 ? LOT_TYPES.PARKING_CAR : LOT_TYPES.BASEMENT\n    }));\n    lotIds.forEach(lotId => PromotionLotService.addLink({\n      id: promotionLotId,\n      linkName: 'lots',\n      linkId: lotId\n    }));\n    lotIds.forEach(lotId => PromotionService.addLink({\n      id: promotionId,\n      linkName: 'lots',\n      linkId: lotId\n    }));\n  });\n};\n\nconst getDistinctRandomValues = (arr, amount) => shuffle(arr).slice(0, amount);\n\nconst addPromotionOptions = (loanId, promotion) => {\n  const amount = random(1, 3);\n  return getDistinctRandomValues(promotion.promotionLotLinks, amount).map(({\n    _id: promotionLotId\n  }) => {\n    const promotionOptionId = PromotionOptionService.insert({\n      loanId,\n      promotionLotId\n    });\n    return promotionOptionId;\n  });\n};\n\nconst createUsers = ({\n  users,\n  promotionId,\n  promotion,\n  withInvitedBy\n}) => Promise.asyncApply(() => {\n  console.log('creating users');\n  const promises = [];\n\n  for (let i = 0; i < range(users).length; i += 1) {\n    console.log(`creating user ${i + 1}`);\n    const user = {\n      email: `user-${i}@e-potek.ch`,\n      firstName: faker.name.firstName(),\n      lastName: faker.name.lastName(),\n      phoneNumber: faker.phone.phoneNumber()\n    };\n    const promotionCustomerId = UserService.createUser({\n      role: ROLES.USER,\n      options: {\n        email: user.email,\n        password: '12345'\n      }\n    });\n    UserService.update({\n      userId: promotionCustomerId,\n      object: {\n        firstName: user.firstName,\n        lastName: user.lastName,\n        phoneNumbers: [user.phoneNumber]\n      }\n    });\n    promises.push(PromotionService.inviteUser((0, _objectSpread2.default)({\n      promotionId,\n      userId: promotionCustomerId,\n      sendInvitation: false\n    }, withInvitedBy ? {\n      pro: {\n        _id: Meteor.userId()\n      }\n    } : {})).then(loanId => {\n      const promotionOptionIds = addPromotionOptions(loanId, promotion);\n      LoanService.setPromotionPriorityOrder({\n        loanId,\n        promotionId,\n        priorityOrder: promotionOptionIds\n      });\n    }));\n  }\n\n  Promise.await(Promise.all(promises));\n});\n\nconst createPromotionDemo = (userId, addCurrentUser, withPromotionOptions, users, withInvitedBy = false) => Promise.asyncApply(() => {\n  console.log('Creating promotion demo...');\n  const promotionId = PromotionService.insert({\n    promotion: DEMO_PROMOTION,\n    userId\n  });\n  console.log('creating lots');\n  createLots(promotionId);\n  const promotion = PromotionService.get(promotionId);\n\n  if (addCurrentUser) {\n    console.log('Adding current user');\n    const loanId = Promise.await(PromotionService.inviteUser({\n      promotionId,\n      userId: Meteor.userId(),\n      sendInvitation: false\n    }));\n\n    if (withPromotionOptions) {\n      const promotionOptionIds = addPromotionOptions(loanId, promotion);\n      LoanService.setPromotionPriorityOrder({\n        loanId,\n        promotionId,\n        priorityOrder: promotionOptionIds\n      });\n    }\n  }\n\n  Promise.await(createUsers({\n    users,\n    promotionId,\n    promotion,\n    withInvitedBy\n  }));\n  console.log('Done creating promotion');\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"promotionFixturesMethods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/fixtures/promotionDemo/promotionFixturesMethods.js                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet createPromotionDemo;\nmodule.link(\"./promotionDemoFixtures\", {\n  createPromotionDemo(v) {\n    createPromotionDemo = v;\n  }\n\n}, 1);\nMeteor.methods({\n  createDemoPromotion({\n    addCurrentUser,\n    withPromotionOptions,\n    users,\n    withInvitedBy\n  } = {}) {\n    createPromotionDemo(this.userId, addCurrentUser, withPromotionOptions, Number.parseInt(users, 10), withInvitedBy);\n  }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"fixtureMethods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/fixtures/server/fixtureMethods.js                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 1);\nlet range;\nmodule.link(\"lodash/range\", {\n  default(v) {\n    range = v;\n  }\n\n}, 2);\nlet LoanService;\nmodule.link(\"../../api/loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 3);\nlet STEPS, STEP_ORDER, ROLES, PURCHASE_TYPE, APPLICATION_TYPES, ORGANISATION_TYPES;\nmodule.link(\"../../api/constants\", {\n  STEPS(v) {\n    STEPS = v;\n  },\n\n  STEP_ORDER(v) {\n    STEP_ORDER = v;\n  },\n\n  ROLES(v) {\n    ROLES = v;\n  },\n\n  PURCHASE_TYPE(v) {\n    PURCHASE_TYPE = v;\n  },\n\n  APPLICATION_TYPES(v) {\n    APPLICATION_TYPES = v;\n  },\n\n  ORGANISATION_TYPES(v) {\n    ORGANISATION_TYPES = v;\n  }\n\n}, 4);\nlet Borrowers, Contacts, Loans, Lots, Offers, Organisations, PromotionLots, PromotionOptions, Promotions, Properties, Tasks, Users;\nmodule.link(\"../../api\", {\n  Borrowers(v) {\n    Borrowers = v;\n  },\n\n  Contacts(v) {\n    Contacts = v;\n  },\n\n  Loans(v) {\n    Loans = v;\n  },\n\n  Lots(v) {\n    Lots = v;\n  },\n\n  Offers(v) {\n    Offers = v;\n  },\n\n  Organisations(v) {\n    Organisations = v;\n  },\n\n  PromotionLots(v) {\n    PromotionLots = v;\n  },\n\n  PromotionOptions(v) {\n    PromotionOptions = v;\n  },\n\n  Promotions(v) {\n    Promotions = v;\n  },\n\n  Properties(v) {\n    Properties = v;\n  },\n\n  Tasks(v) {\n    Tasks = v;\n  },\n\n  Users(v) {\n    Users = v;\n  }\n\n}, 5);\nlet SecurityService;\nmodule.link(\"../../api/security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 6);\nlet TaskService;\nmodule.link(\"../../api/tasks/server/TaskService\", {\n  default(v) {\n    TaskService = v;\n  }\n\n}, 7);\nlet USER_COUNT, UNOWNED_LOANS_COUNT, LOANS_PER_USER;\nmodule.link(\"../fixtureConfig\", {\n  USER_COUNT(v) {\n    USER_COUNT = v;\n  },\n\n  UNOWNED_LOANS_COUNT(v) {\n    UNOWNED_LOANS_COUNT = v;\n  },\n\n  LOANS_PER_USER(v) {\n    LOANS_PER_USER = v;\n  }\n\n}, 8);\nlet createFakeLoan, addLoanWithData;\nmodule.link(\"../loanFixtures\", {\n  createFakeLoan(v) {\n    createFakeLoan = v;\n  },\n\n  addLoanWithData(v) {\n    addLoanWithData = v;\n  }\n\n}, 9);\nlet createDevs, createAdmins, getFakeUsersIds, createUser, createFakeUsers;\nmodule.link(\"../userFixtures\", {\n  createDevs(v) {\n    createDevs = v;\n  },\n\n  createAdmins(v) {\n    createAdmins = v;\n  },\n\n  getFakeUsersIds(v) {\n    getFakeUsersIds = v;\n  },\n\n  createUser(v) {\n    createUser = v;\n  },\n\n  createFakeUsers(v) {\n    createFakeUsers = v;\n  }\n\n}, 10);\nlet createFakeOffer;\nmodule.link(\"../offerFixtures\", {\n  createFakeOffer(v) {\n    createFakeOffer = v;\n  }\n\n}, 11);\nlet E2E_USER_EMAIL;\nmodule.link(\"../fixtureConstants\", {\n  E2E_USER_EMAIL(v) {\n    E2E_USER_EMAIL = v;\n  }\n\n}, 12);\nlet createOrganisations;\nmodule.link(\"../organisationFixtures\", {\n  createOrganisations(v) {\n    createOrganisations = v;\n  }\n\n}, 13);\nlet createFakeInterestRates;\nmodule.link(\"../interestRatesFixtures\", {\n  createFakeInterestRates(v) {\n    createFakeInterestRates = v;\n  }\n\n}, 14);\nlet emptyFakeBorrower, completeFakeBorrower;\nmodule.link(\"../../api/borrowers/fakes\", {\n  emptyFakeBorrower(v) {\n    emptyFakeBorrower = v;\n  },\n\n  completeFakeBorrower(v) {\n    completeFakeBorrower = v;\n  }\n\n}, 15);\nlet fakeProperty;\nmodule.link(\"../../api/properties/fakes\", {\n  fakeProperty(v) {\n    fakeProperty = v;\n  }\n\n}, 16);\nlet emptyLoan, loanStep1, loanStep2;\nmodule.link(\"../../api/loans/fakes\", {\n  emptyLoan(v) {\n    emptyLoan = v;\n  },\n\n  loanStep1(v) {\n    loanStep1 = v;\n  },\n\n  loanStep2(v) {\n    loanStep2 = v;\n  }\n\n}, 17);\n\nconst isAuthorizedToRun = () => !Meteor.isProduction || Meteor.isStaging || Meteor.isDevEnvironment;\n\nconst getAdmins = () => {\n  const admins = Users.find({\n    roles: {\n      $in: [ROLES.ADMIN]\n    }\n  }).fetch();\n\n  if (admins.length <= 1) {\n    const newAdmins = createAdmins();\n    return newAdmins;\n  }\n\n  return admins.map(admin => admin._id);\n};\n\nconst deleteUsersRelatedData = usersToDelete => {\n  Borrowers.remove({\n    userId: {\n      $in: usersToDelete\n    }\n  });\n  Properties.remove({\n    userId: {\n      $in: usersToDelete\n    }\n  });\n  Offers.remove({\n    userId: {\n      $in: usersToDelete\n    }\n  });\n  Loans.remove({\n    userId: {\n      $in: usersToDelete\n    }\n  });\n};\n\nconst deleteUsers = usersToDelete => Users.remove({\n  _id: {\n    $in: usersToDelete\n  }\n});\n\nconst createFakeLoanFixture = ({\n  userId,\n  step,\n  completeFiles,\n  twoBorrowers\n}) => {\n  const loanId = createFakeLoan({\n    userId,\n    step,\n    completeFiles,\n    twoBorrowers\n  });\n  createFakeOffer(loanId);\n}; // Create a test user used in app's e2e tests and all the fixtures it needs\n\n\nconst createTestUserWithData = () => {\n  const testUserId = createUser(E2E_USER_EMAIL, ROLES.USER);\n  const admins = getAdmins(); // Create 2 loans to check AppPage, which requires multiple loans to display\n\n  createFakeLoanFixture({\n    step: STEPS.SOLVENCY,\n    userId: testUserId,\n    adminId: admins[0]._id,\n    completeFiles: true,\n    twoBorrowers: true\n  });\n  createFakeLoanFixture({\n    step: STEPS.REQUEST,\n    userId: testUserId,\n    adminId: admins[0]._id,\n    completeFiles: true,\n    twoBorrowers: true\n  });\n};\n\nMeteor.methods({\n  generateTestData(currentUserEmail) {\n    try {\n      if (isAuthorizedToRun()) {\n        const devs = createDevs(currentUserEmail);\n        const admins = getAdmins();\n        const newUsers = createFakeUsers(USER_COUNT, ROLES.USER);\n        createOrganisations(); // for each regular fixture user, create a loan with a certain step\n\n        newUsers.forEach((userId, index) => {\n          const adminId = admins[Math.floor(Math.random() * admins.length)]; // based on index, always generate 0, 1 and 2 numbers\n\n          const loanStep = index % 3;\n          range(LOANS_PER_USER).forEach((_, loanIndex) => {\n            const step = LOANS_PER_USER < 3 ? loanStep : loanIndex % 3;\n            createFakeLoanFixture({\n              step: STEP_ORDER[step],\n              userId,\n              adminId,\n              twoBorrowers: true\n            });\n          });\n        });\n        range(UNOWNED_LOANS_COUNT).forEach(() => {\n          createFakeLoan({});\n        });\n        createTestUserWithData();\n      }\n    } catch (error) {\n      // FIXME: If you throw an error here it does not appear without this\n      // try catch block\n      console.log('generateTestData error', error);\n    }\n  },\n\n  purgeDatabase(currentUserId) {\n    return Promise.asyncApply(() => {\n      check(currentUserId, String);\n\n      if (SecurityService.checkCurrentUserIsDev() && isAuthorizedToRun()) {\n        Promise.await(Promise.all([Borrowers.rawCollection().remove({}), Contacts.rawCollection().remove({}), Loans.rawCollection().remove({}), Lots.remove({}), Offers.rawCollection().remove({}), Organisations.rawCollection().remove({}), PromotionLots.rawCollection().remove({}), PromotionOptions.rawCollection().remove({}), Promotions.rawCollection().remove({}), Properties.rawCollection().remove({}), Tasks.rawCollection().remove({}), Users.rawCollection().remove({\n          _id: {\n            $ne: currentUserId\n          }\n        })]));\n      }\n    });\n  },\n\n  purgeFakeData(currentUserId) {\n    check(currentUserId, String);\n\n    if (SecurityService.checkCurrentUserIsDev() && isAuthorizedToRun()) {\n      let fakeUsersIds = getFakeUsersIds();\n      deleteUsersRelatedData(fakeUsersIds);\n      fakeUsersIds = fakeUsersIds.filter(item => item !== currentUserId);\n      deleteUsers(fakeUsersIds);\n    }\n  },\n\n  purgePersonalData(currentUserId) {\n    SecurityService.checkCurrentUserIsDev();\n    return deleteUsersRelatedData([currentUserId]);\n  },\n\n  insertLoanRelatedTask() {\n    SecurityService.checkCurrentUserIsDev();\n\n    const loanId = LoanService.find({}).fetch()[0]._id;\n\n    if (loanId) {\n      return TaskService.insert({\n        object: {\n          title: 'Random dev task',\n          loanLink: {\n            _id: loanId\n          }\n        }\n      });\n    }\n  },\n\n  createFakeOffer({\n    loanId\n  }) {\n    SecurityService.checkCurrentUserIsDev();\n    return createFakeOffer(loanId);\n  },\n\n  createFakeInterestRates({\n    number\n  }) {\n    SecurityService.checkCurrentUserIsDev();\n    return createFakeInterestRates({\n      number\n    });\n  },\n\n  addEmptyLoan({\n    userId,\n    twoBorrowers,\n    addOffers,\n    isRefinancing\n  }) {\n    SecurityService.checkCurrentUserIsDev();\n    return addLoanWithData({\n      borrowers: twoBorrowers ? [emptyFakeBorrower, emptyFakeBorrower] : [emptyFakeBorrower],\n      properties: [],\n      loan: (0, _objectSpread2.default)({}, emptyLoan, {\n        purchaseType: isRefinancing ? PURCHASE_TYPE.REFINANCING : PURCHASE_TYPE.ACQUISITION\n      }),\n      userId,\n      addOffers\n    });\n  },\n\n  addLoanWithSomeData({\n    userId,\n    twoBorrowers,\n    addOffers,\n    isRefinancing\n  }) {\n    SecurityService.checkCurrentUserIsDev();\n    return addLoanWithData({\n      borrowers: twoBorrowers ? [completeFakeBorrower, completeFakeBorrower] : [completeFakeBorrower],\n      properties: [fakeProperty],\n      loan: (0, _objectSpread2.default)({}, loanStep1, {\n        purchaseType: isRefinancing ? PURCHASE_TYPE.REFINANCING : PURCHASE_TYPE.ACQUISITION\n      }),\n      userId,\n      addOffers\n    });\n  },\n\n  addCompleteLoan({\n    userId,\n    twoBorrowers,\n    isRefinancing\n  }) {\n    SecurityService.checkCurrentUserIsDev();\n    return addLoanWithData({\n      borrowers: twoBorrowers ? [completeFakeBorrower, completeFakeBorrower] : [completeFakeBorrower],\n      properties: [fakeProperty],\n      loan: (0, _objectSpread2.default)({}, loanStep2, {\n        purchaseType: isRefinancing ? PURCHASE_TYPE.REFINANCING : PURCHASE_TYPE.ACQUISITION,\n        applicationType: APPLICATION_TYPES.FULL,\n        customName: 'Ma maison à la plage'\n      }),\n      userId,\n      addOffers: true\n    });\n  },\n\n  addAnonymousLoan({\n    twoBorrowers,\n    isRefinancing\n  }) {\n    SecurityService.checkCurrentUserIsDev();\n    return addLoanWithData({\n      borrowers: twoBorrowers ? [emptyFakeBorrower, emptyFakeBorrower] : [emptyFakeBorrower],\n      properties: [],\n      loan: (0, _objectSpread2.default)({}, emptyLoan, {\n        purchaseType: isRefinancing ? PURCHASE_TYPE.REFINANCING : PURCHASE_TYPE.ACQUISITION,\n        anonymous: true\n      })\n    });\n  },\n\n  addUserToOrg() {\n    SecurityService.checkCurrentUserIsDev();\n    let orgId;\n    const org = Organisations.findOne({\n      name: 'Dev Org'\n    });\n\n    if (org) {\n      orgId = org._id;\n    } else {\n      orgId = Organisations.insert({\n        name: 'Dev Org',\n        type: ORGANISATION_TYPES.REAL_ESTATE_BROKER\n      });\n    }\n\n    Organisations.update({\n      _id: orgId\n    }, {\n      $set: {\n        userLinks: [{\n          _id: this.userId\n        }]\n      }\n    });\n  }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"borrowerFixtures.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/fixtures/borrowerFixtures.js                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  createFakeBorrowers: () => createFakeBorrowers,\n  getRelatedBorrowerIds: () => getRelatedBorrowerIds\n});\nlet faker;\nmodule.link(\"faker/locale/fr\", {\n  default(v) {\n    faker = v;\n  }\n\n}, 0);\nlet BorrowerService;\nmodule.link(\"../api/borrowers/server/BorrowerService\", {\n  default(v) {\n    BorrowerService = v;\n  }\n\n}, 1);\nlet RESIDENCE_TYPE, OTHER_INCOME, EXPENSES;\nmodule.link(\"../api/constants\", {\n  RESIDENCE_TYPE(v) {\n    RESIDENCE_TYPE = v;\n  },\n\n  OTHER_INCOME(v) {\n    OTHER_INCOME = v;\n  },\n\n  EXPENSES(v) {\n    EXPENSES = v;\n  }\n\n}, 2);\n\nconst insertFakeBorrower = userId => {\n  const firstName = faker.name.firstName();\n  const lastName = faker.name.lastName();\n  const borrower = {\n    firstName,\n    lastName,\n    gender: 'F',\n    address1: faker.address.streetAddress(),\n    zipCode: 1201,\n    city: 'Genève',\n    citizenships: 'Suisse, Français',\n    birthDate: '1980-03-01',\n    birthPlace: 'Plan-les-Ouates',\n    civilStatus: 'SINGLE',\n    childrenCount: 2,\n    company: faker.company.companyName(),\n    personalBank: 'BCGE',\n    isSwiss: true,\n    isUSPerson: false,\n    worksForOwnCompany: false,\n    sameAddress: true,\n    salary: 300000,\n    bonusExists: true,\n    bonus2015: 15490,\n    bonus2016: 11140,\n    bonus2017: 13780,\n    bonus2018: 12300,\n    otherIncome: [{\n      value: 10000,\n      description: OTHER_INCOME.PENSIONS\n    }, {\n      value: 15000,\n      description: OTHER_INCOME.WELFARE\n    }],\n    expenses: [{\n      value: 3000,\n      description: EXPENSES.LEASING\n    }, {\n      value: 4000,\n      description: EXPENSES.PERSONAL_LOAN\n    }],\n    realEstate: [{\n      value: 433000,\n      loan: 240000,\n      description: RESIDENCE_TYPE.MAIN_RESIDENCE\n    }],\n    bankFortune: 300000,\n    insurance2: [{\n      value: 120000,\n      description: 'Allianz'\n    }],\n    insurance3B: [{\n      value: 50000,\n      description: 'Zurich'\n    }],\n    logic: {}\n  };\n  return BorrowerService.insert({\n    borrower,\n    userId\n  });\n};\n\nconst createFakeBorrowers = (userId, twoBorrowers = false) => {\n  const borrowerIds = [insertFakeBorrower(userId)];\n\n  if (twoBorrowers) {\n    borrowerIds.push(insertFakeBorrower(userId));\n  }\n\n  return borrowerIds;\n};\n\nconst getRelatedBorrowerIds = usersIds => BorrowerService.fetch({\n  $filters: {\n    userId: {\n      $in: usersIds\n    }\n  },\n  _id: 1\n}).map(item => item._id);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"fixtureConfig.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/fixtures/fixtureConfig.js                                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  USER_COUNT: () => USER_COUNT,\n  ADMIN_COUNT: () => ADMIN_COUNT,\n  DEV_COUNT: () => DEV_COUNT,\n  UNOWNED_LOANS_COUNT: () => UNOWNED_LOANS_COUNT,\n  LOANS_PER_USER: () => LOANS_PER_USER\n});\nconst USER_COUNT = 10;\nconst ADMIN_COUNT = 10;\nconst DEV_COUNT = 5;\nconst UNOWNED_LOANS_COUNT = 1;\nconst LOANS_PER_USER = 1;\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"fixtureConstants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/fixtures/fixtureConstants.js                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  USER_PASSWORD: () => USER_PASSWORD,\n  E2E_DEV_EMAIL: () => E2E_DEV_EMAIL,\n  E2E_USER_EMAIL: () => E2E_USER_EMAIL\n});\nconst USER_PASSWORD = '12345';\nconst E2E_DEV_EMAIL = 'florian@e-potek.ch';\nconst E2E_USER_EMAIL = 'test-user@e-potek.ch';\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/fixtures/index.js                                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet ROLES;\nmodule.link(\"../api/constants\", {\n  ROLES(v) {\n    ROLES = v;\n  }\n\n}, 1);\nlet InterestRatesService;\nmodule.link(\"../api/interestRates/server/InterestRatesService\", {\n  default(v) {\n    InterestRatesService = v;\n  }\n\n}, 2);\nlet createDevs, createAdmins;\nmodule.link(\"./userFixtures\", {\n  createDevs(v) {\n    createDevs = v;\n  },\n\n  createAdmins(v) {\n    createAdmins = v;\n  }\n\n}, 3);\nmodule.link(\"./promotionDemo/promotionFixturesMethods\");\nlet createFakeInterestRates;\nmodule.link(\"./interestRatesFixtures\", {\n  createFakeInterestRates(v) {\n    createFakeInterestRates = v;\n  }\n\n}, 4);\nMeteor.startup(() => {\n  if (!Meteor.isAppTest) {\n    if (Meteor.users.find({\n      roles: {\n        $in: [ROLES.DEV]\n      }\n    }).count() === 0) {\n      createDevs();\n      createAdmins();\n    }\n\n    if (InterestRatesService.countAll() === 0) {\n      createFakeInterestRates({\n        number: 10\n      });\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"interestRatesFixtures.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/fixtures/interestRatesFixtures.js                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  createFakeInterestRates: () => createFakeInterestRates\n});\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 0);\nlet InterestRatesService;\nmodule.link(\"../api/interestRates/server/InterestRatesService\", {\n  default(v) {\n    InterestRatesService = v;\n  }\n\n}, 1);\nlet INTEREST_RATES;\nmodule.link(\"../api/constants\", {\n  INTEREST_RATES(v) {\n    INTEREST_RATES = v;\n  }\n\n}, 2);\nlet getRandomInterestRate;\nmodule.link(\"../api/interestRates/fakes\", {\n  getRandomInterestRate(v) {\n    getRandomInterestRate = v;\n  }\n\n}, 3);\nconst FAKE_INTEREST_RATES_MEANS = {\n  [INTEREST_RATES.LIBOR]: 0.8,\n  [INTEREST_RATES.YEARS_1]: 1.1,\n  [INTEREST_RATES.YEARS_2]: 1.5,\n  [INTEREST_RATES.YEARS_5]: 1.9,\n  [INTEREST_RATES.YEARS_10]: 2.3,\n  [INTEREST_RATES.YEARS_15]: 2.7,\n  [INTEREST_RATES.YEARS_20]: 3,\n  [INTEREST_RATES.YEARS_25]: 3.4\n};\n\nconst fakeInterestRates = () => Object.values(INTEREST_RATES).reduce((rates, type) => (0, _objectSpread2.default)({}, rates, {\n  [type]: getRandomInterestRate(FAKE_INTEREST_RATES_MEANS[type])\n}), {});\n\nconst createFakeInterestRates = ({\n  number\n}) => {\n  let dates = [];\n\n  for (let i = 0; i < number; i += 1) {\n    dates = [...dates, moment().subtract(i, 'd').toDate()];\n  }\n\n  const fakeRates = dates.map(date => (0, _objectSpread2.default)({\n    date\n  }, fakeInterestRates()));\n  fakeRates.forEach(rate => InterestRatesService.insert(rate));\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lenderRulesFixtures.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/fixtures/lenderRulesFixtures.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  createLenderRules: () => createLenderRules\n});\nlet LenderRulesService;\nmodule.link(\"../api/lenderRules/server/LenderRulesService\", {\n  default(v) {\n    LenderRulesService = v;\n  }\n\n}, 0);\n\nconst createLenderRules = organisationId => {\n  LenderRulesService.initialize({\n    organisationId\n  });\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"loanFixtures.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/fixtures/loanFixtures.js                                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  createFakeLoan: () => createFakeLoan,\n  getRelatedLoansIds: () => getRelatedLoansIds,\n  addLoanWithData: () => addLoanWithData\n});\nlet faker;\nmodule.link(\"faker/locale/fr\", {\n  default(v) {\n    faker = v;\n  }\n\n}, 0);\nlet LoanService;\nmodule.link(\"../api/loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 1);\nlet PURCHASE_TYPE, INTEREST_RATES, OWN_FUNDS_TYPES, OWN_FUNDS_USAGE_TYPES, STEPS, APPLICATION_TYPES;\nmodule.link(\"../api/constants\", {\n  PURCHASE_TYPE(v) {\n    PURCHASE_TYPE = v;\n  },\n\n  INTEREST_RATES(v) {\n    INTEREST_RATES = v;\n  },\n\n  OWN_FUNDS_TYPES(v) {\n    OWN_FUNDS_TYPES = v;\n  },\n\n  OWN_FUNDS_USAGE_TYPES(v) {\n    OWN_FUNDS_USAGE_TYPES = v;\n  },\n\n  STEPS(v) {\n    STEPS = v;\n  },\n\n  APPLICATION_TYPES(v) {\n    APPLICATION_TYPES = v;\n  }\n\n}, 2);\nlet createFakeBorrowers;\nmodule.link(\"./borrowerFixtures\", {\n  createFakeBorrowers(v) {\n    createFakeBorrowers = v;\n  }\n\n}, 3);\nlet createFakeProperty;\nmodule.link(\"./propertyFixtures\", {\n  createFakeProperty(v) {\n    createFakeProperty = v;\n  }\n\n}, 4);\nlet adminLoans;\nmodule.link(\"../api/loans/queries\", {\n  adminLoans(v) {\n    adminLoans = v;\n  }\n\n}, 5);\nlet BorrowerService;\nmodule.link(\"../api/borrowers/server/BorrowerService\", {\n  default(v) {\n    BorrowerService = v;\n  }\n\n}, 6);\nlet PropertyService;\nmodule.link(\"../api/properties/server/PropertyService\", {\n  default(v) {\n    PropertyService = v;\n  }\n\n}, 7);\nlet createFakeOffer;\nmodule.link(\"./offerFixtures\", {\n  createFakeOffer(v) {\n    createFakeOffer = v;\n  }\n\n}, 8);\nconst purchaseTypes = Object.values(PURCHASE_TYPE);\n\nconst getRandomValueInArray = array => array[Math.floor(Math.random() * array.length)];\n\nconst getRandomStructure = (propertyValue, borrowerId) => {\n  if (!borrowerId) {\n    return {};\n  }\n\n  return getRandomValueInArray([{\n    ownFunds: [{\n      value: Math.round(0.15 * propertyValue),\n      type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n      borrowerId\n    }, {\n      value: Math.round(0.1 * propertyValue),\n      type: OWN_FUNDS_TYPES.INSURANCE_2,\n      usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE,\n      borrowerId\n    }]\n  }, {\n    ownFunds: [{\n      value: Math.round(0.25 * propertyValue),\n      type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n      borrowerId\n    }]\n  }, {\n    ownFunds: [{\n      value: Math.round(0.15 * propertyValue),\n      type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n      borrowerId\n    }, {\n      value: Math.round(0.1 * propertyValue),\n      type: OWN_FUNDS_TYPES.INSURANCE_2,\n      usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW,\n      borrowerId\n    }]\n  }, {\n    ownFunds: [{\n      value: Math.round(0.15 * propertyValue),\n      type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n      borrowerId\n    }, {\n      value: Math.round(0.05 * propertyValue),\n      type: OWN_FUNDS_TYPES.INSURANCE_2,\n      usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW,\n      borrowerId\n    }, {\n      value: Math.round(0.05 * propertyValue),\n      type: OWN_FUNDS_TYPES.INSURANCE_2,\n      usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE,\n      borrowerId\n    }]\n  }, {\n    ownFunds: [{\n      value: Math.round(0.15 * propertyValue),\n      type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n      borrowerId\n    }, {\n      value: Math.round(0.08 * propertyValue),\n      type: OWN_FUNDS_TYPES.INSURANCE_2,\n      usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW,\n      borrowerId\n    }, {\n      value: Math.round(0.02 * propertyValue),\n      type: OWN_FUNDS_TYPES.INSURANCE_3A,\n      usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW,\n      borrowerId\n    }]\n  }, {\n    ownFunds: [{\n      value: Math.round(0.2 * propertyValue),\n      type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n      borrowerId\n    }, {\n      value: Math.round(0.05 * propertyValue),\n      type: OWN_FUNDS_TYPES.INSURANCE_3B,\n      usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE,\n      borrowerId\n    }]\n  }]);\n};\n\nconst createFakeLoan = ({\n  userId,\n  step,\n  twoBorrowers\n}) => {\n  const borrowerIds = createFakeBorrowers(userId, twoBorrowers);\n  const {\n    _id: propertyId,\n    value\n  } = createFakeProperty(userId);\n  const loan = {\n    name: faker.address.streetAddress(),\n    borrowerIds,\n    propertyIds: [propertyId],\n    purchaseType: purchaseTypes[Math.floor(Math.random() * purchaseTypes.length)],\n    contacts: [],\n    structures: [(0, _objectSpread2.default)({\n      id: 'struct1',\n      propertyId,\n      loanTranches: [{\n        type: INTEREST_RATES.YEARS_10,\n        value: 1\n      }],\n      wantedLoan: Math.round(0.8 * value)\n    }, getRandomStructure(value, borrowerIds[0]))],\n    selectedStructure: 'struct1'\n  };\n\n  switch (step) {\n    case STEPS.OFFERS:\n      loan.step = STEPS.OFFERS;\n      loan.loanTranches = [{\n        value: 750000,\n        type: 'interest10'\n      }];\n      loan.applicationType = APPLICATION_TYPES.FULL;\n      loan.displayWelcomeScreen = false;\n      break;\n\n    case STEPS.REQUEST:\n      loan.step = STEPS.REQUEST;\n      loan.applicationType = APPLICATION_TYPES.FULL;\n      loan.displayWelcomeScreen = false;\n      break;\n\n    default:\n      loan.step = STEPS.SOLVENCY;\n  }\n\n  return LoanService.insert({\n    loan,\n    userId\n  });\n};\n\nconst getRelatedLoansIds = usersIds => LoanService.fetch({\n  $filters: {\n    userId: {\n      $in: usersIds\n    }\n  },\n  _id: 1\n}).map(item => item._id);\n\nconst addLoanWithData = ({\n  borrowers = [],\n  properties = [],\n  loan: loanData,\n  userId,\n  addOffers\n}) => {\n  const loanId = LoanService.fullLoanInsert({\n    userId\n  });\n  LoanService.update({\n    loanId,\n    object: loanData\n  });\n  const loan = adminLoans.clone({\n    _id: loanId\n  }).fetchOne();\n  const propertyId = properties.length ? PropertyService.insert({\n    property: {},\n    userId\n  }) : undefined;\n\n  if (propertyId) {\n    LoanService.addPropertyToLoan({\n      propertyId,\n      loanId\n    });\n  }\n\n  const structureId = loan.structures[0].id;\n  const [borrowerId1] = loan.borrowers.map(({\n    _id\n  }) => _id);\n  LoanService.updateStructure({\n    loanId,\n    structureId,\n    structure: (0, _objectSpread2.default)({\n      propertyId,\n      loanTranches: [{\n        type: INTEREST_RATES.YEARS_10,\n        value: 0.8\n      }, {\n        type: INTEREST_RATES.YEARS_5,\n        value: 0.2\n      }]\n    }, getRandomStructure(1000000, borrowerId1))\n  });\n\n  if (borrowerId1) {\n    BorrowerService.update({\n      borrowerId: borrowerId1,\n      object: borrowers[0]\n    });\n  }\n\n  if (borrowers.length > 1) {\n    const borrowerId2 = BorrowerService.insert({\n      borrower: borrowers[1]\n    });\n    BorrowerService.update({\n      borrowerId: borrowerId2,\n      object: borrowers[1]\n    });\n    LoanService.addLink({\n      id: loanId,\n      linkName: 'borrowers',\n      linkId: borrowerId2\n    });\n  }\n\n  if (propertyId) {\n    PropertyService.update({\n      propertyId,\n      object: properties[0]\n    });\n  }\n\n  if (addOffers) {\n    const offerIds = [1, 2, 3, 4, 5].map(() => createFakeOffer(loanId));\n    LoanService.updateStructure({\n      loanId,\n      structureId,\n      structure: {\n        offerId: getRandomValueInArray(offerIds)\n      }\n    });\n  }\n\n  return loanId;\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"offerFixtures.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/fixtures/offerFixtures.js                                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  createFakeOffer: () => createFakeOffer\n});\nlet shuffle;\nmodule.link(\"lodash/shuffle\", {\n  default(v) {\n    shuffle = v;\n  }\n\n}, 0);\nlet getRandomOffer;\nmodule.link(\"../api/offers/fakes\", {\n  getRandomOffer(v) {\n    getRandomOffer = v;\n  }\n\n}, 1);\nlet OfferService;\nmodule.link(\"../api/offers/server/OfferService\", {\n  default(v) {\n    OfferService = v;\n  }\n\n}, 2);\nlet LenderService;\nmodule.link(\"../api/lenders/server/LenderService\", {\n  default(v) {\n    LenderService = v;\n  }\n\n}, 3);\nlet OrganisationService;\nmodule.link(\"../api/organisations/server/OrganisationService\", {\n  default(v) {\n    OrganisationService = v;\n  }\n\n}, 4);\nlet LoanService;\nmodule.link(\"../api/loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 5);\nlet PropertyService;\nmodule.link(\"../api/properties/server/PropertyService\", {\n  default(v) {\n    PropertyService = v;\n  }\n\n}, 6);\nlet createOrganisations;\nmodule.link(\"./organisationFixtures\", {\n  createOrganisations(v) {\n    createOrganisations = v;\n  }\n\n}, 7);\n\nconst getOrgIds = () => OrganisationService.fetch({}).map(({\n  _id\n}) => _id);\n\nconst createFakeOffer = loanId => {\n  const loan = LoanService.findOne(loanId);\n  const property = PropertyService.findOne(loan.propertyIds[0]);\n  const offer = getRandomOffer({\n    loan: (0, _objectSpread2.default)({}, loan, {\n      _id: loan._id\n    }),\n    property\n  }, true);\n  let allOrganisationIds = getOrgIds();\n\n  if (allOrganisationIds.length === 0) {\n    createOrganisations();\n    allOrganisationIds = getOrgIds();\n  }\n\n  const randomOrganisationId = shuffle(allOrganisationIds)[0];\n  let lenderId;\n  const lender = LenderService.findOne({\n    'loanLink._id': loanId,\n    'organisationLink._id': randomOrganisationId\n  });\n\n  if (lender) {\n    lenderId = lender._id;\n  } else {\n    lenderId = LenderService.insert({\n      lender: {\n        loanId: loan._id\n      },\n      contactId: null,\n      organisationId: randomOrganisationId\n    });\n  }\n\n  return OfferService.insert({\n    offer: (0, _objectSpread2.default)({}, offer, {\n      lenderId\n    })\n  });\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"organisationFixtures.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/fixtures/organisationFixtures.js                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  createOrganisations: () => createOrganisations\n});\nlet faker;\nmodule.link(\"faker/locale/fr\", {\n  default(v) {\n    faker = v;\n  }\n\n}, 0);\nlet random;\nmodule.link(\"lodash/random\", {\n  default(v) {\n    random = v;\n  }\n\n}, 1);\nlet OrganisationService;\nmodule.link(\"../api/organisations/server/OrganisationService\", {\n  default(v) {\n    OrganisationService = v;\n  }\n\n}, 2);\nlet ContactService;\nmodule.link(\"../api/contacts/server/ContactService\", {\n  default(v) {\n    ContactService = v;\n  }\n\n}, 3);\nlet ORGANISATION_TYPES, ORGANISATION_FEATURES, ORGANISATION_TAGS;\nmodule.link(\"../api/constants\", {\n  ORGANISATION_TYPES(v) {\n    ORGANISATION_TYPES = v;\n  },\n\n  ORGANISATION_FEATURES(v) {\n    ORGANISATION_FEATURES = v;\n  },\n\n  ORGANISATION_TAGS(v) {\n    ORGANISATION_TAGS = v;\n  }\n\n}, 4);\nlet createLenderRules;\nmodule.link(\"./lenderRulesFixtures\", {\n  createLenderRules(v) {\n    createLenderRules = v;\n  }\n\n}, 5);\nconst orgs = [{\n  name: 'UBS',\n  type: ORGANISATION_TYPES.BANK,\n  logo: 'https://sos-ch-dk-2.exo.io/fixture-files/ubs-logo.png',\n  features: [ORGANISATION_FEATURES.LENDER],\n  tags: [ORGANISATION_TAGS.CH_RETAIL]\n}, {\n  name: 'Crédit Suisse',\n  type: ORGANISATION_TYPES.BANK,\n  logo: 'https://sos-ch-dk-2.exo.io/fixture-files/cs-logo.png',\n  features: [ORGANISATION_FEATURES.LENDER],\n  tags: [ORGANISATION_TAGS.CH_RETAIL]\n}, {\n  name: 'Allianz',\n  type: ORGANISATION_TYPES.INSURANCE,\n  logo: 'https://sos-ch-dk-2.exo.io/fixture-files/allianz-logo.png',\n  features: [ORGANISATION_FEATURES.LENDER],\n  tags: [ORGANISATION_TAGS.CH_RETAIL]\n}, {\n  name: 'Pictet',\n  type: ORGANISATION_TYPES.PRIVATE_BANK,\n  logo: 'https://sos-ch-dk-2.exo.io/fixture-files/pictet-logo.png',\n  features: [ORGANISATION_FEATURES.LENDER],\n  tags: [ORGANISATION_TAGS.CH_RETAIL]\n}];\n\nconst createOrganisations = () => orgs.map(org => {\n  const orgId = OrganisationService.insert(org);\n\n  if (org.features.includes(ORGANISATION_FEATURES.LENDER)) {\n    createLenderRules(orgId);\n  }\n\n  const contactCount = random(1, 3, false);\n\n  for (let index = 0; index < contactCount; index += 1) {\n    const contactId = ContactService.insert({\n      firstName: faker.name.firstName(),\n      lastName: faker.name.lastName(),\n      address1: faker.address.streetAddress(),\n      zipCode: 1201,\n      city: 'Genève',\n      emails: [{\n        address: faker.internet.email()\n      }],\n      phoneNumbers: [faker.phone.phoneNumber()]\n    });\n    ContactService.changeOrganisations({\n      contactId,\n      newOrganisations: [{\n        _id: orgId,\n        metadata: {\n          title: faker.name.jobTitle()\n        }\n      }]\n    });\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"propertyFixtures.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/fixtures/propertyFixtures.js                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  createFakeProperty: () => createFakeProperty,\n  getRelatedPropertyIds: () => getRelatedPropertyIds\n});\nlet faker;\nmodule.link(\"faker/locale/fr\", {\n  default(v) {\n    faker = v;\n  }\n\n}, 0);\nlet PropertyService;\nmodule.link(\"../api/properties/server/PropertyService\", {\n  default(v) {\n    PropertyService = v;\n  }\n\n}, 1);\nlet PROPERTY_STATUS, RESIDENCE_TYPE, PROPERTY_TYPE, VOLUME_NORM, MINERGIE_CERTIFICATE;\nmodule.link(\"../api/properties/propertyConstants\", {\n  PROPERTY_STATUS(v) {\n    PROPERTY_STATUS = v;\n  },\n\n  RESIDENCE_TYPE(v) {\n    RESIDENCE_TYPE = v;\n  },\n\n  PROPERTY_TYPE(v) {\n    PROPERTY_TYPE = v;\n  },\n\n  VOLUME_NORM(v) {\n    VOLUME_NORM = v;\n  },\n\n  MINERGIE_CERTIFICATE(v) {\n    MINERGIE_CERTIFICATE = v;\n  }\n\n}, 2);\nlet Properties;\nmodule.link(\"../api\", {\n  Properties(v) {\n    Properties = v;\n  }\n\n}, 3);\nconst statuses = Object.values(PROPERTY_STATUS);\nconst residenceTypes = Object.values(RESIDENCE_TYPE);\nconst types = Object.values(PROPERTY_TYPE);\nconst volumeNorms = Object.values(VOLUME_NORM);\nconst minergies = Object.values(MINERGIE_CERTIFICATE);\n\nconst getRandomValueInRange = (min, max) => Math.random() * (max - min) + min;\n\nconst getRandomValueInArray = array => array[Math.floor(Math.random() * array.length)];\n\nconst createFakeProperty = userId => {\n  const property = {\n    status: getRandomValueInArray(statuses),\n    value: Math.round(getRandomValueInRange(500000, 3000000)),\n    address1: faker.address.streetAddress(),\n    zipCode: 1201,\n    city: 'Genève',\n    residenceType: getRandomValueInArray(residenceTypes),\n    propertyType: getRandomValueInArray(types),\n    futureOwner: 0,\n    constructionYear: 2010,\n    landArea: 300,\n    insideArea: 140,\n    volume: 1500,\n    volumeNorm: getRandomValueInArray(volumeNorms),\n    roomCount: 5,\n    parkingInside: 1,\n    parkingOutside: 2,\n    minergie: getRandomValueInArray(minergies),\n    isCoproperty: true,\n    copropertyPercentage: 400\n  };\n  return (0, _objectSpread2.default)({}, property, {\n    _id: PropertyService.insert({\n      property,\n      userId\n    })\n  });\n};\n\nconst getRelatedPropertyIds = usersIds => Properties.find({\n  userId: {\n    $in: usersIds\n  }\n}, {\n  fields: {\n    _id: 1\n  }\n}).fetch().map(item => item._id);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"userFixtures.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/fixtures/userFixtures.js                                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nmodule.export({\n  createUser: () => createUser,\n  createFakeUsers: () => createFakeUsers,\n  addUser: () => addUser,\n  createDevs: () => createDevs,\n  createAdmins: () => createAdmins,\n  getFakeUsersIds: () => getFakeUsersIds\n});\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 0);\nlet Roles;\nmodule.link(\"meteor/alanning:roles\", {\n  Roles(v) {\n    Roles = v;\n  }\n\n}, 1);\nlet faker;\nmodule.link(\"faker/locale/fr\", {\n  default(v) {\n    faker = v;\n  }\n\n}, 2);\nlet USER_PASSWORD;\nmodule.link(\"./fixtureConstants\", {\n  USER_PASSWORD(v) {\n    USER_PASSWORD = v;\n  }\n\n}, 3);\nlet UserService;\nmodule.link(\"../api/users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 4);\n\nconst createUser = (email, role, password) => {\n  const userId = Accounts.createUser({\n    email,\n    password: password || USER_PASSWORD\n  });\n  Roles.setUserRoles(userId, [role]);\n  return userId;\n};\n\nconst createFakeUsers = (count, role, currentUserEmail = '') => {\n  const insertedUsers = [];\n\n  for (let i = 0; i < count; i += 1) {\n    const email = `${role}-${i + 1}@e-potek.ch`;\n\n    if (email !== currentUserEmail) {\n      const newUserId = createUser(email, role);\n      UserService.update({\n        userId: newUserId,\n        object: {\n          firstName: faker.name.firstName(),\n          lastName: faker.name.lastName()\n        }\n      });\n      insertedUsers.push(newUserId);\n    }\n  }\n\n  return insertedUsers;\n};\n\nconst addUser = (_ref) => {\n  let {\n    email,\n    role,\n    password = USER_PASSWORD\n  } = _ref,\n      data = (0, _objectWithoutProperties2.default)(_ref, [\"email\", \"role\", \"password\"]);\n  const newUserId = createUser(email, role, password);\n  UserService.update({\n    userId: newUserId,\n    object: (0, _objectSpread2.default)({}, data, {\n      phoneNumbers: [faker.phone.phoneNumber()],\n      'emails.0.verified': true\n    })\n  });\n  return newUserId;\n};\n\nconst createDevs = currentEmail => {\n  const devs = [{\n    email: 'florian@e-potek.ch',\n    firstName: 'Florian',\n    lastName: 'Bienefelt'\n  }, {\n    email: 'quentin@e-potek.ch',\n    firstName: 'Quentin',\n    lastName: 'Herzig'\n  }];\n  return devs.filter(({\n    email\n  }) => email !== currentEmail).map(obj => (0, _objectSpread2.default)({}, obj, {\n    role: 'dev'\n  })).map(addUser);\n};\n\nconst createAdmins = () => {\n  const devs = [{\n    email: 'lydia@e-potek.ch',\n    firstName: 'Lydia',\n    lastName: 'Abraha'\n  }, {\n    email: 'yannis@e-potek.ch',\n    firstName: 'Yannis',\n    lastName: 'Eggert'\n  }, {\n    email: 'jeanluc@e-potek.ch',\n    firstName: 'Jean-luc',\n    lastName: 'Kringel'\n  }];\n  return devs.map(obj => (0, _objectSpread2.default)({}, obj, {\n    role: 'admin'\n  })).map(addUser);\n};\n\nconst getFakeUsersIds = () => {\n  const regex = /^(admin|dev|user)-[1-9]|10@e-potek.ch/;\n  const allUsers = UserService.getAll();\n  const fakeUserIds = allUsers.filter(user => regex.test(user.emails[0].address)).map(fakeUser => fakeUser._id);\n  return fakeUserIds;\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"startup\":{\"server\":{\"kadira.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/startup/server/kadira.js                                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Kadira;\nmodule.link(\"meteor/lmachens:kadira\", {\n  Kadira(v) {\n    Kadira = v;\n  }\n\n}, 1);\n\nif (Meteor.settings.Kadira) {\n  const {\n    endpoint\n  } = Meteor.settings.Kadira;\n  const {\n    microservice\n  } = Meteor;\n\n  if (Meteor.settings.Kadira[microservice]) {\n    const {\n      appId,\n      appSecret\n    } = Meteor.settings.Kadira[microservice];\n    Kadira.connect(appId, appSecret, {\n      endpoint\n    });\n  }\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"accounts-config.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/startup/accounts-config.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet AccountsUI;\nmodule.link(\"meteor/epotek:accounts-ui\", {\n  Accounts(v) {\n    AccountsUI = v;\n  }\n\n}, 0);\nAccountsUI.ui.config({\n  passwordSignupFields: 'EMAIL_ONLY',\n  loginPath: '/login',\n  homeRoutePath: '/',\n  profilePath: '/account',\n  changePasswordPath: '/account',\n  minimumPasswordLength: 5\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"utils\":{\"Calculator\":{\"BorrowerCalculator.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/Calculator/BorrowerCalculator.js                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  withBorrowerCalculator: () => withBorrowerCalculator\n});\nlet OWN_FUNDS_TYPES;\nmodule.link(\"../../api/constants\", {\n  OWN_FUNDS_TYPES(v) {\n    OWN_FUNDS_TYPES = v;\n  }\n\n}, 0);\nlet getBorrowerDocuments;\nmodule.link(\"../../api/files/documents\", {\n  getBorrowerDocuments(v) {\n    getBorrowerDocuments = v;\n  }\n\n}, 1);\nlet filesPercent, getMissingDocumentIds;\nmodule.link(\"../../api/files/fileHelpers\", {\n  filesPercent(v) {\n    filesPercent = v;\n  },\n\n  getMissingDocumentIds(v) {\n    getMissingDocumentIds = v;\n  }\n\n}, 2);\nlet getBorrowerInfoArray, getBorrowerFinanceArray, getBorrowerSimpleArray;\nmodule.link(\"../../arrays/BorrowerFormArray\", {\n  getBorrowerInfoArray(v) {\n    getBorrowerInfoArray = v;\n  },\n\n  getBorrowerFinanceArray(v) {\n    getBorrowerFinanceArray = v;\n  },\n\n  getBorrowerSimpleArray(v) {\n    getBorrowerSimpleArray = v;\n  }\n\n}, 3);\nlet arrayify, getPercent;\nmodule.link(\"../general\", {\n  arrayify(v) {\n    arrayify = v;\n  },\n\n  getPercent(v) {\n    getPercent = v;\n  }\n\n}, 4);\nlet getCountedArray, getMissingFieldIds, getFormValuesHashMultiple;\nmodule.link(\"../formArrayHelpers\", {\n  getCountedArray(v) {\n    getCountedArray = v;\n  },\n\n  getMissingFieldIds(v) {\n    getMissingFieldIds = v;\n  },\n\n  getFormValuesHashMultiple(v) {\n    getFormValuesHashMultiple = v;\n  }\n\n}, 5);\nlet MiddlewareManager;\nmodule.link(\"../MiddlewareManager\", {\n  default(v) {\n    MiddlewareManager = v;\n  }\n\n}, 6);\nlet INCOME_CONSIDERATION_TYPES, EXPENSE_TYPES;\nmodule.link(\"../../api/constants\", {\n  INCOME_CONSIDERATION_TYPES(v) {\n    INCOME_CONSIDERATION_TYPES = v;\n  },\n\n  EXPENSE_TYPES(v) {\n    EXPENSE_TYPES = v;\n  }\n\n}, 7);\nlet borrowerExtractorMiddleware;\nmodule.link(\"./middleware\", {\n  borrowerExtractorMiddleware(v) {\n    borrowerExtractorMiddleware = v;\n  }\n\n}, 8);\nlet BONUS_ALGORITHMS, REAL_ESTATE_INCOME_ALGORITHMS;\nmodule.link(\"../../config/financeConstants\", {\n  BONUS_ALGORITHMS(v) {\n    BONUS_ALGORITHMS = v;\n  },\n\n  REAL_ESTATE_INCOME_ALGORITHMS(v) {\n    REAL_ESTATE_INCOME_ALGORITHMS = v;\n  }\n\n}, 9);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst withBorrowerCalculator = (SuperClass = class {}) => {\n  var _temp;\n\n  return _temp = class extends SuperClass {\n    constructor(config) {\n      super(config);\n\n      _defineProperty(this, \"isTypeWithArrayValues\", type => [OWN_FUNDS_TYPES.INSURANCE_2, OWN_FUNDS_TYPES.INSURANCE_3A, OWN_FUNDS_TYPES.BANK_3A, OWN_FUNDS_TYPES.INSURANCE_3B].includes(type));\n\n      this.initBorrowerCalculator(config);\n    }\n\n    initBorrowerCalculator(config) {\n      const middleware = config && config.borrowerMiddleware || borrowerExtractorMiddleware;\n      const middlewareManager = new MiddlewareManager(this);\n      middlewareManager.applyToAllMethods([middleware]);\n    }\n\n    getArrayValues({\n      borrowers,\n      key,\n      mapFunc\n    }) {\n      let sum = 0;\n      arrayify(borrowers).forEach(borrower => {\n        if (!borrower[key]) {\n          return 0;\n        }\n\n        sum += [...(borrower[key] && borrower[key].length > 0 ? borrower[key].map(mapFunc || (i => i.value)) : [])].reduce((tot, val) => val > 0 && tot + val || tot, 0);\n      });\n      return Math.max(0, Math.round(sum));\n    }\n\n    getBonuses({\n      borrowers\n    }) {\n      return arrayify(borrowers).reduce((obj, borrower) => {\n        if (!borrower.bonusExists) {\n          return obj;\n        }\n\n        const bonusKeys = Object.keys(borrower).filter(key => key.includes('bonus') && key !== 'bonusExists' && borrower[key] >= 0 && borrower[key] !== null);\n        bonusKeys.forEach(key => {\n          const value = borrower[key];\n\n          if (obj[key]) {\n            obj = (0, _objectSpread2.default)({}, obj, {\n              [key]: obj[key] + value\n            });\n          } else {\n            obj = (0, _objectSpread2.default)({}, obj, {\n              [key]: value\n            });\n          }\n        });\n        return obj;\n      }, {});\n    }\n\n    getBonusIncome({\n      borrowers\n    }) {\n      const bonusKeys = ['bonus2015', 'bonus2016', 'bonus2017', 'bonus2018', 'bonus2019'];\n      const total = arrayify(borrowers).reduce((acc, borrower) => {\n        if (!borrower.bonusExists) {\n          return acc + 0;\n        }\n\n        const arr = bonusKeys.map(key => borrower[key]).filter(val => this.bonusAlgorithm === BONUS_ALGORITHMS.WEAK_AVERAGE ? val > 0 : true);\n        return acc + this.getConsideredValue({\n          values: arr,\n          history: this.bonusHistoryToConsider,\n          weighting: this.bonusConsideration\n        });\n      }, 0);\n      return Math.max(0, Math.round(total));\n    }\n\n    getConsideredValue({\n      values,\n      history,\n      weighting\n    }) {\n      const valuesToConsider = values.slice(Math.max(0, values.length - history));\n      const sum = valuesToConsider.reduce((tot, val = 0) => tot + val, 0);\n      return weighting * sum / valuesToConsider.length || 0;\n    }\n\n    getBorrowerCompletion({\n      loan,\n      borrowers\n    }) {\n      return (this.getBorrowerFilesProgress({\n        loan,\n        borrowers\n      }).percent + this.personalInfoPercent({\n        borrowers\n      })) / 2;\n    }\n\n    getBorrowerFilesProgress({\n      loan,\n      borrowers\n    }) {\n      const percentages = arrayify(borrowers).reduce((total, borrower) => {\n        const {\n          percent,\n          count\n        } = filesPercent({\n          fileArray: getBorrowerDocuments({\n            loan,\n            id: borrower._id\n          }, this),\n          doc: borrower\n        });\n        return {\n          percent: total.percent + percent * count,\n          count: total.count + count\n        };\n      }, {\n        percent: 0,\n        count: 0\n      });\n      return (0, _objectSpread2.default)({}, percentages, {\n        percent: percentages.count === 0 ? 1 : percentages.percent / percentages.count\n      });\n    }\n\n    getFunds({\n      borrowers,\n      type\n    }) {\n      if (this.isTypeWithArrayValues(type)) {\n        return this.getArrayValues({\n          borrowers,\n          key: type\n        });\n      }\n\n      return this.sumValues({\n        borrowers,\n        keys: type\n      });\n    }\n\n    getFortune({\n      borrowers\n    }) {\n      return this.sumValues({\n        borrowers,\n        keys: OWN_FUNDS_TYPES.BANK_FORTUNE\n      });\n    }\n\n    getThirdPartyFortune({\n      borrowers\n    }) {\n      const val = this.sumValues({\n        borrowers,\n        keys: OWN_FUNDS_TYPES.THIRD_PARTY_FORTUNE\n      });\n      return val;\n    }\n\n    getExpenses({\n      borrowers\n    }) {\n      return this.getArrayValues({\n        borrowers,\n        key: 'expenses'\n      });\n    }\n\n    getInsurance2({\n      borrowers\n    }) {\n      return this.getArrayValues({\n        borrowers,\n        key: OWN_FUNDS_TYPES.INSURANCE_2\n      });\n    }\n\n    getInsurance3A({\n      borrowers\n    }) {\n      return this.getArrayValues({\n        borrowers,\n        key: OWN_FUNDS_TYPES.INSURANCE_3A\n      });\n    }\n\n    getBank3A({\n      borrowers\n    }) {\n      return this.getArrayValues({\n        borrowers,\n        key: OWN_FUNDS_TYPES.BANK_3A\n      });\n    }\n\n    getInsurance3B({\n      borrowers\n    }) {\n      return this.getArrayValues({\n        borrowers,\n        key: OWN_FUNDS_TYPES.INSURANCE_3B\n      });\n    }\n\n    getInsuranceFortune({\n      borrowers\n    }) {\n      return [this.getInsurance2, this.getInsurance3A, this.getInsurance3B, this.getBank3A].reduce((sum, func) => sum + func({\n        borrowers\n      }), 0);\n    }\n\n    getCashFortune({\n      borrowers\n    }) {\n      return [this.getFortune, this.getThirdPartyFortune, this.getInsurance3A, this.getInsurance3B, this.getBank3A].reduce((sum, func) => sum + func({\n        borrowers\n      }), 0);\n    }\n\n    getMissingBorrowerFields({\n      borrowers\n    }) {\n      const res = arrayify(borrowers).reduce((missingIds, borrower) => {\n        const formArray = getBorrowerInfoArray({\n          borrowers: arrayify(borrowers),\n          borrowerId: borrower._id\n        });\n        const formArray2 = getBorrowerFinanceArray({\n          borrowers: arrayify(borrowers),\n          borrowerId: borrower._id\n        });\n        return [...missingIds, ...getMissingFieldIds(formArray, borrower), ...getMissingFieldIds(formArray2, borrower)];\n      }, []);\n      return res;\n    }\n\n    getMissingBorrowerDocuments({\n      loan,\n      borrowers\n    }) {\n      return arrayify(borrowers).reduce((missingIds, borrower) => [...missingIds, ...getMissingDocumentIds({\n        doc: borrower,\n        fileArray: getBorrowerDocuments({\n          loan,\n          id: borrower._id\n        }, this)\n      })], []);\n    }\n\n    getOtherFortune({\n      borrowers\n    }) {\n      return this.getArrayValues({\n        borrowers,\n        key: 'otherFortune'\n      });\n    }\n\n    getOtherIncome({\n      borrowers\n    }) {\n      return this.getArrayValues({\n        borrowers,\n        key: 'otherIncome'\n      });\n    }\n\n    getTotalFunds({\n      borrowers\n    }) {\n      return this.getFortune({\n        borrowers\n      }) + this.getThirdPartyFortune({\n        borrowers\n      }) + this.getInsuranceFortune({\n        borrowers\n      });\n    }\n\n    getRealEstateFortune({\n      borrowers\n    }) {\n      return this.getArrayValues({\n        borrowers,\n        key: 'realEstate',\n        mapFunc: ({\n          value = 0,\n          loan = 0\n        }) => value - loan\n      });\n    }\n\n    getRealEstateValue({\n      borrowers\n    }) {\n      return this.getArrayValues({\n        borrowers,\n        key: 'realEstate'\n      });\n    }\n\n    getRealEstateDebt({\n      borrowers\n    }) {\n      return this.getArrayValues({\n        borrowers,\n        key: 'realEstate',\n        mapFunc: ({\n          loan = 0\n        }) => loan\n      });\n    }\n\n    getRealEstateIncome({\n      borrowers\n    }) {\n      const realEstateIncome = this.getArrayValues({\n        borrowers,\n        key: 'realEstate',\n        mapFunc: ({\n          income = 0\n        }) => income\n      }) * this.realEstateIncomeConsideration;\n      return realEstateIncome;\n    }\n\n    getRealEstateIncomeTotal({\n      borrowers\n    }) {\n      if (this.realEstateIncomeAlgorithm === REAL_ESTATE_INCOME_ALGORITHMS.POSITIVE_NEGATIVE_SPLIT) {\n        return 0;\n      }\n\n      return this.getRealEstateIncome({\n        borrowers\n      });\n    }\n\n    shouldUseNetSalary() {\n      return this.incomeConsiderationType === INCOME_CONSIDERATION_TYPES.NET;\n    }\n\n    getSalary({\n      borrowers\n    }) {\n      if (this.shouldUseNetSalary()) {\n        return this.getNetSalary({\n          borrowers\n        });\n      }\n\n      return this.sumValues({\n        borrowers,\n        keys: 'salary'\n      });\n    }\n\n    getNetSalary({\n      borrowers\n    }) {\n      return this.sumValues({\n        borrowers,\n        keys: 'netSalary'\n      });\n    }\n\n    getFortuneReturns({\n      borrowers\n    }) {\n      if (this.fortuneReturnsRatio) {\n        return this.fortuneReturnsRatio * this.getFortune({\n          borrowers\n        });\n      }\n\n      return 0;\n    }\n\n    getTotalIncome({\n      borrowers\n    }) {\n      let sum = arrayify(borrowers).reduce((total, borrower) => {\n        let borrowerIncome = 0;\n        borrowerIncome += this.getSalary({\n          borrowers: borrower\n        }) || 0;\n        borrowerIncome += this.getBonusIncome({\n          borrowers: borrower\n        }) || 0;\n        borrowerIncome += this.getOtherIncome({\n          borrowers: borrower\n        }) || 0;\n        borrowerIncome += this.getFortuneReturns({\n          borrowers: borrower\n        }) || 0;\n        borrowerIncome += this.getRealEstateIncomeTotal({\n          borrowers: borrower\n        }) || 0;\n        return total + borrowerIncome;\n      }, 0);\n      sum -= this.getFormattedExpenses({\n        borrowers\n      }).subtract || 0;\n      return sum;\n    }\n\n    getRetirement({\n      borrowers\n    }) {\n      const argMap = borrowers.reduce((obj, {\n        age,\n        gender\n      }, index) => (0, _objectSpread2.default)({}, obj, {\n        [`${`age${index + 1}`}`]: age,\n        [`${`gender${index + 1}`}`]: gender\n      }), {});\n      return this.getYearsToRetirement(argMap);\n    }\n\n    getAmortizationDuration({\n      borrowers\n    }) {\n      const retirement = this.getRetirement({\n        borrowers\n      });\n      return Math.min(15, retirement);\n    } // personalInfoPercent - Determines the completion rate of the borrower's\n    // personal information forms\n\n\n    personalInfoPercent({\n      borrowers\n    }) {\n      if (!borrowers || Array.isArray(borrowers) && !borrowers.length) {\n        return 0;\n      }\n\n      const array = arrayify(borrowers).reduce((arr, b) => {\n        const personalFormArray = getBorrowerInfoArray({\n          borrowers: arrayify(borrowers),\n          borrowerId: b._id\n        });\n        const financeFormArray = getBorrowerFinanceArray({\n          borrowers: arrayify(borrowers),\n          borrowerId: b._id\n        });\n        return [...arr, ...getCountedArray(personalFormArray, b), ...getCountedArray(financeFormArray, b)];\n      }, []);\n      return getPercent(array);\n    }\n\n    personalInfoPercentSimple({\n      borrowers,\n      loan\n    }) {\n      if ((!borrowers || !borrowers.length) && !loan.borrowers.length) {\n        return 0;\n      }\n\n      const array = arrayify(borrowers).reduce((arr, b) => {\n        const simpleFormArray = getBorrowerSimpleArray({\n          borrowers: arrayify(borrowers),\n          borrowerId: b._id,\n          loan\n        });\n        return [...arr, ...getCountedArray(simpleFormArray, b)];\n      }, []);\n      return getPercent(array);\n    }\n\n    borrowerInfoPercent({\n      borrowers\n    }) {\n      if (!borrowers || !borrowers.length) {\n        return 0;\n      }\n\n      const array = arrayify(borrowers).reduce((arr, b) => {\n        const personalFormArray = getBorrowerInfoArray({\n          borrowers: arrayify(borrowers),\n          borrowerId: b._id\n        });\n        return [...arr, ...getCountedArray(personalFormArray, b)];\n      }, []);\n      return getPercent(array);\n    }\n\n    borrowerFinancePercent({\n      borrowers\n    }) {\n      const array = arrayify(borrowers).reduce((arr, b) => {\n        const financeFormArray = getBorrowerFinanceArray({\n          borrowers: arrayify(borrowers),\n          borrowerId: b._id\n        });\n        return [...arr, ...getCountedArray(financeFormArray, b)];\n      }, []);\n      return getPercent(array);\n    }\n\n    getBorrowerFormHash({\n      borrowers\n    }) {\n      return getFormValuesHashMultiple(arrayify(borrowers).reduce((arr, borrower) => [...arr, {\n        formArray: getBorrowerFinanceArray({\n          borrowers: arrayify(borrowers),\n          borrowerId: borrower._id\n        }),\n        doc: borrower\n      }, {\n        formArray: getBorrowerInfoArray({\n          borrowers: arrayify(borrowers),\n          borrowerId: borrower._id\n        }),\n        doc: borrower\n      }], []));\n    }\n\n    sumValues({\n      borrowers,\n      keys\n    }) {\n      return arrayify(keys).reduce((total, key) => total + arrayify(borrowers).reduce((t, b) => t + (b[key] || 0), 0), 0);\n    }\n\n    getNetFortune({\n      borrowers\n    }) {\n      return this.getTotalFunds({\n        borrowers\n      }) + this.getRealEstateFortune({\n        borrowers\n      }) + this.getOtherFortune({\n        borrowers\n      });\n    }\n\n    getMortgageNotes({\n      borrowers\n    }) {\n      return borrowers.reduce((arr, {\n        mortgageNotes: notes = []\n      }) => [...arr, ...notes], []);\n    }\n\n    getRealEstateExpenses({\n      borrowers\n    }) {\n      const realEstate = arrayify(borrowers).reduce((arr, borrower) => [...arr, ...(borrower.realEstate || [])], []);\n      const realEstateCost = realEstate.reduce((tot, obj) => tot + this.getRealEstateCost(obj), 0);\n      return realEstateCost;\n    }\n\n    getRealEstateDeltas({\n      borrowers\n    }) {\n      const allRealEstate = arrayify(borrowers).map(({\n        realEstate\n      }) => realEstate).reduce((arr, realEstate) => [...arr, ...realEstate], []);\n      return allRealEstate.map(realEstate => {\n        const {\n          income\n        } = realEstate;\n        const expenses = this.getRealEstateCost(realEstate) * 12;\n        return Math.round(income * this.realEstateIncomeConsideration) - expenses;\n      });\n    }\n\n    getRealEstateCost({\n      loan,\n      value\n    }) {\n      const amortizationRate = this.getAmortizationRateBase({\n        borrowRatio: super.getBorrowRatio({\n          loan,\n          propertyValue: value\n        })\n      });\n      return super.getTheoreticalMonthly({\n        propAndWork: value,\n        loanValue: loan,\n        amortizationRate\n      }).total;\n    }\n\n    sumArray(arr) {\n      return arr.reduce((tot, v = 0) => tot + v, 0);\n    } // Returns an object with all the types of expenses, combined between\n    // borrowers:\n    // {\n    //  LEASING: 23000,\n    //  WELFARE: 4000,\n    //  THEORETICAL_REAL_ESTATE: 30000,\n    //  etc\n    // }\n\n\n    getAllExpenses({\n      borrowers\n    }) {\n      if (this.realEstateIncomeAlgorithm === REAL_ESTATE_INCOME_ALGORITHMS.POSITIVE_NEGATIVE_SPLIT) {\n        const deltas = this.getRealEstateDeltas({\n          borrowers\n        });\n        return (0, _objectSpread2.default)({\n          // Negative deltas should be made positive so they can be added to expenses\n          [EXPENSE_TYPES.REAL_ESTATE_DELTA_NEGATIVE]: -this.sumArray(deltas.filter(delta => delta < 0)),\n          // Positive deltas should be made negative so they can be subtracted from income,\n          // and therefore increase income\n          [EXPENSE_TYPES.REAL_ESTATE_DELTA_POSITIVE]: -this.sumArray(deltas.filter(delta => delta > 0))\n        }, this.getGroupedExpenses({\n          borrowers\n        }));\n      }\n\n      return (0, _objectSpread2.default)({\n        [EXPENSE_TYPES.THEORETICAL_REAL_ESTATE]: this.getRealEstateExpenses({\n          borrowers\n        }) * 12\n      }, this.getGroupedExpenses({\n        borrowers\n      }));\n    } // Same as getAllExpenses, but without real estate expenses\n\n\n    getGroupedExpenses({\n      borrowers\n    }) {\n      const flattenedExpenses = [].concat([], ...arrayify(borrowers).map(({\n        expenses\n      }) => expenses)).filter(x => x);\n      return flattenedExpenses.reduce((obj, {\n        value,\n        description\n      }) => (0, _objectSpread2.default)({}, obj, {\n        [description]: (obj[description] || 0) + value\n      }), {});\n    }\n\n    shouldSubtractExpenseFromIncome(expenseType) {\n      return this.expensesSubtractFromIncome.includes(expenseType);\n    }\n\n    groupRealEstateDeltas({\n      groupedExpenses,\n      expenses,\n      toSubtractFromIncome\n    }) {\n      const negativeDeltas = expenses[EXPENSE_TYPES.REAL_ESTATE_DELTA_NEGATIVE];\n      const positiveDeltas = expenses[EXPENSE_TYPES.REAL_ESTATE_DELTA_POSITIVE];\n\n      if (toSubtractFromIncome) {\n        // If we want to get expenses to subtract from income, add the\n        // positiveDeltas negatively, so they are in fact added to income\n        return (0, _objectSpread2.default)({}, groupedExpenses, {\n          [EXPENSE_TYPES.REAL_ESTATE_DELTA_POSITIVE]: positiveDeltas\n        });\n      }\n\n      return (0, _objectSpread2.default)({}, groupedExpenses, {\n        [EXPENSE_TYPES.REAL_ESTATE_DELTA_NEGATIVE]: negativeDeltas\n      });\n    } // Returns an object with all expenses to subtract from income\n    // or all expenses to add to expenses, depending on the param `toSubtractFromIncome`¨\n    // {\n    //  LEASING: 23000,\n    // }\n\n\n    getGroupedExpensesBySide({\n      borrowers,\n      toSubtractFromIncome = true\n    }) {\n      const expenses = this.getAllExpenses({\n        borrowers\n      });\n      const expensesBySide = Object.keys(expenses).filter(expenseType => !this.expenseTypeIsDelta(expenseType)).filter(expenseType => {\n        const subtractExpenseTypeFromIncome = this.expensesSubtractFromIncome.includes(expenseType);\n        return toSubtractFromIncome ? subtractExpenseTypeFromIncome : !subtractExpenseTypeFromIncome;\n      });\n      const groupedExpenses = expensesBySide.reduce((obj, expenseType) => (0, _objectSpread2.default)({}, obj, {\n        [expenseType]: expenses[expenseType]\n      }), {});\n\n      if (this.realEstateIncomeAlgorithm === REAL_ESTATE_INCOME_ALGORITHMS.POSITIVE_NEGATIVE_SPLIT) {\n        return this.groupRealEstateDeltas({\n          groupedExpenses,\n          expenses,\n          toSubtractFromIncome\n        });\n      }\n\n      return groupedExpenses;\n    }\n\n    expenseTypeIsDelta(expenseType) {\n      return [EXPENSE_TYPES.REAL_ESTATE_DELTA_NEGATIVE, EXPENSE_TYPES.REAL_ESTATE_DELTA_POSITIVE].includes(expenseType);\n    }\n\n    formatRealEstateExpenses({\n      obj,\n      expenseType,\n      value\n    }) {\n      if (expenseType === EXPENSE_TYPES.REAL_ESTATE_DELTA_NEGATIVE) {\n        return (0, _objectSpread2.default)({}, obj, {\n          add: obj.add + value\n        });\n      }\n\n      return (0, _objectSpread2.default)({}, obj, {\n        subtract: obj.subtract + value\n      });\n    } // Returns an object with 2 keys, `subtract` and `add` that contain the sum\n    // of all expenses to \"subtract from income\" and \"add to expenses\", respectively\n\n\n    getFormattedExpenses({\n      borrowers\n    }) {\n      const expenses = this.getAllExpenses({\n        borrowers\n      });\n      return Object.keys(expenses).reduce((obj, expenseType) => {\n        const value = expenses[expenseType];\n\n        if (this.expenseTypeIsDelta(expenseType)) {\n          return this.formatRealEstateExpenses({\n            obj,\n            expenseType,\n            value\n          });\n        }\n\n        if (this.expensesSubtractFromIncome.indexOf(expenseType) >= 0) {\n          return (0, _objectSpread2.default)({}, obj, {\n            subtract: obj.subtract + value\n          });\n        }\n\n        return (0, _objectSpread2.default)({}, obj, {\n          add: obj.add + value\n        });\n      }, {\n        subtract: 0,\n        add: 0\n      });\n    }\n\n    getCommentsForExpenseType({\n      borrowers,\n      type\n    }) {\n      return arrayify(borrowers).reduce((comments, {\n        expenses = []\n      }) => {\n        const expensesOfType = expenses.filter(({\n          description\n        }) => description === type);\n        return [...comments, ...expensesOfType.map(({\n          comment\n        }) => comment)].filter(x => x);\n      }, []);\n    }\n\n    getCommentsForOtherIncomeType({\n      borrowers,\n      type\n    }) {\n      return arrayify(borrowers).reduce((comments, {\n        otherIncome = []\n      }) => {\n        const otherIncomeOfType = otherIncome.filter(({\n          description\n        }) => description === type);\n        return [...comments, ...otherIncomeOfType.map(({\n          comment\n        }) => comment)].filter(x => x);\n      }, []);\n    }\n\n    canCalculateSolvency({\n      borrowers\n    }) {\n      if (!borrowers.length) {\n        return false;\n      }\n\n      if (this.getCashFortune({\n        borrowers\n      }) === 0) {\n        return false;\n      }\n\n      if (this.getSalary({\n        borrowers\n      }) === 0) {\n        return false;\n      }\n\n      return true;\n    }\n\n  }, _temp;\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"CombinedCalculator.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/Calculator/CombinedCalculator.js                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  withCombinedCalculator: () => withCombinedCalculator\n});\nlet getAggregatePercent;\nmodule.link(\"../general\", {\n  getAggregatePercent(v) {\n    getAggregatePercent = v;\n  }\n\n}, 0);\n\nconst withCombinedCalculator = (SuperClass = class {}) => class extends SuperClass {\n  filesProgress({\n    loan\n  }) {\n    const hasPromotion = loan.promotions && loan.promotions.length > 0;\n    const progress = [this.getLoanFilesProgress, this.getBorrowerFilesProgress, !hasPromotion && this.getPropertyFilesProgress].filter(x => x !== false).map(f => f({\n      loan\n    })).filter(x => x);\n    return getAggregatePercent(progress);\n  }\n\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"LenderRulesInitializator.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/Calculator/LenderRulesInitializator.js                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  withLenderRulesInitializator: () => withLenderRulesInitializator\n});\nlet parseFilter;\nmodule.link(\"../../api/lenderRules/helpers\", {\n  parseFilter(v) {\n    parseFilter = v;\n  }\n\n}, 0);\nlet getMatchingRules;\nmodule.link(\"../../api/lenderRules/helpers\", {\n  getMatchingRules(v) {\n    getMatchingRules = v;\n  }\n\n}, 1);\nlet LENDER_RULES_VARIABLES, OWN_FUNDS_TYPES;\nmodule.link(\"../../api/constants\", {\n  LENDER_RULES_VARIABLES(v) {\n    LENDER_RULES_VARIABLES = v;\n  },\n\n  OWN_FUNDS_TYPES(v) {\n    OWN_FUNDS_TYPES = v;\n  }\n\n}, 2);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst withLenderRulesInitializator = (SuperClass = class {}) => {\n  var _temp;\n\n  return _temp = class extends SuperClass {\n    constructor(settings) {\n      super(settings);\n\n      _defineProperty(this, \"setOrganisationName\", lenderRules => {\n        this.organisationName = lenderRules.length ? lenderRules[0].organisation && lenderRules[0].organisation.name : null;\n      });\n\n      this.initialize(settings);\n    }\n\n    initialize({\n      loan,\n      structureId,\n      lenderRules = []\n    }) {\n      if (!(loan && lenderRules && lenderRules.length > 0)) {\n        return;\n      }\n\n      const sortedlenderRules = lenderRules.sort(({\n        order: orderA\n      }, {\n        order: orderB\n      }) => orderA - orderB); // Store the rules for retrieval later\n\n      this.lenderRules = sortedlenderRules;\n      this.setOrganisationName(sortedlenderRules);\n      this.ruleOrigin = {};\n      this.matchedRules = []; // Global rules\n\n      const globalRules = this.getGlobalLenderRules({\n        loan,\n        structureId,\n        lenderRules: sortedlenderRules\n      });\n      this.applyRules(globalRules); // Primary rules depend only on raw data\n\n      const primaryRules = this.getPrimaryLenderRules({\n        loan,\n        structureId,\n        lenderRules: sortedlenderRules\n      });\n      this.applyRules(primaryRules); // Secondary rules depend on what is calculated with the rules applied from the primary rules\n\n      const secondaryRules = this.getSecondaryLenderRules({\n        loan,\n        structureId,\n        lenderRules: sortedlenderRules\n      });\n      this.applyRules(secondaryRules);\n      this.cleanUpUnusedRules();\n    }\n\n    storeRuleOrigin(rules, lenderRulesId) {\n      Object.keys(rules).forEach(ruleName => {\n        this.ruleOrigin[ruleName] = lenderRulesId;\n      });\n    }\n\n    getOriginOfRule(ruleName) {\n      const lenderRulesId = this.ruleOrigin[ruleName];\n      const lenderRules = this.lenderRules.find(({\n        _id\n      }) => _id === lenderRulesId);\n      return lenderRules;\n    }\n\n    getLenderRulesVariables({\n      loan,\n      structureId\n    }) {\n      return {\n        [LENDER_RULES_VARIABLES.RESIDENCE_TYPE]: loan.residenceType,\n        [LENDER_RULES_VARIABLES.CANTON]: this.selectPropertyKey({\n          loan,\n          structureId,\n          key: LENDER_RULES_VARIABLES.CANTON\n        }),\n        [LENDER_RULES_VARIABLES.WANTED_LOAN]: this.selectStructureKey({\n          loan,\n          structureId,\n          key: LENDER_RULES_VARIABLES.WANTED_LOAN\n        }),\n        [LENDER_RULES_VARIABLES.PROPERTY_VALUE]: this.selectPropertyValue({\n          loan,\n          structureId\n        }),\n        [LENDER_RULES_VARIABLES.INSIDE_AREA]: this.selectPropertyKey({\n          loan,\n          structureId,\n          key: LENDER_RULES_VARIABLES.INSIDE_AREA\n        }),\n        [LENDER_RULES_VARIABLES.BANK_FORTUNE]: this.getFortune({\n          loan\n        }),\n        [LENDER_RULES_VARIABLES.BORROW_RATIO]: this.getBorrowRatio({\n          loan,\n          structureId\n        }),\n        [LENDER_RULES_VARIABLES.INCOME]: this.getTotalIncome({\n          loan\n        }),\n        [LENDER_RULES_VARIABLES.PROPERTY_TYPE]: this.selectPropertyKey({\n          loan,\n          structureId,\n          key: LENDER_RULES_VARIABLES.PROPERTY_TYPE\n        }),\n        [LENDER_RULES_VARIABLES.ZIP_CODE]: this.selectPropertyKey({\n          loan,\n          structureId,\n          key: LENDER_RULES_VARIABLES.ZIP_CODE\n        }),\n        [LENDER_RULES_VARIABLES.REMAINING_BANK_FORTUNE]: this.getRemainingFundsOfType({\n          loan,\n          structureId,\n          type: OWN_FUNDS_TYPES.BANK_FORTUNE\n        })\n      };\n    }\n\n    getGlobalLenderRules({\n      lenderRules\n    }) {\n      const globalRules = lenderRules.filter(({\n        filter\n      }) => filter.and && filter.and.length === 1 && filter.and[0] === true);\n      const matchingRules = getMatchingRules(globalRules, {}, this.storeRuleOrigin);\n      return matchingRules;\n    }\n\n    getPrimaryLenderRules({\n      loan,\n      structureId,\n      lenderRules\n    }) {\n      const primaryRules = lenderRules.filter(rules => !this.lenderRulesIsSecondary(rules));\n      const matchingRules = getMatchingRules(primaryRules, this.getLenderRulesVariables({\n        loan,\n        structureId\n      }), this.storeRuleOrigin);\n      return matchingRules;\n    } // Gets the secondary lender rules that require other lender rules to\n    // already have been applied\n\n\n    getSecondaryLenderRules({\n      loan,\n      structureId,\n      lenderRules\n    }) {\n      const secondaryRules = lenderRules.filter(this.lenderRulesIsSecondary);\n      const matchingRules = getMatchingRules(secondaryRules, this.getLenderRulesVariables({\n        loan,\n        structureId\n      }), this.storeRuleOrigin);\n      return matchingRules;\n    }\n\n    lenderRulesIsSecondary({\n      filter\n    }) {\n      return filter.and.map(parseFilter).some(({\n        variable\n      }) => [LENDER_RULES_VARIABLES.BORROW_RATIO, LENDER_RULES_VARIABLES.INCOME].includes(variable));\n    }\n\n    applyRules(rules) {\n      if (rules.names) {\n        this.matchedRules = [...this.matchedRules, ...rules.names.filter(x => x)];\n      }\n\n      const rulesToApply = ['adminComments', 'allowPledge', 'amortizationGoal', 'amortizationYears', 'bonusAlgorithm', 'bonusConsideration', 'bonusHistoryToConsider', 'companyIncomeConsideration', 'companyIncomeHistoryToConsider', 'dividendsConsideration', 'dividendsHistoryToConsider', 'expensesSubtractFromIncome', 'fortuneReturnsRatio', 'incomeConsiderationType', 'investmentIncomeConsideration', 'maxBorrowRatio', 'maxIncomeRatio', 'pdfComments', 'pensionIncomeConsideration', 'realEstateIncomeAlgorithm', 'realEstateIncomeConsideration', 'realEstateIncomeConsiderationType', 'theoreticalInterestRate', 'theoreticalInterestRate2ndRank', 'theoreticalMaintenanceRate'];\n      rulesToApply.forEach(rule => {\n        if (rules[rule] !== undefined && rules[rule] !== null) {\n          this[rule] = rules[rule];\n        }\n      });\n    }\n\n    cleanUpUnusedRules() {\n      this.maxIncomeRatioTight = 0;\n      this.maxBorrowRatioWithPledge = 0;\n    }\n\n  }, _temp;\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"LoanCalculator.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/Calculator/LoanCalculator.js                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  withLoanCalculator: () => withLoanCalculator\n});\nlet OWN_FUNDS_TYPES;\nmodule.link(\"../../api/constants\", {\n  OWN_FUNDS_TYPES(v) {\n    OWN_FUNDS_TYPES = v;\n  }\n\n}, 0);\nlet getLoanDocuments;\nmodule.link(\"../../api/files/documents\", {\n  getLoanDocuments(v) {\n    getLoanDocuments = v;\n  }\n\n}, 1);\nlet OWN_FUNDS_USAGE_TYPES;\nmodule.link(\"../../api/constants\", {\n  OWN_FUNDS_USAGE_TYPES(v) {\n    OWN_FUNDS_USAGE_TYPES = v;\n  }\n\n}, 2);\nlet filesPercent, getMissingDocumentIds;\nmodule.link(\"../../api/files/fileHelpers\", {\n  filesPercent(v) {\n    filesPercent = v;\n  },\n\n  getMissingDocumentIds(v) {\n    getMissingDocumentIds = v;\n  }\n\n}, 3);\nlet getRefinancingFormArray;\nmodule.link(\"../../arrays/RefinancingFormArray\", {\n  default(v) {\n    getRefinancingFormArray = v;\n  }\n\n}, 4);\nlet NotaryFeesCalculator;\nmodule.link(\"../notaryFees/NotaryFeesCalculator\", {\n  default(v) {\n    NotaryFeesCalculator = v;\n  }\n\n}, 5);\nlet getCountedArray;\nmodule.link(\"../formArrayHelpers\", {\n  getCountedArray(v) {\n    getCountedArray = v;\n  }\n\n}, 6);\nlet getPercent;\nmodule.link(\"../general\", {\n  getPercent(v) {\n    getPercent = v;\n  }\n\n}, 7);\n\nconst withLoanCalculator = (SuperClass = class {}) => class extends SuperClass {\n  getProjectValue({\n    loan,\n    structureId\n  }) {\n    const propAndWork = this.getPropAndWork({\n      loan,\n      structureId\n    });\n\n    if (!propAndWork) {\n      return 0;\n    }\n\n    const value = propAndWork + this.getFees({\n      loan,\n      structureId\n    }).total;\n    return value;\n  }\n\n  getTotalUsed({\n    loan,\n    structureId\n  }) {\n    const ownFunds = this.selectStructureKey({\n      loan,\n      structureId,\n      key: 'ownFunds'\n    });\n    return ownFunds.reduce((sum, {\n      value\n    }) => sum + value, 0);\n  }\n\n  getTotalPledged({\n    loan,\n    structureId\n  }) {\n    const ownFunds = this.selectStructureKey({\n      loan,\n      structureId,\n      key: 'ownFunds'\n    });\n    return ownFunds.filter(({\n      usageType\n    }) => usageType === OWN_FUNDS_USAGE_TYPES.PLEDGE).reduce((sum, {\n      value\n    }) => sum + value, 0);\n  }\n\n  getFees({\n    loan,\n    structureId\n  }) {\n    const notaryFees = this.selectStructureKey({\n      loan,\n      structureId,\n      key: 'notaryFees'\n    }); // Custom notary fees are provided\n\n    if (notaryFees === 0 || notaryFees) {\n      return {\n        total: notaryFees\n      };\n    }\n\n    const calculator = this.getFeesCalculator({\n      loan,\n      structureId\n    });\n    const calculatedNotaryFees = calculator.getNotaryFeesForLoan({\n      loan,\n      structureId\n    });\n    return calculatedNotaryFees;\n  }\n\n  getFeesCalculator({\n    loan,\n    structureId\n  }) {\n    const canton = this.selectPropertyKey({\n      loan,\n      structureId,\n      key: 'canton'\n    });\n    return new NotaryFeesCalculator({\n      canton\n    });\n  }\n\n  getInterests({\n    loan,\n    interestRates,\n    structureId\n  }) {\n    let finalInterestRates = interestRates || loan.currentInterestRates;\n    const offer = this.selectStructureKey({\n      loan,\n      key: 'offer',\n      structureId\n    });\n    const loanTranches = this.selectStructureKey({\n      loan,\n      key: 'loanTranches',\n      structureId\n    });\n    const loanValue = this.selectLoanValue({\n      loan,\n      structureId\n    });\n\n    if (offer) {\n      finalInterestRates = offer;\n    }\n\n    const interests = this.getInterestsWithTranches({\n      tranches: loanTranches,\n      interestRates: finalInterestRates\n    });\n    return interests * loanValue / 12;\n  }\n\n  getTheoreticalInterests({\n    loan,\n    structureId\n  }) {\n    const loanValue = this.selectLoanValue({\n      loan,\n      structureId\n    });\n    const propertyValue = this.selectPropertyValue({\n      loan,\n      structureId\n    });\n    const propertyWork = this.selectStructureKey({\n      loan,\n      structureId,\n      key: 'propertyWork'\n    }) || 0;\n    const firstRank = Math.min(loanValue, this.amortizationGoal * (propertyValue + propertyWork));\n    const secondRank = Math.max(0, loanValue - firstRank);\n    const firstRankInterests = firstRank * this.theoreticalInterestRate;\n    const secondRankInterests = secondRank * (this.theoreticalInterestRate2ndRank || this.theoreticalInterestRate);\n    return (firstRankInterests + secondRankInterests) / 12;\n  }\n\n  getTheoreticalMaintenance({\n    loan,\n    structureId\n  }) {\n    return this.getPropAndWork({\n      loan,\n      structureId\n    }) * this.theoreticalMaintenanceRate / 12;\n  }\n\n  getAmortization({\n    loan,\n    structureId,\n    offerOverride\n  }) {\n    const offer = this.selectOffer({\n      loan,\n      structureId\n    });\n    const loanValue = this.selectLoanValue({\n      loan,\n      structureId\n    });\n    const offerToUse = offerOverride || offer;\n\n    if (offerToUse) {\n      // Temporarily change amortizationGoal\n      const oldAmortizationGoal = this.amortizationGoal;\n      this.amortizationGoal = offerToUse.amortizationGoal;\n      const amortizationRate = this.getAmortizationRate({\n        loan,\n        amortizationYears: offerToUse.amortizationYears,\n        structureId\n      });\n      const amortization = amortizationRate * loanValue / 12;\n      this.amortizationGoal = oldAmortizationGoal;\n      return amortization;\n    }\n\n    const amortizationRate = this.getAmortizationRate({\n      loan,\n      structureId\n    });\n    return amortizationRate * loanValue / 12;\n  }\n\n  getTheoreticalAmortization({\n    loan,\n    structureId\n  }) {\n    const loanValue = this.selectLoanValue({\n      loan,\n      structureId\n    });\n    return this.getAmortizationRate({\n      loan,\n      structureId\n    }) * loanValue / 12;\n  }\n\n  getAmortizationRate({\n    loan,\n    amortizationYears,\n    structureId\n  }) {\n    const borrowRatio = this.getBorrowRatio({\n      loan,\n      structureId\n    });\n    return this.getAmortizationRateBase({\n      borrowRatio,\n      amortizationYears,\n      // Prevent caching of this function if amortizationGoal has changed\n      cacheFix: this.amortizationGoal\n    });\n  }\n\n  getMonthly({\n    loan,\n    interestRates,\n    structureId\n  }) {\n    return this.getInterests({\n      loan,\n      interestRates,\n      structureId\n    }) + this.getAmortization({\n      loan,\n      structureId\n    });\n  }\n\n  getTheoreticalPropertyCost({\n    loan,\n    structureId,\n    asObject = false\n  }) {\n    const interests = this.getTheoreticalInterests({\n      loan,\n      structureId\n    });\n    const amortization = this.getTheoreticalAmortization({\n      loan,\n      structureId\n    });\n    const maintenance = this.getTheoreticalMaintenance({\n      loan,\n      structureId\n    });\n    return asObject ? {\n      interests,\n      amortization,\n      maintenance,\n      total: interests + amortization + maintenance\n    } : interests + amortization + maintenance;\n  }\n\n  getTheoreticalMonthly({\n    loan,\n    structureId\n  }) {\n    const propertyCost = this.getTheoreticalPropertyCost({\n      loan,\n      structureId\n    });\n    const expensesToAddToTheoreticalCost = this.getFormattedExpenses({\n      loan,\n      structureId\n    }).add / 12;\n    return propertyCost + expensesToAddToTheoreticalCost;\n  }\n\n  getIncomeRatio({\n    loan,\n    structureId\n  }) {\n    const cost = this.getTheoreticalMonthly({\n      loan,\n      structureId\n    });\n    const income = this.getTotalIncome({\n      borrowers: loan.borrowers\n    });\n    const ratio = cost / (income / 12);\n\n    if (ratio > 1 || ratio < 0) {\n      return 1;\n    }\n\n    return ratio;\n  }\n\n  getBorrowRatio({\n    loan,\n    structureId\n  }) {\n    const wantedLoan = this.selectStructureKey({\n      loan,\n      structureId,\n      key: 'wantedLoan'\n    });\n    const propAndWork = this.getPropAndWork({\n      loan,\n      structureId\n    });\n    return wantedLoan / propAndWork;\n  }\n\n  getMaxBorrowRatio() {\n    return this.maxBorrowRatio;\n  }\n\n  loanHasMinimalInformation({\n    loan\n  }) {\n    const structure = this.selectStructure({\n      loan\n    });\n    return !!(structure.ownFunds && structure.ownFunds.length > 0 && this.selectPropertyValue({\n      loan\n    }) && this.selectLoanValue({\n      loan\n    }));\n  }\n\n  getLoanFilesProgress({\n    loan\n  }) {\n    return filesPercent({\n      fileArray: getLoanDocuments({\n        loan\n      }),\n      doc: loan\n    });\n  }\n\n  getMissingLoanDocuments({\n    loan\n  }) {\n    return getMissingDocumentIds({\n      fileArray: getLoanDocuments({\n        loan\n      }),\n      doc: loan\n    });\n  }\n\n  getTotalFinancing({\n    loan,\n    structureId\n  }) {\n    return this.selectStructureKey({\n      loan,\n      structureId,\n      key: 'wantedLoan'\n    }) + this.getNonPledgedOwnFunds({\n      loan,\n      structureId\n    });\n  }\n\n  getNonPledgedOwnFunds({\n    loan,\n    structureId\n  }) {\n    const ownFunds = this.selectStructureKey({\n      loan,\n      structureId,\n      key: 'ownFunds'\n    }) || [];\n    return ownFunds.filter(({\n      usageType\n    }) => usageType !== OWN_FUNDS_USAGE_TYPES.PLEDGE).reduce((sum, {\n      value\n    }) => sum + value, 0);\n  }\n\n  getPledgedOwnFunds({\n    loan,\n    structureId\n  }) {\n    const ownFunds = this.selectStructureKey({\n      loan,\n      structureId,\n      key: 'ownFunds'\n    }) || [];\n    return ownFunds.filter(({\n      usageType\n    }) => usageType === OWN_FUNDS_USAGE_TYPES.PLEDGE).reduce((sum, {\n      value\n    }) => sum + value, 0);\n  }\n\n  getUsedFundsOfType({\n    loan,\n    type,\n    usageType,\n    structureId\n  }) {\n    const ownFunds = this.selectStructureKey({\n      loan,\n      structureId,\n      key: 'ownFunds'\n    }) || [];\n    return ownFunds.filter(({\n      type: ownFundType\n    }) => type ? ownFundType === type : true).filter(({\n      usageType: ownFundUsageType\n    }) => usageType ? ownFundUsageType === usageType : true).reduce((sum, {\n      value\n    }) => sum + value, 0);\n  }\n\n  getRemainingFundsOfType({\n    loan,\n    structureId,\n    type\n  }) {\n    const ownFunds = this.getFunds({\n      loan,\n      type,\n      structureId\n    });\n    return ownFunds - this.getUsedFundsOfType({\n      loan,\n      type,\n      structureId,\n      usageType: type !== OWN_FUNDS_TYPES.BANK_FORTUNE ? OWN_FUNDS_USAGE_TYPES.WITHDRAW : undefined\n    });\n  }\n\n  getTotalRemainingFunds({\n    loan,\n    structureId\n  }) {\n    // Don't count extra third party fortune, as it is not a real \"loan\" from them\n    return Object.values(OWN_FUNDS_TYPES).filter(type => type !== OWN_FUNDS_TYPES.THIRD_PARTY_FORTUNE).reduce((sum, type) => sum + this.getRemainingFundsOfType({\n      loan,\n      structureId,\n      type\n    }), 0);\n  }\n\n  refinancingPercent({\n    loan\n  }) {\n    const array = getCountedArray(getRefinancingFormArray({\n      loan\n    }), loan);\n    return getPercent(array);\n  }\n\n  getMortgageNoteIncrease({\n    loan,\n    structureId\n  }) {\n    const {\n      borrowers = []\n    } = loan;\n    const {\n      mortgageNoteIds = []\n    } = this.selectStructure({\n      loan,\n      structureId\n    });\n    const {\n      mortgageNotes: propertyMortgageNotes = []\n    } = this.selectProperty({\n      loan,\n      structureId\n    });\n    const borrowerMortgageNotes = this.getMortgageNotes({\n      borrowers\n    });\n    const structureMortgageNotes = mortgageNoteIds.map(id => borrowerMortgageNotes.find(({\n      _id\n    }) => _id === id));\n    const allMortgageNotes = [...structureMortgageNotes, ...propertyMortgageNotes];\n    const mortgageNoteValue = allMortgageNotes.reduce((total, {\n      value\n    }) => total + (value || 0), 0);\n    const loanValue = this.selectLoanValue({\n      loan,\n      structureId\n    });\n    return Math.max(0, loanValue - mortgageNoteValue);\n  }\n\n  getCashUsed({\n    loan,\n    structureId\n  }) {\n    const {\n      ownFunds\n    } = this.selectStructure({\n      loan,\n      structureId\n    });\n    return ownFunds.filter(({\n      type,\n      usageType\n    }) => type !== OWN_FUNDS_TYPES.INSURANCE_2 && usageType !== OWN_FUNDS_USAGE_TYPES.PLEDGE).reduce((sum, {\n      value\n    }) => sum + value, 0);\n  }\n\n  getCashRatio({\n    loan,\n    structureId\n  }) {\n    const propAndWork = this.getPropAndWork({\n      loan,\n      structureId\n    });\n    const fees = this.getFees({\n      loan,\n      structureId\n    }).total;\n    const cashUsed = this.getCashUsed({\n      loan,\n      structureId\n    });\n    const cashRatio = (cashUsed - fees) / propAndWork;\n    return cashRatio;\n  }\n\n  hasEnoughCash({\n    loan,\n    structureId\n  }) {\n    return this.getCashRatio({\n      loan,\n      structureId\n    }) >= this.minCash;\n  }\n\n  structureIsValid({\n    loan,\n    structureId\n  }) {\n    const incomeRatio = this.getIncomeRatio({\n      loan,\n      structureId\n    });\n    const borrowRatio = this.getBorrowRatio({\n      loan,\n      structureId\n    });\n\n    if (incomeRatio > this.maxIncomeRatio || borrowRatio > this.maxBorrowRatio) {\n      return false;\n    }\n\n    if (!this.allowPledge && this.getPledgedOwnFunds({\n      loan,\n      structureId\n    }) > 0) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getEstimatedRevenues({\n    loan,\n    structureId\n  }) {\n    const propertyValue = this.selectPropertyValue({\n      loan,\n      structureId\n    });\n    return propertyValue * this.estimatedCommission;\n  }\n\n  getEstimatedReferralRevenues({\n    loan,\n    structureId\n  }) {\n    return this.getEstimatedRevenues({\n      loan,\n      structureId\n    }) * this.referralCommission;\n  }\n\n  getRequiredOwnFunds({\n    loan,\n    structureId\n  }) {\n    const projectValue = this.getProjectValue({\n      loan,\n      structureId\n    });\n    const loanValue = this.selectLoanValue({\n      loan,\n      structureId\n    });\n    return projectValue - loanValue;\n  }\n\n  getMissingOwnFunds({\n    loan,\n    structureId\n  }) {\n    const fundsRequired = this.getRequiredOwnFunds({\n      loan,\n      structureId\n    });\n    const totalCurrentFunds = this.getNonPledgedOwnFunds({\n      loan,\n      structureId\n    });\n    return fundsRequired - totalCurrentFunds;\n  }\n\n  isMissingOwnFunds({\n    loan,\n    structureId\n  }) {\n    const missingOwnFunds = this.getMissingOwnFunds({\n      loan,\n      structureId\n    });\n    return missingOwnFunds >= this.ownFundsRoundingAmount;\n  }\n\n  hasTooMuchOwnFunds({\n    loan,\n    structureId\n  }) {\n    const missingOwnFunds = this.getMissingOwnFunds({\n      loan,\n      structureId\n    });\n    return missingOwnFunds <= -this.ownFundsRoundingAmount;\n  }\n\n  hasCompleteStructure({\n    loan\n  }) {\n    return loan.structures.some(({\n      id\n    }) => {\n      const fundsRequired = this.getRequiredOwnFunds({\n        loan,\n        structureId: id\n      });\n\n      if (fundsRequired === 0) {\n        return false;\n      }\n\n      if (!this.isMissingOwnFunds({\n        loan,\n        structureId: id\n      }) && !this.hasTooMuchOwnFunds({\n        loan,\n        structureId: id\n      })) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"OfferCalculator.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/Calculator/OfferCalculator.js                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  withOfferCalculator: () => withOfferCalculator\n});\n\nconst withOfferCalculator = (SuperClass = class {}) => class extends SuperClass {};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"PromotionCalculator.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/Calculator/PromotionCalculator.js                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  withPromotionCalculator: () => withPromotionCalculator\n});\nlet pick;\nmodule.link(\"lodash/pick\", {\n  default(v) {\n    pick = v;\n  }\n\n}, 0);\nlet PROMOTION_TYPES, PURCHASE_TYPE;\nmodule.link(\"../../api/constants\", {\n  PROMOTION_TYPES(v) {\n    PROMOTION_TYPES = v;\n  },\n\n  PURCHASE_TYPE(v) {\n    PURCHASE_TYPE = v;\n  }\n\n}, 1);\n\nconst withPromotionCalculator = (SuperClass = class {}) => class extends SuperClass {\n  canAffordPromotionLot({\n    loan,\n    promotionLot\n  }) {\n    const {\n      value,\n      notaryFees\n    } = promotionLot;\n    return true;\n  }\n\n  getSolvency({\n    loan,\n    notaryFees = 0\n  }) {\n    const income = this.getTotalIncome({\n      loan\n    });\n    const bankFortune = this.getFortune({\n      loan\n    });\n    const cashFortune = this.getCashFortune({\n      loan\n    });\n    const insurance2 = this.getInsurance2({\n      loan\n    });\n    const results = {\n      withBankFortune: Math.round((bankFortune - notaryFees) / (1 - this.maxBorrowRatio)),\n      withInsurance2: this.getMaxPropertyValueWithInsurance2({\n        cash: bankFortune,\n        insurance2,\n        notaryFees\n      }),\n      withInsurance3: Math.round((cashFortune - notaryFees) / (1 - this.maxBorrowRatio)),\n      withInsurance2And3: this.getMaxPropertyValueWithInsurance2({\n        cash: cashFortune,\n        insurance2,\n        notaryFees\n      })\n    };\n    return Object.keys(results).reduce((obj, key) => (0, _objectSpread2.default)({}, obj, {\n      [key]: Math.round(results[key])\n    }), {});\n  }\n\n  getMaxPropertyValueWithInsurance2({\n    cash,\n    insurance2,\n    notaryFees\n  }) {\n    const availableFortune = cash - notaryFees;\n    const maxPropertyValue = availableFortune / this.minCash;\n    const canAffordProperty = (maxPropertyValue - availableFortune - insurance2) / maxPropertyValue <= this.maxBorrowRatio;\n\n    if (canAffordProperty) {\n      return Math.round(maxPropertyValue);\n    }\n\n    return Math.round((availableFortune + insurance2) / (1 - this.maxBorrowRatio));\n  }\n\n  getIncomeLimitedProperty({\n    borrowers,\n    income,\n    fortune,\n    propertyValue,\n    notaryFees\n  }) {\n    return this.getIncomeLimitedPropertyValue({\n      nF: notaryFees / propertyValue,\n      r: this.getAmortizationDuration({\n        borrowers\n      }),\n      i: this.theoreticalInterestRate,\n      mR: this.maxIncomeRatio,\n      m: this.theoreticalMaintenanceRate\n    })({\n      income,\n      fortune\n    });\n  }\n\n  formatPromotionOptionIntoProperty(promotionOption) {\n    if (!promotionOption) {\n      return;\n    }\n\n    const property = promotionOption.promotionLots[0].properties[0];\n    return (0, _objectSpread2.default)({}, pick(promotionOption.promotion, ['address1', 'address2', 'zipCode', 'city']), promotionOption, property, {\n      totalValue: promotionOption.value\n    });\n  }\n\n  shouldUseConstructionNotaryFees({\n    loan,\n    structureId\n  }) {\n    const {\n      promotions\n    } = loan;\n\n    if (loan.purchaseType === PURCHASE_TYPE.CONSTRUCTION) {\n      return true;\n    }\n\n    if (!this.isPromotionProperty({\n      loan,\n      structureId\n    })) {\n      return false;\n    }\n\n    if (!promotions || promotions.length && promotions.length === 0) {\n      return false;\n    }\n\n    const promotion = promotions[0];\n    return promotion.type === PROMOTION_TYPES.SHARE;\n  }\n\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"PropertyCalculator.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/Calculator/PropertyCalculator.js                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  withPropertyCalculator: () => withPropertyCalculator\n});\nlet getPropertyArray, getPropertyLoanArray;\nmodule.link(\"../../arrays/PropertyFormArray\", {\n  getPropertyArray(v) {\n    getPropertyArray = v;\n  },\n\n  getPropertyLoanArray(v) {\n    getPropertyLoanArray = v;\n  }\n\n}, 0);\nlet getPercent;\nmodule.link(\"../general\", {\n  getPercent(v) {\n    getPercent = v;\n  }\n\n}, 1);\nlet getCountedArray, getMissingFieldIds;\nmodule.link(\"../formArrayHelpers\", {\n  getCountedArray(v) {\n    getCountedArray = v;\n  },\n\n  getMissingFieldIds(v) {\n    getMissingFieldIds = v;\n  }\n\n}, 2);\nlet filesPercent, getMissingDocumentIds;\nmodule.link(\"../../api/files/fileHelpers\", {\n  filesPercent(v) {\n    filesPercent = v;\n  },\n\n  getMissingDocumentIds(v) {\n    getMissingDocumentIds = v;\n  }\n\n}, 3);\nlet getPropertyDocuments;\nmodule.link(\"../../api/files/documents\", {\n  getPropertyDocuments(v) {\n    getPropertyDocuments = v;\n  }\n\n}, 4);\nlet MiddlewareManager;\nmodule.link(\"../MiddlewareManager\", {\n  default(v) {\n    MiddlewareManager = v;\n  }\n\n}, 5);\n\nconst withPropertyCalculator = (SuperClass = class {}) => class extends SuperClass {\n  constructor(config) {\n    super(config);\n    this.initPropertyCalculator(config);\n  }\n\n  initPropertyCalculator(config) {\n    if (config && config.propertyMiddleware) {\n      const middlewareManager = new MiddlewareManager(this);\n      middlewareManager.applyToAllMethods([config.propertyMiddleware]);\n    }\n  }\n\n  propertyPercent({\n    loan,\n    structureId,\n    property\n  }) {\n    const {\n      borrowers\n    } = loan;\n    const structure = this.selectStructure({\n      loan,\n      structureId\n    });\n    const propertyToCalculateWith = property || structure.property;\n\n    if (!propertyToCalculateWith) {\n      return 0;\n    }\n\n    const formArray1 = getPropertyArray({\n      loan,\n      borrowers,\n      property: propertyToCalculateWith\n    });\n    const formArray2 = getPropertyLoanArray({\n      loan,\n      borrowers,\n      property: propertyToCalculateWith\n    });\n    return getPercent([...getCountedArray(formArray1, propertyToCalculateWith), ...getCountedArray(formArray2, loan)]);\n  }\n\n  getPropAndWork({\n    loan,\n    structureId\n  }) {\n    const propertyValue = this.selectPropertyValue({\n      loan,\n      structureId\n    });\n    const propertyWork = this.selectStructureKey({\n      loan,\n      structureId,\n      key: 'propertyWork'\n    }) || 0;\n    return super.getPropAndWork({\n      propertyValue,\n      propertyWork\n    });\n  }\n\n  getPropertyWork({\n    loan,\n    structureId\n  }) {\n    return this.selectPropertyWork({\n      loan,\n      structureId\n    });\n  }\n\n  getPropertyFilesProgress({\n    loan,\n    structureId,\n    property\n  }) {\n    const structure = this.selectStructure({\n      loan,\n      structureId\n    });\n    const propertyToCalculateWith = property || structure.property;\n\n    if (!propertyToCalculateWith) {\n      return 0;\n    }\n\n    return filesPercent({\n      doc: propertyToCalculateWith,\n      fileArray: getPropertyDocuments({\n        loan,\n        id: propertyToCalculateWith._id\n      })\n    });\n  }\n\n  getPropertyCompletion({\n    loan,\n    structureId,\n    property\n  }) {\n    const {\n      borrowers\n    } = loan;\n    const selectedProperty = this.selectProperty({\n      loan,\n      structureId\n    });\n    const propertyToCalculateWith = property || selectedProperty;\n    const formsProgress = this.propertyPercent({\n      loan,\n      borrowers,\n      property: propertyToCalculateWith\n    });\n    const filesProgress = this.getPropertyFilesProgress({\n      loan,\n      property: propertyToCalculateWith\n    });\n    return (formsProgress + filesProgress) / 2;\n  }\n\n  getMissingPropertyFields({\n    loan,\n    structureId,\n    property\n  }) {\n    const {\n      borrowers\n    } = loan;\n    const selectedProperty = this.selectProperty({\n      loan,\n      structureId\n    });\n    const propertyToCalculateWith = property || selectedProperty;\n    const formArray1 = getPropertyArray({\n      loan,\n      borrowers,\n      property: propertyToCalculateWith\n    });\n    const formArray2 = getPropertyLoanArray({\n      loan,\n      borrowers,\n      property: propertyToCalculateWith\n    });\n    return [...getMissingFieldIds(formArray1, propertyToCalculateWith), ...getMissingFieldIds(formArray2, loan)];\n  }\n\n  getMissingPropertyDocuments({\n    loan,\n    structureId,\n    property\n  }) {\n    const selectedProperty = this.selectProperty({\n      loan,\n      structureId\n    });\n    const propertyToCalculateWith = property || selectedProperty;\n    return getMissingDocumentIds({\n      doc: propertyToCalculateWith,\n      fileArray: getPropertyDocuments({\n        loan,\n        id: propertyToCalculateWith._id\n      })\n    });\n  }\n\n  hasDetailedPropertyValue({\n    loan,\n    structureId\n  }) {\n    const propertyExactValue = this.selectPropertyKey({\n      key: 'value',\n      loan,\n      structureId\n    });\n    const landValue = this.selectPropertyKey({\n      key: 'landValue',\n      loan,\n      structureId\n    });\n    const constructionValue = this.selectPropertyKey({\n      key: 'constructionValue',\n      loan,\n      structureId\n    });\n    return !propertyExactValue || !!(landValue && constructionValue);\n  }\n\n  isPromotionProperty({\n    loan,\n    structureId\n  }) {\n    const structure = this.selectStructure({\n      loan,\n      structureId\n    });\n    return !!structure.promotionOptionId;\n  }\n\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Selector.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/Calculator/Selector.js                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  withSelector: () => withSelector\n});\nlet createSelector;\nmodule.link(\"reselect\", {\n  createSelector(v) {\n    createSelector = v;\n  }\n\n}, 0);\nlet EMPTY_STRUCTURE;\nmodule.link(\"../../api/loans/loanConstants\", {\n  EMPTY_STRUCTURE(v) {\n    EMPTY_STRUCTURE = v;\n  }\n\n}, 1);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst withSelector = (SuperClass = class {}) => {\n  var _temp;\n\n  return _temp = class extends SuperClass {\n    constructor(...args) {\n      super(...args);\n\n      _defineProperty(this, \"getCashUsed\", this.makeSelectStructureKey('fortuneUsed'));\n    }\n\n    selectProperty({\n      loan,\n      structureId\n    } = {}) {\n      let propertyId = loan.structure && loan.structure.propertyId;\n      let promotionOptionId = loan.structure && loan.structure.promotionOptionId;\n      const structure = this.selectStructure({\n        loan,\n        structureId\n      });\n\n      if (!structureId) {\n        if (structure.property) {\n          return structure.property;\n        }\n\n        if (structure.propertyId) {\n          return loan.properties.find(({\n            _id\n          }) => _id === structure.propertyId);\n        }\n\n        if (structure.promotionOption) {\n          return this.formatPromotionOptionIntoProperty(structure.promotionOption);\n        }\n\n        if (structure.promotionOptionId) {\n          const promotionOption = loan.promotionOptions.find(({\n            _id\n          }) => _id === structure.promotionOptionId);\n          return this.formatPromotionOptionIntoProperty(promotionOption);\n        }\n\n        return {};\n      }\n\n      if (structureId) {\n        propertyId = structure.propertyId;\n        promotionOptionId = structure.promotionOptionId;\n      }\n\n      if (propertyId) {\n        return loan.properties.find(({\n          _id\n        }) => _id === propertyId);\n      }\n\n      if (promotionOptionId) {\n        return this.formatPromotionOptionIntoProperty(loan.promotionOptions.find(({\n          _id\n        }) => _id === promotionOptionId));\n      }\n\n      return {};\n    }\n\n    selectOffer({\n      loan,\n      structureId\n    }) {\n      const {\n        offers = []\n      } = loan;\n      const {\n        offerId,\n        offer\n      } = this.selectStructure({\n        loan,\n        structureId\n      });\n\n      if (offer) {\n        return offer;\n      }\n\n      if (!offerId) {\n        return undefined;\n      }\n\n      return offers.find(({\n        _id\n      }) => _id === offerId);\n    }\n\n    selectStructure({\n      loan,\n      structureId\n    } = {}) {\n      if (structureId) {\n        return loan.structures.find(({\n          id\n        }) => id === structureId);\n      }\n\n      return loan.structure || loan.structures.find(({\n        id\n      }) => id === loan.selectedStructure) || EMPTY_STRUCTURE;\n    }\n\n    makeSelectPropertyKey(key) {\n      return createSelector(this.selectProperty, property => property && property[key]);\n    }\n\n    selectStructureKey({\n      loan,\n      structureId,\n      key\n    }) {\n      return this.makeSelectStructureKey(key)({\n        loan,\n        structureId\n      });\n    }\n\n    selectPropertyKey({\n      loan,\n      structureId,\n      key\n    }) {\n      return this.makeSelectPropertyKey(key)({\n        loan,\n        structureId\n      });\n    }\n\n    makeSelectStructureKey(key) {\n      return createSelector(this.selectStructure, structure => structure && structure[key]);\n    }\n\n    selectPropertyValue({\n      loan,\n      structureId\n    } = {}) {\n      const structurePropertyValue = this.selectStructureKey({\n        key: 'propertyValue',\n        loan,\n        structureId\n      });\n      return structurePropertyValue || this.selectPropertyKey({\n        loan,\n        structureId,\n        key: 'totalValue'\n      }) || this.selectPropertyKey({\n        loan,\n        structureId,\n        key: 'value'\n      });\n    }\n\n    selectPropertyWork({\n      loan,\n      structureId\n    } = {}) {\n      return this.selectStructureKey({\n        loan,\n        structureId,\n        key: 'propertyWork'\n      });\n    }\n\n    selectLoanValue({\n      loan,\n      structureId\n    } = {}) {\n      return this.selectStructureKey({\n        loan,\n        structureId,\n        key: 'wantedLoan'\n      });\n    }\n\n  }, _temp;\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"SolvencyCalculator.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/Calculator/SolvencyCalculator.js                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  withSolvencyCalculator: () => withSolvencyCalculator\n});\nlet OWN_FUNDS_ROUNDING_AMOUNT;\nmodule.link(\"../../config/financeConstants\", {\n  OWN_FUNDS_ROUNDING_AMOUNT(v) {\n    OWN_FUNDS_ROUNDING_AMOUNT = v;\n  }\n\n}, 0);\nlet OWN_FUNDS_TYPES, RESIDENCE_TYPE, OWN_FUNDS_USAGE_TYPES;\nmodule.link(\"../../api/constants\", {\n  OWN_FUNDS_TYPES(v) {\n    OWN_FUNDS_TYPES = v;\n  },\n\n  RESIDENCE_TYPE(v) {\n    RESIDENCE_TYPE = v;\n  },\n\n  OWN_FUNDS_USAGE_TYPES(v) {\n    OWN_FUNDS_USAGE_TYPES = v;\n  }\n\n}, 1);\nlet arrayify;\nmodule.link(\"../general\", {\n  arrayify(v) {\n    arrayify = v;\n  }\n\n}, 2);\nlet NotaryFeesCalculator;\nmodule.link(\"../notaryFees/index\", {\n  NotaryFeesCalculator(v) {\n    NotaryFeesCalculator = v;\n  }\n\n}, 3);\nlet roundValue;\nmodule.link(\"../conversionFunctions\", {\n  roundValue(v) {\n    roundValue = v;\n  }\n\n}, 4);\nconst INITIAL_MIN_BOUND = 0;\nconst INITIAL_MAX_BOUND = 1000000;\nconst INITIAL_ABSOLUTE_MAX_BOUND = 100000000;\nconst MAX_ITERATIONS = 50;\nconst ACCURACY = 1000;\nconst ROUNDING_DIGITS = Math.log10(ACCURACY);\nconst MAX_BOUND_MULTIPLICATION_FACTOR = 2;\nconst OWN_FUNDS_ROUNDING_ALGO = 100;\nconst INITIAL_BORROW_RATIO_STEP_SIZE = 0.05;\n\nconst withSolvencyCalculator = (SuperClass = class {}) => class extends SuperClass {\n  getAllowedOwnFundsTypes({\n    residenceType\n  }) {\n    return residenceType === RESIDENCE_TYPE.MAIN_RESIDENCE ? [OWN_FUNDS_TYPES.THIRD_PARTY_FORTUNE, OWN_FUNDS_TYPES.BANK_FORTUNE, OWN_FUNDS_TYPES.INSURANCE_3A, OWN_FUNDS_TYPES.BANK_3A, OWN_FUNDS_TYPES.INSURANCE_3B, OWN_FUNDS_TYPES.INSURANCE_2] : [OWN_FUNDS_TYPES.THIRD_PARTY_FORTUNE, OWN_FUNDS_TYPES.BANK_FORTUNE, OWN_FUNDS_TYPES.INSURANCE_3B];\n  }\n\n  ownFundTypeRequiresUsageType({\n    type\n  }) {\n    return [OWN_FUNDS_TYPES.INSURANCE_2, OWN_FUNDS_TYPES.INSURANCE_3A, OWN_FUNDS_TYPES.INSURANCE_3B].includes(type);\n  }\n\n  makeOwnFunds({\n    borrowers,\n    type,\n    usageType,\n    max\n  }) {\n    return arrayify(borrowers).map(borrower => {\n      const ownFundsObject = {\n        type,\n        value: Math.ceil(Math.min(max, this.getFunds({\n          borrowers: borrower,\n          type\n        }))),\n        borrowerId: borrower._id\n      };\n\n      if (!usageType && this.ownFundTypeRequiresUsageType({\n        type\n      })) {\n        return (0, _objectSpread2.default)({}, ownFundsObject, {\n          usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW\n        });\n      }\n\n      if (usageType) {\n        return (0, _objectSpread2.default)({}, ownFundsObject, {\n          usageType\n        });\n      }\n\n      return ownFundsObject;\n    }).filter(({\n      value\n    }) => value > 0);\n  }\n\n  suggestStructure({\n    borrowers,\n    propertyValue,\n    maxBorrowRatio = this.maxBorrowRatio,\n    loanValue,\n    canton,\n    residenceType,\n    notaryFees: forcedNotaryFees\n  }) {\n    let notaryFees;\n    const finalLoanValue = loanValue || Math.round(propertyValue * maxBorrowRatio);\n\n    if (forcedNotaryFees) {\n      notaryFees = forcedNotaryFees;\n    } else {\n      const notaryCalc = new NotaryFeesCalculator({\n        canton\n      });\n      notaryFees = notaryCalc.getNotaryFeesWithoutLoan({\n        propertyValue,\n        mortgageNoteIncrease: finalLoanValue,\n        residenceType\n      }).total;\n    }\n\n    let requiredOwnFunds = Math.round(propertyValue + notaryFees - finalLoanValue);\n    let ownFunds = []; // Get all possible OWN_FUNDS_TYPES\n\n    const allowedOwnFundsTypes = this.getAllowedOwnFundsTypes({\n      residenceType\n    });\n    allowedOwnFundsTypes.forEach(type => {\n      borrowers.forEach(borrower => {\n        const newOwnFunds = this.makeOwnFunds({\n          borrowers: borrower,\n          type,\n          max: requiredOwnFunds\n        });\n        requiredOwnFunds -= newOwnFunds.reduce((tot, {\n          value\n        }) => tot + value, 0);\n        ownFunds = [...ownFunds, ...newOwnFunds];\n      });\n    });\n    return ownFunds;\n  }\n\n  createLoanObject(_ref) {\n    let {\n      residenceType,\n      borrowers,\n      wantedLoan,\n      propertyValue,\n      canton,\n      ownFunds = [],\n      loanTranches = []\n    } = _ref,\n        rest = (0, _objectWithoutProperties2.default)(_ref, [\"residenceType\", \"borrowers\", \"wantedLoan\", \"propertyValue\", \"canton\", \"ownFunds\", \"loanTranches\"]);\n    return (0, _objectSpread2.default)({\n      residenceType,\n      borrowers,\n      structure: {\n        wantedLoan,\n        propertyValue,\n        property: {\n          canton\n        },\n        ownFunds,\n        loanTranches\n      }\n    }, rest);\n  }\n\n  suggestedStructureIsValid({\n    borrowers,\n    propertyValue,\n    maxBorrowRatio = this.maxBorrowRatio,\n    loanValue,\n    canton,\n    residenceType,\n    ownFunds\n  }) {\n    const finalLoanValue = loanValue || Math.round(propertyValue * maxBorrowRatio);\n    const loanObject = this.createLoanObject({\n      residenceType,\n      borrowers,\n      wantedLoan: finalLoanValue,\n      propertyValue,\n      canton,\n      ownFunds\n    }); // If the calculator has been initialized, reinitialize it according to this new potential loan\n\n    if (this.lenderRules) {\n      this.initialize({\n        loan: loanObject,\n        lenderRules: this.lenderRules\n      });\n    }\n\n    if (this.isMissingOwnFunds({\n      loan: loanObject\n    })) {\n      return false;\n    }\n\n    if (!this.hasEnoughCash({\n      loan: loanObject\n    })) {\n      return false;\n    }\n\n    if (!this.structureIsValid({\n      loan: loanObject\n    })) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getMaxPropertyValue({\n    borrowers,\n    maxBorrowRatio,\n    canton,\n    residenceType\n  }) {\n    // Immediately stop iterating if maxBorrowRatio is above what is allowed\n    if (this.maxBorrowRatio < maxBorrowRatio) {\n      return 0;\n    }\n\n    let foundValue = false;\n    let minBound = INITIAL_MIN_BOUND;\n    let maxBound = INITIAL_MAX_BOUND;\n    let absoluteMax = INITIAL_ABSOLUTE_MAX_BOUND;\n    let iterations = 0; // The rounding amount of 1000 is helpful when the user tries to\n    // fit his own funds into a structure without being overly accurate\n    // which is annoying.\n    // However for this calculation we don't need to round own funds as loosely\n\n    this.ownFundsRoundingAmount = OWN_FUNDS_ROUNDING_ALGO;\n\n    while (!foundValue) {\n      iterations += 1;\n      const nextPropertyValue = roundValue((minBound + maxBound) / 2, ROUNDING_DIGITS);\n      const ownFunds = this.suggestStructure({\n        borrowers,\n        maxBorrowRatio,\n        canton,\n        residenceType,\n        propertyValue: nextPropertyValue\n      });\n\n      if (this.suggestedStructureIsValid({\n        borrowers,\n        maxBorrowRatio,\n        canton,\n        residenceType,\n        propertyValue: nextPropertyValue,\n        ownFunds\n      })) {\n        minBound = nextPropertyValue;\n        maxBound = Math.min(maxBound * MAX_BOUND_MULTIPLICATION_FACTOR, absoluteMax);\n      } else {\n        maxBound = nextPropertyValue;\n        absoluteMax = maxBound;\n      }\n\n      if (maxBound - minBound <= ACCURACY) {\n        foundValue = true;\n      }\n\n      if (iterations > MAX_ITERATIONS) {\n        foundValue = true;\n      }\n    }\n\n    this.ownFundsRoundingAmount = OWN_FUNDS_ROUNDING_AMOUNT;\n    return minBound;\n  }\n\n  getNextStepSize({\n    currentMax,\n    currentBorrowRatio,\n    stepSize,\n    borrowers,\n    residenceType,\n    canton,\n    direction,\n    cache\n  }) {\n    let newStepSize = stepSize;\n    let foundBetterValue;\n\n    while (!foundBetterValue) {\n      let nextValue;\n\n      if (direction === 'upwards') {\n        nextValue = cache[currentBorrowRatio + stepSize] || this.getMaxPropertyValue({\n          borrowers,\n          residenceType,\n          maxBorrowRatio: currentBorrowRatio + stepSize,\n          canton\n        });\n      } else {\n        nextValue = cache[currentBorrowRatio - stepSize] || this.getMaxPropertyValue({\n          borrowers,\n          residenceType,\n          maxBorrowRatio: currentBorrowRatio - stepSize,\n          canton\n        });\n      }\n\n      if (nextValue > currentMax) {\n        foundBetterValue = true;\n      } else {\n        newStepSize /= 2;\n      }\n\n      if (newStepSize < 0.05) {\n        foundBetterValue = true;\n      }\n    }\n\n    return newStepSize;\n  }\n\n  getMaxPropertyValueWithoutBorrowRatio({\n    borrowers,\n    residenceType,\n    canton\n  }) {\n    let borrowRatio = 0.7;\n    let foundValue = false;\n    let iterations = 0;\n    let stepSize = INITIAL_BORROW_RATIO_STEP_SIZE;\n    const deltaX = 0.01;\n    let maxPropertyValue = 0;\n    let optimalBorrowRatio;\n    const cache = {};\n\n    const setMax = (ratio, propertyValue) => {\n      // Cache each result to avoid recalculating it later\n      if (!cache[`${ratio}`]) {\n        cache[`${ratio}`] = propertyValue;\n      } // Always store the highest encountered value, in case the loop\n      // stops prematurely, or if the stopping conditions would've skipped\n      // a value that we already calculated\n\n\n      if (propertyValue > maxPropertyValue) {\n        maxPropertyValue = propertyValue;\n        optimalBorrowRatio = ratio;\n      }\n    };\n\n    while (!foundValue) {\n      iterations += 1;\n      const center = cache[borrowRatio] || this.getMaxPropertyValue({\n        borrowers,\n        residenceType,\n        maxBorrowRatio: borrowRatio,\n        canton\n      });\n      setMax(borrowRatio, center);\n      const yLeft = cache[borrowRatio - deltaX] || this.getMaxPropertyValue({\n        borrowers,\n        residenceType,\n        maxBorrowRatio: borrowRatio - deltaX,\n        canton\n      });\n      setMax(borrowRatio - deltaX, yLeft);\n      const yRight = cache[borrowRatio + deltaX] || this.getMaxPropertyValue({\n        borrowers,\n        residenceType,\n        maxBorrowRatio: borrowRatio + deltaX,\n        canton\n      });\n      setMax(borrowRatio + deltaX, yRight);\n      const slope = yRight - yLeft;\n\n      if (yRight === 0 && yLeft === 0) {\n        // If the algorithm is at 0 on both sides, it means the borrowRatio\n        // is way too high, so start him over again at 0, but with a large\n        // step size to allow it to recover quickly\n        borrowRatio = INITIAL_BORROW_RATIO_STEP_SIZE;\n        stepSize = 0.2;\n      } else if (slope > 0) {\n        stepSize = this.getNextStepSize({\n          currentMax: center,\n          currentBorrowRatio: borrowRatio,\n          stepSize,\n          borrowers,\n          residenceType,\n          canton,\n          direction: 'upwards',\n          cache\n        });\n        borrowRatio += stepSize;\n      } else {\n        stepSize = this.getNextStepSize({\n          currentMax: center,\n          currentBorrowRatio: borrowRatio,\n          stepSize,\n          borrowers,\n          residenceType,\n          canton,\n          direction: 'downwards',\n          cache\n        });\n        borrowRatio -= stepSize;\n      }\n\n      if (stepSize < deltaX / 2) {\n        foundValue = true;\n      }\n\n      if (iterations > 50) {\n        foundValue = true;\n      }\n    } // Round the borrowRatio, and recompute the exact property value\n\n\n    const finalBorrowRatio = Math.round(optimalBorrowRatio * 10000) / 10000;\n    const finalPropertyValue = cache[finalBorrowRatio] || this.getMaxPropertyValue({\n      borrowers,\n      residenceType,\n      maxBorrowRatio: finalBorrowRatio,\n      canton\n    });\n    return {\n      borrowRatio: finalBorrowRatio,\n      propertyValue: finalPropertyValue\n    };\n  }\n\n  getMaxPropertyValueForLoan({\n    loan,\n    maxBorrowRatio,\n    canton,\n    residenceType\n  }) {\n    const {\n      borrowers,\n      residenceType: loanResidenceType\n    } = loan;\n    return this.getMaxPropertyValue({\n      borrowers,\n      residenceType: residenceType || loanResidenceType,\n      maxBorrowRatio,\n      canton\n    });\n  }\n\n  suggestStructureForLoan({\n    loan,\n    structureId\n  }) {\n    const propertyValue = this.getPropAndWork({\n      loan,\n      structureId\n    });\n    const loanValue = this.selectLoanValue({\n      loan,\n      structureId\n    });\n    const notaryFees = this.getFees({\n      loan,\n      structureId\n    }).total;\n    return this.suggestStructure({\n      borrowers: loan.borrowers,\n      propertyValue,\n      loanValue,\n      residenceType: loan.residenceType,\n      notaryFees\n    });\n  }\n\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"classUtils.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/Calculator/classUtils.js                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  withConfig: () => withConfig\n});\n\nconst withConfig = extraConfig => SuperClass => class extends SuperClass {\n  constructor(config) {\n    super((0, _objectSpread2.default)({}, config, extraConfig));\n  }\n\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/Calculator/index.js                                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  Calculator: () => Calculator\n});\nlet compose;\nmodule.link(\"recompose\", {\n  compose(v) {\n    compose = v;\n  }\n\n}, 0);\nlet FinanceCalculator;\nmodule.link(\"../FinanceCalculator\", {\n  FinanceCalculator(v) {\n    FinanceCalculator = v;\n  }\n\n}, 1);\nlet withLoanCalculator;\nmodule.link(\"./LoanCalculator\", {\n  withLoanCalculator(v) {\n    withLoanCalculator = v;\n  }\n\n}, 2);\nlet withBorrowerCalculator;\nmodule.link(\"./BorrowerCalculator\", {\n  withBorrowerCalculator(v) {\n    withBorrowerCalculator = v;\n  }\n\n}, 3);\nlet withOfferCalculator;\nmodule.link(\"./OfferCalculator\", {\n  withOfferCalculator(v) {\n    withOfferCalculator = v;\n  }\n\n}, 4);\nlet withPropertyCalculator;\nmodule.link(\"./PropertyCalculator\", {\n  withPropertyCalculator(v) {\n    withPropertyCalculator = v;\n  }\n\n}, 5);\nlet withPromotionCalculator;\nmodule.link(\"./PromotionCalculator\", {\n  withPromotionCalculator(v) {\n    withPromotionCalculator = v;\n  }\n\n}, 6);\nlet withCombinedCalculator;\nmodule.link(\"./CombinedCalculator\", {\n  withCombinedCalculator(v) {\n    withCombinedCalculator = v;\n  }\n\n}, 7);\nlet withSelector;\nmodule.link(\"./Selector\", {\n  withSelector(v) {\n    withSelector = v;\n  }\n\n}, 8);\nlet withLenderRulesInitializator;\nmodule.link(\"./LenderRulesInitializator\", {\n  withLenderRulesInitializator(v) {\n    withLenderRulesInitializator = v;\n  }\n\n}, 9);\nlet withSolvencyCalculator;\nmodule.link(\"./SolvencyCalculator\", {\n  withSolvencyCalculator(v) {\n    withSolvencyCalculator = v;\n  }\n\n}, 10);\nlet withConfig;\nmodule.link(\"./classUtils\", {\n  withConfig(v) {\n    withConfig = v;\n  }\n\n}, 11);\nlet financeCalculatorArgumentMapper;\nmodule.link(\"./middleware\", {\n  financeCalculatorArgumentMapper(v) {\n    financeCalculatorArgumentMapper = v;\n  }\n\n}, 12);\nconst MappedFinanceCalculator = withConfig({\n  middlewareObject: financeCalculatorArgumentMapper\n})(FinanceCalculator); // Put CombinedCalculator first, so that it can modify the following calculators\n// with middleware\n\nconst Calculator = compose(withLenderRulesInitializator, withSolvencyCalculator, withCombinedCalculator, withPromotionCalculator, withLoanCalculator, withBorrowerCalculator, withPropertyCalculator, withOfferCalculator, withSelector)(MappedFinanceCalculator);\nmodule.exportDefault(new Calculator({}));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"middleware.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/Calculator/middleware.js                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  financeCalculatorArgumentMapper: () => financeCalculatorArgumentMapper,\n  borrowerExtractorMiddleware: () => borrowerExtractorMiddleware,\n  memoizeMiddleware: () => memoizeMiddleware\n});\nlet makeArgumentMapper;\nmodule.link(\"../MiddlewareManager\", {\n  makeArgumentMapper(v) {\n    makeArgumentMapper = v;\n  }\n\n}, 0);\nlet memoizeOne;\nmodule.link(\"../memoizeOne\", {\n  default(v) {\n    memoizeOne = v;\n  }\n\n}, 1);\nconst argumentMappings = {};\nconst financeCalculatorArgumentMapper = makeArgumentMapper(argumentMappings);\n\nconst borrowerExtractorMiddleware = () => next => (params, ...args) => {\n  if (params && params.loan && !params.borrowers) {\n    return next((0, _objectSpread2.default)({}, params, {\n      borrowers: params.loan.borrowers\n    }), ...args);\n  }\n\n  return next(params, ...args);\n};\n\nconst memoizeMiddleware = () => next => {\n  const memoFunc = memoizeOne(next);\n  return memoFunc;\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"FinanceCalculator\":{\"FinanceCalculator.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/FinanceCalculator/FinanceCalculator.js                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  FinanceCalculator: () => FinanceCalculator\n});\nlet GENDER, SUCCESS, ERROR, WARNING, RESIDENCE_TYPE, REAL_ESTATE_CONSIDERATION_TYPES, EXPENSE_TYPES_WITHOUT_DELTAS;\nmodule.link(\"../../api/constants\", {\n  GENDER(v) {\n    GENDER = v;\n  },\n\n  SUCCESS(v) {\n    SUCCESS = v;\n  },\n\n  ERROR(v) {\n    ERROR = v;\n  },\n\n  WARNING(v) {\n    WARNING = v;\n  },\n\n  RESIDENCE_TYPE(v) {\n    RESIDENCE_TYPE = v;\n  },\n\n  REAL_ESTATE_CONSIDERATION_TYPES(v) {\n    REAL_ESTATE_CONSIDERATION_TYPES = v;\n  },\n\n  EXPENSE_TYPES_WITHOUT_DELTAS(v) {\n    EXPENSE_TYPES_WITHOUT_DELTAS = v;\n  }\n\n}, 0);\nlet AMORTIZATION_STOP, AMORTIZATION_YEARS, AVERAGE_TAX_RATE, BONUS_ALGORITHMS, BONUS_CONSIDERATION, BONUS_HISTORY_TO_CONSIDER, COMPANY_INCOME_TO_CONSIDER, DEFAULT_AMORTIZATION, DIVIDENDS_CONSIDERATION, DIVIDENDS_HISTORY_TO_CONSIDER, ESTIMATED_COMMISSION, FORTUNE_RETURNS_RATIO, INTERESTS_FINMA, INVESTMENT_INCOME_CONSIDERATION, MAINTENANCE_FINMA, MAX_BORROW_RATIO_PRIMARY_PROPERTY, MAX_BORROW_RATIO_WITH_PLEDGE, MAX_INCOME_RATIO_TIGHT, MAX_INCOME_RATIO, MIN_CASH, NOTARY_FEES, OWN_FUNDS_ROUNDING_AMOUNT, PENSION_INCOME_CONSIDERATION, REAL_ESTATE_INCOME_ALGORITHMS, REAL_ESTATE_INCOME_CONSIDERATION, REFERRAL_COMMISSION_SPLIT, REFERRAL_COMMISSION;\nmodule.link(\"../../config/financeConstants\", {\n  AMORTIZATION_STOP(v) {\n    AMORTIZATION_STOP = v;\n  },\n\n  AMORTIZATION_YEARS(v) {\n    AMORTIZATION_YEARS = v;\n  },\n\n  AVERAGE_TAX_RATE(v) {\n    AVERAGE_TAX_RATE = v;\n  },\n\n  BONUS_ALGORITHMS(v) {\n    BONUS_ALGORITHMS = v;\n  },\n\n  BONUS_CONSIDERATION(v) {\n    BONUS_CONSIDERATION = v;\n  },\n\n  BONUS_HISTORY_TO_CONSIDER(v) {\n    BONUS_HISTORY_TO_CONSIDER = v;\n  },\n\n  COMPANY_INCOME_TO_CONSIDER(v) {\n    COMPANY_INCOME_TO_CONSIDER = v;\n  },\n\n  DEFAULT_AMORTIZATION(v) {\n    DEFAULT_AMORTIZATION = v;\n  },\n\n  DIVIDENDS_CONSIDERATION(v) {\n    DIVIDENDS_CONSIDERATION = v;\n  },\n\n  DIVIDENDS_HISTORY_TO_CONSIDER(v) {\n    DIVIDENDS_HISTORY_TO_CONSIDER = v;\n  },\n\n  ESTIMATED_COMMISSION(v) {\n    ESTIMATED_COMMISSION = v;\n  },\n\n  FORTUNE_RETURNS_RATIO(v) {\n    FORTUNE_RETURNS_RATIO = v;\n  },\n\n  INTERESTS_FINMA(v) {\n    INTERESTS_FINMA = v;\n  },\n\n  INVESTMENT_INCOME_CONSIDERATION(v) {\n    INVESTMENT_INCOME_CONSIDERATION = v;\n  },\n\n  MAINTENANCE_FINMA(v) {\n    MAINTENANCE_FINMA = v;\n  },\n\n  MAX_BORROW_RATIO_PRIMARY_PROPERTY(v) {\n    MAX_BORROW_RATIO_PRIMARY_PROPERTY = v;\n  },\n\n  MAX_BORROW_RATIO_WITH_PLEDGE(v) {\n    MAX_BORROW_RATIO_WITH_PLEDGE = v;\n  },\n\n  MAX_INCOME_RATIO_TIGHT(v) {\n    MAX_INCOME_RATIO_TIGHT = v;\n  },\n\n  MAX_INCOME_RATIO(v) {\n    MAX_INCOME_RATIO = v;\n  },\n\n  MIN_CASH(v) {\n    MIN_CASH = v;\n  },\n\n  NOTARY_FEES(v) {\n    NOTARY_FEES = v;\n  },\n\n  OWN_FUNDS_ROUNDING_AMOUNT(v) {\n    OWN_FUNDS_ROUNDING_AMOUNT = v;\n  },\n\n  PENSION_INCOME_CONSIDERATION(v) {\n    PENSION_INCOME_CONSIDERATION = v;\n  },\n\n  REAL_ESTATE_INCOME_ALGORITHMS(v) {\n    REAL_ESTATE_INCOME_ALGORITHMS = v;\n  },\n\n  REAL_ESTATE_INCOME_CONSIDERATION(v) {\n    REAL_ESTATE_INCOME_CONSIDERATION = v;\n  },\n\n  REFERRAL_COMMISSION_SPLIT(v) {\n    REFERRAL_COMMISSION_SPLIT = v;\n  },\n\n  REFERRAL_COMMISSION(v) {\n    REFERRAL_COMMISSION = v;\n  }\n\n}, 1);\nlet MiddlewareManager;\nmodule.link(\"../MiddlewareManager\", {\n  default(v) {\n    MiddlewareManager = v;\n  }\n\n}, 2);\nlet precisionMiddleware;\nmodule.link(\"./financeCalculatorMiddlewares\", {\n  precisionMiddleware(v) {\n    precisionMiddleware = v;\n  }\n\n}, 3);\nlet memoizeMiddleware;\nmodule.link(\"../Calculator/middleware\", {\n  memoizeMiddleware(v) {\n    memoizeMiddleware = v;\n  }\n\n}, 4);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass FinanceCalculator {\n  constructor(settings) {\n    _defineProperty(this, \"notaryFees\", void 0);\n\n    _defineProperty(this, \"amortizationBaseRate\", void 0);\n\n    _defineProperty(this, \"amortizationGoal\", void 0);\n\n    _defineProperty(this, \"setMiddleware\", (middlewares, middlewareObject) => {\n      const middlewareManager = new MiddlewareManager(this, middlewareObject);\n      middlewareManager.applyToAllMethods([precisionMiddleware, memoizeMiddleware, ...middlewares]);\n    });\n\n    _defineProperty(this, \"getYearsToRetirement\", ({\n      age1,\n      age2,\n      gender1,\n      gender2\n    } = {}) => {\n      const retirement1 = this.getRetirementForGender({\n        gender: gender1\n      });\n      let retirement2 = null;\n\n      if (gender2) {\n        retirement2 = this.getRetirementForGender({\n          gender: gender2\n        });\n      } // Substract age to determine remaining time to retirement for both borrowers\n\n\n      const toRetirement1 = retirement1 - age1;\n      let toRetirement2;\n\n      if (retirement2 && age2) {\n        toRetirement2 = retirement2 - age2;\n      } // Get the most limiting time to retirement for both borrowers, in years\n\n\n      let yearsToRetirement;\n\n      if (toRetirement2) {\n        yearsToRetirement = Math.min(toRetirement1, toRetirement2);\n      } else {\n        yearsToRetirement = toRetirement1;\n      }\n\n      return Math.max(yearsToRetirement, 0);\n    });\n\n    _defineProperty(this, \"getIncomeLimitedPropertyValue\", ({\n      nF,\n      r,\n      i,\n      mR,\n      m\n    }) => ({\n      income,\n      fortune\n    }) => {\n      // The first one is with 0 amortization\n      const incomeLimited1 = (mR * income + fortune * i) / (m + (1 + nF) * i); // The second is with amortization factored in (and it could be negative due to math)\n\n      const incomeLimited2 = ((1 + r * i) * fortune + mR * r * income) / (r * (m + i) + nF * (1 + r * i) + 0.35); // Therefore, take the minimum value of both, which is the most limiting one\n      // Because of the ratios, round this value down\n\n      return Math.floor(Math.min(incomeLimited1, incomeLimited2));\n    });\n\n    this.initFinanceCalculator(settings);\n  }\n\n  initFinanceCalculator({\n    allowPledge = true,\n    amortizationBaseRate = DEFAULT_AMORTIZATION,\n    amortizationGoal = AMORTIZATION_STOP,\n    amortizationYears = AMORTIZATION_YEARS,\n    bonusAlgorithm = BONUS_ALGORITHMS.WEAK_AVERAGE,\n    bonusConsideration = BONUS_CONSIDERATION,\n    bonusHistoryToConsider = BONUS_HISTORY_TO_CONSIDER,\n    companyIncomeHistoryToConsider = COMPANY_INCOME_TO_CONSIDER,\n    dividendsConsideration = DIVIDENDS_CONSIDERATION,\n    dividendsHistoryToConsider = DIVIDENDS_HISTORY_TO_CONSIDER,\n    expensesSubtractFromIncome = EXPENSE_TYPES_WITHOUT_DELTAS,\n    fortuneReturnsRatio = FORTUNE_RETURNS_RATIO,\n    investmentIncomeConsideration = INVESTMENT_INCOME_CONSIDERATION,\n    maxBorrowRatio = MAX_BORROW_RATIO_PRIMARY_PROPERTY,\n    maxBorrowRatioWithPledge = MAX_BORROW_RATIO_WITH_PLEDGE,\n    maxIncomeRatio = MAX_INCOME_RATIO,\n    maxIncomeRatioTight = MAX_INCOME_RATIO_TIGHT,\n    minCash = MIN_CASH,\n    notaryFees = NOTARY_FEES,\n    ownFundsRoundingAmount = OWN_FUNDS_ROUNDING_AMOUNT,\n    pensionIncomeConsideration = PENSION_INCOME_CONSIDERATION,\n    realEstateIncomeAlgorithm = REAL_ESTATE_INCOME_ALGORITHMS.DEFAULT,\n    realEstateIncomeConsideration = REAL_ESTATE_INCOME_CONSIDERATION,\n    realEstateIncomeConsiderationType = REAL_ESTATE_CONSIDERATION_TYPES.ADD_TO_INCOME,\n    taxRate = AVERAGE_TAX_RATE,\n    theoreticalInterestRate = INTERESTS_FINMA,\n    theoreticalInterestRate2ndRank = null,\n    theoreticalMaintenanceRate = MAINTENANCE_FINMA,\n    estimatedCommission = ESTIMATED_COMMISSION,\n    referralCommission = REFERRAL_COMMISSION,\n    referralCommissionSplit = REFERRAL_COMMISSION_SPLIT,\n    middlewares = [],\n    middlewareObject\n  } = {}) {\n    this.allowPledge = allowPledge;\n    this.amortizationBaseRate = amortizationBaseRate;\n    this.amortizationGoal = amortizationGoal;\n    this.amortizationYears = amortizationYears;\n    this.bonusAlgorithm = bonusAlgorithm;\n    this.bonusConsideration = bonusConsideration;\n    this.bonusHistoryToConsider = bonusHistoryToConsider;\n    this.companyIncomeHistoryToConsider = companyIncomeHistoryToConsider;\n    this.dividendsConsideration = dividendsConsideration;\n    this.dividendsHistoryToConsider = dividendsHistoryToConsider;\n    this.expensesSubtractFromIncome = expensesSubtractFromIncome;\n    this.fortuneReturnsRatio = fortuneReturnsRatio;\n    this.investmentIncomeConsideration = investmentIncomeConsideration;\n    this.maxBorrowRatio = maxBorrowRatio;\n    this.maxBorrowRatioWithPledge = maxBorrowRatioWithPledge;\n    this.maxIncomeRatio = maxIncomeRatio;\n    this.maxIncomeRatioTight = maxIncomeRatioTight;\n    this.minCash = minCash;\n    this.notaryFees = notaryFees;\n    this.ownFundsRoundingAmount = ownFundsRoundingAmount;\n    this.pensionIncomeConsideration = pensionIncomeConsideration;\n    this.realEstateIncomeAlgorithm = realEstateIncomeAlgorithm;\n    this.realEstateIncomeConsideration = realEstateIncomeConsideration;\n    this.realEstateIncomeConsiderationType = realEstateIncomeConsiderationType;\n    this.taxRate = taxRate;\n    this.theoreticalInterestRate = theoreticalInterestRate;\n    this.theoreticalInterestRate2ndRank = theoreticalInterestRate2ndRank;\n    this.theoreticalMaintenanceRate = theoreticalMaintenanceRate;\n    this.estimatedCommission = estimatedCommission;\n    this.referralCommission = referralCommission;\n    this.referralCommissionSplit = referralCommissionSplit;\n    this.setMiddleware(middlewares, middlewareObject);\n  }\n\n  getLoanValue({\n    propertyValue,\n    propertyWork = 0,\n    fortune,\n    pledgedValue = 0,\n    fees = this.getFeesBase({\n      propertyValue,\n      propertyWork\n    })\n  }) {\n    return propertyValue + propertyWork + fees + pledgedValue - fortune;\n  }\n\n  getPropAndWork({\n    propertyValue,\n    propertyWork\n  }) {\n    return propertyValue + propertyWork;\n  }\n\n  getBorrowRatio({\n    propertyValue,\n    loan = 0\n  }) {\n    return loan / propertyValue;\n  }\n\n  getLoanFromBorrowRatio({\n    propertyValue,\n    borrowRatio\n  }) {\n    return borrowRatio * propertyValue;\n  }\n\n  getBorrowRatioWithoutLoan({\n    propertyValue,\n    fortune\n  }) {\n    return this.getBorrowRatio({\n      propertyValue,\n      loan: this.getLoanValue({\n        propertyValue,\n        fortune\n      })\n    });\n  }\n\n  getBorrowRatioStatus({\n    borrowRatio\n  }) {\n    if (borrowRatio <= this.maxBorrowRatio) {\n      return SUCCESS;\n    }\n\n    if (borrowRatio <= this.maxBorrowRatioWithPledge) {\n      return WARNING;\n    }\n\n    return ERROR;\n  }\n\n  getRetirementForGender({\n    gender = GENDER.M\n  } = {}) {\n    return gender === GENDER.F ? 64 : 65;\n  }\n\n  getIncomeRatio({\n    monthlyIncome,\n    monthlyPayment = 0\n  }) {\n    return monthlyPayment / monthlyIncome;\n  }\n\n  getIncomeRatioStatus({\n    incomeRatio\n  }) {\n    if (incomeRatio <= this.maxIncomeRatio) {\n      return SUCCESS;\n    }\n\n    if (this.maxIncomeRatioTight && incomeRatio <= this.maxIncomeRatioTight) {\n      // This ratio can be disabled, i.e. set to 0, and then it'll skip the warning\n      // and only display success or error\n      return WARNING;\n    }\n\n    return ERROR;\n  }\n\n  getLoanCost({\n    maintenance = 0,\n    interests = 0,\n    amortization = 0\n  } = {}) {\n    return maintenance + interests + amortization;\n  }\n\n  getLoanCostWithParts({\n    maintenance,\n    interests,\n    amortization\n  }) {\n    return {\n      maintenance,\n      interests,\n      amortization,\n      total: this.getLoanCost({\n        maintenance,\n        interests,\n        amortization\n      })\n    };\n  }\n\n  checkInterestsAndTranches({\n    tranches = [],\n    interestRates\n  }) {\n    return tranches.reduce((invalidRate, {\n      type\n    }) => {\n      if (invalidRate) {\n        return invalidRate;\n      }\n\n      if (!interestRates[type]) {\n        return type;\n      }\n    }, undefined);\n  }\n\n  getInterestsWithTranches({\n    tranches = [],\n    interestRates\n  } = {}) {\n    return tranches.reduce((acc, {\n      type,\n      value\n    }) => {\n      const rate = interestRates[type];\n\n      if (!rate || acc === '-') {\n        return '-';\n      }\n\n      return acc + value * rate;\n    }, 0);\n  }\n\n  getAmortizationRateBase({\n    borrowRatio = 0,\n    amortizationYears = this.amortizationYears\n  } = {}) {\n    let amortizationRate = 0;\n\n    if (borrowRatio > this.amortizationGoal) {\n      // The loan has to be below 65% before 15 years or before retirement,\n      // whichever comes first\n      const amountToAmortize = borrowRatio - this.amortizationGoal; // Make sure we don't create a black hole, or use negative values by error\n\n      if (amortizationYears > 0) {\n        // Amortization is the amount to amortize divided by the amount\n        // of years before the deadline\n        amortizationRate = amountToAmortize / amortizationYears;\n      }\n    } else {// For projects below 65%, stop amortizing\n      // yearlyAmortization = propAndWork * constants.amortization;\n    }\n\n    return amortizationRate / borrowRatio || 0;\n  }\n\n  getMaxLoanBase({\n    propertyValue,\n    propertyWork,\n    pledgedAmount = 0,\n    residenceType\n  } = {}) {\n    if (residenceType === RESIDENCE_TYPE.MAIN_RESIDENCE) {\n      return Math.min((propertyValue + propertyWork) * this.maxBorrowRatio + pledgedAmount, (propertyValue + propertyWork) * this.maxBorrowRatioWithPledge);\n    }\n\n    return (propertyValue + propertyWork) * this.maxBorrowRatio;\n  }\n\n  getTheoreticalMonthly({\n    propAndWork,\n    loanValue,\n    amortizationRate\n  }) {\n    const maintenance = propAndWork * this.theoreticalMaintenanceRate / 12;\n    const interests = loanValue * this.theoreticalInterestRate / 12;\n    const amortization = loanValue * amortizationRate / 12;\n    return this.getLoanCostWithParts({\n      maintenance,\n      interests,\n      amortization\n    });\n  }\n\n  getNotaryFeesRate() {\n    return this.notaryFees;\n  }\n\n  getMinCash({\n    propertyValue,\n    propertyWork,\n    fees = this.getFeesBase({\n      propertyValue,\n      propertyWork\n    })\n  }) {\n    return (propertyValue + propertyWork) * this.minCash + fees;\n  }\n\n  getFeesBase({\n    fees,\n    propertyValue = 0\n  }) {\n    if (fees === 0 || fees > 0) {\n      return fees;\n    }\n\n    return propertyValue * this.notaryFees;\n  }\n\n  getAveragedInterestRate({\n    tranches = [],\n    interestRates = {}\n  }) {\n    return tranches.reduce((totalRate, {\n      type,\n      value\n    }) => totalRate + interestRates[type] * value, 0);\n  }\n\n}\n\nmodule.exportDefault(new FinanceCalculator());\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"financeCalculatorMiddlewares.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/FinanceCalculator/financeCalculatorMiddlewares.js                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  precisionMiddleware: () => precisionMiddleware\n});\n\nconst precisionMiddleware = () => next => (...args) => {\n  const result = next(...args);\n\n  if (typeof result === 'number') {\n    return Number(result.toPrecision(10));\n  }\n\n  return result;\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/FinanceCalculator/index.js                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./FinanceCalculator\", {\n  default: \"default\",\n  FinanceCalculator: \"FinanceCalculator\"\n}, 0);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"MiddlewareManager\":{\"MiddlewareManager.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/MiddlewareManager/MiddlewareManager.js                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet compose;\nmodule.link(\"recompose\", {\n  compose(v) {\n    compose = v;\n  }\n\n}, 0);\nlet isArray;\nmodule.link(\"lodash/isArray\", {\n  default(v) {\n    isArray = v;\n  }\n\n}, 1);\nlet difference;\nmodule.link(\"lodash/difference\", {\n  default(v) {\n    difference = v;\n  }\n\n}, 2);\nconst middlewareManagerHash = [];\nconst CLASS_METHODS_TO_EXCLUDE = ['hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'toString', 'valueOf', 'toLocaleString', '__defineGetter__', '__defineSetter__', '__lookupGetter__', '__lookupSetter__'];\n\n// Careful, methods starting with \"_\" will not be wrapped by middleware,\n// except if you use a middlewareObject\nclass MiddlewareManager {\n  constructor(target, middlewareObjects) {\n    let instance = middlewareManagerHash.find(key => key._target === target); // a target can only has one MiddlewareManager instance\n\n    if (instance === undefined) {\n      this._target = target;\n      this._methods = {};\n      this._methodMiddlewares = {};\n      middlewareManagerHash.push(this);\n      instance = this;\n    }\n\n    if (middlewareObjects) {\n      instance.useObjectMiddleware(middlewareObjects);\n    }\n\n    return instance;\n  }\n\n  applyToAllMethods(_middlewares, omit) {\n    const middlewares = this.arrayify(_middlewares);\n    const methods = this.getAllMethodNames(this._target);\n    methods.filter(name => {\n      if (omit) {\n        return !omit.includes(name);\n      }\n\n      return true;\n    }).forEach(method => this.applyToMethod(method, middlewares));\n    return this;\n  }\n\n  getAllMethodNames(obj = {}, stop) {\n    const methodNames = [];\n    let proto = Object.getPrototypeOf(obj);\n\n    while (proto && proto !== stop) {\n      Object.getOwnPropertyNames(proto).forEach(name => {\n        if (name !== 'constructor') {\n          if (this.hasMethod(proto, name)) {\n            methodNames.push(name);\n          }\n        }\n      });\n      proto = Object.getPrototypeOf(proto);\n    }\n\n    return difference(methodNames, CLASS_METHODS_TO_EXCLUDE);\n  }\n\n  hasMethod(obj, name) {\n    const desc = Object.getOwnPropertyDescriptor(obj, name);\n    return !!desc && typeof desc.value === 'function';\n  }\n\n  applyToMethod(methodName, _middlewares) {\n    const middlewares = this.arrayify(_middlewares);\n\n    if (typeof methodName === 'string' && !this.stringStartsWithUnderscore(methodName)) {\n      const method = this._methods[methodName] || this._target[methodName];\n\n      if (typeof method === 'function') {\n        this._methods[methodName] = method;\n\n        if (this._methodMiddlewares[methodName] === undefined || !isArray(this._methodMiddlewares[methodName])) {\n          this._methodMiddlewares[methodName] = [];\n        }\n\n        middlewares.forEach(middleware => typeof middleware === 'function' && this._methodMiddlewares[methodName].push(middleware(this._target)));\n        this._target[methodName] = compose(...this._methodMiddlewares[methodName])(method.bind(this._target));\n      }\n    }\n\n    return this;\n  }\n\n  stringStartsWithUnderscore(string) {\n    return /^_+|_+$/g.test(string);\n  }\n\n  useObjectMiddleware(_objectMiddlewares) {\n    const objectMiddlewares = this.arrayify(_objectMiddlewares);\n    Array.prototype.slice.call(objectMiddlewares).forEach(arg => {\n      // A middleware object can specify target functions within middlewareMethods (Array).\n      // e.g. obj.middlewareMethods = ['method1', 'method2'];\n      // only method1 and method2 will be the target function.\n      typeof arg === 'object' && (arg.middlewareMethods || Object.keys(arg)).forEach(key => {\n        typeof arg[key] === 'function' && this.applyToMethod(key, arg[key].bind(arg));\n      });\n    });\n    return this;\n  }\n\n  arrayify(maybeArray) {\n    return isArray(maybeArray) ? maybeArray : [maybeArray];\n  }\n\n}\n\nmodule.exportDefault(MiddlewareManager);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"argumentMapperMiddleware.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/MiddlewareManager/argumentMapperMiddleware.js                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  makeArgumentMapper: () => makeArgumentMapper\n});\nlet isArray;\nmodule.link(\"lodash/isArray\", {\n  default(v) {\n    isArray = v;\n  }\n\n}, 0);\n\nconst makeArgumentMapper = mappings => Object.keys(mappings).reduce((mapper, key) => (0, _objectSpread2.default)({}, mapper, {\n  [key]: () => next => (...args) => {\n    const argumentMapperFunc = mappings[key];\n    const newArgumentStructure = argumentMapperFunc(...args);\n\n    if (isArray(newArgumentStructure)) {\n      return next(...newArgumentStructure);\n    }\n\n    return next(newArgumentStructure);\n  }\n}), {});\n\nmodule.exportDefault(makeArgumentMapper);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/MiddlewareManager/index.js                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./MiddlewareManager\", {\n  default: \"default\"\n}, 0);\nmodule.link(\"./argumentMapperMiddleware\", {\n  \"*\": \"*\"\n}, 1);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"localization\":{\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/localization/index.js                                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./localization\", {\n  \"*\": \"*\"\n}, 0);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"localization.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/localization/localization.js                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  getUserLocale: () => getUserLocale,\n  getFormats: () => getFormats,\n  localizationStartup: () => localizationStartup\n});\nlet addLocaleData;\nmodule.link(\"react-intl\", {\n  addLocaleData(v) {\n    addLocaleData = v;\n  }\n\n}, 0);\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 1);\nlet fr;\nmodule.link(\"react-intl/locale-data/fr\", {\n  default(v) {\n    fr = v;\n  }\n\n}, 2);\nlet translateSimpleSchema;\nmodule.link(\"./simpleSchemaLocalization\", {\n  default(v) {\n    translateSimpleSchema = v;\n  }\n\n}, 3);\nlet Intl;\nmodule.link(\"../intl\", {\n  default(v) {\n    Intl = v;\n  }\n\n}, 4);\n\nconst getUserLocale = () => 'fr-CH';\n\nconst getFormats = () => ({\n  number: {\n    money: {\n      style: 'currency',\n      currency: 'CHF',\n      maximumFractionDigits: 0,\n      minimumFractionDigits: 0\n    },\n    moneyWithoutCurrency: {\n      style: 'decimal',\n      useGrouping: true,\n      maximumFractionDigits: 0,\n      minimumFractionDigits: 0\n    },\n    percentage: {\n      style: 'percent',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    },\n    percentageRounded: {\n      style: 'percent',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }\n  }\n});\n\nconst setupMoment = () => {\n  moment.locale('fr', {\n    months: 'Janvier_Février_Mars_Avril_Mai_Juin_Juillet_Août_Septembre_Octobre_Novembre_Décembre'.split('_'),\n    monthsShort: 'Janv._Févr._Mars_Avr._Mai_Juin_Juil._Août_Sept._Oct._Nov._Déc.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'Dimanche_Lundi_Mardi_Mercredi_Jeudi_Vendredi_Samedi'.split('_'),\n    weekdaysShort: 'Dim._Lun._Mar._Mer._Jeu._Ven._Sam.'.split('_'),\n    weekdaysMin: 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[Aujourd’hui à] LT',\n      nextDay: '[Demain à] LT',\n      nextWeek: 'dddd [à] LT',\n      lastDay: '[Hier à] LT',\n      lastWeek: 'dddd [dernier à] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'dans %s',\n      past: 'il y a %s',\n      s: 'qq secs',\n      m: '1m',\n      mm: '%dm',\n      h: '1h',\n      hh: '%dh',\n      d: '1j',\n      dd: '%dj',\n      M: '1 mois',\n      MM: '%d mois',\n      y: '1 an',\n      yy: '%d ans'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\n\n    ordinal(number) {\n      return number + (number === 1 ? 'er' : 'e');\n    },\n\n    meridiemParse: /PD|MD/,\n\n    isPM(input) {\n      return input.charAt(0) === 'M';\n    },\n\n    // In case the meridiem units are not separated around 12, then implement\n    // this function (look at locale/id.js for an example).\n    // meridiemHour : function (hour, meridiem) {\n    //     return /* 0-23 hour, given meridiem token and hour 1-12 */ ;\n    // },\n    meridiem(hours, minutes, isLower) {\n      return hours < 12 ? 'PD' : 'MD';\n    },\n\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  });\n};\n\nconst localizationStartup = ({\n  setupAccounts = true,\n  messages\n} = {}) => {\n  // Add locales used in app here\n  Intl.init(messages);\n  addLocaleData(fr);\n  setupMoment();\n  moment.locale('fr');\n  translateSimpleSchema();\n\n  if (setupAccounts) {\n    const {\n      T9n\n    } = require('meteor-accounts-t9n');\n\n    const {\n      fr: accountsFr\n    } = require('meteor-accounts-t9n/build/fr');\n\n    T9n.map('fr', accountsFr);\n    T9n.setLanguage('fr');\n  }\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"simpleSchemaLocalization.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/localization/simpleSchemaLocalization.js                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 0);\nlet Intl;\nmodule.link(\"../intl\", {\n  default(v) {\n    Intl = v;\n  }\n\n}, 1);\n\nconst translate = ({\n  key\n}) => {\n  // Turns a key called \"expenses.0.value\" into \"expenses.value\"\n  const keyWithoutNumbers = key.split('.').filter(subKey => subKey.length !== 1).join('.');\n  return Intl.formatMessage({\n    id: `Forms.${keyWithoutNumbers}`\n  });\n};\n\nconst translateSimpleSchema = () => {\n  SimpleSchema.setDefaultMessages({\n    initialLanguage: 'fr',\n    messages: {\n      fr: {\n        // Can also use \"name\"\n        required: args => `${translate(args)} est requis`,\n        minString: args => `${translate(args)} doit faire au minimum ${args.min} caractères`,\n        maxString: args => `${translate(args)} peut faire au maximum ${args.max} caractères`,\n        minNumber: args => `${translate(args)} doit être au moins ${args.min}`,\n        maxNumber: args => `${translate(args)} ne peut pas dépasser ${args.max}`,\n        minNumberExclusive: args => `${translate(args)} doit être plus grand que ${args.min}`,\n        maxNumberExclusive: args => `${translate(args)} doit être plus petit que ${args.max}`,\n        minDate: args => `${translate(args)} doit être au plus tôt le ${args.min}`,\n        maxDate: args => `${translate(args)} doit être au plus tard le ${args.max}`,\n        badDate: args => `${translate(args)} n'est pas une date valide`,\n        minCount: ({\n          minCount\n        }) => `Vous devez ajouter au moins ${minCount} valeurs`,\n        maxCount: ({\n          maxCount\n        }) => `Vous devez choisir moins de ${maxCount} valeurs`,\n        noDecimal: args => `${translate(args)} doit être un nombre entier`,\n        notAllowed: ({\n          value\n        }) => `${value} n'est pas valide`,\n        expectedType: args => `${translate(args)} doit être un ${args.dataType}`,\n\n        regEx({\n          label,\n          regExp\n        }) {\n          switch (regExp) {\n            case SimpleSchema.RegEx.Email:\n            case SimpleSchema.RegEx.WeakEmail:\n              return 'Cette adresse e-mail est incorrecte';\n\n            default:\n              return \"Le format n'est pas valide\";\n          }\n        }\n\n      }\n    }\n  });\n};\n\nmodule.exportDefault(translateSimpleSchema);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"memoizeOne\":{\"areInputsEqual.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/memoizeOne/areInputsEqual.js                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  default: () => areInputsEqual\n});\n\nconst inputHasChanged = (next, prev) => next.some((newInput, index) => newInput !== prev[index]);\n\nfunction areInputsEqual(newInputs, lastInputs) {\n  // no checks needed if the inputs length has changed\n  if (newInputs.length !== lastInputs.length) {\n    return false;\n  } // Handle memoization for functions with 1 argument which is an object\n\n\n  if (newInputs.length === 1 && typeof newInputs[0] === 'object' && typeof lastInputs[0] === 'object' && newInputs[0] !== null && lastInputs[0] !== null) {\n    const newArgs = Object.values(newInputs[0]);\n    const lastArgs = Object.values(lastInputs[0]);\n\n    if (newArgs.length !== lastArgs.length) {\n      return false;\n    }\n\n    const oneInputHasChanged = inputHasChanged(newArgs, lastArgs);\n    return !oneInputHasChanged;\n  }\n\n  const oneInputHasChanged = inputHasChanged(newInputs, lastInputs);\n  return !oneInputHasChanged;\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/memoizeOne/index.js                                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./memoizeOne\", {\n  default: \"default\"\n}, 0);\nmodule.link(\"./memoizeOne\", {\n  \"*\": \"*\"\n}, 1);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"memoizeOne.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/memoizeOne/memoizeOne.js                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet areInputsEqual;\nmodule.link(\"./areInputsEqual\", {\n  default(v) {\n    areInputsEqual = v;\n  }\n\n}, 0);\n\n// <ResultFn: (...any[]) => mixed>\n// The purpose of this typing is to ensure that the returned memoized\n// function has the same type as the provided function (`resultFn`).\n// ResultFn:        Generic type (which is the same as the resultFn).\n// (...any[]): Accepts any length of arguments - and they are not checked\n// mixed:           The result can be anything but needs to be checked before usage\nconst memoizeOne = function (resultFn, isEqual = areInputsEqual) {\n  let lastThis;\n  let lastArgs = [];\n  let lastResult;\n  let calledOnce = false; // breaking cache when context (this) or arguments change\n\n  const result = function (...newArgs) {\n    if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n      return lastResult;\n    } // Throwing during an assignment aborts the assignment: https://codepen.io/alexreardon/pen/RYKoaz\n    // Doing the lastResult assignment first so that if it throws\n    // nothing will be overwritten\n\n\n    lastResult = resultFn.apply(this, newArgs);\n    calledOnce = true;\n    lastThis = this;\n    lastArgs = newArgs;\n    return lastResult;\n  };\n\n  return result;\n};\n\nmodule.exportDefault(memoizeOne);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"notaryFees\":{\"NotaryFeesCalculator.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/notaryFees/NotaryFeesCalculator.js                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet cantonConfigs;\nmodule.link(\"./cantonConfigs\", {\n  \"*\"(v) {\n    cantonConfigs = v;\n  }\n\n}, 0);\nlet Calculator;\nmodule.link(\"../Calculator\", {\n  default(v) {\n    Calculator = v;\n  }\n\n}, 1);\nlet NOTARY_FEES;\nmodule.link(\"../../config/financeConstants\", {\n  NOTARY_FEES(v) {\n    NOTARY_FEES = v;\n  }\n\n}, 2);\nlet PURCHASE_TYPE;\nmodule.link(\"../../api/constants\", {\n  PURCHASE_TYPE(v) {\n    PURCHASE_TYPE = v;\n  }\n\n}, 3);\n\nconst roundToCents = val => Number(val.toFixed(2));\n\nconst roundObjectKeys = obj => Object.keys(obj).reduce((newObj, key) => (0, _objectSpread2.default)({}, newObj, {\n  [key]: typeof obj[key] === 'number' ? roundToCents(obj[key]) : obj[key]\n}), {});\n\nclass NotaryFeesCalculator {\n  constructor({\n    canton\n  }) {\n    this.init(canton);\n  }\n\n  init(canton) {\n    const config = cantonConfigs[canton];\n    this.canton = canton;\n    Object.assign(this, config);\n  }\n\n  hasDetailedConfig() {\n    return cantonConfigs[this.canton];\n  }\n\n  shouldUseConstructionMath({\n    loan,\n    structureId\n  }) {\n    const hasDetailedValue = Calculator.hasDetailedPropertyValue({\n      loan,\n      structureId\n    });\n    const shouldUseConstructionNotaryFees = Calculator.shouldUseConstructionNotaryFees({\n      loan,\n      structureId\n    });\n    return hasDetailedValue && shouldUseConstructionNotaryFees;\n  }\n\n  getNotaryFeesForLoan({\n    loan,\n    structureId\n  }) {\n    const propertyValue = Calculator.selectPropertyValue({\n      loan,\n      structureId\n    });\n\n    if (!this.hasDetailedConfig()) {\n      return this.getDefaultFees({\n        propertyValue\n      });\n    }\n\n    const {\n      residenceType\n    } = loan;\n    const mortgageNoteIncrease = Calculator.getMortgageNoteIncrease({\n      loan,\n      structureId\n    }); // Acte d'achat\n\n    const buyersContractFees = this.buyersContractFees({\n      loan,\n      structureId\n    }); // Cédule hypothécaire\n\n    const mortgageNoteFees = this.mortgageNoteFees({\n      mortgageNoteIncrease\n    }); // Déductions\n\n    const deductions = this.getDeductions({\n      propertyValue,\n      mortgageNoteFees,\n      residenceType,\n      mortgageNoteIncrease,\n      propertyTransferTax: buyersContractFees.propertyRegistrationTax\n    });\n    const roundedResult = roundObjectKeys({\n      total: buyersContractFees.total + mortgageNoteFees.total - deductions.total,\n      buyersContractFees: roundObjectKeys(buyersContractFees),\n      mortgageNoteFees: roundObjectKeys(mortgageNoteFees),\n      deductions: roundObjectKeys(deductions),\n      canton: this.canton,\n      estimate: false\n    });\n    return roundedResult;\n  }\n\n  getNotaryFeesWithoutLoan({\n    propertyValue,\n    mortgageNoteIncrease,\n    residenceType\n  }) {\n    if (!this.hasDetailedConfig()) {\n      return this.getDefaultFees({\n        propertyValue\n      });\n    } // Acte d'achat\n\n\n    const buyersContractFees = this.buyersContractFeesAcquisition({\n      propertyValue\n    }); // Cédule hypothécaire\n\n    const mortgageNoteFees = this.mortgageNoteFees({\n      mortgageNoteIncrease\n    }); // Déductions\n\n    const deductions = this.getDeductions({\n      propertyValue,\n      mortgageNoteIncrease,\n      residenceType,\n      propertyTransferTax: this.propertyRegistrationTax({\n        propertyValue\n      })\n    });\n    const roundedResult = roundObjectKeys({\n      total: buyersContractFees.total + mortgageNoteFees.total - deductions.total,\n      buyersContractFees: roundObjectKeys(buyersContractFees),\n      mortgageNoteFees: roundObjectKeys(mortgageNoteFees),\n      deductions: roundObjectKeys(deductions),\n      canton: this.canton,\n      estimate: false\n    });\n    return roundedResult;\n  }\n\n  buyersContractFees({\n    loan,\n    structureId\n  }) {\n    if (loan.purchaseType === PURCHASE_TYPE.REFINANCING) {\n      return {\n        total: 0\n      };\n    }\n\n    if (this.shouldUseConstructionMath({\n      loan,\n      structureId\n    })) {\n      const {\n        landValue = 0,\n        constructionValue = 0,\n        additionalMargin = 0\n      } = Calculator.selectProperty({\n        loan,\n        structureId\n      });\n      return this.buyersContractFeesConstruction({\n        landValue,\n        constructionValue,\n        additionalMargin\n      });\n    }\n\n    const propertyValue = Calculator.selectPropertyValue({\n      loan,\n      structureId\n    });\n    return this.buyersContractFeesAcquisition({\n      propertyValue\n    });\n  }\n\n  buyersContractFeesAcquisition({\n    propertyValue\n  }) {\n    // Frais d'enregistrement/Droits de mutation\n    const propertyRegistrationTax = this.propertyRegistrationTax({\n      propertyValue\n    }); // Emoluments du notaire\n\n    const notaryIncomeFromProperty = this.notaryIncomeFromProperty({\n      propertyValue\n    }); // Registre foncier\n\n    const landRegistryPropertyTax = this.landRegistryPropertyTax({\n      propertyValue\n    }); // Frais du notaire additionnels estimés\n\n    const additionalFees = this.additionalFees();\n    return {\n      total: propertyRegistrationTax + notaryIncomeFromProperty + landRegistryPropertyTax + additionalFees,\n      propertyRegistrationTax,\n      landRegistryPropertyTax,\n      notaryIncomeFromProperty,\n      additionalFees\n    };\n  }\n\n  buyersContractFeesConstruction({\n    landValue,\n    constructionValue,\n    additionalMargin\n  }) {\n    // Frais d'enregistrement/Droits de mutation\n    const propertyRegistrationTax = this.propertyRegistrationTax({\n      propertyValue: landValue + additionalMargin\n    }); // Emoluments du notaire\n\n    const notaryIncomeFromProperty = this.notaryIncomeFromProperty({\n      propertyValue: landValue + additionalMargin\n    }); // Registre foncier\n\n    const landRegistryPropertyTax = this.landRegistryPropertyTax({\n      propertyValue: landValue + additionalMargin\n    }); // Contrat de construction\n\n    const propertyConstructionTax = this.propertyConstructionTax({\n      constructionValue\n    }); // Frais du notaire additionnels estimés\n\n    const additionalFees = this.additionalFees();\n    return {\n      total: propertyRegistrationTax + notaryIncomeFromProperty + landRegistryPropertyTax + propertyConstructionTax + additionalFees,\n      propertyRegistrationTax,\n      propertyConstructionTax,\n      landRegistryPropertyTax,\n      notaryIncomeFromProperty,\n      additionalFees\n    };\n  }\n\n  mortgageNoteFees({\n    mortgageNoteIncrease\n  }) {\n    // Frais d'enregistrement\n    const mortgageNoteRegistrationTax = this.mortgageNoteRegistrationTax({\n      mortgageNoteIncrease\n    }); // Emoluments du notaire\n\n    const notaryIncomeFromMortgageNote = this.notaryIncomeFromMortgageNote({\n      mortgageNoteIncrease\n    }); // Registre foncier\n\n    const landRegistryMortgageNoteTax = this.landRegistryMortgageNoteTax({\n      mortgageNoteIncrease\n    }); // Frais du notaire additionnels estimés\n    // Nuls si aucune cédule nécessaire\n\n    const additionalFees = mortgageNoteIncrease > 0 ? this.additionalFees() : 0;\n    return {\n      total: mortgageNoteRegistrationTax + landRegistryMortgageNoteTax + notaryIncomeFromMortgageNote + additionalFees,\n      mortgageNoteRegistrationTax,\n      landRegistryMortgageNoteTax,\n      notaryIncomeFromMortgageNote,\n      additionalFees\n    };\n  }\n\n  getDeductions({\n    propertyValue,\n    mortgageNoteIncrease,\n    residenceType,\n    propertyTransferTax\n  }) {\n    const buyersContractDeductions = this.buyersContractDeductions ? this.buyersContractDeductions({\n      residenceType,\n      propertyValue,\n      transferTax: propertyTransferTax\n    }) : 0;\n    const mortgageNoteDeductions = this.mortgageNoteDeductions ? this.mortgageNoteDeductions({\n      residenceType,\n      propertyValue,\n      mortgageNoteRegistrationTax: this.mortgageNoteRegistrationTax({\n        mortgageNoteIncrease\n      })\n    }) : 0;\n    return {\n      buyersContractDeductions,\n      mortgageNoteDeductions,\n      total: buyersContractDeductions + mortgageNoteDeductions\n    };\n  }\n\n  getDefaultFees({\n    propertyValue\n  }) {\n    return {\n      total: propertyValue * NOTARY_FEES,\n      canton: this.canton,\n      estimate: true\n    };\n  }\n\n}\n\nmodule.exportDefault(NotaryFeesCalculator);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"cantonConfigs.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/notaryFees/cantonConfigs.js                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  GE: () => GE,\n  VD: () => VD\n});\nlet RESIDENCE_TYPE;\nmodule.link(\"../../api/constants\", {\n  RESIDENCE_TYPE(v) {\n    RESIDENCE_TYPE = v;\n  }\n\n}, 0);\nlet degressive;\nmodule.link(\"./degressive\", {\n  default(v) {\n    degressive = v;\n  }\n\n}, 1);\nlet cantons;\nmodule.link(\"./cantonConstants\", {\n  \"*\"(v) {\n    cantons = v;\n  }\n\n}, 2);\nlet VAT;\nmodule.link(\"../../config/financeConstants\", {\n  VAT(v) {\n    VAT = v;\n  }\n\n}, 3);\n\nconst isCasatax = ({\n  residenceType,\n  propertyValue\n}) => residenceType === RESIDENCE_TYPE.MAIN_RESIDENCE && propertyValue <= cantons.GE.CASATAX_CUTOFF;\n\nconst GE = {\n  notaryIncomeFromProperty: ({\n    propertyValue\n  }) => degressive({\n    amount: propertyValue,\n    brackets: cantons.GE.NOTARY_PROPERTY_BRACKETS,\n    minTax: cantons.GE.NOTARY_PROPERTY_BRACKETS_MIN\n  }) * (1 + VAT),\n  notaryIncomeFromMortgageNote: ({\n    mortgageNoteIncrease\n  }) => degressive({\n    amount: mortgageNoteIncrease,\n    brackets: cantons.GE.NOTARY_NOTE_BRACKETS\n  }) * (1 + VAT),\n  propertyConstructionTax: ({\n    constructionValue\n  }) => constructionValue * cantons.GE.PROPERTY_CONSTRUCTION_TAX,\n  propertyRegistrationTax: ({\n    propertyValue\n  }) => propertyValue * cantons.GE.PROPERTY_REGISTRATION_TAX,\n  landRegistryPropertyTax: ({\n    propertyValue\n  }) => propertyValue * cantons.GE.LAND_REGISTRY_PROPERTY_TAX,\n  mortgageNoteRegistrationTax: ({\n    mortgageNoteIncrease\n  }) => mortgageNoteIncrease * cantons.GE.MORTGAGE_NOTE_REGISTRATION_TAX,\n  landRegistryMortgageNoteTax: ({\n    mortgageNoteIncrease\n  }) => mortgageNoteIncrease * cantons.GE.LAND_REGISTRY_MORTGAGE_NOTE_TAX,\n  buyersContractDeductions: ({\n    residenceType,\n    propertyValue,\n    transferTax\n  }) => isCasatax({\n    residenceType,\n    propertyValue\n  }) ? Math.min(cantons.GE.CASATAX_PROPERTY_DEDUCTION, transferTax) : 0,\n  additionalFees: () => cantons.GE.ADDITIONAL_FEES,\n  mortgageNoteDeductions: ({\n    residenceType,\n    propertyValue,\n    mortgageNoteRegistrationTax\n  }) => isCasatax({\n    residenceType,\n    propertyValue\n  }) ? mortgageNoteRegistrationTax * cantons.GE.MORTGAGE_NOTE_CASATAX_DEDUCTION : 0\n};\nconst VD = {\n  notaryIncomeFromProperty: ({\n    propertyValue\n  }) => degressive({\n    amount: propertyValue,\n    brackets: cantons.VD.NOTARY_PROPERTY_BRACKETS,\n    minTax: cantons.VD.NOTARY_PROPERTY_BRACKETS_MIN\n  }) * (1 + VAT),\n  propertyConstructionTax: () => 0,\n  // TODO\n  notaryIncomeFromMortgageNote: ({\n    mortgageNoteIncrease\n  }) => degressive({\n    amount: mortgageNoteIncrease,\n    brackets: cantons.VD.NOTARY_NOTE_BRACKETS\n  }) * (1 + VAT),\n  propertyRegistrationTax: ({\n    propertyValue\n  }) => propertyValue * cantons.VD.PROPERTY_REGISTRATION_TAX,\n  landRegistryPropertyTax: ({\n    propertyValue\n  }) => propertyValue * cantons.VD.LAND_REGISTRY_PROPERTY_TAX,\n  mortgageNoteRegistrationTax: ({\n    mortgageNoteIncrease\n  }) => 0,\n  landRegistryMortgageNoteTax: ({\n    mortgageNoteIncrease\n  }) => mortgageNoteIncrease * cantons.VD.LAND_REGISTRY_MORTGAGE_NOTE_TAX,\n  additionalFees: () => cantons.VD.ADDITIONAL_FEES\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"cantonConstants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/notaryFees/cantonConstants.js                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  GE: () => GE,\n  VD: () => VD,\n  VS: () => VS,\n  FR: () => FR\n});\nconst GE = {\n  PROPERTY_REGISTRATION_TAX: 0.03,\n  NOTARY_PROPERTY_BRACKETS_MIN: 200,\n  NOTARY_PROPERTY_BRACKETS: [{\n    rate: 0.007,\n    max: 200000\n  }, {\n    rate: 0.006,\n    max: 400000\n  }, {\n    rate: 0.0045,\n    max: 800000\n  }, {\n    rate: 0.004,\n    max: 1000000\n  }, {\n    rate: 0.0035,\n    max: 1500000\n  }, {\n    rate: 0.003,\n    max: 2000000\n  }, {\n    rate: 0.0025,\n    max: 3500000\n  }, {\n    rate: 0.002,\n    max: 5000000\n  }, {\n    rate: 0.0015,\n    max: 7500000\n  }, {\n    rate: 0.001,\n    max: 10000000\n  }, {\n    rate: 0.00075,\n    max: 20000000\n  }, {\n    rate: 0.0005\n  }],\n  NOTARY_NOTE_BRACKETS_MIN: 100,\n  NOTARY_NOTE_BRACKETS: [{\n    rate: 0.005,\n    max: 200000\n  }, {\n    rate: 0.004,\n    max: 500000\n  }, {\n    rate: 0.003,\n    max: 2000000\n  }, {\n    rate: 0.002,\n    max: 5000000\n  }, {\n    rate: 0.001\n  }],\n  MORTGAGE_NOTE_REGISTRATION_TAX: 0.01365,\n  LAND_REGISTRY_PROPERTY_TAX: 0.0025,\n  LAND_REGISTRY_MORTGAGE_NOTE_TAX: 0.001,\n  ADDITIONAL_FEES: 1000,\n  CASATAX_CUTOFF: 1183649,\n  CASATAX_PROPERTY_DEDUCTION: 17755,\n  PROPERTY_CONSTRUCTION_TAX: 0.01,\n  MORTGAGE_NOTE_CASATAX_DEDUCTION: 0.5\n};\nconst VD = {\n  PROPERTY_REGISTRATION_TAX: 0.033,\n  NOTARY_PROPERTY_BRACKETS_MIN: 300,\n  NOTARY_PROPERTY_BRACKETS: [{\n    rate: 0.007,\n    max: 100000\n  }, {\n    rate: 0.004,\n    max: 300000\n  }, {\n    rate: 0.0025,\n    max: 500000\n  }, {\n    rate: 0.002,\n    max: 750000\n  }, {\n    rate: 0.0015,\n    max: 2500000\n  }, {\n    rate: 0.001,\n    max: 10000000\n  }, {\n    rate: 0.0005,\n    max: 20000000\n  }, {\n    rate: 0.00025\n  }],\n  NOTARY_NOTE_BRACKETS_MIN: 100,\n  NOTARY_NOTE_BRACKETS: [{\n    rate: 0.005,\n    max: 100000\n  }, {\n    rate: 0.0035,\n    max: 300000\n  }, {\n    rate: 0.003,\n    max: 500000\n  }, {\n    rate: 0.002,\n    max: 750000\n  }, {\n    rate: 0.0015,\n    max: 1000000\n  }, {\n    rate: 0.001,\n    max: 5000000\n  }, {\n    rate: 0.0005,\n    max: 10000000\n  }, {\n    rate: 0.00025,\n    max: 20000000\n  }, {\n    rate: 0.000125\n  }],\n  LAND_REGISTRY_PROPERTY_TAX: 0.0015,\n  LAND_REGISTRY_MORTGAGE_NOTE_TAX: 0.0035,\n  ADDITIONAL_FEES: 1000\n};\nconst VS = {\n  TRANSFER_TAX: 0.0225,\n  NOTARY_PROPERTY_BRACKETS_MIN: 200,\n  NOTARY_PROPERTY_BRACKETS: [{\n    rate: 0.005,\n    max: 200000\n  }, {\n    rate: 0.004,\n    max: 500000\n  }, {\n    rate: 0.003,\n    max: 1000000\n  }, {\n    rate: 0.002,\n    max: 10000000\n  }, {\n    rate: 0.001\n  }],\n  NOTARY_NOTE_BRACKETS_MIN: 200,\n  NOTARY_NOTE_BRACKETS: [{\n    rate: 0.005,\n    max: 100000\n  }, {\n    rate: 0.004,\n    max: 200000\n  }, {\n    rate: 0.003,\n    max: 500000\n  }, {\n    rate: 0.002,\n    max: 1000000\n  }, {\n    rate: 0.001\n  }]\n};\nconst FR = {\n  TRANSFER_TAX: 0.03\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"degressive.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/notaryFees/degressive.js                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nconst INFINITY = 100000000000000;\n\n// Calculates the degressive tax on an amount, based on brackets with varying rates\nconst degressive = ({\n  amount,\n  brackets = [],\n  maxTax,\n  minTax\n}) => {\n  if (amount <= 0) {\n    return 0;\n  }\n\n  let tax = 0;\n  brackets.every(({\n    max = INFINITY,\n    rate\n  }, index, allBrackets) => {\n    let previousBracket = {\n      rate: 0,\n      max: 0\n    };\n\n    if (index > 0) {\n      previousBracket = allBrackets[index - 1];\n    }\n\n    if (max < previousBracket.max) {\n      throw new Error(`Tax brackets should come in increasing order, but found ${previousBracket.max} -> ${max}`);\n    }\n\n    const bracketTax = Math.min(amount - previousBracket.max, max - previousBracket.max) * rate;\n    tax += bracketTax; // Stop calculating once you've reached the highest bracket you're in\n\n    return max <= amount;\n  });\n\n  if (maxTax) {\n    tax = Math.min(tax, maxTax);\n  }\n\n  if (minTax) {\n    tax = Math.max(tax, minTax);\n  }\n\n  return tax;\n};\n\nmodule.exportDefault(degressive);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/notaryFees/index.js                                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./NotaryFeesCalculator\", {\n  default: \"NotaryFeesCalculator\"\n}, 0);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"phoneFormatting\":{\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/phoneFormatting/index.js                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  formatPhoneNumber: () => formatPhoneNumber\n});\nlet parsePhoneNumberFromString;\nmodule.link(\"libphonenumber-js/max\", {\n  parsePhoneNumberFromString(v) {\n    parsePhoneNumberFromString = v;\n  }\n\n}, 0);\n\nconst formatPhoneNumber = string => {\n  const phoneNumber = parsePhoneNumberFromString(string, 'CH');\n\n  if (!phoneNumber) {\n    // Couldn't parse a phone number from the string\n    return string;\n  }\n\n  const intl = phoneNumber.formatInternational();\n  return intl;\n};\n\nconst modifyDoc = (doc, fieldName, currentValue, customFunc) => {\n  if (customFunc) {\n    doc[fieldName] = customFunc(currentValue);\n  } else if (Array.isArray(currentValue)) {\n    doc[fieldName] = currentValue.map(formatPhoneNumber);\n  } else {\n    doc[fieldName] = formatPhoneNumber(currentValue);\n  }\n};\n\nconst formatNumbersHook = (collection, fieldName, customFunc) => {\n  collection.before.update((userId, doc, fieldNames, modifier) => {\n    if (fieldNames.includes(fieldName)) {\n      const updatedValue = modifier.$set[fieldName];\n      modifyDoc(modifier.$set, fieldName, updatedValue, customFunc);\n    }\n  });\n  collection.before.insert((userId, doc) => {\n    const insertedValue = doc[fieldName];\n\n    if (insertedValue) {\n      modifyDoc(doc, fieldName, insertedValue, customFunc);\n    }\n  });\n};\n\nmodule.exportDefault(formatNumbersHook);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"fiberStorage.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/server/fiberStorage.js                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  storeOnFiber: () => storeOnFiber,\n  getFromFiber: () => getFromFiber,\n  removeFromFiber: () => removeFromFiber\n});\nlet Fibers;\nmodule.link(\"fibers\", {\n  default(v) {\n    Fibers = v;\n  }\n\n}, 0);\n\nconst storeOnFiber = (key, value) => {\n  Fibers.current[key] = value;\n};\n\nconst getFromFiber = key => Fibers.current && Fibers.current[key];\n\nconst removeFromFiber = key => {\n  delete Fibers.current[key];\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"getClientUrl.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/server/getClientUrl.js                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  getClientHost: () => getClientHost,\n  getClientMicroservice: () => getClientMicroservice,\n  getClientUrl: () => getClientUrl,\n  setClientUrl: () => setClientUrl,\n  setClientMicroservice: () => setClientMicroservice\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet getFromFiber, storeOnFiber;\nmodule.link(\"./fiberStorage\", {\n  getFromFiber(v) {\n    getFromFiber = v;\n  },\n\n  storeOnFiber(v) {\n    storeOnFiber = v;\n  }\n\n}, 1);\nconst MICROSERVICE = '__MICROSERVICE_NAME';\nconst CLIENT_URL = '__CLIENT_URL';\nconst HOST = '__CLIENT_HOST';\n\nconst getMicroserviceFromHost = host => {\n  const {\n    subdomains\n  } = Meteor.settings.public; // In case the subdomain is missing, assume it is e-potek.ch, i.e. www\n\n  let result = 'www';\n  Object.keys(subdomains).some(microservice => {\n    const microserviceUrl = subdomains[microservice];\n\n    if (microserviceUrl.includes(host)) {\n      result = microservice;\n      return true;\n    }\n  });\n  return result;\n};\n\nconst getClientHost = () => getFromFiber(HOST);\n\nconst getClientMicroservice = () => getFromFiber(MICROSERVICE);\n\nconst getClientUrl = () => getFromFiber(CLIENT_URL);\n\nconst setClientUrl = ({\n  host,\n  href\n}) => {\n  const currentHost = getClientHost();\n  const currentUrl = getClientUrl();\n  const currentMicroservice = getClientMicroservice();\n\n  if (!currentHost) {\n    storeOnFiber(HOST, host);\n  }\n\n  if (!currentUrl) {\n    storeOnFiber(CLIENT_URL, href);\n  }\n\n  if (!currentMicroservice) {\n    const microservice = getMicroserviceFromHost(host);\n    storeOnFiber(MICROSERVICE, microservice);\n  }\n};\n\nconst setClientMicroservice = microservice => {\n  const currentMicroservice = getClientMicroservice();\n\n  if (!currentMicroservice) {\n    storeOnFiber(MICROSERVICE, microservice);\n  }\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"intl.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/server/intl.js                                                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet messagesFR;\nmodule.link(\"../../lang/fr.json\", {\n  default(v) {\n    messagesFR = v;\n  }\n\n}, 0);\nlet Intl;\nmodule.link(\"../intl\", {\n  Intl(v) {\n    Intl = v;\n  }\n\n}, 1);\n\n/**\n * formatMessage - A method to use the intl package\n *\n * @param {type}   id          the id of the message\n * @param {object} [values={}] any additional values you want to use in the\n * string\n *\n * @return {type} The formatted string\n */\nconst ServerIntl = new Intl(messagesFR);\nmodule.exportDefault(ServerIntl);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"checkObjectStructure.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/checkObjectStructure.js                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  testErrors: () => testErrors,\n  makeCheckObjectStructure: () => makeCheckObjectStructure\n});\nconst testErrors = {\n  missingKey: (key, parentKey) => `Missing key ${key} from object ${parentKey}`,\n  shouldBeArray: key => `Object key ${key} must be an array`,\n  shouldBeObject: key => `Object key ${key} must be an object`,\n  emptyArray: (key, parentKey) => `Array at object key ${key} in ${parentKey} should not be empty`\n};\n\nconst makeCheckObjectStructure = (errorMessages = testErrors) => {\n  const {\n    missingKey,\n    shouldBeArray,\n    shouldBeObject,\n    emptyArray\n  } = errorMessages;\n  let errors = [];\n\n  const checkObjectStructure = ({\n    obj,\n    template,\n    parentKey\n  }) => {\n    const checkTemplate = (subObj, subTemplate, subParentKey) => Object.keys(subTemplate).forEach(key => {\n      if (subObj[key] === undefined) {\n        if (typeof subTemplate[key] === 'object' && subTemplate[key].$or) {\n          if (!subObj[subTemplate[key].$or]) {\n            errors.push(missingKey(key, subParentKey || ''));\n            return;\n          }\n        } else {\n          errors.push(missingKey(key, subParentKey || ''));\n          return;\n        }\n      }\n\n      if (Array.isArray(subTemplate[key])) {\n        if (!Array.isArray(subObj[key])) {\n          errors.push(shouldBeArray(key));\n        }\n\n        if (subTemplate[key].length > 0 && subObj[key].length === 0) {\n          errors.push(emptyArray(key, subParentKey));\n        }\n\n        if (subTemplate[key].length > 0 && typeof subTemplate[key][0] === 'object' && !Array.isArray(subTemplate[key][0])) {\n          subObj[key].forEach(object => checkTemplate(object, subTemplate[key][0]));\n        }\n      } else if (typeof subTemplate[key] === 'object' && !Object.keys(subTemplate[key]).includes('$or')) {\n        if (typeof subObj[key] !== 'object' || Array.isArray(subObj[key])) {\n          errors.push(shouldBeObject(key));\n        } else {\n          checkTemplate(subObj[key], subTemplate[key], key);\n        }\n      }\n    });\n\n    checkTemplate(obj, template, parentKey);\n\n    if (errors.length) {\n      const errorMessage = errors.join(', ');\n      errors = [];\n      throw errorMessage;\n    }\n\n    errors = [];\n  };\n\n  return checkObjectStructure;\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"conversionFunctions.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/conversionFunctions.js                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  toMoney: () => toMoney,\n  toNumber: () => toNumber,\n  toDecimalNumber: () => toDecimalNumber,\n  toDistanceString: () => toDistanceString,\n  roundValue: () => roundValue,\n  roundTo: () => roundTo\n});\n\nfunction toMoney(value, {\n  noPrefix,\n  rounded = true\n} = {}) {\n  if (value === 0) {\n    return 0;\n  }\n\n  if (Number.isNaN(value)) {\n    // Exception for isNaN which should never appear\n    return 0;\n  }\n\n  if (!value) {\n    // Don't format the value if it is undefined or an empty string\n    return value;\n  }\n\n  const parsedValue = rounded ? Math.round(Number(Math.round(value))) : Number(value);\n  const negativePrefix = !noPrefix && value < 0 && parsedValue !== 0 ? '-' : '';\n\n  if (rounded) {\n    return negativePrefix + String(parsedValue).replace(/\\D/g, '').replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n  }\n\n  const roundedDecimals = Math.round(parsedValue * 100) / 100;\n  const [integer, decimals] = String(roundedDecimals).split('.');\n  const integerPart = negativePrefix + integer.replace(/\\D/g, '').replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n  let decimalPart = decimals;\n\n  if (!decimals) {\n    return [integerPart, '00'].join('.');\n  }\n\n  if (decimals && decimals.length > 2) {\n    const rounding = 10 ** (decimals.length - 2);\n    decimalPart = Math.round(Number(decimals) / rounding) * rounding;\n  }\n\n  return [integerPart, String(decimalPart).slice(0, 2)].join('.');\n}\n\nfunction toNumber(value) {\n  if (typeof value === 'number') {\n    return value;\n  }\n\n  return value ? Number(String(value).replace(/\\D/g, '')) : value;\n}\n\nfunction toDecimalNumber(value) {\n  if (typeof value === 'number') {\n    return value;\n  } // Remove unwanted characters, except digits, dots and commas\n\n\n  const newValue = value ? String(value).replace(/[^\\d.,]/g, '') : value; // replace commas with dots\n\n  const commaReplaced = newValue ? Number(newValue.replace(',', '.')) : newValue;\n  return commaReplaced;\n}\n\nconst toDistanceString = dist => {\n  if (dist <= 0) {\n    return '0 m';\n  }\n\n  if (dist < 1000) {\n    return `${Math.round(dist / 10) * 10} m`;\n  }\n\n  if (dist < 10000) {\n    return `${(Math.round(dist / 100) / 10).toFixed(1)} km`;\n  }\n\n  return `${Math.round(dist / 1000)} km`;\n};\n\nconst roundValue = (value, digits) => Math.round(value / 10 ** digits) * 10 ** digits;\n\nconst roundTo = (value, digits) => {\n  if (digits === 0) {\n    return value;\n  }\n\n  const roundedValue = roundValue(value, digits);\n\n  if (digits > 0) {\n    return roundedValue;\n  }\n\n  return parseFloat(roundedValue.toFixed(-digits));\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"filesUtils.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/filesUtils.js                                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  readFileBuffer: () => readFileBuffer,\n  removeFile: () => removeFile,\n  makeDir: () => makeDir,\n  flushDir: () => flushDir,\n  makeFileUploadDir: () => makeFileUploadDir,\n  flushFileUploadDir: () => flushFileUploadDir\n});\nlet fs;\nmodule.link(\"fs\", {\n  default(v) {\n    fs = v;\n  }\n\n}, 0);\nlet path;\nmodule.link(\"path\", {\n  default(v) {\n    path = v;\n  }\n\n}, 1);\nlet FILE_UPLOAD_DIR;\nmodule.link(\"../api/RESTAPI/server/restApiConstants\", {\n  FILE_UPLOAD_DIR(v) {\n    FILE_UPLOAD_DIR = v;\n  }\n\n}, 2);\n\nconst readFileBuffer = filePath => fs.readFileSync(filePath);\n\nconst removeFile = filePath => fs.unlinkSync(filePath);\n\nconst makeDir = dir => {\n  if (!fs.existsSync(dir)) {\n    fs.mkdirSync(dir);\n  }\n};\n\nconst flushDir = dir => {\n  fs.readdir(dir, (error, files) => {\n    if (error) {\n      throw error;\n    }\n\n    [...files].forEach(file => {\n      removeFile(path.join(dir, file));\n    });\n  });\n};\n\nconst makeFileUploadDir = () => makeDir(FILE_UPLOAD_DIR);\n\nconst flushFileUploadDir = () => flushDir(FILE_UPLOAD_DIR);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"formArrayHelpers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/formArrayHelpers.js                                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  shouldCountField: () => shouldCountField,\n  getCountedArray: () => getCountedArray,\n  getMissingFieldIds: () => getMissingFieldIds,\n  getFormValuesHash: () => getFormValuesHash,\n  getFormValuesHashMultiple: () => getFormValuesHashMultiple\n});\nlet get;\nmodule.link(\"lodash/get\", {\n  default(v) {\n    get = v;\n  }\n\n}, 0);\nlet arrayify, simpleHash;\nmodule.link(\"./general\", {\n  arrayify(v) {\n    arrayify = v;\n  },\n\n  simpleHash(v) {\n    simpleHash = v;\n  }\n\n}, 1);\n\n// Returns the current value of an autoForm input\nconst getCurrentValue = (input, doc) => get(doc, input.id);\n\nconst shouldCountField = formField => (formField.condition === undefined || formField.condition === true) && formField.required !== false && !formField.disabled && formField.type !== 'h3';\n\nconst conditionalInputIsTriggered = (rootField, doc) => getCurrentValue(rootField.inputs[0], doc) === rootField.conditionalTrueValue; // getCountedArray - Returns an array of values that are mandatory and should\n// be counted to determine a completion percentage of a form\n\n\nconst getCountedArray = (formArray, doc, shouldCountAllFields) => {\n  const arr = [];\n  formArray.forEach(i => {\n    if (shouldCountAllFields || shouldCountField(i)) {\n      if (i.type === 'conditionalInput') {\n        if (conditionalInputIsTriggered(i, doc)) {\n          // If the conditional input is triggering the next input, add all values\n          i.inputs.forEach(input => {\n            if (shouldCountField(input)) {\n              arr.push(getCurrentValue(input, doc));\n            }\n          });\n        } else {\n          // If conditional value is not triggering\n          arr.push(getCurrentValue(i.inputs[0], doc));\n        }\n      } else {\n        arr.push(getCurrentValue(i, doc));\n      }\n    }\n  });\n  return arr;\n};\n\nconst fieldIsValid = (field, doc) => {\n  const currentValue = getCurrentValue(field, doc);\n\n  if (Array.isArray(currentValue)) {\n    return currentValue.length > 0;\n  }\n\n  return currentValue !== undefined;\n}; // Returns a list of fields that are missing from the doc, given a form array\n// Helps you know which fields still need to be filled\n\n\nconst getMissingFieldIds = (formArray, doc) => formArray.reduce((missingFieldIds, field) => {\n  const {\n    type,\n    id,\n    inputs\n  } = field;\n\n  if (!shouldCountField(field)) {\n    return missingFieldIds;\n  }\n\n  if (type === 'conditionalInput') {\n    const [conditionalField, ...additionalFields] = inputs;\n\n    if (conditionalInputIsTriggered(field, doc)) {\n      return [...missingFieldIds, ...additionalFields.reduce((missingConditionalFields, additionalField) => {\n        if (fieldIsValid(additionalField, doc) || !shouldCountField(additionalField)) {\n          return missingConditionalFields;\n        }\n\n        return [...missingConditionalFields, additionalField.id];\n      }, [])];\n    }\n\n    if (!fieldIsValid(conditionalField, doc)) {\n      return [...missingFieldIds, conditionalField.id];\n    }\n\n    return missingFieldIds;\n  }\n\n  if (!fieldIsValid(field, doc)) {\n    return [...missingFieldIds, id];\n  }\n\n  return missingFieldIds;\n}, []);\n\nconst getFormValuesHash = (formArray, doc) => {\n  const values = getCountedArray(formArray, doc, true);\n  return simpleHash(values);\n};\n\nconst getFormValuesHashMultiple = combos => combos.reduce((tot, {\n  formArray,\n  doc\n}) => tot + getFormValuesHash(formArray, doc), 0);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"formHelpers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/formHelpers.js                                                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  numberFormatters: () => numberFormatters,\n  phoneFormatters: () => phoneFormatters,\n  percentFormatters: () => percentFormatters,\n  moneyFormatters: () => moneyFormatters,\n  makeFormArray: () => makeFormArray\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet T;\nmodule.link(\"../components/Translation\", {\n  default(v) {\n    T = v;\n  }\n\n}, 1);\nlet toNumber;\nmodule.link(\"./conversionFunctions\", {\n  toNumber(v) {\n    toNumber = v;\n  }\n\n}, 2);\n\nconst onlyNums = value => value.replace(/[^\\d]/g, '');\n\nconst onlyNumsAndPlus = value => value.replace(/[^\\d&+]/g, '');\n\nconst numberFormatters = {\n  parse: value => value && toNumber(value) // format: value => value,\n\n};\nconst phoneFormatters = {\n  parse: value => value && onlyNumsAndPlus(value),\n  format: value => value ? onlyNumsAndPlus(value) : ''\n};\nconst percentFormatters = {\n  parse: value => value === '' ? '' : Math.round(parseFloat(value) * 100) / 10000,\n  format: value => value === '' ? '' : (value * 100).toFixed(2)\n};\nconst moneyFormatters = {\n  parse: value => toNumber(value)\n};\n\nconst setRequired = initialValue => initialValue === undefined ? true : initialValue;\n\nconst makeFormArray = (array, intlPrefix) => array.map(field => (0, _objectSpread2.default)({}, field, {\n  required: setRequired(field.required),\n  label: field.label || React.createElement(T, {\n    id: `${intlPrefix}.${field.id}`\n  })\n}));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"general.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/general.js                                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  arrayify: () => arrayify,\n  getPercent: () => getPercent,\n  getAggregatePercent: () => getAggregatePercent,\n  normalize: () => normalize,\n  simpleHash: () => simpleHash\n});\nlet isArray;\nmodule.link(\"lodash/isArray\", {\n  default(v) {\n    isArray = v;\n  }\n\n}, 0);\n\nconst arrayify = value => {\n  if (value) {\n    if (isArray(value)) {\n      return value;\n    }\n\n    return [value];\n  }\n\n  return [];\n};\n\nconst getPercent = array => {\n  if (!array) {\n    return 0;\n  }\n\n  if (array.length === 0) {\n    // If array is empty, return 100%\n    return 1;\n  }\n\n  const percent = array.reduce((tot, val) => {\n    if (isArray(val)) {\n      // Empty arrays need to be filled\n      return tot + (val.length ? 1 : 0);\n    }\n\n    if (val !== undefined && val !== null) {\n      return tot + 1;\n    }\n\n    return tot;\n  }, 0) / array.length;\n  return Number.isFinite(percent) ? percent : 0;\n};\n\nconst getAggregatePercent = percentageObjects => {\n  const {\n    percent: aggregatePercent,\n    count: aggregateCount\n  } = percentageObjects.reduce((obj, {\n    percent,\n    count\n  }) => ({\n    percent: obj.percent + percent * count,\n    count: obj.count + count\n  }), {\n    percent: 0,\n    count: 0\n  });\n  return {\n    count: aggregateCount,\n    percent: aggregateCount === 0 ? 0 : aggregatePercent / aggregateCount\n  };\n};\n\nconst normalize = array => array.reduce((obj, item) => (0, _objectSpread2.default)({}, obj, {\n  [item.id || item._id]: item\n}), {});\n\nconst simpleHash = data => {\n  let string = data;\n\n  if (typeof data !== 'string') {\n    string = JSON.stringify(data);\n  }\n\n  let hash = 0;\n\n  if (string.length === 0) {\n    return hash;\n  }\n\n  for (let i = 0; i < string.length; i++) {\n    const char = string.charCodeAt(i);\n    hash = (hash << 5) - hash + char;\n    hash &= hash; // Convert to 32bit integer\n  }\n\n  return hash;\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"intl.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/intl.js                                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  Intl: () => Intl\n});\nlet IntlMessageFormat;\nmodule.link(\"intl-messageformat\", {\n  default(v) {\n    IntlMessageFormat = v;\n  }\n\n}, 0);\nlet ReactDOMServer;\nmodule.link(\"react-dom/server\", {\n  default(v) {\n    ReactDOMServer = v;\n  }\n\n}, 1);\nlet getUserLocale;\nmodule.link(\"./localization/localization\", {\n  getUserLocale(v) {\n    getUserLocale = v;\n  }\n\n}, 2);\nlet defaultIntlValues;\nmodule.link(\"../components/Translation/defaultIntlValues\", {\n  default(v) {\n    defaultIntlValues = v;\n  }\n\n}, 3);\nconst defaultValues = Object.keys(defaultIntlValues).reduce((obj, key) => {\n  const value = defaultIntlValues[key];\n  return (0, _objectSpread2.default)({}, obj, {\n    [key]: ReactDOMServer.renderToString(value)\n  });\n}, {});\n\nclass Intl {\n  constructor(messages) {\n    this.init(messages);\n  }\n\n  init(messages) {\n    this.messages = messages;\n  }\n\n  formatMessage({\n    id,\n    values = {},\n    fallback\n  } = {}, legacyValues = {}) {\n    const allValues = (0, _objectSpread2.default)({}, values, legacyValues);\n\n    if (id === undefined) {\n      throw new Error('an id is required in formatMessage');\n    }\n\n    const message = new IntlMessageFormat(this.messages[id] || (fallback !== undefined ? fallback : id), getUserLocale());\n    return message.format((0, _objectSpread2.default)({}, defaultValues, allValues));\n  }\n\n}\n\nmodule.exportDefault(new Intl());\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"loadable.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/loadable.js                                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 1);\nlet Loadable;\nmodule.link(\"react-loadable\", {\n  default(v) {\n    Loadable = v;\n  }\n\n}, 2);\nlet logError;\nmodule.link(\"../api/methods/index\", {\n  logError(v) {\n    logError = v;\n  }\n\n}, 3);\nlet LayoutError;\nmodule.link(\"../components/ErrorBoundary/LayoutError\", {\n  default(v) {\n    LayoutError = v;\n  }\n\n}, 4);\nlet Loading;\nmodule.link(\"../components/Loading\", {\n  default(v) {\n    Loading = v;\n  }\n\n}, 5);\nconst ENABLE_LOADABLE = true;\n\nif (!ENABLE_LOADABLE && Meteor.isProduction) {\n  throw new Error('ENABLE_LOADABLE should be true in production');\n}\n\nconst LoadableLoading = ({\n  error,\n  retry,\n  pastDelay\n}) => {\n  if (error) {\n    logError.run({\n      error: JSON.parse(JSON.stringify(error, Object.getOwnPropertyNames(error))),\n      additionalData: ['Loadable error'],\n      url: window && window.location && window.location.href ? window.location.href : ''\n    });\n    return React.createElement(LayoutError, {\n      error: error\n    });\n  }\n\n  if (pastDelay) {\n    return React.createElement(Loading, null);\n  }\n\n  return null;\n};\n\nmodule.exportDefault((_ref) => {\n  let {\n    req,\n    loader\n  } = _ref,\n      options = (0, _objectWithoutProperties2.default)(_ref, [\"req\", \"loader\"]);\n\n  if (!ENABLE_LOADABLE && req) {\n    return req();\n  }\n\n  return Loadable((0, _objectSpread2.default)({\n    loading: LoadableLoading,\n    delay: 200,\n    // Hides the loading component for 200ms, to avoid flickering\n    loader\n  }, options));\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"loanFunctions.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/loanFunctions.js                                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  formatLoanWithStructure: () => formatLoanWithStructure,\n  formatLoanWithDocuments: () => formatLoanWithDocuments,\n  formatLoanWithPromotion: () => formatLoanWithPromotion,\n  shouldSendStepNotification: () => shouldSendStepNotification,\n  nextDueTaskReducer: () => nextDueTaskReducer\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet STEPS, TASK_STATUS;\nmodule.link(\"../api/constants\", {\n  STEPS(v) {\n    STEPS = v;\n  },\n\n  TASK_STATUS(v) {\n    TASK_STATUS = v;\n  }\n\n}, 1);\nlet Calculator;\nmodule.link(\"./Calculator\", {\n  default(v) {\n    Calculator = v;\n  }\n\n}, 2);\n\nconst formatLoanWithStructure = ({\n  selectedStructure,\n  structures = [],\n  properties,\n  offers,\n  promotionOptions,\n  borrowers = []\n}) => {\n  if (structures.length === 0) {\n    return undefined;\n  }\n\n  let structure = {};\n\n  if (selectedStructure) {\n    const foundStructure = structures.find(({\n      id\n    }) => id === selectedStructure);\n\n    if (foundStructure) {\n      structure = foundStructure;\n\n      if (structure.propertyId) {\n        const property = properties.find(({\n          _id\n        }) => _id === structure.propertyId);\n        structure = (0, _objectSpread2.default)({}, structure, {\n          property\n        });\n      }\n\n      if (structure.promotionOptionId) {\n        const promotionOption = promotionOptions.find(({\n          _id\n        }) => _id === structure.promotionOptionId);\n        structure = (0, _objectSpread2.default)({}, structure, {\n          property: Calculator.formatPromotionOptionIntoProperty(promotionOption)\n        });\n      }\n\n      if (structure.offerId) {\n        const offer = offers.find(({\n          _id\n        }) => _id === structure.offerId);\n        structure = (0, _objectSpread2.default)({}, structure, {\n          offer\n        });\n      }\n\n      if (structure.mortgageNoteIds) {\n        const borrowerMortgageNotes = borrowers.reduce((arr, {\n          mortgageNotes: notes = []\n        }) => [...arr, ...notes], []);\n        const mortgageNotes = structure.mortgageNoteIds.map(id => borrowerMortgageNotes.find(({\n          _id\n        }) => _id === id));\n        structure = (0, _objectSpread2.default)({}, structure, {\n          mortgageNotes\n        });\n      }\n    } else {\n      structure = {};\n    }\n\n    return structure;\n  }\n\n  return structure;\n};\n\nconst formatLoanWithDocuments = loan => {\n  if (!loan || !loan.structure) {\n    return loan;\n  }\n\n  const {\n    structure,\n    properties = []\n  } = loan;\n  const {\n    property,\n    propertyId\n  } = structure;\n  const structureProperty = properties.find(({\n    _id\n  }) => _id === propertyId);\n  const propertyDocuments = structureProperty && structureProperty.documents;\n  return (0, _objectSpread2.default)({}, loan, {\n    structure: (0, _objectSpread2.default)({}, structure, {\n      property: property && (0, _objectSpread2.default)({}, property, {\n        documents: propertyDocuments\n      })\n    })\n  });\n};\n\nconst formatLoanWithPromotion = loan => {\n  if (loan.structure.promotionOptionId) {\n    const property = Calculator.selectProperty({\n      loan,\n      // Do this to make sure we're getting the promotionOption and not the\n      // fake property created from it\n      structureId: loan.structure.id\n    });\n    return (0, _objectSpread2.default)({}, loan, {\n      structure: (0, _objectSpread2.default)({}, loan.structure, {\n        property\n      })\n    });\n  }\n\n  return loan;\n};\n\nconst shouldSendStepNotification = (prevStep, nextStep) => (prevStep === STEPS.SOLVENCY || prevStep === STEPS.REQUEST) && nextStep === STEPS.OFFERS;\n\nconst nextDueTaskReducer = ({\n  tasksCache: tasks = []\n}) => {\n  const activeTasks = tasks.filter(({\n    status: taskStatus,\n    isPrivate = false,\n    assigneeLink: {\n      _id: assigneeId\n    } = {}\n  }) => {\n    if (taskStatus !== TASK_STATUS.ACTIVE) {\n      return false;\n    }\n\n    if (isPrivate && assigneeId) {\n      return assigneeId === Meteor.userId();\n    }\n\n    return true;\n  });\n  const tasksWithoutDate = activeTasks.filter(({\n    dueAt\n  }) => !dueAt).sort(({\n    createdAt: A\n  }, {\n    createdAt: B\n  }) => A - B);\n\n  if (tasksWithoutDate.length > 0) {\n    const task = tasksWithoutDate[0];\n    return (0, _objectSpread2.default)({}, task, {\n      dueAt: task.createdAt,\n      noDueDate: true\n    });\n  }\n\n  const sortedTasks = activeTasks.sort(({\n    dueAt: A\n  }, {\n    dueAt: B\n  }) => A - B);\n\n  if (sortedTasks.length > 0) {\n    return sortedTasks[0];\n  }\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"openGraph.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/openGraph.js                                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  getOpenGraphMeta: () => getOpenGraphMeta\n});\nlet ogs;\nmodule.link(\"open-graph-scraper\", {\n  default(v) {\n    ogs = v;\n  }\n\n}, 0);\nlet SlackService;\nmodule.link(\"../api/slack/server/SlackService\", {\n  default(v) {\n    SlackService = v;\n  }\n\n}, 1);\n\nconst getOpenGraphMeta = url => {\n  const options = {\n    url,\n    timeout: 4000\n  };\n  return ogs(options).then(results => results.data).catch(error => {\n    SlackService.sendError({\n      error,\n      additionalData: ['getOpenGraphMeta error', url, options]\n    });\n  });\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"textMasks.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/textMasks.js                                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  swissFrancMask: () => swissFrancMask,\n  swissFrancMaskDecimal: () => swissFrancMaskDecimal,\n  percentMask: () => percentMask,\n  decimalMask: () => decimalMask\n});\nlet createNumberMask;\nmodule.link(\"text-mask-addons/dist/createNumberMask\", {\n  default(v) {\n    createNumberMask = v;\n  }\n\n}, 0);\nconst swissFrancMask = createNumberMask({\n  prefix: '',\n  suffix: '',\n  includeThousandsSeparator: true,\n  thousandsSeparatorSymbol: ' '\n});\nconst swissFrancMaskDecimal = createNumberMask({\n  prefix: '',\n  suffix: '',\n  includeThousandsSeparator: true,\n  thousandsSeparatorSymbol: ' ',\n  allowDecimal: true,\n  requireDecimal: true\n});\nconst percentMask = createNumberMask({\n  prefix: '',\n  suffix: '%',\n  allowDecimal: true,\n  decimalSymbol: '.',\n  allowLeadingZeroes: true,\n  allowNegative: true\n});\nconst decimalMask = createNumberMask({\n  prefix: '',\n  allowDecimal: true,\n  decimalLimit: 3,\n  decimalSymbol: '.',\n  requireDecimal: false,\n  allowLeadingZeroes: true\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"userFunctions.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/userFunctions.js                                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  isUser: () => isUser,\n  getUserDisplayName: () => getUserDisplayName\n});\nlet intersection;\nmodule.link(\"lodash/intersection\", {\n  default(v) {\n    intersection = v;\n  }\n\n}, 0);\nlet flatten;\nmodule.link(\"lodash/flatten\", {\n  default(v) {\n    flatten = v;\n  }\n\n}, 1);\nlet ROLES;\nmodule.link(\"../api/users/userConstants\", {\n  ROLES(v) {\n    ROLES = v;\n  }\n\n}, 2);\n\nconst isUser = user => {\n  if (!user) {\n    return false;\n  }\n\n  const {\n    ADMIN,\n    DEV\n  } = ROLES;\n  const {\n    roles\n  } = user; // make sure `userRoles` is always an array - in case `roles` is a string\n\n  const userRoles = flatten([roles]);\n  const userHasRoles = userRoles && userRoles.length > 0;\n  return userHasRoles && intersection(userRoles, [ADMIN, DEV]).length === 0;\n};\n\nconst getUserDisplayName = ({\n  firstName,\n  lastName,\n  emails\n}) => [firstName, lastName].filter(name => name).join(' ') || emails && emails[0] && emails[0].address || '';\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"zipcodes.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/utils/zipcodes.js                                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  zipcodes: () => zipcodes,\n  getZipcodeForCanton: () => getZipcodeForCanton\n});\nlet CANTONS;\nmodule.link(\"../api/constants\", {\n  CANTONS(v) {\n    CANTONS = v;\n  }\n\n}, 0);\nconst zipcodes = {\n  1000: 22,\n  1200: 7,\n  // Edited to allow 1200 to be used as a zipcode in geneva\n  1260: 22,\n  1281: 7,\n  1291: 22,\n  1292: 7,\n  1295: 22,\n  1298: 7,\n  1299: 22,\n  1468: 6,\n  1509: 22,\n  1527: 6,\n  1530: 22,\n  1532: 6,\n  1534: 22,\n  1541: 6,\n  1543: 22,\n  1544: 6,\n  1545: 22,\n  1553: 6,\n  1554: 22,\n  1563: 6,\n  1580: 22,\n  1583: 6,\n  1584: 22,\n  1609: 6,\n  1610: 22,\n  1611: 6,\n  1612: 22,\n  1614: 6,\n  1657: 5,\n  1658: 22,\n  1661: 6,\n  1682: 22,\n  1684: 6,\n  1738: 5,\n  1740: 6,\n  1797: 5,\n  1800: 22,\n  1868: 23,\n  1880: 22,\n  1890: 23,\n  1892: 22,\n  1893: 23,\n  2000: 12,\n  2333: 5,\n  2336: 10,\n  2400: 12,\n  2502: 5,\n  2523: 12,\n  2532: 5,\n  2540: 18,\n  2542: 5,\n  2544: 18,\n  2552: 5,\n  2714: 10,\n  2715: 5,\n  2718: 10,\n  2720: 5,\n  2800: 10,\n  2814: 3,\n  2822: 10,\n  2827: 5,\n  2828: 10,\n  3004: 5,\n  3175: 6,\n  3176: 5,\n  3178: 6,\n  3179: 5,\n  3182: 6,\n  3183: 5,\n  3184: 6,\n  3202: 5,\n  3206: 6,\n  3207: 5,\n  3210: 6,\n  3225: 5,\n  3253: 18,\n  3255: 5,\n  3280: 6,\n  3282: 5,\n  3284: 6,\n  3292: 5,\n  3307: 18,\n  3308: 5,\n  3801: 23,\n  3803: 5,\n  3900: 23,\n  4001: 4,\n  4101: 3,\n  4108: 18,\n  4117: 3,\n  4118: 18,\n  4123: 3,\n  4125: 4,\n  4127: 3,\n  4143: 18,\n  4144: 3,\n  4145: 18,\n  4147: 3,\n  4204: 18,\n  4207: 3,\n  4208: 18,\n  4222: 3,\n  4226: 18,\n  4242: 3,\n  4245: 18,\n  4246: 3,\n  4247: 18,\n  4253: 3,\n  4303: 0,\n  4304: 3,\n  4305: 0,\n  4402: 3,\n  4412: 18,\n  4414: 3,\n  4421: 18,\n  4422: 3,\n  4468: 18,\n  4469: 3,\n  4500: 18,\n  4536: 5,\n  4542: 18,\n  4564: 5,\n  4565: 18,\n  4663: 0,\n  4702: 18,\n  4704: 5,\n  4710: 18,\n  4800: 0,\n  4806: 11,\n  4812: 0,\n  4900: 5,\n  4915: 11,\n  4916: 5,\n  5000: 0,\n  5012: 18,\n  5017: 0,\n  5735: 11,\n  5736: 0,\n  5746: 18,\n  6003: 11,\n  6042: 0,\n  6043: 11,\n  6052: 13,\n  6053: 14,\n  6083: 5,\n  6102: 11,\n  6197: 5,\n  6203: 11,\n  6300: 24,\n  6344: 11,\n  6345: 24,\n  6353: 11,\n  6362: 13,\n  6377: 21,\n  6382: 13,\n  6388: 14,\n  6402: 17,\n  6404: 11,\n  6405: 17,\n  6441: 21,\n  6442: 17,\n  6452: 21,\n  6500: 20,\n  6534: 9,\n  6571: 20,\n  7000: 9,\n  7310: 15,\n  7402: 9,\n  8001: 25,\n  8109: 0,\n  8112: 25,\n  8200: 16,\n  8212: 25,\n  8213: 16,\n  8245: 25,\n  8252: 19,\n  8260: 16,\n  8264: 19,\n  8302: 25,\n  8355: 19,\n  8400: 25,\n  8454: 16,\n  8457: 25,\n  8500: 19,\n  8523: 25,\n  8524: 19,\n  8542: 25,\n  8547: 19,\n  8548: 25,\n  8552: 19,\n  8600: 25,\n  8638: 15,\n  8700: 25,\n  8715: 15,\n  8750: 8,\n  8751: 21,\n  8752: 8,\n  8800: 25,\n  8806: 17,\n  8810: 25,\n  8832: 17,\n  8833: 25,\n  8834: 17,\n  8865: 8,\n  8872: 15,\n  8874: 8,\n  8877: 15,\n  8902: 25,\n  8905: 0,\n  8906: 25,\n  8916: 0,\n  8925: 25,\n  8956: 0,\n  9000: 15,\n  9035: 1,\n  9036: 15,\n  9037: 1,\n  9050: 2,\n  9052: 1,\n  9054: 2,\n  9055: 1,\n  9057: 2,\n  9062: 1,\n  9108: 2,\n  9112: 1,\n  9113: 15,\n  9213: 19,\n  9230: 15,\n  9306: 19,\n  9308: 15,\n  9314: 19,\n  9323: 15,\n  9325: 19,\n  9327: 15,\n  9405: 1,\n  9413: 2,\n  9414: 1,\n  9422: 15,\n  9426: 1,\n  9430: 15,\n  9442: 2,\n  9443: 15,\n  9485: 26,\n  9500: 15,\n  9502: 19,\n  9512: 15,\n  9514: 19,\n  9523: 15,\n  9532: 19,\n  9533: 15,\n  9535: 19,\n  9536: 15,\n  9542: 19,\n  9552: 15,\n  9553: 19,\n  9601: 15,\n  9999: 5\n};\nmodule.exportDefault(zipcode => {\n  let result;\n\n  if (zipcode > 9999 || zipcode < 1000) {\n    return null;\n  }\n\n  Object.keys(zipcodes).some(code => {\n    if (zipcode >= code) {\n      result = code;\n      return false;\n    }\n\n    return true;\n  });\n  const cantonIndex = zipcodes[result];\n  const canton = Object.keys(CANTONS)[cantonIndex];\n  return canton;\n});\n\nconst getZipcodeForCanton = canton => {\n  const cantonIndex = Object.keys(CANTONS).findIndex(c => c === canton);\n  return Object.keys(zipcodes).find(zipcode => {\n    const cantonIndexForZipcode = zipcodes[zipcode];\n    return cantonIndexForZipcode === cantonIndex;\n  });\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"arrays\":{\"BorrowerFormArray.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/arrays/BorrowerFormArray.jsx                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  getBorrowerInfoArray: () => getBorrowerInfoArray,\n  getBorrowerFinanceArray: () => getBorrowerFinanceArray,\n  getSimpleBorrowerFinanceArray: () => getSimpleBorrowerFinanceArray,\n  getBorrowerSimpleArray: () => getBorrowerSimpleArray\n});\nlet constants;\nmodule.link(\"../api/constants\", {\n  \"*\"(v) {\n    constants = v;\n  }\n\n}, 0);\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 1);\nlet CantonField;\nmodule.link(\"../components/CantonField/CantonField\", {\n  default(v) {\n    CantonField = v;\n  }\n\n}, 2);\nlet BorrowerAddPartner;\nmodule.link(\"../components/BorrowerAddPartner\", {\n  default(v) {\n    BorrowerAddPartner = v;\n  }\n\n}, 3);\n\nconst shouldDisplayAddPartner = ({\n  b: {\n    civilStatus\n  },\n  multiple,\n  isFirst\n}) => civilStatus === constants.CIVIL_STATUS.MARRIED && !multiple && isFirst;\n\nconst makeArrayOfObjectsInput = id => ({\n  id,\n  type: 'arrayInput',\n  required: false,\n  inputs: [{\n    id: 'description',\n    type: 'textInput'\n  }, {\n    id: 'value',\n    type: 'textInput',\n    money: true\n  }]\n});\n\nconst getBorrowerInfoArray = ({\n  borrowers,\n  borrowerId,\n  loanId\n}) => {\n  const b = borrowers.find(({\n    _id\n  }) => _id === borrowerId);\n  const multiple = borrowers.length > 1; // If this is the first borrower in the array of borrowers, don't ask for same address\n\n  const isFirst = borrowers[0]._id === borrowerId;\n\n  if (!b) {\n    throw new Error(\"couldn't find borrower\");\n  }\n\n  const disableAddress = !!b.sameAddress && !isFirst;\n  const addressFieldsAreNecessary = !b.sameAddress;\n  return [{\n    id: 'firstName',\n    type: 'textInput'\n  }, {\n    id: 'lastName',\n    type: 'textInput'\n  }, {\n    id: 'gender',\n    type: 'radioInput',\n    options: Object.values(constants.GENDER)\n  }, {\n    id: 'sameAddress',\n    type: 'radioInput',\n    intlValues: {\n      name: borrowers[0].firstName || 'Emprunteur 1'\n    },\n    options: [true, false],\n    condition: multiple && !isFirst\n  }, // {\n  //   id: 'isForeignAddress',\n  //   type: 'radioInput',\n  //   options: [true, false],\n  //   condition: !disableAddress,\n  //   required: addressFieldsAreNecessary,\n  // },\n  {\n    id: 'address1',\n    type: 'textInput',\n    condition: !disableAddress,\n    placeholder: disableAddress && borrowers[0].address1,\n    noIntl: disableAddress,\n    required: addressFieldsAreNecessary\n  }, {\n    id: 'address2',\n    type: 'textInput',\n    condition: !disableAddress,\n    required: false,\n    placeholder: disableAddress && borrowers[0].address2,\n    noIntl: disableAddress\n  }, {\n    id: 'city',\n    type: 'textInput',\n    condition: !disableAddress,\n    placeholder: disableAddress && borrowers[0].address1,\n    noIntl: disableAddress,\n    required: addressFieldsAreNecessary\n  }, {\n    id: 'zipCode',\n    type: 'textInput',\n    condition: !disableAddress,\n    placeholder: disableAddress && borrowers[0].address1,\n    noIntl: disableAddress,\n    required: addressFieldsAreNecessary\n  }, {\n    type: 'custom',\n    id: 'canton',\n    component: React.createElement(CantonField, {\n      canton: b.canton\n    }),\n    condition: !disableAddress,\n    required: addressFieldsAreNecessary\n  }, {\n    type: 'conditionalInput',\n    conditionalTrueValue: false,\n    inputs: [{\n      id: 'isSwiss',\n      type: 'radioInput',\n      options: [true, false]\n    }, {\n      id: 'residencyPermit',\n      type: 'selectFieldInput',\n      options: Object.values(constants.RESIDENCY_PERMIT)\n    }]\n  }, // {\n  //   id: 'age',\n  //   type: 'textInput',\n  //   number: true,\n  //   saveOnChange: false,\n  // },\n  {\n    id: 'birthDate',\n    type: 'dateInput'\n  }, {\n    id: 'citizenship',\n    type: 'textInput',\n    condition: !b.isSwiss\n  }, {\n    id: 'isUSPerson',\n    type: 'radioInput',\n    options: [true, false]\n  }, {\n    id: 'civilStatus',\n    type: 'radioInput',\n    options: Object.values(constants.CIVIL_STATUS).map(value => ({\n      id: value\n    }))\n  }, {\n    id: 'addPartner',\n    type: 'custom',\n    component: React.createElement(BorrowerAddPartner, {\n      loanId: loanId\n    }),\n    condition: shouldDisplayAddPartner({\n      b,\n      multiple,\n      isFirst\n    }),\n    required: false\n  }, {\n    id: 'childrenCount',\n    type: 'textInput',\n    number: true\n  }, {\n    id: 'company',\n    type: 'textInput',\n    required: false,\n    autoComplete: 'organisation'\n  }];\n};\n\nconst getBorrowerFinanceArray = ({\n  borrowers,\n  borrowerId\n}) => {\n  const b = borrowers.find(({\n    _id\n  }) => _id === borrowerId);\n\n  if (!b) {\n    throw new Error(\"couldn't find borrower\");\n  }\n\n  const incomeArray = [{\n    type: 'h3',\n    id: 'incomeAndExpenses',\n    ignore: true,\n    required: false,\n    className: 'v-align-incomeAndExpenses'\n  }, {\n    id: 'salary',\n    type: 'textInput',\n    money: true\n  }, {\n    id: 'netSalary',\n    type: 'textInput',\n    money: true\n  }, {\n    type: 'conditionalInput',\n    conditionalTrueValue: true,\n    inputs: [{\n      id: 'bonusExists',\n      type: 'radioInput',\n      options: [true, false]\n    }, ...[2019, 2018, 2017, 2016, 2015].map(year => ({\n      id: `bonus${year}`,\n      type: 'textInput',\n      money: true,\n      condition: year === 2015 ? !!b.bonus2015 : true\n    }))]\n  }, {\n    id: 'otherIncome',\n    type: 'arrayInput',\n    required: false,\n    inputs: [{\n      id: 'description',\n      type: 'selectInput',\n      options: Object.values(constants.OTHER_INCOME)\n    }, {\n      id: 'value',\n      type: 'textInput',\n      money: true\n    }]\n  }, {\n    id: 'expenses',\n    type: 'arrayInput',\n    required: false,\n    inputs: [{\n      id: 'description',\n      type: 'selectInput',\n      options: Object.values(constants.EXPENSES)\n    }, {\n      id: 'value',\n      type: 'textInput',\n      money: true\n    }]\n  }, {\n    type: 'conditionalInput',\n    conditionalTrueValue: true,\n    inputs: [{\n      id: 'hasOwnCompany',\n      type: 'radioInput',\n      options: [true, false]\n    }, {\n      id: 'ownCompanies',\n      type: 'arrayInput',\n      inputs: [{\n        id: 'description',\n        type: 'textInput'\n      }, {\n        id: 'ownership',\n        type: 'textInput',\n        percent: true\n      }, {\n        id: 'netIncome2018',\n        type: 'textInput',\n        money: true\n      }, {\n        id: 'netIncome2017',\n        type: 'textInput',\n        money: true\n      }, {\n        id: 'netIncome2016',\n        type: 'textInput',\n        money: true\n      }]\n    }]\n  }];\n  const fortuneArray = [{\n    type: 'h3',\n    id: 'fortune',\n    ignore: true,\n    required: false,\n    className: 'v-align-fortune'\n  }, {\n    id: 'bankFortune',\n    type: 'textInput',\n    money: true\n  }, {\n    id: 'thirdPartyFortune',\n    type: 'textInput',\n    money: true,\n    required: false\n  }, {\n    id: 'realEstate',\n    type: 'arrayInput',\n    required: false,\n    inputs: [{\n      id: 'name',\n      type: 'textInput'\n    }, {\n      id: 'description',\n      type: 'selectInput',\n      options: Object.values(constants.RESIDENCE_TYPE)\n    }, {\n      id: 'value',\n      type: 'textInput',\n      money: true\n    }, {\n      id: 'loan',\n      type: 'textInput',\n      money: true\n    }, {\n      id: 'income',\n      type: 'textInput',\n      money: true,\n      required: false\n    }]\n  }, makeArrayOfObjectsInput('otherFortune')];\n  const insuranceArray = [{\n    type: 'h3',\n    id: 'insurance',\n    required: false,\n    ignore: true,\n    className: 'v-align-insurance'\n  }, makeArrayOfObjectsInput('insurance2'), makeArrayOfObjectsInput('bank3A'), makeArrayOfObjectsInput('insurance3A'), makeArrayOfObjectsInput('insurance3B')];\n  return incomeArray.concat([...fortuneArray, ...insuranceArray]);\n};\n\nconst getSimpleBorrowerFinanceArray = ({\n  borrowers,\n  borrowerId\n}) => {\n  const b = borrowers.find(({\n    _id\n  }) => _id === borrowerId);\n\n  if (!b) {\n    throw new Error(\"couldn't find borrower\");\n  }\n\n  const incomeArray = [{\n    type: 'h3',\n    id: 'financeInformations',\n    ignore: true,\n    required: false,\n    className: 'v-align-financeInformations'\n  }, {\n    id: 'salary',\n    type: 'textInput',\n    money: true\n  }, {\n    id: 'netSalary',\n    type: 'textInput',\n    money: true\n  }, {\n    type: 'conditionalInput',\n    conditionalTrueValue: true,\n    inputs: [{\n      id: 'bonusExists',\n      type: 'radioInput',\n      options: [true, false]\n    }, ...[2019, 2018, 2017, 2016, 2015].map(year => ({\n      id: `bonus${year}`,\n      type: 'textInput',\n      money: true,\n      condition: year === 2015 ? !!b.bonus2015 : true\n    }))]\n  }];\n  const fortuneArray = [{\n    id: 'bankFortune',\n    type: 'textInput',\n    money: true\n  }];\n  const insuranceArray = [{\n    id: 'insurance2Simple',\n    type: 'textInput',\n    money: true,\n    required: false\n  }, {\n    id: 'bank3ASimple',\n    type: 'textInput',\n    money: true,\n    required: false\n  }, {\n    id: 'insurance3ASimple',\n    type: 'textInput',\n    money: true,\n    required: false\n  }, {\n    id: 'insurance3BSimple',\n    type: 'textInput',\n    money: true,\n    required: false\n  }];\n  return incomeArray.concat([...fortuneArray, ...insuranceArray]);\n};\n\nconst getBorrowerSimpleArray = ({\n  borrowers,\n  borrowerId,\n  loan = {}\n}) => {\n  const b = borrowers.find(borrower => borrower._id === borrowerId);\n  const {\n    simpleBorrowersForm: simple = true\n  } = loan;\n\n  if (!b) {\n    throw new Error(\"couldn't find borrower\");\n  }\n\n  return [{\n    id: 'firstName',\n    type: 'textInput',\n    condition: !loan.anonymous\n  }, {\n    id: 'lastName',\n    type: 'textInput',\n    condition: !loan.anonymous\n  }, {\n    id: 'birthDate',\n    type: 'dateInput',\n    condition: !loan.anonymous\n  }, ...(simple ? getSimpleBorrowerFinanceArray({\n    borrowers,\n    borrowerId\n  }) : getBorrowerFinanceArray({\n    borrowers,\n    borrowerId\n  }))];\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"PropertyFormArray.jsx\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/arrays/PropertyFormArray.jsx                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  getPropertyLoanArray: () => getPropertyLoanArray,\n  getPropertyArray: () => getPropertyArray\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PROPERTY_TYPE, PURCHASE_TYPE, OWNER, RESIDENCE_TYPE, MINERGIE_CERTIFICATE, HOUSE_TYPE, FLAT_TYPE, VOLUME_NORM;\nmodule.link(\"../api/constants\", {\n  PROPERTY_TYPE(v) {\n    PROPERTY_TYPE = v;\n  },\n\n  PURCHASE_TYPE(v) {\n    PURCHASE_TYPE = v;\n  },\n\n  OWNER(v) {\n    OWNER = v;\n  },\n\n  RESIDENCE_TYPE(v) {\n    RESIDENCE_TYPE = v;\n  },\n\n  MINERGIE_CERTIFICATE(v) {\n    MINERGIE_CERTIFICATE = v;\n  },\n\n  HOUSE_TYPE(v) {\n    HOUSE_TYPE = v;\n  },\n\n  FLAT_TYPE(v) {\n    FLAT_TYPE = v;\n  },\n\n  VOLUME_NORM(v) {\n    VOLUME_NORM = v;\n  }\n\n}, 1);\nlet CantonField;\nmodule.link(\"../components/CantonField/CantonField\", {\n  default(v) {\n    CantonField = v;\n  }\n\n}, 2);\n\nconst mapInput = input => {\n  const intlSafeObject = (0, _objectSpread2.default)({}, input); // If the id contains a dot in it, split it and add a intlId\n  // This makes it easier to write intl messages\n\n  if (input.id && input.id.indexOf('.') > 0) {\n    // Perform some additional slicing to make sure ids with multiple dots\n    // work by removing only the first part\n    intlSafeObject.intlId = input.id.split('.').slice(1).join('.');\n  }\n\n  if (input.inputs) {\n    // If there are nested inputs, give them an intlId too\n    intlSafeObject.inputs = input.inputs.map(obj => obj.id && obj.id.indexOf('.') > 0 ? (0, _objectSpread2.default)({}, obj, {\n      intlId: obj.id.split('.')[1]\n    }) : obj);\n  }\n\n  return intlSafeObject;\n};\n\nconst getOwnerOptions = ({\n  borrowers\n}) => Object.values(OWNER).filter(value => borrowers.length === 1 ? value !== OWNER.SECOND : true).map(value => {\n  const isFirst = value === OWNER.FIRST;\n  const isSecond = value === OWNER.SECOND;\n  let borrowerFirstName;\n\n  if (borrowers.length <= 1) {\n    borrowerFirstName = null;\n  } else {\n    borrowerFirstName = borrowers[isFirst ? 0 : 1].firstName;\n  }\n\n  return isFirst || isSecond ? {\n    id: isFirst ? 0 : 1,\n    intlValues: {\n      name: borrowerFirstName || `Emprunteur ${isFirst ? 1 : 2}`\n    }\n  } : value;\n});\n\nconst getPropertyLoanArray = ({\n  loan,\n  borrowers\n}) => {\n  const r = loan;\n\n  if (!r) {\n    throw new Error('requires a loan');\n  }\n\n  const array = [{\n    type: 'h3',\n    id: 'propertyInfo',\n    ignore: true,\n    required: false\n  }, {\n    id: 'residenceType',\n    type: 'radioInput',\n    options: Object.values(RESIDENCE_TYPE)\n  }, {\n    type: 'conditionalInput',\n    conditionalTrueValue: OWNER.OTHER,\n    condition: borrowers.length > 1 && r.purchaseType === PURCHASE_TYPE.REFINANCING,\n    inputs: [{\n      id: 'currentOwner',\n      type: 'radioInput',\n      options: getOwnerOptions({\n        borrowers\n      })\n    }, {\n      id: 'otherOwner',\n      type: 'textInput'\n    }]\n  }, {\n    type: 'conditionalInput',\n    conditionalTrueValue: OWNER.OTHER,\n    condition: borrowers.length > 1 && r.purchaseType !== PURCHASE_TYPE.REFINANCING,\n    inputs: [{\n      id: 'futureOwner',\n      type: 'radioInput',\n      options: getOwnerOptions({\n        borrowers\n      })\n    }, {\n      id: 'otherOwner',\n      type: 'textInput'\n    }]\n  }];\n  return array.map(mapInput);\n};\n\nconst shouldDisplayFloorNumber = ({\n  propertyType,\n  flatType\n}) => propertyType === PROPERTY_TYPE.FLAT && flatType !== FLAT_TYPE.PENTHOUSE_APARTMENT && flatType !== FLAT_TYPE.PENTHOUSE_MAISONETTE && flatType !== FLAT_TYPE.TERRACE_APARTMENT;\n\nconst shouldDisplayTerraceArea = ({\n  propertyType,\n  flatType\n}) => propertyType === PROPERTY_TYPE.FLAT;\n\nconst getPropertyArray = ({\n  loan,\n  borrowers,\n  property\n}) => {\n  const r = loan;\n\n  if (!r) {\n    throw new Error('requires a loan');\n  }\n\n  const array = [{\n    id: 'value',\n    type: 'textInput',\n    money: true\n  }, {\n    id: 'investmentRent',\n    type: 'textInput',\n    money: true,\n    condition: r.residenceType === RESIDENCE_TYPE.INVESTMENT\n  }, {\n    id: 'propertyType',\n    type: 'radioInput',\n    options: Object.values(PROPERTY_TYPE)\n  }, {\n    id: 'isNew',\n    type: 'radioInput',\n    options: [true, false],\n    condition: r.purchaseType === PURCHASE_TYPE.ACQUISITION\n  }, {\n    id: 'isCoproperty',\n    type: 'radioInput',\n    options: [true, false]\n  }, {\n    id: 'copropertyPercentage',\n    type: 'textInput',\n    condition: property.isCoproperty,\n    info: true\n  }, {\n    type: 'h3',\n    id: 'propertyAddress',\n    ignore: true,\n    required: false\n  }, {\n    id: 'address1',\n    type: 'textInput'\n  }, {\n    id: 'address2',\n    type: 'textInput',\n    required: false\n  }, {\n    id: 'zipCode',\n    type: 'textInput'\n  }, {\n    id: 'city',\n    type: 'textInput'\n  }, {\n    type: 'custom',\n    id: 'canton',\n    component: React.createElement(CantonField, {\n      canton: property.canton\n    })\n  }, {\n    type: 'h3',\n    id: 'propertyDetails',\n    ignore: true,\n    required: false\n  }, {\n    id: 'houseType',\n    type: 'radioInput',\n    options: Object.values(HOUSE_TYPE),\n    condition: property.propertyType === PROPERTY_TYPE.HOUSE\n  }, {\n    id: 'flatType',\n    type: 'radioInput',\n    options: Object.values(FLAT_TYPE),\n    condition: property.propertyType === PROPERTY_TYPE.FLAT\n  }, {\n    id: 'numberOfFloors',\n    type: 'textInput',\n    number: true\n  }, {\n    id: 'floorNumber',\n    type: 'textInput',\n    number: true,\n    condition: shouldDisplayFloorNumber(property)\n  }, {\n    id: 'constructionYear',\n    type: 'textInput',\n    number: true\n  }, {\n    id: 'renovationYear',\n    type: 'textInput',\n    number: true,\n    required: false,\n    info: true\n  }, {\n    id: 'landArea',\n    type: 'textInput',\n    number: true,\n    condition: property.propertyType === PROPERTY_TYPE.HOUSE\n  }, {\n    id: 'insideArea',\n    type: 'textInput',\n    number: true,\n    condition: property.propertyType === PROPERTY_TYPE.FLAT\n  }, {\n    id: 'terraceArea',\n    type: 'textInput',\n    number: true,\n    required: true,\n    condition: shouldDisplayTerraceArea(property)\n  }, {\n    id: 'volume',\n    type: 'textInput',\n    number: true,\n    condition: property.propertyType === PROPERTY_TYPE.HOUSE\n  }, {\n    id: 'volumeNorm',\n    type: 'radioInput',\n    options: Object.values(VOLUME_NORM),\n    condition: property.propertyType === PROPERTY_TYPE.HOUSE\n  }, {\n    id: 'roomCount',\n    type: 'textInput',\n    decimal: true,\n    info: true\n  }, {\n    id: 'parkingInside',\n    type: 'textInput',\n    number: true,\n    required: false\n  }, {\n    id: 'parkingOutside',\n    type: 'textInput',\n    number: true,\n    required: false\n  }, {\n    id: 'minergie',\n    type: 'radioInput',\n    options: Object.values(MINERGIE_CERTIFICATE)\n  }, {\n    id: 'yearlyExpenses',\n    type: 'textInput',\n    money: true,\n    required: false,\n    info: true\n  }];\n  return array.map(mapInput);\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"RefinancingFormArray.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/arrays/RefinancingFormArray.js                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet INTEREST_RATES, MORTGAGE_NOTE_TYPES, MORTGAGE_NOTE_CATEGORIES;\nmodule.link(\"../api/constants\", {\n  INTEREST_RATES(v) {\n    INTEREST_RATES = v;\n  },\n\n  MORTGAGE_NOTE_TYPES(v) {\n    MORTGAGE_NOTE_TYPES = v;\n  },\n\n  MORTGAGE_NOTE_CATEGORIES(v) {\n    MORTGAGE_NOTE_CATEGORIES = v;\n  }\n\n}, 0);\n\nconst getRefinancingFormArray = ({\n  loan\n}) => [{\n  id: 'previousLender',\n  type: 'textInput'\n}, {\n  id: 'previousLoanTranches',\n  type: 'arrayInput',\n  inputs: [{\n    id: 'type',\n    type: 'selectInput',\n    options: Object.values(INTEREST_RATES),\n    intlId: 'loanTranches'\n  }, {\n    id: 'value',\n    type: 'textInput',\n    money: true\n  }, {\n    id: 'dueDate',\n    type: 'dateInput'\n  }, {\n    id: 'rate',\n    type: 'textInput',\n    percent: true\n  }]\n}, {\n  id: 'mortgageNotes',\n  type: 'arrayInput',\n  inputs: [{\n    id: 'value',\n    type: 'textInput',\n    money: true\n  }, {\n    id: 'rank',\n    type: 'textInput',\n    number: true\n  }, {\n    id: 'type',\n    type: 'selectInput',\n    options: Object.values(MORTGAGE_NOTE_TYPES)\n  }, {\n    id: 'category',\n    type: 'selectInput',\n    options: Object.values(MORTGAGE_NOTE_CATEGORIES)\n  }]\n}];\n\nmodule.exportDefault(getRefinancingFormArray);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"tooltips.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/arrays/tooltips.js                                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  TOOLTIP_LISTS: () => TOOLTIP_LISTS,\n  generalTooltips: () => generalTooltips,\n  widget1Tooltips: () => widget1Tooltips,\n  offerTableTooltips: () => offerTableTooltips,\n  devTooltips: () => devTooltips,\n  tooltips: () => tooltips,\n  tooltipsById: () => tooltipsById\n});\nconst TOOLTIP_LISTS = {\n  GENERAL: 'GENERAL',\n  OFFER_TABLE: 'OFFER_TABLE',\n  DEV: 'DEV',\n  WIDGET1: 'WIDGET1'\n};\nconst generalTooltips = {\n  finma: {\n    id: 'finma',\n    double: true\n  },\n  \"taux d'effort\": {\n    id: 'incomeRatio',\n    double: true\n  },\n  \"taux d'avance\": {\n    id: 'borrowRatio',\n    double: true\n  }\n};\nconst widget1Tooltips = {\n  'plan financier': {\n    id: 'financialPlan',\n    double: true\n  },\n  'structure de financement': {\n    id: 'financialPlan',\n    double: true\n  },\n  'charges / revenus': {\n    id: 'incomeRatio',\n    double: true\n  },\n  \"taux d'effort\": {\n    id: 'incomeRatio',\n    double: true\n  },\n  'revenus annuels bruts': {\n    id: 'income',\n    double: true\n  },\n  'salaire brut': {\n    id: 'income',\n    double: true\n  },\n  revenus: {\n    id: 'income',\n    double: true\n  },\n  bonus: {\n    id: 'bonus',\n    double: true\n  },\n  gratification: {\n    id: 'bonus',\n    double: true\n  },\n  emprunteurs: {\n    id: 'borrower'\n  },\n  emprunteur: {\n    id: 'borrower'\n  },\n  finma: {\n    id: 'finma',\n    double: true\n  },\n  'prêteurs intéressés': {\n    id: 'interestedLenders'\n  },\n  \"prêt / prix d'achat\": {\n    id: 'borrowRatio',\n    double: true\n  },\n  \"taux d'avance\": {\n    id: 'borrowRatio',\n    double: true\n  }\n};\nconst offerTableTooltips = {\n  montant: {\n    id: 'offerTable.amount'\n  },\n  libor: {\n    id: 'offerTable.libor'\n  },\n  '2 ans': {\n    id: 'offerTable.2'\n  },\n  '5 ans': {\n    id: 'offerTable.5'\n  },\n  '10 ans': {\n    id: 'offerTable.10'\n  },\n  amortissement: {\n    id: 'offerTable.amortization'\n  },\n  expertise: {\n    id: 'offerTable.expertise'\n  },\n  conditions: {\n    id: 'offerTable.conditions'\n  }\n};\nconst devTooltips = {\n  match1: {\n    id: 'id1'\n  },\n  match2: {\n    id: 'id2'\n  }\n};\n\nconst tooltips = list => {\n  switch (list) {\n    case TOOLTIP_LISTS.GENERAL:\n      return generalTooltips;\n\n    case TOOLTIP_LISTS.OFFER_TABLE:\n      return offerTableTooltips;\n\n    case TOOLTIP_LISTS.DEV:\n      return devTooltips;\n\n    case TOOLTIP_LISTS.WIDGET1:\n      return widget1Tooltips;\n\n    default:\n      throw new Error(`Unknown tooltip list: \"${list}\"`);\n  }\n};\n\nconst tooltipsById = id => {\n  if (typeof id !== 'string') {\n    throw new Error('not a string');\n  }\n\n  const [listId, ...ids] = id.split('.');\n\n  if (ids.length < 1 || ids[0] === '') {\n    throw Error('Wrong id given for tooltips, requires 2 strings separated by a .');\n  }\n\n  const list = tooltips(listId);\n  return list[ids.join('.')];\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"config\":{\"colors.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/config/colors.js                                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet INTEREST_RATES;\nmodule.link(\"../api/interestRates/interestRatesConstants\", {\n  INTEREST_RATES(v) {\n    INTEREST_RATES = v;\n  }\n\n}, 0);\nconst colors = {\n  primary: '#005bea',\n  primaryArray: [0, 91, 234],\n  secondary: '#00c6ff',\n  tertiary: '#001a8f',\n  success: '#21d3b5',\n  warning: '#F3AF50',\n  error: '#e01076',\n  borderGrey: '#DEE2E6',\n  charts: ['#2C82BE', '#76DDFB', '#DBECF8', '#53A8E2', '#6AC6FF', '#005bea'],\n  iconColor: '#444',\n  iconHoverColor: '#888',\n  body: '#666',\n  title: '#444',\n  mui: {\n    background: '#fff',\n    contrastText: '#fff',\n    darkPrimary: '#0048bb',\n    // Darken 20%\n    darkSuccess: '#1aa890' // Darken 20%\n\n  },\n  interestRates: {\n    [INTEREST_RATES.LIBOR]: '#0047AC',\n    [INTEREST_RATES.YEARS_1]: '#2C82BE',\n    [INTEREST_RATES.YEARS_2]: '#A8B9C5',\n    [INTEREST_RATES.YEARS_5]: '#43AAC8',\n    [INTEREST_RATES.YEARS_10]: '#005bea',\n    [INTEREST_RATES.YEARS_15]: '#2075AF',\n    [INTEREST_RATES.YEARS_20]: '#3793CC',\n    [INTEREST_RATES.YEARS_25]: '#53A8E2',\n    irs10y: '#0048bb'\n  }\n};\nmodule.exportDefault(colors);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"constants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/config/constants.js                                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  AUTOSAVE_DEBOUNCE: () => AUTOSAVE_DEBOUNCE\n});\nconst AUTOSAVE_DEBOUNCE = 400;\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"financeConstants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/config/financeConstants.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  NOTARY_FEES: () => NOTARY_FEES,\n  AMORTIZATION_STOP: () => AMORTIZATION_STOP,\n  MAINTENANCE_REAL: () => MAINTENANCE_REAL,\n  MAINTENANCE_FINMA: () => MAINTENANCE_FINMA,\n  INTERESTS_FINMA: () => INTERESTS_FINMA,\n  APPROXIMATE_LPP_FEES: () => APPROXIMATE_LPP_FEES,\n  DEFAULT_AMORTIZATION: () => DEFAULT_AMORTIZATION,\n  AMORTIZATION_YEARS: () => AMORTIZATION_YEARS,\n  DEFAULT_INTEREST_RATE: () => DEFAULT_INTEREST_RATE,\n  MAX_BORROW_RATIO_PRIMARY_PROPERTY: () => MAX_BORROW_RATIO_PRIMARY_PROPERTY,\n  MAX_BORROW_RATIO_OTHER: () => MAX_BORROW_RATIO_OTHER,\n  MAX_BORROW_RATIO_WITH_PLEDGE: () => MAX_BORROW_RATIO_WITH_PLEDGE,\n  MAX_INCOME_RATIO: () => MAX_INCOME_RATIO,\n  MAX_INCOME_RATIO_TIGHT: () => MAX_INCOME_RATIO_TIGHT,\n  FORTUNE_WARNING_TIGHT: () => FORTUNE_WARNING_TIGHT,\n  INCOME_WARNING_TIGHT: () => INCOME_WARNING_TIGHT,\n  FORTUNE_ERROR: () => FORTUNE_ERROR,\n  INCOME_ERROR: () => INCOME_ERROR,\n  CURRENCY: () => CURRENCY,\n  MIN_CASH: () => MIN_CASH,\n  AVERAGE_TAX_RATE: () => AVERAGE_TAX_RATE,\n  SECOND_PILLAR_WITHDRAWAL_TAX_RATE: () => SECOND_PILLAR_WITHDRAWAL_TAX_RATE,\n  VAT: () => VAT,\n  BONUS_CONSIDERATION: () => BONUS_CONSIDERATION,\n  BONUS_HISTORY_TO_CONSIDER: () => BONUS_HISTORY_TO_CONSIDER,\n  COMPANY_INCOME_TO_CONSIDER: () => COMPANY_INCOME_TO_CONSIDER,\n  DIVIDENDS_CONSIDERATION: () => DIVIDENDS_CONSIDERATION,\n  DIVIDENDS_HISTORY_TO_CONSIDER: () => DIVIDENDS_HISTORY_TO_CONSIDER,\n  PENSION_INCOME_CONSIDERATION: () => PENSION_INCOME_CONSIDERATION,\n  REAL_ESTATE_INCOME_CONSIDERATION: () => REAL_ESTATE_INCOME_CONSIDERATION,\n  INVESTMENT_INCOME_CONSIDERATION: () => INVESTMENT_INCOME_CONSIDERATION,\n  FORTUNE_RETURNS_RATIO: () => FORTUNE_RETURNS_RATIO,\n  ESTIMATED_COMMISSION: () => ESTIMATED_COMMISSION,\n  REFERRAL_COMMISSION: () => REFERRAL_COMMISSION,\n  REFERRAL_COMMISSION_SPLIT: () => REFERRAL_COMMISSION_SPLIT,\n  OWN_FUNDS_ROUNDING_AMOUNT: () => OWN_FUNDS_ROUNDING_AMOUNT,\n  BONUS_ALGORITHMS: () => BONUS_ALGORITHMS,\n  REAL_ESTATE_INCOME_ALGORITHMS: () => REAL_ESTATE_INCOME_ALGORITHMS\n});\nconst NOTARY_FEES = 0.05;\nconst AMORTIZATION_STOP = 0.65;\nconst MAINTENANCE_REAL = 0.005;\nconst MAINTENANCE_FINMA = 0.01;\nconst INTERESTS_FINMA = 0.05;\nconst APPROXIMATE_LPP_FEES = 0.1;\nconst DEFAULT_AMORTIZATION = 0.01;\nconst AMORTIZATION_YEARS = 15;\nconst DEFAULT_INTEREST_RATE = 0.015;\nconst MAX_BORROW_RATIO_PRIMARY_PROPERTY = 0.8;\nconst MAX_BORROW_RATIO_OTHER = 0.7;\nconst MAX_BORROW_RATIO_WITH_PLEDGE = 0.9;\nconst MAX_INCOME_RATIO = 1 / 3;\nconst MAX_INCOME_RATIO_TIGHT = 0.38;\nconst FORTUNE_WARNING_TIGHT = 'FORTUNE_WARNING_TIGHT';\nconst INCOME_WARNING_TIGHT = 'INCOME_WARNING_TIGHT';\nconst FORTUNE_ERROR = 'FORTUNE_ERROR';\nconst INCOME_ERROR = 'INCOME_ERROR';\nconst CURRENCY = 'CHF';\nconst MIN_CASH = 0.1;\nconst AVERAGE_TAX_RATE = 0.25;\nconst SECOND_PILLAR_WITHDRAWAL_TAX_RATE = 0.1;\nconst VAT = 0.077;\nconst BONUS_CONSIDERATION = 0.5;\nconst BONUS_HISTORY_TO_CONSIDER = 3;\nconst COMPANY_INCOME_TO_CONSIDER = 1;\nconst DIVIDENDS_CONSIDERATION = 1;\nconst DIVIDENDS_HISTORY_TO_CONSIDER = 1;\nconst PENSION_INCOME_CONSIDERATION = 1;\nconst REAL_ESTATE_INCOME_CONSIDERATION = 1;\nconst INVESTMENT_INCOME_CONSIDERATION = 1;\nconst FORTUNE_RETURNS_RATIO = 0;\nconst ESTIMATED_COMMISSION = 0.01;\nconst REFERRAL_COMMISSION = 0.25;\nconst REFERRAL_COMMISSION_SPLIT = 0.5;\nconst OWN_FUNDS_ROUNDING_AMOUNT = 1001;\nconst BONUS_ALGORITHMS = {\n  AVERAGE: 'AVERAGE',\n  WEAK_AVERAGE: 'WEAK_AVERAGE'\n};\nconst REAL_ESTATE_INCOME_ALGORITHMS = {\n  DEFAULT: 'DEFAULT',\n  POSITIVE_NEGATIVE_SPLIT: 'POSITIVE_NEGATIVE_SPLIT'\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"lang\":{\"fr.json\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/core/lang/fr.json                                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.exports = {\n  \"ProRevenuesPage.explained\": \"Calcul des revenus\",\n  \"ProRevenuesPage.explained1\": \"Tous les revenus que vous voyez sont les votres.{verticalSpace}Pour les statuts {lead} et {ongoing} , les revenus sont estimés en prenant en compte le commissionnement contractualisé, sur une base des revenus moyens de 1% du montant de l'hypothèque.{verticalSpace}Dès le que le dossier passe en {closing} , e-Potek a la capacité de vous renseigner sur les revenus effectifs à percevoir.\",\n  \"PropertiesPage.addProProperty\": \"Ajouter bien immo Pro\",\n  \"Forms.refId\": \"Code referral\",\n  \"Forms.secondaryType\": \"Type secondaire\",\n  \"Forms.secondaryType.DEATH_3A\": \"Décès 3A\",\n  \"Forms.secondaryType.DEATH_3B\": \"Décès 3B\",\n  \"Forms.secondaryType.INCOME_PROTECTION_3A\": \"Rente IG 3A\",\n  \"Forms.secondaryType.INCOME_PROTECTION_3B\": \"Rente IG 3B\",\n  \"Forms.secondaryType.LIFE_3A\": \"Vie 3A\",\n  \"Forms.secondaryType.LIFE_3B\": \"Vie 3B\",\n  \"PromotionModifier.title\": \"Modifier promotion\",\n  \"OrganisationTabs.revenues\": \"Revenus\",\n  \"Forms.organisationsToPay\": \"Retrocessions pour\",\n  \"Forms.sourceOrganisationLink\": \"Payé par\",\n  \"MaxPropertyValueSharing.buttonLabelOrg\": \"Certifier avec {orgName}\",\n  \"MaxPropertyValueSharing.toggleLabel\": \"Partage de solvabilité\",\n  \"MaxPropertyValue.signup.cta\": \"Envoyer\",\n  \"MaxPropertyValue.completeInfo\": \"Complétez vos informations\",\n  \"MaxPropertyValue.loading1\": \"Algorithmes au travail...\",\n  \"MaxPropertyValue.loading2\": \"Détendez-vous un instant\",\n  \"Forms.reason\": \"Raison\",\n  \"Forms.shouldNotify\": \"Recevoir une notification le jour de l'événement\",\n  \"MaxPropertyValue.noCantonError\": \"Champ obligatoire\",\n  \"Forms.bank3ASimple\": \"Banque 3A\",\n  \"Forms.insurance3ASimple\": \"Assurance 3A\",\n  \"Forms.insurance3BSimple\": \"Assurance 3B\",\n  \"Forms.insurance2Simple\": \"LPP, 2ème Pilier\",\n  \"Forms.financeInformations\": \"Informations financières\",\n  \"MaxPropertyValue.signup.title\": \"Parfait !\",\n  \"MaxPropertyValue.signup.description\": \"Pour accéder au résultat, veuillez remplir le formulaire. Vous recevrez un lien par email\",\n  \"BorrowersPage.BorrowerAdder.title\": \"Combien êtes-vous à emprunter ?\",\n  \"BorrowersPage.BorrowerAdder.description\": \"Vous pourrez changer ce réglage par la suite\",\n  \"BorrowersPage.BorrowerAdder.singleBorrower\": \"Seul\",\n  \"BorrowersPage.BorrowerAdder.twoBorrowers\": \"Deux ou plus\",\n  \"general.pick\": \"Choisissez...\",\n  \"MaxPropertyValue.empty.promotion\": \"Dans le cadre de la promotion \\\"{promotionName}\\\", calculez votre capacité d'achat et obtenez votre attestation de financement pour le canton de {canton}\",\n  \"MaxPropertyValue.empty.proProperty\": \"Obtenez votre attestation de financement pour le bien immobilier \\\"{propertyName}\\\"\",\n  \"Forms.customMessage\": \"Message personnalisé\",\n  \"Forms.customMessage.placeholder\": \"Bonjour Marie,\\n\\nVous trouverez ci-dessus la liste des informations et des documents manquants à votre dossier. J'attire plus particulièrement votre attention sur le document XYZ...\",\n  \"FinancingResultInterests.withOffer\": \"Offre de {name}\",\n  \"FinancingResultInterests.noOffer\": \"Basé sur nos taux actuels\",\n  \"Forms.isPrivate\": \"Privé\",\n  \"emails.LOAN_CHECKLIST.CTA\": \"Compléter mon dossier\",\n  \"emails.LOAN_CHECKLIST.SUBJECT\": \"Invitation à compléter votre dossier\",\n  \"emails.LOAN_CHECKLIST.TITLE\": \"Rapport du {today} sur la progression de votre dossier\",\n  \"Forms.type.COMMUNICATION\": \"Email, téléphone\",\n  \"Forms.type.EMAIL\": \"Email\",\n  \"Forms.type.PHONE\": \"Téléphone\",\n  \"Forms.type.EVENT\": \"Événement\",\n  \"Forms.type.SERVER\": \"Automatique\",\n  \"Forms.expectedAt\": \"Paiement attendu le\",\n  \"Forms.paidAt\": \"Paiement reçu le\",\n  \"Forms.dueAtTime\": \"Heure d'échéance\",\n  \"Forms.maxBorrowRatioWithPledge\": \"Taux d'avance avec nantissement\",\n  \"DetailSideNavFilters.relevantOnly\": \"Pertinents uniquement\",\n  \"FinancingCollapser.expand\": \"Afficher les détails\",\n  \"FinancingCollapser.collapse\": \"Masquer les détails\",\n  \"SuperDashboard.welcome\": \"Bienvenue, {name}\",\n  \"SuperDashboard.welcome.subtitle\": \"Vos dossiers\",\n  \"SuperDashboard.openLoan\": \"Ouvrir le dossier\",\n  \"Forms.category.STANDARD\": \"Retail\",\n  \"Forms.category.PREMIUM\": \"Premium\",\n  \"LoginPage.noAccountApp\": \"Vous n'avez pas de compte? Commencez {link}\",\n  \"LoginPage.noAccount\": \"Vous n'avez pas de compte? {contactUs}\",\n  \"AccountPage.updateUser\": \"Modifier mes informations\",\n  \"PropertyStartPage.buttonLabel\": \"Démarrer\",\n  \"AnonymousLoanClaimer.title\": \"Ajouter ce dossier à votre compte?\",\n  \"AnonymousLoanClaimer.refuse\": \"Non, supprimer\",\n  \"AnonymousLoanClaimer.claim\": \"Ajouter à mon compte\",\n  \"SignupSuccessPage.title\": \"Un email vous a été envoyé à {email}\",\n  \"SignupSuccessPage.description\": \"Ouvrez-le pour continuer votre expérience e-Potek\",\n  \"UserCreator.title\": \"Créez votre compte e-Potek\",\n  \"UserCreator.description1\": \"Soyez accompagné par votre conseiller attitré\",\n  \"UserCreator.description2\": \"Accédez à l'interface complète e-Potek\",\n  \"UserCreator.description3\": \"Obtenez des offres de tous les prêteurs du marché!\",\n  \"AnonymousAppPage.withLoanTitle\": \"Dossier anonyme\",\n  \"AnonymousAppPage.lastModifiedAt\": \"Dernière modification {date} depuis cet appareil\",\n  \"AnonymousAppPage.start\": \"Commencer\",\n  \"AnonymousAppPage.alreadyAccount\": \"Vous avez déjà un compte e-Potek?\",\n  \"WwwTopNavLinks.\": \"Accueil\",\n  \"Recap.consideredBy\": \"Considéré par {organisationName}\",\n  \"Forms.variable.zipCode\": \"Code postal du bien immobilier\",\n  \"Forms.variable.remainingBankFortune\": \"Fortune bancaire post-décaissement\",\n  \"Forms.expenses.REAL_ESTATE_DELTA_POSITIVE\": \"Delta immobilier positif\",\n  \"Forms.expenses.REAL_ESTATE_DELTA_NEGATIVE\": \"Delta immobilier négatif\",\n  \"Forms.realEstateIncomeAlgorithm\": \"Calcul des revenus/charges immobilières\",\n  \"Forms.realEstateIncomeAlgorithm.DEFAULT\": \"Charges et revenus séparés\",\n  \"Forms.realEstateIncomeAlgorithm.POSITIVE_NEGATIVE_SPLIT\": \"Deltas positifs/négatifs\",\n  \"Forms.bonusAlgorithm\": \"Calcul des bonus\",\n  \"Forms.bonusAlgorithm.AVERAGE\": \"Moyenne des bonus (y compris 0)\",\n  \"Forms.bonusAlgorithm.WEAK_AVERAGE\": \"Moyenne des bonus existants\",\n  \"Forms.realEstateIncomeConsideration\": \"Considération des revenus immobiliers\",\n  \"PasswordResetPage.disclaimer\": \"J'ai lu et accepté la {link}.\",\n  \"PasswordResetPage.disclaimer.privacyPolicy\": \"Politique de confidentialité\",\n  \"Forms.loanName\": \"No.\",\n  \"EmailVerification.error\": \"Il y a eu un souci lors de la vérification de votre email, merci de contacter info@e-potek.ch si vous avez besoin d'assistance.\",\n  \"EmailVerification.message\": \"Votre adresse email a bien été vérifiée, merci!\",\n  \"PromotionUsersTableActions.editLots.title\": \"Modifier lots de {name}\",\n  \"PromotionUsersTableActions.editLots\": \"Préselectionner lots\",\n  \"Forms.promotionLotIds\": \"Préselection de lots\",\n  \"Forms.showAllLots\": \"Le client peut voir tous les lots\",\n  \"Recap.realEstateCosts\": \"Charges immobilières théoriques\",\n  \"PasswordResetPage.errorTitle\": \"Zut, une erreur\",\n  \"PasswordResetPage.errorButton\": \"Se connecter\",\n  \"PasswordResetPage.errorDescription\": \"Vous avez déjà choisi votre mot de passe. Connectez-vous à votre compte sur la page de login.\",\n  \"AutoForm.autosaveDisclaimer\": \"Les informations dans ce formulaire sont sauvegardées à chaque instant, naviguez en toute liberté.\",\n  \"MaxPropertyValueSharing.buttonLabel\": \"Partager avec mon courtier\",\n  \"PropertyCardSubtitle.solvent\": \"Solvable\",\n  \"PropertyCardSubtitle.nonSolvent\": \"Non solvable\",\n  \"PropertyCardSubtitle.solvent.tooltip\": \"Votre capacité d'achat est suffisante pour acquérir ce bien.\",\n  \"PropertyCardSubtitle.nonSolvent.tooltip\": \"Votre capacité d'achat est insuffisante pour acquérir ce bien. Vous pouvez appeler votre conseiller e-Potek pour identifier des solutions.\",\n  \"Forms.solvency.NOT_SHARED\": \"Pas partagé\",\n  \"Forms.variable.propertyType\": \"Type de bien immobilier\",\n  \"SimpleDashboardPage.shareSolvency.title\": \"Activer le partage de solvabilité avec mon courtier\",\n  \"SimpleDashboardPage.shareSolvency.disclaimer\": \"En activant le partage de solvabilité, {orgName} peut voir si vous êtes solvable ou non sur votre bien immobilier. Aucune autre information personnelle ne sera partagée.\",\n  \"DashboardInfoInterests.link\": \"Consulter {count, plural, one {mon offre} other {mes offres}}\",\n  \"DashboardInfoInterests.subtitle\": \"{count, plural, one {Une offre} other {# offres}}\",\n  \"DashboardInfoInterests.offersTitle\": \"Vos taux d'intérêt\",\n  \"BorrowersProgress.empty\": \"Commencez à remplir le formulaire, vous verrez un récapitulatif ici\",\n  \"DashboardProgressInfo.solvency\": \"Calculez votre capacité d'achat pour obtenir une attestation de financement\",\n  \"SolvencyPage.title\": \"Attestation de financement\",\n  \"BorrowersProgress.welcomePage\": \"Écran d'accueil\",\n  \"MaxPropertyValue.missingInfos\": \"Complétez le formulaire pour obtenir votre attestation de financement\",\n  \"MaxPropertyValue.informations\": \"Pour un résultat précis, utilisez le formulaire avancé.\",\n  \"MaxPropertyValue.empty\": \"Choisissez le canton dans lequel se situe le bien immobilier. Vous pourrez le changer plus tard.\",\n  \"Forms.applicationType\": \"Interface\",\n  \"Forms.applicationType.SIMPLE\": \"Simplifiée\",\n  \"Forms.applicationType.FULL\": \"Complète\",\n  \"SimpleDashboardPage.propertyCardButton.property\": \"Voir le bien immobilier\",\n  \"SimpleDashboardPage.propertyCardButton.promotion\": \"Voir la promotion\",\n  \"general.begin\": \"Démarrer\",\n  \"WelcomeScreen.title\": \"Bienvenue sur e-Potek\",\n  \"WelcomeScreen.description\": \"e-Potek vous permet de rapidement déterminer votre capacité d’achat, et d’obtenir des offres de prêt hypothécaires de tout le marché.\",\n  \"WelcomeScreen.whoWeAre\": \"Qui sommes nous?\",\n  \"WelcomeScreen.readAboutUs\": \"En lire plus sur e-Potek\",\n  \"WelcomeScreen.readFaq\": \"Lire les questions fréquemment posées\",\n  \"WelcomeScreen.help\": \"Besoin d'aide?\",\n  \"WelcomeScreen.contactUs\": \"Contactez votre conseiller attitré\",\n  \"WelcomeScreen.other\": \"Autres infos pratiques\",\n  \"WelcomeScreen.interestRates\": \"Consultez nos derniers taux d'intérêt\",\n  \"WelcomeScreen.companyDescription\": \"Déscriptif d'e-Potek SA\",\n  \"WelcomeScreen.dontShowAgain\": \"Ne plus afficher cet écran\",\n  \"WelcomeScreen.interests\": \"Nos taux?\",\n  \"WelcomeScreen.english\": \"Do you speak English?\",\n  \"WelcomeScreen.contactUsEN\": \"Give us a call!\",\n  \"WelcomeScreen.readBlog\": \"Voir notre blog\",\n  \"WelcomeScreen.readMore\": \"En lire plus\",\n  \"WelcomeScreen.moreQuestions\": \"D'autres questions?\",\n  \"BorrowersProgress.fullApplication\": \"Demande de prêt\",\n  \"BorrowersProgress.fullApplicationDescription\": \"Votre conseiller va vous contacter afin de vous accompagner au sein de votre espace personnel e-Potek. Vous pourrez :\",\n  \"BorrowersProgress.fullApplicationDescription1\": \"Constituer un dossier complet de recherche de financement\",\n  \"BorrowersProgress.fullApplicationDescription2\": \"Identifier la structure de financement la plus adaptée à votre situation\",\n  \"BorrowersProgress.fullApplicationDescription3\": \"Obtenir des offres hypothécaires de tous les acteurs du marché\",\n  \"BorrowersProgress.fullApplicationDescription4\": \"Pour une expérience optimale, nous vous recommandons d'utiliser votre ordinateur ou tablette\",\n  \"BorrowersProgress.progress\": \"Formulaire rempli à {percent}\",\n  \"BorrowersProgress.title\": \"Emprunteurs\",\n  \"MaxPropertyValue.title\": \"Capacité d'achat\",\n  \"Forms.variable.gardenArea\": \"Jardin\",\n  \"Forms.variable.landArea\": \"Terrain\",\n  \"Forms.variable.terraceArea\": \"Terrasse\",\n  \"Forms.variable.roomCount\": \"Pièces\",\n  \"Forms.variable.constructionYear\": \"Année de construction\",\n  \"Forms.canton.placeholder\": \"Renseignez un code postal suisse\",\n  \"FinancingProjectFees.notaryFeesOverride\": \"Vous avez choisi des frais de notaire sur mesure. Pour accéder aux frais de notaire automatiques, supprimez le contenu du champ \\\"Frais de notaire\\\".\",\n  \"Financing.maxPropertyLabel\": \"Ajouter plan financier\",\n  \"Financing.maxPropertyDescription\": \"Capacité d'achat max.\",\n  \"Financing.maxPropertyDialogDescription\": \"Ajoute un nouveau plan financier qui représente votre capacité d'achat maximale dans le canton de votre choix.\",\n  \"ProOrganisationUserAdder.title\": \"Ajouter un utilisateur à {organisationName}\",\n  \"ProOrganisationUserAdder.description\": \"Crée un nouveau compte qui sera automatiquement associé à votre organisation et aura accès à tous les biens immobiliers, promotions et clients de cette organisation.\",\n  \"ProOrganisationUserAdder.tooltip\": \"Ajouter utilisateur à {organisationName}\",\n  \"AccountPage.DevelopperSection.emptyState.title\": \"Pas de clés API\",\n  \"AccountPage.DevelopperSection.emptyState.description\": \"Vous pouvez générer une paire de clés pour commencer à utiliser notre API REST.\",\n  \"AccountPage.DevelopperSection.keyPair.regenerate\": \"Regénérer une paire de clés\",\n  \"AccountPage.DevelopperSection.keyPair.generate\": \"Générer une paire de clés\",\n  \"AccountPage.DevelopperSection.key.warning\": \"Sauvegardez votre clé privée maintenant: vous ne pourrez plus y accéder !\",\n  \"AccountPage.DevelopperSection.key.createdAt\": \"Générée le {date}\",\n  \"AccountPage.DevelopperSection.key.show\": \"Afficher la clé\",\n  \"AccountPage.DevelopperSection.key.hide\": \"Masquer la clé\",\n  \"AccountPage.DevelopperSection.key.copy\": \"Copier la clé\",\n  \"AccountPage.DevelopperSection.keyType.public\": \"Clé publique\",\n  \"AccountPage.DevelopperSection.keyType.private\": \"Clé privée\",\n  \"AccountPage.DevelopperSection.title\": \"Zone développeur\",\n  \"AccountPage.DevelopperSection.description\": \"N'hésitez pas à contacter {email} pour obtenir la documentation nécessaire à l'implémentation de l'API.\",\n  \"ProPropertyPage.usersTable.removeUser.alert\": \"Supprimer {user} du bien immobilier ?\",\n  \"ProPropertyPage.usersTable.removeUser.tooltip\": \"Enlever du bien immobilier\",\n  \"ProPropertyPage.usersTable.title\": \"Utilisateurs\",\n  \"ProPropertyPage.proUserAdder.search\": \"Rechercher...\",\n  \"ProPropertyPage.proUserAdder.searchByEmail\": \"Rechercher par email...\",\n  \"ProPropertyPage.proUserAdder.noUserFound\": \"Aucun utilisateur trouvé. Contactez e-Potek pour ajouter ce compte\",\n  \"ProPropertyPage.proUserAdder.notFound\": \"Aucun utilisateur trouvé\",\n  \"ProPropertyPage.proUserAdder.notFoundInOrg\": \"Aucun utilisateur trouvé dans votre organisation\",\n  \"Forms.add\": \"Ajouter\",\n  \"ProPropertyPage.removeCustomer.alert\": \"Êtes-vous sûr de vouloir enlever l'accès à ce bien immobilier à {customerName} ?\",\n  \"ProPropertyPage.customersTable\": \"Acheteurs\",\n  \"PropertyCustomerAdder.title\": \"Ajouter acheteur\",\n  \"PropertyCustomerAdder.description\": \"Ajoute un compte pour cet acheteur, et le notifiera par email que vous l'avez invité sur e-Potek (vous recevrez aussi un email de confirmation). Si c'est un client déjà existant chez e-Potek, cette invitation lui créera un nouveau dossier hypothécaire.\",\n  \"PropertyCustomerAdder.referredUsers\": \"Vos clients existants\",\n  \"PropertyCustomerAdder.referredUsers.tooltip\": \"Sélectionnez un de vos clients existants\",\n  \"Forms.loans\": \"Dossiers\",\n  \"ProCustomerAdder.title\": \"Inviter un client\",\n  \"ProCustomerAdder.description\": \"Ajoute un compte pour ce client, et le notifiera par email (ainsi que son conseiller et le courtier) que vous l'avez invité sur e-Potek. Si c'est un client déjà existant chez e-Potek, vous devez l'inviter à une promotion ou à un bien immobilier.\",\n  \"ProCustomersTable.maxPropertyValue.placeHolder\": \"Pas encore {computed, select, true {partagé} other {calculé}}\",\n  \"ProDashboardPage.PromotionAdder.name\": \"Nom de la promotion\",\n  \"ProDashboardPage.PromotionAdder.type\": \"Type de la promotion\",\n  \"ProDashboardPage.ExternalPropertyAdder\": \"Ajouter bien immo API\",\n  \"Forms.propertyPage.residenceTypeSetter.text\": \"Choisissez le type de résidence pour afficher le bien immobilier.\",\n  \"Forms.propertyIds\": \"Inviter aux biens immobiliers\",\n  \"Forms.promotionIds\": \"Inviter aux promotions\",\n  \"ProDashboardPage.organisationProperties\": \"Biens immobiliers de mon organisation\",\n  \"ProCustomersTable.maxPropertyValue\": \"Capacité d'achat max.\",\n  \"Forms.externalId\": \"ID externe\",\n  \"Forms.externalId.placeholder\": \"123-456-789\",\n  \"Forms.useOpenGraph\": \"Utiliser données Open Graph\",\n  \"Forms.externalUrl\": \"Lien vers site web du bien immobilier\",\n  \"Forms.externalUrl.placeholder\": \"https://www.google.com/mon-bien-immo\",\n  \"Forms.imageUrls\": \"Images du bien immobilier (URLs)\",\n  \"Forms.imageUrls.placeholder\": \"https://www.google.com/mon-bien-immo.jpg\",\n  \"ProOrganisationPageTabs.referredCustomers\": \"Clients référés\",\n  \"OrganisationTabs.referredUsers\": \"Clients référés\",\n  \"WwwTopNavLinks.appLogin\": \"Login Clients\",\n  \"WwwTopNavLinks.proLogin\": \"Login Pro\",\n  \"RevenuesByStatus.revenues\": \"Revenus\",\n  \"RevenuesByStatus.loanCount\": \"Dossiers\",\n  \"ProRevenuesPage.title\": \"Revenus\",\n  \"ProRevenuesPage.loanCount\": \"{value} Dossiers\",\n  \"PropertiesTable.customers\": \"Acheteurs\",\n  \"ProOrganisationPage.empty\": \"Vous ne faites pas partie d'une organisation\",\n  \"ProOrganisationPage.empty.description\": \"Contactez-nous pour en créer une (022 566 01 10). Vous pourrez inviter vos collègues, et partager les informations entre plusieurs utilisateurs.\",\n  \"ProOrganisationPageTabs.users\": \"Utilisateurs\",\n  \"ProOrganisationPageTabs.contacts\": \"Contacts\",\n  \"ProOrganisationPageTabs.commission\": \"Commissions\",\n  \"ProSideNav.revenues\": \"Revenus\",\n  \"ProSideNav.dashboard\": \"Dashboard\",\n  \"ProSideNav.organisation\": \"Organisation\",\n  \"CommissionRatesViewer.fromThreshold\": \"À partir de {value}\",\n  \"CommissionRatesViewer.commissionRatesList\": \"Votre structure de commissionement\",\n  \"CommissionRatesViewer.currentRate\": \"Votre commission d'apporteur d'affaires\",\n  \"CommissionRatesViewer.referredRevenues\": \"Revenus apportés\",\n  \"OrganisationTabs.commission\": \"Commissionnement\",\n  \"Forms.commissionRates\": \"Taux de commissionnement\",\n  \"Forms.commissionRates.rate\": \"Taux\",\n  \"Forms.commissionRates.threshold\": \"Seuil\",\n  \"Forms.commissionRates.threshold.placeholder\": \"0\",\n  \"TopNavDropdown.app\": \"Interface App\",\n  \"Forms.phone\": \"Téléphone\",\n  \"ProCustomersTable.loanName\": \"No.\",\n  \"ProCustomersTable.status\": \"Statut\",\n  \"ProCustomersTable.name\": \"Client\",\n  \"ProCustomersTable.phone\": \"Téléphone\",\n  \"ProCustomersTable.email\": \"Email\",\n  \"ProCustomersTable.createdAt\": \"Ajouté le\",\n  \"ProCustomersTable.referredBy\": \"Référé par\",\n  \"Forms.referredBy\": \"Référé par\",\n  \"ProCustomersTable.relatedTo\": \"Lien\",\n  \"ProCustomersTable.estimatedRevenues\": \"Commission estimée\",\n  \"Forms.referOnly\": \"Référer le client\",\n  \"DashboardRecapProperty.emptyTitle\": \"Pas de bien immobilier\",\n  \"DashboardRecapProperty.emptyDescription\": \"Ajoutez un bien et il apparaîtra ici\",\n  \"DashboardRecapProperty.emptyButton\": \"Biens immobiliers\",\n  \"PropertiesPageAdder.reuseProperty\": \"Réutiliser bien immobilier\",\n  \"Forms.fortuneReturns\": \"Revenus de fortune mobilière\",\n  \"Forms.realEstateIncome\": \"Revenus de fortune immobilière\",\n  \"PDF.borrowersInfos.realEstateIncome\": \"Revenus de fortune immobilière\",\n  \"Forms.otherIncome.comment\": \"Commentaire [ADMIN]\",\n  \"Forms.otherIncome.comment.placeholder\": \"Apparaît dans le PDF\",\n  \"Forms.expenses.comment\": \"Commentaire [ADMIN]\",\n  \"Forms.expenses.comment.placeholder\": \"Apparaît dans le PDF\",\n  \"PDF.title.lenderRules\": \"Votre politique crédit\",\n  \"FinancingOffers.deselect\": \"Déselectionner\",\n  \"PDF.title.structure\": \"Scénario - {name}\",\n  \"PDF.title.property\": \"Bien immobilier\",\n  \"Forms.operator.in\": \"Inclus dans\",\n  \"Forms.birthDate\": \"Date de naissance\",\n  \"FinancingLenders.consideredIncome\": \"Revenus considérés\",\n  \"FinancingLenders.consideredExpenses\": \"Charges considérées\",\n  \"Forms.realEstate.income\": \"Revenus annuels générés\",\n  \"Forms.realEstate.name\": \"Description\",\n  \"Forms.realEstate.name.placeholder\": \"Chalet à Verbier\",\n  \"Recap.realEstateExpenses\": \"Charges immobilières\",\n  \"Recap.realEstateIncome\": \"Revenus immobiliers\",\n  \"Forms.expenses.THEORETICAL_REAL_ESTATE\": \"Charges théoriques immobilières\",\n  \"Forms.hasOwnCompany\": \"Travaillez-vous pour votre propre entreprise?\",\n  \"Forms.ownCompanies\": \"Entreprises\",\n  \"Forms.ownCompanies.description\": \"Description\",\n  \"Forms.ownCompanies.description.placeholder\": \"Nom de votre entreprise\",\n  \"Forms.ownCompanies.ownership\": \"% de parts dans la société\",\n  \"Forms.ownCompanies.netIncome2018\": \"Bénéfice net 2018\",\n  \"Forms.ownCompanies.netIncome2017\": \"Bénéfice net 2017\",\n  \"Forms.ownCompanies.netIncome2016\": \"Bénéfice net 2016\",\n  \"Forms.ownCompanies.netIncome2018.placeholder\": \"CHF 100 000\",\n  \"Forms.ownCompanies.netIncome2017.placeholder\": \"CHF 100 000\",\n  \"Forms.ownCompanies.netIncome2016.placeholder\": \"CHF 100 000\",\n  \"Recap.netSalary\": \"Salaire net\",\n  \"Forms.actions\": \"Actions\",\n  \"ProPropertyPage.addUser.label\": \"Ajouter utilisateur\",\n  \"ProPropertyPage.addUser.title\": \"Ajouter utilisateur\",\n  \"ProPropertyPage.addUser.description\": \"Ajoute un utilisateur PRO sur ce bien immobilier, qui pourra gérer les détails du bien, et consulter la liste des acheteurs. Vous pouvez restreindre ou augmenter les droits d'accès de cet utilisateur par la suite.{verticalSpace}Si la personne que vous souhaitez inviter n'a pas encore un compte PRO sur e-Potek, ajoutez le depuis la page de votre organisation, ou contactez e-Potek s'il fait partie d'une autre entreprise.\",\n  \"ProPropertyPage.ProUsers.name\": \"Nom\",\n  \"ProPropertyPage.ProUsers.email\": \"Email\",\n  \"ProPropertyPage.ProUsers.permissions\": \"Permissions\",\n  \"ProPropertyPage.ProUsers.actions\": \"Actions\",\n  \"Forms.organisationLinks._id\": \"Organisation\",\n  \"Forms.commissionRate\": \"Taux de la commission\",\n  \"Forms.organisationLinks.commissionRate\": \"Taux de la commission\",\n  \"Forms.organisationLinks.paidAt\": \"Date de paiement\",\n  \"Forms.organisationLinks.status\": \"Statut\",\n  \"Forms.status.TO_BE_PAID\": \"À payer\",\n  \"Forms.status.PAID\": \"Payé\",\n  \"Forms.organisationLinks\": \"Organisations\",\n  \"Forms.type.MORTGAGE\": \"Hypothèque\",\n  \"Forms.type.FEE\": \"Honoraires\",\n  \"Forms.status.EXPECTED\": \"Attendu\",\n  \"Forms.status.CLOSED\": \"Reçu\",\n  \"LoanTabs.revenues\": \"Revenus\",\n  \"Forms.amount.placeholder\": \"2000\",\n  \"Forms.amount\": \"Montant\",\n  \"Forms.permissions.displayCustomerNames.forPropertyStatus.FOR_SALE\": \"En vente\",\n  \"Forms.permissions.displayCustomerNames.forPropertyStatus.BOOKED\": \"Réservé\",\n  \"Forms.permissions.displayCustomerNames.forPropertyStatus.SOLD\": \"Vendu\",\n  \"Forms.permissions.displayCustomerNames.forPropertyStatus\": \"Pour les statuts du bien immobilier\",\n  \"Forms.permissions.displayCustomerNames.referredBy.ANY\": \"Tous\",\n  \"Forms.permissions.displayCustomerNames.referredBy.USER\": \"L'utilisateur\",\n  \"Forms.permissions.displayCustomerNames.referredBy.ORGANISATION\": \"Son organisation\",\n  \"Forms.permissions.displayCustomerNames.referredBy\": \"Référrés par\",\n  \"Forms.permissions.canModifyProperty\": \"Peut modifier le bien immobilier\",\n  \"Forms.permissions.canInviteProUsers\": \"Peut inviter des utilisateurs\",\n  \"Forms.permissions.canManagePermissions\": \"Peut gérer les permissions des utilisateurs\",\n  \"files.propertyDocuments\": \"Documents du bien immobilier\",\n  \"files.propertyImages\": \"Images du bien immobilier\",\n  \"ProPropertyPage.manageDocuments\": \"Gérer documents\",\n  \"ProDashboardPage.properties\": \"Biens immobiliers\",\n  \"PropertiesTable.address\": \"Adresse\",\n  \"PropertiesTable.status\": \"Statut\",\n  \"PropertiesTable.value\": \"Prix d'achat\",\n  \"Forms.invitedBy\": \"Invité par\",\n  \"Forms.features.PRO\": \"Pro\",\n  \"PromotionLotLoansTable.assignInvitedBy\": \"Modifier\",\n  \"OrganisationTabs.users\": \"Utilisateurs\",\n  \"Forms.type.REAL_ESTATE_BROKER\": \"Courtier Immobilier\",\n  \"Forms.type.NOTARY_OFFICE\": \"Étude de Notaire\",\n  \"Forms.type.CONSTRUCTION_COMPANY\": \"Entreprise Générale\",\n  \"Forms.type.DEVELOPER\": \"Promoteur\",\n  \"Forms.type.ARCHITECT\": \"Architecte\",\n  \"Forms.type.OTHER\": \"Autre\",\n  \"PromotionLotLoansTable.invitedBy\": \"Invité par\",\n  \"PromotionLotLoansTable.loanName\": \"Dossier\",\n  \"Forms.permissions.canSellLots\": \"Peut vendre des lots\",\n  \"Forms.permissions.canPreBookLots\": \"Peut pré-réserver des lots\",\n  \"Forms.permissions.canBookLots\": \"Peut réserver des lots\",\n  \"Forms.permissions.canInviteCustomers\": \"Peut inviter des clients\",\n  \"Forms.permissions.displayCustomerNames.invitedBy.ANY\": \"Tous\",\n  \"Forms.permissions.displayCustomerNames.invitedBy.USER\": \"Utilisateur\",\n  \"Forms.permissions.displayCustomerNames.invitedBy.ORGANISATION\": \"Organisation\",\n  \"Forms.permissions.displayCustomerNames.invitedBy\": \"Invité par\",\n  \"Forms.permissions.displayCustomerNames.forLotStatus\": \"Statut des lots\",\n  \"Forms.permissions.displayCustomerNames.forLotStatus.AVAILABLE\": \"Disponible\",\n  \"Forms.permissions.displayCustomerNames.forLotStatus.BOOKED\": \"Réservé\",\n  \"Forms.permissions.displayCustomerNames.forLotStatus.SOLD\": \"Vendu\",\n  \"Forms.permissions.displayCustomerNames\": \"Afficher le nom des clients\",\n  \"Forms.permissions.canSeeCustomers\": \"Peut voir les clients\",\n  \"Forms.permissions.canManageDocuments\": \"Peut gérér les documents de la promotion\",\n  \"Forms.permissions.canModifyPromotion\": \"Peut modifier la promotion\",\n  \"Forms.permissions.canRemoveLots\": \"Peut supprimer des lots\",\n  \"Forms.permissions.canModifyLots\": \"Peut modifier des lots\",\n  \"Forms.permissions.canAddLots\": \"Peut ajouter des lots\",\n  \"Forms.permissions.canViewPromotion\": \"Peut voir la promotion\",\n  \"Forms.permissions\": \"Permissions\",\n  \"Forms.bundlesSettings.consultation.invitedBy.ANY\": \"Tous\",\n  \"Forms.bundlesSettings.consultation.invitedBy.USER\": \"Utilisateur\",\n  \"Forms.bundlesSettings.consultation.invitedBy.ORGANISATION\": \"Organisation\",\n  \"Forms.bundlesSettings.consultation.invitedBy\": \"Invité par\",\n  \"Forms.bundlesSettings.consultation.forLotStatus\": \"Statut des lots\",\n  \"Forms.bundlesSettings.consultation.forLotStatus.AVAILABLE\": \"Disponible\",\n  \"Forms.bundlesSettings.consultation.forLotStatus.BOOKED\": \"Réservé\",\n  \"Forms.bundlesSettings.consultation.forLotStatus.SOLD\": \"Vendu\",\n  \"Forms.bundlesSettings.consultation\": \"Consultation - Afficher le nom des clients\",\n  \"Forms.bundlesSettings\": \"Configuration des packages\",\n  \"Forms.bundles.INVITATION\": \"Invitation\",\n  \"Forms.bundles.CONSULTATION\": \"Consultation\",\n  \"Forms.bundles.MODIFICATION\": \"Modification\",\n  \"Forms.bundles.BOOKING\": \"Réservation\",\n  \"Forms.bundles.SELLING\": \"Vente\",\n  \"Forms.bundles\": \"Packages\",\n  \"Forms.useBundles\": \"Utiliser des packages de permissions\",\n  \"AccountPage.DeveloperSection.show\": \"Zone développeur\",\n  \"PercentWithStatus.max\": \"Max: {max}\",\n  \"Forms.netSalary\": \"Revenus nets annuels\",\n  \"Forms.netSalary.placeholder\": \"CHF 80 000\",\n  \"Forms.adminComments\": \"Commentaires pour admins\",\n  \"Forms.adminComments.placeholder\": \"Ne pas soumettre si la lune est pleine\",\n  \"Forms.pdfComments\": \"Commentaires pour PDF\",\n  \"Forms.pdfComments.placeholder\": \"Considéré comme une résidence de luxe\",\n  \"Forms.fortuneReturnsRatio\": \"Taux de rendement sur la fortune mobilière\",\n  \"Forms.theoreticalInterestRate2ndRank\": \"Taux d'intérêt théorique sur 2e rang\",\n  \"Forms.borrowRatio\": \"Taux d'avance\",\n  \"Financing.disabledTooltip\": \"Ce plan financier a été verrouillé par votre conseiller\",\n  \"Forms.customName\": \"Nom personnalisé\",\n  \"Forms.customName.placeholder\": \"Avenue de la gare\",\n  \"MobileWarning.title\": \"e-Potek est optimisée pour une utilisation sur tablette ou ordinateur.\",\n  \"MobileWarning.description\": \"Pour une meilleure expérience utilisateur, nous vous recommandons d'utiliser un écran plus grand.\",\n  \"MobileWarning.buttonLabel\": \"Ignorer\",\n  \"BlogList.readMore\": \"Lire plus\",\n  \"BlogAuthor.by\": \"Par {name}\",\n  \"BlogPage.title\": \"Blog e-Potek\",\n  \"BlogPage.description\": \"Retrouvez les dernières actualités, conseils, et guides en hypothèques.\",\n  \"WwwTopNavLinks.blog\": \"Blog\",\n  \"Forms.enableOffer\": \"Montrer l'offre au client\",\n  \"Forms.option\": \"Option\",\n  \"Forms.option.POSITIVE\": \"Positif\",\n  \"Forms.option.NEGATIVE_NOT_COMPETITIVE\": \"Négatif pas compétitif\",\n  \"Forms.option.NEGATIVE_WITHOUT_FOLLOW_UP\": \"Négatif sans suite\",\n  \"Forms.option.CUSTOM\": \"Personnalisé\",\n  \"Forms.feedbackPreview\": \"Apperçu du feedback\",\n  \"Forms.customFeedback\": \"Feedback\",\n  \"Forms.customFeedback.placeholder\": \"Bonjour Mathilde,\\n\\nJe vous écris concernant votre offre du...\",\n  \"Feedback.NEGATIVE_NOT_COMPETITIVE.outro.singleBorrower\": \"<br/><br/>Nous sommes navrés de n’avoir pas réussi à convaincre {borrower}.\",\n  \"Feedback.NEGATIVE_NOT_COMPETITIVE.outro.twoBorrowers\": \"<br/><br/>Nous sommes navrés de n’avoir pas réussi à convaincre {borrower1} et {borrower2}.\",\n  \"Feedback.NEGATIVE_WITHOUT_FOLLOW_UP.outro.singleBorrower\": \"<br/><br/>Nous nous permettrons de vous solliciter à nouveau lorsque {singleBorrower, select, true {le client aura} other {les clients auront}} trouvé un nouveau projet.\",\n  \"Feedback.NEGATIVE_WITHOUT_FOLLOW_UP.outro.twoBorrowers\": \"<br/><br/>Nous nous permettrons de vous solliciter à nouveau lorsque {singleBorrower, select, true {le client aura} other {les clients auront}} trouvé un nouveau projet.\",\n  \"Feedback.NEGATIVE_WITHOUT_FOLLOW_UP.comments\": \"<br/><br/>Pour les raisons suivantes:<br/>\",\n  \"Feedback.NEGATIVE_WITHOUT_FOLLOW_UP.introduction.singleBorrower\": \"<br/><br/>Nous faisons référence à votre offre du <b>{date}</b> que nous avions présentée à <b>{borrower}</b> concernant le financement de son projet sis <b>{address}</b>.\",\n  \"Feedback.NEGATIVE_WITHOUT_FOLLOW_UP.introduction.twoBorrowers\": \"<br/><br/>Nous faisons référence à votre offre du <b>{date}</b> que nous avions présentée à <b>{borrower1}</b> et <b>{borrower2}</b> concernant le financement de leur projet sis <b>{address}</b>.\",\n  \"Feedback.NEGATIVE_WITHOUT_FOLLOW_UP.body\": \"<br/><br/>Le projet {singleBorrower, select, true {du client} other {des clients}} n’a malheureusement pas abouti.\",\n  \"Feedback.NEGATIVE_NOT_COMPETITIVE.comments\": \"<br/><br/>{singleBorrower, select, true {Il a émis} other {Ils ont émis}} les objections suivantes:<br/>\",\n  \"Feedback.NEGATIVE_NOT_COMPETITIVE.body\": \"<br/><br/>Nous n'avons malheureusement pas réussi à attirer l'attention {singleBorrower, select, true {du client} other {des clients}} sur votre offre.\",\n  \"Feedback.POSITIVE.outro.singleBorrower\": \"<br/><br/>Pourriez-vous me contacter rapidement afin d’orchestrer ensemble les prochaines étapes ?\",\n  \"Feedback.POSITIVE.outro.twoBorrowers\": \"<br/><br/>Pourriez-vous me contacter rapidement afin d’orchestrer ensemble les prochaines étapes ?\",\n  \"Feedback.POSITIVE.body\": \"<br/><br/>{singleBorrower, select, true {Il est ravi et souhaite} other {Ils sont ravis et souhaitent}} poursuivre l'expérience afin d'obtenir une offre ferme de financement.\",\n  \"Feedback.POSITIVE.comments\": \"<br/><br/>Toutefois, nous attirons votre attention sur ce qui suit:<br/>\",\n  \"Feedback.closing\": \"<br/><br/>Cordialement,<br/>{assignee}\",\n  \"Feedback.introduction.singleBorrower\": \"<br/><br/>Nous avons présenté votre offre du <b>{date}</b> à <b>{borrower}</b> concernant le financement de son projet sis <b>{address}</b>.\",\n  \"Feedback.introduction.twoBorrowers\": \"<br/><br/>Nous avons présenté votre offre du <b>{date}</b> à <b>{borrower1}</b> et <b>{borrower2}</b> concernant le financement de leur projet sis <b>{address}</b>.\",\n  \"Feedback.greetings\": \"Bonjour {contactName},\",\n  \"Forms.wantedLoan\": \"Prêt hypothécaire souhaité\",\n  \"Forms.income\": \"Revenus\",\n  \"Forms.operator.===\": \"Égale à\",\n  \"Forms.operator.>\": \"Plus grand que\",\n  \"Forms.operator.>=\": \"Plus grand, ou égale à\",\n  \"Forms.operator.<\": \"Plus petit que\",\n  \"Forms.operator.<=\": \"Plus petit, ou égale à\",\n  \"Forms.rules\": \"Règles\",\n  \"Forms.variable\": \"Variable\",\n  \"Forms.variable.propertyValue\": \"Valeur du bien immobilier\",\n  \"Forms.variable.insideArea\": \"Surface habitable\",\n  \"Forms.variable.income\": \"Revenus\",\n  \"Forms.variable.bankFortune\": \"Cash et Titres\",\n  \"Forms.variable.residenceType\": \"Type de résidence\",\n  \"Forms.variable.canton\": \"Canton du bien immobilier\",\n  \"Forms.variable.borrowRatio\": \"Taux d'avance\",\n  \"Forms.variable.wantedLoan\": \"Prêt hypothécaire\",\n  \"Forms.rules.operator\": \"Maths\",\n  \"Forms.rules.value\": \"Valeur\",\n  \"Forms.allowPledge\": \"Autoriser nantissement LPP\",\n  \"Forms.amortizationYears.placeholder\": \"15\",\n  \"Forms.bonusConsideration\": \"Considération des bonus\",\n  \"Forms.bonusHistoryToConsider\": \"Combien de bonus passés à pondérer\",\n  \"Forms.bonusHistoryToConsider.placeholder\": \"3\",\n  \"Forms.companyIncomeConsideration\": \"Considération des bénéfices d'une société\",\n  \"Forms.companyIncomeHistoryToConsider\": \"Combien de BN de société passés à pondérer\",\n  \"Forms.companyIncomeHistoryToConsider.placeholder\": \"3\",\n  \"Forms.dividendsConsideration\": \"Considération des dividendes\",\n  \"Forms.dividendsHistoryToConsider\": \"Combien de dividendes passés à pondérer\",\n  \"Forms.dividendsHistoryToConsider.placeholder\": \"1\",\n  \"Forms.incomeConsiderationType\": \"Considération des revenus\",\n  \"Forms.incomeConsiderationType.placeholder\": \"Par défaut\",\n  \"Forms.incomeConsiderationType.GROSS\": \"Bruts\",\n  \"Forms.incomeConsiderationType.NET\": \"Nets\",\n  \"Forms.investmentIncomeConsideration\": \"Considération des revenus mobiliers\",\n  \"Forms.expensesSubtractFromIncome\": \"Charges à soustraire aux revenus\",\n  \"Forms.expensesSubtractFromIncome.placeholder\": \"Par défaut\",\n  \"Forms.expensesSubtractFromIncome.ADD_TO_EXPENSES\": \"Ajouter aux charges\",\n  \"Forms.expensesSubtractFromIncome.SUBTRACT_FROM_INCOME\": \"Soustraire aux revenus\",\n  \"Forms.realEstateIncomeConsiderationType\": \"Comment considérer les revenus immobiliers\",\n  \"Forms.realEstateIncomeConsiderationType.placeholder\": \"Par défaut\",\n  \"Forms.realEstateIncomeConsiderationType.ADD_TO_INCOME\": \"Ajouter aux revenus\",\n  \"Forms.realEstateIncomeConsiderationType.SUBTRACT_FROM_EXPENSES\": \"Soustraire aux charges\",\n  \"LenderRulesEditorTitle.all\": \"Tous les dossiers\",\n  \"Forms.comments\": \"Commentaires\",\n  \"Forms.comments.placeholder\": \"Pas de financements au delà de Nyon - N'accepte pas les prêts de tiers\",\n  \"Forms.maxBorrowRatio\": \"Taux d'avance max\",\n  \"Forms.maxIncomeRatio\": \"Taux d'effort max\",\n  \"Forms.maxIncomeRatioTight\": \"Taux d'avance max, cas par cas\",\n  \"Forms.minCash\": \"Taux de fonds propres non-LPP min\",\n  \"Forms.theoreticalInterestRate\": \"Taux d'intérêt théorique\",\n  \"Forms.theoreticalMaintenanceRate\": \"Frais d'entretien théorique\",\n  \"general.and\": \"et\",\n  \"general.or\": \"ou\",\n  \"OrganisationTabs.lenderRules\": \"Critères d'octroi\",\n  \"InterestsChart.interestLibor.average\": \"Libor moyen\",\n  \"InterestsChart.interestLibor.range\": \"Libor étendue\",\n  \"InterestsChart.interest1.average\": \"1 an moyen\",\n  \"InterestsChart.interest1.range\": \"1 an étendue\",\n  \"InterestsChart.interest2.average\": \"2 ans moyen\",\n  \"InterestsChart.interest2.range\": \"2 ans étendue\",\n  \"InterestsChart.interest5.average\": \"5 ans moyen\",\n  \"InterestsChart.interest5.range\": \"5 ans étendue\",\n  \"InterestsChart.interest10.average\": \"10 ans moyen\",\n  \"InterestsChart.interest10.range\": \"10 ans étendue\",\n  \"InterestsChart.interest15.average\": \"15 ans moyen\",\n  \"InterestsChart.interest15.range\": \"15 ans étendue\",\n  \"InterestsChart.interest20.average\": \"20 ans moyen\",\n  \"InterestsChart.interest20.range\": \"20 ans étendue\",\n  \"InterestsChart.interest25.average\": \"25 ans moyen\",\n  \"InterestsChart.interest25.range\": \"25 ans étendue\",\n  \"Forms.tags.LBO\": \"LBO\",\n  \"PDF.projectInfos.property.promotionNameData\": \"Promotion {name}\",\n  \"PDF.projectInfos.property.promotionName\": \"Promotion immobilière\",\n  \"FinancingOffers.showAll\": \"Afficher toutes les offres\",\n  \"NotaryAdder.suggestNotary\": \"Nous pouvons vous suggérer {name} pour le canton de {canton}.\",\n  \"Forms.alreadyHaveNotary\": \"Avez-vous déjà un notaire?\",\n  \"Forms.alreadyHaveNotary.yes\": \"Oui\",\n  \"Forms.alreadyHaveNotary.no\": \"Non, suggérez-m'en un\",\n  \"NotaryAdder.buttonLabel\": \"Ajouter un notaire\",\n  \"general.perYear\": \"/an\",\n  \"Irs10y.name.average\": \"Taux moyen\",\n  \"Irs10y.name.range\": \"Étendue\",\n  \"Forms.tags\": \"Tags\",\n  \"Forms.tags.CH_PREMIUM\": \"CH - Premium\",\n  \"Forms.tags.CH_RETAIL\": \"CH - Retail\",\n  \"Forms.tags.FR_PREMIUM\": \"FR - Premium\",\n  \"Forms.tags.FR_RETAIL\": \"FR - Retail\",\n  \"Forms.tags.YACHTING\": \"Yachting\",\n  \"Forms.tags.HELICOPTERS_LEASING\": \"Leasing hélicoptères\",\n  \"Forms.withCounterparts\": \"Ceci est une offre avec contreparties\",\n  \"SingleContactPage.offers\": \"Offres\",\n  \"Forms.name.placeholder\": \"Jean Dupont\",\n  \"Forms.title.placeholder\": \"Notaire\",\n  \"PromotionPage.promotionLotValueDescription\": \"Veuillez ajouter un prix d'achat - OU - la valeur du terrain + le montant de la construction + la mise en valeur. Si vous ajoutez les 2, le prix d'achat précèdera les autres montants qui auraient été additionnés.\",\n  \"Forms.landValue\": \"Valeur du terrain\",\n  \"Forms.landValue.placeholder\": \"CHF 500 000\",\n  \"Forms.constructionValue\": \"Montant de la construction\",\n  \"Forms.constructionValue.placeholder\": \"CHF 500 000\",\n  \"Forms.additionalMargin\": \"Mise en valeur\",\n  \"Forms.additionalMargin.placeholder\": \"CHF 100 000\",\n  \"Forms.feedback.placeholder\": \"Bonjour M. Dubois, ...\",\n  \"offer.feedback\": \"Feedback\",\n  \"emails.SEND_FEEDBACK_TO_LENDER.TITLE\": \"Feedback client sur l'offre de {organisationName} du {date}\",\n  \"emails.SEND_FEEDBACK_TO_LENDER.SUBJECT\": \"e-Potek - {loanName} - Feedback client sur l'offre du {date}\",\n  \"offer.createdAt\": \"Date d'ajout\",\n  \"FinancingProjectFees.noCanton\": \"Ajoutez un code postal sur ce bien immobilier pour que nous puissions calculer les frais de notaire.\",\n  \"AccountPage.changePassword\": \"Changer mot de passe\",\n  \"errors.sameName.title\": \"Pas de noms identiques\",\n  \"errors.sameName.description\": \"Vous ne pouvez pas ajouter 2 fichiers avec le même nom.\",\n  \"collections.organisations\": \"Organisations\",\n  \"Forms.fees.placeholder\": \"CHF 1 000\",\n  \"Forms.epotekFees.placeholder\": \"CHF 1 000\",\n  \"Forms.conditions.placeholder\": \"Ouvrir un compte courant\",\n  \"Forms.counterparts.placeholder\": \"Ouvrir un compte épargne, contracter une assurance voiture\",\n  \"Forms.thirdPartyFortune.placeholder\": \"CHF 100 000\",\n  \"Forms.otherFortune.value.placeholder\": \"CHF 100 000\",\n  \"Forms.gardenArea.placeholder\": \"50\",\n  \"Forms.investmentRent.placeholder\": \"CHF 2 000\",\n  \"Forms.contacts.name.placeholder\": \"Marie Rochat\",\n  \"Forms.contacts.title.placeholder\": \"Architecte\",\n  \"Forms.contacts.email.placeholder\": \"nom@mail.com\",\n  \"Forms.contacts.email\": \"Email\",\n  \"Forms.contacts.address.email\": \"Email\",\n  \"Forms.emails.address.placeholder\": \"Email\",\n  \"Forms.contacts.phoneNumber.placeholder\": \"079 000 00 00\",\n  \"Forms.phoneNumber.placeholder\": \"079 000 00 00\",\n  \"Forms.phoneNumbers.placeholder\": \"079 000 00 00\",\n  \"Forms.email.placeholder\": \"nom@mail.com\",\n  \"Forms.dueAt\": \"Échéance\",\n  \"Forms.feedback\": \"Feedback\",\n  \"Forms.hasFlatDiscount\": \"Offre avec rabais sur les taux\",\n  \"Forms.flatDiscount\": \"Rabais\",\n  \"Forms.lender\": \"Prêteur\",\n  \"Forms.contact\": \"Contact\",\n  \"Forms.features\": \"Fonctionnalités\",\n  \"Forms.features.LENDER\": \"Prêteur\",\n  \"OrganisationTabs.contacts\": \"Contacts\",\n  \"OrganisationTabs.offers\": \"Offres\",\n  \"Forms.organisationId\": \"Organisation\",\n  \"Forms.contactId\": \"Contact\",\n  \"Forms.status.TO_BE_CONTACTED\": \"À contacter\",\n  \"Forms.status.CONTACTED\": \"Contacté\",\n  \"Forms.status.OFFER_RECEIVED\": \"Offre reçue\",\n  \"Forms.status.TO_EXCLUDE\": \"À exclure\",\n  \"LoanTabs.lenders\": \"Prêteurs\",\n  \"Lenders.insert\": \"Nouveau prêteur\",\n  \"Lenders.status\": \"Statut\",\n  \"Forms.organisationName\": \"Organisation\",\n  \"Forms.organisations\": \"Organisations\",\n  \"Forms.contact.title\": \"Titre\",\n  \"Forms.useSameAddress\": \"Utiliser la même adresse\",\n  \"Forms.emails\": \"Emails\",\n  \"Contacts.insert\": \"Nouveau contact\",\n  \"Contacts.modify\": \"Modifier\",\n  \"Recap.estimatedFees\": \"Frais de notaire estimés\",\n  \"Recap.buyersContract\": \"Acte d'achat de CHF {value}\",\n  \"Recap.mortgageNote\": \"Cédule hypothécaire de CHF {value}\",\n  \"Recap.propertyRegistrationTax\": \"Droits d'enregistrement\",\n  \"Recap.mortgageNoteRegistrationTax\": \"Droits d'enregistrement\",\n  \"Recap.landRegistryPropertyTax\": \"Émoluments du registre foncier\",\n  \"Recap.landRegistryMortgageNoteTax\": \"Émoluments du registre foncier\",\n  \"Recap.notaryIncomeFromProperty\": \"Émoluments du notaire (TVA incluse)\",\n  \"Recap.notaryIncomeFromMortgageNote\": \"Émoluments du notaire (TVA incluse)\",\n  \"Recap.buyersContractAdditionalFees\": \"Frais additionels\",\n  \"Recap.mortgageNoteAdditionalFees\": \"Frais additionels\",\n  \"Recap.propertyConstructionTax\": \"Droits d'enregistrement sur le contrat d'entreprise\",\n  \"Recap.total\": \"Total\",\n  \"Recap.subTotal\": \"Sous-total\",\n  \"Recap.notaryFeesRatio\": \"% du coût du projet\",\n  \"Recap.propertyRegistrationTaxDeductions\": \"Déductions sur les droits d'enregistrement\",\n  \"Recap.mortgageNoteRegistrationTaxDeductions\": \"Déductions sur les droits d'enregistrement\",\n  \"Recap.mortgageNoteDeductions\": \"Déductions sur la cédule\",\n  \"FinancingProjectFees.description\": \"Les frais de notaire indiqués sont calculés pour le canton de {canton}, et sont une estimation qui inclut une marge variable. Parfois il faut encore ajouter des honoraires, et/ou d'autres frais au cas par cas.\",\n  \"FinancingProjectFees.descriptionNoDetail\": \"Ces frais de notaire sont estimés de façon simple pour le canton de {canton}. Ils représentent 5% du prix d'achat, et peuvent être faux pour certains cantons. Nous vous recommandons d'entrer une valeur vous-même.\",\n  \"Forms.canton.AG\": \"Aargau\",\n  \"Forms.canton.AR\": \"Appenzell Ausserrhoden\",\n  \"Forms.canton.AI\": \"Appenzell Innerrhoden\",\n  \"Forms.canton.BL\": \"Basel-Land\",\n  \"Forms.canton.BS\": \"Basel-Stadt\",\n  \"Forms.canton.BE\": \"Bern\",\n  \"Forms.canton.FR\": \"Fribourg\",\n  \"Forms.canton.GE\": \"Genève\",\n  \"Forms.canton.GL\": \"Glarus\",\n  \"Forms.canton.GR\": \"Graubünden\",\n  \"Forms.canton.JU\": \"Jura\",\n  \"Forms.canton.LU\": \"Luzern\",\n  \"Forms.canton.NE\": \"Neuchâtel\",\n  \"Forms.canton.NW\": \"Nidwalden\",\n  \"Forms.canton.OW\": \"Obwalden\",\n  \"Forms.canton.SG\": \"St. Gallen\",\n  \"Forms.canton.SH\": \"Schaffhausen\",\n  \"Forms.canton.SZ\": \"Schwyz\",\n  \"Forms.canton.SO\": \"Solothurn\",\n  \"Forms.canton.TG\": \"Thurgau\",\n  \"Forms.canton.TI\": \"Ticino\",\n  \"Forms.canton.UR\": \"Uri\",\n  \"Forms.canton.VD\": \"Vaud\",\n  \"Forms.canton.VS\": \"Valais\",\n  \"Forms.canton.ZG\": \"Zug\",\n  \"Forms.canton.ZH\": \"Zürich\",\n  \"Forms.canton.LI\": \"Liechtenstein\",\n  \"FinancingMortgageNotesPicker.addMortgageNote\": \"Ajouter cédule\",\n  \"FinancingMortgageNotesPicker.emptyPropertyMortgageNotes\": \"Ajoutez des cédules sur ce bien immobilier pour les faire apparaître ici.\",\n  \"FinancingMortgageNotesPicker.noAvailableMortgageNotes\": \"Ajoutez des cédules du canton de {canton} sur un emprunteur pour pouvoir les choisir ici.\",\n  \"FinancingMortgageNotesPicker.mortgageNoteToCreate\": \"Cédule à constituer\",\n  \"FinancingMortgageNotesPicker.dialogTitle\": \"Cédules hypothécaires\",\n  \"FinancingMortgageNotesPicker.propertyMortgageNotes\": \"Cédules existantes\",\n  \"FinancingMortgageNotesPicker.borrowerMortgageNotes\": \"Autres cédules disponibles\",\n  \"FinancingMortgageNotesPicker.noProperty\": \"Choisissez un bien immobilier sur ce plan financier avant d'ajouter des cédules.\",\n  \"FinancingMortgageNotesPicker.noCanton\": \"Entrez le code postal du bien immobilier pour déterminer le canton duquel vos cédules vont provenir.\",\n  \"FinancingMortgageNotesPicker.empty\": \"Pas de cédules\",\n  \"FinancingMortgageNotesPicker.title\": \"{count, plural, one {Cédule existante} other {Cédules existantes}}\",\n  \"Financing.mortgageNoteIds\": \"Cédules hypothécaires\",\n  \"MortgageNotesForm.borrowerDescription\": \"Ajoutez ici les cédules hypothécaires disponibles, que vous pourriez réutiliser pour votre nouveau projet.\",\n  \"MortgageNotesForm.propertyDescription\": \"Ajoutez ici les cédule(s) existante(s) sur ce bien immobilier.\",\n  \"Forms.rank\": \"Rang\",\n  \"Forms.rank.placeholder\": \"1\",\n  \"Forms.canton\": \"Canton\",\n  \"Forms.type.PAPER\": \"En papier\",\n  \"Forms.type.REGISTRAR\": \"De registre\",\n  \"Forms.category.BEARER\": \"Au porteur\",\n  \"Forms.category.REGISTERED\": \"Nominative\",\n  \"general.mortgageNotes\": \"Cédules hypothécaires\",\n  \"collections.contacts\": \"Contacts\",\n  \"PromotionsTable.createdAt\": \"Créé le\",\n  \"Forms.promotionPage.residenceTypeSetter.text\": \"Choisissez le type de résidence pour afficher les lots.\",\n  \"general.refinancing\": \"Refinancement\",\n  \"Forms.loanTranches.interest1\": \"1 an\",\n  \"Forms.loanTranches.interest10\": \"10 ans\",\n  \"Forms.loanTranches.interest15\": \"15 ans\",\n  \"Forms.loanTranches.interest2\": \"2 ans\",\n  \"Forms.loanTranches.interest20\": \"20 ans\",\n  \"Forms.loanTranches.interest25\": \"25 ans\",\n  \"Forms.loanTranches.interest5\": \"5 ans\",\n  \"Forms.loanTranches.interestLibor\": \"Libor\",\n  \"Forms.previousLoanTranches.rate\": \"Taux\",\n  \"Forms.previousLoanTranches.rate.placeholder\": \"1.50%\",\n  \"Forms.mortgageNotes.rank\": \"Rang\",\n  \"Forms.mortgageNotes.rank.placeholder\": \"1\",\n  \"Forms.mortgageNotes.type\": \"Type\",\n  \"Forms.mortgageNotes.PAPER\": \"Papier\",\n  \"Forms.mortgageNotes.REGISTRAR\": \"De registre\",\n  \"Forms.mortgageNotes.category\": \"Catégorie\",\n  \"Forms.mortgageNotes.BEARER\": \"Au porteur\",\n  \"Forms.mortgageNotes.REGISTERED\": \"Nominative\",\n  \"DashboardProgressInfo.completeRefinancing\": \"Complétez les informations sur votre refinancement\",\n  \"RefinancingPage.pageTitle\": \"Votre hypothèque actuelle\",\n  \"Forms.previousLender\": \"Prêteur actuel\",\n  \"Forms.previousLender.placeholder\": \"BCGE\",\n  \"Forms.previousLoanTranches\": \"Tranches de taux actuelles\",\n  \"Forms.previousLoanTranches.value\": \"Montant de la tranche\",\n  \"Forms.loanTranches.type\": \"Durée\",\n  \"Forms.previousLoanTranches.dueDate\": \"Échéance\",\n  \"Forms.mortgageNotes\": \"Cédules hypothécaires\",\n  \"Forms.mortgageNotes.value\": \"Montant de la cédule\",\n  \"Forms.mortgageNotes.value.placeholder\": \"CHF 100 000\",\n  \"LoanTabs.refinancing\": \"Refinancement\",\n  \"RefinancingPage.title\": \"Refinancement\",\n  \"Forms.purchaseType\": \"Type de prêt\",\n  \"Forms.purchaseType.CONSTRUCTION\": \"Construction\",\n  \"BorrowerReuser.buttonLabel\": \"Réutiliser profil emprunteur\",\n  \"BorrowerReuser.dialogTitle\": \"Réutiliser profil emprunteur\",\n  \"BorrowerReuser.dialogDescription\": \"Les données personnelles, financières et les documents seront tous partagés entre vos différents dossiers.\",\n  \"BorrowerReuser.dialogDescriptionLastLoan\": \"Les données et documents de l'emprunteur actuel seront supprimées.{verticalSpace}Les données personnelles, financières et les documents seront tous partagés entre vos différents dossiers.\",\n  \"Irs10y.rate\": \"Taux\",\n  \"Irs10y.name\": \"IRS 10Y\",\n  \"Irs10y.insert\": \"Ajouter un taux\",\n  \"Forms.rate\": \"Taux\",\n  \"Forms.date\": \"Date\",\n  \"InterestRates.insert\": \"Ajouter des taux\",\n  \"InterestRates.remove\": \"Supprimer\",\n  \"Forms.trend.UP\": \"Hausse\",\n  \"Forms.trend.DOWN\": \"Baisse\",\n  \"Forms.trend.FLAT\": \"Constant\",\n  \"Forms.assignedEmployeeId\": \"Utilisateur assigné\",\n  \"Forms.assignedEmployeeId.placeholder\": \"Non assigné\",\n  \"TopNavDropdown.home\": \"Home\",\n  \"TopNavDropdown.pro\": \"Interface Pro\",\n  \"PromotionPage.lots.solvency\": \"Solvabilité\",\n  \"Forms.solvency\": \"Solvabilité\",\n  \"Forms.solvency.SOLVENT\": \"Solvable\",\n  \"Forms.solvency.INSOLVENT\": \"Non solvable\",\n  \"Forms.solvency.UNDETERMINED\": \"À déterminer\",\n  \"PromotionLotLoansTable.actions\": \"Actions\",\n  \"PDF.borrowersInfo.address\": \"Adresse\",\n  \"PDF.projectInfos.structure.totalIncome\": \"Revenus considérés\",\n  \"PDF.projectInfos.structure.theoreticalCharges\": \"Charges théoriques\",\n  \"PDF.projectInfos.structure.totalTheoreticalCharges\": \"Charges théoriques totales\",\n  \"PDF.borrowersInfos.category.general\": \"Informations générales\",\n  \"PDF.borrowersInfos.category.financialSituation\": \"Situation financière\",\n  \"PDF.borrowersInfos.name\": \"Prénom, Nom\",\n  \"PDF.borrowersInfos.address\": \"Adresse\",\n  \"Forms.title\": \"Titre\",\n  \"files.PROPERTY_FUTURE_WORKS\": \"Travaux envisagés\",\n  \"files.PROPERTY_FUTURE_WORKS.tooltip\": \"Devis et descriptifs des travaux\",\n  \"files.PROPERTY_MINERGIE_CERTIFICATE\": \"Certificat énergétique\",\n  \"files.WITHDRAWAL_JUSTIFICATION\": \"Attestation de retrait\",\n  \"files.WITHDRAWAL_JUSTIFICATION.tooltip\": \"Simulation après prélèvement du capital LPP\",\n  \"files.LEGITIMATION_CARD\": \"Carte de Légitimation\",\n  \"files.LEGITIMATION_CARD.tooltip\": \"Carte de Légitimation à jour\",\n  \"Forms.step\": \"Étape du dossier\",\n  \"files.TAX_STATEMENT\": \"Avis de taxation\",\n  \"files.OWN_FUND_JUSTIFICATION\": \"Justificatifs des fonds propres\",\n  \"files.OWN_FUND_JUSTIFICATION.tooltip\": \"Extrait des comptes justifiant la fortune et les fonds propres, ou document similaire\",\n  \"files.CURRENT_MORTGAGE_INTERESTS_STATEMENT\": \"Dernier décompte d'intérêts hypothécaires\",\n  \"files.OWN_COMPANY_COMMERCIAL_REGISTER\": \"Extrait du registre du commerce\",\n  \"files.PURCHASE_CONTRACT\": \"Projet ou acte de vente\",\n  \"files.PURCHASE_CONTRACT.tooltip\": \"Réservation, promesse ou acte de vente\",\n  \"files.PROPERTY_WORKS_QUOTE\": \"Historique des travaux\",\n  \"files.PROPERTY_WORKS_QUOTE.tooltip\": \"Historique des grandes rénovations du logement\",\n  \"files.INVESTMENT_PROPERTY_RENTAL_STATEMENT\": \"Revenus locatifs\",\n  \"files.INVESTMENT_PROPERTY_RENTAL_STATEMENT.tooltip\": \"Etats locatifs de la régie, à jour, ou baux à loyer en force\",\n  \"files.INVESTEMENT_PROPERTY_SERVICE_CHARGE_SETTLEMENT\": \"Charges immeubles\",\n  \"files.INVESTEMENT_PROPERTY_SERVICE_CHARGE_SETTLEMENT.tooltip\": \"Compte de gestion des 3 dernières années\",\n  \"files.INVESTEMENT_PROPERTY_WORKS_HISTORY\": \"Historique des travaux des 3 dernières années\",\n  \"files.INVESTMENT_PROPERTY_CONDOMINIUM_OWNERSHIP_DIVISION_REGISTER\": \"Cahier de répartition\",\n  \"files.INVESTMENT_PROPERTY_CONDOMINIUM_REGULATION\": \"Règlement\",\n  \"files.SHARE_WORKS\": \"Descriptif des travaux\",\n  \"files.SHARE_BUILDING_PERMIT\": \"Autorisation de construire\",\n  \"files.SHARE_FINANCIAL_PLAN\": \"Plan financier\",\n  \"files.SHARE_GC_QUOTE_BY_BCC\": \"Chiffrage EG par CFC\",\n  \"files.SHARE_GC_CONTRACT\": \"Contrat d'entreprise générale\",\n  \"files.SHARE_PLANS\": \"Plans\",\n  \"files.SHARE_EASEMENTS\": \"Servitudes\",\n  \"files.SHARE_INSURANCE_CERTIFICATE\": \"Police d'assurance\",\n  \"files.OTHER_FORTUNE_JUSTIFICATION\": \"Autres éléments de fortune\",\n  \"files.OTHER_FORTUNE_JUSTIFICATION.tooltip\": \"Documents attestant d'autres éléments de fortune à considérer\",\n  \"files.category.PERSONAL_DOCUMENTS\": \"Documents personnels\",\n  \"files.category.INCOMES_AND_EXPENSES\": \"Charges et revenus\",\n  \"files.category.FORTUNE_AND_OWN_FUNDS\": \"Fortune et fonds propres\",\n  \"files.category.RETIREMENT\": \"Prévoyance\",\n  \"files.category.OTHER\": \"Autre\",\n  \"files.category.HOUSING\": \"Logement\",\n  \"files.category.SHARE\": \"Promotion quote-part\",\n  \"FinancingOffers.conditions\": \"Conditions de l'offre\",\n  \"FinancingOffers.fees\": \"Frais\",\n  \"offer.fees\": \"Frais de dossier\",\n  \"Forms.fees\": \"Frais de dossier\",\n  \"offer.epotekFees\": \"Frais e-Potek\",\n  \"Forms.epotekFees\": \"Frais e-Potek\",\n  \"general.total\": \"Total\",\n  \"Forms.yearlyExpenses.short\": \"Charges d'entretien\",\n  \"offer.averagedInterestRate\": \"Votre taux\",\n  \"FinancingResultErrors.invalidInterestRates\": \"Les tranches de taux choisies n'ont pas de taux disponibles\",\n  \"FinancingOffers.invalidRate\": \"Cette offre n'a pas le taux {rate}\",\n  \"FinancingOffers.interests\": \"Intérêts\",\n  \"offer.amortizationGoal\": \"Objectif d'amortissement / 1er rang\",\n  \"Forms.amortizationGoal\": \"Objectif d'amortissement / 1er rang\",\n  \"offer.amortizationYears\": \"Durée d'amortissement\",\n  \"offer.amortizationYears.placeholder\": \"15\",\n  \"Forms.amortizationYears\": \"Durée d'amortissement\",\n  \"general.choose\": \"Choisir\",\n  \"offer.interests\": \"Taux\",\n  \"Forms.enableOffers\": \"Activer offres\",\n  \"FinancingOffers.amortization\": \"Amortissement\",\n  \"FinancingOffersHeader.empty\": \"Choisissez..\",\n  \"FinancingOffers.title\": \"PRÊTEURS\",\n  \"Financing.offerId\": \"Choix de l'offre\",\n  \"OfferModifier.dialogTitle\": \"Modifier offre\",\n  \"Forms.type.BANK\": \"Banque\",\n  \"Forms.type.INSURANCE\": \"Assurance\",\n  \"Forms.type.PRIVATE_BANK\": \"Banque Privée\",\n  \"LoanTabs.promotion\": \"Promotions\",\n  \"PromotionLotLoansTable.date\": \"Date du choix\",\n  \"Recap.thirdPartyFortune\": \"Prêt de tiers\",\n  \"Recap.netRealEstate\": \"Fortune immobilière nette\",\n  \"PromotionLotLoansTable.email\": \"Email\",\n  \"PromotionPageHeader.partners\": \"Partenaires\",\n  \"PromotionPageHeader.contacts\": \"{multipleContacts, select , true {Personnes} other {Personne}} de contact\",\n  \"Forms.ownFunds\": \"Fonds propres\",\n  \"Forms.structure\": \"Plan financier\",\n  \"Forms.status.SOLD_TO_ME\": \"Vendu à moi\",\n  \"Forms.status.BOOKED_FOR_ME\": \"Réservé pour moi\",\n  \"FinancingPropertyPicker.promotionOption\": \"Promotion: {name}\",\n  \"PromotionOptionDetail.priority\": \"{priority, plural, =0 {0} one {1er} other {#ème}} Choix\",\n  \"Forms.phoneNumbers\": \"Numéros de téléphone\",\n  \"Forms.assignedEmployee\": \"Conseiller e-Potek\",\n  \"Forms.investmentRent\": \"Loyer de rendement\",\n  \"PromotionLotLoansTable.createdAt\": \"Ajouté\",\n  \"PromotionUsersPage.title\": \"Clients de la promotion\",\n  \"PromotionPage.users\": \"Voir tous les clients\",\n  \"ProTopNav.logout\": \"Déconnexion\",\n  \"Forms.verificationStatus\": \"Vérification e-Potek\",\n  \"Forms.verificationStatus.NONE\": \"Pas demandée\",\n  \"Forms.verificationStatus.REQUESTED\": \"Vérification demandée\",\n  \"Forms.verificationStatus.OK\": \"Validé\",\n  \"Forms.verificationStatus.ERROR\": \"Non valide\",\n  \"VerificationRequester.NONE\": \"Demander\",\n  \"VerificationRequester.ERROR\": \"Problème, redemander\",\n  \"VerificationRequester.REQUESTED\": \"En cours...\",\n  \"Forms.contacts\": \"Personnes de contact pour les clients\",\n  \"Forms.city.placeholder\": \"Genève\",\n  \"Forms.isForeignAddress\": \"Addresse à l'étranger\",\n  \"DashboardProgressInfo.chooseLots\": \"Choisissez vos lots dans la promotion\",\n  \"DashboardProgressInfo.verification\": \"Obtenez votre confirmation de financement hypothécaire\",\n  \"emails.INVITE_USER_TO_PROMOTION.BODY\": \"{invitedBy} a identifié que vous êtes intéressé(e) par la promotion {promotionName}, et vous a invité sur e-Potek.{verticalSpace}e-Potek SA a été mandatée pour la gestion de la relation entre la banque qui a mis en place le crédit de construction de la Promotion Immobilière et les Futurs Propriétaires dont vous faites potentiellement partie.{verticalSpace}Votre interface personnelle vous permet d’obtenir en quelques clics une attestation de financement hypothécaire et vous permettra ainsi de valider votre intérêt pour lot de votre choix.{verticalSpace}Je suis votre conseiller en prêt hypothécaire, et je suis là pour vous accompagner tout au long de votre projet. Je répondrai à toutes vos questions relatives au financement de votre projet.{verticalSpace}Vous pouvez me contacter à tout instant en cliquant sur l'icône (ICON) en bas à droite de votre écran.{verticalSpace}Dans un deuxième temps, lorsque le lot de votre choix vous sera attribué je vous accompagnerai pour préparer un dossier de demande de prêt irréprochable afin de mettre toutes les chances d’obtenir les meilleurs conditions de la part de la Banque.{verticalSpace}{assignedEmployeeName}\",\n  \"emails.INVITE_USER_TO_PROMOTION.CTA\": \"Continuer\",\n  \"emails.INVITE_USER_TO_PROMOTION.from\": \"{promotionName}\",\n  \"emails.INVITE_USER_TO_PROMOTION.SUBJECT\": \"Promotion immobilière {promotionName}\",\n  \"emails.INVITE_USER_TO_PROMOTION.TITLE\": \"Nous vous remercions de votre intérêt pour la promotion {promotionName}\",\n  \"emails.INVITE_USER_TO_PROPERTY.BODY\": \"Vous avez été invité par {proName} {multiple, select , true {aux biens immobiliers} other {au bien immobilier}} {address} sur la plateforme e-Potek. Vous pouvez dès à présent vous connecter afin de monter un dossier de recherche de financement hypothécaire, et comparer tous les prêteurs du marché en quelques minutes.\",\n  \"emails.INVITE_USER_TO_PROPERTY.CTA\": \"Se connecter\",\n  \"emails.INVITE_USER_TO_PROPERTY.from\": \"e-Potek\",\n  \"emails.INVITE_USER_TO_PROPERTY.SUBJECT\": \"e-Potek - {address}\",\n  \"emails.INVITE_USER_TO_PROPERTY.TITLE\": \"{address}\",\n  \"Forms.promotionOptions.custom\": \"Souhaits particuliers\",\n  \"Forms.promotionOptions.custom.placeholder\": \"Parkings supplémentaires, lots adjacents, etc.\",\n  \"AppPromotionLotPage.subtitle\": \"Promotion {promotionName} - {value}\",\n  \"collections.promotionOptions\": \"Mes lots\",\n  \"PromotionPage.lots.custom\": \"Souhaits particuliers\",\n  \"PromotionPage.lots.changePriority\": \"Changer priorité\",\n  \"PromotionPage.lots.interested\": \"Intéressé\",\n  \"PromotionPage.lots.priorityOrder\": \"Priorité\",\n  \"PromotionLotLoansTable.priorityOrder\": \"Priorité\",\n  \"PromotionLotAttributer.sold\": \"Vendu\",\n  \"PromotionLotAttributer.book\": \"Réserver\",\n  \"PromotionLotAttributer.sell\": \"Confirmer vente\",\n  \"PromotionLotAttributer.cancelBooking\": \"Annuler réservation\",\n  \"PromotionLotLoansTable.attribute\": \"Attribution\",\n  \"PromotionPage.lots.attributedTo\": \"Attribué à\",\n  \"PromotionLotLoansTable.name\": \"Nom\",\n  \"PromotionLotLoansTable.phone\": \"Téléphone\",\n  \"PromotionLotLoansTable.status\": \"Niveau d'intérêt\",\n  \"PromotionLotLoansTable.custom\": \"Souhaits particuliers\",\n  \"PromotionLotLoansTable.loanProgress\": \"Progrès\",\n  \"PromotionLotLoansTable.solvency\": \"Solvabilité\",\n  \"PromotionLotLoansTable.title\": \"Acheteurs intéressés\",\n  \"PromotionLotPage.manageLot\": \"Lots annexes\",\n  \"PromotionLotPage.modifyPromotionLot\": \"Modifier le lot\",\n  \"general.back\": \"Retour\",\n  \"PromotionPage.managePropertyDocuments.description\": \"Donnez des noms clairs à vos documents avant de les uploader\",\n  \"PromotionPage.managePropertyDocuments\": \"Gérer documents du lot {name}\",\n  \"files.promotionPropertyDocuments\": \"Documents du lot\",\n  \"PromotionPage.lots.documents\": \"Documents\",\n  \"Forms.status.AVAILABLE\": \"Disponible\",\n  \"Forms.status.NOT_AVAILABLE\": \"Non disponible\",\n  \"Forms.status.BOOKED\": \"Réservé\",\n  \"Forms.status.suffix.forMe\": \" pour moi\",\n  \"Forms.status.suffix.toMe\": \" à moi\",\n  \"PromotionLotsManager.empty\": \"Pas de lots annexes\",\n  \"Forms.type\": \"Type\",\n  \"Forms.description\": \"Déscription\",\n  \"Forms.description.placeholder\": \"Ajoutez une déscription...\",\n  \"Forms.type.BASEMENT\": \"Cave\",\n  \"Forms.type.PARKING_MOTORBIKE\": \"Parking moto\",\n  \"Forms.type.PARKING_CAR\": \"Parking\",\n  \"Forms.type.PARKING_IN_A_ROW\": \"Parking en enfilade\",\n  \"Forms.type.PARKING_DISABLED\": \"Parking handicapé\",\n  \"PromotionPage.addProperty\": \"Ajouter lot principal\",\n  \"PromotionPage.addLot\": \"Ajouter lot annexe\",\n  \"Forms.name\": \"Nom\",\n  \"Forms.category\": \"Catégorie\",\n  \"Forms.category.USER\": \"Par l'utilisateur\",\n  \"Forms.category.PRO\": \"Par un pro\",\n  \"Forms.category.PROMOTION\": \"Promotion immobilière\",\n  \"Forms.status.FOR_SALE\": \"En vente\",\n  \"Forms.status.SOLD\": \"Vendu\",\n  \"Forms.type.SHARE\": \"Quote-part terrain\",\n  \"Forms.type.CREDIT\": \"Crédit promoteur\",\n  \"collections.lots\": \"Lots\",\n  \"files.promotionDocuments\": \"Documents de la promotion\",\n  \"files.promotionImage\": \"Photo de couverture\",\n  \"files.logos\": \"Logos\",\n  \"Forms.gardenArea\": \"Surface du jardin en m2\",\n  \"PromotionPage.manageDocuments\": \"Gérer documents\",\n  \"PromotionPage.lots.name\": \"Nom\",\n  \"PromotionPage.lots.status\": \"Statut\",\n  \"PromotionPage.lots.lots\": \"Lots annexes\",\n  \"PromotionPage.lots.loans\": \"Intéressés\",\n  \"PromotionPage.lots.totalValue\": \"Prix\",\n  \"PromotionPage.AdditionalLotsTable\": \"Lots annexes\",\n  \"PromotionPage.AdditionalLotsTable.allocatedToLot\": \"Alloué au lot\",\n  \"PromotionPage.AdditionalLotsTable.hideTable\": \"Masquer les lots annexes\",\n  \"PromotionPage.AdditionalLotsTable.name\": \"Nom\",\n  \"PromotionPage.AdditionalLotsTable.nonAllocated\": \"Non alloué\",\n  \"PromotionPage.AdditionalLotsTable.showTable\": \"Afficher les lots annexes\",\n  \"PromotionPage.AdditionalLotsTable.status\": \"Statut\",\n  \"PromotionPage.AdditionalLotsTable.type\": \"Type\",\n  \"PromotionPage.AdditionalLotsTable.value\": \"Prix\",\n  \"PromotionPage.AdditionalLotsTable.description\": \"Description\",\n  \"PromotionPage.addCustomer\": \"Ajouter un client\",\n  \"PromotionPage.subtitle\": \"Promotion immobilière - {promotionLotCount} lots\",\n  \"Forms.status.PREPARATION\": \"Préparation\",\n  \"ProDashboardPage.title\": \"Dashboard\",\n  \"ProDashboardPage.promotions\": \"Promotions\",\n  \"NewPromotionPage.title\": \"Nouvelle promotion\",\n  \"PromotionsTable.name\": \"Nom\",\n  \"PromotionsTable.status\": \"Statut\",\n  \"PromotionsTable.lots\": \"Lots\",\n  \"PromotionsTable.available\": \"Disponible\",\n  \"PromotionsTable.booked\": \"Réservé\",\n  \"PromotionsTable.sold\": \"Vendu\",\n  \"PromotionsTable.loans\": \"Clients\",\n  \"ProDashboardPage.addProperty\": \"Ajouter bien immobilier\",\n  \"ProDashboardPage.addPromotion\": \"Ajouter promotion immobilière\",\n  \"ProTopNav.dev\": \"Dev\",\n  \"ProTopNav.dashboard\": \"Dashboard\",\n  \"ProTopNav.account\": \"Mon compte\",\n  \"Forms.purchaseType.ACQUISITION\": \"Acquisition\",\n  \"Forms.purchaseType.REFINANCING\": \"Refinancement\",\n  \"LoanSelector.name\": \"Dossier {name}\",\n  \"SinglePropertyPage.noDelete\": \"Vous ne pouvez pas supprimer votre dernier bien immobilier\",\n  \"Forms.status\": \"Statut\",\n  \"Forms.status.TEST\": \"Test\",\n  \"Forms.status.LEAD\": \"Prospect\",\n  \"Forms.status.ONGOING\": \"En cours\",\n  \"Forms.status.PENDING\": \"Pending\",\n  \"Forms.status.CANCELLED\": \"Annulé\",\n  \"Forms.status.CLOSING\": \"Closing\",\n  \"Forms.status.BILLING\": \"Facturation\",\n  \"Forms.status.FINALIZED\": \"Finalisé\",\n  \"Forms.status.FINISHED\": \"Terminé\",\n  \"Forms.status.OPEN\": \"En cours\",\n  \"Forms.status.UNSUCCESSFUL\": \"Sans suite\",\n  \"Recap.promotionLot\": \"Détails du lot\",\n  \"Recap.promotionLot.value\": \"Valeur\",\n  \"Recap.promotionLot.totalValue\": \"Total\",\n  \"FinancingOwnFundsPledgeWarning.description\": \"Attention, vous pouvez nantir CHF {maxPledge} au maximum.\",\n  \"UserAdder.sendEnrollmentEmail\": \"Envoyer email d'invitation immédiatement\",\n  \"UserAdder.assignedEmployeeId\": \"Assigner à\",\n  \"AdminLayout.title\": \"Admin\",\n  \"DashboardRecapFinance.emptyButton\": \"Plans financiers\",\n  \"FinancingCurrentOwnFunds.error\": \"Pas assez de {type}\",\n  \"FinancingOwnFundsPickerForm.remaining\": \"Restant: CHF {value}\",\n  \"Financing.ownFundsCompleter\": \"{current} / {required} alloués\",\n  \"Financing.ownFundsCompleterButton\": \"Ajuster\",\n  \"FinancingOwnFundsActions.modify\": \"Oui, modifier\",\n  \"FinancingOwnFundsPickerForm.warning\": \"Êtes-vous certain de disposer de CHF {value} en {type} sur {name}?\",\n  \"FinancingOwnFundsPickerForm.type\": \"Source\",\n  \"FinancingOwnFundsPickerForm.borrower\": \"Emprunteur\",\n  \"FinancingOwnFundsPickerForm.value\": \"Montant\",\n  \"FinancingOwnFundsPickerForm.usageType\": \"Type d'utilisation\",\n  \"Forms.ownFundsUsageType.WITHDRAW\": \"Retrait\",\n  \"Forms.ownFundsUsageType.PLEDGE\": \"Nantissement\",\n  \"Forms.thirdPartyFortune\": \"Prêt de tiers\",\n  \"FinancingOwnFundsDialog.title\": \"Allouer des fonds propres\",\n  \"Financing.ownFundsAdder\": \"Ajouter fonds propres\",\n  \"Financing.ownFundsPicker\": \"Fonds propres alloués\",\n  \"LoanTabs.dev\": \"Dev\",\n  \"AppWidget1Page.title\": \"Calculateur\",\n  \"DashboardProgressInfo.uploadDocuments\": \"Ajoutez vos documents\",\n  \"LoanChecklist.missingFields\": \"Informations manquantes\",\n  \"LoanChecklist.missingDocuments\": \"Documents manquants\",\n  \"LoanChecklist.done\": \"Nous avons tout ce qu'il faut\",\n  \"LoanChecklist.dialogButton\": \"Voir la checklist\",\n  \"Financing.wantedLoanPercent\": \"Prêt hypothécaire (%)\",\n  \"FinancingRefresher.label\": \"Rafraîchir\",\n  \"FinancingResult.cost\": \"Charges du projet\",\n  \"FinancingPropertyPicker.placeholder\": \"Bien immobilier sans addresse\",\n  \"FileTabs.loanDocuments\": \"Autres documents\",\n  \"WwwTopNavLinks.login\": \"Se connecter\",\n  \"files.OTHER\": \"Autres documents\",\n  \"BorrowersSummary.borrower\": \"Emprunteur {index}\",\n  \"Maps.addressNotFound\": \"Cette adresse n'a pas pu être trouvée\",\n  \"FinancingResultErrors.noMortgageLoan\": \"Ajoutez un prêt hypothécaire\",\n  \"FinancingResultErrors.missingOwnFunds\": \"Allouez plus de fonds propres à ce plan financier\",\n  \"FinancingResultErrors.tooMuchOwnFunds\": \"Allouez moins de fonds propres à ce plan financier\",\n  \"FinancingResultErrors.highIncomeRatio\": \"Vos revenus ne vous permettent pas de tenir les charges de ce plan financier\",\n  \"FinancingResultErrors.missingCash\": \"Vous devez allouer au moins 10% de cash en plus des frais de notaire à votre projet\",\n  \"ReturnToDashboard.label\": \"Retourner au Tableau de Bord\",\n  \"LoanSelector.empty\": \"Nouveau projet\",\n  \"Financing.OwnFundsLabel.available\": \"Disponible:\",\n  \"SingleLoanPageHeader.title\": \"{name} - Emprunt de {value}\",\n  \"FinancingSection.expandHelper\": \"Afficher les détails\",\n  \"UploaderArray.empty\": \"Pas encore de documents dans cette catégorie. Ajoutez-en et ils apparaîtront ici.\",\n  \"DashboardProgressInfo.completeFirstStructure\": \"Complétez votre premier plan financier\",\n  \"DashboardProgressInfo.addProperty\": \"Ajoutez votre premier bien immobilier\",\n  \"DashboardProgressInfo.completeProperty\": \"Complétez les informations de votre bien immobilier\",\n  \"DashboardProgressInfo.doAnExpertise\": \"Expertisez votre bien immobilier\",\n  \"DashboardProgressInfo.completeBorrowers\": \"Complétez les détails des emprunteurs\",\n  \"DashboardProgressInfo.chooseOffer\": \"Choisissez votre prêteur\",\n  \"DashboardProgressInfo.createSecondStructure\": \"Ajoutez un 2e plan financier pour comparer vos possibilités\",\n  \"DashboardProgressInfo.callEpotek\": \"Contactez votre conseiller pour connaitre les prochaines étapes\",\n  \"AboutPageOffice.description\": \"Basés à Genève, nous travaillons tous les jours pour transformer le marché de l'hypothèque.\",\n  \"AboutPageOffice.title\": \"Nos bureaux\",\n  \"AboutPagePart1.description\": \"Les conseillers d’e-Potek sont des professionnels d’expérience, en phase avec les évolutions d’un marché en permanente évolution. L'équipe est composée d’experts de confiance sur les sujets du financement hypothécaire, de la prévoyance et de la fiscalité immobilière.\",\n  \"AboutPagePart1.title\": \"À propos d'e-Potek\",\n  \"AboutPagePart2.description1\": \"Face aux nombreuses options proposées sur le marché de l’hypothèque, comparer différents prêteurs et produits de financement hypothécaire peut devenir un processus fastidieux.{verticalSpace}Il est ainsi facile de se perdre dans la jungle hypothécaire face à des offres aux conditions de taux hypothécaires apparaissant très avantageuses mais malheureusement valables uniquement sous certaines conditions exceptionnelles et donc applicables qu’à une faible minorité du marché.\",\n  \"AboutPagePart2.description2\": \"Soyez accompagné et conseillé par des experts en financement hypothécaire et identifiez facilement les meilleures solutions de financement du marché pour vos projets d’achats immobiliers.{verticalSpace}Profitez d’un outil qu’e-Potek a créé sur-mesure, proposant des solutions rapides et impartiales, vous permettant de structurer de manière efficace vos projets de recherche de financement.\",\n  \"AboutPagePart2.title\": \"Méthodes\",\n  \"AboutPagePart2.title1\": \"Classique\",\n  \"AboutPagePart2.title2\": \"e-Potek\",\n  \"AboutPagePart3.description1\": \"e-Potek SA est une société soumise aux règles imposées par la FINMA et composée d’experts de confiance sur les sujets du financement hypothécaire, de la prévoyance et de la fiscalité immobilière.\",\n  \"AboutPagePart3.description2\": \"Disposez de conseils avisés concernant l’optimisation fiscale, les choix relatifs à vos fonds propres, l’expertise de logements ainsi que toutes informations relatives au domaine du financement hypothécaire.\",\n  \"AboutPagePart3.title1\": \"Un acteur crédible\",\n  \"AboutPagePart3.title2\": \"Un service de premier ordre\",\n  \"AboutPagePart4.description0\": \"Evitez les pièges et soyez au courant des réalités du marché hypothécaire en recevant des conditions de financement sur-mesure et classées par ordre de pertinence.\",\n  \"AboutPagePart4.description1\": \"e-Potek facilite l’accès aux financements hypothécaires et à leur traitement. La soumission de documents et l’interaction avec le prêteur deviennent plus simples et agréables.\",\n  \"AboutPagePart4.description2\": \"Les conseillers e-Potek vérifient l’intégralité des dossiers et documents justificatifs afin qu’ils soient conformes et personnalisés aux directives internes de chaque prêteur.\",\n  \"AboutPagePart4.title0\": \"Des données fiables\",\n  \"AboutPagePart4.title1\": \"Un usage facilité\",\n  \"AboutPagePart4.title2\": \"Des dossiers irréprochables\",\n  \"AboutPageTeam.title\": \"Nos experts vous accompagnent\",\n  \"AboutPageTeamMember.emailTooltip\": \"Envoyer un email à {name}\",\n  \"AboutPageTeamMember.phoneTooltip\": \"Appeler {name}\",\n  \"AboutPageTeamRecruiting.hoverText\": \"Voir nos postes ouverts\",\n  \"AboutPageTeamRecruiting.subtitle\": \"e-Potek recrute\",\n  \"AboutPageTeamRecruiting.title\": \"Vous !\",\n  \"AcceptClosingModal.description\": \"Toute l'équipe d'e-Potek vous félicite pour le décaissement de votre prêt hypothécaire, et d'être enfin propriétaire de votre bien immobilier.{verticalSpace}Vous pouvez maintenant utiliser votre tableau de bord e-Potek pour garder un oeil sur votre prochaine échéance de paiement, et consulter les taux lorsque le refinancement s'approchera.\",\n  \"AcceptClosingModal.description2\": \"Merci d'avoir utilisé e-Potek, voici votre code pour nous recommander auprès de vos proches, et empocher jusqu'a CHF 1 000 pour une affaire conclue.\",\n  \"AcceptClosingModal.title\": \"Félicitations!\",\n  \"AccountPage.change\": \"Changer\",\n  \"AccountPage.email\": \"Adresse email\",\n  \"AccountPage.language\": \"Langue\",\n  \"AccountPage.notifications.email\": \"Par email\",\n  \"AccountPage.notifications.sms\": \"Par SMS\",\n  \"AccountPage.notifications\": \"Recevoir des notifications quand mon dossier avance\",\n  \"AccountPage.password\": \"Mot de passe\",\n  \"AccountPage.phone\": \"Téléphone\",\n  \"AccountPage.title\": \"Mon Compte\",\n  \"ActionsTable.actionName\": \"À faire\",\n  \"ActionsTable.comment\": \"Commentaire\",\n  \"ActionsTable.date\": \"Date\",\n  \"ActionsTable.loanName\": \"Projet\",\n  \"AddLoanPage.logIntoOtherAccount\": \"Utiliser un autre compte\",\n  \"AdminDashboardPage.tasks\": \"Tâches\",\n  \"AdminFilesTab.empty\": \"Vos documents officiels e-Potek apparaîtront ici.\",\n  \"AdminNote.label\": \"Note d'admin\",\n  \"AdminNote.placeholder\": \"Clique pour ajouter une note d'admin...\",\n  \"AdvancedOptions.borrowRatio\": \"Endettement voulu\",\n  \"AdminPromotionPage.addUser\": \"Ajouter\",\n  \"AdminPromotionPage.addUser.label\": \"Ajouter un utilisateur\",\n  \"AdminPromotionPage.addUser.title\": \"Ajouter un utilisateur\",\n  \"AdminPromotionPage.noUserFound\": \"Aucun utilisateur trouvé\",\n  \"AdminPromotionPage.PromotionUsers\": \"Utilisateurs\",\n  \"AdminPromotionPage.PromotionUsers.name\": \"Nom\",\n  \"AdminPromotionPage.PromotionUsers.email\": \"Email\",\n  \"AdminPromotionPage.PromotionUsers.permissions\": \"Permissions\",\n  \"AdminPromotionPage.PromotionUsers.actions\": \"Actions\",\n  \"AdminPromotionPage.searchUser\": \"Rechercher un utilisateur\",\n  \"AllUsersTable.actions\": \"Actions\",\n  \"AllUsersTable.assignedTo\": \"Assigné à\",\n  \"AllUsersTable.createdAt\": \"Créé le\",\n  \"AllUsersTable.email\": \"Email\",\n  \"AllUsersTable.roles\": \"Rôles\",\n  \"AmortizationChart.amortizationSeries\": \"Amortissement mensuel\",\n  \"AmortizationChart.debtSeries\": \"Dette\",\n  \"AmortizationChart.fortuneSeries\": \"Fonds Propres\",\n  \"AmortizationChart.paymentSeries\": \"Paiement mensuel\",\n  \"AmortizationChart.refinancingFlag\": \"Refinancement\",\n  \"AmortizationChart.title\": \"Les vingt années à venir\",\n  \"AmortizationChart.yAxis1\": \"Dette et fonds propres\",\n  \"AmortizationChart.yAxis2\": \"Paiements mensuels\",\n  \"AmortizationTool.catastrophy.title\": \"Scénario catastrophe\",\n  \"AmortizationTool.futureRate\": \"Refinancement dans 10 ans\",\n  \"AmortizationTool.initialRate\": \"Taux initial à 10 ans\",\n  \"AmortizationTool.lower.title\": \"Baisse des taux\",\n  \"AmortizationTool.rate\": \"Taux à 10 ans: {rate, number, percentage}\",\n  \"AmortizationTool.rise.title\": \"Augmentation des taux\",\n  \"AmortizationTool.stable.title\": \"Taux stables\",\n  \"AmortizingPicker.description\": \"Choisir comment amortir son bien immobilier peut avoir des conséquences très importantes pour votre futur. N'hésitez pas à nous appeler pour prendre cette décision en toute confiance.\",\n  \"AmortizingPicker.title\": \"Stratégie d'amortissement\",\n  \"AmortizingSummary.direct.description\": \"Vous avez choisi l'amortissement direct.\",\n  \"AmortizingSummary.indirect.description\": \"Vous avez choisi l'amortissement indirect.\",\n  \"AppPage.title\": \"Mes dossiers\",\n  \"AppPage.begin\": \"Commencer\",\n  \"AppPage.loan.done\": \"Prêt Hypothécaire\",\n  \"AppPage.loan\": \"Demande de prêt\",\n  \"AppPage.newLoan\": \"Nouvelle demande de prêt\",\n  \"AppPage.noName\": \"Sans titre\",\n  \"AppPage.properties\": \"{count, plural, =0 {Pas de propriétés} one {Une propriété} other {# propriétés}}\",\n  \"AppPage.step\": \"{step, plural, one {1ère Étape} other {#ème Étape}}\",\n  \"ArrayInput.add\": \"Ajouter\",\n  \"AssignAdminDropdown.assignAdmin\": \"Assigner un conseiller\",\n  \"DashboardUnverified.emailVerificationSent\": \"Vérification envoyée à {email}!\",\n  \"BorrowerAdder.label\": \"+ Ajouter 2e emprunteur\",\n  \"BorrowerAddPartner.label\": \"Ajouter votre partenaire comme 2e emprunteur\",\n  \"BorrowerHeader.age\": \"{value} ans\",\n  \"BorrowerHeader.firstName\": \"Prénom\",\n  \"BorrowerHeader.lastName\": \"Nom\",\n  \"BorrowerHeader.title\": \"Emprunteur {index}\",\n  \"BorrowerIssues.itemTitle\": \"Emprunteur {index}\",\n  \"BorrowersPage.borrowers\": \"Emprunteurs\",\n  \"BorrowersPage.files\": \"Documents\",\n  \"BorrowersPage.finance\": \"Finances\",\n  \"BorrowersPage.personal\": \"Informations personnelles\",\n  \"BorrowersPage.title\": \"Emprunteurs\",\n  \"BorrowerRemover.button\": \"Supprimer\",\n  \"BorrowersTable.createdAt\": \"Créé le\",\n  \"BorrowersTable.name\": \"Nom\",\n  \"BorrowersTable.updatedAt\": \"Modifié le\",\n  \"CareersPage.description1\": \"e-Potek est en forte croissance et recrute souvent de nouveaux talents au sein de nos différents départements.\",\n  \"CareersPage.description2\": \"Nous faisons le plus possible pour créer et maintenir un environnement de travail agréable, avec beaucoup d'opportunités et de responsabilités pour ceux qui souhaitent les prendre.\",\n  \"CareersPage.title\": \"Travailler chez e-Potek\",\n  \"CareersPageJob.hoverText\": \"Voir l'annonce\",\n  \"CareersPageList.admin\": \"Opérations\",\n  \"CareersPageList.advisory\": \"Conseil\",\n  \"CareersPageList.design\": \"Design\",\n  \"CareersPageList.emptyDepartment\": \"Pas de postes ouverts dans ce département pour l'instant. Réessayez demain, ou envoyez nous une candidature spontanée en expliquant ce que vous pensez pouvoir apporter à notre entreprise, et pourquoi nous en aurions besoin !\",\n  \"CareersPageList.engineering\": \"Ingénierie\",\n  \"ClosingPage.CTA\": \"Demander le décaissement\",\n  \"ClosingPage.description\": \"Lorsque vous avez soumis les derniers documents, vous pourrez demander à votre prêteur de décaisser le prêt.\",\n  \"ClosingPage.empty\": \"Nous sommes en train de préparer les dernières étapes pour que vous puissiez décaisser votre prêt hypothécaire. Revenez bientôt!\",\n  \"ClosingPage.loading\": \"Vous serez notifié par e-mail lorsque votre prêteur est disposé au décaissement.\",\n  \"ClosingPage.progress\": \"Progrès: {value, number, percent}\",\n  \"ClosingPage.title\": \"Closing\",\n  \"collections.borrowers\": \"Emprunteurs\",\n  \"collections.loans\": \"Hypothèques\",\n  \"collections.offers\": \"Offres\",\n  \"collections.promotions\": \"Promotions\",\n  \"collections.properties\": \"Biens immobiliers\",\n  \"collections.tasks\": \"Tâches\",\n  \"collections.users\": \"Utilisateurs\",\n  \"ConditionsButton.counterpart\": \"Contreparties pour les meilleurs taux\",\n  \"ConditionsButton.counterparts\": \"Contreparties pour les meilleurs taux\",\n  \"ConditionsButton.CTA\": \"Ok\",\n  \"ConditionsButton.mandatory\": \"Conditions obligatoires\",\n  \"ConditionsButton.title\": \"Conditions\",\n  \"ConditionsPage.title\": \"Conditions générales d'utilisation\",\n  \"ConfirmMethod.dialogTitle\": \"Êtes-vous sûr ?\",\n  \"ConfirmMethod.dialogMessage\": \"Tapez {keyword} pour valider.\",\n  \"ConfirmMethod.buttonCancel\": \"Annuler\",\n  \"ConfirmMethod.buttonConfirm\": \"Confirmer\",\n  \"ContactButton.byEmail\": \"Par email\",\n  \"ContactButton.byPhone\": \"Par téléphone\",\n  \"ContactButton.yourAdvisor\": \"{gender, select, F {Votre conseillère} other {Votre conseiller}}\",\n  \"ContactPage.address\": \"Adresse\",\n  \"ContactPage.description\": \"Un de nos spécialistes hypothécaires va vous contacter rapidement pour échanger plus amplement sur votre projet ainsi que pour orchestrer les prochaines étapes.{verticalSpace}Il/elle vous donnera accès à votre interface e-Potek où vous pourrez avancer sur votre demande de prêt ensemble.\",\n  \"ContactPage.email\": \"Adresse email\",\n  \"ContactPage.phone\": \"Téléphone\",\n  \"ContactPage.title\": \"Merci de votre intérêt\",\n  \"ContactUsForm.details.placeholder\": \"N’hésitez pas à nous transmettre vos disponibilités ou tout autre message qui nous permettraient d'anticiper certaines urgences\",\n  \"ContactUsForm.details\": \"Autres détails\",\n  \"ContactUsForm.email.placeholder\": \"mon-nom@probablement-gmail.com\",\n  \"ContactUsForm.email\": \"Adresse email\",\n  \"ContactUsForm.name.placeholder\": \"Marie Rochat\",\n  \"ContactUsForm.name\": \"Prénom et Nom\",\n  \"ContactUsForm.phoneNumber.placeholder\": \"078 000 00 00\",\n  \"ContactUsForm.phoneNumber\": \"Numéro de téléphone\",\n  \"ContactUsFormSuccess.text\": \"C'est dans la boite !\",\n  \"ContractDownloader.ready\": \"Votre contrat est prêt, vous pouvez le télécharger dès maintenant.\",\n  \"ContractDownloader.waiting\": \"Votre contrat arrivera ici.\",\n  \"ContractPage.CTA\": \"Demander le contrat\",\n  \"ContractPage.description\": \"Pour obtenir un contrat officiel de prêt, votre prêteur a encore besoin de quelques documents. Dès que vous avez soumis tous les documents nécessaires, vous pourrez demander le contrat, ce qui prendra quelques jours à votre prêteur.\",\n  \"ContractPage.loading\": \"Vous serez notifié par e-mail lorsque votre contrat est prêt.\",\n  \"ContractPage.progress\": \"Progrès: {value, number, percent}\",\n  \"UserAdder.buttonLabel\": \"Créer un compte utilisateur\",\n  \"UserAdder.dialogDescription\": \"Entrez l'adresse email du compte. Un email sera envoyé à cette adresse pour qu'il se connecte et choisisse son mot de passe.\",\n  \"UserAdder.dialogTitle\": \"Créer un compte\",\n  \"UserAdder.email\": \"Adresse email\",\n  \"UserAdder.firstName\": \"Prenom\",\n  \"UserAdder.lastName\": \"Nom\",\n  \"UserAdder.phoneNumbers\": \"Numéro de téléphone\",\n  \"CustomFieldAdder.add\": \"Ajouter\",\n  \"CustomFieldAdder.attic\": \"Avec grenier\",\n  \"CustomFieldAdder.balcony\": \"Avec balcon\",\n  \"CustomFieldAdder.basement\": \"Avec cave\",\n  \"CustomFieldAdder.biscuitHouse\": \"Murs en pain d'épices\",\n  \"CustomFieldAdder.boolean\": \"Oui / Non\",\n  \"CustomFieldAdder.chimney\": \"Avec cheminée\",\n  \"CustomFieldAdder.constructionYear\": \"Année de construction\",\n  \"CustomFieldAdder.contact\": \"Contact\",\n  \"CustomFieldAdder.date\": \"Date\",\n  \"CustomFieldAdder.dishwasher\": \"Avec lave-vaisselle\",\n  \"CustomFieldAdder.extensionAllowed\": \"Aggrandissement possible\",\n  \"CustomFieldAdder.facing\": \"Orientation\",\n  \"CustomFieldAdder.floor\": \"Étage dans l'immeuble\",\n  \"CustomFieldAdder.floors\": \"Nombre d'Étages\",\n  \"CustomFieldAdder.garage\": \"Avec garage\",\n  \"CustomFieldAdder.garden\": \"Avec jardin\",\n  \"CustomFieldAdder.groundFloor\": \"Rez-de-chaussée\",\n  \"CustomFieldAdder.haunted\": \"Maison hantée\",\n  \"CustomFieldAdder.internetSpeed\": \"Débit internet max\",\n  \"CustomFieldAdder.landArea\": \"Surface du terrain\",\n  \"CustomFieldAdder.landingRunway\": \"Avec piste d'atterissage\",\n  \"CustomFieldAdder.money\": \"Montant en CHF\",\n  \"CustomFieldAdder.name\": \"Nom du champ\",\n  \"CustomFieldAdder.number\": \"Nombre\",\n  \"CustomFieldAdder.parkingSpots\": \"Places de parc\",\n  \"CustomFieldAdder.percent\": \"Pourcentage\",\n  \"CustomFieldAdder.pool\": \"Avec piscine\",\n  \"CustomFieldAdder.renovationRequired\": \"Rénovations nécessaires\",\n  \"CustomFieldAdder.richNeighbours\": \"Voisins milliardaires\",\n  \"CustomFieldAdder.rooms\": \"Nombre de pièces\",\n  \"CustomFieldAdder.summerTemperature\": \"Température en été\",\n  \"CustomFieldAdder.surface\": \"Surface habitable\",\n  \"CustomFieldAdder.terrace\": \"Avec terrasse\",\n  \"CustomFieldAdder.text\": \"Texte\",\n  \"CustomFieldAdder.title\": \"Ajouter un champ personnel\",\n  \"CustomFieldAdder.type\": \"Type de valeur\",\n  \"CustomFieldAdder.washingMachine\": \"Avec machine à laver\",\n  \"DashboardBorrowers.age\": \"{value} ans\",\n  \"DashboardBorrowers.itemTitle\": \"Emprunteur {index}\",\n  \"DashboardBorrowers.title\": \"{count, plural, one {Emprunteur} other {Emprunteurs}}\",\n  \"DashboardCharts.expensesTitle\": \"Coût Mensuel\",\n  \"DashboardDownload.contract\": \"Votre contrat\",\n  \"DashboardDownload.title\": \"Documents\",\n  \"DashboardInfo.title\": \"INFORMATIONS PRATIQUES\",\n  \"DashboardInfoInterests.title\": \" Nos taux d'intérêt\",\n  \"DashboardInfoTeam.title\": \"Votre équipe e-Potek\",\n  \"DashboardInfoTeamAdder.label\": \"Ajouter un contact personnel\",\n  \"DashboardInfoTeamExternal.title\": \"Autres contacts\",\n  \"DashboardInfoTeamForm.dialogDescription\": \"Vous pourrez le retrouver sur votre dashboard e-Potek en tout temps.\",\n  \"DashboardInfoTeamForm.dialogTitle\": \"Ajoutez un contact\",\n  \"DashboardInfoTeamForm.email\": \"E-mail\",\n  \"DashboardInfoTeamForm.name\": \"Nom complet\",\n  \"DashboardInfoTeamForm.phoneNumber\": \"Téléphone\",\n  \"DashboardInfoTeamForm.title\": \"Fonction\",\n  \"DashboardInfoTeamMember.emailTooltip\": \"Envoyer email à {email}\",\n  \"DashboardInfoTeamMember.phoneTooltip\": \"Appeler {phoneNumber}\",\n  \"DashboardLastSteps.closing\": \"Décaisser le prêt\",\n  \"DashboardLastSteps.contract\": \"Obtenir le contrat\",\n  \"DashboardLastSteps.progress\": \"Progrès: {value}/{total}\",\n  \"DashboardLastSteps.subtitle\": \"Date de Décaissement\",\n  \"DashboardLastSteps.title\": \"Date de Décaissement\",\n  \"DashboardMenu.financePage\": \"Plus de détails\",\n  \"DashboardMenu.showDetail\": \"Afficher les détails\",\n  \"DashboardMenu.showOverview\": \"Afficher le résumé\",\n  \"DashboardOffer.title\": \"Offre retenue\",\n  \"DashboardPage.title\": \"Tableau de Bord\",\n  \"DashboardPayments.lastDate\": \"Dernier paiement\",\n  \"DashboardPayments.title\": \"Prochain paiement\",\n  \"DashboardProgressBar.title\": \"Progression\",\n  \"DashboardProperty.title\": \"Bien immobilier\",\n  \"DashboardRecap.detail\": \"Détail\",\n  \"DashboardRecap.overview\": \"Résumé\",\n  \"DashboardRecap.title\": \"EN RÉSUMÉ\",\n  \"DashboardRecapChart.title\": \"Charges mensuelles\",\n  \"DashboardRecapCost.sumTitle\": \"Coût total\",\n  \"DashboardRecapFinance.emptyTitle\": \"Pas encore de plan financier\",\n  \"DashboardRecapFinance.emptyDescription\": \"Ajoutez-en un et il apparaîtra ici\",\n  \"DashboardRecapFinance.title\": \"Plan financier\",\n  \"DashboardRecapFinancing.sumTitle\": \"Financement total\",\n  \"DashboardRecapProperty.empty\": \"Ajoutez l'adresse complète de votre bien pour afficher ce récapitulatif\",\n  \"DashboardStatus.step\": \"{step, plural, one {1ère étape} =2 {2ème étape} =3 {3ème étape} =4 {4ème étape}}\",\n  \"DashboardStatus.title\": \"Statut de votre demande\",\n  \"DashboardStatus.verification\": \"Vérification en cours...\",\n  \"DashboardUnverified.CTA\": \"Renvoyer l'email\",\n  \"DashboardUnverified.description\": \"Jetez un oeil à votre boite email pour un message de notre part. Rien reçu ?\",\n  \"DashboardUnverified.title\": \"Vous n'avez pas encore vérifié votre adresse email.\",\n  \"DateInput.placeholder\": \"Choisissez une date\",\n  \"DefaultOptions.fortune\": \"Fonds propres\",\n  \"DefaultOptions.income\": \"Revenus annuels bruts\",\n  \"DefaultOptions.interestRate\": \"Taux d'intérêt\",\n  \"DescriptionItemText.application.description\": \"Assurez vous d’optimiser votre recherche de prêt hypothécaire avec l'aide de nos conseillers\",\n  \"DescriptionItemText.application.title\": \"Structurez votre dossier\",\n  \"DescriptionItemText.auction.description\": \"Placez votre dossier aux enchères, de manière anonyme, auprès de tous les prêteurs\",\n  \"DescriptionItemText.auction.title\": \"Lancez les enchères\",\n  \"DescriptionItemText.closing.description\": \"Soyez accompagnés dans vos décisions stratégiques par des spécialistes hypothécaires jusqu'à l’obtention de votre prêt\",\n  \"DescriptionItemText.closing.title\": \"Obtenez votre prêt\",\n  \"DescriptionItemText.eligibility.description\": \"Identifiez le montant que vous pouvez emprunter en quelques minutes\",\n  \"DescriptionItemText.eligibility.title\": \"Testez votre éligibilité\",\n  \"DescriptionItemText.expertise.description\": \"Vérifiez la valeur de marché de votre logement en quelques clics\",\n  \"DescriptionItemText.expertise.title\": \"Expertisez votre logement\",\n  \"DetailSideNavFilters.showAssignedToMe\": \"Assigné à moi\",\n  \"DetailSideNavHeader.sortOrder.asc\": \"Croissant\",\n  \"DetailSideNavHeader.sortOrder.desc\": \"Décroissant\",\n  \"DetailSideNavPagination.end\": \"Fin des résultats\",\n  \"DetailSideNavPagination.showMore\": \"Afficher plus\",\n  \"DisableUserFormsToggle.canEdit\": \"Autoriser le client à modifier les champs\",\n  \"Forms.userFormsEnabled\": \"Autoriser modifications\",\n  \"DropzoneArrayItem.fileCount\": \"{count, plural, =0 {Pas de fichiers} one {Un fichier} other {# fichiers}}\",\n  \"DropzoneInput.cancelUpload\": \"Annuler l'upload\",\n  \"DropzoneInput.cancelUploadConfirmation\": \"Êtes-vous sûr ?\",\n  \"DropzoneInput.invalidFileType\": \"Vous ne pouvez uploader que des fichiers PDF, JPG et PNG.\",\n  \"DropzoneInput.message\": \"Déposez un ou plusieurs fichiers ici, ou cliquez pour choisir\",\n  \"DropzoneInput.removeFile\": \"Supprimer\",\n  \"e-Potek\": \"e-Potek\",\n  \"UserModifier.buttonLabel\": \"Modifier l'utilisateur\",\n  \"UserModifier.dialogTitle\": \"Modifier l'utilisateur\",\n  \"UserModifier.firstName\": \"Prenom\",\n  \"UserModifier.lastName\": \"Nom\",\n  \"UserModifier.phoneNumbers\": \"Numéro de téléphone\",\n  \"EmailLine.alreadyAnAccount\": \"J'ai déjà un compte e-Potek\",\n  \"emails.CONTACT_US_ADMIN.BODY\": \"Nom: {name}<br />Email: {email}<br />Tel: {phoneNumber}<br />Message: {details}\",\n  \"emails.CONTACT_US_ADMIN.SUBJECT\": \"Nouveau contact: {name}\",\n  \"emails.CONTACT_US_ADMIN.TITLE\": \"Quelqu'un a rempli notre formulaire! :)\",\n  \"emails.CONTACT_US.BODY\": \"Bonjour {name},{verticalSpace}Nous avons bien reçu votre message, et vous serez contacté, dès que possible, par un de nos experts en hypothèque.{verticalSpace}Yannis<br />Directeur d'e-Potek\",\n  \"emails.CONTACT_US.SUBJECT\": \"Bienvenue chez e-Potek!\",\n  \"emails.CONTACT_US.TITLE\": \"Merci de nous avoir contacté\",\n  \"emails.ENROLL_ACCOUNT.BODY\": \"Vous pouvez dès à présent vous connecter sur votre compte e-Potek, et saisir votre nouveau mot de passe.\",\n  \"emails.ENROLL_ACCOUNT.CTA\": \"Démarrer\",\n  \"emails.ENROLL_ACCOUNT.from\": \"Yannis d'e-Potek\",\n  \"emails.ENROLL_ACCOUNT.SUBJECT\": \"Votre nouveau compte e-Potek\",\n  \"emails.ENROLL_ACCOUNT.TITLE\": \"Bienvenue chez e-Potek\",\n  \"emails.REFER_USER.BODY\": \"{proName} vous a référé sur e-Potek. Notre plateforme vous permet de déterminer votre capacité d'achat, d'obtenir une attestation de financement, et de créer un dossier de recherche de financement hypothécaire afin de comparer le marché des prêteurs depuis le confort de chez vous. Vous serez accompagné par votre conseiller en financement dédié qui vous suivra tout le long de vos démarches.{verticalSpace}Vous pouvez dès à présent vous connecter sur votre compte e-Potek, et saisir votre nouveau mot de passe.\",\n  \"emails.REFER_USER.CTA\": \"Démarrer\",\n  \"emails.REFER_USER.from\": \"e-Potek\",\n  \"emails.REFER_USER.SUBJECT\": \"Vous avez été invité sur e-Potek\",\n  \"emails.REFER_USER.TITLE\": \"Bienvenue chez e-Potek\",\n  \"emails.CONFIRM_USER_INVITATION.BODY\": \"{name} ({email}) a bien été invité sur e-Potek. Vous pouvez consulter son avancement et tous vos autres dossiers reférés en vous connectant sur e-Potek Pro.\",\n  \"emails.CONFIRM_USER_INVITATION.CTA\": \"Se connecter\",\n  \"emails.CONFIRM_USER_INVITATION.from\": \"e-Potek\",\n  \"emails.CONFIRM_USER_INVITATION.SUBJECT\": \"Invitation réussie\",\n  \"emails.CONFIRM_USER_INVITATION.TITLE\": \"Invitation réussie\",\n  \"emails.footerUser\": \"Vous recevez cet email car vous avez un compte sur {url}{unsubscribe}\",\n  \"emails.footerVisitor\": \" \",\n  \"emails.RESET_PASSWORD.BODY\": \"Suite a votre demande, nous avons réinitialisé votre mot de passe, veuillez en choisir un nouveau en cliquant sur le bouton ci-dessous.\",\n  \"emails.RESET_PASSWORD.CTA\": \"Choisir un nouveau mot de passe\",\n  \"emails.RESET_PASSWORD.from\": \"e-Potek\",\n  \"emails.RESET_PASSWORD.SUBJECT\": \"Mot de passe réinitialisé\",\n  \"emails.RESET_PASSWORD.TITLE\": \"Votre mot de passe a été réinitialisé\",\n  \"emails.unsubscribe\": \"Me Désabonner\",\n  \"emails.FIND_LENDER_NOTIFICATION.BODY\": \"Vous pouvez dès à présent consulter les offres que nous avons négociées pour vous.{verticalSpace}Votre conseiller {assigneeName} se tient à votre disposition pour avancer avec le prêteur de votre choix.{verticalSpace}Nous vous proposons une rencontre ou un échange téléphonique afin de parcourir les offres obtenues et ainsi aborder les sujets stratégiques de votre acquisition (répartition des fonds propres, choix des taux, méthode d’amortissement).{verticalSpace}Pour ce faire, nous vous remercions de bien vouloir nous communiquer quelques disponibilités.\",\n  \"emails.FIND_LENDER_NOTIFICATION.CTA\": \"Consulter les offres\",\n  \"emails.FIND_LENDER_NOTIFICATION.SUBJECT\": \"[e-Potek] Identifiez votre prêteur\",\n  \"emails.FIND_LENDER_NOTIFICATION.TITLE\": \"Identifiez votre prêteur\",\n  \"emails.VERIFICATION_ERROR.BODY\": \"Il semblerait qu'il y a eu un petit problème lors de la vérification.\",\n  \"emails.VERIFICATION_ERROR.CTA\": \"Se rendre sur e-Potek\",\n  \"emails.VERIFICATION_ERROR.SUBJECT\": \"[e-Potek] Souci de vérification\",\n  \"emails.VERIFICATION_ERROR.TITLE\": \"Oops..\",\n  \"emails.VERIFICATION_PASSED.BODY\": \"La vérification de votre dossier a réussi!\",\n  \"emails.VERIFICATION_PASSED.CTA\": \"Continuer\",\n  \"emails.VERIFICATION_PASSED.SUBJECT\": \"[e-Potek] Vérification réussie\",\n  \"emails.VERIFICATION_PASSED.TITLE\": \"Tout est en ordre\",\n  \"emails.VERIFICATION_REQUESTED.BODY\": \"Nous avons bien reçu votre demande de vérification, et nous vous reviendrons dans les plus brefs délais possibles.\",\n  \"emails.VERIFICATION_REQUESTED.SUBJECT\": \"[e-Potek] Vérification demandée\",\n  \"emails.VERIFICATION_REQUESTED.TITLE\": \"Vous avez demandé la vérification de votre dossier\",\n  \"emails.VERIFY_EMAIL.BODY\": \"Merci de confirmer votre nouvelle adresse email en cliquant ici.\",\n  \"emails.VERIFY_EMAIL.CTA\": \"Confirmer\",\n  \"emails.VERIFY_EMAIL.SUBJECT\": \"Vérifiez votre adresse email\",\n  \"emails.VERIFY_EMAIL.TITLE\": \"Vérifiez votre adresse email\",\n  \"errors.fileSize.description\": \"On ne peut prendre que des fichiers en dessous de 50MB\",\n  \"errors.fileSize.title\": \"Fichier trop gros\",\n  \"errors.fileType.description\": \"On ne peut prendre que les .pdf, .jpg, .jpeg, .xlsx et .png\",\n  \"errors.fileType.title\": \"Fichier incompatible\",\n  \"errors.general\": \"Woops, il y a eu un petit souci!\",\n  \"ExpensesChart.perMonth\": \"par mois\",\n  \"ExpensesChartInterests.libor\": \"Libor moyen: {value, number, percentage}\",\n  \"ExpensesChartInterests.selectFieldLabel\": \"Taux d'intérêt indicatif\",\n  \"ExpensesChartInterests.years\": \"{years} ans moyen: {value, number, percentage}\",\n  \"FaqPage.categories.general\": \"Général\",\n  \"FaqPage.categories.services\": \"Services\",\n  \"FaqPage.description\": \"e-Potek répond à toutes vos questions concernant le financement de votre projet.\",\n  \"FaqPage.title\": \"Questions fréquentes\",\n  \"FaqPageFaqs.cancelMandate.answer\": \"Aucun problème, en tout temps, envoyez simplement votre requête par email à {contactMail}, et vous recevrez une confirmation d’annulation.\",\n  \"FaqPageFaqs.cancelMandate.question\": \"Comment puis-je résilier le mandat ?\",\n  \"FaqPageFaqs.contact.answer\": \"Contactez-nous via la page de contact, vous pourrez y laisser un message, ou directement nous joindre par téléphone ({contactPhone}) ou e-mail ({contactMail}).\",\n  \"FaqPageFaqs.contact.question\": \"Comment puis-je contacter un employé de e-Potek ?\",\n  \"FaqPageFaqs.cost.answer\": \"e-Potek ne vous coûte rien. La société perçoit des revenus de la part de la majorité des prêteurs.\",\n  \"FaqPageFaqs.cost.question\": \"Combien me coûte le service e-Potek ?\",\n  \"FaqPageFaqs.emergencies.answer\": \"Nous sommes une équipe très réactive qui mettons la priorité maximale sur notre clientèle. Appelez-nous pour décrire votre cas, et nous vous obtiendrons votre résidence peu importe le jour ou l’heure.\",\n  \"FaqPageFaqs.emergencies.question\": \"J’aimerais acquérir un bien d’urgence car sinon il va me passer entre les mains\",\n  \"FaqPageFaqs.forWhom.answer\": \"e-Potek s’adresse à toute personne qui souhaite obtenir le meilleur financement hypothécaire du marché.\",\n  \"FaqPageFaqs.forWhom.question\": \"À qui s’adresse e-Potek ?\",\n  \"FaqPageFaqs.getFinancingCertificate.answer\": \"Contactez votre conseiller, puis il vous enverra votre attestation.\",\n  \"FaqPageFaqs.getFinancingCertificate.question\": \"Comment puis-je obtenir une attestation de financement ?\",\n  \"FaqPageFaqs.howLong.answer\": \"Du moment que nous avons toutes les pièces nécessaires un prêt peut être obtenu très rapidement. Afin de ne pas être dans le stress nous suggérons toujours un délai de 1 mois, en sachant que nous avons déjà obtenu des prêts en 48 heures dans des situations d’urgence.\",\n  \"FaqPageFaqs.howLong.question\": \"Combien de temps est-ce que ça prend pour obtenir un prêt hypothécaire ?\",\n  \"FaqPageFaqs.howMuchCanIBorrow.answer\": \"Utilisez notre calculateur {start1Link}.\",\n  \"FaqPageFaqs.howMuchCanIBorrow.question\": \"Comment puis-je savoir combien je peux emprunter ?\",\n  \"FaqPageFaqs.howToStart.answer\": \"\",\n  \"FaqPageFaqs.howToStart.question\": \"\",\n  \"FaqPageFaqs.importantElements.answer\": \"Le montant du prêt : Attentions aux incidences fiscales.{verticalSpace}Le type d’amortissement : Possibilité d’optimiser votre fiscalité.{verticalSpace}La durée des taux : Taux fixe vs. Taux variable.{verticalSpace}L’utilisation des fonds propres : Attention aux incidences fiscales (surtout dans le cadre d’une acquisition de résidence principale).\",\n  \"FaqPageFaqs.importantElements.question\": \"Quels sont les sujets importants que je dois anticiper pour mon hypothèque ?\",\n  \"FaqPageFaqs.mandate.answer\": \"Le mandat e-Potek définit les engagements d’e-Potek ainsi que les vôtres et permet à e-Potek de vous accompagner auprès du prêteur que vous aurez choisi.\",\n  \"FaqPageFaqs.mandate.question\": \"C’est quoi le Mandat e-Potek ?\",\n  \"FaqPageFaqs.propertyNotFoundYet.answer\": \"Naturellement, il est fortement conseillé de tester votre solvabilité afin d’identifier quel est le montant du prêt maximum que vous pourrez obtenir afin d'affiner vos projets, cliquez {start1Link}. Cela vous permettra d’être proactif et efficace dans vos négociations avec les vendeurs.\",\n  \"FaqPageFaqs.propertyNotFoundYet.question\": \"Je n’ai pas encore trouvé mon logement, est-ce que je peux utiliser e-Potek ?\",\n  \"FaqPageFaqs.specialCases.answer\": \"Avec toutes nos années d’expérience, nous avons vu passer et financé avec succès des milliers de dossiers, des plus simples aux très complexes. Nous pouvons vous assurer que peu importe votre situation, s'il y a une solution, nous la trouverons. N’hésitez pas à nous contacter pour en discuter !{verticalSpace}Quelques exemples de situations complexes : Indépendants et chefs d’entreprise - Rentiers - Acquisitions en famille - Successions.\",\n  \"FaqPageFaqs.specialCases.question\": \"Mon cas est particulier, est-ce qu’e-Potek peut quand même m’aider ?\",\n  \"FaqPageFaqs.what.answer\": \"e-Potek SA est une société anonyme basée à Genève spécialisée dans la recherche de financement hypothécaire soumise aux règles imposées par la FINMA.\",\n  \"FaqPageFaqs.what.question\": \"C'est quoi e-Potek ?\",\n  \"FaqPageFaqs.who.answer\": \"Depuis 2016 : un conseiller hypothécaire (actif depuis plus de 18 ans en Suisse), un conseiller en prévoyance (actif depuis plus de 20 ans en Suisse), ainsi qu’un spécialiste du domaine digital (EPFL & Stanford University) ont unis leurs visions et compétences pour créer e-Potek qui repose sur le savoir faire de plusieurs domaines ainsi qu’un système informatique conçu sur-mesure.\",\n  \"FaqPageFaqs.who.question\": \"Qui a créé e-Potek ?\",\n  \"File.status.ERROR\": \"Non valide\",\n  \"File.status.UNVERIFIED\": \"En vérification\",\n  \"File.status.VALID\": \"Validé\",\n  \"FileAdder.title\": \"+ Uploader un fichier\",\n  \"files.BONUSES.tooltip\": \"Justificatif de tous les bonus et revenus variables\",\n  \"files.BONUSES\": \"Justificatif des bonus\",\n  \"files.BUYERS_CONTRACT.tooltipa\": \"Vous pouvez demander un duplicata auprès du notaire qui était chargé de la signature par le passé\",\n  \"files.BUYERS_CONTRACT.tooltipb\": \"Le notaire est chargé de produire un projet d’acte d’achat\",\n  \"files.BUYERS_CONTRACT\": \"Acte d'achat\",\n  \"files.CONTRACT\": \"Contrat\",\n  \"files.COOWNERSHIP_AGREEMENT.tooltip\": \"Règlement de la copropriété\",\n  \"files.COOWNERSHIP_AGREEMENT\": \"Règlement PPE\",\n  \"files.COOWNERSHIP_ALLOCATION_AGREEMENT.tooltip\": \"Cahier de répartition des millièmes de la propriété\",\n  \"files.COOWNERSHIP_ALLOCATION_AGREEMENT\": \"Cahier de répartition PPE\",\n  \"files.PROPERTY_VOLUME.tooltip\": \"L'attestation d'assurance contient souvent cette information. Autrement, tout autre document disponible.\",\n  \"files.PROPERTY_VOLUME\": \"Cubage m3\",\n  \"files.CURRENT_MORTGAGES.tooltip\": \"Dernier décompte d'intérêts hypothécaires et contrat de crédit\",\n  \"files.CURRENT_MORTGAGES\": \"Charges hypothécaires\",\n  \"Files.description\": \"Voici l'endroit où vous pouvez uploader vos document en toute confidentialité.\",\n  \"files.DIVORCE_RULING\": \"Jugement de divorce\",\n  \"files.EXPENSES_JUSTIFICATION.tooltip\": \"Contrat de leasing, crédit personnel, etc...\",\n  \"files.EXPENSES_JUSTIFICATION\": \"Autres charges\",\n  \"files.FIRE_AND_WATER_INSURANCE.tooltip\": \"Incendie et dégâts d'eau émis par l'Etablissement Cantonal dans certains cantons\",\n  \"files.FIRE_AND_WATER_INSURANCE\": \"Police d'assurance\",\n  \"files.IDENTITY.tooltip\": \"Carte d'identité ou passeport à jour\",\n  \"files.IDENTITY\": \"Pièce d'identité\",\n  \"files.LAND_REGISTER_EXTRACT\": \"Extrait du registre foncier\",\n  \"files.LAST_SALARIES\": \"Fiches de salaire\",\n  \"files.LAST_SALARIES.tooltip\": \"3 dernières fiches de salaire\",\n  \"files.PROPERTY_MARKETING_BROCHURE.tooltip\": \"Plaquette de vente ou description détaillée (surface habitable, nombre de pièces, année de construction et rénovation, état, vue, etc...)\",\n  \"files.PROPERTY_MARKETING_BROCHURE\": \"Descriptif du logement\",\n  \"files.DEBT_COLLECTION_REGISTER_EXTRACT.tooltip\": \"Attestation de l'office des poursuites de moins de 3 mois\",\n  \"files.DEBT_COLLECTION_REGISTER_EXTRACT\": \"Extrait des poursuites\",\n  \"files.OTHER_INCOME_JUSTIFICATION.tooltip\": \"Justificatif de chaque autre revenu que vous avez mentionné\",\n  \"files.OTHER_INCOME_JUSTIFICATION\": \"Autres revenus\",\n  \"files.OWN_COMPANY_FINANCIAL_STATEMENTS.tooltip\": \"Lorsque l'emprunteur est employé de sa propre société ou qu'il est indépendant, il est nécessaire de présenter les 3 derniers bilans et comptes de résultat\",\n  \"files.OWN_COMPANY_FINANCIAL_STATEMENTS\": \"Bilans et PP\",\n  \"files.PENSION_FUND_YEARLY_STATEMENT.tooltip\": \"Dernier certificat de prévoyance professionnelle disponible\",\n  \"files.PENSION_FUND_YEARLY_STATEMENT\": \"Certificat de prévoyance\",\n  \"files.PROPERTY_PICTURES.tooltip\": \"Quelques photos (intérieur et extérieur). Façade, vue, cuisine, chambres, salles d'eau, etc...\",\n  \"files.PROPERTY_PICTURES\": \"Photos du logement\",\n  \"files.PROPERTY_PLANS\": \"Plans avec métrées\",\n  \"files.REIMBURSEMENT_STATEMENT.tooltip\": \"Le décompte de remboursement est produit par votre prêteur actuel\",\n  \"files.REIMBURSEMENT_STATEMENT\": \"Décompte de remboursement\",\n  \"files.INVESTMENT_PROPERTY_RENT_JUSTIFICATION.tooltip\": \"Loyer versé par le locataire existant ou justificatif du futur loyer\",\n  \"files.INVESTMENT_PROPERTY_RENT_JUSTIFICATION.tooltip2\": \"Vous pouvez obtenir cette information auprès du vendeur ou auprès de la régie qui va gérer vos locataires, si vous n’avez pas de régie nous vous recommandons de vous informer sur la régie qui s'occupe actuellement de la gestion de l'immeuble.\",\n  \"files.INVESTMENT_PROPERTY_RENT_JUSTIFICATION\": \"Loyers perçus\",\n  \"files.RESIDENCY_PERMIT.tooltip\": \"Permis d'établissement à jour\",\n  \"files.RESIDENCY_PERMIT\": \"Permis d’établissement\",\n  \"files.THIRD_PILLAR_ACCOUNTS.tooltip\": \"Justificatif des avoirs du 3ème pilier bancaire et/ou polices d'asurance 3A et 3B\",\n  \"files.THIRD_PILLAR_ACCOUNTS\": \"Justificatif 3e pilier\",\n  \"files.SALARY_CERTIFICATE\": \"Certificat annuel de salaire\",\n  \"files.SIGNED_CONTRACT.tooltip\": \"Le contrat de prêt avec votre signature à tous les endroits requis\",\n  \"files.SIGNED_CONTRACT\": \"Contrat signé\",\n  \"files.SIGNED_MANDATE\": \"Mandat e-Potek\",\n  \"files.TAXES.tooltip\": \"Dernière déclaration fiscale complète avec les annexes\",\n  \"files.TAXES\": \"Déclaration fiscale\",\n  \"Files.title\": \"Mes Documents\",\n  \"FilesPage.description\": \"Vous trouverez ici tous les documents que vous avez ajoutés à votre projet. Ils sont enregistrés en toute sécurité, et vous pourrez les y retrouver à tout instant.\",\n  \"FilesPage.title\": \"Documents\",\n  \"Finance.description\": \"Normalement, vous nous avez déjà donné tout ce dont nous avons besoin sur cette page.{verticalSpace}Vérifiez cependant que vous avez détaillé de façon exhaustive vos finances personelles. Les prêteurs vous offriront des conditions plus attractives si vos moyens dépassent le minimum nécéssaire pour votre Prêt Hypothécaire.\",\n  \"Finance.notValidated\": \"Non validées\",\n  \"Finance.recapTitle\": \"Récapitulatif\",\n  \"Finance.title\": \"Mes Finances\",\n  \"Finance.validated\": \"Validées\",\n  \"FinancePage.title\": \"Graphiques financiers\",\n  \"FinancingPage.title\": \"Plans financiers\",\n  \"Financing.amortizationCost\": \"Amortissement mensuel\",\n  \"Financing.amortizationType\": \"Type d'amortissement\",\n  \"Financing.borrowRatio\": \"Prêt / Prix d'achat\",\n  \"Financing.fortuneUsed\": \"Cash et titres\",\n  \"Financing.incomeRatio\": \"Charges / Revenus\",\n  \"Financing.interestsCost\": \"Intérêts mensuels\",\n  \"Financing.loanTranches\": \"Tranches\",\n  \"Financing.notaryFees\": \"Frais de notaire\",\n  \"Financing.pledgedAmount\": \"Nantissement\",\n  \"Financing.propertyCost\": \"Charges mensuelles\",\n  \"Financing.propertyId\": \"Bien immobilier\",\n  \"Financing.propertyValue\": \"{purchaseType, select, REFINANCING {Valeur du bien} other {Prix d'achat}}\",\n  \"Financing.propertyWork\": \"Travaux à plus-value\",\n  \"Financing.remainingCash\": \"Cash et titres restants\",\n  \"Financing.remainingInsurance2\": \"2ème pilier restant\",\n  \"Financing.remainingInsurance3A\": \"3ème pilier A assurance restant\",\n  \"Financing.remainingBank3A\": \"3ème pilier A banque restant\",\n  \"Financing.remainingInsurance3B\": \"3ème pilier B restant\",\n  \"Financing.requiredOwnFunds\": \"Fonds propres à allouer\",\n  \"Financing.requiredOwnFunds.low\": \"Ajoutez-en\",\n  \"Financing.requiredOwnFunds.high\": \"Enlevez-en\",\n  \"Financing.requiredOwnFunds.valid\": \"Parfait\",\n  \"Financing.requiredOwnFunds.low.tooltip\": \"Il manque {value} de fonds propres sur ce plan financier pour l'équilibrer. Ajoutez-en d'avantage, augmentez votre prêt hypothécaire, ou reduisez le coût de votre projet \",\n  \"Financing.requiredOwnFunds.high.tooltip\": \"Vous avez alloué {value} de fonds propres en trop sur ce plan financier, enlevez-en pour l'équilibrer, ou réduisez votre prêt hypothécaire\",\n  \"Financing.requiredOwnFunds.valid.tooltip\": \"Tout va bien!\",\n  \"Financing.totalFiscal\": \"Total\",\n  \"Financing.wantedLoan\": \"Prêt hypothécaire\",\n  \"FinancingFinancing.DIRECT\": \"Direct\",\n  \"FinancingFinancing.INDIRECT\": \"Indirect\",\n  \"FinancingFinancing.title\": \"PRÊT HYPOTHÉCAIRE\",\n  \"FinancingHeaderAdder.label\": \"Ajouter plan financier\",\n  \"FinancingOwnFunds.title\": \"FONDS PROPRES\",\n  \"FinancingProject.title\": \"PROJET\",\n  \"FinancingPropertyPicker.addProperty\": \"Ajouter bien immobilier\",\n  \"FinancingResult.finma\": \"Ratios FINMA\",\n  \"FinancingResult.fiscalTitle\": \"Incidences fiscales\",\n  \"FinancingResult.future\": \"Post décaissement\",\n  \"FinancingResult.title\": \"RÉSULTAT\",\n  \"Forms.address1.placeholder\": \"Rue des Champs 7\",\n  \"Forms.address1\": \"Adresse 1\",\n  \"Forms.address2.placeholder\": \" \",\n  \"Forms.address2\": \"Adresse 2\",\n  \"Forms.age.placeholder\": \"50\",\n  \"Forms.age\": \"Âge\",\n  \"Forms.areaNorm.NIA\": \"Nette\",\n  \"Forms.areaNorm.NLS\": \"Brutte\",\n  \"Forms.areaNorm\": \"Type de surface\",\n  \"Forms.assignedTo\": \"Assigné à\",\n  \"Forms.balconyArea.placeholder\": \"20\",\n  \"Forms.balconyArea\": \"Surface des balcons en m2\",\n  \"Forms.bank3A\": \"Banque 3A\",\n  \"Forms.bank3A.value\": \"Capital disponible\",\n  \"Forms.bank3A.description\": \"Description\",\n  \"Forms.bank3A.description.placeholder\": \"Nom de la banque\",\n  \"Forms.bank3A.value.placeholder\": \"CHF 10 000\",\n  \"Forms.bankFortune.placeholder\": \"CHF 100 000\",\n  \"Forms.bankFortune\": \"Fortune Bancaire\",\n  \"Forms.bathroomCount.info\": \"Salles de bains ou salles d’eau (respectivement avec baignoire ou douche)\",\n  \"Forms.bathroomCount.placeholder\": \"1\",\n  \"Forms.bathroomCount\": \"Nb. de salles de bain\",\n  \"Forms.birthPlace.placeholder\": \"Berne, Suisse\",\n  \"Forms.birthPlace\": \"Lieu de Naissance\",\n  \"Forms.bonus2019.placeholder\": \"CHF 10 000\",\n  \"Forms.bonus2019\": \"Bonus 2019\",\n  \"Forms.bonus2018.placeholder\": \"CHF 10 000\",\n  \"Forms.bonus2018\": \"Bonus 2018\",\n  \"Forms.bonus2015.placeholder\": \"CHF 10 000\",\n  \"Forms.bonus2015\": \"Bonus 2015\",\n  \"Forms.bonus2016.placeholder\": \"CHF 10 000\",\n  \"Forms.bonus2016\": \"Bonus 2016\",\n  \"Forms.bonus2017.placeholder\": \"CHF 10 000\",\n  \"Forms.bonus2017\": \"Bonus 2017\",\n  \"Forms.bonusExists\": \"Avez-vous reçu un bonus ?\",\n  \"Forms.borrower\": \"Emprunteur\",\n  \"Forms.box.placeholder\": \"1\",\n  \"Forms.box\": \"Box de parking\",\n  \"Forms.childrenCount.placeholder\": \"0\",\n  \"Forms.childrenCount\": \"Enfants à charge\",\n  \"Forms.citizenship.placeholder\": \"Français, Allemand, Italien\",\n  \"Forms.citizenship\": \"Nationalité\",\n  \"Forms.city\": \"Commune\",\n  \"Forms.civilStatus.DIVORCED\": \"{gender, select, F {Divorcée} other {Divorcé}}\",\n  \"Forms.civilStatus.MARRIED\": \"{gender, select, F {Mariée} other {Marié}}\",\n  \"Forms.civilStatus.PACSED\": \"{gender, select, F {Pacsée} other {Pacsé}}\",\n  \"Forms.civilStatus.SINGLE\": \"Célibataire\",\n  \"Forms.civilStatus.WIDOW\": \"{gender, select, F {Veuve} other {Veuf}}\",\n  \"Forms.civilStatus\": \"État civil\",\n  \"Forms.company.placeholder\": \"e-Potek SA\",\n  \"Forms.company\": \"Employeur\",\n  \"Forms.constructionYear.placeholder\": \"2005\",\n  \"Forms.constructionYear\": \"Année de construction\",\n  \"Forms.copropertyPercentage.info\": \"En millièmes\",\n  \"Forms.copropertyPercentage.placeholder\": \"125\",\n  \"Forms.copropertyPercentage\": \"Répartition au sein de la copropriété\",\n  \"Forms.createdAt\": \"Créé le\",\n  \"Forms.currentOwner.0\": \"{name}\",\n  \"Forms.currentOwner.1\": \"{name}\",\n  \"Forms.currentOwner.BOTH\": \"Les Deux\",\n  \"Forms.currentOwner.OTHER\": \"Autre\",\n  \"Forms.currentOwner\": \"Qui est le propriétaire actuel ?\",\n  \"Forms.email\": \"Email\",\n  \"Forms.expenses.description\": \"Type de charge\",\n  \"Forms.expenses.LEASING\": \"Leasings\",\n  \"Forms.expenses.OTHER\": \"Autre\",\n  \"Forms.expenses.PENSIONS\": \"Rentes et pensions versées\",\n  \"Forms.expenses.PERSONAL_LOAN\": \"Crédits personnels\",\n  \"Forms.expenses.THIRD_PARTY_FORTUNE_REIMBURSEMENT\": \"Remboursement prêt de tiers\",\n  \"Forms.expenses.value.placeholder\": \"CHF 10 000\",\n  \"Forms.expenses.value\": \"Montant annuel\",\n  \"Forms.expenses\": \"Charges financières\",\n  \"Forms.firstName.placeholder\": \"Marie\",\n  \"Forms.firstName\": \"Prénom\",\n  \"Forms.flatType.DUPLEX_APARTMENT\": \"Duplex\",\n  \"Forms.flatType.PENTHOUSE_APARTMENT\": \"Appartement attique\",\n  \"Forms.flatType.PENTHOUSE_MAISONETTE\": \"Duplex / attique\",\n  \"Forms.flatType.SINGLE_FLOOR_APARTMENT\": \"Appartement à l'étage\",\n  \"Forms.flatType.TERRACE_APARTMENT\": \"Appartment de rez-de-chaussée\",\n  \"Forms.flatType\": \"Type d'appartement\",\n  \"Forms.floorNumber.placeholder\": \"2\",\n  \"Forms.floorNumber\": \"Étage de votre appartement\",\n  \"Forms.fortune\": \"Fortune\",\n  \"Forms.fortuneUsed\": \"Fortune utilisé\",\n  \"Forms.futureOwner.0\": \"{name}\",\n  \"Forms.futureOwner.1\": \"{name}\",\n  \"Forms.futureOwner.both\": \"Les Deux\",\n  \"Forms.futureOwner.BOTH\": \"Les deux\",\n  \"Forms.futureOwner.other\": \"Autre\",\n  \"Forms.futureOwner.OTHER\": \"Autre\",\n  \"Forms.futureOwner\": \"Qui sera le propriétaire du bien immobilier ?\",\n  \"Forms.gender.F\": \"Femme\",\n  \"Forms.gender.M\": \"Homme\",\n  \"Forms.gender.OTHER\": \"Autre\",\n  \"Forms.gender\": \"Sexe\",\n  \"Forms.houseType.ATTACHED_END_BUILDING\": \"Mitoyenne à l'extrémité de la rangée\",\n  \"Forms.houseType.ATTACHED_MID_TERRACE_BUILDING\": \"Mitoyenne au centre de la rangée\",\n  \"Forms.houseType.DETACHED\": \"Individuelle\",\n  \"Forms.houseType\": \"Type de villa\",\n  \"Forms.incomeAndExpenses\": \"Revenus & Charges\",\n  \"Forms.parkingInside.placeholder\": \"1\",\n  \"Forms.parkingInside\": \"Places de parc intérieur\",\n  \"Forms.promotionLot\": \"Allouer au lot\",\n  \"Forms.insideArea.placeholder\": \"150\",\n  \"Forms.insideArea.recapPlaceholder\": \"À préciser\",\n  \"Forms.insideArea\": \"Surface habitable en m2\",\n  \"Forms.insurance\": \"Capitaux disponibles\",\n  \"Forms.insurance3B.placeholder\": \"CHF 100 000\",\n  \"Forms.insurance3B\": \"Assurance 3B\",\n  \"Forms.insurance3B.value\": \"Capital disponible\",\n  \"Forms.insurance3B.description\": \"Description\",\n  \"Forms.insurance3B.description.placeholder\": \"Nom de l'assurance\",\n  \"Forms.insurance3B.value.placeholder\": \"CHF 10 000\",\n  \"Forms.insuranceFortuneUsed\": \"Fortune Insurance utilisé\",\n  \"Forms.insurancePureRisk.placeholder\": \"CHF 100 000\",\n  \"Forms.insurancePureRisk\": \"Risque pure\",\n  \"Forms.insurance2.placeholder\": \"CHF 100 000\",\n  \"Forms.insurance2\": \"LPP, 2ème Pilier\",\n  \"Forms.insurance2.value\": \"Capital disponible\",\n  \"Forms.insurance2.description\": \"Description\",\n  \"Forms.insurance2.description.placeholder\": \"Nom de la caisse de prévoyance\",\n  \"Forms.insurance2.value.placeholder\": \"CHF 10 000\",\n  \"Forms.insurance3A.placeholder\": \"CHF 100 000\",\n  \"Forms.insurance3A\": \"Assurance 3A\",\n  \"Forms.insurance3A.value\": \"Capital disponible\",\n  \"Forms.insurance3A.description\": \"Description\",\n  \"Forms.insurance3A.description.placeholder\": \"Nom de l'assurance\",\n  \"Forms.insurance3A.value.placeholder\": \"CHF 10 000\",\n  \"Forms.investment\": \"Bien d'investissement\",\n  \"Forms.isCoproperty\": \"Est-ce une copropriété ?\",\n  \"Forms.isNew\": \"Est-ce un bien neuf ?\",\n  \"Forms.isSwiss\": \"Avez-vous la nationalité Suisse ?\",\n  \"Forms.isUSPerson\": \"Êtes-vous une US Person ?\",\n  \"Forms.landArea.placeholder\": \"250\",\n  \"Forms.landArea\": \"Surface du terrain en m2\",\n  \"Forms.lastName.placeholder\": \"Ducret\",\n  \"Forms.lastName\": \"Nom\",\n  \"Forms.loan\": \"Hypothèque\",\n  \"Forms.mandatory\": \"Les champs marqués avec un * sont obligatoires\",\n  \"Forms.minergie.MINERGIE_ECO\": \"Minergie-ECO\",\n  \"Forms.minergie.MINERGIE_P_ECO\": \"Minergie-P-ECO\",\n  \"Forms.minergie.MINERGIE_P\": \"Minergie-P\",\n  \"Forms.minergie.OTHER_CERTIFICATE\": \"Autre certificat Minergie\",\n  \"Forms.minergie.WITHOUT_CERTIFICATE\": \"Sans certificat Minergie\",\n  \"Forms.minergie\": \"Certificat Minergie\",\n  \"Forms.yearlyExpenses.placeholder\": \"12 000\",\n  \"Forms.yearlyExpenses\": \"Charges annuelles du bien immobilier\",\n  \"Forms.yearlyExpenses.info\": \"Facultatif: Inclut ce montant dans les charges du prêt hypothécaire\",\n  \"Forms.numberOfFloors.placeholder\": \"2\",\n  \"Forms.numberOfFloors\": \"Nombre d'étages dans l'immeuble\",\n  \"Forms.organisation\": \"Organisation\",\n  \"Forms.otherFortune.description\": \"Type de Fortune\",\n  \"Forms.otherFortune.description.placeholder\": \"Bijoux\",\n  \"Forms.otherFortune.value.description\": \"CHF 100 000\",\n  \"Forms.otherFortune.value\": \"Valeur\",\n  \"Forms.otherFortune\": \"Autre Fortune\",\n  \"Forms.otherIncome.description\": \"Type de revenu\",\n  \"Forms.otherIncome.INVESTMENT\": \"Revenus de titres\",\n  \"Forms.otherIncome.OTHER\": \"Autre\",\n  \"Forms.otherIncome.PENSIONS\": \"Rentes et pensions reçues\",\n  \"Forms.otherIncome.REAL_ESTATE\": \"Revenus de fortune immobilière\",\n  \"Forms.otherIncome.value.placeholder\": \"CHF 10 000\",\n  \"Forms.otherIncome.value\": \"Montant annuel\",\n  \"Forms.otherIncome.WELFARE\": \"Allocations\",\n  \"Forms.otherIncome\": \"Autres revenus\",\n  \"Forms.otherNotes.placeholder\": \"Aménagements extérieurs, piscine, jardins, cabanons, annexes, sous-sols utiles,...\",\n  \"Forms.otherNotes\": \"Autres informations\",\n  \"Forms.otherOwner\": \"Autre propriétaire\",\n  \"Forms.otherOwner.placeholder\": \"Marie Rochat\",\n  \"Forms.parkingOutside.placeholder\": \"1\",\n  \"Forms.parkingOutside\": \"Places de parc extérieur\",\n  \"Forms.permissions.MODIFY\": \"Modification\",\n  \"Forms.permissions.READ\": \"Consultation\",\n  \"Forms.personalBank.placeholder\": \"UBS\",\n  \"Forms.personalBank\": \"Votre Banque Personelle\",\n  \"Forms.phoneNumber\": \"Téléphone\",\n  \"Forms.primary\": \"Résidence principale\",\n  \"Forms.propertyAddress\": \"Adresse du bien immobilier\",\n  \"Forms.propertyDetails\": \"Détails du bien\",\n  \"Forms.propertyInfo\": \"Informations générales sur la propriété\",\n  \"Forms.propertyType.FLAT\": \"Appartement\",\n  \"Forms.propertyType.HOUSE\": \"Villa\",\n  \"Forms.propertyType\": \"Type de bien immobilier\",\n  \"Forms.propertyWork.placeholder\": \"CHF 50 000\",\n  \"Forms.propertyWork\": \"Travaux de plus-value\",\n  \"Forms.realEstate.description\": \"Type de propriété\",\n  \"Forms.realEstate.INVESTMENT\": \"Bien d'investissement\",\n  \"Forms.realEstate.loan.placeholder\": \"CHF 300 000\",\n  \"Forms.realEstate.loan\": \"Emprunt actuel\",\n  \"Forms.realEstate.MAIN_RESIDENCE\": \"Propriété principale\",\n  \"Forms.realEstate.COMMERCE\": \"Bien commercial\",\n  \"Forms.realEstate.PRIMARY\": \"Propriété principale\",\n  \"Forms.realEstate.SECOND_RESIDENCE\": \"Propriété secondaire\",\n  \"Forms.realEstate.SECONDARY\": \"Propriété secondaire\",\n  \"Forms.realEstate.value.placeholder\": \"CHF 400 000\",\n  \"Forms.realEstate.value\": \"Valeur du bien\",\n  \"Forms.realEstate\": \"Fortune Immobilière\",\n  \"Forms.renovationYear.info\": \"Seulement si la propriété a été rénovée\",\n  \"Forms.renovationYear.placeholder\": \"2010\",\n  \"Forms.renovationYear\": \"Année de rénovation\",\n  \"Forms.residenceType.INVESTMENT\": \"Bien d'investissement\",\n  \"Forms.residenceType.MAIN_RESIDENCE\": \"Résidence principale\",\n  \"Forms.residenceType.COMMERCE\": \"Bien commercial\",\n  \"Forms.residenceType.SECOND_RESIDENCE\": \"Résidence secondaire\",\n  \"Forms.residenceType\": \"Type d'utilisation\",\n  \"Forms.residencyPermit.b\": \"Permis B\",\n  \"Forms.residencyPermit.c\": \"Permis C\",\n  \"Forms.residencyPermit.ci\": \"Permis Ci\",\n  \"Forms.residencyPermit.f\": \"Permis F\",\n  \"Forms.residencyPermit.g\": \"Permis G\",\n  \"Forms.residencyPermit.l\": \"Permis L\",\n  \"Forms.residencyPermit.n\": \"Permis N\",\n  \"Forms.residencyPermit.none\": \"Pas de permis\",\n  \"Forms.residencyPermit.s\": \"Permis S\",\n  \"Forms.residencyPermit\": \"Permis de résidence\",\n  \"Forms.roles\": \"Roles\",\n  \"Forms.roomCount.info\": \"Sans compter la cuisine\",\n  \"Forms.roomCount.placeholder\": \"3.5\",\n  \"Forms.roomCount\": \"Nb. de pièces\",\n  \"Forms.salary.placeholder\": \"CHF 100 000\",\n  \"Forms.salary\": \"Revenus bruts annuels\",\n  \"Forms.sameAddress\": \"Utiliser la même adresse que {name} ?\",\n  \"Forms.secondary\": \"Résidence secondaire\",\n  \"Forms.terraceArea.placeholder\": \"40\",\n  \"Forms.terraceArea\": \"Surface des terrasses en m2\",\n  \"Forms.textInput.placeholderPrefix\": \"p.ex:\",\n  \"Forms.toiletCount.placeholder\": \"1\",\n  \"Forms.toiletCount\": \"Nb. de WC\",\n  \"Forms.unassigned\": \"Non assigné\",\n  \"Forms.updatedAt\": \"Modifié le\",\n  \"Forms.usageType.INVESTMENT\": \"Bien d'investissement\",\n  \"Forms.usageType.PRIMARY\": \"Résidence principale\",\n  \"Forms.usageType.SECONDARY\": \"Résidence secondaire\",\n  \"Forms.usageType\": \"Type d'utilisation\",\n  \"Forms.user\": \"Utilisateur\",\n  \"Forms.value.placeholder\": \"CHF 500 000\",\n  \"Forms.value\": \"{purchaseType, select, REFINANCING {Valeur du bien} CONSTRUCTION {Montant de la construction} mortgageNote {Montant de la cédule} other {Prix d'achat}}\",\n  \"Forms.value.info\": \"Arrondi à CHF 1000.- près\",\n  \"Forms.volume.placeholder\": \"1000\",\n  \"Forms.volume\": \"Volume/Cubage en m3\",\n  \"Forms.volumeNorm.BIC\": \"BIC\",\n  \"Forms.volumeNorm.placeholder\": \"SIA\",\n  \"Forms.volumeNorm.SIA_116\": \"SIA 116\",\n  \"Forms.volumeNorm.SIA_416\": \"SIA 416\",\n  \"Forms.volumeNorm\": \"Type de cubage\",\n  \"Forms.worksForOwnCompany\": \"Êtes-vous actionnaire significatif de cette entreprise ?\",\n  \"Forms.yourAddress\": \"Votre adresse\",\n  \"Forms.zipCode.placeholder\": \"1201\",\n  \"Forms.zipCode\": \"Code postal\",\n  \"general.1\": \"Un\",\n  \"general.2\": \"Deux\",\n  \"general.add\": \"Ajouter\",\n  \"general.amortization\": \"Amortissement\",\n  \"general.areYouSure\": \"Êtes-vous sûr ?\",\n  \"general.borrower\": \"Emprunteur\",\n  \"general.borrowerWithIndex\": \"Emprunteur {index}\",\n  \"general.buildingMaintenance\": \"Frais d'entretien\",\n  \"general.cancel\": \"Annuler\",\n  \"general.close\": \"Fermer\",\n  \"general.continue\": \"Continuer\",\n  \"general.delete\": \"Supprimer\",\n  \"general.download\": \"Télécharger\",\n  \"general.erase\": \"Effacer\",\n  \"general.filterBy\": \"Filtrer par\",\n  \"general.here\": \"ici\",\n  \"general.hide\": \"Masquer\",\n  \"general.income\": \"Revenus\",\n  \"general.insuranceFees\": \"Frais retrait Prévoyance\",\n  \"general.insuranceFunds\": \"Prévoyance\",\n  \"general.interests\": \"Intérêts\",\n  \"general.learnMore\": \"En savoir plus\",\n  \"general.lenders\": \"Prêteurs\",\n  \"general.loan\": \"Hypothèque\",\n  \"general.login\": \"Login\",\n  \"general.logout\": \"Déconnexion\",\n  \"general.maintenance\": \"Charges mensuelles\",\n  \"general.modify\": \"Modifier\",\n  \"general.mortgageLoan\": \"Prêt Hypothécaire\",\n  \"general.no\": \"Non\",\n  \"general.noBorrowersForLoan\": \"Pas d'emprunteurs pour cet hypothèque\",\n  \"general.notaryFees\": \"Frais de notaire\",\n  \"general.ok\": \"Ok\",\n  \"general.one\": \"Un\",\n  \"general.ownFunds\": \"Fonds propres\",\n  \"general.perMonth\": \"/mois\",\n  \"general.progress\": \"Progrès: {value, number, percent}\",\n  \"general.property\": \"Bien immobilier\",\n  \"general.remove\": \"Supprimer\",\n  \"general.salary\": \"Salaire\",\n  \"general.save\": \"Sauvegarder\",\n  \"general.savings\": \"Épargne\",\n  \"general.search\": \"Rechercher\",\n  \"general.settings\": \"Réglages\",\n  \"general.showAll\": \"Afficher tout\",\n  \"general.signup\": \"Créer un compte\",\n  \"general.sortBy\": \"Trier par\",\n  \"general.start\": \"Commencer\",\n  \"general.validate\": \"Valider\",\n  \"general.calculate\": \"Calculer\",\n  \"general.yes\": \"Oui\",\n  \"GoogleMapsAutocomplete.label\": \"Addresse de la propriété\",\n  \"HomeDev.CTA\": \"M'avertir par e-mail\",\n  \"HomeDev.description\": \"Nous allons bientôt ouvrir e-Potek aux refinancements, soyez le premier averti !\",\n  \"HomeDev.title\": \"En Développement\",\n  \"HomePage.CTA.buy\": \"Faire une acquisition\",\n  \"HomePage.CTA1\": \"Faire une acquisition\",\n  \"HomePage.CTA12\": \"Financement hypothécaire\",\n  \"HomePage.CTA2\": \"Refinancer un bien\",\n  \"HomePage.description\": \"Votre guide pour traverser la jungle hypothécaire.\",\n  \"HomePage.sellingpoint1.text\": \"Identifiez le montant que vous pouvez emprunter en quelques clics.\",\n  \"HomePage.sellingpoint1.title\": \"1. Testez votre éligibilité\",\n  \"HomePage.sellingpoint2.text\": \"Obtenez de manière anonyme des offres sur mesure de la part des prêteurs du marché.\",\n  \"HomePage.sellingpoint2.title\": \"2. Organisez les enchères\",\n  \"HomePage.sellingpoint3.text\": \"La plateforme simple et sécurisée vous permet de communiquer facilement avec votre prêteur.\",\n  \"HomePage.sellingpoint3.title\": \"3. Communiquez avec votre prêteur\",\n  \"HomePage.sellingpoint4.text\": \"Vous êtes accompagnés dans vos décisions stratégiques par des spécialistes en financement jusqu'à l'obtention de votre prêt.\",\n  \"HomePage.sellingpoint4.title\": \"4. Obtenez votre prêt\",\n  \"HomePage.sellingpoint5.text\": \"Avancez à votre rythme, arrêtez quand vous voulez, tout ça en toute gratuité, pour toujours.\",\n  \"HomePage.sellingpoint5.title\": \"Sans engagement et entièrement gratuit\",\n  \"HomePage.sellingpoint6.text\": \"Vos données sont en sûreté, et vous maintenez une confidentialité maximale auprès de tous les établissements financiers.\",\n  \"HomePage.sellingpoint6.title\": \"En toute sécurité\",\n  \"HomePage.tagline1\": \"Mettez votre prêt hypothécaire aux enchères\",\n  \"HomePage.tagline2\": \"Tout simplement\",\n  \"HomePage.webapp.description\": \"Notre application vous accompagne du début jusqu'à la fin et s'adapte de façon intelligente à votre situation\",\n  \"HomePage.webapp.title\": \"Votre guide personnel\",\n  \"HomePageDescription.description\": \"Face aux nombreuses options proposées sur le marché, comparer différents prêteurs et produits de financement hypothécaire peut devenir un processus fastidieux. Il est ainsi facile de se perdre dans la jungle hypothécaire face à des offres aux conditions de taux apparaissant très avantageuses mais malheureusement valables uniquement sous certaines conditions exceptionnelles et donc applicables qu’à une faible minorité du marché.\",\n  \"HomePageDescription.description2\": \"Un accompagnement total: e-Potek vous accompagne durant toute la durée de votre projet de financement et au-delà. Vous disposez également de solutions d’assurances, fiscales et juridiques. Vous pouvez, par exemple, être conseillé pour mettre en place le plan financier le plus optimal pour vos projets et même faire expertiser votre logement pour l’acquérir ou le vendre au bon prix.\",\n  \"HomePageDescription.description3\": \"Un service centralisé: e-potek réunit, en un seul endroit, l’intégralité des acteurs du marché ainsi que les informations indispensables à la bonne compréhension des enjeux du financement hypothécaire. Disposez d’un accès gratuit à des informations rédigées par des professionnels qualifiés des domaines liés à votre projet (droit, notariat, immobilier, fiscalité, économie, assurance et plus) accessibles gratuitement et en tout temps.\",\n  \"HomePageDescription.description4\": \"Des données fiables: Evitez les pièges et soyez au courant des réalités du marché hypothécaire en recevant des conditions de financement sur-mesure et classées par ordre de pertinence. Déterminez précisément et en fonction de vos caractéristiques le meilleur partenaire pour vous accompagner.\",\n  \"HomePageDescription.seoTitle\": \"e-Potek, la révolution de l’hypothèque\",\n  \"HomePageDescription.stepsTitle\": \"La méthode e-Potek\",\n  \"HomePageDescriptionSeo.less\": \"Masquer\",\n  \"HomePageDescriptionSeo.more\": \"En savoir plus\",\n  \"HomePageHeader.description\": \"Soyez accompagnés dans vos décisions stratégiques par des spécialistes en financement hypothécaire, jusqu'à l'obtention de votre prêt.\",\n  \"HomePageHeader.title\": \"Obtenez la meilleure hypothèque du marché\",\n  \"HomePageReviewsTitle.title\": \"Ce qu'on dit à propos d'e-Potek\",\n  \"Impersonation.impersonateLinkText\": \"Se faire passer pour cet utilisateur\",\n  \"Impersonation.impersonationSuccess\": \"Actuellement connecté comme {email}\",\n  \"Info.title\": \"Mes Informations Personelles\",\n  \"InsuranceStrategy.description\": \"Vous avez décidé d'utiliser votre prévoyance pour ce projet. Il faut encore décider par quel mécanisme financier vous allez le faire.\",\n  \"InsuranceStrategy.title\": \"Stratégie de prévoyance\",\n  \"InterestRanges.title\": \"Vos Taux\",\n  \"InterestsPage.description\": \"Taux hypothécaires reçus de la part des prêteurs lors des dernières négociations. Attention à ne pas oublier que les conditions de taux varient fortement selon les dossiers. Ils dépendent principalement de la solvabilité et du montant emprunté.\",\n  \"InterestsPage.title\": \"Nos taux hypothécaires\",\n  \"InterestsTable.duration\": \"Durée\",\n  \"InterestsTable.interest1\": \"1 an\",\n  \"InterestsTable.interest10\": \"10 ans\",\n  \"InterestsTable.interest15\": \"15 ans\",\n  \"InterestsTable.interest2\": \"2 ans\",\n  \"InterestsTable.interest20\": \"20 ans\",\n  \"InterestsTable.interest25\": \"25 ans\",\n  \"InterestsTable.interest5\": \"5 ans\",\n  \"InterestsTable.interestLibor\": \"Libor\",\n  \"InterestsTable.rate\": \"Taux\",\n  \"InterestsTable.rateLow\": \"Min\",\n  \"InterestsTable.rateHigh\": \"Max\",\n  \"InterestsTable.trend\": \"Tendance\",\n  \"LayoutError.description\": \"Quelque chose n'a pas fonctionné comme prévu, on en est déjà informés, et vous pouvez essayer de recharger la page.{verticalSpace}Si ça ne résoud pas le problème, écrivez-nous à digital@e-potek.ch.\",\n  \"LayoutError.redirectHome\": \"Page d'accueil\",\n  \"LayoutError.reload\": \"Recharger la page\",\n  \"LayoutError.title\": \"Woops une erreur!\",\n  \"LenderSummary.amount\": \"Montant prêté le plus élevé\",\n  \"LenderSummary.count\": \"Quantité\",\n  \"LenderSummary.monthly\": \"Coût mensuel le plus bas\",\n  \"LenderSummary.title\": \"Offres correspondant à vos critères\",\n  \"LenderTable.amount\": \"Montant prêté\",\n  \"LenderTable.conditions\": \"Conditions ?\",\n  \"LenderTable.monthly\": \"Coût mensuel\",\n  \"LenderTable.perMonth\": \"/mois\",\n  \"LoanAdder.dialogTitle\": \"Ajouter une hypothèque\",\n  \"LoanSelector.addLoan\": \"Ajouter nouvelle demande\",\n  \"LoansPage.title\": \"Hypothèques\",\n  \"LoanStrategyPicker.description\": \"Il n'y a pas une seule stratégie parfaite pour structurer votre prêt, cependant, nous pouvons vous aiguiller dans la bonne direction grâce à notre savoir-faire.{verticalSpace}Sinon, utilisez notre outil interactif ci-dessous.\",\n  \"LoanStrategyPicker.disclaimer\": \"* Ce choix est indicatif, et vous permet de déterminer quelle stratégie vous conviendra le mieux.\",\n  \"LoanStrategyPicker.title\": \"Stratégie de taux\",\n  \"LoanSummaryColumn.createdAt\": \"Créé le\",\n  \"LoanSummaryColumn.ownFunds\": \"Fonds propres\",\n  \"LoanSummaryColumn.ownFundsPledged\": \"Fonds propres nantis\",\n  \"LoanSummaryColumn.propertyValue\": \"Valeur du bien\",\n  \"LoanSummaryColumn.status\": \"Statut\",\n  \"LoanSummaryColumn.updatedAt\": \"Updaté le\",\n  \"LoanSummaryList.noLoans\": \"Aucune hypothèque trouvée!\",\n  \"LoanTabs.actions\": \"Actions\",\n  \"LoanTabs.analytics\": \"Analytics\",\n  \"LoanTabs.borrowers\": \"Emprunteurs\",\n  \"LoanTabs.communication\": \"Communication\",\n  \"LoanTabs.files\": \"Documents\",\n  \"LoanTabs.forms\": \"Formulaires\",\n  \"LoanTabs.offers\": \"Offres des prêteurs\",\n  \"LoanTabs.overview\": \"Résumé\",\n  \"LoanTabs.properties\": \"Biens immobiliers\",\n  \"LoanTabs.structures\": \"Plans financiers\",\n  \"LoanTabs.tasks\": \"Tâches\",\n  \"LoanTaskInsertForm.label\": \"Ajouter tâche\",\n  \"LoanTaskInsertForm.dialogTitle\": \"Nouvelle tâche\",\n  \"LoanTaskInsertForm.dialogDescription\": \"Cette tâche sera liée à cette hypothèque\",\n  \"LoanTaskInsertForm.title\": \"Description\",\n  \"LoanValidation.comment\": \"Commentaire\",\n  \"LoanValidation.field\": \"Champ\",\n  \"LoanValidation.file\": \"Document\",\n  \"LoanValidation.invalidatedAt\": \"Invalidé le\",\n  \"LoanValidation.notYetRequested\": \"Vérification pas encore demandée\",\n  \"LoanValidation.requestedAt\": \"Vérification demandée le\",\n  \"LoanValidation.validatedAt\": \"Vérifié le\",\n  \"LoginForm.email\": \"Adresse e-mail\",\n  \"LoginForm.password\": \"Mot de passe\",\n  \"LoginPage.title\": \"Accédez à votre compte e-Potek\",\n  \"LoginPage.description\": \"Gérez votre demande de prêt hypothécaire, accompagné(e) par nos conseillers.\",\n  \"LoginPage.contactUs\": \"Contactez-nous.\",\n  \"LoginPage.loggedIn\": \"Vous êtes connecté\",\n  \"Microlocation.open\": \"Afficher l'expertise complète\",\n  \"Microlocation.close\": \"Masquer\",\n  \"Microlocation.distanceBusStopLabel\": \"Arrêt de transport public\",\n  \"Microlocation.distanceCenterLabel\": \"Centre\",\n  \"Microlocation.distanceHighVoltagePowerLineLabel\": \"Lignes à haute tension\",\n  \"Microlocation.distanceLakeLabel\": \"Lac\",\n  \"Microlocation.distanceMainRoadResidentialLabel\": \"Route principale (résidentielle)\",\n  \"Microlocation.distanceNuclearPowerLabel\": \"Centrale nucléaire\",\n  \"Microlocation.distanceRadioAntennaLabel\": \"Antenne radio mobile\",\n  \"Microlocation.distanceRailwayLabel\": \"Chemin de fer\",\n  \"Microlocation.distanceRecreationAreaLabel\": \"Espaces de détente, nature\",\n  \"Microlocation.distanceRiverLabel\": \"Rivière\",\n  \"Microlocation.distanceSchoolLabel\": \"École/jardin d'enfants\",\n  \"Microlocation.distanceShoppingLabel\": \"Centre commercial\",\n  \"Microlocation.expositionLabel\": \"Exposition\",\n  \"Microlocation.immissionLabel\": \"Émissions\",\n  \"Microlocation.immissionStreetDayLabel\": \"Émissions routières (journée)\",\n  \"Microlocation.immissionStreetNightLabel\": \"Émissions routières (nuit)\",\n  \"Microlocation.immissionTrainDayLabel\": \"Émissions ferroviaire (journée)\",\n  \"Microlocation.immissionTrainNightLabel\": \"Émissions ferroviaire (nuit)\",\n  \"Microlocation.infrastructureLabel\": \"Infrastructure\",\n  \"Microlocation.lakeViewLabel\": \"Vue sur le lac\",\n  \"Microlocation.mountainViewLabel\": \"Vue sur les montagnes\",\n  \"Microlocation.publicTransportGradeLabel\": \"Qualité de la desserte en transports publics\",\n  \"Microlocation.slopeInclinationLabel\": \"Inclinaison\",\n  \"Microlocation.sunShineDurationSummerLabel\": \"Durée d'ensoleillement en été\",\n  \"Microlocation.sunShineDurationWinterLabel\": \"Durée d'ensoleillement en hiver\",\n  \"Microlocation.terrainLabel\": \"Terrain, vue et climat\",\n  \"Microlocation.title\": \"Analyse géographique\",\n  \"MissingDoc.redirectHome\": \"Page d'accueil\",\n  \"MissingDoc.text\": \"Le document a été supprimé ou n'existe pas!\",\n  \"NewDocumentForm.cta\": \"Ajouter\",\n  \"NewDocumentForm.label\": \"Ajouter nouveau document à ce prêt\",\n  \"NewDocumentForm.placeholder\": \"Nom du document (visible à l'utilisateur)\",\n  \"NewLoanForm.nextButton\": \"Suivant\",\n  \"NewLoanForm.previousButton\": \"Précédent\",\n  \"NewLoanForm.submitButton\": \"Valider\",\n  \"NewLoanForm.title\": \"Nous avons besoin de quelques informations afin de commencer votre projet\",\n  \"NewLoanForm.loanNameText\": \"Donnez un nom à votre projet\",\n  \"NewLoanForm.loanNameLabel\": \"Nom du projet\",\n  \"NewLoanForm.propertyValueText\": \"Quel est le prix d'achat de votre bien immobilier ?\",\n  \"NewLoanForm.propertyValueLabel\": \"Prix d'achat\",\n  \"NewLoanForm.propertyValueInfo\": \"Arrondi à CHF 1000.- près\",\n  \"NewLoanForm.borrowerSalaryText\": \"Quel est votre salaire annuel brut ?\",\n  \"NewLoanForm.borrowerSalaryLabel\": \"Salaire annuel\",\n  \"NewLoanForm.borrowerFortuneText\": \"Quels sont vos fonds propres ?\",\n  \"NewLoanForm.borrowerFortuneLabel\": \"Fonds propres\",\n  \"NewLoanModal.description\": \"Ça nous permettra de l'identifier\",\n  \"NewLoanModal.label\": \"Nom du projet\",\n  \"NewLoanModal.placeholder\": \"Rue du Pré 2\",\n  \"NewLoanModal.title\": \"Donnez un nom à votre projet, il sera visible par e-Potek.\",\n  \"NewUserOptions.description\": \"Vous pourrez monter votre dossier, lancer les enchères, et conclure votre demande de prêt depuis ici.\",\n  \"NewUserOptions.title\": \"Ça à l'air bien vide ici!\",\n  \"NotFound.button\": \"Retourner à la maison\",\n  \"NotFound.description\": \"On dirait que vous vous êtes perdu!\",\n  \"NotFound.title\": \"Oops..\",\n  \"offer.amortization\": \"Amortissement\",\n  \"offer.averagedRate\": \"Taux lissé\",\n  \"offer.conditions\": \"Conditions de base\",\n  \"Forms.conditions\": \"Conditions de base\",\n  \"offer.counterparts\": \"Contreparties\",\n  \"Forms.counterparts\": \"Contreparties\",\n  \"offer.interest1\": \"Taux 1 an\",\n  \"offer.interest10\": \"Taux 10 ans\",\n  \"offer.interest15\": \"Taux 15 ans\",\n  \"offer.interest2\": \"Taux 2 ans\",\n  \"offer.interest20\": \"Taux 20 ans\",\n  \"offer.interest25\": \"Taux 25 ans\",\n  \"offer.interest5\": \"Taux 5 ans\",\n  \"Forms.interestLibor\": \"Taux Libor\",\n  \"Forms.interest1\": \"Taux 1 an\",\n  \"Forms.interest10\": \"Taux 10 ans\",\n  \"Forms.interest15\": \"Taux 15 ans\",\n  \"Forms.interest2\": \"Taux 2 ans\",\n  \"Forms.interest20\": \"Taux 20 ans\",\n  \"Forms.interest25\": \"Taux 25 ans\",\n  \"Forms.interest5\": \"Taux 5 ans\",\n  \"offer.interestLibor\": \"Taux Libor\",\n  \"offer.interest1.short\": \"1 an\",\n  \"offer.interest10.short\": \"10 ans\",\n  \"offer.interest15.short\": \"15 ans\",\n  \"offer.interest2.short\": \"2 ans\",\n  \"offer.interest20.short\": \"20 ans\",\n  \"offer.interest25.short\": \"25 ans\",\n  \"offer.interest5.short\": \"5 ans\",\n  \"offer.interestLibor.short\": \"Libor\",\n  \"offer.maxAmount\": \"Prêt maximal\",\n  \"Forms.maxAmount\": \"Prêt maximal\",\n  \"Forms.maxAmount.placeholder\": \"CHF 800 000\",\n  \"offer.monthly\": \"Coût Mensuel\",\n  \"offer.rating\": \"Rating\",\n  \"OfferAdder.buttonLabel\": \"Ajouter une offre\",\n  \"OfferAdder.dialogDescription\": \"Ce formulaire ne perd pas ses données si tu fermes ceci par accident\",\n  \"OfferAdder.dialogTitle\": \"Ajouter une offre\",\n  \"OfferAdder.discount\": \"Rabais (valeur positive)\",\n  \"OfferAdder.hasCounterparts\": \"Ajouter une deuxième offre avec contreparties\",\n  \"Forms.hasCounterparts\": \"Ajouter une 2ème offre avec contreparties\",\n  \"OfferAdder.isDiscount\": \"Taux contreparties avec flat discount\",\n  \"OfferAdder.organisation\": \"Nom du prêteur\",\n  \"OfferPickerPage.description\": \"Choisissez l'offre qui vous convient.\",\n  \"OfferPickerPage.title\": \"Les meilleures offres\",\n  \"OffersTable.amount\": \"Montant\",\n  \"OffersTable.conditions\": \"Conditions ?\",\n  \"OffersTable.libor\": \"Taux Libor\",\n  \"OffersTable.years\": \"{years, plural, one {Taux un an} other {Taux # ans}}\",\n  \"OfferToggle.counterpart-short\": \"Avec contrepartie\",\n  \"OfferToggle.counterpart\": \"Offres avec contrepartie ({count})\",\n  \"OfferToggle.standard-short\": \"Standard\",\n  \"OfferToggle.standard\": \"Offres standard ({count})\",\n  \"OverviewTab.emptyRecap\": \"Il manque le valeur du bien et/ou les fonds propres voulus pour afficher ce recap\",\n  \"OverviewTab.recap\": \"Récapitulatif\",\n  \"Page.footer.about\": \"À Propos\",\n  \"Page.footer.careers\": \"Carrières\",\n  \"Page.footer.conditions\": \"Conditions\",\n  \"Page.footer.contact\": \"Contact\",\n  \"Page.footer.faq\": \"FAQ\",\n  \"Forms.oldPassword\": \"Ancien mot de passe\",\n  \"Forms.newPassword\": \"Nouveau mot de passe\",\n  \"Forms.newPassword2\": \"Répéter mot de passe\",\n  \"PasswordLine.create\": \"Créer\",\n  \"PasswordLine.login\": \"Connexion\",\n  \"PasswordPage.button\": \"M'avertir du lancement\",\n  \"PasswordResetPage.confirmPassword\": \"Confirmer mot de passe\",\n  \"PasswordResetPage.CTA\": \"Login\",\n  \"PasswordResetPage.password\": \"Mot de passe\",\n  \"PasswordResetPage.title\": \"Bonjour {name}, choisissez un mot de passe\",\n  \"PasswordResetPage.description\": \"Choisissez votre nouveau mot de passe\",\n  \"PDF.borrowersInfos.age\": \"Âge\",\n  \"PDF.borrowersInfos.bonus\": \"Bonus considéré\",\n  \"PDF.borrowersInfos.category.fortune\": \"Patrimoine\",\n  \"PDF.borrowersInfos.income\": \"Revenus\",\n  \"PDF.borrowersInfos.children\": \"Enfants\",\n  \"PDF.borrowersInfos.civilStatus\": \"Statut matrimonial\",\n  \"PDF.borrowersInfos.civilStatus.DIVORCED\": \"Divorcé\",\n  \"PDF.borrowersInfos.civilStatus.MARRIED\": \"Marié\",\n  \"PDF.borrowersInfos.civilStatus.PACSED\": \"Pacsé\",\n  \"PDF.borrowersInfos.civilStatus.SINGLE\": \"Célibataire\",\n  \"PDF.borrowersInfos.civilStatus.WIDOW\": \"Voeuf\",\n  \"PDF.borrowersInfos.company\": \"Employeur\",\n  \"PDF.borrowersInfos.gender.F\": \"Madame\",\n  \"PDF.borrowersInfos.gender.M\": \"Monsieur\",\n  \"PDF.borrowersInfos.expenses.LEASING\": \"Leasings\",\n  \"PDF.borrowersInfos.expenses.OTHER\": \"Autres dépenses\",\n  \"PDF.borrowersInfos.expenses.PENSIONS\": \"Pensions et rentes versées\",\n  \"PDF.borrowersInfos.expenses.PERSONAL_LOAN\": \"Crédits personnels\",\n  \"PDF.borrowersInfos.expenses.THIRD_PARTY_FORTUNE_REIMBURSEMENT\": \"Remboursement prêt de tiers\",\n  \"PDF.borrowersInfos.expenses.THEORETICAL_REAL_ESTATE\": \"Charges théoriques immobilières\",\n  \"PDF.borrowersInfos.expenses.REAL_ESTATE_DELTA_POSITIVE\": \"Delta immobilier positif\",\n  \"PDF.borrowersInfos.expenses.REAL_ESTATE_DELTA_NEGATIVE\": \"Delta immobilier négatif\",\n  \"PDF.borrowersInfos.otherFortune\": \"Autre fortune\",\n  \"PDF.borrowersInfos.otherIncome.INVESTMENT\": \"Revenus de titres\",\n  \"PDF.borrowersInfos.otherIncome.OTHER\": \"Autres revenus\",\n  \"PDF.borrowersInfos.otherIncome.PENSIONS\": \"Pensions et rentes reçues\",\n  \"PDF.borrowersInfos.otherIncome.REAL_ESTATE\": \"Revenus immobiliers\",\n  \"PDF.borrowersInfos.otherIncome.WELFARE\": \"Allocations familiales\",\n  \"PDF.borrowersInfos.ownFund.bank3A\": \"3A bancaire\",\n  \"PDF.borrowersInfos.ownFund.bankFortune\": \"Cash et Titres\",\n  \"PDF.borrowersInfos.ownFund.insurance2\": \"LPP disponible\",\n  \"PDF.borrowersInfos.ownFund.insurance3A\": \"3A assurance\",\n  \"PDF.borrowersInfos.ownFund.insurance3B\": \"3B assurance\",\n  \"PDF.borrowersInfos.ownFund.thirdPartyFortune\": \"Prêt de tiers\",\n  \"PDF.borrowersInfos.realEstateDebt\": \"Dette y relative\",\n  \"PDF.borrowersInfos.realEstateValue\": \"Immobilier\",\n  \"PDF.borrowersInfos.salary\": \"Salaire annuel brut\",\n  \"PDF.borrowersInfos.netSalary\": \"Salaire annuel net\",\n  \"PDF.borrowersInfos.total\": \"Total considéré\",\n  \"PDF.borrowersInfos.totalFortune\": \"Fonds propres disponibles\",\n  \"PDF.borrowersInfos.totalIncome\": \"Total des revenus considérés\",\n  \"PDF.projectInfos.property.address\": \"Adresse\",\n  \"PDF.projectInfos.property.constructionYear\": \"Année de construction\",\n  \"PDF.projectInfos.property.flatType\": \"Type d'appartement\",\n  \"PDF.projectInfos.property.flatType.DUPLEX_APARTMENT\": \"Duplex\",\n  \"PDF.projectInfos.property.flatType.PENTHOUSE_APARTMENT\": \"Appartement attique\",\n  \"PDF.projectInfos.property.flatType.PENTHOUSE_MAISONETTE\": \"Duplex / attique\",\n  \"PDF.projectInfos.property.flatType.SINGLE_FLOOR_APARTMENT\": \"Appartement à l'étage\",\n  \"PDF.projectInfos.property.flatType.TERRACE_APARTMENT\": \"Appartment de rez-de-chaussée\",\n  \"PDF.projectInfos.property.floorNumber\": \"Étage de l'appartement\",\n  \"PDF.projectInfos.property.houseType\": \"Type de villa\",\n  \"PDF.projectInfos.property.houseType.ATTACHED_END_BUILDING\": \"Mitoyenne à l'extrémité de la rangée\",\n  \"PDF.projectInfos.property.houseType.ATTACHED_MID_TERRACE_BUILDING\": \"Mitoyenne au centre de la rangée\",\n  \"PDF.projectInfos.property.houseType.DETACHED\": \"Individuelle\",\n  \"PDF.projectInfos.property.insideArea\": \"Surface habitable\",\n  \"PDF.projectInfos.property.landArea\": \"Surface du terrain\",\n  \"PDF.projectInfos.property.maintenance\": \"Charges annuelles\",\n  \"PDF.projectInfos.property.minergie\": \"Certificat minergie\",\n  \"PDF.projectInfos.property.minergie.MINERGIE_ECO\": \"Minergie-ECO\",\n  \"PDF.projectInfos.property.minergie.MINERGIE_P_ECO\": \"Minergie-P-ECO\",\n  \"PDF.projectInfos.property.minergie.MINERGIE_P\": \"Minergie-P\",\n  \"PDF.projectInfos.property.minergie.OTHER_CERTIFICATE\": \"Autre certificat Minergie\",\n  \"PDF.projectInfos.property.minergie.WITHOUT_CERTIFICATE\": \"Sans certificat Minergie\",\n  \"PDF.projectInfos.property.numberOfFloors\": \"Nombre d'étages\",\n  \"PDF.projectInfos.property.parking\": \"Parking\",\n  \"PDF.projectInfos.property.propertyType\": \"Type de bien immobilier\",\n  \"PDF.projectInfos.property.propertyType.FLAT\": \"Appartement\",\n  \"PDF.projectInfos.property.propertyType.HOUSE\": \"Villa\",\n  \"PDF.projectInfos.property.renovationYear\": \"Année de rénovation\",\n  \"PDF.projectInfos.property.residenceType\": \"Type de résidence\",\n  \"PDF.projectInfos.property.roomCount\": \"Nombre de pièces\",\n  \"PDF.projectInfos.property.roomCount.tooltip\": \"La cuisine n'est pas comptablisée\",\n  \"PDF.projectInfos.property.terraceArea\": \"Surface des terrasses\",\n  \"PDF.projectInfos.property.title\": \"Bien immobilier\",\n  \"PDF.projectInfos.property.volume\": \"Volume du bâtiment\",\n  \"PDF.projectInfos.property.volumeNorm.SIA_116\": \"SIA 116\",\n  \"PDF.projectInfos.property.volumeNorm.SIA_416\": \"SIA 416\",\n  \"PDF.projectInfos.structure.amortization\": \"Amortissement théorique\",\n  \"PDF.projectInfos.structure.interests\": \"Intérêts théoriques\",\n  \"PDF.projectInfos.structure.maintenance\": \"Entretien théorique\",\n  \"PDF.projectInfos.structure.notaryFees\": \"Frais de notaire\",\n  \"PDF.projectInfos.structure.pledgedOwnFunds\": \"dont fonds propres nantis\",\n  \"PDF.ownFund.bank3A\": \"Banque 3A\",\n  \"PDF.ownFund.thirdPartyFortune\": \"Prêt de tiers\",\n  \"PDF.ownFund.bankFortune\": \"Épargne\",\n  \"PDF.ownFund.insurance2\": \"LPP\",\n  \"PDF.ownFund.insurance3A\": \"Assurance 3A\",\n  \"PDF.ownFund.insurance3B\": \"Assurance 3B\",\n  \"PDF.ownFund.bank3A.PLEDGE\": \"Nantissement banque 3A\",\n  \"PDF.ownFund.bank3A.WITHDRAW\": \"Retrait banque 3A\",\n  \"PDF.ownFund.insurance2.PLEDGE\": \"Nantissement LPP\",\n  \"PDF.ownFund.insurance2.WITHDRAW\": \"Retrait LPP\",\n  \"PDF.ownFund.insurance3A.PLEDGE\": \"Nantissement assurance 3A\",\n  \"PDF.ownFund.insurance3A.WITHDRAW\": \"Retrait assurance 3A\",\n  \"PDF.ownFund.insurance3B.PLEDGE\": \"Nantissement assurance 3B\",\n  \"PDF.ownFund.insurance3B.WITHDRAW\": \"Retrait assurance 3B\",\n  \"PDF.ownFundthirdPartyFortune\": \"Prêt de tiers\",\n  \"PDF.projectInfos.structure.postDisbursementSituation.title\": \"Situation post décaissement\",\n  \"PDF.projectInfos.structure.postDisbursementSituation.total\": \"Solde\",\n  \"PDF.projectInfos.structure.propertyValue\": \"Prix d'achat\",\n  \"PDF.projectInfos.structure.propertyWork\": \"Travaux à plus-value\",\n  \"PDF.projectInfos.structure.solvency\": \"Calcul de solvabilité\",\n  \"PDF.projectInfos.structure.title\": \"Plan financier\",\n  \"PDF.projectInfos.structure.totalCost\": \"Prix de revient\",\n  \"PDF.projectInfos.structure.usedOwnFunds\": \"Fonds propres utilisés\",\n  \"PDF.projectInfos.structure.usedOwnFunds.title\": \"Fonds propres utilisés\",\n  \"PDF.projectInfos.structure.usedOwnFunds.total\": \"Total des fonds propres\",\n  \"PDF.projectInfos.structure.wantedLoan\": \"Prêt hypothécaire souhaité\",\n  \"PDF.projectInfos.structure.wantedLoanRate\": \"Taux d'avance souhaité\",\n  \"PDF.purchaseType.ACQUISITION\": \"Acquisition\",\n  \"PDF.purchaseType.REFINANCING\": \"Refinancement\",\n  \"PDF.residenceType.MAIN_RESIDENCE\": \"Résidence principale\",\n  \"PDF.residenceType.INVESTMENT\": \"Bien d'investissement\",\n  \"PDF.residenceType.COMMERCE\": \"Bien commercial\",\n  \"PDF.residenceType.SECOND_RESIDENCE\": \"Résidence secondaire\",\n  \"PDF.title.borrowers\": \"Emprunteurs\",\n  \"PDF.title.offer\": \"Offre\",\n  \"PDF.title.project\": \"Projet\",\n  \"ProcessPageBar.next\": \"Suivant\",\n  \"ProcessPageBar.nextStep\": \"Prochaine étape\",\n  \"ProcessPageBar.previous\": \"Précédent\",\n  \"PropertiesPage.description\": \"Il nous faut des informations supplémentaires sur votre bien immobilier, nous pourrons alors mieux comprendre vos besoins, et vous indiquer si le prix du bien est conforme au marché.\",\n  \"Maps.incompleteAddress\": \"Entrez votre adresse complète pour afficher la carte!\",\n  \"PropertiesPage.progress\": \"Progrès: {value, number, percent}\",\n  \"PropertiesPage.title\": \"Biens immobiliers\",\n  \"property.expertise\": \"Expertise\",\n  \"property.expertiseStatus.DONE\": \"Effectuée\",\n  \"property.expertiseStatus.ERROR\": \"Erreur\",\n  \"property.expertiseStatus.NONE\": \"À faire\",\n  \"PropertyForm.adderDialogDescription\": \"Entrez les informations de votre bien immobilier\",\n  \"PropertyForm.adderDialogTitle\": \"Ajouter un bien immobilier\",\n  \"PropertyForm.adderLabel\": \"Ajouter un bien immobilier\",\n  \"PropertyForm.address1\": \"Adresse\",\n  \"PropertyForm.city\": \"Localité\",\n  \"PropertyForm.modifierDialogDescription\": \"Entrez les informations de votre bien immobilier\",\n  \"PropertyForm.modifierDialogTitle\": \"Modifier votre bien immobilier\",\n  \"PropertyForm.modifierLabel\": \"Modifier votre bien immobilier\",\n  \"PropertyForm.value\": \"Prix d'achat\",\n  \"PropertyForm.zipCode\": \"NPA\",\n  \"PropertyPage.title\": \"{count, plural, one {Mon bien immobilier} other {Notre bien immobilier}}\",\n  \"Recap.availableFunds\": \"Fonds propres disponibles\",\n  \"Recap.bankFortune\": \"Fortune bancaire\",\n  \"Recap.borrowRatio\": \"Prêt / Prix d'achat\",\n  \"Recap.borrowRatio1\": \"Prêt / Prix d'achat\",\n  \"Recap.borrowRatio2\": \"Prêt / Valeur du bien\",\n  \"Recap.consideredBonus\": \"Bonus considéré\",\n  \"Recap.consideredIncome\": \"Revenus considérés\",\n  \"Recap.details\": \"Détails\",\n  \"Recap.expenses\": \"Charges\",\n  \"Recap.financing\": \"Financement\",\n  \"Recap.finmaRules\": \"Règles FINMA\",\n  \"Recap.fortune\": \"Fortune\",\n  \"Recap.incomeRatio\": \"Charges / Revenus\",\n  \"Recap.insuranceFortune\": \"Fortune de prévoyance\",\n  \"Recap.interestedLenders\": \"Prêteurs intéressés\",\n  \"Recap.loanIncrease\": \"Augmentation du prêt\",\n  \"Recap.loanReduction\": \"Réduction du prêt\",\n  \"Recap.maxPossibleLoan\": \"Prêt max possible\",\n  \"Recap.maxPurchasePrice\": \"Prix d'achat maximal\",\n  \"Recap.monthlyCost\": \"Charges estimées\",\n  \"Recap.netFortune\": \"Fortune nette\",\n  \"Recap.otherFortune\": \"Autre fortune\",\n  \"Recap.otherIncome\": \"Autres revenus\",\n  \"Recap.ownFunds\": \"Fonds propres\",\n  \"Recap.ownFundsPledged\": \"Fonds propres nantis\",\n  \"Recap.ownFundsCash\": \"Fonds propres - Épargne\",\n  \"Recap.ownFundsInsurance\": \"Fonds Propres - Prévoyance\",\n  \"Recap.ownFundsInsurancePledged\": \"Nantissement prévoyance\",\n  \"Recap.ownFundsInsuranceWithdrawal\": \"Retrait prévoyance\",\n  \"Recap.ownFundsTotal\": \"Fonds Propres - Total\",\n  \"Recap.project\": \"Projet\",\n  \"Recap.propAndWork\": \"Valeur du bien\",\n  \"Recap.property\": \"Bien immobilier\",\n  \"Recap.propertyValue\": \"Valeur du bien\",\n  \"Recap.propertyWork\": \"Travaux de plus-value\",\n  \"Recap.purchasePrice\": \"Prix d'achat\",\n  \"Recap.realEstate\": \"Biens immobiliers\",\n  \"Recap.realEstateLoans\": \"Emprunts actuels\",\n  \"Recap.receivedRent\": \"Loyer perçu\",\n  \"Recap.title\": \"Projet (en CHF)\",\n  \"Recap.totalCost\": \"Coût total du projet\",\n  \"Recap.totalFinancing\": \"Financement total\",\n  \"roles.admin\": \"Employé e-Potek\",\n  \"roles.pro\": \"Pro\",\n  \"roles.dev\": \"Développeur\",\n  \"roles.lender\": \"Prêteur\",\n  \"roles.user\": \"Utilisateur\",\n  \"Search.placeholder\": \"Cherchez quelque chose..\",\n  \"SearchResults.none\": \"Aucun résultat\",\n  \"SideNavStepper.title\": \"PROGRESSION\",\n  \"SideNavUser.dashboard\": \"Tableau de Bord\",\n  \"SideNavUser.files\": \"Documents\",\n  \"SingleBorrowerPageHeader.address\": \"Adresse\",\n  \"SingleBorrowerPageHeader.age\": \"{value} ans\",\n  \"SingleBorrowerPageHeader.assignedTo\": \"Assigné à\",\n  \"SingleBorrowerPageHeader.createdBy\": \"Créé par\",\n  \"SinglePropertyPage.title\": \"Bien immobilier\",\n  \"SinglePropertyPageHeader.assignedTo\": \"Assigné à\",\n  \"StatusIconTooltip.borrowRatio.ERROR\": \"Attention: vous ne pouvez pas emprunter autant (max. 90%)\",\n  \"StatusIconTooltip.borrowRatio.SUCCESS\": \"Tout est bon !\",\n  \"StatusIconTooltip.borrowRatio.WARNING\": \"Attention: vous aurez accès à moins de prêteurs avec un rapport entre 80-90%\",\n  \"StatusIconTooltip.incomeRatio.ERROR\": \"Vos revenus sont insuffisants pour couvrir les charges\",\n  \"StatusIconTooltip.incomeRatio.SUCCESS\": \"Tout est bon !\",\n  \"StatusIconTooltip.incomeRatio.WARNING\": \"Attention: vous aurez accès à moins de prêteurs avec un rapport entre 33-38%\",\n  \"steps.borrowers.title\": \"Emprunteurs\",\n  \"Forms.step.SOLVENCY\": \"Attestation de financement\",\n  \"Forms.step.REQUEST\": \"Demande de prêt\",\n  \"Forms.step.OFFERS\": \"Obtenir des offres\",\n  \"Forms.step.CLOSING\": \"Décaissement du prêt\",\n  \"Forms.step.SOLVENCY.tooltip\": \"Renseignez votre profil financier, et identifiez votre capacité d'achat auprès de tous les prêteurs\",\n  \"Forms.step.REQUEST.tooltip\": \"Montez un dossier de financement complet, simulez votre situation future, et préparez-vous à obtenir des offres de financement\",\n  \"Forms.step.OFFERS.tooltip\": \"Découvrez les offres sur-mesure qu'e-Potek a obtenues pour vous, prenez des décisions financières stratégiques avec votre conseiller, et choisissez votre prêteur\",\n  \"StrategyChoices.recommended\": \"Recommandé pour vous\",\n  \"Table.empty\": \"Rien à afficher\",\n  \"Table.sort\": \"Trier\",\n  \"TaskStatusSetter.ACTIVE\": \"Actif\",\n  \"Forms.status.ACTIVE\": \"Actif\",\n  \"TaskStatusSetter.ADD_ASSIGNED_TO\": \"Ajouter un conseiller\",\n  \"TaskStatusSetter.CANCELLED\": \"Annulé\",\n  \"TaskStatusSetter.changeTaskStatus\": \"Changer le statut de la tâche\",\n  \"TaskStatusSetter.COMPLETED\": \"Terminé\",\n  \"Forms.status.COMPLETED\": \"Terminé\",\n  \"TaskStatusSetter.CUSTOM\": \"Personnalisé\",\n  \"TaskStatusSetter.LENDER_CHOSEN\": \"Prêteur choisi\",\n  \"TaskStatusSetter.USER_ADDED_FILE\": \"Vérifier nouveau document\",\n  \"TaskStatusSetter.VERIFY\": \"Vérifier\",\n  \"TasksTable.actions\": \"Actions\",\n  \"TasksTable.assignedTo\": \"Assigné à\",\n  \"TasksTable.completedAt\": \"Complété le\",\n  \"TasksTable.createdAt\": \"Créé le\",\n  \"TasksTable.dueAt\": \"Échéance\",\n  \"TasksTable.relatedTo\": \"Relatif à\",\n  \"TasksTable.status\": \"Statut\",\n  \"TasksTable.type\": \"Type\",\n  \"TasksTable.updatedAt\": \"Modifié le\",\n  \"TasksTable.title\": \"Titre\",\n  \"TasksTable.description\": \"Description\",\n  \"TasksTabs.allTasks\": \"Toutes les tâches\",\n  \"TasksTabs.myTasks\": \"Mes tâches\",\n  \"TasksTabs.unassignedTasks\": \"Tâches non assignées\",\n  \"tooltip.bonus\": \"Revenus variables supplémentaires à votre salaire qui ne sont pas un engagement ferme de la part de votre employeur.\",\n  \"tooltip.borrower\": \"Celui qui emprunte. La personne qui est à la recherche d’un financement hypothécaire deviendra l’emprunteur lorsque le prêteur aura mis à sa disposition la somme empruntée.\",\n  \"tooltip.borrowRatio\": \"Le ratio du prêt hypothécaire et du prix d’achat (ou de la valeur du logement) est également appelé le taux d’avance par les prêteurs.\",\n  \"tooltip.financialPlan\": \"Le plan financier représente la structure de financement de votre projet.\",\n  \"tooltip.finma\": \"Autorité fédérale de surveillance des marchés financiers.\",\n  \"tooltip.income\": \"La somme cumulée des revenus bruts que perçoivent tous les emprunteurs\",\n  \"tooltip.incomeRatio\": \"Le ratio des charges financières théoriques et de vos revenus considérés est également appelé le taux d’effort par les prêteurs.\",\n  \"tooltip.interestedLenders\": \"Nous sommes en contact fréquent avec plus de 15 prêteurs. La quantité de prêteurs intéressés dépend de différents critères.\",\n  \"tooltip2.bonus\": \"Les bonus sont les montants variables que l’emprunteur perçoit. Les prêteurs ne les prennent pas en considération à 100%.{verticalSpace}Par exemple, si vous avez perçu des bonus ces 3 dernières années de 20, 30 et 40 CHF, nous utiliserons 50% de la moyenne de 20, 30 et 40, soit 15 CHF.\",\n  \"tooltip2.borrowRatio\": \"Tous les prêteurs ont des critères différents concernant les taux d’avance. Il délimite le montant maximal qu’un emprunteur peut obtenir par rapport au type de bien immobilier. Nous parlons souvent d’un taux d’avance de 80% de la valeur du logement. Cependant certains établissements ont des critères plus stricts et ne peuvent pas dépasser un taux d’avance de 65% de la valeur du logement.\",\n  \"tooltip2.financialPlan\": \"Il met en évidence la/les façon(s) dont vous pouvez financer votre projet, à l’aide de (1) vos fonds propres ainsi que (2) du Financement Hypothécaire que vous pouvez solliciter. Le plan financier vous permet d’identifier en un coup d’oeil les différents poste de votre projet (1) La Valeur du logement ou son prix d’achat (2) le montant des crédits existants que vous souhaiteriez refinancer (3) les éventuels frais de notaires (4) le montant des travaux si votre projet en contient.\",\n  \"tooltip2.finma\": \"La FINMA détermine les règles que doivent suivre les banques et les intermédiaires financiers. Elle détermine notamment quelles sont les conditions minimales à remplir pour que vous puissiez obtenir un prêt. Les taux sont très bas aujourd'hui, mais si vos finances ne sont pas assez solides et que les taux montent, vous pourriez avoir de sérieuses difficultés financières.\",\n  \"tooltip2.income\": \"Tous les prêteurs ont des critères différents pour calculer les revenus disponibles des emprunteurs. Ce calcul permet aux prêteurs d’identifier si les emprunteurs ont la capacité d’assumer la charge financière que va générer le financement hypothécaire selon les règles établies par la FINMA.{verticalSpace}Voici un exemple de calcul de revenus considérés :{verticalSpace}Salaire brut de tous les emprunteurs, (+) Derniers bonus considérés à 50%, (+) Allocations Familiales, (+) Autres allocations / pensions, (+) Revenus de la Fortune immobilière, (+) Revenus de la Fortune mobilière, (-) Loyers existants, (-) Leasings et autres charges d’intérêt et d’amortissement de crédit existant, (-) Pensions\",\n  \"tooltip2.incomeRatio\": \"Tous les prêteurs ont des critères différents pour calculer ce ratio. Ce calcul permet aux prêteurs de déterminer s’ils considèrent que vous pourrez assumer les charges du prêt hypothécaire que vous sollicitez même en cas de forte hausse des taux. En effet, les taux d’intérêt sont très bas aujourd’hui. Mais pour éviter une crise économique en cas de forte hausse des taux d’intérêt, les banques ont le devoir de prendre en compte une possible hausse des taux.{verticalSpace}C’est pour cela que le taux d’intérêt théorique imposé par la FINMA est souvent calculé à hauteur de 5%. A ce taux vous devez prendre en compte un amortissement et des charges d’entretien également théorique.\",\n  \"TooltipSynonyms.title\": \"{count, plural, one {Synonyme} other {Synonymes}}\",\n  \"TopNav.login\": \"Login\",\n  \"TopNavDropdown.account\": \"Mon Compte\",\n  \"TopNavDropdown.admin\": \"Admin Dashboard\",\n  \"TopNavDropdown.dashboard\": \"Tableau de Bord\",\n  \"TopNavDropdown.dev\": \"< dev />\",\n  \"TopNavDropdown.logout\": \"Déconnexion\",\n  \"TopNavDropdown.partner\": \"Partner Dashboard\",\n  \"TosPage.description\": \"<En Développement />\",\n  \"TosPage.title\": \"Termes et Conditions\",\n  \"Tranche.tranche\": \"Tranche\",\n  \"TrancheChart.rest\": \"Montant restant à attribuer\",\n  \"TrancheChart.value\": \"Montant\",\n  \"TrancheCount.add\": \"Ajouter\",\n  \"TrancheCount.description\": \"Nombre de tranches:\",\n  \"TranchePicker.add\": \"+ Ajouter une tranche\",\n  \"Uploader.fileCount\": \"{count, plural, =0 {Pas de fichiers} one {Un fichier} other {# fichiers}}\",\n  \"UsersTable.actions\": \"Actions\",\n  \"UsersTable.assignedTo\": \"Assigné à\",\n  \"UsersTable.createdAt\": \"Créé le\",\n  \"UsersTable.email\": \"Email\",\n  \"UsersTable.name\": \"Nom\",\n  \"UsersTable.roles\": \"Rôles\",\n  \"UsersTabs.allUsers\": \"Tous les utilisateurs\",\n  \"UsersTabs.myUsers\": \"Mes utilisateurs\",\n  \"ValidatorItem.error.fortune\": \"Manque de fortune\",\n  \"ValidatorItem.error.fortuneTight\": \"Possible avec prévoyance\",\n  \"ValidatorItem.error.income\": \"Manque de revenus\",\n  \"ValidatorItem.error.incomeTight\": \"Revenus limite limite\",\n  \"ValidatorItem.isValid\": \"Acquisition possible!\",\n  \"VerificationPage.CTA.warning\": \"Vous ne pourrez plus modifier vos informations et vos documents\",\n  \"VerificationPage.CTA\": \"Envoyer mon dossier\",\n  \"VerificationPage.CTA2\": \"Re-Vérifier\",\n  \"VerificationPage.description\": \"Votre dossier va être analysé en détail par les professionels d'e-Potek, et votre conseiller vous aidera pour préparer la meilleure demande possible.\",\n  \"VerificationPage.failedDescription\": \"Votre expert a vérifié votre dossier, et y a trouvé une faille. Veuillez addresser les points ci-dessous puis demander une re-vérification.{verticalSpace}N'hésitez pas à appeler votre expert en cas de doute.\",\n  \"VerificationPage.failedTitle\": \"Il y a eu un petit souci\",\n  \"VerificationPage.successDescription\": \"Les informations que vous nous avez confiées nous ont permis de vérifier l'intégrité et la qualité de votre demande de prêt.\",\n  \"VerificationPage.successTitle\": \"Votre dossier est valide!\",\n  \"VerificationRequested.description\": \"Vérification en cours, vous serez averti par email lorsque c'est fait.\",\n  \"Widget1Finma.title\": \"Règles FINMA\",\n  \"Widget1FinmaLine.borrowRule\": \"Prêt / Prix d'achat\",\n  \"Widget1FinmaLine.incomeRule\": \"Charges / Revenus\",\n  \"Widget1Inputs.title\": \"Calculateur\",\n  \"Widget1InputsError.borrowError\": \"Les fonds propres ne suffisent pas pour votre projet. Continuez et parlons-en\",\n  \"Widget1InputsError.borrowWarning\": \"Les fonds propres ne sont pas dans les normes attendues, mais il existe des solutions. Continuez et parlons-en\",\n  \"Widget1InputsError.empty\": \"Entrez des valeurs dans les champs au dessus !\",\n  \"Widget1InputsError.incomeError\": \"Les revenus ne suffisent pas pour votre projet. Continuez et parlons-en\",\n  \"Widget1InputsError.incomeWarning\": \"Les revenus ne sont pas dans les normes attendues, mais il existe des solutions. Continuez et parlons-en\",\n  \"Widget1InputsError.success\": \"Tout est bon !\",\n  \"Widget1LenderCount.label\": \"Prêteurs intéressés\",\n  \"Widget1Monthly.amortization\": \"Amortissement\",\n  \"Widget1Monthly.interests\": \"Intérêts\",\n  \"Widget1Monthly.maintenance\": \"Frais d'entretien\",\n  \"Widget1Monthly.title\": \"Charges Estimées\",\n  \"Widget1MonthlyInterests.label\": \"Taux d'intérêt indicatif\",\n  \"Widget1MonthlyInterests.optionLabel\": \"{type} moyen: {rate}\",\n  \"Widget1MonthlyMaintenance.label\": \"Frais d'entretien\",\n  \"Widget1MonthlyMaintenance.no\": \"Sans\",\n  \"Widget1MonthlyMaintenance.yes\": \"Estimation\",\n  \"Widget1OptionSelector.ACQUISITION\": \"Acquisition\",\n  \"Widget1OptionSelector.INVESTMENT\": \"Bien de rendement\",\n  \"Widget1OptionSelector.MAIN_RESIDENCE\": \"Résidence principale\",\n  \"Widget1OptionSelector.PRIMARY\": \"Résidence principale\",\n  \"Widget1OptionSelector.REFINANCING\": \"Refinancement\",\n  \"Widget1OptionSelector.SECOND_RESIDENCE\": \"Résidence secondaire\",\n  \"Widget1OptionSelector.SECONDARY\": \"Résidence secondaire\",\n  \"Widget1Page.description\": \"Déterminez facilement combien vous devez gagner, combien de fonds propres vous devez mettre, ou la valeur maximale du bien que vous pouvez acquérir.\",\n  \"Widget1Page.title\": \"Calculateur hypothécaire\",\n  \"Widget1Recap.title\": \"Plan Financier\",\n  \"Widget1SingleInput.currentLoan\": \"Prêt existant\",\n  \"Widget1SingleInput.fortune\": \"Fonds propres\",\n  \"Widget1SingleInput.property\": \"Prix d'achat\",\n  \"Widget1SingleInput.propertyValue\": \"Valeur du bien\",\n  \"Widget1SingleInput.salary\": \"Revenus annuels bruts\",\n  \"Widget1SingleInput.wantedLoan\": \"Nouveau prêt\",\n  \"Widget1SingleInputSlider.buttonTooltip\": \"Agrandir le slider\",\n  \"Widget1SingleInputSlider.buttonTooltipLoan\": \"Emprunter plus\",\n  \"WwwFooterLinks.about\": \"À propos\",\n  \"WwwFooterLinks.careers\": \"Carrières\",\n  \"WwwFooterLinks.company\": \"e-Potek SA est une société régulée par la FINMA.\",\n  \"WwwFooterLinks.conditions\": \"Conditions Générales\",\n  \"WwwFooterLinks.contact\": \"Nous contacter\",\n  \"WwwFooterLinks.faq\": \"FAQ\",\n  \"WwwFooterLinks.info\": \"Liens utiles\",\n  \"WwwFooterLinks.interests\": \"Nos taux\",\n  \"WwwTopNavLinks.about\": \"À propos\",\n  \"WwwTopNavLinks.careers\": \"Carrières\",\n  \"WwwTopNavLinks.contact\": \"Nous contacter\",\n  \"WwwTopNavLinks.faq\": \"FAQ\",\n  \"WwwTopNavLinks.interests\": \"Nos taux\"\n};\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"startup\":{\"server\":{\"fetchIrs10yCron.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/startup/server/fetchIrs10yCron.js                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet SyncedCron;\nmodule.link(\"meteor/littledata:synced-cron\", {\n  SyncedCron(v) {\n    SyncedCron = v;\n  }\n\n}, 1);\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 2);\nlet logError;\nmodule.link(\"../../core/api/methods\", {\n  logError(v) {\n    logError = v;\n  }\n\n}, 3);\nlet irs10yFetch;\nmodule.link(\"../../core/api/irs10y/server/methods\", {\n  irs10yFetch(v) {\n    irs10yFetch = v;\n  }\n\n}, 4);\nlet CronitorService;\nmodule.link(\"../../core/api/cronitor/server/CronitorService\", {\n  default(v) {\n    CronitorService = v;\n  }\n\n}, 5);\nlet SlackService;\nmodule.link(\"../../core/api/slack/server/SlackService\", {\n  default(v) {\n    SlackService = v;\n  }\n\n}, 6);\n\nconst getRandomMinute = () => Math.floor(Math.random() * 49) + 10;\n\nconst jobName = 'Fetch IRS 10Y';\nconst cronitor = new CronitorService({\n  id: '19MCrQ'\n}); // Make this a function so that randomMinute is always different\n\nconst job = () => ({\n  name: jobName,\n\n  schedule(parser) {\n    const randomMinute = getRandomMinute();\n    const tomorrow = moment().add(1, 'days').format('dddd');\n    const parserText = `at 6:${randomMinute} on ${tomorrow}`;\n    const parsedText = parser.text(parserText);\n    return parsedText;\n  },\n\n  job() {\n    try {\n      cronitor.run().then(() => irs10yFetch.run({})).then(cronitor.complete).then(() => {\n        SyncedCron.remove(jobName);\n        SyncedCron.add(job());\n      }).catch(error => {\n        if (error.message && error.message.includes('existe déjà')) {\n          return cronitor.complete(error.message);\n        }\n\n        return cronitor.fail(error);\n      });\n    } catch (error) {\n      SlackService.sendError({\n        error,\n        additionalData: ['IRS 10Y CRON error']\n      });\n    }\n  }\n\n});\n\nSyncedCron.config({\n  logger: ({\n    level,\n    message,\n    tag\n  }) => {\n    if (Meteor.isProduction) {\n      console.log('---------------------- CRON LOG ----------------------');\n      console.log('Level', level);\n      console.log('Message', message);\n      console.log('Tag', tag);\n    }\n  }\n});\nSyncedCron.add(job());\nMeteor.startup(() => {\n  try {\n    SyncedCron.start();\n  } catch (error) {\n    logError.run({\n      error\n    });\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/startup/server/index.js                                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./startup\");\nmodule.link(\"../../core/api/server\");\nmodule.link(\"../../core/api/api\");\nmodule.link(\"../../core/fixtures\");\nmodule.link(\"../../core/startup/server/kadira\");\nmodule.link(\"../../core/startup/accounts-config\");\nmodule.link(\"./restAPI\");\nmodule.link(\"../../core/api/loans/server/expireLoansCron\");\nmodule.link(\"../../core/api/notifications/server/notificationGeneratorCron\");\nmodule.link(\"../../core/api/updateWatchers/server/updateWatcherCron\");\nmodule.link(\"./fetchIrs10yCron\");\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"restAPI.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/startup/server/restAPI.js                                                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet RESTAPI;\nmodule.link(\"../../core/api/RESTAPI/server/RESTAPI\", {\n  default(v) {\n    RESTAPI = v;\n  }\n\n}, 1);\nlet getPropertyLoansAPI, getUserAPI, interestRatesAPI, inviteUserToPromotionAPI, inviteCustomerToProPropertiesAPI, mortgageEstimateAPI, referCustomerAPI, testEndpointAPI, updatePropertyAPI, insertPropertyAPI, uploadFileAPI, deleteFileAPI, getPropertyAPI;\nmodule.link(\"../../core/api/RESTAPI/server/endpoints\", {\n  getPropertyLoansAPI(v) {\n    getPropertyLoansAPI = v;\n  },\n\n  getUserAPI(v) {\n    getUserAPI = v;\n  },\n\n  interestRatesAPI(v) {\n    interestRatesAPI = v;\n  },\n\n  inviteUserToPromotionAPI(v) {\n    inviteUserToPromotionAPI = v;\n  },\n\n  inviteCustomerToProPropertiesAPI(v) {\n    inviteCustomerToProPropertiesAPI = v;\n  },\n\n  mortgageEstimateAPI(v) {\n    mortgageEstimateAPI = v;\n  },\n\n  referCustomerAPI(v) {\n    referCustomerAPI = v;\n  },\n\n  testEndpointAPI(v) {\n    testEndpointAPI = v;\n  },\n\n  updatePropertyAPI(v) {\n    updatePropertyAPI = v;\n  },\n\n  insertPropertyAPI(v) {\n    insertPropertyAPI = v;\n  },\n\n  uploadFileAPI(v) {\n    uploadFileAPI = v;\n  },\n\n  deleteFileAPI(v) {\n    deleteFileAPI = v;\n  },\n\n  getPropertyAPI(v) {\n    getPropertyAPI = v;\n  }\n\n}, 2);\nlet makeFileUploadDir, flushFileUploadDir;\nmodule.link(\"../../core/utils/filesUtils\", {\n  makeFileUploadDir(v) {\n    makeFileUploadDir = v;\n  },\n\n  flushFileUploadDir(v) {\n    flushFileUploadDir = v;\n  }\n\n}, 3);\nconst api = new RESTAPI();\napi.addEndpoint('/promotions/:promotionId/invite-customer', 'POST', inviteUserToPromotionAPI);\napi.addEndpoint('/properties/invite-customer', 'POST', inviteCustomerToProPropertiesAPI);\napi.addEndpoint('/properties/:propertyId/loans', 'GET', getPropertyLoansAPI);\napi.addEndpoint('/properties/:propertyId', 'POST', updatePropertyAPI);\napi.addEndpoint('/users', 'POST', referCustomerAPI);\napi.addEndpoint('/users', 'GET', getUserAPI);\napi.addEndpoint('/test', 'POST', testEndpointAPI);\napi.addEndpoint('/test', 'GET', testEndpointAPI);\napi.addEndpoint('/test', 'PUT', testEndpointAPI);\napi.addEndpoint('/test', 'DELETE', testEndpointAPI);\napi.addEndpoint('/test/:id', 'POST', testEndpointAPI);\napi.addEndpoint('/test/:id', 'GET', testEndpointAPI);\napi.addEndpoint('/test/:id', 'PUT', testEndpointAPI);\napi.addEndpoint('/test/:id', 'DELETE', testEndpointAPI);\napi.addEndpoint('/interest-rates/latest', 'GET', interestRatesAPI);\napi.addEndpoint('/calculator/mortgage-estimate', 'GET', mortgageEstimateAPI);\napi.addEndpoint('/properties', 'POST', insertPropertyAPI);\napi.addEndpoint('/upload', 'POST', uploadFileAPI, {\n  multipart: true\n});\napi.addEndpoint('/deleteFile', 'POST', deleteFileAPI);\napi.addEndpoint('/properties/:propertyId', 'GET', getPropertyAPI);\nMeteor.startup(() => {\n  makeFileUploadDir();\n  flushFileUploadDir();\n  api.start();\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"startup.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/startup/server/startup.js                                                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nMeteor.microservice = 'backend';\n\nif (Meteor.isAppTest) {\n  Meteor.isTest = true;\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}},\"server\":{\"main.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// server/main.js                                                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"../imports/startup/server\");\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".jsx\"\n  ]\n});\n\nvar exports = require(\"/server/main.js\");","hash":"c1240094848b559e960c83443b80415eaebf0aa4","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/core/api/pdf/server/pdfComponents/LoanBankPDF/LoanBankCover/LoanBankCover.jsx","imports/core/api/pdf/server/pdfComponents/LoanBankPDF/LoanBankCover/LoanBankCoverHeader.jsx","imports/core/api/pdf/server/pdfComponents/LoanBankPDF/LoanBankCover/StructureRecapTable.jsx","imports/core/api/pdf/server/pdfComponents/LoanBankPDF/LoanBankCover/index.js","imports/core/api/pdf/server/pdfComponents/LoanBankPDF/LoanBankCover/styles.js","imports/core/api/pdf/server/pdfComponents/LoanBankPDF/LoanBankPDF.jsx","imports/core/api/pdf/server/pdfComponents/LoanBankPDF/index.js","imports/core/api/pdf/server/pdfComponents/LoanBankPDF/stylesheet.js","imports/core/api/pdf/server/pdfComponents/pages/BorrowersPdfPage/BorrowersPdfPage.jsx","imports/core/api/pdf/server/pdfComponents/pages/BorrowersPdfPage/BorrowersRecap.jsx","imports/core/api/pdf/server/pdfComponents/pages/BorrowersPdfPage/BorrowersRecapFinance.jsx","imports/core/api/pdf/server/pdfComponents/pages/BorrowersPdfPage/BorrowersRecapInfo.jsx","imports/core/api/pdf/server/pdfComponents/pages/BorrowersPdfPage/borrowersRecapHelpers.jsx","imports/core/api/pdf/server/pdfComponents/pages/BorrowersPdfPage/index.js","imports/core/api/pdf/server/pdfComponents/pages/BorrowersPdfPage/recapStyleSheet.js","imports/core/api/pdf/server/pdfComponents/pages/BorrowersPdfPage/styles.js","imports/core/api/pdf/server/pdfComponents/pages/LenderRulesPdfPage/LenderRulesPdfPage.jsx","imports/core/api/pdf/server/pdfComponents/pages/LenderRulesPdfPage/LenderRulesPdfTable.jsx","imports/core/api/pdf/server/pdfComponents/pages/LenderRulesPdfPage/index.js","imports/core/api/pdf/server/pdfComponents/pages/LenderRulesPdfPage/lenderRulesArrays.jsx","imports/core/api/pdf/server/pdfComponents/pages/LenderRulesPdfPage/stylesheet.js","imports/core/api/pdf/server/pdfComponents/pages/PropertyPdfPage/OtherRealEstateTable.jsx","imports/core/api/pdf/server/pdfComponents/pages/PropertyPdfPage/PdfGoogleMap.jsx","imports/core/api/pdf/server/pdfComponents/pages/PropertyPdfPage/PdfPropertyDetails.jsx","imports/core/api/pdf/server/pdfComponents/pages/PropertyPdfPage/PropertyPdfPage.jsx","imports/core/api/pdf/server/pdfComponents/pages/PropertyPdfPage/index.js","imports/core/api/pdf/server/pdfComponents/pages/PropertyPdfPage/stylesheet.js","imports/core/api/pdf/server/pdfComponents/pages/StructurePdfPage/BalanceSheet.jsx","imports/core/api/pdf/server/pdfComponents/pages/StructurePdfPage/IncomeAndExpenses.jsx","imports/core/api/pdf/server/pdfComponents/pages/StructurePdfPage/RemainingOwnFundsTable.jsx","imports/core/api/pdf/server/pdfComponents/pages/StructurePdfPage/StructurePdfPage.jsx","imports/core/api/pdf/server/pdfComponents/pages/StructurePdfPage/index.js","imports/core/api/pdf/server/pdfComponents/pages/StructurePdfPage/stylesheet.js","imports/core/api/pdf/server/pdfComponents/BalanceSheetTable/BalanceSheetTable.jsx","imports/core/api/pdf/server/pdfComponents/BalanceSheetTable/index.js","imports/core/api/pdf/server/pdfComponents/Pdf/Pdf.jsx","imports/core/api/pdf/server/pdfComponents/PdfPage/PdfPage.jsx","imports/core/api/pdf/server/pdfComponents/PdfPage/PdfPageFooter.jsx","imports/core/api/pdf/server/pdfComponents/PdfPage/PdfPageHeader.jsx","imports/core/api/pdf/server/pdfComponents/PdfPage/PdfPageStyles.js","imports/core/api/pdf/server/pdfComponents/PdfPage/PdfPageTitle.jsx","imports/core/api/pdf/server/pdfComponents/PdfPage/index.js","imports/core/api/pdf/server/pdfComponents/PdfTable/PdfTable.jsx","imports/core/api/pdf/server/pdfComponents/PdfTable/PdfTableRow.jsx","imports/core/api/pdf/server/pdfComponents/PdfTable/PdfTableStyles.js","imports/core/api/pdf/server/pdfComponents/PdfTable/PdfTableTooltips.jsx","imports/core/api/pdf/server/pdfComponents/PdfTable/index.js","imports/core/api/pdf/server/pdfComponents/utils/styleHelpers.js","imports/core/api/pdf/server/PDFService.js","imports/core/api/pdf/server/methods.js","imports/core/api/pdf/server/pdfHelpers.js","imports/core/api/pdf/server/pdfValidators.js","imports/core/api/pdf/methodDefinitions.js","imports/core/api/pdf/pdfConstants.js","imports/core/api/RESTAPI/server/endpoints/deleteFile.js","imports/core/api/RESTAPI/server/endpoints/getProperty.js","imports/core/api/RESTAPI/server/endpoints/getPropertyLoans.js","imports/core/api/RESTAPI/server/endpoints/getUser.js","imports/core/api/RESTAPI/server/endpoints/helpers.js","imports/core/api/RESTAPI/server/endpoints/index.js","imports/core/api/RESTAPI/server/endpoints/insertProperty.js","imports/core/api/RESTAPI/server/endpoints/interestRates.js","imports/core/api/RESTAPI/server/endpoints/inviteCustomerToProProperties.js","imports/core/api/RESTAPI/server/endpoints/inviteUserToPromotion.js","imports/core/api/RESTAPI/server/endpoints/mortgageEstimate.js","imports/core/api/RESTAPI/server/endpoints/referCustomer.js","imports/core/api/RESTAPI/server/endpoints/testEndpoint.js","imports/core/api/RESTAPI/server/endpoints/updateProperty.js","imports/core/api/RESTAPI/server/endpoints/uploadFile.js","imports/core/api/RESTAPI/server/RESTAPI.js","imports/core/api/RESTAPI/server/helpers.js","imports/core/api/RESTAPI/server/middlewares.js","imports/core/api/RESTAPI/server/noncesHandler.js","imports/core/api/RESTAPI/server/restApiConstants.js","imports/core/api/email/server/components/PromotionLogos.jsx","imports/core/api/email/server/EmailService.js","imports/core/api/email/server/accountsEmails.js","imports/core/api/email/server/emailConfigs.js","imports/core/api/email/server/emailHelpers.js","imports/core/api/email/server/emailListeners.js","imports/core/api/email/server/index.js","imports/core/api/email/server/mandrill.js","imports/core/api/email/server/methods.js","imports/core/api/email/emailConstants.js","imports/core/api/email/methodDefinitions.js","imports/core/api/activities/server/ActivityService.js","imports/core/api/activities/server/activityListeners.js","imports/core/api/activities/server/exposures.js","imports/core/api/activities/server/hooks.js","imports/core/api/activities/server/methods.js","imports/core/api/activities/activities.js","imports/core/api/activities/activityConstants.js","imports/core/api/activities/index.js","imports/core/api/activities/links.js","imports/core/api/activities/methodDefinitions.js","imports/core/api/activities/queries.js","imports/core/api/analytics/server/Analytics.js","imports/core/api/analytics/server/TestAnalytics.js","imports/core/api/analytics/server/analyticsHelpers.js","imports/core/api/analytics/server/eventsConfig.js","imports/core/api/analytics/server/methods.js","imports/core/api/analytics/analyticsConstants.js","imports/core/api/analytics/events.js","imports/core/api/analytics/methodDefinitions.js","imports/core/api/borrowers/schemas/BorrowerSchema.js","imports/core/api/borrowers/schemas/otherSchemas.js","imports/core/api/borrowers/server/BorrowerService.js","imports/core/api/borrowers/server/exposures.js","imports/core/api/borrowers/server/hooks.js","imports/core/api/borrowers/server/methods.js","imports/core/api/borrowers/server/serverReducers.js","imports/core/api/borrowers/borrowerConstants.js","imports/core/api/borrowers/borrowers.js","imports/core/api/borrowers/borrowersAdditionalDocuments.js","imports/core/api/borrowers/fakes.js","imports/core/api/borrowers/index.js","imports/core/api/borrowers/links.js","imports/core/api/borrowers/methodDefinitions.js","imports/core/api/borrowers/queries.js","imports/core/api/borrowers/reducers.js","imports/core/api/contacts/schemas/contactSchema.js","imports/core/api/contacts/server/ContactService.js","imports/core/api/contacts/server/exposures.js","imports/core/api/contacts/server/hooks.js","imports/core/api/contacts/server/methods.js","imports/core/api/contacts/server/serverReducers.js","imports/core/api/contacts/contacts.js","imports/core/api/contacts/contactsConstants.js","imports/core/api/contacts/index.js","imports/core/api/contacts/links.js","imports/core/api/contacts/methodDefinitions.js","imports/core/api/contacts/queries.js","imports/core/api/contacts/reducers.js","imports/core/api/cronitor/server/CronitorService.js","imports/core/api/events/ClientEventService/ClientEventService.js","imports/core/api/events/ClientEventService/eventNames.js","imports/core/api/events/ClientEventService/index.js","imports/core/api/events/server/ServerEventService.js","imports/core/api/events/server/registerServerListeners.js","imports/core/api/events/EventService.js","imports/core/api/files/server/FileService.js","imports/core/api/files/server/S3Service.js","imports/core/api/files/server/meteor-slingshot-server.js","imports/core/api/files/server/methods.js","imports/core/api/files/server/uploadDirective.js","imports/core/api/files/documents.js","imports/core/api/files/fileConstants.js","imports/core/api/files/fileHelpers.js","imports/core/api/files/meteor-slingshot.js","imports/core/api/files/methodDefinitions.js","imports/core/api/helpers/server/QueryCacher.js","imports/core/api/helpers/server/methodServerHelpers.js","imports/core/api/helpers/CollectionService.js","imports/core/api/helpers/helpers.js","imports/core/api/helpers/index.js","imports/core/api/helpers/mongoHelpers.js","imports/core/api/helpers/sharedHooks.js","imports/core/api/helpers/sharedSchemaConstants.js","imports/core/api/helpers/sharedSchemas.js","imports/core/api/impersonation/server/ImpersonateService.js","imports/core/api/impersonation/server/methods.js","imports/core/api/impersonation/methodDefinitions.js","imports/core/api/interestRates/schemas/interestRatesSchema.js","imports/core/api/interestRates/server/InterestRatesService.js","imports/core/api/interestRates/server/exposures.js","imports/core/api/interestRates/server/methods.js","imports/core/api/interestRates/fakes.js","imports/core/api/interestRates/index.js","imports/core/api/interestRates/interestRates.js","imports/core/api/interestRates/interestRatesConstants.js","imports/core/api/interestRates/methodDefinitions.js","imports/core/api/interestRates/queries.js","imports/core/api/irs10y/schemas/irs10ySchema.js","imports/core/api/irs10y/server/Irs10yService.js","imports/core/api/irs10y/server/exposures.js","imports/core/api/irs10y/server/fetchIrs10y.js","imports/core/api/irs10y/server/methods.js","imports/core/api/irs10y/index.js","imports/core/api/irs10y/irs10y.js","imports/core/api/irs10y/irs10yConstants.js","imports/core/api/irs10y/methodDefinitions.js","imports/core/api/irs10y/queries.js","imports/core/api/lenderRules/schemas/lenderRulesSchema.js","imports/core/api/lenderRules/server/LenderRulesService.js","imports/core/api/lenderRules/server/exposures.js","imports/core/api/lenderRules/server/methods.js","imports/core/api/lenderRules/helpers.js","imports/core/api/lenderRules/index.js","imports/core/api/lenderRules/lenderRules.js","imports/core/api/lenderRules/lenderRulesConstants.js","imports/core/api/lenderRules/links.js","imports/core/api/lenderRules/methodDefinitions.js","imports/core/api/lenderRules/queries.js","imports/core/api/lenders/schemas/lenderSchema.js","imports/core/api/lenders/server/LenderService.js","imports/core/api/lenders/server/exposures.js","imports/core/api/lenders/server/methods.js","imports/core/api/lenders/index.js","imports/core/api/lenders/lenderConstants.js","imports/core/api/lenders/lenders.js","imports/core/api/lenders/links.js","imports/core/api/lenders/methodDefinitions.js","imports/core/api/lenders/queries.js","imports/core/api/liveSync/server/exposures.js","imports/core/api/liveSync/index.js","imports/core/api/liveSync/liveSync.js","imports/core/api/loans/schemas/LoanSchema.js","imports/core/api/loans/schemas/StructureSchema.js","imports/core/api/loans/schemas/otherSchemas.js","imports/core/api/loans/schemas/promotionSchema.js","imports/core/api/loans/server/LoanService.js","imports/core/api/loans/server/expireLoansCron.js","imports/core/api/loans/server/exposures.js","imports/core/api/loans/server/hooks.js","imports/core/api/loans/server/loanListeners.js","imports/core/api/loans/server/methods.js","imports/core/api/loans/server/resolvers.js","imports/core/api/loans/server/serverReducers.js","imports/core/api/loans/fakes.js","imports/core/api/loans/index.js","imports/core/api/loans/links.js","imports/core/api/loans/loanConstants.js","imports/core/api/loans/loans.js","imports/core/api/loans/methodDefinitions.js","imports/core/api/loans/queries.js","imports/core/api/loans/reducers.js","imports/core/api/lots/schemas/LotSchema.js","imports/core/api/lots/server/LotService.js","imports/core/api/lots/server/methods.js","imports/core/api/lots/server/serverReducers.js","imports/core/api/lots/index.js","imports/core/api/lots/links.js","imports/core/api/lots/lotConstants.js","imports/core/api/lots/lots.js","imports/core/api/lots/methodDefinitions.js","imports/core/api/lots/reducers.js","imports/core/api/methods/server/index.js","imports/core/api/methods/server/methods.js","imports/core/api/methods/server/registerServerMethods.js","imports/core/api/methods/server/serverMethodsConfig.js","imports/core/api/methods/clientQueryManager.js","imports/core/api/methods/index.js","imports/core/api/methods/methodDefinitions.js","imports/core/api/methods/methods.js","imports/core/api/methods/registerMethodDefinitions.js","imports/core/api/migrations/server/1.js","imports/core/api/migrations/server/10.js","imports/core/api/migrations/server/11.js","imports/core/api/migrations/server/12.js","imports/core/api/migrations/server/13.js","imports/core/api/migrations/server/14.js","imports/core/api/migrations/server/15.js","imports/core/api/migrations/server/16.js","imports/core/api/migrations/server/17.js","imports/core/api/migrations/server/18.js","imports/core/api/migrations/server/19.js","imports/core/api/migrations/server/2.js","imports/core/api/migrations/server/3.js","imports/core/api/migrations/server/4.js","imports/core/api/migrations/server/5.js","imports/core/api/migrations/server/6.js","imports/core/api/migrations/server/7.js","imports/core/api/migrations/server/8.js","imports/core/api/migrations/server/9.js","imports/core/api/migrations/server/index.js","imports/core/api/monitoring/server/exposures.js","imports/core/api/monitoring/server/resolvers.js","imports/core/api/monitoring/queries.js","imports/core/api/mortgageNotes/schemas/MortgageNoteSchema.js","imports/core/api/mortgageNotes/server/MortgageNoteService.js","imports/core/api/mortgageNotes/server/hooks.js","imports/core/api/mortgageNotes/server/methods.js","imports/core/api/mortgageNotes/index.js","imports/core/api/mortgageNotes/links.js","imports/core/api/mortgageNotes/methodDefinitions.js","imports/core/api/mortgageNotes/mortgageNoteConstants.js","imports/core/api/mortgageNotes/mortgageNotes.js","imports/core/api/notifications/server/NotificationService.js","imports/core/api/notifications/server/exposures.js","imports/core/api/notifications/server/methods.js","imports/core/api/notifications/server/notificationGeneratorCron.js","imports/core/api/notifications/server/notificationListeners.js","imports/core/api/notifications/index.js","imports/core/api/notifications/links.js","imports/core/api/notifications/methodDefinitions.js","imports/core/api/notifications/notificationConstants.js","imports/core/api/notifications/notifications.js","imports/core/api/notifications/queries.js","imports/core/api/notifications/reducers.js","imports/core/api/offers/server/OfferService.js","imports/core/api/offers/server/exposures.js","imports/core/api/offers/server/hooks.js","imports/core/api/offers/server/methods.js","imports/core/api/offers/server/serverReducers.js","imports/core/api/offers/fakes.js","imports/core/api/offers/index.js","imports/core/api/offers/links.js","imports/core/api/offers/methodDefinitions.js","imports/core/api/offers/offerConstants.js","imports/core/api/offers/offers.js","imports/core/api/offers/queries.js","imports/core/api/offers/reducers.js","imports/core/api/organisations/server/OrganisationService.js","imports/core/api/organisations/server/exposures.js","imports/core/api/organisations/server/hooks.js","imports/core/api/organisations/server/methods.js","imports/core/api/organisations/server/serverReducers.js","imports/core/api/organisations/helpers.js","imports/core/api/organisations/index.js","imports/core/api/organisations/links.js","imports/core/api/organisations/methodDefinitions.js","imports/core/api/organisations/organisationConstants.js","imports/core/api/organisations/organisations.js","imports/core/api/organisations/queries.js","imports/core/api/organisations/reducers.js","imports/core/api/promotionLots/schemas/PromotionLotSchema.js","imports/core/api/promotionLots/server/PromotionLotService.js","imports/core/api/promotionLots/server/exposures.js","imports/core/api/promotionLots/server/methods.js","imports/core/api/promotionLots/server/resolvers.js","imports/core/api/promotionLots/server/serverReducers.js","imports/core/api/promotionLots/index.js","imports/core/api/promotionLots/links.js","imports/core/api/promotionLots/methodDefinitions.js","imports/core/api/promotionLots/promotionLotConstants.js","imports/core/api/promotionLots/promotionLots.js","imports/core/api/promotionLots/queries.js","imports/core/api/promotionLots/reducers.js","imports/core/api/promotionOptions/schemas/PromotionOptionSchema.js","imports/core/api/promotionOptions/server/PromotionOptionService.js","imports/core/api/promotionOptions/server/exposures.js","imports/core/api/promotionOptions/server/hooks.js","imports/core/api/promotionOptions/server/methods.js","imports/core/api/promotionOptions/server/serverReducers.js","imports/core/api/promotionOptions/index.js","imports/core/api/promotionOptions/links.js","imports/core/api/promotionOptions/methodDefinitions.js","imports/core/api/promotionOptions/promotionOptionConstants.js","imports/core/api/promotionOptions/promotionOptions.js","imports/core/api/promotionOptions/queries.js","imports/core/api/promotionOptions/reducers.js","imports/core/api/promotions/schemas/PromotionSchema.js","imports/core/api/promotions/server/PromotionService.js","imports/core/api/promotions/server/exposures.js","imports/core/api/promotions/server/hooks.js","imports/core/api/promotions/server/methods.js","imports/core/api/promotions/server/promotionServerHelpers.js","imports/core/api/promotions/server/serverReducers.js","imports/core/api/promotions/index.js","imports/core/api/promotions/links.js","imports/core/api/promotions/methodDefinitions.js","imports/core/api/promotions/promotionClientHelpers.js","imports/core/api/promotions/promotionConstants.js","imports/core/api/promotions/promotions.js","imports/core/api/promotions/queries.js","imports/core/api/promotions/reducers.js","imports/core/api/properties/schemas/PropertySchema.js","imports/core/api/properties/server/PropertyService.js","imports/core/api/properties/server/exposures.js","imports/core/api/properties/server/hooks.js","imports/core/api/properties/server/methods.js","imports/core/api/properties/server/propertyServerHelpers.js","imports/core/api/properties/server/serverReducers.js","imports/core/api/properties/fakes.js","imports/core/api/properties/index.js","imports/core/api/properties/links.js","imports/core/api/properties/methodDefinitions.js","imports/core/api/properties/properties.js","imports/core/api/properties/propertiesAdditionalDocuments.js","imports/core/api/properties/propertyClientHelper.js","imports/core/api/properties/propertyConstants.js","imports/core/api/properties/queries.js","imports/core/api/properties/reducers.js","imports/core/api/queries/server/exposures.js","imports/core/api/queries/server/index.js","imports/core/api/queries/server/resolvers.js","imports/core/api/queries/queries.js","imports/core/api/queries/queryHelpers.js","imports/core/api/queries/resolversConstants.js","imports/core/api/revenues/schemas/revenueSchema.js","imports/core/api/revenues/server/RevenueService.js","imports/core/api/revenues/server/exposures.js","imports/core/api/revenues/server/hooks.js","imports/core/api/revenues/server/methods.js","imports/core/api/revenues/index.js","imports/core/api/revenues/links.js","imports/core/api/revenues/methodDefinitions.js","imports/core/api/revenues/queries.js","imports/core/api/revenues/revenueConstants.js","imports/core/api/revenues/revenues.js","imports/core/api/security/clientSecurityHelpers/generalSecurityHelpers.js","imports/core/api/security/clientSecurityHelpers/index.js","imports/core/api/security/clientSecurityHelpers/proPropertySecurityHelpers.js","imports/core/api/security/clientSecurityHelpers/promotionSecurityHelpers.js","imports/core/api/security/collections/BorrowerSecurity.js","imports/core/api/security/collections/LoanSecurity.js","imports/core/api/security/collections/OfferSecurity.js","imports/core/api/security/collections/PromotionSecurity.js","imports/core/api/security/collections/PropertySecurity.js","imports/core/api/security/collections/UserSecurity.js","imports/core/api/security/collections/index.js","imports/core/api/security/Security.js","imports/core/api/security/constants.js","imports/core/api/security/index.js","imports/core/api/slack/server/SlackService.js","imports/core/api/slack/server/methods.js","imports/core/api/slack/server/slackListeners.js","imports/core/api/slack/server/slackNotificationHelpers.js","imports/core/api/slack/server/slackNotifications.js","imports/core/api/slack/methodDefinitions.js","imports/core/api/stats/server/exposures.js","imports/core/api/stats/queries.js","imports/core/api/stats/stats.js","imports/core/api/tasks/server/TaskService.js","imports/core/api/tasks/server/exposures.js","imports/core/api/tasks/server/hooks.js","imports/core/api/tasks/server/methods.js","imports/core/api/tasks/server/serverReducers.js","imports/core/api/tasks/server/taskListeners.js","imports/core/api/tasks/index.js","imports/core/api/tasks/links.js","imports/core/api/tasks/methodDefinitions.js","imports/core/api/tasks/queries.js","imports/core/api/tasks/taskConstants.js","imports/core/api/tasks/tasks.js","imports/core/api/updateWatchers/server/UpdateWatcherService.js","imports/core/api/updateWatchers/server/updateWatcherCron.js","imports/core/api/updateWatchers/server/updateWatchers.js","imports/core/api/updateWatchers/updateWatcherConstants.js","imports/core/api/users/server/UserService.js","imports/core/api/users/server/accounts-server-config.js","imports/core/api/users/server/exposures.js","imports/core/api/users/server/hooks.js","imports/core/api/users/server/methods.js","imports/core/api/users/server/resolvers.js","imports/core/api/users/server/serverReducers.js","imports/core/api/users/server/userServerContants.js","imports/core/api/users/index.js","imports/core/api/users/links.js","imports/core/api/users/methodDefinitions.js","imports/core/api/users/queries.js","imports/core/api/users/reducers.js","imports/core/api/users/userConstants.js","imports/core/api/users/users.js","imports/core/api/containerToolkit/index.js","imports/core/api/containerToolkit/skipContainer.jsx","imports/core/api/containerToolkit/withSmartQuery.js","imports/core/api/errors/index.js","imports/core/api/factories/factories.js","imports/core/api/factories/factoriesHelpers.js","imports/core/api/factories/index.js","imports/core/api/links/LinkInitializer.js","imports/core/api/links/index.js","imports/core/api/reducers/addressReducer.js","imports/core/api/reducers/assigneeReducer.js","imports/core/api/reducers/registerReducers.js","imports/core/api/reducers/tasksReducer.js","imports/core/api/server/caches.js","imports/core/api/server/grapher-live.js","imports/core/api/server/hooks.js","imports/core/api/server/index.js","imports/core/api/server/mongoIndexes.js","imports/core/api/server/reducers.js","imports/core/api/api.js","imports/core/api/constants.js","imports/core/api/fragments.js","imports/core/api/index.js","imports/core/api/initialization.js","imports/core/components/AutoForm/ValidIcon/ValidIcon.jsx","imports/core/components/AutoForm/ValidIcon/ValidIconContainer.jsx","imports/core/components/AutoForm/ValidIcon/index.js","imports/core/components/AutoForm/AutoFormTextInput.jsx","imports/core/components/AutoForm/FormValidator.jsx","imports/core/components/LoanChecklist/LoanChecklistEmail/EmailLoanChecklist.jsx","imports/core/components/LoanChecklist/LoanChecklistEmail/LoanChecklistEmail.jsx","imports/core/components/LoanChecklist/LoanChecklistEmail/LoanChecklistEmailSection.jsx","imports/core/components/LoanChecklist/LoanChecklistEmail/LoanChecklistEmailTable.jsx","imports/core/components/LoanChecklist/LoanChecklistEmail/styles.js","imports/core/components/LoanChecklist/helpers.js","imports/core/components/Translation/formattingComponents/IntlDate.jsx","imports/core/components/Translation/formattingComponents/MetricArea.jsx","imports/core/components/Translation/formattingComponents/index.js","imports/core/components/Translation/numberComponents/IntlNumber.jsx","imports/core/components/Translation/numberComponents/Money.jsx","imports/core/components/Translation/numberComponents/Percent.jsx","imports/core/components/Translation/numberComponents/index.js","imports/core/components/Translation/FormattedMessage.jsx","imports/core/components/Translation/Translation.jsx","imports/core/components/Translation/defaultIntlValues.jsx","imports/core/components/Translation/index.js","imports/core/components/Translation/withTranslationContext.jsx","imports/core/components/tooltips/Tooltip/Tooltip.jsx","imports/core/components/tooltips/Tooltip/index.js","imports/core/components/tooltips/Tooltip/loadable.js","imports/core/components/tooltips/AutoTooltip.jsx","imports/core/components/tooltips/TooltipContext.jsx","imports/core/components/tooltips/TooltipOverlay.jsx","imports/core/components/tooltips/TooltipSynonyms.jsx","imports/core/components/AutoForm2/constants.js","imports/core/components/BorrowerAddPartner/BorrowerAddPartner.jsx","imports/core/components/BorrowerAddPartner/index.js","imports/core/components/Button/Button.jsx","imports/core/components/Button/index.js","imports/core/components/CantonField/CantonField.jsx","imports/core/components/Checkbox/Checkbox.jsx","imports/core/components/Checkbox/index.js","imports/core/components/DialogSimple/DialogSimple.jsx","imports/core/components/DialogSimple/index.js","imports/core/components/DialogSimple/loadable.js","imports/core/components/ErrorBoundary/DevError.jsx","imports/core/components/ErrorBoundary/LayoutError.jsx","imports/core/components/Icon/Icon.jsx","imports/core/components/Icon/index.js","imports/core/components/Link/Link.jsx","imports/core/components/Link/index.js","imports/core/components/Loading/Loading.jsx","imports/core/components/Loading/index.js","imports/core/components/Loading/withLoading.jsx","imports/core/components/Material/Dialog.jsx","imports/core/components/Material/FormControl.jsx","imports/core/components/Material/FormHelperText.jsx","imports/core/components/Material/Input.jsx","imports/core/components/Material/InputAdornment.jsx","imports/core/components/Material/InputLabel.jsx","imports/core/components/Material/Radio.jsx","imports/core/components/MissingDoc/MissingDoc.jsx","imports/core/components/MissingDoc/index.js","imports/core/components/OfferList/feedbackHelpers.js","imports/core/components/PercentWithStatus/PercentWithStatus.jsx","imports/core/components/PercentWithStatus/index.js","imports/core/components/StatusIcon/StatusIcon.jsx","imports/core/components/StatusIcon/index.js","imports/core/components/TextInput/TextInput.jsx","imports/core/components/TextInput/index.js","imports/core/components/RadioButtons.jsx","imports/core/fixtures/promotionDemo/data.js","imports/core/fixtures/promotionDemo/promotionDemoFixtures.js","imports/core/fixtures/promotionDemo/promotionFixturesMethods.js","imports/core/fixtures/server/fixtureMethods.js","imports/core/fixtures/borrowerFixtures.js","imports/core/fixtures/fixtureConfig.js","imports/core/fixtures/fixtureConstants.js","imports/core/fixtures/index.js","imports/core/fixtures/interestRatesFixtures.js","imports/core/fixtures/lenderRulesFixtures.js","imports/core/fixtures/loanFixtures.js","imports/core/fixtures/offerFixtures.js","imports/core/fixtures/organisationFixtures.js","imports/core/fixtures/propertyFixtures.js","imports/core/fixtures/userFixtures.js","imports/core/startup/server/kadira.js","imports/core/startup/accounts-config.js","imports/core/utils/Calculator/BorrowerCalculator.js","imports/core/utils/Calculator/CombinedCalculator.js","imports/core/utils/Calculator/LenderRulesInitializator.js","imports/core/utils/Calculator/LoanCalculator.js","imports/core/utils/Calculator/OfferCalculator.js","imports/core/utils/Calculator/PromotionCalculator.js","imports/core/utils/Calculator/PropertyCalculator.js","imports/core/utils/Calculator/Selector.js","imports/core/utils/Calculator/SolvencyCalculator.js","imports/core/utils/Calculator/classUtils.js","imports/core/utils/Calculator/index.js","imports/core/utils/Calculator/middleware.js","imports/core/utils/FinanceCalculator/FinanceCalculator.js","imports/core/utils/FinanceCalculator/financeCalculatorMiddlewares.js","imports/core/utils/FinanceCalculator/index.js","imports/core/utils/MiddlewareManager/MiddlewareManager.js","imports/core/utils/MiddlewareManager/argumentMapperMiddleware.js","imports/core/utils/MiddlewareManager/index.js","imports/core/utils/localization/index.js","imports/core/utils/localization/localization.js","imports/core/utils/localization/simpleSchemaLocalization.js","imports/core/utils/memoizeOne/areInputsEqual.js","imports/core/utils/memoizeOne/index.js","imports/core/utils/memoizeOne/memoizeOne.js","imports/core/utils/notaryFees/NotaryFeesCalculator.js","imports/core/utils/notaryFees/cantonConfigs.js","imports/core/utils/notaryFees/cantonConstants.js","imports/core/utils/notaryFees/degressive.js","imports/core/utils/notaryFees/index.js","imports/core/utils/phoneFormatting/index.js","imports/core/utils/server/fiberStorage.js","imports/core/utils/server/getClientUrl.js","imports/core/utils/server/intl.js","imports/core/utils/checkObjectStructure.js","imports/core/utils/conversionFunctions.js","imports/core/utils/filesUtils.js","imports/core/utils/formArrayHelpers.js","imports/core/utils/formHelpers.js","imports/core/utils/general.js","imports/core/utils/intl.js","imports/core/utils/loadable.js","imports/core/utils/loanFunctions.js","imports/core/utils/openGraph.js","imports/core/utils/textMasks.js","imports/core/utils/userFunctions.js","imports/core/utils/zipcodes.js","imports/core/arrays/BorrowerFormArray.jsx","imports/core/arrays/PropertyFormArray.jsx","imports/core/arrays/RefinancingFormArray.js","imports/core/arrays/tooltips.js","imports/core/config/colors.js","imports/core/config/constants.js","imports/core/config/financeConstants.js","imports/startup/server/fetchIrs10yCron.js","imports/startup/server/index.js","imports/startup/server/restAPI.js","imports/startup/server/startup.js","server/main.js"],"names":["footer","phoneNumbers","moment","borrowersNames","borrowers","name","coverContent","anonymous","calculator","city","loan","propertyValue","organisation","purchaseType","residenceType","address1","zipCode","LoanBankCover","structureIds","options","LoanBankCoverHeader","columnStyles","width","textAlign","getRows","lenderRules","classes","ROW_TYPES","structureId","id","loanValue","borrowRatio","incomeRatio","index","toMoney","display","alignItems","justifyContent","StructureRecapTable","styles","stylesheet","BORDER_BLUE","getPages","finalStructureIds","defaultCalculator","Component","data","structureIndex","x","LoanBankPDF","pdfName","pages","MARGIN_BOTTOM","MARGIN_TOP","MARGIN_SIDE","PDFTableStyles","BorrowersPageStyles","LoanBankCoverStyles","PdfPageStyles","PropertyPageStyles","StructurePageStyles","LenderRulesPageStyles","BorrowersPdfPage","BorrowersRecap","renderExpenses","expense","value","expenses","addTableMoneyLine","label","field","negative","getBorrowersFinanceArray","multipleBorrowers","makeTableMoneyLine","borrowersInfos","getBorrowersInfos","realEstateIncome","type","className","colspan","SUBSECTION","condition","bonus","income","otherIncome","shouldRenderArray","getFormattedMoneyArray","array","borrower","twoBorrowers","SUM","addTableEmptyLine","ownFund","realEstateValue","otherFortune","BorrowersRecapFinance","cx","getBorrowersInfosArray","address","children","company","status","BorrowersRecapInfo","style","renderWithComments","comments","func","i","getBorrowersSingleInfo","getBorrowersSingleInfos","getBorrowersOtherIncome","otherIncomeValue","types","sum","otherIncomeComments","getBorrowersOtherIncomes","getBorrowersExpense","allExpenses","key","description","expenseValue","expenseComments","getBorrowersExpenses","getBorrowersOwnFunds","getBorrowersAddress","borrowersHaveSameAddress","sameAddress","borrowerWithAddress","zipCodes","cities","getBonus","bonuses","year","whiteSpace","salary","Object","totalIncome","totalExpenses","realEstateDebt","OWN_FUNDS_TYPES","getArraySum","val","Number","EMPTY","recapStyleSheet","LenderRulesPdfPage","getExpenseRules","getTheoreticalExpenseRules","getCutOffCriteriaRules","LenderRulesPdfTable","rows","RULE_TYPES","SELECT","PERCENT","NUMBER","getRuleArray","schemaPart","ruleName","rule","SimpleSchema","makeMapRule","uniforms","ruleOrigin","mappedRule","detail","Array","v","formatRuleIntoRow","getTableRows","incomeConsideration","theoreticalExpenses","cutOffCriteria","OtherRealEstateTable","realEstateArray","realEstate","makeGoogleMapsUrl","property","place","baseUrl","query","center","zoom","size","markers","Meteor","scale","language","sort","url","PdfGoogleMap","backgroundImage","getPropertyRows","parkingInside","parkingOutside","promotion","TITLE","propertyType","houseType","PROPERTY_TYPE","HOUSE","flatType","FLAT","tooltip","text","symbol","roomCount","insideArea","landArea","volumeNorm","terraceArea","FLAT_TYPE","TERRACE_APARTMENT","constructionYear","renovationYear","minergie","yearlyExpenses","PdfPropertyDetails","PropertyPdfPage","pageCount","realEstateExists","getCostLines","notaryFees","propertyWork","shouldRenderRow","ownFundLabel","borrowerIndex","borrowerSuffix","usageType","getFinancingLines","wantedLoan","ownFunds","money","OWN_FUNDS_USAGE_TYPES","borrowerId","_id","BalanceSheet","expenseType","noPrefix","getIncomeRows","fortuneReturns","toSubtractFromIncome","useNetSalary","getExpenseRows","propertyCost","asObject","IncomeAndExpenses","oneBorrowerHasOwnFunds","valueForType","remainingFundsTableData","getRemainingOwnFundsRows","BANK_FORTUNE","RemainingOwnFundsTable","StructurePdfPage","structureName","makeTableContent","lines","Math","rightRows","leftRows","leftMoney","rightMoney","BalanceSheetTable","bottomValues","titles","bottomTitles","LastPageContext","React","Pdf","getUserLocale","getFormats","__html","isLast","arr","PdfPage","withHeader","withFooter","fullHeight","PdfPageFooter","PdfPageHeader","CONTENT_HEIGHT","PdfPageTitle","subtitle","TITLE_NO_PADDING","REGULAR","TOOLTIP","PdfTable","columnOptions","rowData","multiColumn","columnStyle","singleColumn","PdfTableRow","labelStyle","columnClassName","BORDER_GREY","PdfTableTooltips","startIndex","tooltips","FLEX_ROW","FLEX_COLUMN","ALIGN_ITEMS_CENTER","ALIGN_ITEMS_FLEX_END","JUSTIFY_CONTENT_FLEX_START","JUSTIFY_CONTENT_SPACE_BETWEEN","JUSTIFY_CONTENT_FLEX_END","JUSTIFY_CONTENT_CENTER","JUSTIFY_CONTENT_SPACE_EVENLY","JUSTIFY_CONTENT_SPACE_AROUND","ALIGN_SELF_FLEX_END","flexGrow","flexBasis","basis","flexShrink","FLEXBOX","flex","PDF_URL","htmlOnly","html","PDF_TYPES","validateLoanPdf","check","Match","organisationId","$filters","logo","loanId","formatLoanWithPromotion","fileName","Random","component","props","path","file","fs","base64","API_KEY","body","user_credentials","doc","document_content","test","prince_options","media","baseurl","method","headers","JSON","res","dest","stream","resolve","generatePDF","context","SecurityService","PDFService","PDF_TESTING","loanName","orgName","console","params","homedir","require","formatKey","i18nKey","translated","values","frenchErrors","missingKey","parentKey","shouldBeArray","shouldBeObject","emptyArray","makeCheckObjectStructure","checkObjectStructure","obj","template","TEMPLATES","structures","promotionOptionId","propertyId","LOAN","gender","$or","structure","user","assignedEmployee","email","A4_HEIGHT","WIGGLE_ROOM","bodySchema","String","deleteFileAPI","req","userId","impersonateUser","checkQuery","schema","impersonateSchema","cleanBody","exists","PropertyService","propertyByExternalId","externalId","HTTP_STATUS_CODES","withMeteorUserId","impersonateUserId","getImpersonateUserId","Security","docId","collection","PROPERTIES_COLLECTION","querySchema","optional","getPropertyAPI","proId","filteredProperty","omit","getPropertyLoansAPI","loans","filteredLoans","pick","properties","solvent","getUserAPI","UserService","checkAccessToUser","anyOrganisationMatches","userOrganisations","proOrganisations","userOrganisation","proOrganisation","organisations","cleanQuery","users","default","inviteUserToPromotionAPI","insertPropertyAPI","apiProperty","displayProperty","message","insertedProperty","interestRatesAPI","currentInterestRates","formatPropertyIds","propertyIds","ids","checkProperties","PropertySchema","getExternalProperties","getInternalProperties","inviteCustomerToProPropertiesAPI","shareSolvency","externalProperties","internalProperties","formattedIds","payload","proInviteUser","updateCustomerReferral","customer","promotionId","promotionIds","invitedBy","LUXURY_VALUE_THRESHOLD","SECOND_OR_LUXURY_AMORTIZATION_GOAL","SECOND_OR_LUXURY_BORROW_RATIO","roundToCents","getBorrowRatio","RESIDENCE_TYPE","min","defaultValue","allowedValues","PURCHASE_TYPE","canton","mortgageEstimateAPI","date","rates","interestRates","rateLow","finalCanton","zipcodes","loanObject","loanTranches","INTEREST_RATES","YEARS_10","amortizationGoal","calc","getInterestsForType","interests10","interests15","interests5","interestsLibor","amortization","includeNotaryFees","totalValue","monthlyAmortization","monthlyInterests","monthlyMaintenance","monthlyTotals","estimate","total","referCustomerAPI","testEndpointAPI","updatePropertyAPI","object","category","custom","uploadFileAPI","files","constructor","rootPath","preMiddlewares","defaultMiddlewares","postMiddlewares","reset","WebApp","start","registerMiddlewares","middlewares","middleware","registerEndpoints","endpoints","endpoint","methods","finalEndpoint","handler","wrapHandler","Fiber","location","setClientMicroservice","setClientUrl","href","setIsAPI","setAPIUser","Promise","result","next","registerEndpoint","compose","router","handleSuccess","stringified","logRequest","trackRequest","addEndpoint","getEndpointsOptions","DDPCommon","AUTH_ITEMS","RSA_PUBLIC_KEY","RSA_SIGNATURE","OBJECT_FORMATS","DEFAULT","TO_LITERRAL","TO_STRING","getHeader","getAuthItem","item","authorization","getPublicKey","getSignature","getRequestPath","_parsedUrl","parsedUrl","getRequestMethod","customerId","mainOrg","invocation","DDP","getErrorObject","statusCode","error","errorName","stringToLiteral","maps","true","false","null","isNaN","parseInt","literalToString","getObjectPropertiesPath","str","stack","formatObject","format","formattedObject","get","set","formatParams","emails","verifiedFormat","verifySignature","isMultipart","timestamp","nonce","objectToVerify","security","sortObject","queryParams","verified","isValid","toVerify","acceptedStringifiedVersions","realIp","analytics","connection","httpHeaders","host","getClientHost","EVENTS","getMatchingPathOptions","parts","decodeURI","matchingPathOptions","endpointParts","part","match","storeOnFiber","isAPI","getFromFiber","getAPIUser","bodyParser","bodyParserJsonMiddleware","limit","BODY_SIZE_LIMIT","bodyParserUrlEncodedMiddleware","extended","replayHandlerMiddleware","REST_API_ERRORS","now","nonceExists","addNonce","filterMiddleware","endpointOptions","supportedContentType","contentType","authMiddleware","publicKey","signature","firstName","lastName","verifiedSignature","expectedObjectToSign","errorMiddleware","info","SlackService","additionalData","unknownEndpointMiddleware","multipartMiddleware","multipart","uploadDir","FILE_UPLOAD_DIR","NONCE_TTL","nonces","testNonce","deleteNonce","OK","BAD_REQUEST","FORBIDDEN","NOT_FOUND","CONFLICT","SERVER_ERROR","WRONG_CONTENT_TYPE","WRONG_AUTHORIZATION_TYPE","AUTHORIZATION_FAILED","UNKNOWN_ENDPOINT","REPLAY_ATTACK_ATTEMPT","OS_TMP_DIR","os","PromotionLogos","logoUrls","maxWidth","maxHeight","marginBottom","isEmailTestEnv","skipEmails","templateOptions","getMandrillTemplate","response","emailId","emailConfigs","emailConfig","mandrillId","templateName","otherOptions","intlValues","createIntlValues","emailContent","getEmailContent","overrides","recipientAddress","recipientName","senderAddress","senderName","subject","sendAt","getSimpleMandrillTemplate","getEmailPart","renderMandrillTemplate","Date","Accounts","createAccountsEmailConfig","EmailService","EMAIL_PARTS","EMAIL_IDS","emailDefaults","allowUnsubscribe","footerType","FOOTER_TYPES","variables","addEmailConfig","config","EMAIL_TEMPLATES","createOverrides","cta","verifyUrl","getAccountsUrl","content","title","resetPasswordUrl","CTA_URL_DEFAULT","enrollUrl","NOTIFICATION","NOTIFICATION_AND_CTA","getFirstName","string","details","ctaUrl","coverImageUrl","templateContent","promotionName","phoneNumber","epotekNumber","assignedEmployeeName","assignedEmployeeFirstName","assignedEmployeePhone","assigneeName","assigneeAddress","feedback","bccAddress","rest","rest2","customMessage","app","LoanChecklistEmail","intl","formatMessage","Intl","today","ReactDOMServer","WWW_URL","APP_URL","ADMIN_URL","PRO_URL","getEmailFooter","unsubscribe","intlFallback","EMAIL_I18N_NAMESPACE","fallback","verticalSpace","customFrom","FROM_DEFAULT","from","userIsUser","Roles","ROLES","userIsPro","userIsAdmin","token","ServerEventService","Loans","emailsToWatch","setupMandrill","Mandrill","username","port","template_name","template_content","merge_vars","from_email","from_name","to","global_merge_vars","replyTo","bcc_address","send_at","undefined","mandrillTemplate","sendMandrillTemplate","logError","reject","getDate30DaysAgo","dateString","getEmailsForAddress","date_from","sendEmail","sendEmailToAddress","FROM_NAME","FROM_EMAIL","INTERNAL_EMAIL","EPOTEK_PHONE","SUBJECT","BODY","CTA","FROM","USER","VISITOR","CTA_URL","PROMOTION_INVITATION","MARKETING_BLURB","COVER_IMAGE_URL","LOGO_URL_1","LOGO_URL_2","LOGO_URL_3","SIMPLE","NOTIFICATION_AND_CTA_V2","CSS","CONTACT_US","CONTACT_US_ADMIN","VERIFY_EMAIL","RESET_PASSWORD","ENROLL_ACCOUNT","VERIFICATION_REQUESTED","VERIFICATION_ERROR","VERIFICATION_PASSED","INVITE_USER_TO_PROMOTION","SEND_FEEDBACK_TO_LENDER","INVITE_USER_TO_PROPERTY","REFER_USER","FIND_LENDER_NOTIFICATION","CONFIRM_USER_INVITATION","LOAN_CHECKLIST","addServerActivity","ACTIVITY_TYPES","SERVER","addCreatedAtActivity","secondaryType","ACTIVITY_SECONDARY_TYPES","CollectionService","userName","ActivityService","loanLink","createdBy","exposeQuery","embody","filters","validateParams","Activities","fieldNames","newDate","oldDate","NotificationService","fetchPrevious","allowModification","activityId","activityInsert","activityUpdate","activityRemove","Mongo","ActivitySchema","autoValue","shouldNotify","ACTIVITIES_COLLECTION","ACTIVITY_QUERIES","ADMIN_ACTIVITIES","EMAIL","EVENT","PHONE","OTHER","CREATED","REMOVE_LOAN_FROM_PROMOTION","notifications","inversedBy","autoremove","metadata","Method","adminActivities","activity","$options","initAnalytics","impersonateMiddleware","Segment","nodeAnalytics","init","referer","referrer","roles","identify","anonymousId","traits","role","track","event","eventConfig","transform","eventProperties","trackingId","ip","userAgent","alias","previousId","formatRouteName","w","page","queryString","cookies","formattedRoute","DefaultNodeAnalytics","LOGIN_IP_BLACKLIST","curryRight","curryPick","EVENTS_CONFIG","analyticsVerifyEmail","analyticsLogin","analyticsPage","TRACKING_COOKIE","USER_CREATED","USER_LOGGED_IN","USER_VERIFIED_EMAIL","PROMOTION_CREATED","PROMOTION_CUSTOMER_INVITED","PROMOTION_LOT_STATUS_UPDATED","PROPERTY_CUSTOMER_INVITED","LOAN_ANONYMOUS_LOAN_CLAIMED","LOAN_STATUS_CHANGED","LOAN_COMPLETED_A_STRUCTURE","LOAN_CREATED","LOAN_MADE_PROGRESS","LOAN_SET_STATUS","LOAN_SET_STEP","LOAN_TASK_ADDED","LOAN_TASK_UPDATED","CTA_CLICKED","API_CALLED","sessionStorage","route","BorrowerSchema","admin","adminValidation","blackbox","documents","additionalDocuments","ownCompaniesSchema","protectedKeys","BorrowerSchemaAdmin","makeArrayOfObjectsSchema","displayEmpty","intlId","allowedValuesIntlId","personalInfoSchema","birthDate","CUSTOM_AUTOFIELD_TYPES","DATE","isSwiss","residencyPermit","citizenship","isUSPerson","civilStatus","childrenCount","max","financeInfoSchema","netSalary","bonusExists","bonus2015","bonus2016","bonus2017","bonus2018","bonus2019","hasOwnCompany","ownCompanies","moneyField","$set","LoanService","loansLink","Borrowers","$push","$pop","$pull","loanBorrower","getReusableBorrowers","isLastLoan","userBorrowers","borrowersNotOnLoan","cleanUpMortgageNotes","mortgageNotes","borrowerMortgageNoteIds","mortgageNoteIds","allowFilterById","searchQuery","additionalDocumentsHook","conditionalDocuments","BorrowerService","UpdateWatcherService","fields","shouldWatch","FileService","borrowerInsert","checkInsertUserId","borrowerUpdate","borrowerDelete","pushBorrowerValue","popBorrowerValue","pullBorrowerValue","assigneeReducer","BORROWERS_COLLECTION","RESIDENCY_PERMIT","B","C","CI","F","G","L","N","S","NONE","GENDER","M","CIVIL_STATUS","MARRIED","SINGLE","PACSED","DIVORCED","WIDOW","OTHER_INCOME","WELFARE","PENSIONS","EXPENSES","LEASING","PERSONAL_LOAN","THIRD_PARTY_FORTUNE_REIMBURSEMENT","BORROWER_QUERIES","ADMIN_BORROWERS","BORROWER_SEARCH","INSURANCE_2","INSURANCE_3A","BANK_3A","INSURANCE_3B","THIRD_PARTY_FORTUNE","RETIREMENT_AGE","insert","update","remove","DOCUMENTS","initialDocuments","IDENTITY","DEBT_COLLECTION_REGISTER_EXTRACT","TAXES","SALARY_CERTIFICATE","LAST_SALARIES","OWN_FUNDS_JUSTIFICATION","borrowerConstants","insurance2","bank3A","insurance3A","insurance3B","emptyFakeBorrower","fakeBorrower","citizenships","birthPlace","personalBank","worksForOwnCompany","completeFakeBorrower","MAIN_RESIDENCE","bankFortune","logic","unique","createRegexQuery","generateMatchAnyWordRegexp","adminBorrowers","adminBorrower","scoped","borrowerSearch","$filter","formattedSearchQuery","$and","createdAt","updatedAt","reduce","age","addressReducer","ContactSchema","regEx","Email","userLink","contactId","contact","changeOrganisations","newOrganisations","oldOrganisations","linkName","linkId","Contacts","formatNumbersHook","contactInsert","ContactService","contactRemove","contactUpdate","contactChangeOrganisations","tasksReducer","CONTACTS_COLLECTION","CONTACTS_QUERIES","ADMIN_CONTACTS","CONTACT_SEARCH","lenders","adminContacts","contactSearch","offers","fullOffer","contactOffers","CRONITOR_URL","ACTIONS","RUN","COMPLETE","PAUSE","FAIL","REQ_TIMEOUT","authKey","urlObj","action","msg","hours","basePath","auth_key","promise","https","chunk","timeout","wait","emmitter","MODIFIED_FILES_EVENT","LOAD_LOAN","CALLED_METHOD","IS_LOGGING","emit","getBeforeMethodEventName","emitBeforeMethod","emitAfterMethod","addListener","listenerFunction","listenersForEvent","addBeforeMethodListener","addAfterMethodListener","checkMethod","addErrorListener","logEmittedEvent","logListener","eventName","args","arg","getListenerFunctions","removeListener","removeAllListeners","prefix","subdocument","S3Service","results","FILE_STATUS","errorMessage","currentCategoryFiles","groupedFiles","keyParts","getS3FileKey","originalFilename","readFileBuffer","S3_ACLS","removeFile","keyExists","Key","deletedFiles","remainingFiles","SECRET_KEY","AWS","accessKeyId","secretAccessKey","signatureVersion","S3_ENDPOINT","Bucket","TEST_BUCKET_NAME","bucketName","extraParams","loggedInUser","keyId","loanFound","borrowerFound","PROPERTY_CATEGORY","promotionFound","ACL","Body","keys","Delete","Objects","Prefix","ContentDisposition","decodeURIComponent","err","Metadata","oldMetaData","newMetadata","CopySource","MetadataDirective","OBJECT_STORAGE_PATH","Expires","Slingshot","maxSize","allowedFileTypes","authorize","ADMIN","fileKey","deleteFile","setFileStatus","newStatus","setFileError","downloadFile","getSignedUrl","updateDocumentsCache","FIVE_MINUTES","hmac256","crypto","Buffer","formatNumber","digits","exoscaleStorageService","accessId","secretKey","directiveMatch","bucket","bucketUrl","region","AWSAccessKeyId","AWSSecretAccessKey","acl","expire","cacheControl","contentDisposition","directiveDefault","getContentDisposition","directive","_","filename","encodeURIComponent","getMaxSize","meta","upload","policy","ONE_KB","UNVERIFIED","downloadUrl","download","postData","applySignature","service","matchedPolicy","base64Policy","jsonPolicy","signAwsV4","dateKey","dateRegionKey","dateRegionServiceKey","signingKey","LOANS_COLLECTION","documentHasTooltip","documentId","DOCUMENTS_WITH_TOOLTIP","makeAllObjectDocuments","noTooltips","allDocuments","s3Documents","otherAdditionalDocuments","document","legacyCustomDocuments","requiredByAdminOnly","requiredByAdmin","formatAdditionalDoc","additionalDoc","required","makeGetDocuments","isLoans","additionalDocumentsExist","getPropertyDocuments","getBorrowerDocuments","getLoanDocuments","VALID","ERROR","ALLOWED_FILE_TYPES","MAX_FILE_SIZE","SLINGSHOT_DIRECTIVE_NAME","EXOSCALE_PATH","BUCKET_NAME","OBJECT_STORAGE_REGION","PROPERTY_DOCUMENTS","COOWNERSHIP_AGREEMENT","COOWNERSHIP_ALLOCATION_AGREEMENT","FIRE_AND_WATER_INSURANCE","INVESTEMENT_PROPERTY_RENTAL_STATEMENT","INVESTEMENT_PROPERTY_SERVICE_CHARGE_SETTLEMENT","INVESTEMENT_PROPERTY_WORKS_HISTORY","INVESTMENT_PROPERTY_CONDOMINIUM_OWNERSHIP_DIVISION_REGISTER","INVESTMENT_PROPERTY_CONDOMINIUM_REGULATION","INVESTMENT_PROPERTY_RENT_JUSTIFICATION","LAND_REGISTER_EXTRACT","PROPERTY_FUTURE_WORKS","PROPERTY_MINERGIE_CERTIFICATE","PROPERTY_MARKETING_BROCHURE","PROPERTY_PICTURES","PROPERTY_PLANS","PROPERTY_VOLUME","PROPERTY_WORKS_QUOTE","PURCHASE_CONTRACT","SHARE_BUILDING_PERMIT","SHARE_EASEMENTS","SHARE_FINANCIAL_PLAN","SHARE_GC_CONTRACT","SHARE_GC_QUOTE_BY_BCC","SHARE_INSURANCE_CERTIFICATE","SHARE_PLANS","SHARE_WORKS","BORROWER_DOCUMENTS","BONUSES","CURRENT_MORTGAGES_INTERESTS_STATEMENT","CURRENT_MORTGAGES","DIVORCE_RULING","EXPENSES_JUSTIFICATION","LEGITIMATION_CARD","OTHER_FORTUNE_JUSTIFICATION","OTHER_INCOME_JUSTIFICATION","OWN_COMPANY_COMMERCIAL_REGISTER","OWN_COMPANY_FINANCIAL_STATEMENTS","PENSION_FUND_YEARLY_STATEMENT","TAX_STATEMENT","THIRD_PILLAR_ACCOUNTS","WITHDRAWAL_JUSTIFICATION","LOAN_DOCUMENTS","CONTRACT","REIMBURSEMENT_STATEMENT","SIGNED_CONTRACT","SIGNED_MANDATE","DOCUMENTS_CATEGORIES","PERSONAL_DOCUMENTS","INCOMES_AND_EXPENSES","FORTUNE_AND_OWN_FUNDS","RETIREMENT","HOUSING","SHARE","PRIVATE","PUBLIC_READ","PUBLIC_READ_WRITE","AUTHENTICATED_READ","BUCKET_OWNER_READ","BUCKET_OWNER_FULL_CONTROL","LOG_DELIVERY_WRITE","documentIsRequired","getDocumentsToCount","allFilesAreValid","filesPercent","checkValidity","documentsToCount","percent","getPercent","count","length","documentExists","getMissingDocumentIds","cloneDeep","DEFAULT_TTL","generateQueryId","queryName","EJSON","getHash","cacheId","getDataToHash","dataToHash","hashObject","fetch","countCursor","cacheData","hash","invalidateCache","cacheExists","setCache","findAndInvalidateCache","storeData","ttl","_update","operator","baseUpdate","safeGet","_name","find","findOne","createQuery","fetchOne","safeFetchOne","getLink","countAll","getAll","aggregate","addLink","linker","strategy","removeLink","updateLinkMetadata","getAssignedEmployee","assignee","getAdditionalDocLabel","setAdditionalDoc","additionalDocumentsUpdate","removeAdditionalDoc","additionalDocId","getDocFromCollection","getIdFieldNameFromCollection","collectionName","getCollectionNameFromIdField","idFieldName","createMeteorAsyncFunction","promiseFunc","callback","flattenObject","delim","delimiter","flattened","strip","k","getUserOrganisationName","organisationName","getUserNameAndOrganisation","isReferredByOrganisation","referredByOrganisation","isReferredByOrganisationUser","referredByUser","organisationUsers","getReferredBy","proUser","isAdmin","raw","sortedObject","generateMatchAllWordsRegexp","words","word","splitStringIntoWords","searchQueryWords","containsMultipleWords","$regex","createSearchFilters","searchFieldsArray","searchField","fieldName","getOldCustomDocuments","keepInitialDocuments","otherInitialDocuments","getDocumentsToAdd","additionalDocument","oldCustomDocuments","documentsToAdd","MORTGAGE_NOTE_TYPES","PAPER","REGISTRAR","MORTGAGE_NOTE_CATEGORIES","BEARER","REGISTERED","address2","placeholder","contactsSchema","contacts","makePermissions","autoFormDisplayCondition","autoFormLabel","permissionsSchema","userLinksSchema","userLinks","mortgageNoteLinks","roundedInteger","rounder","percentageField","MONEY","decimalMoneyField","MONEY_DECIMAL","documentsField","dateField","cacheField","impersonate","userIdToImpersonate","Users","_throwNotAuthorized","_checkRolesForImpersonation","_findUserByToken","hashedToken","impersonateAdmin","impersonatedUser","authToken","singleInterestRate","InterestRatesSchema","InterestRates","firewall","$lte","rate","interestRatesInsert","InterestRatesService","interestRatesRemove","interestRatesId","interestRatesUpdate","TRENDS","randInArray","getRandomInterestRate","mean","rateHigh","trend","INTEREST_TREND","UP","DOWN","INTEREST_RATES_COLLECTION","LIBOR","YEARS_1","YEARS_2","YEARS_5","YEARS_15","YEARS_20","YEARS_25","INTEREST_RATES_QUERIES","CURRENT_INTEREST_RATES","currentInterestRatesFragment","interestRatesFragment","makeCheckIsRate","makeFormatRate","sortRates","a","b","getAverageRates","$postFilter","cleanedRates","averageRates","Irs10ySchema","end","existingFromToday","$gte","$lt","cheerio","request","URL","fetchIrs10y","$","irs10yInsert","irs10y","Irs10yService","irs10yRemove","irs10yId","irs10yUpdate","irs10yFetch","Irs10y","IRS10Y_COLLECTION","IRS10Y_QUERIES","IRS10Y","irs10yFragment","incomeConsiderationType","bonusAlgorithm","bonusConsideration","bonusHistoryToConsider","companyIncomeConsideration","companyIncomeHistoryToConsider","dividendsConsideration","dividendsHistoryToConsider","realEstateIncomeAlgorithm","realEstateIncomeConsideration","investmentIncomeConsideration","expensesSubtractFromIncome","$unset","EXPENSE_TYPES_WITHOUT_DELTAS","fortuneReturnsRatio","theoreticalInterestRate","theoreticalInterestRate2ndRank","theoreticalMaintenanceRate","amortizationYears","maxBorrowRatio","maxBorrowRatioWithPledge","maxIncomeRatio","otherParams","allowPledge","adminComments","pdfComments","LenderRulesSchema","organisationLink","filter","order","organisationCache","LenderRulesEditorSchema","lenderRulesId","initialize","id1","logicRules","id2","DEFAULT_MAIN_RESIDENCE_RULES","id3","DEFAULT_SECONDARY_RESIDENCE_RULES","and","updateFilter","setOrder","orders","numbers","$in","nextOrder","lenderRulesInitialize","LenderRulesService","lenderRulesInsert","lenderRulesRemove","lenderRulesUpdate","lenderRulesUpdateFilter","setLenderRulesOrder","jsonLogic","rulesToMerge","filterIsValid","mergeRules","names","oldRules","mergedObject","newRuleName","newRule","newRules","getMatchingRules","storeOrigin","rules","isAllRule","parseFilter","ruleObject","var","variable","o","formatFilter","LenderRules","BONUS_ALGORITHMS","LENDER_RULES_COLLECTION","LENDER_RULES_QUERIES","ORGANISATION_LENDER_RULES","INCOME_CONSIDERATION_TYPES","GROSS","NET","REAL_ESTATE_CONSIDERATION_TYPES","ADD_TO_INCOME","SUBTRACT_FROM_EXPENSES","EXPENSES_CONSIDERATION_TYPES","SUBTRACT_FROM_INCOME","ADD_TO_EXPENSES","LENDER_RULES_VARIABLES","INCOME","CANTON","BORROW_RATIO","WANTED_LOAN","PROPERTY_VALUE","INSIDE_AREA","ZIP_CODE","REMAINING_BANK_FORTUNE","LENDER_RULES_OPERATORS","EQUALS","MORE_THAN","MORE_THAN_OR_EQUAL","LESS_THAN","LESS_THAN_OR_EQUAL","IN","EXPENSE_TYPES","REAL_ESTATE_DELTA_POSITIVE","REAL_ESTATE_DELTA_NEGATIVE","THEORETICAL_REAL_ESTATE","DEFAULT_VALUE_FOR_ALL","pensionIncomeConsideration","realEstateIncomeConsiderationType","denormalize","organisationLenderRules","LenderSchema","LENDER_STATUS","TO_BE_CONTACTED","contactLink","adminNote","existingLender","lenderId","linkOrganisationAndContact","lenderInsert","LenderService","lenderRemove","lenderUpdate","lenderLinkOrganisationAndContact","LENDERS_COLLECTION","LENDERS_QUERIES","LOAN_LENDERS","CONTACTED","OFFER_RECEIVED","TO_EXCLUDE","Lenders","tasks","lender","loanLenders","LiveSync","STALE_LIVE_SYNC_MS","liveSyncStart","liveSyncStop","liveSyncUpdate","liveSyncClear","liveSyncs","LoanSchema","LOAN_STATUS","general","userFormsEnabled","selectedStructure","verificationStatus","LOAN_VERIFICATION_STATUS","currentOwner","OWNER","futureOwner","otherOwner","enableOffers","previousLender","customName","applicationType","APPLICATION_TYPES","revenueLinks","userCache","step","STEPS","displayWelcomeScreen","referralId","LOAN_CATEGORIES","lendersCache","tasksCache","financedPromotionLink","simpleBorrowersForm","structureSchema","amortizationType","disabled","offerId","sortOffersBy","loanTranchesSchema","borrowerIdsSchema","borrowerIds","previousLoanTranchesSchema","previousLoanTranches","propertyIdsSchema","maxCount","maxPropertyValueSchema","maxPropertyValue","SOLVENCY_TYPE","promotionSchema","promotionLinks","promotionOptionLinks","zeroPadding","zero","places","num","yearPrefix","lastLoan","numb","lastPrefix","nextCountString","promotionLotIds","showAllLots","promotionLotId","PromotionOptionService","atIndex","newStructureId","$each","$position","isFirstStructure","shouldCopyExistingStructure","currentlySelected","updateObj","getAutoValues","currentStructure","structureExists","currentStructureIndex","bId","setStep","nextStep","shouldSendStepNotification","setStatus","oldStatus","nextStatus","setPromotionPriorityOrder","priorityOrder","getPromotionPriorityOrder","promotionLink","assignLoanToUser","referredByOrganisationLink","referredByUserLink","switchBorrower","oldBorrowerId","oldBorrowerLoans","sendNegativeFeedbackToAllLenders","adminLoan","withSort","filteredOffers","lenderEmail","lenderIsAlreadyInMailingList","promises","offer","makeFeedback","model","option","FEEDBACK_OPTIONS","NEGATIVE_WITHOUT_FOLLOW_UP","saveFeedback","updatePromotionInvitedBy","reuseProperty","getMaxPropertyValueRange","maxPropertyValues","sortedValues","propertyValueA","propertyValueB","showMin","showSecondMax","secondMax","maxOrganisationLabel","ORGANISATION_NAME_SEPARATOR","getMaxPropertyValueWithoutBorrowRatio","features","ORGANISATION_FEATURES","lenderOrganisations","lenderRulesFragment","setMaxPropertyValueWithoutBorrowRatio","userLoan","mainMaxPropertyValueRange","secondMaxPropertyValueRange","borrowerHash","main","second","addNewMaxStructure","newResidenceType","firstOrganisationName","propertyWithCanton","propertyCanton","createNewProperty","CANTONS","getZipcodeForCanton","getLoanCalculator","lenderOrganisationLink","expireAnonymousLoans","lastWeek","$ne","UNSUCCESSFUL","multi","insertBorrowers","amount","existingBorrowers","borrowerId1","borrowerId2","resetLoan","SOLVENCY","linkPromotion","promotionLoan","unlinkPromotion","setCreatedAtActivityDescription","activities","createdAtActivityId","SyncedCron","schedule","parser","job","$exists","$nin","$elemMatch","assignedEmployeeId","hasPromotion","noPromotion","owned","relevantOnly","providedUserId","calledByUserId","fetchOrganisationLoans","cacher","getLoanIds","withReferredBy","resolver","proLoansResolver","proPromotionLoansResolver","proPropertyLoansResolver","proReferredByLoansResolver","embodyParams","disableUserFormsListener","Analytics","loanInsert","loanUpdate","loanDelete","requestLoanVerification","confirmClosing","pushLoanValue","popLoanValue","adminLoanInsertHandler","adminUserId","adminLoanInsert","userLoanInsert","proPropertyId","LEAD","addStructureHandler","addNewStructure","removeStructureHandler","removeStructure","updateStructureHandler","updateStructure","selectStructureHandler","selectStructure","duplicateStructureHandler","duplicateStructure","loanUpdatePromotionInvitedBy","setLoanStep","userAllowedSteps","loanShareSolvency","anonymousLoanInsert","existingLoan","existingAnonymousLoanId","loanInsertBorrowers","adminLoanReset","loanLinkPromotion","loanUnlinkPromotion","loanSetCreatedAtActivityDescription","loanSetStatus","proLoansFragment","proLoans","isSolventForProProperty","PROPERTY_SOLVENCY","mainMaxValue","secondMaxValue","handleLoanSolvencySharing","propertiesWithSolvency","anonymizePromotionLoans","promotions","promotionLoanAnonymizer","makePromotionLoanAnonymizer","anonymizePropertyLoans","proPropertyIds","anonymizeReferredByLoans","doesUserShareCustomers","$metadata","shareCustomers","mainOrganisation","mainOrganisationsUserIds","mainOrganisationId","mainOrganisationUsers","userLoans","shouldShowPromotionLoan","getRelatedProPropertiesOfUser","promotionHasUser","getRelatedPromotionsOfUser","PROMOTIONS_COLLECTION","organisationLoans","revenues","revenue","promotionLoans","relatedTo","propertyLoans","referredByLoans","uniqBy","loanIds","promotionLoanIds","propertyLoanIds","merge","loanProgress","emptyLoan","loanStep1","loanStep2","assignedEmployeeCache","dueAt","isPrivate","assigneeLink","LinkInitializer","promotionOptions","financedPromotion","Promotions","attributedPromotionLots","ONGOING","CLOSING","BILLING","FINALIZED","PENDING","TEST","LOAN_STATUS_ORDER","ACQUISITION","REFINANCING","CONSTRUCTION","AG","AR","AI","BL","BS","BE","FR","GE","GL","GR","JU","LU","NE","NW","OW","SG","SH","SZ","SO","TG","TI","UR","VD","VS","ZG","ZH","LI","FIRST","SECOND","BOTH","INSURANCE_USE_PRESET","WITHDRAWAL","COLLATERAL","LOAN_STRATEGY_PRESET","FIXED","MANUAL","AMORTIZATION_TYPE","INDIRECT","DIRECT","PAYMENT_SCHEDULES","MONTHLY","YEARLY","SEMESTERLY","LOAN_QUERIES","ADMIN_LOANS","ANONYMOUS_LOAN","FULL_LOAN","LOAN_FILES","LOAN_SEARCH","PRO_LOANS","PRO_PROMOTION_LOANS","PRO_PROPERTY_LOANS","PRO_REFERRED_BY_LOANS","USER_LOANS_E2E","USER_LOANS","WITHDRAW","PLEDGE","REQUEST","OFFERS","STEP_ORDER","REQUESTED","FULL","LOCAL_STORAGE_ANONYMOUS_LOAN","EMPTY_STRUCTURE","STANDARD","PREMIUM","Boolean","adminLoans","anonymousLoan","maxPropertyValueExists","fullLoan","loanSearch","proPromotionLoans","proPropertyLoans","proReferredByLoans","withFilteredPromotions","userProperty","loanPromotionOption","formatLoanWithStructure","hasProProperty","nextDueTask","nextDueTaskReducer","LotSchema","currentPromotionLot","lotId","currentPromotionLotId","currentPromotionLotStatus","PROMOTION_LOT_STATUS","ERROR_CODES","LOT_ERRORS","PromotionLotService","lotInsert","lot","LotService","PromotionService","lotUpdate","lotRemove","Lots","promotionLots","LOTS_COLLECTION","LOT_TYPES","BASEMENT","PARKING_MOTORBIKE","PARKING_CAR","PARKING_IN_A_ROW","PARKING_DISABLED","getMixpanelAuthorization","btoa","API_SECRET","getServerTime","downloadPDF","addBorrower","newBorrowerId","setUserToLoan","currentUserId","removeBorrower","submitContactForm","addUserToDoc","newUserId","throwDevError","promiseNoReturn","Services","migrateToLatest","migrate","updateDocument","updateDocumentUnset","generateScenario","scenario","generator","logMethod","isActive","global","window","addQuery","addQueryToRefetch","t","removeQueryToRefetch","refetchQuery","ClientEventService","refetchQueries","methodName","rateLimit","timeRange","Mutation","run","callParams","pathname","aopData","setHandler","self","fn","Migrations","up","Properties","down","version","mapStepUp","mapStepDown","allLoans","allUsers","isMain","restMeta","collections","docs","index2","allProperties","monthlyExpenses","allContacts","closingDate","signingDate","priority","TASK_PRIORITIES","allRevenues","Revenues","organisationLinks","link","paidAt","paidDate","PERMISSIONS","canSellLots","canModifyLots","canRemoveLots","canModifyPromotion","canManageDocuments","canBookLots","canInviteCustomers","canAddLots","displayCustomerNames","allPromotions","newUserLinks","permissions","oldUserLinks","maxSolvency","maxMain","maxSecond","allOrganisations","Organisations","contactIds","newContactIds","groupBy","loanMonitoringResolver","defaultFilters","getPredicate","$match","getProjection","$project","createdYear","$year","createdMonth","$month","$arrayElemAt","input","as","cond","$eq","getRevenues","$lookup","localField","foreignField","$unwind","$addFields","revenueDate","$cond","if","REVENUE_STATUS","then","else","revenueYear","revenueMonth","getGroupBy","month","getGrouping","$sum","$group","getSort","$sort","buildPipeline","loanMonitoring","pipeline","agg","MortgageNoteSchema","rank","mortgageNote","MortgageNotes","mortgageNoteId","mortgageNoteInsert","MortgageNoteService","mortgageNoteRemove","mortgageNoteUpdate","MORTGAGE_NOTES_COLLECTION","MORTGAGE_NOTES_QUERIES","readNotification","notificationId","read","snoozeNotification","inOneHour","snoozeDate","unreadNotification","readNotificationAll","notification","recipientLinks","recipientLink","addTaskNotifications","TASK_STATUS","admins","existingNotification","taskId","taskLink","addActivityNotifications","yesterday","recipients","activityLink","addRevenueNotifications","expectedAt","revenueId","revenueLink","getNotificationRecipient","TaskService","unread","_userId","generateAllNotifications","Notifications","task","NOTIFICATIONS_COLLECTION","NOTIFICATION_QUERIES","ADMIN_NOTIFICATIONS","NotificationSchema","minCount","adminNotifications","relatedDoc","Offers","OfferService","offerInsert","offerUpdate","offerDelete","offerSendFeedback","getRandomCondition","conditions","getRandomCounterpart","counterparts","round","rand","getRandomOffer","rate1","rate2","loanWanted","maxAmountLimited","counterpart","maxAmount","interestLibor","interest1","interest2","interest5","interest10","methodDefinitions","offerMethods","OFFER_TYPE","COUNTERPARTS","OFFERS_COLLECTION","OFFER_QUERIES","LOAN_OFFERS","ADMIN_OFFERS","OfferSchema","fees","epotekFees","lenderLink","withCounterparts","enableOffer","lenderCache","AdminOfferSchema","adminOffers","loanOffers","setCommissionRates","commissionRates","threshold","previousThreshold","previousRate","makeFilter","param","tags","hasRules","$body","organisationInsert","OrganisationService","organisationUpdate","organisationRemove","addContactToOrgnaisation","addUserToOrganisation","removeUserFromOrganisation","generatedRevenues","commissionRate","getCurrentRate","referredCustomers","sourceOfRevenues","ORGANISATIONS_COLLECTION","ORGANISATION_TYPES","BANK","INSURANCE","PRIVATE_BANK","REAL_ESTATE_BROKER","NOTARY_OFFICE","CONSTRUCTION_COMPANY","DEVELOPER","ARCHITECT","ORGANISATION_QUERIES","ADMIN_ORGANISATIONS","FILES","ORGANISATION_SEARCH","PRO_ORGANISATION","USER_ORGANISATIONS","LENDER","PRO","ORGANISATION_TAGS","CH_PREMIUM","CH_RETAIL","FR_RETAIL","FR_PREMIUM","YACHTING","HELICOPTERS_LEASING","LBO","OrganisationSchema","lenderRulesCount","adminOrganisations","fullOrganisation","organisationSearch","offerCount","tot","PromotionLotSchema","AVAILABLE","propertyLinks","lotLinks","attributedToLink","addLotToPromotionLot","removeLotLink","bookPromotionLot","BOOKED","cancelPromotionLotBooking","sellPromotionLot","SOLD","proPromotionLotResolver","promotionLotInsert","promotionLotUpdate","promotionLotRemove","makePromotionLotAnonymizer","promotionLot","proPromotionLotFragment","PromotionLots","lots","attributedTo","PROMOTION_LOTS_COLLECTION","PROMOTION_LOT_REDUCED_STATUS","BOOKED_FOR_ME","NOT_AVAILABLE","SOLD_TO_ME","PROMOTION_LOT_QUERIES","APP_PROMOTION_LOT","PRO_PROMOTION_LOT","PROMOTION_LOT_FILES","appPromotionLot","appPromotionLotFragment","proPromotionLot","propertiesValue","lotsValue","reducedStatus","PromotionOptionSchema","promotionLotLinks","solvency","PROMOTION_OPTION_SOLVENCY","existingPromotionOption","fullPromotionOption","getPromotion","promotionOption","newPriorityOrder","changePriorityOrder","change","optionIndex","increasePriorityOrder","reducePriorityOrder","promotionOptionIds","anonymize","makePromotionOptionAnonymizer","PromotionOptions","promotionOptionInsert","promotionOptionUpdate","promotionOptionRemove","increaseOptionPriority","PROMOTION_OPTIONS_COLLECTION","PROMOTION_OPTION_QUERIES","APP_PROMOTION_OPTION","PRO_PROMOTION_OPTIONS","UNDETERMINED","SOLVENT","INSOLVENT","appPromotionOption","appPromotionOptionFragment","proPromotionOption","proPromotionOptions","attributedToMe","SCHEMA_BOOLEAN","promotionPermissionsSchema","checkboxes","PROMOTION_PERMISSIONS","PromotionSchema","PROMOTION_STATUS","constructionTimeline","BasePromotionSchema","PROMOTION_PERMISSIONS_FULL_ACCESS","insertPromotionProperty","PROMOTION","inviteUser","pro","sendInvitation","allowAddingUsers","adminId","sendPromotionInvitationEmail","logos","promotionImage","proUserId","addProUser","removeProUser","setUserPermissions","removeLoan","editPromotionLoan","promotionOptionLots","promotionOptionsToRemove","simple","oldContacts","formatPhoneNumber","promotionInsert","promotionUpdate","promotionRemove","setPromotionUserPermissions","addProUserToPromotion","removeProFromPromotion","removeLoanFromPromotion","ANONYMIZED_STRING","ANONYMIZED_USER","getUserPromotionPermissions","getCustomerInvitedBy","loanPromotions","getPromotionLotStatus","getBestPromotionLotStatus","clientGetBestPromotionLotStatus","getPromotionCustomerOwnerType","getCustomerOwnerType","currentUser","shouldAnonymize","customerOwnerType","clientShouldAnonymize","isAttributed","makeLoanAnonymizer","attr","promotionLotStatus","anonymizeUser","isAnonymized","lenderOrganisation","isNewUser","PROMOTION_INVITED_BY_TYPE","getCurrentUserPermissionsForPromotion","organisationUserIds","myPromotionLotStatuses","shouldHideForLotStatus","forLotStatus","shouldHide","PROMOTION_TYPES","CREDIT","CANCELLED","FINISHED","OPEN","PREPARATION","PROMOTION_QUERIES","ADMIN_PROMOTIONS","APP_PROMOTION","PRO_PROMOTION","PRO_PROMOTIONS","PRO_PROMOTION_USERS","PROMOTION_FILES","PROMOTION_SEARCH","PRO_PROMOTION_SIMPLE","ANY","ORGANISATION","DISPLAY_CUSTOMER_NAMES","FOR_LOT_STATUS","INVITED_BY","PROMOTION_PERMISSIONS_BUNDLES","INVITATION","settings","CONSULTATION","consultation","MODIFICATION","BOOKING","SELLING","adminPromotions","adminPromotionsFragment","proPromotion","searchPromotions","appPromotion","withFilteredLoan","promotionSearch","proPromotions","proPromotionUsers","promotionLotStatusReducer","soldPromotionLots","bookedPromotionLots","availablePromotionLots","propertyPermissionsSchema","canInviteProUsers","canModifyProperty","canManagePermissions","canSellProperty","canBookProperty","propertyConstants","referredBy","multiline","rowsMax","investmentRent","areaNorm","gardenArea","numberOfFloors","floorNumber","bathroomCount","volume","isCoproperty","copropertyPercentage","isNew","latitude","longitude","landValue","constructionValue","additionalMargin","useOpenGraph","externalUrl","imageUrls","Url","loanCount","userAllowedKeys","PropertySchemaAdmin","removePropertyFromLoan","addresses","proName","sendPropertyInvitationEmail","formattedAddresses","multiple","proPropertyInsert","PROPERTY_PERMISSIONS_FULL_ACCESS","setProUserPermissions","removeProFromProperty","removeCustomerFromProperty","insertExternalProperty","existingProperty","fetchOrganisationProperties","otherOrganisationUsers","orgUserId","userLinkId","propertyInsert","propertyUpdate","propertyDelete","pushPropertyValue","popPropertyValue","pullPropertyValue","evaluateProperty","propertyDataIsInvalid","addProUserToProperty","setProPropertyPermissions","getUserProPropertyPermissions","proProperties","getCustomerReferredBy","getProPropertyStatus","getProPropertyCustomerOwnerType","propertyStatus","makeProPropertyLoanAnonymizer","propertiesPermissionsAndStatus","shouldAnonymizeUser","anonymizeForProperty","openGraphData","asyncFunc","MINERGIE_CERTIFICATE","emptyProperty","fakeProperty","VOLUME_NORM","propertyMethods","loanResidenceType","getLoanResidenceType","WITHOUT_CERTIFICATE","INVESTMENT","PROPERTY_REFERRED_BY_TYPE","getCurrentUserPermissionsForProProperty","organisationIds","hasNoPermissions","shouldAnonymizeWhenReferredByTypeUser","shouldHideForPropertyStatus","shouldAnonymizeWhenReferredByTypeOrganisation","PROPERTY_STATUS","FOR_SALE","SECOND_RESIDENCE","COMMERCE","SIA_416","SIA_116","BIC","AREA_NORM","NIA","NLS","PROPERTY_QUERIES","ADMIN_PROPERTIES","ANONYMOUS_PROPERTY","PRO_PROPERTIES","PRO_PROPERTY_USERS","PROPERTY_FILES","PROPERTY_SEARCH","USER_PROPERTY","HOUSE_TYPE","DETACHED","ATTACHED_END_BUILDING","ATTACHED_MID_TERRACE_BUILDING","SINGLE_FLOOR_APARTMENT","DUPLEX_APARTMENT","PENTHOUSE_APARTMENT","PENTHOUSE_MAISONETTE","MINERGIE_P","MINERGIE_ECO","MINERGIE_P_ECO","OTHER_CERTIFICATE","PROPERTY_PERMISSIONS","FOR_PROPERTY_STATUS","REFERRED_BY","forPropertyStatus","NOT_SHARED","adminProperties","adminProperty","anonymousProperty","userPropertyFragment","propertySearch","proProperty","proPropertyUsers","thumbnail","valuePerSquareMeterInside","valuePerSquareMeterLand","hasOrg","org","collectionSearches","COLLECTIONS","searchDatabaseResolver","searchDatabase","RESOLVERS","defaultParams","skip","$skip","$limit","defaultFilter","getValidateParams","addSort","addSkip","addLimit","addPaginate","addOptions","addFilters","bodyFilter","overrideFilter","getEmbody","getFirewall","caching","SEARCH_DATABASE","RevenueSchema","REVENUE_TYPES","EXPECTED","COMMISSION_STATUS","TO_BE_PAID","sourceOrganisationLink","loanCache","getGeneratedRevenues","CLOSED","sharedAmount","consolidateRevenue","consolidateCommission","commissionStatus","sourceOrganisationId","modifier","newPaidAt","revenueInsert","RevenueService","revenueRemove","revenueUpdate","sourceOrganisation","adminRevenues","REVENUE_QUERIES","REVENUES_COLLECTION","ADMIN_REVENUES","MORTGAGE","FEE","REVENUE_TYPES_INSURANCE","DEATH_3A","DEATH_3B","INCOME_PROTECTION_3A","INCOME_PROTECTION_3B","LIFE_3A","LIFE_3B","REVENUE_SECONDARY_TYPES","PAID","hasMinimumRole","checkProPropertyPermissions","isUserLinkedToProperty","isAllowedToViewProProperty","isAllowedToInviteCustomersToProProperty","requiredPermissions","isAllowedToInviteProUsersToProProperty","isAllowedToManageProPropertyPermissions","isAllowedToRemoveCustomerFromProProperty","isAllowedToModifyProProperty","isAllowedToSeeProPropertyCustomers","userPermissions","isAllowedToBookProProperty","isAllowedToBookProPropertyToCustomer","isAllowedToSellProProperty","isAllowedToSellProPropertyToCustomer","checkPromotionPermissions","promotionStatus","isAllowedToViewPromotion","isAllowedToInviteCustomersToPromotion","isAllowedToRemoveCustomerFromPromotion","isAllowedToModifyPromotion","isAllowedToManagePromotionDocuments","isAllowedToSeePromotionCustomers","isAllowedToAddLotsToPromotion","isAllowedToModifyPromotionLots","isAllowedToRemovePromotionLots","isAllowedToBookPromotionLots","isAllowedToBookPromotionLotToCustomer","isAllowedToSellPromotionLots","isAllowedToSellPromotionLotToCustomer","LoanSecurity","checkingFunction","anonymizer","PromotionSecurity","objects","hasProperty","BorrowerSecurity","SECURITY_ERROR","userIdIsValid","userLinksIsValid","permission","userPermission","requiredPermission","allowedRoles","isAllowed","allowedRole","me","DOCUMENT_USER_PERMISSIONS","MODIFY","READ","LOGO_URL","shouldNotLog","ERRORS_TO_IGNORE","channel","icon_url","mrkdwn","isArray","attachments","mrkdwn_in","pretext","getClientMicroservice","color","colors","ts","primary","environment","notifyAlways","slackPayload","title_link","APIUser","isUser","loanNameEnd","docLabel","infoProgress","propertyProgress","documentsProgress","progressParts","percentFormatters","serverSide","isServer","notifyAssignee","notifyOfUpload","promotionLotBooked","promotionLotSold","notificationPropertyIds","invitedUser","sendPropertyInvitations","sendPromotionInvitations","referralOnlyNotification","referral","newAnonymousLoan","newLoan","newUser","propertyInviteNotification","promotionInviteNotification","lotName","updateWatcherNotification","period","newLoansResolver","loanHistogramResolver","newLoans","loanHistogram","dateInPast","days","end1","end2","period1","period2","aggregation","$dateToString","dueAtTime","Tasks","minutes","completedAt","newAssigneeId","getUptoDate","uptoDate","assigneeId","taskInsert","taskUpdate","taskComplete","taskChangeStatus","setAssigneeOfTask","USERS_COLLECTION","taskMethods","TASK_QUERIES","TASKS_COLLECTION","ACTIVE","COMPLETED","TASKS","UNASSIGNED_TASKS","TASKS_FOR_DOC","SIDENAV_TASKS","HIGH","TasksSchema","addUpdateWatching","that","hookHandle","changedFields","previousDoc","previous","getChangedFields","intersection","updateWatcher","existingUpdateWatcher","currentWatcher","insertWatcher","updatedFields","current","createFieldDiffs","previousValue","currentValue","getUpdatedFieldDiffs","updatedField","newValue","previouslyUpdatedFields","newFields","difference","updatedDiffs","newDiffs","getOldUpdateWatchers","secondsFromNow","foundWatchers","processUpdateWatcher","getNotificationTitle","suffix","formatUpdatedFields","formatField","previousValueIsNonEmpty","formatArrayDiff","stringifiedPrevious","stringifiedCurrent","differentValues","_currIndex","_atIndex","diff","prev","removedValues","formatObjectDiff","updated","parentName","formatValue","manageUpdateWatchers","UpdateWatchers","UpdateWatcherSchema","UPDATE_WATCHERS_COLLECTION","employees","password","sendEnrollmentEmail","services","newEmail","privateKey","apiPublicKey","proAssignedEmployeeId","existingAssignedEmployeeId","referOnly","internalPropertyIds","fullUser","getByEmail","getEnrollmentUrl","domain","setReferredBy","setReferredByOrganisation","proInviteUserToOrganisation","linkOrganisation","getUserMainOrganisation","proSetShareCustomers","setupRoundRobin","employee","setAssigneeForNewUser","lastCreatedUser","newAssignee","roundRobinAdvisors","userIsDev","ownReferredUsers","proReferredByUsersResolver","doesUserExist","sendVerificationLink","assignAdminToUser","assignAdminToNewUser","setRole","adminCreateUser","updateUser","getUserByPasswordResetToken","testCreateUser","removeUser","changeEmail","userUpdateOrganisations","testUserAccount","generateApiKeyPair","isProUser","getUserByEmail","setUserReferredBy","setUserReferredByOrganisation","anonymousCreateUser","origin","referralExists","ref","providedOrganisationId","proUserFragment","sentEmails","userMutations","assignedEndUsers","assignedPromotions","assignedTasks","adminUsers","USER_QUERIES","adminUser","appUser","appUserFragment","proReferredByUsers","userEmails","userSearch","getUserDisplayName","DEV","ADMIN_USERS","APP_USER","CURRENT_USER","PRO_REFERRED_BY","PRO_USER","REFERRED_USERS","USER_EMAILS","USER_SEARCH","USER_EVENTS","LOCAL_STORAGE_REFERRAL","LOCAL_STORAGE_OLD_REFERRAL","UserSchema","heartbeat","withSmartQuery","makeSkipContainer","WrappedComponent","componentWillReceiveProps","setWrappedComponent","container","render","FinalComponent","makeRenderMissingDocIfNoData","single","renderFunc","branch","renderComponent","makeMapProps","dataName","mapProps","withQueryRefetcher","lifecycle","componentDidMount","refetch","componentWillUnmount","withGlobalQueryManager","reactive","shouldActivateGlobalRefetch","refetchOnMethodCall","calculateParams","queryOptions","renderMissingDoc","smallLoader","completeQuery","withQuery","loadOnRefetch","withLoading","UNAUTHORIZED","PROMOTION_LOT_BOOKED_OR_SOLD","TEST_LASTNAME","TEST_FIRSTNAME","TEST_PHONE","getRandomLoanName","Factory","faker","getSingularFactoryName","arrayify","maybeArray","findCollectionNameByLinkName","findLinkKeys","__links","linkNames","links","insertDoc","factory","docExists","useFactories","docsById","pushId","uniq","pushDoc","createNestedObject","linkKeys","docToInsert","insertedDoc","_factory","linksToInsert","linkCollection","linkedDocs","linkedDoc","parentId","collectionService","docsInCollection","directInit","inversedInit","setLinks","userToFind","getUserId","referenceField","isDev","enableGrapherLive","process","SUCCESS","WARNING","baseBorrower","thirdPartyFortune","loanBase","adminLender","maxIncomeRatioTight","minCash","userPropertyValue","adminPropertyValue","userMaxPropertyValue","adminMaxPropertyValue","readAt","simpleUser","baseOrganisation","organisationUser","promotionProperty","basePromotion","propertySummary","fullProperty","pictures","proPropertySummary","baseTask","constants","schemas","ValidIcon","hide","STATUS","classnames","fade","PropTypes","ValidIconContainer","HIDE","TODO","SAVING_ANIMATION_DURATION_MS","todo","saving","nextSaving","div","position","infoIcon","bottom","left","padding","infoStyle","borderColor","cleanValue","isEqual","showInfo","inputProps","inputType","history","showSaving","shouldSave","updateFunc","errorText","decimal","valueIsDifferent","nextProps","valueExistsInHistory","inputLabelProps","otherProps","focused","savingIconStyle","AutoFormTextInput","autocomplete","floatingLabelFixed","bool","inputStyle","noValidator","number","saveOnChange","showValidIconOnChange","handleCheck","isInputChecked","top","right","wrapper","FormValidator","checked","isRequired","EmailLoanChecklist","labels","el","getChecklistMissingInformations","LoanChecklistEmailSection","missingInformations","displayColumn","column","LoanChecklistEmailTable","columns","shouldDisplayPropertyChecklist","makeLabelOverrider","formatFileTitle","labelOverrider","getPropertyMissingFields","displayPropertyChecklist","getPropertyMissingDocuments","getBorrowersMissingFields","getBorrowersMissingDocuments","IntlDate","MetricArea","shouldRenderDash","IntlNumber","getValue","rounded","currency","Money","tag","displayZero","Percent","showPlus","formattedValue","defaultTranslationValues","translationValues","makeAutoTooltip","T","Auto","formattedMessage","tooltipPlacement","defaultIntlValues","Provider","translationContext","getTooltip1Id","getTooltip2Id","Tooltip","tooltipConfig","double","isDoubleTooltip","zIndex","marginTop","handleClose","passedProps","loadable","loader","createRegexThatFindsAnyWordFromList","list","reformatString","parseTextForTooltips","reactStringReplace","autoTooltipParser","tooltipList","TOOLTIP_LISTS","AutoTooltip","tooltipId","GENERAL","TooltipContainer","Consumer","TooltipProvider","TooltipProviderContainer","handleClick","TooltipOverlay","delayShow","placement","trigger","findSynonymsForTooltipId","tooltipMatcher","synonym","TooltipSynonyms","synonyms","generalTooltips","TEXT_AREA","HTML_PREVIEW","COMPONENT_TYPES","ARRAY","RENDER","FIELDS_TO_IGNORE","BorrowerAddPartner","isLoading","withState","withProps","setLoading","theme","root","backgroundColor","raised","getColor","getVariant","outlined","getContent","iconAfter","icon","height","Button","childProps","variant","Comp","button","withLoadingProp","loading","withStyles","CantonField","readOnly","injectIntl","Checkbox","onChange","open","isSubmit","isCancel","onClose","finalActions","actions","closeOnly","disableClose","enableClose","e","renderTrigger","handleOpen","renderProps","DialogSimple","autoFocus","autoScroll","buttonStyle","close","important","onOpen","passProps","rootStyle","secondary","DevError","margin","marginLeft","LayoutError","iconMap","add","addBasic","warning","menu","forum","mail","phone","waiting","dropdown","search","powerOff","lock","lockOpen","home","building","dashboard","folder","loop","person","face","eye","eyeCrossed","more","star","starHalf","starEmpty","accountCircle","personAdd","offlinePin","dollarSign","contactMail","people","developerMode","save","supervisorAccount","checkCircle","radioButtonChecked","flash","report","deleteForever","deleteSweep","groupAdd","edit","trendingUp","trendingDown","trendingFlat","expandMore","backupRestore","arrowUp","arrowDown","attachFile","health","help","monetizationOn","chart","image","delete","phoneLink","openInNew","computer","snooze","dragHandle","priorityHigh","PriorityHigh","Icon","iconStyle","MyIcon","onClick","Loading","small","Dialog","node","useInputLabelWidth","inputLabelRef","setLabelWidth","labelWidth","setTimeout","POSITIVE","NEGATIVE_NOT_COMPETITIVE","CUSTOM","FEEDBACK_OPTIONS_SETTINGS","enableComments","enableOutro","enableCustomIntro","greetings","contactName","introduction","borrower1","borrower2","outro","singleBorrower","closing","customFeedback","comment","PercentWithStatus","fill","success","StatusIcon","getDefaults","simpleOnChange","onChangeHandler","toNumber","showMask","mask","parseFloat","onDateChange","getFinalPlaceholder","finalPlaceholder","TextInput","fontSize","inputComponent","noValidate","pattern","noIntl","safeChange","RadioButtons","radioGroupStyle","flexDirection","intlPrefix","any","DEMO_PROMOTION","createLots","lotIds","getDistinctRandomValues","shuffle","addPromotionOptions","random","createUsers","withInvitedBy","range","promotionCustomerId","createPromotionDemo","createDemoPromotion","isAuthorizedToRun","getAdmins","newAdmins","createAdmins","deleteUsersRelatedData","usersToDelete","deleteUsers","createFakeLoanFixture","createFakeLoan","createFakeOffer","createTestUserWithData","testUserId","createUser","completeFiles","generateTestData","devs","createDevs","newUsers","createFakeUsers","createOrganisations","loanStep","LOANS_PER_USER","loanIndex","purgeFakeData","fakeUsersIds","getFakeUsersIds","purgePersonalData","insertLoanRelatedTask","createFakeInterestRates","addEmptyLoan","isRefinancing","addLoanWithData","addOffers","addLoanWithSomeData","addCompleteLoan","addAnonymousLoan","addUserToOrg","orgId","insertFakeBorrower","createFakeBorrowers","getRelatedBorrowerIds","usersIds","USER_COUNT","ADMIN_COUNT","DEV_COUNT","UNOWNED_LOANS_COUNT","USER_PASSWORD","E2E_DEV_EMAIL","E2E_USER_EMAIL","FAKE_INTEREST_RATES_MEANS","fakeInterestRates","dates","fakeRates","createLenderRules","purchaseTypes","getRandomValueInArray","getRandomStructure","createFakeProperty","getRelatedLoansIds","loanData","offerIds","getOrgIds","allOrganisationIds","randomOrganisationId","orgs","contactCount","statuses","residenceTypes","volumeNorms","minergies","getRandomValueInRange","getRelatedPropertyIds","currentUserEmail","insertedUsers","addUser","currentEmail","regex","fakeUserIds","fakeUser","microservice","appSecret","Kadira","AccountsUI","passwordSignupFields","loginPath","homeRoutePath","profilePath","changePasswordPath","minimumPasswordLength","withBorrowerCalculator","SuperClass","initBorrowerCalculator","middlewareManager","getArrayValues","mapFunc","getBonuses","bonusKeys","getBonusIncome","acc","weighting","getConsideredValue","valuesToConsider","getBorrowerCompletion","getBorrowerFilesProgress","percentages","fileArray","getFunds","getFortune","getThirdPartyFortune","getExpenses","getInsurance2","getInsurance3A","getBank3A","getInsurance3B","getInsuranceFortune","getCashFortune","getMissingBorrowerFields","formArray","getBorrowerInfoArray","formArray2","getBorrowerFinanceArray","getMissingFieldIds","getMissingBorrowerDocuments","getOtherFortune","getOtherIncome","getTotalFunds","getRealEstateFortune","getRealEstateValue","getRealEstateDebt","getRealEstateIncome","getRealEstateIncomeTotal","REAL_ESTATE_INCOME_ALGORITHMS","shouldUseNetSalary","getSalary","getNetSalary","getFortuneReturns","getTotalIncome","borrowerIncome","getRetirement","argMap","getAmortizationDuration","retirement","personalInfoPercent","personalFormArray","financeFormArray","getCountedArray","personalInfoPercentSimple","simpleFormArray","getBorrowerSimpleArray","borrowerInfoPercent","borrowerFinancePercent","getBorrowerFormHash","getFormValuesHashMultiple","sumValues","getNetFortune","getMortgageNotes","notes","getRealEstateExpenses","realEstateCost","getRealEstateDeltas","allRealEstate","getRealEstateCost","amortizationRate","propAndWork","sumArray","getAllExpenses","deltas","delta","getGroupedExpenses","flattenedExpenses","shouldSubtractExpenseFromIncome","groupRealEstateDeltas","negativeDeltas","positiveDeltas","getGroupedExpensesBySide","expensesBySide","subtractExpenseTypeFromIncome","groupedExpenses","expenseTypeIsDelta","formatRealEstateExpenses","subtract","getFormattedExpenses","getCommentsForExpenseType","expensesOfType","getCommentsForOtherIncomeType","otherIncomeOfType","canCalculateSolvency","withCombinedCalculator","filesProgress","progress","f","getAggregatePercent","withLenderRulesInitializator","sortedlenderRules","orderA","orderB","globalRules","primaryRules","secondaryRules","storeRuleOrigin","getOriginOfRule","getLenderRulesVariables","getGlobalLenderRules","matchingRules","getPrimaryLenderRules","getSecondaryLenderRules","lenderRulesIsSecondary","applyRules","rulesToApply","cleanUpUnusedRules","withLoanCalculator","getProjectValue","getTotalUsed","getTotalPledged","getFees","calculatedNotaryFees","getFeesCalculator","getInterests","finalInterestRates","interests","tranches","getTheoreticalInterests","firstRank","secondRank","firstRankInterests","secondRankInterests","getTheoreticalMaintenance","getAmortization","offerOverride","offerToUse","oldAmortizationGoal","getTheoreticalAmortization","getAmortizationRate","cacheFix","getMonthly","getTheoreticalPropertyCost","maintenance","getTheoreticalMonthly","expensesToAddToTheoreticalCost","getIncomeRatio","cost","ratio","getMaxBorrowRatio","loanHasMinimalInformation","getLoanFilesProgress","getMissingLoanDocuments","getTotalFinancing","getNonPledgedOwnFunds","getPledgedOwnFunds","getUsedFundsOfType","ownFundType","ownFundUsageType","getRemainingFundsOfType","getTotalRemainingFunds","refinancingPercent","getRefinancingFormArray","getMortgageNoteIncrease","propertyMortgageNotes","borrowerMortgageNotes","structureMortgageNotes","allMortgageNotes","mortgageNoteValue","getCashUsed","getCashRatio","cashUsed","cashRatio","hasEnoughCash","structureIsValid","getEstimatedRevenues","getEstimatedReferralRevenues","getRequiredOwnFunds","projectValue","getMissingOwnFunds","fundsRequired","totalCurrentFunds","isMissingOwnFunds","missingOwnFunds","hasTooMuchOwnFunds","hasCompleteStructure","withOfferCalculator","withPromotionCalculator","canAffordPromotionLot","getSolvency","cashFortune","withBankFortune","withInsurance2","cash","withInsurance3","withInsurance2And3","getMaxPropertyValueWithInsurance2","availableFortune","canAffordProperty","getIncomeLimitedProperty","nF","r","mR","m","fortune","formatPromotionOptionIntoProperty","shouldUseConstructionNotaryFees","withPropertyCalculator","initPropertyCalculator","propertyPercent","propertyToCalculateWith","formArray1","getPropertyArray","getPropertyLoanArray","getPropAndWork","getPropertyWork","getPropertyFilesProgress","getPropertyCompletion","selectedProperty","formsProgress","getMissingPropertyFields","getMissingPropertyDocuments","hasDetailedPropertyValue","propertyExactValue","isPromotionProperty","withSelector","selectProperty","selectOffer","makeSelectPropertyKey","createSelector","selectStructureKey","selectPropertyKey","makeSelectStructureKey","selectPropertyValue","structurePropertyValue","selectPropertyWork","selectLoanValue","INITIAL_MIN_BOUND","INITIAL_MAX_BOUND","INITIAL_ABSOLUTE_MAX_BOUND","MAX_ITERATIONS","ACCURACY","ROUNDING_DIGITS","MAX_BOUND_MULTIPLICATION_FACTOR","OWN_FUNDS_ROUNDING_ALGO","INITIAL_BORROW_RATIO_STEP_SIZE","withSolvencyCalculator","getAllowedOwnFundsTypes","ownFundTypeRequiresUsageType","makeOwnFunds","ownFundsObject","suggestStructure","forcedNotaryFees","finalLoanValue","notaryCalc","mortgageNoteIncrease","requiredOwnFunds","allowedOwnFundsTypes","newOwnFunds","createLoanObject","suggestedStructureIsValid","getMaxPropertyValue","foundValue","minBound","maxBound","absoluteMax","iterations","nextPropertyValue","roundValue","getNextStepSize","cache","newStepSize","direction","nextValue","currentBorrowRatio","foundBetterValue","stepSize","deltaX","setMax","optimalBorrowRatio","yLeft","yRight","slope","currentMax","finalBorrowRatio","finalPropertyValue","getMaxPropertyValueForLoan","suggestStructureForLoan","withConfig","extraConfig","MappedFinanceCalculator","middlewareObject","financeCalculatorArgumentMapper","Calculator","argumentMappings","makeArgumentMapper","borrowerExtractorMiddleware","memoizeMiddleware","memoFunc","memoizeOne","gender2","retirement1","gender1","retirement2","toRetirement1","toRetirement2","yearsToRetirement","incomeLimited1","incomeLimited2","initFinanceCalculator","amortizationBaseRate","ownFundsRoundingAmount","taxRate","estimatedCommission","referralCommission","referralCommissionSplit","getLoanValue","pledgedValue","getLoanFromBorrowRatio","getBorrowRatioWithoutLoan","getBorrowRatioStatus","getRetirementForGender","monthlyPayment","getIncomeRatioStatus","getLoanCost","getLoanCostWithParts","checkInterestsAndTranches","getInterestsWithTranches","getAmortizationRateBase","amountToAmortize","getMaxLoanBase","pledgedAmount","getNotaryFeesRate","getMinCash","getFeesBase","getAveragedInterestRate","totalRate","precisionMiddleware","middlewareManagerHash","CLASS_METHODS_TO_EXCLUDE","instance","applyToAllMethods","getAllMethodNames","methodNames","proto","hasMethod","desc","applyToMethod","stringStartsWithUnderscore","useObjectMiddleware","objectMiddlewares","mappings","argumentMapperFunc","newArgumentStructure","maximumFractionDigits","minimumFractionDigits","moneyWithoutCurrency","useGrouping","percentage","percentageRounded","setupMoment","months","monthsShort","monthsParseExact","weekdays","weekdaysShort","weekdaysMin","weekdaysParseExact","longDateFormat","LT","LTS","LL","LLL","LLLL","calendar","sameDay","nextDay","nextWeek","lastDay","sameElse","relativeTime","future","past","s","mm","h","hh","d","dd","MM","y","yy","dayOfMonthOrdinalParse","ordinal","meridiemParse","isPM","meridiem","week","dow","doy","localizationStartup","setupAccounts","messages","addLocaleData","translateSimpleSchema","T9n","fr","accountsFr","translate","keyWithoutNumbers","subKey","initialLanguage","minString","maxString","minNumber","maxNumber","minNumberExclusive","maxNumberExclusive","minDate","maxDate","badDate","noDecimal","notAllowed","expectedType","dataType","regExp","inputHasChanged","newInput","newInputs","lastInputs","newArgs","lastArgs","oneInputHasChanged","calledOnce","lastThis","lastResult","resultFn","cantonConfigs","roundObjectKeys","hasDetailedConfig","shouldUseConstructionMath","hasDetailedValue","getNotaryFeesForLoan","buyersContractFees","mortgageNoteFees","deductions","propertyTransferTax","propertyRegistrationTax","roundedResult","getNotaryFeesWithoutLoan","buyersContractFeesAcquisition","notaryIncomeFromProperty","landRegistryPropertyTax","additionalFees","buyersContractFeesConstruction","propertyConstructionTax","mortgageNoteRegistrationTax","notaryIncomeFromMortgageNote","landRegistryMortgageNoteTax","getDeductions","buyersContractDeductions","transferTax","mortgageNoteDeductions","getDefaultFees","isCasatax","cantons","brackets","minTax","NOTARY_PROPERTY_BRACKETS_MIN","NOTARY_NOTE_BRACKETS","ADDITIONAL_FEES","PROPERTY_REGISTRATION_TAX","NOTARY_PROPERTY_BRACKETS","NOTARY_NOTE_BRACKETS_MIN","MORTGAGE_NOTE_REGISTRATION_TAX","LAND_REGISTRY_PROPERTY_TAX","LAND_REGISTRY_MORTGAGE_NOTE_TAX","CASATAX_CUTOFF","CASATAX_PROPERTY_DEDUCTION","PROPERTY_CONSTRUCTION_TAX","MORTGAGE_NOTE_CASATAX_DEDUCTION","TRANSFER_TAX","INFINITY","degressive","tax","previousBracket","allBrackets","bracketTax","NotaryFeesCalculator","parsePhoneNumberFromString","modifyDoc","customFunc","updatedValue","insertedValue","Fibers","removeFromFiber","MICROSERVICE","CLIENT_URL","HOST","getMicroserviceFromHost","subdomains","microserviceUrl","getClientUrl","currentHost","currentUrl","currentMicroservice","ServerIntl","messagesFR","testErrors","errorMessages","errors","checkTemplate","subObj","subTemplate","subParentKey","parsedValue","negativePrefix","roundedDecimals","integerPart","integer","decimalPart","decimals","rounding","commaReplaced","toDistanceString","dist","roundTo","roundedValue","filePath","makeDir","dir","flushDir","makeFileUploadDir","flushFileUploadDir","getCurrentValue","shouldCountField","formField","conditionalInputIsTriggered","rootField","shouldCountAllFields","fieldIsValid","inputs","additionalField","conditionalField","getFormValuesHash","simpleHash","combos","onlyNums","onlyNumsAndPlus","numberFormatters","parse","phoneFormatters","moneyFormatters","setRequired","initialValue","makeFormArray","percentageObjects","aggregateCount","aggregatePercent","normalize","char","IntlMessageFormat","defaultValues","legacyValues","allValues","ENABLE_LOADABLE","LoadableLoading","pastDelay","Loadable","delay","foundStructure","formatLoanWithDocuments","structureProperty","propertyDocuments","prevStep","activeTasks","taskStatus","tasksWithoutDate","A","noDueDate","sortedTasks","getOpenGraphMeta","createNumberMask","swissFrancMask","includeThousandsSeparator","thousandsSeparatorSymbol","swissFrancMaskDecimal","allowDecimal","requireDecimal","percentMask","decimalSymbol","allowLeadingZeroes","allowNegative","decimalMask","decimalLimit","userRoles","flatten","userHasRoles","zipcode","code","cantonIndex","c","cantonIndexForZipcode","shouldDisplayAddPartner","isFirst","makeArrayOfObjectsInput","disableAddress","addressFieldsAreNecessary","conditionalTrueValue","autoComplete","incomeArray","ignore","fortuneArray","insuranceArray","getSimpleBorrowerFinanceArray","mapInput","intlSafeObject","getOwnerOptions","isSecond","borrowerFirstName","shouldDisplayFloorNumber","shouldDisplayTerraceArea","OFFER_TABLE","WIDGET1","finma","widget1Tooltips","revenus","gratification","emprunteurs","emprunteur","offerTableTooltips","montant","libor","amortissement","expertise","devTooltips","match1","match2","tooltipsById","Error","primaryArray","tertiary","borderGrey","charts","iconColor","iconHoverColor","mui","background","contrastText","darkPrimary","darkSuccess","AUTOSAVE_DEBOUNCE","NOTARY_FEES","AMORTIZATION_STOP","MAINTENANCE_REAL","MAINTENANCE_FINMA","INTERESTS_FINMA","APPROXIMATE_LPP_FEES","DEFAULT_AMORTIZATION","AMORTIZATION_YEARS","DEFAULT_INTEREST_RATE","MAX_BORROW_RATIO_PRIMARY_PROPERTY","MAX_BORROW_RATIO_OTHER","MAX_BORROW_RATIO_WITH_PLEDGE","MAX_INCOME_RATIO","MAX_INCOME_RATIO_TIGHT","FORTUNE_WARNING_TIGHT","INCOME_WARNING_TIGHT","FORTUNE_ERROR","INCOME_ERROR","CURRENCY","MIN_CASH","AVERAGE_TAX_RATE","SECOND_PILLAR_WITHDRAWAL_TAX_RATE","VAT","BONUS_CONSIDERATION","BONUS_HISTORY_TO_CONSIDER","COMPANY_INCOME_TO_CONSIDER","DIVIDENDS_CONSIDERATION","DIVIDENDS_HISTORY_TO_CONSIDER","PENSION_INCOME_CONSIDERATION","REAL_ESTATE_INCOME_CONSIDERATION","INVESTMENT_INCOME_CONSIDERATION","FORTUNE_RETURNS_RATIO","ESTIMATED_COMMISSION","REFERRAL_COMMISSION","REFERRAL_COMMISSION_SPLIT","OWN_FUNDS_ROUNDING_AMOUNT","AVERAGE","WEAK_AVERAGE","POSITIVE_NEGATIVE_SPLIT","getRandomMinute","jobName","cronitor","randomMinute","tomorrow","parserText","parsedText","logger","api"],"mappings":"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","file":"/app.js","sourcesContent":["// @flow\nimport React from 'react';\nimport moment from 'moment';\n\nimport T, { Money } from '../../../../../../components/Translation';\nimport Calculator from '../../../../../../utils/Calculator';\nimport PdfPage from '../../PdfPage';\nimport LoanBankCoverHeader from './LoanBankCoverHeader';\nimport StructureRecapTable from './StructureRecapTable';\n\ntype LoanBankCoverProps = {\n  loan: Object,\n};\n\nconst footer = ({ name, email, phoneNumbers }) => (\n  <div className=\"cover-footer\">\n    <div className=\"assigned-employee\">\n      <h5 className=\"name\">{name}</h5>\n      <h5>{email}</h5>\n      <h5>{phoneNumbers[0]}</h5>\n    </div>\n    <div>{moment(new Date()).format('DD.MM.YYYY')}</div>\n  </div>\n);\n\nconst borrowersNames = borrowers => (\n  <h3 className=\"borrowers\">\n    {borrowers.map(({ name }) => name).join(' et ')}\n  </h3>\n);\n\nconst coverContent = ({\n  loan,\n  anonymous = false,\n  organisation,\n  structureIds,\n  calculator,\n}) => {\n  const { name, residenceType, purchaseType, borrowers } = loan;\n  const { address1, zipCode, city } = Calculator.selectProperty({ loan });\n  const propertyValue = Calculator.selectPropertyValue({ loan });\n\n  return (\n    <div className=\"cover-content\">\n      {organisation && (\n        <img src={organisation.logo} className=\"organisation-logo\" />\n      )}\n      <h1 className=\"title\">Financement hypothécaire</h1>\n      <h1 className=\"loan-name\">{name}</h1>\n      <h2 className=\"loan-type\">\n        <T id={`PDF.purchaseType.${purchaseType}`} />{' '}\n        <T id={`PDF.residenceType.${residenceType}`} />\n      </h2>\n      <h2 className=\"address\">{`${address1}, ${zipCode} ${city}`}</h2>\n      <h2 className=\"property-value\">\n        <Money value={propertyValue} />\n      </h2>\n      {!anonymous && borrowersNames(borrowers)}\n      <StructureRecapTable\n        loan={loan}\n        organisation={organisation}\n        structureIds={structureIds}\n      />\n    </div>\n  );\n};\n\nconst LoanBankCover = ({\n  loan,\n  pageNb,\n  pageCount,\n  options,\n  organisation,\n  structureIds,\n}: LoanBankCoverProps) => (\n  <PdfPage\n    className=\"cover-page\"\n    fullHeight\n    pageNb={pageNb}\n    pageCount={pageCount}\n  >\n    <LoanBankCoverHeader />\n    {coverContent({\n      loan,\n      anonymous: options && options.anonymous,\n      organisation,\n      structureIds,\n    })}\n    {footer(loan.user.assignedEmployee)}\n  </PdfPage>\n);\n\nexport default LoanBankCover;\n","// @flow\nimport React from 'react';\n\ntype LoanBankCoverHeaderProps = {};\n\nconst LoanBankCoverHeader = (props: LoanBankCoverHeaderProps) => (\n  <div className=\"cover-header\">\n    <h1>\n      <img\n        src=\"https://www.e-potek.ch/img/logo_square_black_no_border.svg\"\n        className=\"epotek-logo\"\n      />\n      e-Potek SA\n    </h1>\n    <div className=\"e-potek-address\">\n      <h6>\n        <b>e-Potek SA</b>\n      </h6>\n      <h6>Chemin Auguste-Vilbert 14</h6>\n      <h6>1218 Le Grand-Saconnex</h6>\n      <h6>+41 22 566 01 10</h6>\n    </div>\n  </div>\n);\n\nexport default LoanBankCoverHeader;\n","// @flow\nimport React from 'react';\n\nimport { Calculator } from '../../../../../../utils/Calculator';\nimport { toMoney } from '../../../../../../utils/conversionFunctions';\nimport PercentWithStatus from '../../../../../../components/PercentWithStatus';\nimport { ERROR, SUCCESS } from '../../../../../constants';\nimport { classes, ROW_TYPES } from '../../PdfTable/PdfTable';\n\ntype StructureRecapTableProps = {};\n\nconst columnStyles = [\n  { width: '50%' },\n  { width: '20%', textAlign: 'right' },\n  { width: '15%', textAlign: 'right' },\n  { width: '15%', textAlign: 'right' },\n];\n\nconst getRows = ({ loan, structureIds, organisation }) => {\n  const { lenderRules } = organisation || {};\n\n  return [\n    <tr key=\"0\" className={classes[ROW_TYPES.TITLE]}>\n      <td style={columnStyles[0]}>Scénario</td>\n      <td style={columnStyles[1]}>Prêt hypothécaire</td>\n      <td style={columnStyles[2]}>Taux d'avance</td>\n      <td style={columnStyles[3]}>Taux d'effort</td>\n    </tr>,\n    ...structureIds\n      .map(structureId => loan.structures.find(({ id }) => id === structureId))\n      .map(({ id: structureId, name }, index) => {\n        const calculator = new Calculator({\n          loan,\n          structureId,\n          lenderRules,\n        });\n        const loanValue = calculator.selectLoanValue({ loan, structureId });\n        const borrowRatio = calculator.getBorrowRatio({ loan, structureId });\n        const incomeRatio = calculator.getIncomeRatio({ loan, structureId });\n\n        return (\n          <tr key={structureId}>\n            <td style={columnStyles[0]}>\n              {name || index + 1} (page {index + 2})\n            </td>\n            <td style={columnStyles[1]}>{toMoney(loanValue)}</td>\n            <td style={columnStyles[2]}>\n              <div\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'flex-end',\n                }}\n              >\n                <PercentWithStatus\n                  value={borrowRatio}\n                  status={\n                    borrowRatio > calculator.maxBorrowRatio ? ERROR : SUCCESS\n                  }\n                />\n              </div>\n            </td>\n            <td style={columnStyles[3]}>\n              <div\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'flex-end',\n                }}\n              >\n                <PercentWithStatus\n                  value={incomeRatio}\n                  status={\n                    incomeRatio > calculator.maxIncomeRatio ? ERROR : SUCCESS\n                  }\n                />\n              </div>\n            </td>\n          </tr>\n        );\n      }),\n  ];\n};\n\nconst StructureRecapTable = ({\n  loan,\n  structureIds,\n  organisation,\n}: StructureRecapTableProps) => (\n  <table className=\"pdf-table structure-recap-table\">\n    {getRows({ loan, structureIds, organisation })}\n  </table>\n);\n\nexport default StructureRecapTable;\n","export { default } from './LoanBankCover';\nexport { default as LoanBankCoverStyles } from './styles';\n","import * as styles from '../../utils/styleHelpers';\nimport { BORDER_BLUE } from '../../../../pdfConstants';\n\nconst stylesheet = `\n    .cover-page {\n        ${styles.flex(['FLEX_COLUMN'])}\n        ${styles.flexGrow(1)}\n    }\n\n    .cover-page .cover-content {\n        ${styles.flex(['FLEX_COLUMN'])}\n        ${styles.flexGrow(1)}\n    } \n\n    .cover-content h1,h2,h3,h4,h5 {\n        color: ${BORDER_BLUE};\n    }\n\n    .cover-content .organisation-logo {\n        display: block;\n        width: auto;\n        height: auto;\n        max-height: 80px;\n        max-width: 200px;\n        align-self: center;\n        margin-top: 40px;\n        margin-bottom: -80px;\n    }\n\n    .cover-content .title {\n        margin-top: 120px;\n        margin-bottom: 0;\n    }\n\n    .cover-content .loan-name {\n        margin-top: 8px;\n        margin-bottom: 80px;\n        font-weight: normal;\n    }\n\n    .cover-content .loan-type {\n        margin: 0;\n    }\n    \n    .cover-content .address {\n        margin: 0;\n        margin-top: 8px;\n        font-weight: normal;\n    }\n\n    .cover-content .property-value {\n        margin-top: 8px;\n        font-weight: normal;\n        margin-bottom: 120px;\n    }\n\n    .cover-content .borrowers {\n        margin: 0;\n    }\n\n    .cover-page .cover-footer {\n        display: flex;\n        align-items: flex-start;\n        justify-content: space-between;\n        align-self: flex-end;\n        width: 100%;\n        border-top: 1px solid ${BORDER_BLUE};\n        padding-top: 16px;\n        color: ${BORDER_BLUE};\n    }\n\n    .cover-footer .assigned-employee {\n        ${styles.flex(['FLEX_COLUMN'])}\n    }\n\n    .cover-footer .assigned-employee >* {\n        margin: 0px;\n        font-weight: normal;\n    }\n\n    .cover-footer .assigned-employee .name {\n        font-weight: bold;\n    }\n\n    .cover-header {\n        display: flex;\n        flex-direction: row;\n        align-items: flex-end;\n        justify-content: space-between;\n        padding-bottom: 16px;\n        border-bottom: 1px solid ${BORDER_BLUE};\n    }\n\n    .cover-header h1 {\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n        margin: 0;\n        color: ${BORDER_BLUE};\n        font-weight: normal;\n    }\n\n    .cover-header .epotek-logo {\n        width: 30px;\n        height: 30px;\n        margin-right: 12px;\n    }\n\n    .cover-header .e-potek-address {\n        display: flex;\n        flex-direction: column;\n        align-items: flex-end;\n        justify-content: flex-end;\n    }\n\n    .e-potek-address h6 {\n        color: ${BORDER_BLUE};\n        font-weight: normal;\n        margin: 0;\n    }\n\n    .structure-recap-table {\n        margin-top: 100px;\n        width: 100%;\n    }\n\n    .structure-recap-table svg {\n        width: 24px;\n    }\n`;\n\nexport default stylesheet;\n","// @flow\nimport React from 'react';\n\nimport { Calculator } from '../../../../../utils/Calculator';\nimport withTranslationContext from '../../../../../components/Translation/withTranslationContext';\nimport Pdf from '../Pdf/Pdf';\nimport PropertyPdfPage from '../pages/PropertyPdfPage';\nimport StructurePdfPage from '../pages/StructurePdfPage';\nimport LenderRulesPdfPage from '../pages/LenderRulesPdfPage';\nimport BorrowersPdfPage from '../pages/BorrowersPdfPage';\nimport stylesheet from './stylesheet';\nimport LoanBankCover from './LoanBankCover';\n\ntype LoanBankPDFProps = {\n  loan: Object,\n  organisation?: Object,\n  options?: Object,\n  pdfName: String,\n};\n\nconst getPages = ({ loan, organisation, structureIds, options }) => {\n  const { lenderRules } = organisation || {};\n  const finalStructureIds = structureIds || loan.structures.map(({ id }) => id);\n  const defaultCalculator = new Calculator({ loan, lenderRules });\n  return [\n    {\n      id: 'cover',\n      Component: LoanBankCover,\n      data: {\n        loan,\n        options,\n        organisation,\n        structureIds: finalStructureIds,\n        calculator: defaultCalculator,\n      },\n    },\n    ...finalStructureIds.map((structureId, index) => {\n      const calculator = new Calculator({ loan, structureId, lenderRules });\n\n      return {\n        id: structureId,\n        Component: StructurePdfPage,\n        data: { loan, structureId, structureIndex: index, options, calculator },\n      };\n    }),\n    {\n      id: 'borrowers',\n      Component: BorrowersPdfPage,\n      data: { loan, options, calculator: defaultCalculator },\n    },\n    { id: 'property', Component: PropertyPdfPage, data: { loan, options } },\n    lenderRules\n      && lenderRules.length > 0 && {\n      id: 'lenderRules',\n      Component: LenderRulesPdfPage,\n      data: { loan, organisation, options },\n    },\n  ].filter(x => x);\n};\n\nconst LoanBankPDF = (props: LoanBankPDFProps) => {\n  const { pdfName } = props;\n  const pages = getPages(props);\n  return <Pdf stylesheet={stylesheet} pages={pages} pdfName={pdfName} />;\n};\n\nexport default withTranslationContext(() => ({ purchaseType: 'ACQUISITION' }))(LoanBankPDF);\n","export { default } from './LoanBankPDF';\n","import { MARGIN_TOP, MARGIN_SIDE, MARGIN_BOTTOM } from '../../../pdfConstants';\nimport BorrowersPageStyles from '../pages/BorrowersPdfPage/styles';\nimport PDFTableStyles from '../PdfTable/PdfTableStyles';\nimport PdfPageStyles from '../PdfPage/PdfPageStyles';\nimport PropertyPageStyles from '../pages/PropertyPdfPage/stylesheet';\nimport StructurePageStyles from '../pages/StructurePdfPage/stylesheet';\nimport LenderRulesPageStyles from '../pages/LenderRulesPdfPage/stylesheet';\nimport { LoanBankCoverStyles } from './LoanBankCover';\n\nconst stylesheet = `\n    @font-face {\n        font-family: 'Eina04';\n        font-style: normal;\n        font-weight: normal;\n        src: url('https://www.e-potek.ch/fonts/Eina04_Regular.eot');\n        src: url('https://www.e-potek.ch/fonts/Eina04_Regular.eot') format('embedded-opentype');\n        src: url('https://www.e-potek.ch/fonts/Eina04_Regular.ttf') format('truetype');\n        src: url('https://www.e-potek.ch/fonts/Eina04_Regular.woff') format('woff');\n    }\n\n    @font-face {\n        font-family: 'Eina04';\n        font-style: normal;\n        font-weight: bold;\n        src: url('https://www.e-potek.ch/fonts/Eina04_Bold.eot');\n        src: url('https://www.e-potek.ch/fonts/Eina04_Bold.eot') format('embedded-opentype');\n        src: url('https://www.e-potek.ch/fonts/Eina04_Bold.ttf') format('truetype');\n        src: url('https://www.e-potek.ch/fonts/Eina04_Bold.woff') format('woff');\n    }\n\n\n    html {\n        font-size: 12px;\n        font-family: 'Eina04', sans-serif;\n    }\n\n\n    * {\n        // border: 1px solid red;\n        // border-radius: 8px;\n    }\n\n    @page {\n        size: A4;\n        margin: ${MARGIN_TOP}mm ${MARGIN_SIDE}mm ${MARGIN_BOTTOM}mm ${MARGIN_SIDE}mm;\n\n        @top-left {\n            content: flow(top-left);\n        }\n\n        @top-right {\n            content: flow(top-right);\n        }\n\n        @top {\n          content: flow(header);\n        }\n\n        @bottom {\n          content: flow(footer);\n        }\n\n        // @bottom-right {\n        //    content: \"Page \" counter(page) \"/\" counter(pages);\n        //    font-family: Helvetica;\n        // }\n    }\n\n    .top-left {\n        flow: static(top-left);\n    }\n\n    .top-right {\n        flow: static(top-right);\n    }\n\n    .pdf-page-header {\n        flow: static(header);\n    }\n\n    .pdf-page-footer {\n        flow: static(footer);\n    }\n\n    .page-break-new {\n        border: none;\n        margin: 0;\n        padding: 0;\n        height: 0;\n        page-break-before: always;\n    }\n\n    ${PDFTableStyles}\n    ${BorrowersPageStyles}\n    ${LoanBankCoverStyles}\n    ${PdfPageStyles}\n    ${PropertyPageStyles}\n    ${StructurePageStyles}\n    ${LenderRulesPageStyles}\n`;\n\nexport default stylesheet;\n","// @flow\nimport React from 'react';\n\nimport T from 'core/components/Translation';\nimport BorrowersRecap from './BorrowersRecap';\nimport PdfPage from '../../PdfPage';\n\ntype BorrowersPdfPageProps = {\n  borrowers: Array<Object>,\n};\n\nconst BorrowersPdfPage = ({\n  loan: { borrowers },\n  calculator,\n  pageNb,\n  pageCount,\n  options,\n}: BorrowersPdfPageProps) => (\n  <PdfPage\n    className=\"borrowers-page\"\n    title={<T id=\"PDF.title.borrowers\" />}\n    withFooter\n    pageNb={pageNb}\n    pageCount={pageCount}\n  >\n    <BorrowersRecap\n      borrowers={borrowers}\n      calculator={calculator}\n      twoBorrowers={borrowers.length > 1}\n      anonymous={options && options.anonymous}\n    />\n  </PdfPage>\n);\n\nexport default BorrowersPdfPage;\n","// @flow\nimport React from 'react';\n\nimport BorrowersRecapInfo from './BorrowersRecapInfo';\nimport BorrowersRecapFinance from './BorrowersRecapFinance';\n\ntype BorrowersRecapProps = {\n  borrowers: Array<Object>,\n};\n\nconst BorrowersRecap = (props: BorrowersRecapProps) => (\n  <div className=\"borrowers-recap\">\n    <BorrowersRecapInfo {...props} />\n    <BorrowersRecapFinance {...props} />\n  </div>\n);\n\nexport default BorrowersRecap;\n","// @flow\nimport React from 'react';\nimport cx from 'classnames';\n\nimport T from 'core/components/Translation';\nimport PdfTable from '../../PdfTable';\nimport { ROW_TYPES } from '../../PdfTable/PdfTable';\nimport {\n  OTHER_INCOME,\n  OWN_FUNDS_TYPES,\n} from '../../../../../borrowers/borrowerConstants';\nimport { EXPENSE_TYPES } from '../../../../../lenderRules/lenderRulesConstants';\nimport {\n  getBorrowersInfos,\n  makeTableMoneyLine,\n  getFormattedMoneyArray,\n  addTableEmptyLine,\n  shouldRenderArray,\n} from './borrowersRecapHelpers';\n\ntype BorrowersRecapFinanceProps = {};\n\nconst renderExpenses = (expenses, addTableMoneyLine) =>\n  Object.values(EXPENSE_TYPES).map((expense) => {\n    const value = expenses[expense];\n    return addTableMoneyLine({\n      label: <T id={`PDF.borrowersInfos.expenses.${expense}`} />,\n      field: value,\n      negative: true,\n    });\n  });\n\nconst getBorrowersFinanceArray = ({ borrowers, calculator }) => {\n  const multipleBorrowers = borrowers.length > 1;\n  const addTableMoneyLine = makeTableMoneyLine(multipleBorrowers);\n  const borrowersInfos = getBorrowersInfos(borrowers, calculator);\n  const {\n    salary,\n    bonus,\n    otherIncome,\n    expenses,\n    realEstateValue,\n    realEstateDebt,\n    otherFortune,\n    realEstateIncome,\n  } = borrowersInfos;\n\n  return [\n    {\n      label: <T id=\"PDF.borrowersInfos.category.financialSituation\" />,\n      type: ROW_TYPES.TITLE,\n      data: multipleBorrowers\n        ? [null, null, <T id=\"PDF.borrowersInfos.total\" key=\"total\" />]\n        : [],\n      className: 'borrower-table-title-row',\n      colspan: multipleBorrowers ? 1 : 2,\n    },\n    {\n      label: <T id=\"PDF.borrowersInfos.income\" />,\n      type: ROW_TYPES.SUBSECTION,\n    },\n    addTableMoneyLine({\n      label: (\n        <T\n          id={\n            calculator.shouldUseNetSalary()\n              ? 'PDF.borrowersInfos.netSalary'\n              : 'PDF.borrowersInfos.salary'\n          }\n        />\n      ),\n      field: salary,\n      condition: true,\n    }),\n    addTableMoneyLine({\n      label: <T id=\"PDF.borrowersInfos.bonus\" />,\n      field: bonus,\n    }),\n    ...Object.values(OTHER_INCOME).map(income =>\n      addTableMoneyLine({\n        label: <T id={`PDF.borrowersInfos.otherIncome.${income}`} />,\n        field: otherIncome[income],\n      })),\n    addTableMoneyLine({\n      label: <T id=\"PDF.borrowersInfos.realEstateIncome\" />,\n      field: realEstateIncome,\n      condition: shouldRenderArray(realEstateIncome),\n    }),\n    ...renderExpenses(expenses, addTableMoneyLine),\n    {\n      label: <T id=\"PDF.borrowersInfos.totalIncome\" />,\n      data: getFormattedMoneyArray({\n        array: borrowers.map(borrower =>\n          calculator.getTotalIncome({ borrowers: borrower })),\n        negative: false,\n        twoBorrowers: multipleBorrowers,\n      }),\n      type: ROW_TYPES.SUM,\n    },\n    addTableEmptyLine(),\n    {\n      label: <T id=\"PDF.borrowersInfos.category.fortune\" />,\n      type: ROW_TYPES.SUBSECTION,\n    },\n    ...Object.values(OWN_FUNDS_TYPES).map(ownFund =>\n      addTableMoneyLine({\n        label: <T id={`PDF.borrowersInfos.ownFund.${ownFund}`} />,\n        field: borrowersInfos[ownFund],\n      })),\n    addTableMoneyLine({\n      label: <T id=\"PDF.borrowersInfos.realEstateValue\" />,\n      field: realEstateValue,\n    }),\n    addTableMoneyLine({\n      label: <T id=\"PDF.borrowersInfos.realEstateDebt\" />,\n      field: realEstateDebt,\n      condition: shouldRenderArray(realEstateValue),\n      negative: true,\n    }),\n    addTableMoneyLine({\n      label: <T id=\"PDF.borrowersInfos.otherFortune\" />,\n      field: otherFortune,\n    }),\n    {\n      label: <T id=\"PDF.borrowersInfos.totalFortune\" />,\n      data: getFormattedMoneyArray({\n        array: borrowers.map(borrower =>\n          calculator.getTotalFunds({ borrowers: borrower })),\n        negative: false,\n        twoBorrowers: multipleBorrowers,\n      }),\n      type: ROW_TYPES.SUM,\n    },\n  ];\n};\n\nconst BorrowersRecapFinance = ({\n  anonymous,\n  borrowers,\n  calculator,\n  twoBorrowers,\n}: BorrowersRecapFinanceProps) => (\n  <PdfTable\n    className={cx('borrowers-recap finance', { twoBorrowers })}\n    rows={getBorrowersFinanceArray({ borrowers, anonymous, calculator })}\n  />\n);\n\nexport default BorrowersRecapFinance;\n","// @flow\nimport React from 'react';\nimport cx from 'classnames';\nimport moment from 'moment';\n\nimport T from 'core/components/Translation';\nimport PdfTable from '../../PdfTable';\nimport { getBorrowersInfos, shouldRenderArray } from './borrowersRecapHelpers';\nimport { ROW_TYPES } from '../../PdfTable/PdfTable';\n\ntype BorrowersRecapInfoProps = {};\n\nconst getBorrowersInfosArray = ({ borrowers, calculator }) => {\n  const borrowersInfos = getBorrowersInfos(borrowers, calculator);\n\n  return [\n    {\n      label: <T id=\"PDF.borrowersInfos.category.general\" />,\n      data: borrowersInfos.name,\n      type: ROW_TYPES.TITLE,\n      className: 'borrower-table-title-row',\n    },\n    {\n      label: <T id=\"PDF.borrowersInfos.address\" />,\n      data: borrowersInfos.address,\n    },\n    {\n      label: <T id=\"PDF.borrowersInfos.age\" />,\n      data: borrowersInfos.birthDate.map((date, index) => {\n        if (!date) {\n          return '-';\n        }\n\n        return (\n          <span key={index}>\n            {borrowersInfos.age[index]}&nbsp;(\n            {moment(date).format('DD.MM.YYYY')})\n          </span>\n        );\n      }),\n    },\n    {\n      label: <T id=\"PDF.borrowersInfos.children\" />,\n      data: borrowersInfos.childrenCount.map(children => children || '-'),\n      condition: shouldRenderArray(borrowersInfos.childrenCount),\n    },\n    {\n      label: <T id=\"PDF.borrowersInfos.company\" />,\n      data: borrowersInfos.company.map(company => company || '-'),\n      condition: shouldRenderArray(borrowersInfos.company),\n    },\n    {\n      label: <T id=\"PDF.borrowersInfos.civilStatus\" />,\n      data: borrowersInfos.civilStatus.map(status =>\n        (status && <T id={`PDF.borrowersInfos.civilStatus.${status}`} />)\n          || '-'),\n\n      condition: shouldRenderArray(borrowersInfos.civilStatus),\n    },\n  ];\n};\n\nconst BorrowersRecapInfo = ({\n  anonymous,\n  borrowers,\n  calculator,\n  twoBorrowers,\n}: BorrowersRecapInfoProps) => (\n  <PdfTable\n    className={cx('borrowers-recap info', { twoBorrowers })}\n    rows={getBorrowersInfosArray({ borrowers, anonymous, calculator })}\n    columnOptions={[\n      {},\n      { style: { textAlign: 'right' } },\n      { style: { textAlign: 'right' } },\n    ]}\n  />\n);\n\nexport default BorrowersRecapInfo;\n","import React from 'react';\nimport { toMoney } from 'core/utils/conversionFunctions';\nimport { ROW_TYPES } from '../../PdfTable/PdfTable';\nimport { EXPENSE_TYPES } from '../../../../../lenderRules/lenderRulesConstants';\nimport {\n  OTHER_INCOME,\n  OWN_FUNDS_TYPES,\n} from '../../../../../borrowers/borrowerConstants';\n\nconst renderWithComments = (value, comments = []) => {\n  if (comments.length === 0) {\n    return value;\n  }\n\n  const func = ({ negative }) => (\n    <div>\n      <div>{negative ? `-${toMoney(value)}` : toMoney(value)}</div>\n      <div className=\"secondary finance-comment\">\n        {/* Make sure we can \"join\" strings or JSX */}\n        {comments\n          .filter(x => x)\n          .map((comment, i) => [i !== 0 && ', ', comment])}\n      </div>\n    </div>\n  );\n  func.rawValue = value;\n\n  return func;\n};\n\nexport const getBorrowersSingleInfo = (borrowers, info) =>\n  borrowers.map(borrower => borrower[info] || 0);\n\nexport const getBorrowersSingleInfos = (borrowers, infos) =>\n  infos.reduce(\n    (borrowersInfos, info) => ({\n      ...borrowersInfos,\n      [info]: getBorrowersSingleInfo(borrowers, info),\n    }),\n    {},\n  );\n\nexport const getBorrowersOtherIncome = (borrowers, types, calculator) =>\n  borrowers.map((borrower) => {\n    const { otherIncome = [] } = borrower;\n    const otherIncomeValue = otherIncome\n      .filter(income => types.includes(income.description))\n      .reduce((sum, income) => sum + income.value, 0);\n\n    // Only render comments if this is for one single expense type\n    const otherIncomeComments = types.length === 1\n      && calculator.getCommentsForOtherIncomeType({\n        borrowers: borrower,\n        type: types[0],\n      });\n\n    return renderWithComments(otherIncomeValue, otherIncomeComments);\n  });\n\nexport const getBorrowersOtherIncomes = (borrowers, types, calculator) =>\n  types.reduce(\n    (borrowersOtherIncomes, type) => ({\n      ...borrowersOtherIncomes,\n      [type]: getBorrowersOtherIncome(borrowers, [type], calculator),\n    }),\n    {},\n  );\n\nexport const getBorrowersExpense = (borrowers, types, calculator) =>\n  borrowers.map((borrower) => {\n    let allExpenses = calculator.getGroupedExpensesBySide({\n      borrowers: borrower,\n    });\n    allExpenses = Object.keys(allExpenses).map(key => ({\n      description: key,\n      value: allExpenses[key],\n    }));\n\n    const expenseValue = allExpenses\n      .filter(expense => types.includes(expense.description))\n      .reduce((sum, expense) => sum + expense.value, 0);\n\n    // Only render comments if this is for one single expense type\n    const expenseComments = types.length === 1\n      && calculator.getCommentsForExpenseType({\n        borrowers: borrower,\n        type: types[0],\n      });\n\n    return renderWithComments(expenseValue, expenseComments);\n  });\n\nexport const getBorrowersExpenses = (borrowers, types, calculator) =>\n  types.reduce(\n    (borrowersExpenses, type) => ({\n      ...borrowersExpenses,\n      [type]: getBorrowersExpense(borrowers, [type], calculator),\n    }),\n    {},\n  );\n\nexport const getBorrowersOwnFunds = (borrowers, types) =>\n  types.reduce(\n    (ownFunds, type) => ({\n      ...ownFunds,\n      [type]: borrowers.map(borrower =>\n        borrower[type]\n          && borrower[type].reduce((sum, ownFund) => sum + ownFund.value, 0)),\n    }),\n    {},\n  );\n\nexport const getBorrowersAddress = (borrowers) => {\n  const borrowersHaveSameAddress = borrowers.some(({ sameAddress }) => sameAddress === true);\n  if (borrowersHaveSameAddress) {\n    const borrowerWithAddress = borrowers.find(({ city, zipCode }) => city && zipCode);\n    const address = [\n      borrowerWithAddress.zipCode,\n      borrowerWithAddress.city,\n    ].join(' ');\n    return borrowers.map(() => address);\n  }\n  const zipCodes = getBorrowersSingleInfo(borrowers, 'zipCode');\n  const cities = getBorrowersSingleInfo(borrowers, 'city');\n  return zipCodes.map((zipCode, index) => `${zipCode} ${cities[index]}`);\n};\n\nexport const getBonus = (borrowers, calculator) =>\n  borrowers.map((borrower) => {\n    const bonus = calculator.getBonusIncome({ borrowers: borrower });\n    const bonuses = calculator.getBonuses({ borrowers: borrower });\n    const comments = Object.keys(bonuses).map((key) => {\n      const value = bonuses[key];\n\n      if (!value) {\n        // Filter out bonuses that are 0 to shorten the comments\n        return null;\n      }\n\n      const year = key.slice(7);\n      return (\n        <span key={borrower._id} style={{ whiteSpace: 'nowrap' }}>\n          '{year}: {toMoney(value)}\n        </span>\n      );\n    });\n\n    return renderWithComments(bonus, comments);\n  });\n\nexport const getBorrowersInfos = (borrowers, calculator) => ({\n  ...getBorrowersSingleInfos(borrowers, [\n    'name',\n    'gender',\n    'age',\n    'birthDate',\n    'childrenCount',\n    'company',\n    'civilStatus',\n    'bankFortune',\n    'thirdPartyFortune',\n  ]),\n  realEstateIncome: borrowers.map(borrower =>\n    calculator.getRealEstateIncomeTotal({ borrowers: borrower })),\n  salary: borrowers.map(borrower =>\n    calculator.getSalary({ borrowers: borrower })),\n  address: getBorrowersAddress(borrowers),\n  otherIncome: {\n    ...getBorrowersOtherIncomes(\n      borrowers,\n      Object.values(OTHER_INCOME),\n      calculator,\n    ),\n    totalIncome: getBorrowersOtherIncome(\n      borrowers,\n      Object.values(OTHER_INCOME),\n      calculator,\n    ),\n  },\n  expenses: {\n    ...getBorrowersExpenses(\n      borrowers,\n      Object.values(EXPENSE_TYPES),\n      calculator,\n    ),\n    totalExpenses: getBorrowersExpense(\n      borrowers,\n      Object.values(EXPENSE_TYPES),\n      calculator,\n    ),\n  },\n  bonus: getBonus(borrowers, calculator),\n  otherFortune: borrowers.map(borrower =>\n    calculator.getOtherFortune({ borrowers: borrower })),\n  realEstateValue: borrowers.map(borrower =>\n    calculator.getRealEstateValue({ borrowers: borrower })),\n  realEstateDebt: borrowers.map(borrower =>\n    calculator.getRealEstateDebt({ borrowers: borrower })),\n  ...getBorrowersOwnFunds(borrowers, [\n    OWN_FUNDS_TYPES.INSURANCE_2,\n    OWN_FUNDS_TYPES.INSURANCE_3A,\n    OWN_FUNDS_TYPES.BANK_3A,\n    OWN_FUNDS_TYPES.INSURANCE_3B,\n  ]),\n});\n\nexport const getArraySum = array =>\n  array.reduce((sum, val) => {\n    if (val && val.rawValue >= 0) {\n      // Avoid null values\n      return sum + Number(val.rawValue);\n    }\n\n    return sum + val;\n  }, 0);\n\nexport const getFormattedMoneyArray = ({\n  array,\n  negative = false,\n  twoBorrowers,\n}) => {\n  if (!twoBorrowers) {\n    return [\n      ...array.map((x, index) => (\n        <div className=\"money-amount\" key={index}>\n          {typeof x === 'function'\n            ? x({ negative })\n            : toMoney(negative ? -x : x || 0)}\n        </div>\n      )),\n    ];\n  }\n\n  return [\n    ...array.map((x, index) => (\n      <div className=\"money-amount\" key={index}>\n        {typeof x === 'function'\n          ? x({ negative })\n          : toMoney(negative ? -x : x || 0)}\n      </div>\n    )),\n\n    <div className=\"money-amount\" key=\"last\">\n      {toMoney(negative ? -getArraySum(array) : getArraySum(array))}\n    </div>,\n  ];\n};\n\nexport const shouldRenderArray = array => array.filter(x => x).length > 0;\n\nexport const makeTableMoneyLine = twoBorrowers => ({\n  label,\n  field,\n  negative = false,\n  condition = shouldRenderArray(field),\n}) => ({\n  label,\n  data: getFormattedMoneyArray({\n    array: field,\n    negative,\n    twoBorrowers,\n  }),\n  condition,\n});\n\nexport const addTableEmptyLine = () => ({\n  label: '\\u00A0',\n  type: ROW_TYPES.EMPTY,\n});\n","export { default } from './BorrowersPdfPage';\nexport { default as LoanBankBorrowersStyles } from './styles';\n","const recapStyleSheet = `\n.validator {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: stretch;\n      -ms-flex-align: stretch;\n          align-items: stretch;\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n\n  width: 100%;\n  max-width: 400px;\n  min-height: 140px;\n}\n\n.validator label {\n  width: 100%;\n  margin: 0;\n  margin-top: 16px;\n}\n\n.validator p:first-child {\n  margin: auto;\n\n  text-align: left;\n}\n\n.validator .result {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: start;\n      -ms-flex-align: start;\n          align-items: flex-start;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column;\n  -webkit-box-pack: justify;\n      -ms-flex-pack: justify;\n          justify-content: space-between;\n\n  width: 100%;\n}\n\n.validator .result div {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: justify;\n      -ms-flex-pack: justify;\n          justify-content: space-between;\n\n  width: 100%;\n  margin: 0;\n\n  -webkit-transition: all 0.2s $bezier;\n\n  -o-transition: all 0.2s $bezier;\n\n  transition: all 0.2s $bezier;\n}\n\n.validator .result div p:last-of-type {\n  -ms-flex-negative: 0;\n      flex-shrink: 0;\n\n  margin: 0;\n}\n\n.validator .result div p:first-of-type {\n  margin: 0;\n}\n\n.validator .result div p span.sum {\n  margin-top: 16px;\n  padding-top: 4px;\n\n  border-top: solid 1px #808080;\n}\n\n.validator .result div p .fa {\n  width: 21px;\n\n  text-align: center;\n}\n\n.validator .result div:hover {\n  -webkit-transform: scale(1.03);\n      -ms-transform: scale(1.03);\n          transform: scale(1.03);\n\n  opacity: 1;\n  color: #000;\n}\n\n.validator .result div:hover.no-scale {\n  -webkit-transform: none;\n      -ms-transform: none;\n          transform: none;\n}\n\n.validator .result div:hover p,\n.validator .result div:hover p {\n  opacity: inherit;\n  color: inherit;\n}\n\n.recap {\n    max-width: 200px;\n}`;\n\nexport default recapStyleSheet;\n","import { BORDER_BLUE } from '../../../../pdfConstants';\nimport recapStyleSheet from './recapStyleSheet';\n\nconst stylesheet = `\n    .borrowers-recap {\n        width: 100%;\n    }\n\n    .borrowers-recap:not(:first-child) {\n        margin-top: 30px;\n    }\n\n    .borrowers-recap.twoBorrowers {\n        width: 100%;\n    }\n\n    .borrowers-recap.twoBorrowers td {\n        width: 25%;\n    }\n\n    .borrowers-recap.twoBorrowers.info {\n        width: 75%;\n    }\n\n    .borrowers-recap .info td {\n        text-align: left;\n    }\n\n    .money-amount {\n        text-align: right;\n        white-space: nowrap;\n    }\n\n    .borrowers-page h2 {\n        color: ${BORDER_BLUE}\n    }\n\n    .borrowers-recap.twoBorrowers tr.borrower-table-title-row td {\n        width: 25%;\n    }\n\n    .borrowers-recap.twoBorrowers tr.borrower-table-title-row td:not(:first-child) {\n        text-align: right;\n        color: black;\n    }\n    \n    .finance-comment {\n        white-space: normal;\n    }\n\n    ${recapStyleSheet}\n`;\n\nexport default stylesheet;\n","// @flow\nimport React from 'react';\n\nimport T from '../../../../../../components/Translation';\nimport { Calculator } from '../../../../../../utils/Calculator';\nimport PdfPage from '../../PdfPage';\nimport LenderRulesPdfTable from './LenderRulesPdfTable';\nimport {\n  getExpenseRules,\n  getTheoreticalExpenseRules,\n  getCutOffCriteriaRules,\n} from './lenderRulesArrays';\n\ntype LenderRulesPdfPageProps = {};\n\nconst LenderRulesPdfPage = ({\n  pageNb,\n  pageCount,\n  organisation,\n  loan,\n}: LenderRulesPdfPageProps) => {\n  const { lenderRules } = organisation || {};\n  const calculator = new Calculator({ loan, lenderRules });\n  return (\n    <PdfPage\n      className=\"lender-rules-page\"\n      title={<T id=\"PDF.title.lenderRules\" />}\n      withFooter\n      pageNb={pageNb}\n      pageCount={pageCount}\n    >\n      <h3>Revenus & Charges</h3>\n      <LenderRulesPdfTable rows={getExpenseRules({ loan, calculator })} />\n\n      <h3>Charges théoriques</h3>\n      <LenderRulesPdfTable\n        rows={getTheoreticalExpenseRules({ loan, calculator })}\n      />\n\n      <h3>Critères d'octroi</h3>\n      <LenderRulesPdfTable\n        rows={getCutOffCriteriaRules({ loan, calculator })}\n      />\n    </PdfPage>\n  );\n};\n\nexport default LenderRulesPdfPage;\n","// @flow\nimport React from 'react';\n\nimport { classes, ROW_TYPES } from '../../PdfTable/PdfTable';\n\ntype LenderRulesPdfTableProps = {};\n\nconst LenderRulesPdfTable = ({ rows }: LenderRulesPdfTableProps) => (\n  <table className=\"pdf-table lender-rules-table\">\n    <tr className={classes[ROW_TYPES.TITLE]}>\n      <td>Type</td>\n      <td>Prise en compte</td>\n      <td>Détails</td>\n    </tr>\n    {rows}\n  </table>\n);\n\nexport default LenderRulesPdfTable;\n","export { default } from './LenderRulesPdfPage';\n","import React from 'react';\nimport SimpleSchema from 'simpl-schema';\n\nimport T, { Percent } from '../../../../../../components/Translation';\nimport {\n  incomeConsideration,\n  theoreticalExpenses,\n  cutOffCriteria,\n} from '../../../../../lenderRules/schemas/lenderRulesSchema';\nimport { classes, ROW_TYPES } from '../../PdfTable/PdfTable';\n\nconst RULE_TYPES = {\n  SELECT: 'SELECT',\n  PERCENT: 'PERCENT',\n  NUMBER: 'NUMBER',\n};\n\nconst getRuleArray = schemaPart =>\n  Object.keys(schemaPart).map((ruleName) => {\n    const rule = schemaPart[ruleName];\n\n    switch (rule.type) {\n    case Number:\n      return { ...rule, id: ruleName, type: RULE_TYPES.PERCENT };\n    case String:\n      return { ...rule, id: ruleName, type: RULE_TYPES.SELECT };\n    case Array:\n      return { ...rule, id: ruleName, type: RULE_TYPES.SELECT };\n    case SimpleSchema.Integer:\n      return { ...rule, id: ruleName, type: RULE_TYPES.NUMBER };\n    default:\n      return null;\n    }\n  });\n\nconst makeMapRule = ({ loan, calculator }) => ({ id, type, uniforms }) => {\n  if (id.includes('$')) {\n    return null;\n  }\n\n  const ruleOrigin = calculator.getOriginOfRule(id);\n\n  const mappedRule = {\n    label: <T id={`Forms.${id}`} />,\n    detail: ruleOrigin && ruleOrigin.name,\n  };\n  switch (type) {\n  case RULE_TYPES.SELECT:\n    return {\n      ...mappedRule,\n      value: Array.isArray(calculator[id]) ? (\n        calculator[id].map((v, index) => [\n          index !== 0 && <span>,&nbsp;</span>,\n          <T\n            id={`Forms.${(uniforms && uniforms.intlId) || id}.${v}`}\n            key={index}\n          />,\n        ])\n      ) : (\n        <T id={`Forms.${id}.${calculator[id]}`} />\n      ),\n    };\n  case RULE_TYPES.PERCENT:\n    return {\n      ...mappedRule,\n      value: <Percent value={calculator[id]} />,\n    };\n  case RULE_TYPES.NUMBER:\n    return { ...mappedRule, value: calculator[id] };\n  default:\n    return null;\n  }\n};\n\nconst formatRuleIntoRow = ({ label, value, detail }, index) => (\n  <tr key={index} className={classes[ROW_TYPES.REGULAR]}>\n    <td>{label}</td>\n    <td>{value}</td>\n    <td>{detail}</td>\n  </tr>\n);\n\nconst getTableRows = ({ loan, calculator, schemaPart }) =>\n  getRuleArray(schemaPart)\n    .filter(x => x)\n    .map(makeMapRule({ loan, calculator }))\n    .filter(x => x)\n    .map(formatRuleIntoRow);\n\nexport const getExpenseRules = ({ loan, calculator }) =>\n  getTableRows({ loan, calculator, schemaPart: incomeConsideration });\n\nexport const getTheoreticalExpenseRules = ({ loan, calculator }) =>\n  getTableRows({ loan, calculator, schemaPart: theoreticalExpenses });\n\nexport const getCutOffCriteriaRules = ({ loan, calculator }) =>\n  getTableRows({ loan, calculator, schemaPart: cutOffCriteria });\n","export default `\n    .lender-rules-page h3 {\n        margin-bottom: 0;\n    }\n\n    .lender-rules-table td {\n        text-align: left !important;\n        display: inline-flex;\n        flex-wrap: wrap;\n    }\n\n    .lender-rules-table td:nth-child(1) {\n        width: 40% !important;\n    }\n    .lender-rules-table td:nth-child(2) {\n        width: 35% !important;\n    }\n    .lender-rules-table td:nth-child(3) {\n        width: 25% !important;\n    }\n`;\n","// @flow\nimport React from 'react';\n\nimport T from '../../../../../../components/Translation';\nimport { toMoney } from '../../../../../../utils/conversionFunctions';\nimport { classes, ROW_TYPES } from '../../PdfTable/PdfTable';\n\ntype OtherRealEstateTableProps = {};\n\nconst OtherRealEstateTable = ({\n  loan: { borrowers },\n}: OtherRealEstateTableProps) => {\n  const realEstateArray = borrowers.reduce(\n    (arr, { realEstate }) => [...arr, ...realEstate],\n    [],\n  );\n  return (\n    <table className=\"pdf-table other-real-estate\">\n      <tr className={classes[ROW_TYPES.TITLE]}>\n        <td colSpan={2}>Patrimoine immobilier</td>\n      </tr>\n      {realEstateArray.map(({ value, loan, name, description, income }, index) => (\n        <tr key={index} className={classes[ROW_TYPES.REGULAR]}>\n          <td>\n            <div>{name}</div>\n            <div className=\"secondary\">\n              <T id={`Forms.residenceType.${description}`} />\n            </div>\n          </td>\n          <td style={{ textAlign: 'right' }}>\n            <div>\n              <span className=\"secondary\">Valeur:</span>&nbsp;{toMoney(value)}\n            </div>\n\n            <div>\n              <span className=\"secondary\">Dette:</span>&nbsp;{toMoney(loan)}\n            </div>\n\n            <div>\n              <span className=\"secondary\">Revenus annuels:</span>&nbsp;\n              {toMoney(income)}\n            </div>\n          </td>\n        </tr>\n      ))}\n    </table>\n  );\n};\n\nexport default OtherRealEstateTable;\n","// @flow\nimport { Meteor } from 'meteor/meteor';\n\nimport React from 'react';\nimport queryString from 'query-string';\n\nimport Calculator from '../../../../../../utils/Calculator';\n\ntype PdfGoogleMapProps = {};\n\nconst makeGoogleMapsUrl = (property) => {\n  const { address1, city } = property;\n\n  const place = `${address1}, ${city}`;\n\n  const baseUrl = 'https://maps.googleapis.com/maps/api/staticmap?';\n  const query = queryString.stringify(\n    {\n      center: place,\n      zoom: 13,\n      size: '640x300', // This ratio is good for 300px height image and full width\n      markers: `color:red|${place}`,\n      key: Meteor.settings.public.google_maps_key,\n      scale: 2,\n      language: 'fr',\n    },\n    { sort: false },\n  );\n  const url = `${baseUrl}${query}`;\n  return url;\n};\n\nconst PdfGoogleMap = ({ loan }: PdfGoogleMapProps) => {\n  const property = Calculator.selectProperty({ loan });\n  return (\n    <div\n      className=\"pdf-google-map\"\n      style={{ backgroundImage: `url(\"${makeGoogleMapsUrl(property)}\")` }}\n    />\n  );\n};\n\nexport default PdfGoogleMap;\n","// @flow\nimport React from 'react';\n\nimport Calculator from '../../../../../../utils/Calculator';\nimport T from '../../../../../../components/Translation';\nimport {\n  PROPERTY_TYPE,\n  FLAT_TYPE,\n} from '../../../../../properties/propertyConstants';\nimport { toMoney } from '../../../../../../utils/conversionFunctions';\nimport PdfTable, { ROW_TYPES } from '../../PdfTable/PdfTable';\n\ntype PdfPropertyDetailsProps = {};\n\nconst getPropertyRows = (loan) => {\n  const {\n    address1,\n    zipCode,\n    city,\n    propertyType,\n    houseType,\n    flatType,\n    roomCount,\n    insideArea,\n    landArea,\n    volume,\n    volumeNorm,\n    terraceArea,\n    numberOfFloors,\n    floorNumber,\n    constructionYear,\n    renovationYear,\n    parkingInside = 0,\n    parkingOutside = 0,\n    minergie,\n    yearlyExpenses,\n    promotion,\n  } = Calculator.selectProperty({ loan });\n  const { residenceType } = loan;\n\n  return [\n    {\n      label: 'Bien immobilier',\n      colspan: 2,\n      type: ROW_TYPES.TITLE,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.promotionName\" />,\n      data: (\n        <T\n          id=\"PDF.projectInfos.property.promotionNameData\"\n          values={{ name: promotion && promotion.name }}\n        />\n      ),\n      condition: !!promotion,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.address\" />,\n      data: (\n        <span>\n          {address1},<br />\n          {zipCode} {city}\n        </span>\n      ),\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.residenceType\" />,\n      data: <T id={`PDF.residenceType.${residenceType}`} />,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.propertyType\" />,\n      data: <T id={`PDF.projectInfos.property.propertyType.${propertyType}`} />,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.houseType\" />,\n      data: <T id={`PDF.projectInfos.property.houseType.${houseType}`} />,\n      condition: !!houseType && propertyType === PROPERTY_TYPE.HOUSE,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.flatType\" />,\n      data: <T id={`PDF.projectInfos.property.flatType.${flatType}`} />,\n      condition: !!flatType && propertyType === PROPERTY_TYPE.FLAT,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.roomCount\" />,\n      data: roomCount,\n      tooltip: {\n        text: <T id=\"PDF.projectInfos.property.roomCount.tooltip\" />,\n        symbol: '*',\n      },\n      condition: !!roomCount,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.insideArea\" />,\n      data: `${insideArea} m2`,\n      condition: !!insideArea && propertyType === PROPERTY_TYPE.FLAT,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.landArea\" />,\n      data: `${landArea} m2`,\n      condition: !!landArea && propertyType === PROPERTY_TYPE.HOUSE,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.volume\" />,\n      data: (\n        <span>\n          {volume} m3 (\n          <T id={`PDF.projectInfos.property.volumeNorm.${volumeNorm}`} />)\n        </span>\n      ),\n      condition:\n        !!volume && !!volumeNorm && propertyType === PROPERTY_TYPE.HOUSE,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.terraceArea\" />,\n      data: `${terraceArea} m2`,\n      condition:\n        !!terraceArea\n        && propertyType === PROPERTY_TYPE.FLAT\n        && flatType === FLAT_TYPE.TERRACE_APARTMENT,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.numberOfFloors\" />,\n      data: numberOfFloors,\n      condition: !!numberOfFloors && propertyType === PROPERTY_TYPE.FLAT,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.floorNumber\" />,\n      data: floorNumber,\n      condition:\n        propertyType === PROPERTY_TYPE.FLAT\n        && (flatType === FLAT_TYPE.SINGLE_FLOOR_APARTMENT\n          || flatType === FLAT_TYPE.DUPLEX_APARTMENT),\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.constructionYear\" />,\n      data: constructionYear,\n      condition: !!constructionYear,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.renovationYear\" />,\n      data: renovationYear,\n      condition: !!renovationYear,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.parking\" />,\n      data: `${parkingInside} int., ${parkingOutside} ext.`,\n      condition: !!parkingInside || !!parkingOutside,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.minergie\" />,\n      data: <T id={`PDF.projectInfos.property.minergie.${minergie}`} />,\n      condition: !!minergie,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.maintenance\" />,\n      data: toMoney(yearlyExpenses),\n      condition: !!yearlyExpenses,\n    },\n  ];\n};\n\nconst PdfPropertyDetails = ({ loan, style }: PdfPropertyDetailsProps) => (\n  <PdfTable\n    style={style}\n    rows={getPropertyRows(loan)}\n    columnOptions={[{}, { style: { textAlign: 'right' } }]}\n  />\n);\n\nexport default PdfPropertyDetails;\n","// @flow\nimport React from 'react';\n\nimport T from '../../../../../../components/Translation';\nimport PdfPage from '../../PdfPage';\nimport PdfGoogleMap from './PdfGoogleMap';\nimport PdfPropertyDetails from './PdfPropertyDetails';\nimport Calculator from '../../../../../../utils/Calculator';\nimport OtherRealEstateTable from './OtherRealEstateTable';\n\ntype PropertyPdfPageProps = {};\n\nconst PropertyPdfPage = ({ loan, pageNb, pageCount }: PropertyPdfPageProps) => {\n  const realEstateExists = Calculator.getRealEstateValue({ loan }) > 0;\n\n  return (\n    <PdfPage\n      className=\"property-page\"\n      title={<T id=\"PDF.title.property\" />}\n      withFooter\n      pageNb={pageNb}\n      pageCount={pageCount}\n    >\n      <PdfGoogleMap loan={loan} />\n      <div className=\"property-tables\">\n        <PdfPropertyDetails\n          loan={loan}\n          style={realEstateExists ? {} : { width: '100%' }}\n        />\n        {realEstateExists && <OtherRealEstateTable loan={loan} />}\n      </div>\n    </PdfPage>\n  );\n};\nexport default PropertyPdfPage;\n","export { default } from './PropertyPdfPage';\n","export default `\n    .pdf-google-map {\n        margin-bottom: 40px;\n        height: 300px;\n        background-position: center center;\n        background-size: cover;\n        background-repeat: no-repeat;\n    }\n\n    .property-page table {\n        // width: 100%;\n    }\n\n    .property-page .property-tables {\n        width: 100%;\n        display: flex;\n        justify-content: space-between;\n    }\n\n    .property-page .property-tables > * {\n        width: 49%;\n        flex-grow: 1; // Let table take full width if there is only 1 table\n    }\n\n    .other-real-estate {\n        // margin-left: 16px;\n    }\n`;\n","// @flow\nimport React from 'react';\n\nimport T, { Money } from '../../../../../../components/Translation';\nimport { toMoney } from '../../../../../../utils/conversionFunctions';\nimport { OWN_FUNDS_USAGE_TYPES } from '../../../../../loans/loanConstants';\nimport { shouldRenderRow } from '../../PdfTable/PdfTable';\nimport BalanceSheetTable from '../../BalanceSheetTable';\n\ntype BalanceSheetTableProps = {};\n\nconst getCostLines = ({ loan, structureId, calculator }) => {\n  const propertyValue = calculator.selectPropertyValue({ loan, structureId });\n  const notaryFees = calculator.getFees({ loan, structureId }).total;\n  const propertyWork = calculator.selectStructureKey({\n    loan,\n    structureId,\n    key: 'propertyWork',\n  });\n\n  return [\n    {\n      label: (\n        <T id=\"Forms.value\" values={{ purchaseType: loan.purchaseType }} />\n      ),\n      value: propertyValue,\n    },\n    { label: 'Frais de notaire', value: notaryFees },\n    {\n      label: 'Travaux de plus-value',\n      value: propertyWork,\n      condition: propertyWork > 0,\n    },\n  ].filter(({ condition }) => shouldRenderRow(condition));\n};\n\nconst ownFundLabel = ({ type, usageType, borrower, borrowerIndex }) => {\n  const borrowerSuffix = borrower ? (\n    <>\n      &nbsp;\n      <span className=\"secondary\">\n        (\n        {borrower.firstName || (\n          <T\n            id=\"general.borrowerWithIndex\"\n            values={{ index: borrowerIndex + 1 }}\n          />\n        )}\n        )\n      </span>\n    </>\n  ) : null;\n\n  return usageType ? (\n    <span>\n      <T id={`PDF.ownFund.${type}.${usageType}`} />\n      {borrowerSuffix}\n    </span>\n  ) : (\n    <span>\n      <T id={`PDF.ownFund.${type}`} />\n      {borrowerSuffix}\n    </span>\n  );\n};\nconst getFinancingLines = ({ loan, structureId, calculator }) => {\n  const { borrowers } = loan;\n  const multipleBorrowers = borrowers.length > 1;\n  const wantedLoan = calculator.selectLoanValue({ loan, structureId });\n  const ownFunds = calculator.selectStructureKey({\n    loan,\n    structureId,\n    key: 'ownFunds',\n  });\n\n  return [\n    {\n      label: 'Prêt hypothécaire',\n      value: (\n        <span>\n          <Money value={wantedLoan} currency={false} />\n        </span>\n      ),\n      money: false,\n    },\n    ...ownFunds\n      .filter(({ usageType }) => usageType !== OWN_FUNDS_USAGE_TYPES.PLEDGE)\n      .map(({ value, type, usageType, borrowerId }) => ({\n        label: ownFundLabel({\n          type,\n          usageType,\n          borrower:\n            multipleBorrowers\n            && borrowers.find(({ _id }) => _id === borrowerId),\n          borrowerIndex:\n            borrowers.findIndex(({ _id }) => _id === borrowerId) + 1,\n        }),\n        value,\n      })),\n    ...ownFunds\n      .filter(({ usageType }) => usageType === OWN_FUNDS_USAGE_TYPES.PLEDGE)\n      .map(({ value, type, usageType, borrowerId }) => ({\n        label: (\n          <span className=\"secondary\">\n            {ownFundLabel({\n              type,\n              usageType,\n              borrower:\n                multipleBorrowers\n                && borrowers.find(({ _id }) => _id === borrowerId),\n              borrowerIndex:\n                borrowers.findIndex(({ _id }) => _id === borrowerId) + 1,\n            })}\n          </span>\n        ),\n        value: <span className=\"secondary\">({toMoney(value)})</span>,\n        money: false,\n      })),\n  ].filter(({ condition }) => shouldRenderRow(condition));\n};\n\nconst BalanceSheet = ({\n  loan,\n  structureId,\n  calculator,\n}: BalanceSheetTableProps) => (\n  <BalanceSheetTable\n    titles={[\"Coût de l'opération\", 'Financement']}\n    leftRows={getCostLines({ loan, structureId, calculator })}\n    rightRows={getFinancingLines({ loan, structureId, calculator })}\n    bottomTitles={['Prix de revient', 'Financement total']}\n    bottomValues={[\n      <Money\n        currency={false}\n        value={calculator.getProjectValue({ loan, structureId })}\n        key=\"0\"\n      />,\n      <Money\n        currency={false}\n        value={calculator.getTotalFinancing({ loan, structureId })}\n        key=\"1\"\n      />,\n    ]}\n  />\n);\n\nexport default BalanceSheet;\n","// @flow\nimport React from 'react';\n\nimport T, { Money } from '../../../../../../components/Translation';\nimport { toMoney } from '../../../../../../utils/conversionFunctions';\nimport { shouldRenderRow } from '../../PdfTable/PdfTable';\nimport BalanceSheetTable from '../../BalanceSheetTable';\n\ntype IncomeAndExpensesProps = {};\n\nconst renderExpenses = expenses =>\n  Object.keys(expenses).map((expenseType) => {\n    const value = expenses[expenseType];\n    return {\n      label: <T id={`Forms.expenses.${expenseType}`} />,\n      // When an expense is positive, it means it has to be substracted from\n      // the income\n      // When it is negative, it has to be added to it\n      value:\n        value < 0 ? (\n          <span>{toMoney(value, { noPrefix: true })}</span>\n        ) : (\n          <span>-{toMoney(value)}</span>\n        ),\n      condition: !!value,\n      money: false,\n    };\n  });\n\nconst getIncomeRows = ({ loan, structureId, calculator }) => {\n  const salary = calculator.getSalary({ loan, structureId });\n  const bonus = calculator.getBonusIncome({ loan, structureId });\n  const otherIncome = calculator.getOtherIncome({ loan, structureId });\n  const fortuneReturns = calculator.getFortuneReturns({ loan, structureId });\n  const realEstateIncome = calculator.getRealEstateIncomeTotal({\n    loan,\n    structureId,\n  });\n  const expenses = calculator.getGroupedExpensesBySide({\n    loan,\n    structureId,\n    toSubtractFromIncome: true,\n  });\n\n  const useNetSalary = calculator.shouldUseNetSalary();\n\n  return [\n    {\n      label: <T id={useNetSalary ? 'Forms.netSalary' : 'Forms.salary'} />,\n      value: salary,\n    },\n    {\n      label: <T id=\"Recap.consideredBonus\" />,\n      value: bonus,\n      condition: !!bonus,\n    },\n    {\n      label: <T id=\"Forms.otherIncome\" />,\n      value: otherIncome,\n      condition: !!otherIncome,\n    },\n    {\n      label: <T id=\"Forms.fortuneReturns\" />,\n      value: fortuneReturns,\n      condition: !!fortuneReturns,\n    },\n    {\n      label: <T id=\"Forms.realEstateIncome\" />,\n      value: realEstateIncome,\n      condition: !!realEstateIncome,\n    },\n    ...renderExpenses(expenses),\n  ].filter(({ condition }) => shouldRenderRow(condition));\n};\n\nconst getExpenseRows = ({ loan, structureId, calculator }) => {\n  const propertyCost = calculator.getTheoreticalPropertyCost({\n    loan,\n    structureId,\n    asObject: true,\n  });\n  const expenses = calculator.getGroupedExpensesBySide({\n    loan,\n    toSubtractFromIncome: false,\n  });\n\n  return [\n    {\n      label: <i>Taux d'intérêt théorique</i>,\n      value: <i>{toMoney(propertyCost.interests * 12)}</i>,\n      money: false,\n    },\n    {\n      label: <i>Amortissement théorique</i>,\n      value: <i>{toMoney(propertyCost.amortization * 12)}</i>,\n      money: false,\n    },\n    {\n      label: <i>Frais d'entretien théorique</i>,\n      value: <i>{toMoney(propertyCost.maintenance * 12)}</i>,\n      money: false,\n    },\n    ...Object.keys(expenses).map(expenseType => ({\n      label: <T id={`Forms.expenses.${expenseType}`} />,\n      value: expenses[expenseType],\n      condition: !!expenses[expenseType],\n    })),\n  ].filter(({ condition }) => shouldRenderRow(condition));\n};\n\nconst IncomeAndExpenses = ({\n  loan,\n  structureId,\n  calculator,\n}: IncomeAndExpensesProps) => (\n  <BalanceSheetTable\n    titles={['Charges', 'Revenus']}\n    leftRows={getExpenseRows({ loan, structureId, calculator })}\n    rightRows={getIncomeRows({ loan, structureId, calculator })}\n    bottomTitles={['Total', 'Total']}\n    bottomValues={[\n      <Money\n        currency={false}\n        value={calculator.getTheoreticalMonthly({ loan, structureId }) * 12}\n        key=\"0\"\n      />,\n      <Money\n        currency={false}\n        value={calculator.getTotalIncome({ loan, structureId })}\n        key=\"1\"\n      />,\n    ]}\n  />\n);\n\nexport default IncomeAndExpenses;\n","// @flow\nimport React from 'react';\n\nimport T from '../../../../../../components/Translation';\nimport { toMoney } from '../../../../../../utils/conversionFunctions';\nimport { OWN_FUNDS_TYPES } from '../../../../../borrowers/borrowerConstants';\nimport PdfTable from '../../PdfTable';\nimport { ROW_TYPES } from '../../PdfTable/PdfTable';\n\ntype RemainingOwnFundsTableProps = {};\n\nconst oneBorrowerHasOwnFunds = ({ borrowers }, type) =>\n  borrowers.filter((borrower) => {\n    const valueForType = borrower[type];\n    if (Array.isArray(valueForType)) {\n      return valueForType.length > 0;\n    }\n    return !!valueForType;\n  }).length > 0;\n\nconst remainingFundsTableData = ({ loan, structureId, calculator }) =>\n  Object.values(OWN_FUNDS_TYPES)\n    .filter(type =>\n      ![\n        OWN_FUNDS_TYPES.BANK_FORTUNE,\n        OWN_FUNDS_TYPES.THIRD_PARTY_FORTUNE,\n      ].includes(type))\n    .map(type => ({\n      label: <T id={`PDF.ownFund.${type}`} />,\n      data: toMoney(calculator.getRemainingFundsOfType({ loan, type, structureId })),\n      condition: oneBorrowerHasOwnFunds(loan, type),\n      style: { textAlign: 'right' },\n    }));\n\nconst getRemainingOwnFundsRows = ({ loan, structureId, calculator }) => [\n  {\n    label: (\n      <T id=\"PDF.projectInfos.structure.postDisbursementSituation.title\" />\n    ),\n    colspan: 2,\n    type: ROW_TYPES.TITLE,\n  },\n  {\n    label: <T id=\"PDF.ownFund.bankFortune\" />,\n    data: toMoney(calculator.getRemainingFundsOfType({\n      loan,\n      structureId,\n      type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n    })),\n  },\n  ...remainingFundsTableData({ loan, structureId, calculator }),\n  {\n    label: (\n      <T id=\"PDF.projectInfos.structure.postDisbursementSituation.total\" />\n    ),\n    data: toMoney(calculator.getTotalRemainingFunds({ loan, structureId })),\n    type: ROW_TYPES.SUM,\n  },\n];\n\nconst RemainingOwnFundsTable = ({\n  loan,\n  structureId,\n  calculator,\n}: RemainingOwnFundsTableProps) => (\n  <PdfTable\n    className=\"remaining-own-funds-table\"\n    rows={getRemainingOwnFundsRows({ loan, structureId, calculator })}\n    columnOptions={[{}, { style: { textAlign: 'right' } }]}\n  />\n);\n\nexport default RemainingOwnFundsTable;\n","// @flow\nimport React from 'react';\n\nimport T from '../../../../../../components/Translation';\nimport PercentWithStatus from '../../../../../../components/PercentWithStatus';\nimport { ERROR, SUCCESS } from '../../../../../constants';\nimport PdfPage from '../../PdfPage';\nimport BalanceSheet from './BalanceSheet';\nimport IncomeAndExpenses from './IncomeAndExpenses';\nimport RemainingOwnFundsTable from './RemainingOwnFundsTable';\n\ntype StructurePdfPageProps = {};\n\nconst StructurePdfPage = ({\n  loan,\n  structureId,\n  structureIndex,\n  pageNb,\n  pageCount,\n  calculator,\n}: StructurePdfPageProps) => {\n  const structureName = calculator.selectStructure({ loan, structureId }).name;\n  const incomeRatio = calculator.getIncomeRatio({ loan, structureId });\n  const borrowRatio = calculator.getBorrowRatio({ loan, structureId });\n  return (\n    <PdfPage\n      className=\"property-page\"\n      title={(\n        <T\n          id=\"PDF.title.structure\"\n          values={{ name: structureName || structureIndex + 1 }}\n        />\n      )}\n      withFooter\n      pageNb={pageNb}\n      pageCount={pageCount}\n    >\n      <h3 className=\"finma-ratio\">\n        Taux d'avance:&nbsp;\n        <span>\n          <PercentWithStatus\n            value={borrowRatio}\n            status={borrowRatio > calculator.maxBorrowRatio ? ERROR : SUCCESS}\n          />\n        </span>\n      </h3>\n\n      <BalanceSheet\n        loan={loan}\n        structureId={structureId}\n        calculator={calculator}\n      />\n\n      <h3 className=\"finma-ratio\">\n        Taux d'effort:&nbsp;\n        <span>\n          <PercentWithStatus\n            value={incomeRatio}\n            status={incomeRatio > calculator.maxIncomeRatio ? ERROR : SUCCESS}\n          />\n        </span>\n      </h3>\n\n      <IncomeAndExpenses\n        loan={loan}\n        structureId={structureId}\n        calculator={calculator}\n      />\n      <RemainingOwnFundsTable\n        loan={loan}\n        structureId={structureId}\n        calculator={calculator}\n      />\n    </PdfPage>\n  );\n};\n\nexport default StructurePdfPage;\n","export { default } from './StructurePdfPage';\n","export default `\n    .balance-sheet-table {\n        width: 100%;\n    }\n\n    .balance-sheet-table td {\n        width: 25%;\n    }\n\n    .balance-sheet-table .title-row td {\n        text-align: left !important;\n    }\n\n    .balance-sheet-table tr.title-row td:nth-child(1),\n    .balance-sheet-table tr td:nth-child(2) {\n        padding-right: 8px;\n    }\n\n    .balance-sheet-table .title-row td:nth-child(2),\n    .balance-sheet-table tr td:nth-child(3) {\n        padding-left: 8px;\n    }\n\n    .balance-sheet-table .title-row td:nth-child(2) {\n        padding-right: 0;\n    }\n\n    .balance-sheet-table tr td:nth-child(even) {\n        text-align: right;\n    }\n    \n    .balance-sheet-table tr td:nth-child(odd) {\n        text-align: left;\n    }\n\n    .balance-sheet-table {\n        margin-bottom: 40px;\n    }\n\n    .finma-ratio {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        font-weight: normal;\n    }\n\n    .finma-ratio span {\n        display: flex;\n        align-items: center;\n        font-size: 1.3em;\n        margin-left: 8px;\n    }\n\n    .finma-ratio svg {\n        width: 40px;\n    }\n\n    .remaining-own-funds-table {\n        width: 100%;\n    }\n`;\n","// @flow\nimport React from 'react';\nimport { classes, ROW_TYPES } from '../PdfTable/PdfTable';\nimport { toMoney } from '../../../../../utils/conversionFunctions';\n\ntype BalanceSheetTableProps = {};\n\nconst makeTableContent = (leftRows, rightRows) => {\n  const lines = Math.max(rightRows.length, leftRows.length);\n\n  return [...Array(lines)].map((_, index) => {\n    const { label: leftLabel, value: leftValue, money: leftMoney = true } = leftRows[index] || {};\n    const { label: rightLabel, value: rightValue, money: rightMoney = true } = rightRows[index] || {};\n\n    return (\n      <tr key={index} className={classes[ROW_TYPES.REGULAR]}>\n        <td>{leftLabel}</td>\n        <td>{leftMoney ? toMoney(leftValue) : leftValue}</td>\n        <td>{rightLabel}</td>\n        <td>{rightMoney ? toMoney(rightValue) : rightValue}</td>\n      </tr>\n    );\n  });\n};\n\nconst BalanceSheetTable = ({\n  titles,\n  rightRows,\n  leftRows,\n  bottomTitles,\n  bottomValues,\n}: BalanceSheetTableProps) => (\n  <table className=\"pdf-table balance-sheet-table\">\n    <tr className={classes[ROW_TYPES.TITLE]}>\n      <td colSpan={2}>{titles[0]}</td>\n      <td colSpan={2}>{titles[1]}</td>\n    </tr>\n\n    {makeTableContent(leftRows, rightRows)}\n\n    <tr className={classes[ROW_TYPES.SUM]}>\n      <td>{bottomTitles[0]}</td>\n      <td>{bottomValues[0]}</td>\n      <td>{bottomTitles[1]}</td>\n      <td>{bottomValues[1]}</td>\n    </tr>\n  </table>\n);\n\nexport default BalanceSheetTable;\n","export { default } from './BalanceSheetTable';\n","// @flow\nimport React from 'react';\nimport { IntlProvider } from 'react-intl';\n\nimport { getUserLocale, getFormats } from 'core/utils/localization';\nimport messagesFR from '../../../../../lang/fr.json';\n\ntype PdfProps = {};\n\nexport const LastPageContext = React.createContext();\n\nconst Pdf = ({ stylesheet, pages, pdfName }: PdfProps) => (\n  <IntlProvider\n    locale={getUserLocale()}\n    messages={messagesFR}\n    formats={getFormats()}\n    defaultLocale=\"fr\"\n  >\n    <>\n      <style dangerouslySetInnerHTML={{ __html: stylesheet }} />\n      {pdfName && <title>{pdfName}</title>}\n      {pages.map(({ Component, data, id }, index, arr) => {\n        const isLast = index === arr.length - 1;\n\n        return (\n          <LastPageContext.Provider key={id} value={isLast}>\n            <Component {...data} pageCount={pages.length} pageNb={index + 1} />\n          </LastPageContext.Provider>\n        );\n      })}\n    </>\n  </IntlProvider>\n);\n\nexport default Pdf;\n","// @flow\nimport React from 'react';\nimport cx from 'classnames';\n\nimport PdfPageTitle from './PdfPageTitle';\nimport PdfPageHeader from './PdfPageHeader';\nimport PdfPageFooter from './PdfPageFooter';\nimport { LastPageContext } from '../Pdf/Pdf';\n\ntype PdfPageProps = {};\n\nconst PdfPage = ({\n  className,\n  title,\n  fullHeight,\n  subtitle,\n  children,\n  withHeader,\n  withFooter,\n  pageNb,\n  pageCount,\n}: PdfPageProps) => (\n  <LastPageContext.Consumer>\n    {isLast => (\n      <>\n        {withHeader && <PdfPageHeader />}\n        {withFooter && <PdfPageFooter pageNb={pageNb} pageCount={pageCount} />}\n        <div className={cx('page', className, { 'full-height': fullHeight })}>\n          <PdfPageTitle title={title} subtitle={subtitle} />\n          {children}\n        </div>\n        {!isLast && <hr className=\"page-break-new\" />}\n      </>\n    )}\n  </LastPageContext.Consumer>\n);\n\nexport default PdfPage;\n","// @flow\nimport React from 'react';\n\ntype PdfPageFooterProps = {};\n\nconst PdfPageFooter = ({ pageNb, pageCount }: PdfPageFooterProps) => (\n  <div className=\"pdf-page-footer\">\n    <div>\n      <span className=\"bold\">e-Potek SA</span>\n      &nbsp;\n      <span>\n        Chemin Auguste-Vilbert 14, 1218 Le Grand-Saconnex &bull; +41 22 566 01\n        10\n      </span>\n    </div>\n    <div>\n      Page {pageNb}/{pageCount}\n    </div>\n  </div>\n);\n\nexport default PdfPageFooter;\n","// @flow\nimport React from 'react';\n\ntype PdfPageHeaderProps = {};\n\nconst PdfPageHeader = (props: PdfPageHeaderProps) => (\n  <div className=\"pdf-page-header\">Hello from PdfPageHeader</div>\n);\n\nexport default PdfPageHeader;\n","import { CONTENT_HEIGHT, BORDER_BLUE } from '../../../pdfConstants';\n\nconst PdfPageStyles = `\n    .page {\n        display: flex;\n        flex-direction: column;\n        justify-content: flex-start;\n        width: 100%;\n        box-sizing: border-box;\n        align-items: stretch;\n    }\n\n    .full-height {\n        height: ${CONTENT_HEIGHT}mm;\n    }\n\n    .header {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        width: 100%;\n        height: 120px;\n        margin-top: 24px;\n    }\n\n    .header .address {\n        display: flex;\n        flex-direction: column;    \n    }\n\n    .header .address .company-name {\n        font-weight: bold;\n    }\n\n    .pdf-page-title {\n        margin-bottom: 16px;\n    }\n\n    .pdf-page-title h1 {\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n        margin: 0;\n        color: ${BORDER_BLUE};\n        font-weight: normal;\n    }\n\n    .pdf-page-title img {\n        width: 30px;\n        height: 30px;\n        margin-right: 12px;\n    }\n\n    .pdf-page-footer {\n        display: flex;\n        justify-content: space-between;\n        border-top: 1px solid ${BORDER_BLUE};\n        width: 100%;\n        height: 100%;\n        padding-top: 16px;\n        color: ${BORDER_BLUE};\n        font-size: 10px;\n    }\n\n    .bold {\n        font-weight: bold;\n    }\n\n    .secondary {\n        opacity: 0.5;\n    }\n`;\n\nexport default PdfPageStyles;\n","// @flow\nimport React from 'react';\n\ntype PdfPageTitleProps = {};\n\nconst PdfPageTitle = ({ title, subtitle }: PdfPageTitleProps) => {\n  if (!title && !subtitle) {\n    return null;\n  }\n\n  return (\n    <div className=\"pdf-page-title\">\n      <h1>\n        <img src=\"https://www.e-potek.ch/img/logo_square_black_no_border.svg\" />\n        {title}\n      </h1>\n      {subtitle && <h2 className=\"secondary\">{subtitle}</h2>}\n    </div>\n  );\n};\n\nexport default PdfPageTitle;\n","export { default } from './PdfPage';\n","// @flow\nimport React from 'react';\nimport cx from 'classnames';\nimport PdfTableTooltips from './PdfTableTooltips';\nimport PdfTableRow from './PdfTableRow';\n\ntype PdfTableProps = {\n  rows: Array,\n  className: String,\n};\n\nexport const ROW_TYPES = {\n  TITLE: 'TITLE',\n  TITLE_NO_PADDING: 'TITLE_NO_PADDING',\n  REGULAR: 'REGULAR',\n  EMPTY: 'EMPTY',\n  SUM: 'SUM',\n  SUBSECTION: 'SUBSECTION',\n  TOOLTIP: 'TOOLTIP',\n};\n\nexport const classes = {\n  [ROW_TYPES.TITLE]: 'title-row',\n  [ROW_TYPES.TITLE_NO_PADDING]: 'title-row no-padding',\n  [ROW_TYPES.REGULAR]: 'regular-row',\n  [ROW_TYPES.EMPTY]: 'empty-row',\n  [ROW_TYPES.SUM]: 'sum-row',\n  [ROW_TYPES.SUBSECTION]: 'subsection-row',\n  [ROW_TYPES.TOOLTIP]: 'tooltip',\n};\n\nexport const shouldRenderRow = condition =>\n  condition === undefined || condition;\n\nconst PdfTable = ({\n  rows,\n  className,\n  columnOptions = [],\n  style = {},\n}: PdfTableProps) => (\n  <table className={cx('pdf-table', className)} style={style}>\n    {rows.map((rowData, index) => {\n      if (!shouldRenderRow(rowData.condition)) {\n        return null;\n      }\n\n      return (\n        <PdfTableRow\n          key={index}\n          rowData={rowData}\n          index={index}\n          columnOptions={columnOptions}\n        />\n      );\n    })}\n    <PdfTableTooltips\n      tooltips={rows.filter(({ tooltip, condition }) => !!tooltip && shouldRenderRow(condition))}\n      startIndex={rows.length + 1}\n    />\n  </table>\n);\nexport default PdfTable;\n","// @flow\nimport React from 'react';\nimport cx from 'classnames';\nimport { classes, ROW_TYPES } from './PdfTable';\n\ntype PdfTableRowProps = {\n  rowData: Object,\n  index: Number,\n  columnOptions: Array,\n};\n\nconst multiColumn = (data, style, columnOptions = []) =>\n  data.map((x, index) => {\n    const { className = '', style: columnStyle = {} } = columnOptions[index] || {};\n    return (\n      <td\n        className={className}\n        style={{ ...columnStyle, ...style }}\n        key={index}\n      >\n        {x}\n      </td>\n    );\n  });\n\nconst singleColumn = (\n  data,\n  style,\n  { className = '', style: columnStyle = {} } = {},\n) => (\n  <td style={{ ...columnStyle, ...style }} className={className}>\n    {data}\n  </td>\n);\n\nconst PdfTableRow = ({\n  rowData: {\n    label,\n    labelStyle = {},\n    tooltip,\n    data,\n    style,\n    colspan = 1,\n    type = ROW_TYPES.REGULAR,\n    className,\n  },\n  index,\n  columnOptions = [],\n}: PdfTableRowProps) => {\n  if (colspan > 1) {\n    const { className: columnClassName = '', style: columnStyle = {} } = columnOptions[0] || {};\n    return (\n      <tr key={index} className={cx(classes[type], className)}>\n        {label && (\n          <td\n            className={columnClassName}\n            colSpan={colspan}\n            style={{ ...columnStyle, ...labelStyle }}\n          >\n            {label}\n          </td>\n        )}\n      </tr>\n    );\n  }\n\n  const { className: columnClassName = '', style: columnStyle = {} } = columnOptions[0] || {};\n\n  return (\n    <tr key={index} className={cx(classes[type], className)}>\n      {label && (\n        <td style={columnStyle} className={columnClassName}>\n          {label}\n          {tooltip && <sup> {tooltip.symbol}</sup>}\n        </td>\n      )}\n      {Array.isArray(data)\n        ? multiColumn(data, style, columnOptions.slice(1))\n        : singleColumn(data, style, columnOptions[1])}\n    </tr>\n  );\n};\n\nexport default PdfTableRow;\n","import { BORDER_BLUE, BORDER_GREY } from '../../../pdfConstants';\n\nexport default `\n    .pdf-table {\n        border-collapse: collapse;\n        table-layout: fixed;\n    }\n\n    .pdf-table tr {\n        // width: 100%;\n    }\n\n    .pdf-table td {\n        // width: 50%;\n        padding: 8px 0px;\n        vertical-align: middle;\n    }\n\n    .pdf-table tr td:not(:first-of-type) {\n        // text-align: right;\n    }\n\n    .pdf-table tr:first-child {\n        border-top: none !important;\n    }\n    \n    .pdf-table tr.regular-row {\n        border-top: 1px solid ${BORDER_GREY};\n    }\n\n    .pdf-table tr.regular-row td {\n        font-weight: normal;\n    }\n\n    .pdf-table tr.subsection-row {\n        border-top: none !important;\n    }\n\n    .pdf-table tr.subsection-row td {\n        font-weight: bold;\n    }\n\n    .pdf-table tr.title-row {\n        border-bottom: 1px solid ${BORDER_BLUE};\n    }\n\n    .pdf-table tr.title-row td {\n        color: ${BORDER_BLUE};\n        margin: 0;\n        padding: 8px 0;\n        text-align: left;\n        font-weight: bold;\n        // width: 100%;\n    }\n\n    .pdf-table tr.tooltip {\n        border-top: none;\n    }\n\n    .pdf-table tr.tooltip td {\n        font-weight: 200;\n        padding-top: 20px;\n    }\n\n    .pdf-table tr.tooltip ~ tr.tooltip td{\n        padding-top: 4px;\n    }\n\n\n    .pdf-table tr.title-row:not(:first-child) td {\n        padding-top: 24px;\n    }\n\n    .pdf-table tr.title-row.no-padding td {\n        padding: 8px 0;\n    }\n\n    .pdf-table tr.empty-row {\n        border-color: white;\n    }\n\n    .pdf-table tr.sum-row {\n        border-top: 1px solid ${BORDER_BLUE};\n        border-bottom: 1px solid ${BORDER_BLUE};\n    }\n\n    .pdf-table tr.sum-row td {\n        font-weight: bold;\n    }\n`;\n","// @flow\nimport React from 'react';\nimport { ROW_TYPES } from './PdfTable';\nimport PdfTableRow from './PdfTableRow';\n\ntype PdfTableTooltipsProps = {\n  tooltips: Array<Object>,\n  rowRenderFunc: Function,\n  startIndex: Number,\n};\n\nconst PdfTableTooltips = ({ tooltips, startIndex }: PdfTableTooltipsProps) =>\n  tooltips.map(({ tooltip }, index) => (\n    <PdfTableRow\n      key={index}\n      rowData={{\n        label: (\n          <small>\n            <i>\n              <sup>{tooltip.symbol}</sup> {tooltip.text}\n            </i>\n          </small>\n        ),\n        type: ROW_TYPES.TOOLTIP,\n        colspan: 2,\n      }}\n      index={startIndex + index}\n    />\n  ));\n\nexport default PdfTableTooltips;\n","export { default } from './PdfTable';\n","export const FLEX_ROW = `\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: row;\n    flex-direction: row;\n`;\n\nexport const FLEX_COLUMN = `\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -ms-flex-direction: column;\n    flex-direction: column;\n`;\n\nexport const ALIGN_ITEMS_CENTER = `\n    -webkit-box-align: center;\n    -ms-flex-align: center;\n    align-items: center;\n`;\n\nexport const ALIGN_ITEMS_FLEX_END = `\n    -webkit-box-align: end;\n    -ms-flex-align: end;\n    align-items: flex-end;\n`;\n\nexport const JUSTIFY_CONTENT_FLEX_START = `\n    -webkit-box-pack: start;\n    -ms-flex-pack: start;\n    justify-content: flex-start;\n`;\n\nexport const JUSTIFY_CONTENT_SPACE_BETWEEN = `\n    -webkit-box-pack: justify;\n    -ms-flex-pack: justify;\n    justify-content: space-between;\n`;\n\nexport const JUSTIFY_CONTENT_FLEX_END = `\n    -webkit-box-pack: end;\n    -ms-flex-pack: end;\n    justify-content: flex-end;\n`;\n\nexport const JUSTIFY_CONTENT_CENTER = `\n    -webkit-box-pack: center;\n    -ms-flex-pack: center;\n    justify-content: center;\n`;\n\nexport const JUSTIFY_CONTENT_SPACE_EVENLY = `\n    -webkit-box-pack: space-evenly;\n    -ms-flex-pack: space-evenly;\n    justify-content: space-evenly;\n`;\n\nexport const JUSTIFY_CONTENT_SPACE_AROUND = `\n    -ms-flex-pack: distribute;\n    justify-content: space-around;\n`;\n\nexport const ALIGN_SELF_FLEX_END = `\n    -ms-flex-item-align: end;\n    align-self: flex-end;\n`;\n\nexport const flexGrow = size => `\n    -webkit-box-flex: ${size};\n    -ms-flex-positive: ${size};\n    flex-grow: ${size};\n`;\n\nexport const flexBasis = basis => `\n    -ms-flex-preferred-size: ${basis};\n    flex-basis: ${basis};\n`;\n\nexport const flexShrink = size => `\n    -ms-flex-negative: ${size};\n    flex-shrink: ${size};\n`;\n\nexport const FLEXBOX = {\n  FLEX_ROW,\n  FLEX_COLUMN,\n  ALIGN_ITEMS_CENTER,\n  ALIGN_ITEMS_FLEX_END,\n  JUSTIFY_CONTENT_FLEX_START,\n  JUSTIFY_CONTENT_SPACE_BETWEEN,\n  JUSTIFY_CONTENT_FLEX_END,\n  JUSTIFY_CONTENT_CENTER,\n  JUSTIFY_CONTENT_SPACE_EVENLY,\n  JUSTIFY_CONTENT_SPACE_AROUND,\n};\n\nexport const flex = options =>\n  options.reduce((style, option) => `${style} ${FLEXBOX[option]}`, '');\n","import { Meteor } from 'meteor/meteor';\nimport { Random } from 'meteor/random';\nimport { check, Match } from 'meteor/check';\n\nimport fetch from 'node-fetch';\nimport ReactDOMServer from 'react-dom/server';\nimport fs from 'fs';\n\nimport { adminLoans } from '../../loans/queries';\nimport { formatLoanWithPromotion } from '../../../utils/loanFunctions';\nimport { lenderRules } from '../../fragments';\nimport OrganisationService from '../../organisations/server/OrganisationService';\nimport LoanBankPDF from './pdfComponents/LoanBankPDF';\nimport { PDF_TYPES } from '../pdfConstants';\nimport { validateLoanPdf } from './pdfValidators';\n\nconst PDF_URL = 'https://docraptor.com/docs';\n\nclass PDFService {\n  makePDF = ({ type, params, options, htmlOnly }) => {\n    this.checkParams({ params, type });\n    const data = this.getDataForPDF(type, params);\n    this.checkData({ data, type });\n\n    const { component, props, fileName, pdfName } = this.makeConfigForPDF({\n      data,\n      type,\n      options,\n    });\n    const html = this.getComponentAsHTML(component, props, pdfName);\n\n    if (htmlOnly) {\n      return Promise.resolve({ html, pdfName });\n    }\n\n    return this.fetchPDF(html, fileName, pdfName);\n  };\n\n  checkData = ({ data, type }) => {\n    switch (type) {\n    case PDF_TYPES.LOAN: {\n      try {\n        validateLoanPdf(data);\n      } catch (error) {\n        throw new Meteor.Error(error);\n      }\n      break;\n    }\n    default:\n      throw new Meteor.Error(`Invalid pdf type: ${type}`);\n    }\n  };\n\n  checkParams = ({ params, type }) => {\n    switch (type) {\n    case PDF_TYPES.LOAN: {\n      const { loanId, organisationId, structureIds } = params;\n      check(loanId, String);\n      check(organisationId, Match.Maybe(String));\n      check(structureIds, Match.Maybe([String]));\n      break;\n    }\n\n    default:\n      throw new Meteor.Error(`Invalid pdf type: ${type}`);\n    }\n  };\n\n  getDataForPDF = (type, params) => {\n    switch (type) {\n    case PDF_TYPES.LOAN: {\n      const { loanId, organisationId } = params;\n\n      const organisation = organisationId\n          && OrganisationService.fetchOne({\n            $filters: { _id: organisationId },\n            lenderRules: lenderRules(),\n            name: 1,\n            logo: 1,\n          });\n      const loan = adminLoans.clone({ _id: loanId }).fetchOne();\n\n      if (loan.hasPromotion) {\n        return {\n          ...params,\n          loan: formatLoanWithPromotion(loan),\n          organisation,\n        };\n      }\n\n      return { ...params, loan, organisation };\n    }\n    default:\n      throw new Meteor.Error(`Invalid pdf type: ${type}`);\n    }\n  };\n\n  makeConfigForPDF = ({ type, data, options }) => {\n    const fileName = Random.id();\n\n    switch (type) {\n    case PDF_TYPES.LOAN: {\n      const { loan, organisation } = data;\n      return {\n        component: LoanBankPDF,\n        props: { ...data, options },\n        fileName,\n        pdfName: organisation\n          ? `${loan.name} - ${organisation.name}`\n          : loan.name,\n      };\n    }\n    default:\n      throw new Meteor.Error(`Invalid pdf type: ${type}`);\n    }\n  };\n\n  getBase64String = (path) => {\n    const file = fs.readFileSync(path);\n    fs.unlink(path); // Async delete\n    const base64 = new Buffer(file).toString('base64');\n    return base64;\n  };\n\n  getComponentAsHTML = (component, props, pdfName) =>\n    ReactDOMServer.renderToStaticMarkup(component({ ...props, pdfName }));\n\n  fetchPDF = (html, fileName, pdfName) => {\n    const API_KEY = Meteor.settings.DOC_RAPTOR_API_KEY;\n    const body = {\n      user_credentials: API_KEY,\n      doc: {\n        document_content: html,\n        name: pdfName,\n        type: 'pdf',\n        test: !Meteor.isProduction || Meteor.isStaging || Meteor.isDevEnvironment,\n        // help: true,\n        prince_options: { media: 'screen', baseurl: 'https://www.e-potek.ch' },\n      },\n    };\n\n    return fetch(PDF_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body),\n    })\n      .then((res) => {\n        const dest = fs.createWriteStream(`/tmp/${fileName}.pdf`);\n        const stream = res.body.pipe(dest);\n        return new Promise((resolve) => {\n          stream.on('finish', resolve);\n        });\n      })\n      .then(() => this.getBase64String(`/tmp/${fileName}.pdf`))\n      .then(base64 => ({ base64, pdfName }));\n  };\n}\n\nexport default new PDFService();\n","import { Meteor } from 'meteor/meteor';\n\nimport fs from 'fs';\n\nimport SecurityService from '../../security';\nimport { generatePDF } from '../methodDefinitions';\nimport PDFService from './PDFService';\nimport { PDF_TYPES } from '../pdfConstants';\nimport Loans from '../../loans';\nimport Organisations from '../../organisations';\n\ngeneratePDF.setHandler((context, params) => {\n  context.unblock();\n  SecurityService.checkCurrentUserIsAdmin();\n  return PDFService.makePDF(params);\n});\n\n// Enable this to iterate faster on pdfs\n// Creates a new PDF on every startup to ~/Desktop/pdf-test.html\nconst PDF_TESTING = false;\nconst loanName = '19-0077';\nconst orgName = 'Swisslife';\n\nMeteor.startup(() => {\n  if (Meteor.isDevelopment && PDF_TESTING) {\n    Meteor.defer(() => {\n      const loanId = Loans.findOne({ name: loanName })._id;\n      const organisationId = orgName\n        ? Organisations.findOne({ name: orgName })._id\n        : '';\n\n      if (!loanId) {\n        console.log(`Loan ${loanName} not found`);\n        return;\n      }\n\n      PDFService.makePDF({\n        type: PDF_TYPES.LOAN,\n        params: { loanId, organisationId },\n        options: { anonymous: false },\n        htmlOnly: true,\n      }).then((html) => {\n        console.log('Writing test PDF to ~/Desktop/pdf-testing.html');\n        const homedir = require('os').homedir();\n        fs.writeFileSync(`${homedir}/Desktop/pdf-test.html`, html);\n      });\n    });\n  }\n});\n","import Intl from 'core/utils/server/intl';\n\nconst formatKey = (key) => {\n  const i18nKey = `Forms.${key}`;\n  const translated = Intl.formatMessage({\n    id: `Forms.${key}`,\n    values: { purchaseType: 'ACQUISITION' }, // Do this to avoid purchaseType error\n  });\n\n  if (i18nKey === translated) {\n    // Translation does not exist\n    return key;\n  }\n\n  return translated;\n};\n\nexport const frenchErrors = {\n  missingKey: (key, parentKey) =>\n    (parentKey\n      ? `Il manque ${formatKey(key)} dans ${formatKey(parentKey)}`\n      : `Il manque ${formatKey(key)}`),\n  shouldBeArray: key => `${formatKey(key)} doit être une liste`,\n  shouldBeObject: key => `${formatKey(key)} doit être un objet`,\n  emptyArray: (key, parentKey) =>\n    (parentKey\n      ? `${formatKey(key)} ne doit pas être vide dans ${formatKey(parentKey)}`\n      : `${formatKey(key)} ne doit pas être vide`),\n};\n","import { makeCheckObjectStructure } from 'core/utils/checkObjectStructure';\nimport { PDF_TYPES, TEMPLATES } from '../pdfConstants';\nimport { frenchErrors } from './pdfHelpers';\n\nexport const validateLoanPdf = ({ loan, structureIds }) => {\n  const checkObjectStructure = makeCheckObjectStructure(frenchErrors);\n  checkObjectStructure({ obj: loan, template: TEMPLATES[PDF_TYPES.LOAN] });\n\n  const structures = loan.structures.filter(({ id }) =>\n    structureIds.includes(id));\n  let id;\n\n  structures.forEach(({ propertyId, promotionOptionId }) => {\n    if (!id) {\n      id = propertyId || promotionOptionId;\n    } else if (id !== propertyId && id !== promotionOptionId) {\n      throw 'Tous les biens immo doivent être les mêmes sur chaque plan financier du PDF';\n    }\n  });\n};\n","import { Match } from 'meteor/check';\nimport { Method } from '../methods/methods';\nimport { PDF_TYPES } from './pdfConstants';\n\nexport const generatePDF = new Method({\n  name: 'generatePDF',\n  params: {\n    type: Match.OneOf(...Object.values(PDF_TYPES)),\n    params: Object,\n    options: Object,\n    htmlOnly: Match.Maybe(Boolean),\n  },\n});\n","export const PDF_TYPES = {\n  LOAN: 'LOAN',\n};\n\nexport const TEMPLATES = {\n  [PDF_TYPES.LOAN]: {\n    name: 1,\n    purchaseType: 1,\n    residenceType: 1,\n    borrowers: [\n      {\n        gender: 1,\n        zipCode: { $or: 'sameAddress' },\n        city: { $or: 'sameAddress' },\n      },\n    ],\n    structure: {\n      ownFunds: [1],\n      property: {\n        propertyType: 1,\n        address1: 1,\n        zipCode: 1,\n        city: 1,\n      },\n    },\n    user: {\n      assignedEmployee: {\n        name: 1,\n        email: 1,\n        phoneNumbers: [1],\n      },\n    },\n  },\n};\n\nexport const A4_HEIGHT = 295;\nexport const MARGIN_TOP = 10;\nexport const MARGIN_BOTTOM = 15;\nexport const MARGIN_SIDE = 15;\nexport const WIGGLE_ROOM = 2; // Required to make things fit on one page\nexport const CONTENT_HEIGHT = A4_HEIGHT - MARGIN_BOTTOM - MARGIN_TOP - WIGGLE_ROOM;\nexport const BORDER_BLUE = '#213875';\nexport const BORDER_GREY = '#DEE2E6';\n","import { Meteor } from 'meteor/meteor';\nimport SimpleSchema from 'simpl-schema';\n\nimport FileService from '../../../files/server/FileService';\nimport Security from '../../../security';\nimport PropertyService from '../../../properties/server/PropertyService';\nimport { PROPERTIES_COLLECTION } from '../../../properties/propertyConstants';\nimport { withMeteorUserId } from '../helpers';\nimport {\n  checkQuery,\n  impersonateSchema,\n  getImpersonateUserId,\n} from './helpers';\nimport { HTTP_STATUS_CODES } from '../restApiConstants';\n\nconst bodySchema = new SimpleSchema({\n  propertyId: String,\n  key: String,\n});\n\nconst deleteFileAPI = (req) => {\n  const {\n    user: { _id: userId },\n    query,\n    body,\n  } = req;\n  const { 'impersonate-user': impersonateUser } = checkQuery({\n    query,\n    schema: impersonateSchema,\n  });\n\n  const cleanBody = bodySchema.clean(body);\n  try {\n    bodySchema.validate(cleanBody);\n  } catch (error) {\n    throw new Meteor.Error(error);\n  }\n\n  const { key } = cleanBody;\n  let { propertyId } = cleanBody;\n\n  const exists = PropertyService.exists(propertyId);\n\n  if (!exists) {\n    const propertyByExternalId = PropertyService.fetchOne({\n      $filters: { externalId: propertyId },\n    });\n    if (propertyByExternalId) {\n      propertyId = propertyByExternalId._id;\n    } else {\n      throw new Meteor.Error(\n        HTTP_STATUS_CODES.NOT_FOUND,\n        `No property found for id \"${propertyId}\"`,\n      );\n    }\n  }\n\n  return withMeteorUserId({ userId, impersonateUser }, () => {\n    let impersonateUserId;\n    if (impersonateUser) {\n      impersonateUserId = getImpersonateUserId({ userId, impersonateUser });\n    }\n\n    try {\n      Security.properties.isAllowedToManageDocuments({\n        userId: impersonateUserId || userId,\n        propertyId,\n      });\n    } catch (error) {\n      throw new Meteor.Error(HTTP_STATUS_CODES.FORBIDDEN, error);\n    }\n\n    return FileService.deleteFileAPI({\n      docId: propertyId,\n      key,\n      collection: PROPERTIES_COLLECTION,\n    });\n    // return deleteFileFromS3({\n    //   docId: propertyId,\n    //   key,\n    //   collection: PROPERTIES_COLLECTION,\n    // }).then(deleted => ({ deletedFiles: deleted }));\n  });\n};\n\nexport default deleteFileAPI;\n","import omit from 'lodash/omit';\nimport SimpleSchema from 'simpl-schema';\n\nimport PropertyService from 'core/api/properties/server/PropertyService';\nimport { Meteor } from 'meteor/meteor';\nimport { getImpersonateUserId, checkQuery } from './helpers';\nimport { proProperties } from '../../../properties/queries';\nimport { HTTP_STATUS_CODES } from '../restApiConstants';\n\nconst querySchema = new SimpleSchema({\n  'impersonate-user': { type: String, optional: true },\n});\n\nconst getPropertyAPI = ({ user: { _id: userId }, params, query }) => {\n  let { propertyId } = params;\n  const { 'impersonate-user': impersonateUser } = checkQuery({\n    query,\n    schema: querySchema,\n  });\n\n  const exists = PropertyService.exists(propertyId);\n\n  if (!exists) {\n    const propertyByExternalId = PropertyService.fetchOne({\n      $filters: { externalId: propertyId },\n    });\n    if (propertyByExternalId) {\n      propertyId = propertyByExternalId._id;\n    } else {\n      throw new Meteor.Error(\n        HTTP_STATUS_CODES.NOT_FOUND,\n        `No property found for id \"${propertyId}\"`,\n      );\n    }\n  }\n\n  let proId;\n  if (impersonateUser) {\n    proId = getImpersonateUserId({ userId, impersonateUser });\n  }\n\n  const [property] = proProperties\n    .clone({ _id: propertyId })\n    .fetch({ userId: proId || userId });\n\n  const filteredProperty = omit(property, [\n    'adminValidation',\n    'additionalDocuments',\n    'promotion',\n    'users',\n    'organisation',\n  ]);\n\n  return { property: filteredProperty };\n};\n\nexport default getPropertyAPI;\n","import pick from 'lodash/pick';\nimport SimpleSchema from 'simpl-schema';\n\nimport PropertyService from 'core/api/properties/server/PropertyService';\nimport { proPropertyLoans } from '../../../loans/queries';\nimport { getImpersonateUserId, checkQuery } from './helpers';\n\nconst querySchema = new SimpleSchema({\n  'impersonate-user': { type: String, optional: true },\n});\n\nconst getPropertyLoansAPI = ({ user: { _id: userId }, params, query }) => {\n  let { propertyId } = params;\n  const { 'impersonate-user': impersonateUser } = checkQuery({\n    query,\n    schema: querySchema,\n  });\n\n  const exists = PropertyService.exists(propertyId);\n\n  if (!exists) {\n    const propertyByExternalId = PropertyService.fetchOne({\n      $filters: { externalId: propertyId },\n    });\n    if (propertyByExternalId) {\n      propertyId = propertyByExternalId._id;\n    }\n  }\n\n  let proId;\n  if (impersonateUser) {\n    proId = getImpersonateUserId({ userId, impersonateUser });\n  }\n\n  const loans = proPropertyLoans\n    .clone({ propertyId })\n    .fetch({ userId: proId || userId });\n\n  const filteredLoans = loans.map(loan =>\n    pick(loan, [\n      'user.name',\n      'user.phoneNumbers',\n      'user.email',\n      'user.referredByUser.name',\n      'user.referredByOrganisation.name',\n      'createdAt',\n      'name',\n      'loanProgress',\n      'status',\n      'properties',\n    ]));\n\n  return filteredLoans.map(({ properties, ...loan }) => {\n    const property = properties.find(({ _id }) => _id === propertyId) || {};\n    const { solvent } = property;\n    return { ...loan, solvent };\n  });\n};\n\nexport default getPropertyLoansAPI;\n","import { Meteor } from 'meteor/meteor';\nimport pick from 'lodash/pick';\nimport SimpleSchema from 'simpl-schema';\n\nimport { getImpersonateUserId, checkQuery, checkAccessToUser } from './helpers';\nimport UserService from '../../../users/server/UserService';\n\nconst querySchema = new SimpleSchema({\n  email: { type: String, optional: false },\n  'impersonate-user': { type: String, optional: true },\n});\n\nconst getUserAPI = ({ user: { _id: userId }, query }) => {\n  const { email, 'impersonate-user': impersonateUser } = checkQuery({\n    query,\n    schema: querySchema,\n  });\n\n  let proId;\n  if (impersonateUser) {\n    proId = getImpersonateUserId({ userId, impersonateUser });\n  }\n\n  const user = UserService.getByEmail(email);\n\n  if (!user) {\n    throw new Meteor.Error(`User with email \"${email}\" not found, or you don't have access to it.`);\n  }\n\n  checkAccessToUser({ user, proId: proId || userId });\n\n  return pick(user, ['firstName', 'lastName', 'emails', 'phoneNumbers']);\n};\n\nexport default getUserAPI;\n","import { Meteor } from 'meteor/meteor';\n\nimport SimpleSchema from 'simpl-schema';\n\nimport UserService from '../../../users/server/UserService';\n\nconst anyOrganisationMatches = ({\n  userOrganisations = [],\n  proOrganisations = [],\n}) =>\n  userOrganisations.some(userOrganisation =>\n    proOrganisations.some(proOrganisation => userOrganisation._id === proOrganisation._id));\n\nexport const getImpersonateUserId = ({ userId, impersonateUser }) => {\n  const { organisations: userOrganisations = [] } = UserService.fetchOne({\n    $filters: { _id: userId },\n    organisations: { _id: 1 },\n  });\n\n  const user = UserService.getByEmail(impersonateUser);\n  let proId;\n  let proOrganisations;\n\n  if (user) {\n    proId = user._id;\n    proOrganisations = UserService.fetchOne({\n      $filters: { _id: user._id },\n      organisations: { _id: 1 },\n    }).organisations || [];\n  }\n\n  if (!proId) {\n    throw new Meteor.Error(`No user found for email address \"${impersonateUser}\"`);\n  }\n\n  if (\n    userOrganisations.length === 0\n    || proOrganisations.length === 0\n    || !anyOrganisationMatches({ userOrganisations, proOrganisations })\n  ) {\n    throw new Meteor.Error(`User with email address \"${impersonateUser}\" is not part of your organisation`);\n  }\n\n  return proId;\n};\n\nexport const checkQuery = ({ query, schema }) => {\n  const cleanQuery = schema.clean(query);\n  try {\n    schema.validate(cleanQuery);\n  } catch (error) {\n    throw new Meteor.Error(error);\n  }\n\n  return cleanQuery;\n};\n\nexport const checkAccessToUser = ({ user, proId }) => {\n  const { organisations = [] } = UserService.fetchOne({\n    $filters: { _id: proId },\n    organisations: { users: { _id: 1 } },\n  });\n\n  if (\n    !organisations.some(({ _id }) => _id === user.referredByOrganisationLink)\n    && !organisations.some(({ users = [] }) =>\n      users.some(({ _id }) => _id === user.referredByUserLink))\n  ) {\n    throw new Meteor.Error(`User with email \"${user.emails[0].address}\" not found, or you don't have access to it.`);\n  }\n};\n\nexport const impersonateSchema = new SimpleSchema({\n  'impersonate-user': { type: String, optional: true },\n});\n","export { default as inviteUserToPromotionAPI } from './inviteUserToPromotion';\nexport { default as testEndpointAPI } from './testEndpoint';\nexport {\n  default as inviteCustomerToProPropertiesAPI,\n} from './inviteCustomerToProProperties';\nexport { default as referCustomerAPI } from './referCustomer';\nexport { default as getPropertyLoansAPI } from './getPropertyLoans';\nexport { default as getUserAPI } from './getUser';\nexport { default as interestRatesAPI } from './interestRates';\nexport { default as mortgageEstimateAPI } from './mortgageEstimate';\nexport { default as updatePropertyAPI } from './updateProperty';\nexport { default as insertPropertyAPI } from './insertProperty';\nexport { default as uploadFileAPI } from './uploadFile';\nexport { default as deleteFileAPI } from './deleteFile';\nexport { default as getPropertyAPI } from './getProperty';\n","import { apiProperty } from 'core/api/fragments';\nimport PropertyService from '../../../properties/server/PropertyService';\nimport { proPropertyInsert } from '../../../methods';\nimport { withMeteorUserId } from '../helpers';\nimport { checkQuery, impersonateSchema, getImpersonateUserId } from './helpers';\nimport { HTTP_STATUS_CODES } from '../restApiConstants';\nimport Security from '../../../security';\n\nconst insertPropertyAPI = ({\n  user: { _id: userId },\n  body: property,\n  query,\n}) => {\n  const { 'impersonate-user': impersonateUser } = checkQuery({\n    query,\n    schema: impersonateSchema,\n  });\n\n  const { externalId } = property;\n\n  if (externalId) {\n    const propertyByExternalId = PropertyService.fetchOne({\n      $filters: { externalId },\n      ...apiProperty(),\n    });\n\n    if (propertyByExternalId) {\n      const { _id: propertyId } = propertyByExternalId;\n      return withMeteorUserId({ userId, impersonateUser }, () => {\n        let impersonateUserId;\n        let displayProperty = true;\n        if (impersonateUser) {\n          impersonateUserId = getImpersonateUserId({ userId, impersonateUser });\n        }\n\n        try {\n          Security.properties.hasAccessToProperty({\n            propertyId,\n            userId: impersonateUserId || userId,\n          });\n        } catch (error) {\n          displayProperty = false;\n        }\n\n        return {\n          status: HTTP_STATUS_CODES.CONFLICT,\n          message: `A property with externalId \"${externalId}\" already exists !`,\n          ...(displayProperty ? { property: propertyByExternalId } : {}),\n        };\n      });\n    }\n  }\n\n  return withMeteorUserId({ userId, impersonateUser }, () => {\n    let impersonateUserId;\n    if (impersonateUser) {\n      impersonateUserId = getImpersonateUserId({ userId, impersonateUser });\n    }\n    return proPropertyInsert\n      .run({ userId: impersonateUserId || userId, property })\n      .then((propertyId) => {\n        const insertedProperty = PropertyService.fetchOne({\n          $filters: { _id: propertyId },\n          ...apiProperty(),\n        });\n\n        return {\n          message: `Successfully inserted property with id \"${propertyId}\"`,\n          property: insertedProperty,\n        };\n      });\n  });\n};\n\nexport default insertPropertyAPI;\n","import { currentInterestRates } from '../../../interestRates/queries';\n\nconst interestRatesAPI = ({ user, body, params, query }) =>\n  currentInterestRates.clone().fetch();\n\nexport default interestRatesAPI;\n","import { Meteor } from 'meteor/meteor';\n\nimport PropertyService from 'core/api/properties/server/PropertyService';\nimport { proInviteUser } from '../../../methods';\nimport PropertySchema, {\n  userAllowedKeys,\n} from '../../../properties/schemas/PropertySchema';\nimport { withMeteorUserId, updateCustomerReferral } from '../helpers';\nimport { checkQuery, impersonateSchema } from './helpers';\n\nconst formatPropertyIds = (propertyIds) => {\n  const ids = propertyIds.map(id => `\"${id}\"`);\n  return [ids.slice(0, -1).join(', '), ids.slice(-1)[0]].join(ids.length < 2 ? '' : ' and ');\n};\n\nconst checkProperties = (properties) => {\n  const schema = PropertySchema.pick(...userAllowedKeys);\n\n  return properties.map((property) => {\n    const { _id, externalId } = property;\n    if ((!_id && !externalId) || (_id && externalId)) {\n      throw new Meteor.Error('Each property must have either a \"_id\" or \"externalId\" key');\n    }\n    if (_id) {\n      const exists = PropertyService.exists(_id);\n      if (!exists) {\n        throw new Meteor.Error(`Property with _id \"${_id}\" does not exist`);\n      }\n    } else {\n      return checkQuery({ schema, query: property });\n    }\n\n    return property;\n  });\n};\n\nconst getExternalProperties = properties =>\n  properties.filter(({ externalId }) => externalId);\nconst getInternalProperties = properties => properties.filter(({ _id }) => _id);\n\nconst inviteCustomerToProPropertiesAPI = ({\n  user: { _id: userId },\n  body,\n  query,\n}) => {\n  let { user, properties = [], shareSolvency } = body;\n  const { 'impersonate-user': impersonateUser } = checkQuery({\n    query,\n    schema: impersonateSchema,\n  });\n\n  properties = checkProperties(properties);\n  const externalProperties = getExternalProperties(properties);\n  const internalProperties = getInternalProperties(properties);\n\n  const formattedIds = formatPropertyIds([\n    ...externalProperties.map(({ externalId }) => externalId),\n    ...internalProperties.map(({ _id }) => _id),\n  ]);\n\n  const payload = {\n    propertyIds: internalProperties.map(({ _id }) => _id),\n    properties: externalProperties,\n    user,\n    shareSolvency,\n  };\n\n  if (!payload.propertyIds.length && !payload.properties.length) {\n    throw new Meteor.Error('You must provide at least one valid property');\n  }\n\n  return withMeteorUserId({ userId, impersonateUser }, () =>\n    proInviteUser.run(payload))\n    .then(() =>\n      updateCustomerReferral({ customer: user, userId, impersonateUser }))\n    .then(() => ({\n      message: `Successfully invited user \"${\n        user.email\n      }\" to property ids ${formattedIds}`,\n    }));\n};\n\nexport default inviteCustomerToProPropertiesAPI;\n","import { Meteor } from 'meteor/meteor';\n\nimport { proInviteUser } from '../../../methods';\nimport {\n  withMeteorUserId,\n  literalToString,\n  stringToLiteral,\n  updateCustomerReferral,\n} from '../helpers';\nimport { checkQuery, impersonateSchema } from './helpers';\n\nconst inviteUserToPromotionAPI = ({\n  user: { _id: userId },\n  body,\n  params,\n  query,\n}) => {\n  const { user, shareSolvency } = body;\n  const { promotionId } = params;\n  const { 'impersonate-user': impersonateUser } = checkQuery({\n    query,\n    schema: impersonateSchema,\n  });\n\n  const promotionIds = [promotionId]\n    .map(stringToLiteral)\n    .filter(x => x)\n    .map(literalToString);\n\n  if (!promotionIds.length) {\n    throw new Meteor.Error('No promotionId provided');\n  }\n\n  return withMeteorUserId({ userId, impersonateUser }, () =>\n    proInviteUser.run({\n      promotionIds,\n      user: { ...user, invitedBy: userId },\n      shareSolvency,\n    }))\n    .then(() =>\n      updateCustomerReferral({ customer: user, userId, impersonateUser }))\n    .then(() => ({\n      message: `Successfully invited user \"${\n        user.email\n      }\" to promotion id \"${promotionId}\"`,\n    }));\n};\n\nexport default inviteUserToPromotionAPI;\n","import SimpleSchema from 'simpl-schema';\n\nimport { MAX_BORROW_RATIO_PRIMARY_PROPERTY } from '../../../../config/financeConstants';\nimport Calculator, {\n  Calculator as CalculatorClass,\n} from '../../../../utils/Calculator';\nimport zipcodes from '../../../../utils/zipcodes';\nimport { address } from '../../../helpers/sharedSchemas';\nimport {\n  RESIDENCE_TYPE,\n  INTEREST_RATES,\n  PURCHASE_TYPE,\n} from '../../../constants';\nimport { currentInterestRates } from '../../../interestRates/queries';\nimport { checkQuery } from './helpers';\n\nconst LUXURY_VALUE_THRESHOLD = 2500000;\nconst SECOND_OR_LUXURY_AMORTIZATION_GOAL = 0.5;\nconst SECOND_OR_LUXURY_BORROW_RATIO = 0.67;\n\nconst roundToCents = val => Number(val.toFixed(2));\nconst getBorrowRatio = (residenceType, propertyValue) => {\n  if (residenceType === RESIDENCE_TYPE.SECOND_RESIDENCE) {\n    return SECOND_OR_LUXURY_BORROW_RATIO;\n  }\n\n  if (propertyValue >= LUXURY_VALUE_THRESHOLD) {\n    return SECOND_OR_LUXURY_BORROW_RATIO;\n  }\n\n  return MAX_BORROW_RATIO_PRIMARY_PROPERTY;\n};\n\nconst querySchema = new SimpleSchema({\n  'property-value': { type: Number, min: 50000 },\n  'monthly-maintenance': {\n    type: Number,\n    optional: true,\n    defaultValue: 0,\n    min: 0,\n  },\n  'residence-type': {\n    type: String,\n    optional: true,\n    defaultValue: RESIDENCE_TYPE.MAIN_RESIDENCE,\n    allowedValues: Object.values(RESIDENCE_TYPE),\n  },\n  'purchase-type': {\n    type: String,\n    optional: true,\n    defaultValue: PURCHASE_TYPE.ACQUISITION,\n    allowedValues: Object.values(PURCHASE_TYPE),\n  },\n  'include-notary-fees': {\n    type: Boolean,\n    optional: true,\n    defaultValue: true,\n  },\n  ...{ 'zip-code': address.zipCode, canton: address.canton },\n});\n\nconst mortgageEstimateAPI = ({ query }) => {\n  const {\n    'property-value': propertyValue,\n    'residence-type': residenceType,\n    'purchase-type': purchaseType,\n    'zip-code': zipCode,\n    'monthly-maintenance': maintenance,\n    'include-notary-fees': includeNotaryFees,\n    canton,\n  } = checkQuery({ query, schema: querySchema });\n\n  const date = new Date().toISOString();\n  const rates = currentInterestRates.clone().fetch();\n  const interestRates = rates.rates.reduce(\n    (obj, { type, rateLow }) => ({ ...obj, [type]: rateLow }),\n    {},\n  );\n  const finalCanton = zipCode ? zipcodes(zipCode) : canton;\n  const borrowRatio = getBorrowRatio(residenceType, propertyValue);\n  const loanValue = roundToCents(propertyValue * borrowRatio);\n  const loanObject = Calculator.createLoanObject({\n    residenceType,\n    wantedLoan: loanValue,\n    propertyValue,\n    canton: finalCanton,\n    currentInterestRates: interestRates,\n    loanTranches: [{ value: 1, type: INTEREST_RATES.YEARS_10 }],\n  });\n  const amortizationGoal = borrowRatio === SECOND_OR_LUXURY_BORROW_RATIO\n    ? SECOND_OR_LUXURY_AMORTIZATION_GOAL\n    : undefined;\n\n  const calc = new CalculatorClass({ loan: loanObject, amortizationGoal });\n  const getInterestsForType = type =>\n    calc.getInterests({\n      loan: Calculator.createLoanObject({\n        residenceType,\n        wantedLoan: loanValue,\n        propertyValue,\n        canton: finalCanton,\n        currentInterestRates: interestRates,\n        loanTranches: [{ value: 1, type }],\n      }),\n    });\n\n  const interests10 = calc.getInterests({ loan: loanObject });\n  const interests15 = getInterestsForType(INTEREST_RATES.YEARS_15);\n  const interests5 = getInterestsForType(INTEREST_RATES.YEARS_5);\n  const interestsLibor = getInterestsForType(INTEREST_RATES.LIBOR);\n  const amortization = roundToCents(calc.getAmortization({ loan: loanObject }));\n  const notaryFees = includeNotaryFees\n    ? calc.getFees({ loan: loanObject })\n    : null;\n  const totalValue = roundToCents(propertyValue + (notaryFees ? notaryFees.total : 0));\n\n  return {\n    borrowRatio,\n    date,\n    loanValue,\n    monthlyAmortization: amortization,\n    monthlyInterests: {\n      interestsLibor,\n      interests5,\n      interests10,\n      interests15,\n    },\n    monthlyMaintenance: maintenance,\n    monthlyTotals: {\n      interestsLibor: amortization + maintenance + interestsLibor,\n      interests5: amortization + maintenance + interests5,\n      interests10: amortization + maintenance + interests10,\n      interests15: amortization + maintenance + interests15,\n    },\n    notaryFees: notaryFees\n      ? {\n        canton: notaryFees.canton,\n        estimate: notaryFees.estimate,\n        total: notaryFees.total,\n      }\n      : undefined,\n    ownFunds: roundToCents(totalValue - loanValue),\n    purchaseType,\n    residenceType,\n    totalValue,\n  };\n};\n\nexport default mortgageEstimateAPI;\n","import SimpleSchema from 'simpl-schema';\n\nimport { proInviteUser } from '../../../methods';\nimport { withMeteorUserId, updateCustomerReferral } from '../helpers';\nimport { checkQuery } from './helpers';\n\nconst querySchema = new SimpleSchema({\n  'impersonate-user': { type: String, optional: true },\n});\n\nconst referCustomerAPI = ({ user: { _id: userId }, body, query }) => {\n  const { user, shareSolvency } = body;\n  const { 'impersonate-user': impersonateUser } = checkQuery({\n    query,\n    schema: querySchema,\n  });\n\n  return withMeteorUserId({ userId, impersonateUser }, () =>\n    proInviteUser.run({\n      user: { ...user, invitedBy: userId },\n      shareSolvency,\n    }))\n    .then(() =>\n      updateCustomerReferral({ customer: user, userId, impersonateUser }))\n    .then(() => ({\n      message: `Successfully referred user \"${user.email}\"`,\n    }));\n};\n\nexport default referCustomerAPI;\n","import pick from 'lodash/pick';\n\nconst testEndpointAPI = ({ user, body, params, query }) => ({\n  user: pick(user, ['emails', 'firstName', 'lastName', 'phoneNumbers']),\n  body,\n  query,\n  params,\n});\n\nexport default testEndpointAPI;\n","import { Meteor } from 'meteor/meteor';\n\nimport { apiProperty } from 'core/api/fragments';\nimport PropertyService from '../../../properties/server/PropertyService';\nimport { propertyUpdate } from '../../../methods';\nimport { withMeteorUserId } from '../helpers';\nimport { checkQuery, impersonateSchema } from './helpers';\nimport { HTTP_STATUS_CODES } from '../restApiConstants';\n\nconst updatePropertyAPI = ({\n  user: { _id: userId },\n  params,\n  body: object,\n  query,\n}) => {\n  let { propertyId } = params;\n  const { 'impersonate-user': impersonateUser } = checkQuery({\n    query,\n    schema: impersonateSchema,\n  });\n\n  const exists = PropertyService.exists(propertyId);\n\n  if (!exists) {\n    const propertyByExternalId = PropertyService.fetchOne({\n      $filters: { externalId: propertyId },\n    });\n    if (propertyByExternalId) {\n      propertyId = propertyByExternalId._id;\n    } else {\n      throw new Meteor.Error(`No property found for id \"${propertyId}\"`);\n    }\n  }\n\n  return withMeteorUserId({ userId, impersonateUser }, () =>\n    propertyUpdate.run({ propertyId, object }).then(() => {\n      const property = PropertyService.fetchOne({\n        $filters: { _id: propertyId },\n        ...apiProperty(),\n      });\n      return Promise.resolve({\n        status: HTTP_STATUS_CODES.OK,\n        message: `Property with id \"${params.propertyId}\" updated !`,\n        property,\n      });\n    }));\n};\n\nexport default updatePropertyAPI;\n","import { Meteor } from 'meteor/meteor';\nimport SimpleSchema from 'simpl-schema';\n\nimport { PROPERTY_DOCUMENTS } from '../../../files/fileConstants';\nimport FileService from '../../../files/server/FileService';\nimport Security from '../../../security';\nimport PropertyService from '../../../properties/server/PropertyService';\nimport { PROPERTIES_COLLECTION } from '../../../properties/propertyConstants';\nimport { withMeteorUserId } from '../helpers';\nimport {\n  checkQuery,\n  impersonateSchema,\n  getImpersonateUserId,\n} from './helpers';\nimport { HTTP_STATUS_CODES } from '../restApiConstants';\n\nconst bodySchema = new SimpleSchema({\n  propertyId: String,\n  category: {\n    type: String,\n    allowedValues: [...Object.values(PROPERTY_DOCUMENTS)],\n    custom() {\n      if (this.field('propertyId')) {\n        return Object.values(PROPERTY_DOCUMENTS).includes(this.value)\n          ? undefined\n          : 'invalidCategory';\n      }\n    },\n  },\n});\n\nconst uploadFileAPI = (req) => {\n  const {\n    files: { file } = {},\n    user: { _id: userId },\n    query,\n    body,\n  } = req;\n  const { 'impersonate-user': impersonateUser } = checkQuery({\n    query,\n    schema: impersonateSchema,\n  });\n\n  const cleanBody = bodySchema.clean(body);\n  try {\n    bodySchema.validate(cleanBody);\n  } catch (error) {\n    throw new Meteor.Error(error);\n  }\n\n  const { category } = cleanBody;\n  let { propertyId } = cleanBody;\n\n  const exists = PropertyService.exists(propertyId);\n\n  if (!exists) {\n    const propertyByExternalId = PropertyService.fetchOne({\n      $filters: { externalId: propertyId },\n    });\n    if (propertyByExternalId) {\n      propertyId = propertyByExternalId._id;\n    } else {\n      throw new Meteor.Error(\n        HTTP_STATUS_CODES.NOT_FOUND,\n        `No property found for id \"${propertyId}\"`,\n      );\n    }\n  }\n\n  if (!file) {\n    throw new Meteor.Error('No file uploaded');\n  }\n  return withMeteorUserId({ userId, impersonateUser }, () => {\n    let impersonateUserId;\n    if (impersonateUser) {\n      impersonateUserId = getImpersonateUserId({ userId, impersonateUser });\n    }\n\n    try {\n      Security.properties.isAllowedToManageDocuments({\n        userId: impersonateUserId || userId,\n        propertyId,\n      });\n    } catch (error) {\n      throw new Meteor.Error(HTTP_STATUS_CODES.FORBIDDEN, error);\n    }\n\n    return FileService.uploadFileAPI({\n      file,\n      docId: propertyId,\n      id: category,\n      collection: PROPERTIES_COLLECTION,\n    });\n  });\n};\n\nexport default uploadFileAPI;\n","import { Meteor } from 'meteor/meteor';\nimport { WebApp } from 'meteor/webapp';\nimport connectRoute from 'connect-route';\nimport Fiber from 'fibers';\nimport { compose } from 'recompose';\n\nimport * as defaultMiddlewares from './middlewares';\nimport { logRequest, trackRequest, setIsAPI, setAPIUser } from './helpers';\nimport { HTTP_STATUS_CODES } from './restApiConstants';\nimport {\n  setClientMicroservice,\n  setClientUrl,\n} from '../../../utils/server/getClientUrl';\n\nexport default class RESTAPI {\n  constructor({\n    rootPath = '/api',\n    preMiddlewares = defaultMiddlewares.preMiddlewares,\n    postMiddlewares = defaultMiddlewares.postMiddlewares,\n  } = {}) {\n    this.rootPath = rootPath;\n    this.preMiddlewares = preMiddlewares;\n    this.postMiddlewares = postMiddlewares;\n    this.endpoints = {};\n  }\n\n  reset() {\n    WebApp.connectHandlers.stack = [];\n  }\n\n  start() {\n    this.reset();\n    this.registerMiddlewares(this.preMiddlewares);\n    this.registerEndpoints();\n    this.registerMiddlewares(this.postMiddlewares);\n  }\n\n  registerMiddlewares(middlewares) {\n    middlewares.forEach((middleware) => {\n      WebApp.connectHandlers.use(this.rootPath, middleware(this.getEndpointsOptions()));\n    });\n  }\n\n  makeEndpoint = path => this.rootPath + path;\n\n  registerEndpoints() {\n    const endpoints = Object.keys(this.endpoints);\n\n    endpoints.forEach((endpoint) => {\n      const methods = Object.keys(this.endpoints[endpoint]);\n\n      methods.forEach((method) => {\n        const finalEndpoint = this.makeEndpoint(endpoint);\n        const { handler } = this.endpoints[endpoint][method];\n\n        this.registerEndpoint(finalEndpoint, handler, method);\n      });\n    });\n  }\n\n  wrapHandler(handler) {\n    return (req, res, next) => {\n      Fiber(() => {\n        const { headers = {} } = req;\n        const { host, location } = headers;\n\n        setClientMicroservice('api');\n        setClientUrl({ host, href: location });\n        setIsAPI();\n        setAPIUser(req.user);\n\n        try {\n          Promise.resolve()\n            .then(() =>\n              handler({\n                user: req.user,\n                body: req.body,\n                query: req.query,\n                params: req.params,\n                files: req.files,\n              }))\n            .then(result => this.handleSuccess(result, req, res))\n            .catch(next);\n        } catch (error) {\n          next(error);\n        }\n      }).run();\n    };\n  }\n\n  registerEndpoint(endpoint, handler, method) {\n    compose(\n      WebApp.connectHandlers.use.bind(WebApp.connectHandlers),\n      Meteor.bindEnvironment,\n      connectRoute,\n    )((router) => {\n      router[method.toLowerCase()](endpoint, this.wrapHandler(handler));\n    });\n  }\n\n  handleSuccess(result = '', req, res) {\n    const { status } = result;\n    const stringified = JSON.stringify(result);\n\n    // LOGS\n    logRequest({ req, result: stringified });\n\n    trackRequest({ req, result: stringified });\n\n    res.writeHead(status || HTTP_STATUS_CODES.OK, {\n      'Content-Type': 'application/json',\n    });\n    res.write(stringified);\n\n    res.end();\n  }\n\n  addEndpoint(path, method, handler, options = {}) {\n    if (this.endpoints[path] && this.endpoints[path][method]) {\n      throw new Error(`Endpoint \"${path}\" for method \"${method}\" already exists in REST API`);\n    }\n\n    this.endpoints[path] = {\n      ...(this.endpoints[path] || {}),\n      [method]: { handler, options },\n    };\n  }\n\n  getEndpointsOptions() {\n    return Object.keys(this.endpoints).reduce(\n      (options, path) => ({\n        ...options,\n        [this.makeEndpoint(path)]: Object.keys(this.endpoints[path]).reduce(\n          (methods, method) => ({\n            ...methods,\n            [method]: { options: this.endpoints[path][method].options },\n          }),\n          {},\n        ),\n      }),\n      {},\n    );\n  }\n}\n","import { DDPCommon } from 'meteor/ddp-common';\nimport { DDP } from 'meteor/ddp-client';\nimport { Meteor } from 'meteor/meteor';\nimport { Match } from 'meteor/check';\nimport { Random } from 'meteor/random';\n\nimport NodeRSA from 'node-rsa';\nimport get from 'lodash/get';\nimport set from 'lodash/set';\n\nimport Analytics from 'core/api/analytics/server/Analytics';\nimport EVENTS from 'core/api/analytics/events';\nimport UserService from 'core/api/users/server/UserService';\nimport { getClientHost } from 'core/utils/server/getClientUrl';\nimport { storeOnFiber, getFromFiber } from 'core/utils/server/fiberStorage';\nimport { sortObject } from '../../helpers';\nimport { HTTP_STATUS_CODES } from './restApiConstants';\nimport { getImpersonateUserId } from './endpoints/helpers';\n\nexport const AUTH_ITEMS = {\n  RSA_PUBLIC_KEY: 'RSA_PUBLIC_KEY',\n  RSA_SIGNATURE: 'RSA_SIGNATURE',\n};\n\nexport const OBJECT_FORMATS = {\n  DEFAULT: 'DEFAULT',\n  TO_LITERRAL: 'TO_LITERRAL',\n  TO_STRING: 'TO_STRING',\n};\n\nexport const getHeader = (req, name) => req.headers[name];\n\nconst getAuthItem = ({ req, item }) => {\n  const authorization = getHeader(req, 'x-epotek-authorization');\n  if (!authorization) {\n    return undefined;\n  }\n\n  if (!authorization.includes('EPOTEK')) {\n    return undefined;\n  }\n\n  switch (item) {\n  case AUTH_ITEMS.RSA_PUBLIC_KEY: {\n    return authorization.replace('EPOTEK ', '').split(':')[0];\n  }\n  case AUTH_ITEMS.RSA_SIGNATURE: {\n    return authorization.replace('EPOTEK ', '').split(':')[1];\n  }\n  default:\n    return undefined;\n  }\n};\n\nexport const getPublicKey = req =>\n  getAuthItem({ req, item: AUTH_ITEMS.RSA_PUBLIC_KEY });\n\nexport const getSignature = req =>\n  getAuthItem({ req, item: AUTH_ITEMS.RSA_SIGNATURE });\n\nexport const getRequestPath = (req) => {\n  const { _parsedUrl: parsedUrl } = req;\n  return parsedUrl && parsedUrl.pathname;\n};\n\nexport const getRequestMethod = req => req.method;\n\nexport const updateCustomerReferral = ({\n  customer,\n  userId,\n  impersonateUser,\n}) => {\n  if (impersonateUser) {\n    const customerId = UserService.getByEmail(customer.email)._id;\n    const mainOrg = UserService.getUserMainOrganisation(userId);\n    return UserService.setReferredByOrganisation({\n      userId: customerId,\n      organisationId: mainOrg && mainOrg._id,\n    });\n  }\n  return Promise.resolve();\n};\n\nexport const withMeteorUserId = ({ userId, impersonateUser }, func) => {\n  let impersonateUserId;\n  if (impersonateUser) {\n    impersonateUserId = getImpersonateUserId({ userId, impersonateUser });\n  }\n\n  const invocation = new DDPCommon.MethodInvocation({\n    userId: impersonateUserId || userId,\n    // isSimulation: false,\n    // setUserId,\n    // unblock,\n    // connection: self.connectionHandle,\n    // randomSeed,\n  });\n\n  return DDP._CurrentInvocation.withValue(invocation, func);\n};\n\nexport const getErrorObject = (error, res) => {\n  let { statusCode: status } = res;\n  let message;\n  let errorName;\n\n  if (!status || status === 200) {\n    status = HTTP_STATUS_CODES.SERVER_ERROR;\n  }\n\n  if (error instanceof Meteor.Error || error instanceof Match.Error) {\n    message = error.message;\n    status = error.error && typeof error.error === 'number'\n      ? error.error\n      : HTTP_STATUS_CODES.BAD_REQUEST;\n  } else {\n    message = 'Internal server error';\n  }\n\n  if (error && error.status && error.message && error.errorName) {\n    // This is one of our custom errors\n    errorName = error.errorName;\n    status = error.status;\n    message = error.message;\n  }\n\n  return { status, errorName, message };\n};\n\nexport const stringToLiteral = (value) => {\n  const maps = {\n    true: true,\n    false: false,\n    undefined,\n    NaN,\n    Infinity,\n    '-Infinity': -Infinity,\n    null: null,\n  };\n  if (value && !isNaN(value)) {\n    return parseInt(value);\n  }\n\n  return Object.keys(maps).includes(value) ? maps[value] : value;\n};\n\nexport const literalToString = (value) => {\n  switch (value) {\n  case true:\n    return 'true';\n  case false:\n    return 'false';\n  case undefined:\n    return 'undefined';\n  case null:\n    return 'null';\n  case NaN:\n    return 'NaN';\n  case Infinity:\n    return 'Infinity';\n  case -Infinity:\n    return '-Infinity';\n  default:\n    return value.toString();\n  }\n};\n\n// Return array of every object's properties\nconst getObjectPropertiesPath = (obj, stack, res) => {\n  let arr = res;\n  for (const property in obj) {\n    if (obj.hasOwnProperty(property)) {\n      if (obj[property] && typeof obj[property] === 'object') {\n        if (\n          (Array.isArray(obj[property]) && obj[property].length === 0)\n          || Object.keys(obj[property]).length === 0\n        ) {\n          const str = `${stack}.${property}`.substr(1);\n          arr = [...arr, str];\n        } else {\n          arr = getObjectPropertiesPath(\n            obj[property],\n            `${stack}.${property}`,\n            arr,\n          );\n        }\n      } else {\n        const str = `${stack}.${property}`.substr(1);\n        arr = [...arr, str];\n      }\n    }\n  }\n\n  return arr;\n};\n\nexport const formatObject = (obj, format) => {\n  if (format === OBJECT_FORMATS.DEFAULT) {\n    return obj;\n  }\n\n  const properties = getObjectPropertiesPath(obj, '', []);\n  const formattedObject = {};\n\n  properties.forEach((property) => {\n    const value = get(obj, property);\n    switch (format) {\n    // String to literal\n    case OBJECT_FORMATS.TO_LITERRAL: {\n      set(formattedObject, property, stringToLiteral(value));\n      break;\n    }\n    // Literal to string\n    case OBJECT_FORMATS.TO_STRING: {\n      set(formattedObject, property, literalToString(value));\n      break;\n    }\n    default:\n      break;\n    }\n  });\n\n  return formattedObject;\n};\n\nexport const formatParams = params =>\n  Object.keys(params).reduce(\n    (object, key) => ({\n      ...object,\n      [key]: stringToLiteral(params[key]),\n    }),\n    {},\n  );\n\nexport const logRequest = ({ req, result }) => {\n  const {\n    user: { _id, emails } = {},\n    body = {},\n    params = {},\n    query = {},\n    headers = {},\n    verifiedFormat,\n  } = req;\n\n  if (Meteor.isTest) {\n    return;\n  }\n\n  console.log('----- API CALL -----');\n  console.log('USER:', JSON.stringify({ _id, emails }, null, 2));\n  console.log('URL:', getRequestPath(req));\n  console.log('HEADERS:', JSON.stringify(headers, null, 2));\n  console.log('BODY:', JSON.stringify(body, null, 2));\n  console.log('PARAMS:', JSON.stringify(params, null, 2));\n  console.log('QUERY:', JSON.stringify(query, null, 2));\n  console.log('VERIFIED FORMAT:', verifiedFormat);\n  console.log('RESULT:', result);\n  console.log('-----------------');\n};\n\nexport const verifySignature = (req) => {\n  const { publicKey, signature, body, query, isMultipart } = req;\n  const timestamp = getHeader(req, 'x-epotek-timestamp');\n  const nonce = getHeader(req, 'x-epotek-nonce');\n\n  const method = getRequestMethod(req);\n\n  // Import public key\n  const key = new NodeRSA();\n  key.importKey(publicKey, 'pkcs1-public-pem');\n\n  let objectToVerify = { security: sortObject({ timestamp, nonce }) };\n\n  if (Object.keys(query).length > 0) {\n    objectToVerify = {\n      ...objectToVerify,\n      queryParams: sortObject(query),\n    };\n  }\n\n  if (!['GET', 'HEAD'].includes(method) && Object.keys(body).length > 0) {\n    objectToVerify = { ...objectToVerify, body: sortObject(body) };\n  }\n\n  if (isMultipart) {\n    const { files: { file = {} } = {} } = req;\n    const { originalFilename, size, type } = file;\n    objectToVerify = {\n      ...objectToVerify,\n      file: sortObject({ name: originalFilename, size, type }),\n    };\n  }\n\n  const verified = Object.keys(OBJECT_FORMATS).some((format) => {\n    const isValid = key.verify(\n      JSON.stringify(formatObject(objectToVerify, format)),\n      signature,\n      'utf8',\n      'base64',\n    );\n\n    if (isValid) {\n      req.verifiedFormat = format;\n    }\n    return isValid;\n  });\n\n  return {\n    verified,\n    toVerify: {\n      object: objectToVerify,\n      acceptedStringifiedVersions: Object.keys(OBJECT_FORMATS).map(format =>\n        JSON.stringify(formatObject(objectToVerify, format))),\n    },\n  };\n};\n\nexport const trackRequest = ({ req, result }) => {\n  const { user: { _id: userId } = {}, headers = {} } = req;\n  const {\n    'x-forwarded-for': clientAddress,\n    'x-real-ip': realIp,\n  } = headers;\n\n  const analytics = new Analytics({\n    userId,\n    connection: {\n      clientAddress,\n      httpHeaders: { 'x-real-ip': realIp, host: getClientHost() },\n    },\n  });\n\n  if (userId) {\n    analytics.identify(Random.id(16));\n  }\n\n  analytics.track(EVENTS.API_CALLED, { endpoint: getRequestPath(req), result });\n};\n\nexport const getMatchingPathOptions = (req, options) => {\n  const endpoints = Object.keys(options);\n  const path = getRequestPath(req);\n  const method = getRequestMethod(req);\n  const parts = decodeURI(path)\n    .split('?', 1)[0]\n    .replace(/^[\\s\\/]+|[\\s\\/]+$/g, '')\n    .split('/');\n\n  let matchingPathOptions = {};\n\n  endpoints.forEach((endpoint) => {\n    const endpointParts = endpoint\n      .split('/')\n      .filter(x => x)\n      .map(part => (part.slice(0, 1) === ':' ? '*' : part));\n    const match = endpointParts.length === parts.length\n      && endpointParts.every((part, i) => {\n        if (part === '*') {\n          return true;\n        }\n        return part === parts[i];\n      })\n      && !!options[endpoint][method];\n\n    if (match) {\n      matchingPathOptions = options[endpoint][method].options;\n    }\n  });\n\n  return matchingPathOptions;\n};\n\nexport const setIsAPI = () => {\n  storeOnFiber('isAPI', true);\n};\n\n// Can be used to determine if server-side code is being run from an API call\nexport const isAPI = () => !!getFromFiber('isAPI');\n\nexport const setAPIUser = (user) => {\n  storeOnFiber('APIUser', user);\n};\n\nexport const getAPIUser = () => getFromFiber('APIUser');\n","import bodyParser from 'body-parser';\nimport moment from 'moment';\nimport multipart from 'connect-multiparty';\n\nimport SlackService from '../../slack/server/SlackService';\nimport {\n  REST_API_ERRORS,\n  BODY_SIZE_LIMIT,\n  FILE_UPLOAD_DIR,\n} from './restApiConstants';\nimport UserService from '../../users/server/UserService';\nimport {\n  getRequestPath,\n  getHeader,\n  getRequestMethod,\n  getErrorObject,\n  getPublicKey,\n  verifySignature,\n  getSignature,\n  logRequest,\n  trackRequest,\n  getMatchingPathOptions,\n} from './helpers';\nimport { nonceExists, addNonce, NONCE_TTL } from './noncesHandler';\n\nconst bodyParserJsonMiddleware = () =>\n  bodyParser.json({ limit: BODY_SIZE_LIMIT });\n\nconst bodyParserUrlEncodedMiddleware = () =>\n  bodyParser.urlencoded({\n    extended: false,\n    limit: BODY_SIZE_LIMIT,\n  });\n\n// Handles replay attacks\nconst replayHandlerMiddleware = options => (req, res, next) => {\n  if (req.isMultipart) {\n    return next();\n  }\n  const timestamp = getHeader(req, 'x-epotek-timestamp');\n  const nonce = getHeader(req, 'x-epotek-nonce');\n\n  if (!timestamp || !nonce) {\n    return next(REST_API_ERRORS.REPLAY_ATTACK_ATTEMPT);\n  }\n\n  const now = moment().unix();\n\n  // This is an old request\n  if (timestamp < now - NONCE_TTL) {\n    return next(REST_API_ERRORS.REPLAY_ATTACK_ATTEMPT);\n  }\n  if (nonceExists(nonce)) {\n    return next(REST_API_ERRORS.REPLAY_ATTACK_ATTEMPT);\n  }\n\n  addNonce(nonce);\n\n  next();\n};\n\n// Filters out badly formatted requests, or ones missing basic headers\nconst filterMiddleware = options => (req, res, next) => {\n  const endpointOptions = getMatchingPathOptions(req, options);\n\n  const supportedContentType = endpointOptions.multipart\n    ? 'multipart/form-data'\n    : 'application/json';\n  const contentType = getHeader(req, 'content-type');\n  const isMultipart = contentType.includes('multipart/form-data');\n\n  if (!contentType || !contentType.includes(supportedContentType)) {\n    return next(REST_API_ERRORS.WRONG_CONTENT_TYPE(\n      contentType.split(';')[0],\n      supportedContentType,\n    ));\n  }\n\n  if (isMultipart) {\n    req.isMultipart = true;\n  }\n\n  next();\n};\n\n// Gets the public key from the request, fetches the user and adds it to the request\nconst authMiddleware = options => (req, res, next) => {\n  const publicKey = getPublicKey(req);\n  const signature = getSignature(req);\n\n  if (!publicKey || !signature) {\n    return next(REST_API_ERRORS.WRONG_AUTHORIZATION_TYPE);\n  }\n\n  const user = UserService.fetchOne({\n    $filters: {\n      'apiPublicKey.publicKey': publicKey,\n    },\n    emails: 1,\n    firstName: 1,\n    lastName: 1,\n    phoneNumbers: 1,\n  });\n\n  if (!user) {\n    return next(REST_API_ERRORS.AUTHORIZATION_FAILED('No user found with this public key, or maybe it has a typo ?'));\n  }\n\n  req.publicKey = publicKey;\n  req.signature = signature;\n\n  const verifiedSignature = verifySignature(req);\n\n  if (!verifiedSignature.verified) {\n    return next(REST_API_ERRORS.AUTHORIZATION_FAILED({\n      expectedObjectToSign: verifiedSignature.toVerify,\n    }));\n  }\n\n  req.user = user;\n\n  next();\n};\n\n// Handles all errors, should be added as the very last middleware\nconst errorMiddleware = options => (error, req, res, next) => {\n  const { info } = error;\n  const { status, errorName, message } = getErrorObject(error, res);\n  const { user = {}, body = {}, params = {}, query = {}, headers = {} } = req;\n\n  SlackService.sendError({\n    error,\n    additionalData: [\n      Object.keys(body).length > 0 && { body },\n      Object.keys(params).length > 0 && { params },\n      Object.keys(query).length > 0 && { query },\n      Object.keys(headers).length > 0 && { headers },\n    ].filter(x => x),\n    userId: user._id,\n    url: getRequestPath(req),\n  });\n\n  logRequest({ req, result: JSON.stringify({ status, errorName, message }) });\n  if (Object.keys(user) > 0) {\n    trackRequest({\n      req,\n      result: JSON.stringify({ status, errorName, message }),\n    });\n  }\n\n  res.writeHead(status);\n  res.write(JSON.stringify({ status, errorName, message, info }));\n  res.end();\n};\n\n// If no endpoint has sent a response, this should send back a 404\nconst unknownEndpointMiddleware = options => (req, res, next) => {\n  next(REST_API_ERRORS.UNKNOWN_ENDPOINT({\n    path: getRequestPath(req),\n    method: getRequestMethod(req),\n  }));\n};\n\nconst multipartMiddleware = options => (req, res, next) => {\n  const middleware = multipart({ uploadDir: FILE_UPLOAD_DIR });\n  const { isMultipart } = req;\n\n  return isMultipart ? middleware(req, res, next) : next();\n};\n\nexport const preMiddlewares = [\n  filterMiddleware,\n  multipartMiddleware,\n  bodyParserJsonMiddleware,\n  bodyParserUrlEncodedMiddleware,\n  authMiddleware,\n  replayHandlerMiddleware,\n];\nexport const postMiddlewares = [unknownEndpointMiddleware, errorMiddleware];\n","import moment from 'moment';\n\nexport const NONCE_TTL = 30;\nlet nonces = {\n  testNonce: 1, // Used in tests\n};\n\nexport const deleteNonce = (nonce) => {\n  nonces = Object.keys(nonces).reduce((newNonces, key) => {\n    if (key !== nonce) {\n      return { ...newNonces, [key]: nonces[key] };\n    }\n    return newNonces;\n  }, {});\n};\n\nexport const nonceExists = (nonce) => {\n  const now = moment().unix();\n\n  // First delete all old nonces\n  Object.keys(nonces).forEach((key) => {\n    if (now - nonces[key] > NONCE_TTL) {\n      deleteNonce(key);\n    }\n  });\n\n  return nonces[nonce] !== undefined;\n};\n\nexport const addNonce = (nonce) => {\n  const now = moment().unix();\n  nonces[nonce] = now;\n};\n","import os from 'os';\n\nexport const HTTP_STATUS_CODES = {\n  OK: 200,\n  BAD_REQUEST: 400,\n  FORBIDDEN: 403,\n  NOT_FOUND: 404,\n  CONFLICT: 409,\n  SERVER_ERROR: 500,\n};\n\nexport const BODY_SIZE_LIMIT = '50mb';\n\nexport const REST_API_ERRORS = {\n  WRONG_CONTENT_TYPE: (contentType, supportedContentType) => ({\n    status: HTTP_STATUS_CODES.BAD_REQUEST,\n    message: `Request content type must be ${supportedContentType}. Provided: ${contentType}`,\n    errorName: 'WRONG_CONTENT_TYPE',\n  }),\n  WRONG_AUTHORIZATION_TYPE: {\n    status: HTTP_STATUS_CODES.BAD_REQUEST,\n    errorName: 'WRONG_AUTHORIZATION_TYPE',\n    message: \"Authorization must be of type 'EPOTEK PublicKey:Signature'\",\n  },\n  AUTHORIZATION_FAILED: info => ({\n    status: HTTP_STATUS_CODES.FORBIDDEN,\n    errorName: 'AUTHORIZATION_FAILED',\n    message: 'Wrong public key or signature.',\n    info,\n  }),\n  UNKNOWN_ENDPOINT: ({ path, method }) => ({\n    status: HTTP_STATUS_CODES.NOT_FOUND,\n    errorName: 'UNKNOWN_ENDPOINT',\n    message: `The endpoint ${method} ${path} is not valid`,\n  }),\n  REPLAY_ATTACK_ATTEMPT: {\n    status: HTTP_STATUS_CODES.FORBIDDEN,\n    errorName: 'REPLAY_ATTACK_ATTEMPT',\n    message:\n      'A replay attack has been detected. Please use a correct timestamp and a different nonce.',\n  },\n};\n\nexport const OS_TMP_DIR = os.tmpdir();\nexport const FILE_UPLOAD_DIR = `${OS_TMP_DIR}/files`;\n","// @flow\nimport React from 'react';\n\ntype PromotionLogosProps = {\n  logoUrls: Array,\n};\n\n// This component expects to be put inside a tbody:\n\n/* <table\n    align=\"left\"\n    border=\"0\"\n    cellPadding=\"0\"\n    cellSpacing=\"0\"\n    style=\"max-width:100%; min-width:100%;\"\n    width=\"100%\"\n    className=\"mcnTextContentContainer\"\n  >\n    <tbody mc:edit=\"logos\" />\n  </table>; */\n\nconst PromotionLogos = ({ logoUrls }: PromotionLogosProps) => (\n  <>\n    {logoUrls.map((url, index) => (\n      <tr key={url}>\n        <td align=\"center\">\n          <img\n            style={{ maxWidth: 150, maxHeight: 50, marginBottom: 16 }}\n            src={url}\n            alt={`Logo promotion${index + 1}`}\n          />\n        </td>\n      </tr>\n    ))}\n  </>\n);\n\nexport default PromotionLogos;\n","import { Meteor } from 'meteor/meteor';\n\nimport UserService from '../../users/server/UserService';\nimport emailConfigs from './emailConfigs';\nimport { getEmailContent, getEmailPart } from './emailHelpers';\nimport {\n  sendMandrillTemplate,\n  getMandrillTemplate,\n  getSimpleMandrillTemplate,\n  renderMandrillTemplate,\n} from './mandrill';\nimport { FROM_NAME, FROM_EMAIL } from '../emailConstants';\n\nexport const isEmailTestEnv = Meteor.isTest || Meteor.isAppTest;\nexport const skipEmails = (Meteor.isDevelopment || Meteor.isDevEnvironment) && !isEmailTestEnv;\n// export const skipEmails = false;\n\nclass EmailService {\n  sendEmail = ({ emailId, address, name, params }) => {\n    const templateOptions = this.createTemplateOptions({\n      emailId,\n      address,\n      name,\n      params,\n    });\n    const template = getMandrillTemplate(templateOptions);\n    return sendMandrillTemplate(template).then((response) => {\n      this.emailLogger({ emailId, address, template, response });\n    });\n  };\n\n  sendEmailToUser = ({ emailId, userId, params }) => {\n    const { email, name } = UserService.fetchOne({\n      $filters: { _id: userId },\n      email: 1,\n      name: 1,\n    });\n    this.sendEmail({ emailId, address: email, name, params });\n  };\n\n  getEmailConfig = emailId => emailConfigs[emailId];\n\n  createTemplateOptions = ({ emailId, address, name, params }) => {\n    const emailConfig = this.getEmailConfig(emailId);\n    const {\n      template: { mandrillId: templateName },\n      createIntlValues,\n      ...otherOptions\n    } = emailConfig;\n\n    const intlValues = createIntlValues(params);\n    const emailContent = getEmailContent(emailId, intlValues);\n\n    // Make sure you call `createOverrides` from emailConfig, to preserve `this`\n    // See: https://github.com/Microsoft/vscode/issues/43930\n    const overrides = emailConfig.createOverrides(params, emailContent);\n\n    return {\n      templateName,\n      recipientAddress: address,\n      recipientName: name,\n      senderAddress: FROM_EMAIL,\n      senderName: FROM_NAME,\n      subject: emailContent.subject,\n      sendAt: undefined,\n      ...overrides,\n      ...otherOptions,\n    };\n  };\n\n  getAccountsTemplate = (emailId, params = {}) => {\n    const templateOptions = this.createTemplateOptions({ emailId, params });\n    return getSimpleMandrillTemplate(templateOptions);\n  };\n\n  getEmailPart = (emailId, part) => getEmailPart({ emailId, part });\n\n  renderTemplate = (templateOptions, emailId) => {\n    let result;\n    this.emailLogger({ emailId, template: templateOptions });\n\n    try {\n      result = renderMandrillTemplate(templateOptions);\n    } catch (error) {\n      throw new Meteor.Error(\n        'MANDRILL_ERROR',\n        `Error while rendering mandrill template for ${emailId}: ${error.reason\n          || error.message\n          || error}`,\n      );\n    }\n\n    return result;\n  };\n\n  emailLogger = ({ emailId, address, template, response }) => {\n    if (isEmailTestEnv) {\n      // Store all sent emails in the DB, to be asserted in tests\n      return Meteor.call('storeTestEmail', {\n        date: Date.now(),\n        emailId,\n        address,\n        template,\n        response,\n      });\n    }\n    if (skipEmails) {\n      if (address) {\n        console.log(`EmailService dev: Would've sent ${emailId} to ${address} with this template:`);\n      } else {\n        console.log(`EmailService dev: Would've sent ${emailId} with this template:`);\n      }\n      console.log(JSON.stringify(template, null, 2));\n    }\n  };\n}\n\nexport default new EmailService();\n","import { Accounts } from 'meteor/accounts-base';\n\nimport { FROM_DEFAULT, EMAIL_IDS, EMAIL_PARTS } from '../emailConstants';\nimport EmailService from './EmailService';\n\n// Meteor default emails\n// https://themeteorchef.com/tutorials/sign-up-with-email-verification\nAccounts.emailTemplates.siteName = 'e-Potek';\nAccounts.emailTemplates.from = FROM_DEFAULT;\n\nexport const createAccountsEmailConfig = emailId => ({\n  subject: () => EmailService.getEmailPart(emailId, EMAIL_PARTS.SUBJECT),\n  html(user, url) {\n    // TODO: Make sure this doesn't block\n    const template = EmailService.getAccountsTemplate(emailId, { user, url });\n    const result = EmailService.renderTemplate(template, emailId);\n    return result.data.html;\n  },\n});\n\nAccounts.emailTemplates.verifyEmail = createAccountsEmailConfig(EMAIL_IDS.VERIFY_EMAIL);\nAccounts.emailTemplates.resetPassword = createAccountsEmailConfig(EMAIL_IDS.RESET_PASSWORD);\nAccounts.emailTemplates.enrollAccount = createAccountsEmailConfig(EMAIL_IDS.ENROLL_ACCOUNT);\n","import ReactDOMServer from 'react-dom/server';\nimport moment from 'moment';\nimport { Meteor } from 'meteor/meteor';\n\nimport Intl from 'core/utils/server/intl';\nimport {\n  EMAIL_TEMPLATES,\n  EMAIL_IDS,\n  CTA_URL_DEFAULT,\n  FOOTER_TYPES,\n  EPOTEK_PHONE,\n} from '../emailConstants';\nimport {\n  getAccountsUrl,\n  notificationTemplateDefaultOverride,\n  notificationAndCtaTemplateDefaultOverride,\n} from './emailHelpers';\nimport PromotionLogos from './components/PromotionLogos';\nimport LoanChecklistEmail from '../../../components/LoanChecklist/LoanChecklistEmail/LoanChecklistEmail';\nimport styles from '../../../components/LoanChecklist/LoanChecklistEmail/styles';\n\nconst emailConfigs = {};\n\nconst emailDefaults = {\n  allowUnsubscribe: false,\n  footerType: FOOTER_TYPES.USER,\n  createIntlValues: params => ({ variables: [], ...params }),\n};\n\n/**\n * addEmailConfig - A function that creates a config for a given emailId\n *\n * @param {String} emailId A unique id representing the email, from EMAIL_IDS\n * @param {Object} config A config object that can have the following keys:\n * {Object} template A template object from EMAIL_TEMPLATES\n * {Boolean} allowUnsubscribe Defines whether the email will be rendered with\n * a footer that allows the user to unsubscribe to notifications.\n * default is `false`\n * {Function} createOverrides A function that gets the params and\n * returns an object with overrides for the email template\n * {Function} createIntlValues A function that gets the params and\n * returns an object with intl values that need to be injected inside of the\n * i18n strings\n */\nconst addEmailConfig = (emailId, config) => {\n  if (config.template === EMAIL_TEMPLATES.NOTIFICATION) {\n    emailConfigs[emailId] = {\n      createOverrides: notificationTemplateDefaultOverride,\n      ...emailDefaults,\n      ...config,\n    };\n  } else if (config.template === EMAIL_TEMPLATES.NOTIFICATION_AND_CTA) {\n    emailConfigs[emailId] = {\n      createOverrides: notificationAndCtaTemplateDefaultOverride,\n      ...emailDefaults,\n      ...config,\n    };\n  } else {\n    emailConfigs[emailId] = { ...emailDefaults, ...config };\n  }\n};\n\naddEmailConfig(EMAIL_IDS.VERIFY_EMAIL, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n  createOverrides({ user, url }, { title, body, cta }) {\n    const { variables } = this.template;\n    const verifyUrl = getAccountsUrl('verify-email')(user, url);\n\n    return {\n      variables: [\n        { name: variables.TITLE, content: title },\n        { name: variables.BODY, content: body },\n        { name: variables.CTA, content: cta },\n        { name: variables.CTA_URL, content: verifyUrl },\n      ],\n    };\n  },\n});\n\naddEmailConfig(EMAIL_IDS.RESET_PASSWORD, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n  createOverrides({ user, url }, { title, body, cta }) {\n    const { variables } = this.template;\n    const resetPasswordUrl = getAccountsUrl('reset-password')(user, url);\n\n    return {\n      variables: [\n        { name: variables.TITLE, content: title },\n        { name: variables.BODY, content: body },\n        { name: variables.CTA, content: cta },\n        {\n          name: variables.CTA_URL,\n          content: resetPasswordUrl || CTA_URL_DEFAULT,\n        },\n      ],\n    };\n  },\n});\n\naddEmailConfig(EMAIL_IDS.ENROLL_ACCOUNT, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n  createOverrides({ user, url }, { title, body, cta }) {\n    const { variables } = this.template;\n    const enrollUrl = getAccountsUrl('enroll-account')(user, url);\n\n    return {\n      variables: [\n        { name: variables.TITLE, content: title },\n        { name: variables.BODY, content: body },\n        { name: variables.CTA, content: cta },\n        { name: variables.CTA_URL, content: enrollUrl || CTA_URL_DEFAULT },\n      ],\n    };\n  },\n});\n\naddEmailConfig(EMAIL_IDS.VERIFICATION_REQUESTED, {\n  template: EMAIL_TEMPLATES.NOTIFICATION,\n});\n\naddEmailConfig(EMAIL_IDS.VERIFICATION_ERROR, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n});\n\naddEmailConfig(EMAIL_IDS.VERIFICATION_PASSED, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n});\n\nconst getFirstName = string => string.trim().split(' ')[0];\n\naddEmailConfig(EMAIL_IDS.CONTACT_US, {\n  template: EMAIL_TEMPLATES.NOTIFICATION,\n  footerType: FOOTER_TYPES.VISITOR,\n  createIntlValues: params => ({\n    ...params,\n    // Only show first names to clients\n    name: getFirstName(params.name),\n    // params.details check is required because details is optional\n    //  and it breaks react-intl if not provided\n    details: params.details || '',\n  }),\n});\n\naddEmailConfig(EMAIL_IDS.CONTACT_US_ADMIN, {\n  template: EMAIL_TEMPLATES.NOTIFICATION,\n  footerType: FOOTER_TYPES.VISITOR,\n  createIntlValues: params => ({\n    ...params,\n    details: params.details || 'Pas de message',\n  }),\n});\n\naddEmailConfig(EMAIL_IDS.INVITE_USER_TO_PROMOTION, {\n  template: EMAIL_TEMPLATES.PROMOTION_INVITATION,\n  createOverrides(\n    { coverImageUrl, logoUrls = [], ctaUrl },\n    { title, body, cta },\n  ) {\n    const { variables } = this.template;\n\n    return {\n      variables: [\n        { name: variables.TITLE, content: title },\n        { name: variables.BODY, content: body },\n        { name: variables.CTA, content: cta },\n        { name: variables.CTA_URL, content: ctaUrl || CTA_URL_DEFAULT },\n        { name: variables.COVER_IMAGE_URL, content: coverImageUrl },\n      ],\n      senderName: 'e-Potek',\n      templateContent: [\n        {\n          name: 'logos',\n          content: ReactDOMServer.renderToStaticMarkup(PromotionLogos({ logoUrls })),\n        },\n      ],\n    };\n  },\n  createIntlValues: params => ({\n    ...params,\n    promotionName: params.promotion.name,\n    phoneNumber:\n      params.promotion.contacts.length\n      && params.promotion.contacts[0].phoneNumber,\n    name: params.promotion.contacts.length && params.promotion.contacts[0].name,\n    epotekNumber: EPOTEK_PHONE,\n    assignedEmployeeName:\n      (params.promotion.assignedEmployee\n        && params.promotion.assignedEmployee.name)\n      || 'Yannis Eggert',\n    assignedEmployeeFirstName:\n      (params.promotion.assignedEmployee\n        && params.promotion.assignedEmployee.firstName)\n      || 'Yannis',\n    assignedEmployeePhone:\n      (params.promotion.assignedEmployee\n        && params.promotion.assignedEmployee.phoneNumbers[0])\n      || EPOTEK_PHONE,\n    invitedBy: params.invitedBy || 'e-Potek',\n  }),\n});\n\naddEmailConfig(EMAIL_IDS.SEND_FEEDBACK_TO_LENDER, {\n  template: EMAIL_TEMPLATES.SIMPLE,\n  createOverrides(\n    {\n      assigneeName = 'e-Potek',\n      assigneeAddress = 'financements@e-potek.ch',\n      feedback,\n    },\n    { title },\n  ) {\n    const { variables } = this.template;\n\n    return {\n      variables: [\n        { name: variables.TITLE, content: title },\n        { name: variables.BODY, content: feedback },\n      ],\n      senderName: assigneeName,\n      senderAddress: assigneeAddress,\n      bccAddress: assigneeAddress,\n    };\n  },\n});\n\n// Required params:\n// proName\n// address\n// ctaUrl\naddEmailConfig(EMAIL_IDS.INVITE_USER_TO_PROPERTY, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n  createOverrides({ ctaUrl }, { title, body, cta }) {\n    const { variables } = this.template;\n\n    return {\n      variables: [\n        { name: variables.TITLE, content: title },\n        { name: variables.BODY, content: body },\n        { name: variables.CTA, content: cta },\n        { name: variables.CTA_URL, content: ctaUrl },\n      ],\n    };\n  },\n});\n\n// Required params\n// proName\naddEmailConfig(EMAIL_IDS.REFER_USER, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n  createOverrides({ ctaUrl, ...rest }, { title, body, cta, ...rest2 }) {\n    const { variables } = this.template;\n\n    return {\n      variables: [\n        { name: variables.TITLE, content: title },\n        { name: variables.BODY, content: body },\n        { name: variables.CTA, content: cta },\n        { name: variables.CTA_URL, content: ctaUrl },\n      ],\n    };\n  },\n});\n\naddEmailConfig(EMAIL_IDS.FIND_LENDER_NOTIFICATION, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n  createOverrides({ loanId }, { title, body, cta }) {\n    const { variables } = this.template;\n\n    return {\n      variables: [\n        { name: variables.TITLE, content: title },\n        { name: variables.BODY, content: body },\n        { name: variables.CTA, content: cta },\n        {\n          name: variables.CTA_URL,\n          content: `${CTA_URL_DEFAULT}/loans/${loanId}/financing`,\n        },\n      ],\n    };\n  },\n});\n\naddEmailConfig(EMAIL_IDS.CONFIRM_USER_INVITATION, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n});\n\naddEmailConfig(EMAIL_IDS.LOAN_CHECKLIST, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA_V2,\n  createOverrides(\n    {\n      loan,\n      customMessage = '',\n      assigneeName = 'e-Potek',\n      assigneeAddress = 'info@e-potek.ch',\n      ...rest\n    },\n    { title, cta, ...rest2 },\n  ) {\n    const { variables } = this.template;\n    const ctaUrl = `${Meteor.settings.public.subdomains.app}/loans/${loan._id}`;\n\n    return {\n      variables: [\n        { name: variables.TITLE, content: title },\n        { name: variables.BODY, content: customMessage },\n        { name: variables.CTA, content: cta },\n        { name: variables.CTA_URL, content: ctaUrl },\n        { name: variables.CSS, content: styles },\n      ],\n      templateContent: [\n        {\n          name: 'body-content-1',\n          content: ReactDOMServer.renderToStaticMarkup(LoanChecklistEmail({\n            loan,\n            intl: { formatMessage: Intl.formatMessage.bind(Intl) },\n          })),\n        },\n      ],\n      senderName: assigneeName,\n      senderAddress: assigneeAddress,\n      bccAddress: assigneeAddress,\n    };\n  },\n  createIntlValues: params => ({\n    ...params,\n    today: moment().format('DD MMM YYYY'),\n  }),\n});\n\nexport default emailConfigs;\n","import { Meteor } from 'meteor/meteor';\nimport { Roles } from 'meteor/alanning:roles';\n\nimport Intl from 'core/utils/server/intl';\nimport {\n  FROM_DEFAULT,\n  CTA_URL_DEFAULT,\n  EMAIL_I18N_NAMESPACE,\n  EMAIL_PARTS,\n} from '../emailConstants';\nimport { ROLES } from '../../constants';\n\nconst WWW_URL = Meteor.settings.public.subdomains.www;\nconst APP_URL = Meteor.settings.public.subdomains.app;\nconst ADMIN_URL = Meteor.settings.public.subdomains.admin;\nconst PRO_URL = Meteor.settings.public.subdomains.pro;\n\n/**\n * emailFooter - Returns the default email footer for all emails\n *\n * @param {boolean} [unsubscribe=true] Whether to show an unsubscribe line or not\n *\n * @return {type} a HTML string\n */\nexport const getEmailFooter = (footerType, allowUnsubscribe) =>\n  Intl.formatMessage({\n    id: `emails.${footerType}`,\n    values: {\n      url: `<a href=\"${WWW_URL}\" target=\"_blank\" style=\"color:inherit;\">e-potek.ch</a><br />`,\n      unsubscribe: allowUnsubscribe\n        ? `<a href=\"*|UNSUB|*\" style=\"color:inherit;\">${Intl.formatMessage({\n          id: 'emails.unsubscribe',\n        })}</a>`\n        : '',\n    },\n  });\n\nexport const getEmailPart = ({\n  emailId,\n  part,\n  intlValues = {},\n  intlFallback = '',\n}) =>\n  Intl.formatMessage({\n    id: `${EMAIL_I18N_NAMESPACE}.${emailId}.${part}`,\n    values: intlValues,\n    fallback: intlFallback,\n  });\n\n/**\n * getEmailContent - Returns all the fields for an email\n *\n * @param {String} emailId an id representing what email this is, example:\n * auctionEnded, verificationRequested\n *\n * @return {Object} contains all the fields\n */\nexport const getEmailContent = (emailId, intlValues) => {\n  const subject = getEmailPart({\n    emailId,\n    part: EMAIL_PARTS.SUBJECT,\n    intlValues,\n  });\n  const title = getEmailPart({ emailId, part: EMAIL_PARTS.TITLE, intlValues });\n  const body = getEmailPart({\n    emailId,\n    part: EMAIL_PARTS.BODY,\n    intlValues: {\n      verticalSpace: '<span><br/><br/></span>',\n      ...intlValues,\n    },\n  });\n  const cta = getEmailPart({\n    emailId,\n    part: EMAIL_PARTS.CTA,\n    intlValues,\n    intlFallback: CTA_URL_DEFAULT,\n  });\n  const customFrom = getEmailPart({\n    emailId,\n    part: EMAIL_PARTS.FROM,\n    intlValues,\n    intlFallback: FROM_DEFAULT,\n  });\n\n  return {\n    subject,\n    title,\n    body,\n    cta,\n    from: customFrom,\n  };\n};\n\nexport const getAccountsUrl = path => (user, url) => {\n  const userIsUser = Roles.userIsInRole(user, ROLES.USER);\n  const userIsPro = Roles.userIsInRole(user, ROLES.PRO);\n  const userIsAdmin = Roles.userIsInRole(user, ROLES.ADMIN)\n    || Roles.userIsInRole(user, ROLES.DEV);\n  const token = url.split(`/${path}/`)[1];\n\n  if (userIsUser) {\n    return `${APP_URL}/${path}/${token}`;\n  }\n  if (userIsPro) {\n    return `${PRO_URL}/${path}/${token}`;\n  }\n  if (userIsAdmin) {\n    // Admin does not have the enroll, verify, and reset-password pages\n    // Just send them to APP\n    return `${APP_URL}/${path}/${token}`;\n  }\n\n  return url;\n};\n\n/**\n * This is a default override function for the NOTIFICATION template\n *\n * @export\n * @param {Object} params The params passed by the method\n * @param {Object} { title, body } The strings extracted from i18n files\n * @returns a template override object\n */\nexport function notificationTemplateDefaultOverride(params, { title, body }) {\n  const { variables } = this.template;\n\n  return {\n    variables: [\n      { name: variables.TITLE, content: title },\n      { name: variables.BODY, content: body },\n    ],\n  };\n}\n\n/**\n * This is a default override function for the NOTIFICATION_AND_CTA template\n *\n * @export\n * @param {Object} params The params passed by the method\n * @param {Object} { title, body, cta } The strings extracted from i18n files\n * @returns a template override object\n */\nexport function notificationAndCtaTemplateDefaultOverride(\n  params,\n  { title, body, cta },\n) {\n  const { variables } = this.template;\n\n  return {\n    variables: [\n      { name: variables.TITLE, content: title },\n      { name: variables.BODY, content: body },\n      { name: variables.CTA, content: cta },\n      { name: variables.CTA_URL, content: CTA_URL_DEFAULT },\n    ],\n  };\n}\n","import UserService from 'core/api/users/server/UserService';\nimport ServerEventService from '../../events/server/ServerEventService';\nimport { requestLoanVerification, submitContactForm } from '../../methods';\nimport { Loans } from '../..';\nimport { EMAIL_IDS, INTERNAL_EMAIL } from '../emailConstants';\nimport { sendEmail, sendEmailToAddress } from '../methodDefinitions';\n\nServerEventService.addAfterMethodListener(\n  requestLoanVerification,\n  ({ context, params }) => {\n    context.unblock();\n    const { loanId } = params;\n    const { userId } = Loans.findOne(loanId);\n\n    return sendEmail.run({\n      emailId: EMAIL_IDS.VERIFICATION_REQUESTED,\n      userId,\n      params,\n    });\n  },\n);\n\nServerEventService.addAfterMethodListener(\n  submitContactForm,\n  ({ context, params }) => {\n    context.unblock();\n    return sendEmailToAddress.run({\n      emailId: EMAIL_IDS.CONTACT_US,\n      address: params.email,\n      params,\n    });\n  },\n);\n\nServerEventService.addAfterMethodListener(\n  submitContactForm,\n  ({ context, params }) => {\n    context.unblock();\n    return sendEmailToAddress.run({\n      emailId: EMAIL_IDS.CONTACT_US_ADMIN,\n      address: INTERNAL_EMAIL,\n      params,\n    });\n  },\n);\n\nServerEventService.addAfterMethodListener(\n  sendEmail,\n  ({ context, params: { emailId, params, userId } }) => {\n    context.unblock();\n    const emailsToWatch = [\n      EMAIL_IDS.INVITE_USER_TO_PROMOTION,\n      EMAIL_IDS.INVITE_USER_TO_PROPERTY,\n      EMAIL_IDS.REFER_USER,\n    ];\n\n    if (!emailsToWatch.includes(emailId)) {\n      return;\n    }\n\n    if (!params.proUserId) {\n      return;\n    }\n\n    const { name, email } = UserService.fetchOne({\n      $filters: { _id: userId },\n      name: 1,\n      email: 1,\n    });\n\n    return sendEmail.run({\n      emailId: EMAIL_IDS.CONFIRM_USER_INVITATION,\n      userId: params.proUserId,\n      params: { name, email },\n    });\n  },\n);\n","import './accountsEmails';\nimport './methods';\nimport { setupMandrill } from './mandrill';\n\nsetupMandrill();\n","import { Mandrill } from 'meteor/wylio:mandrill';\nimport { Meteor } from 'meteor/meteor';\n\nimport { logError } from 'core/api/methods/index';\nimport { getEmailFooter } from './emailHelpers';\nimport { isEmailTestEnv, skipEmails } from './EmailService';\n\nexport const setupMandrill = () => {\n  let key = '';\n  if (isEmailTestEnv) {\n    key = Meteor.settings.mandrill.MANDRILL_API_KEY_TEST;\n  } else {\n    key = Meteor.settings.mandrill.MANDRILL_API_KEY;\n  }\n\n  Mandrill.config({\n    username: Meteor.settings.mandrill.MANDRILL_LOGIN, // the email address you log into Mandrill with. Only used to set MAIL_URL.\n    key, // get your Mandrill key from https://mandrillapp.com/settings/index\n    port: 587, // defaults to 465 for SMTP over TLS\n    host: 'smtps.mandrillapp.com', // the SMTP host\n    // baseUrl: 'https://mandrillapp.com/api/1.0/'  // update this in case Mandrill changes its API endpoint URL or version\n  });\n};\n\n// Used for Meteor Accounts emails\nexport const getSimpleMandrillTemplate = ({\n  templateName,\n  footerType,\n  allowUnsubscribe,\n  variables,\n}) => ({\n  template_name: templateName,\n  template_content: [\n    { name: 'footer', content: getEmailFooter(footerType, allowUnsubscribe) },\n  ],\n  merge_vars: variables,\n});\n\n// Used for all other emails\nexport const getMandrillTemplate = ({\n  templateName,\n  footerType,\n  allowUnsubscribe,\n  variables,\n  recipientAddress,\n  recipientName,\n  senderAddress,\n  senderName,\n  subject,\n  sendAt,\n  templateContent = [],\n  replyTo,\n  bccAddress,\n}) => ({\n  template_name: templateName,\n  template_content: [\n    { name: 'footer', content: getEmailFooter(footerType, allowUnsubscribe) },\n    ...templateContent,\n  ],\n  message: {\n    from_email: senderAddress,\n    from_name: senderName,\n    subject,\n    to: [{ email: recipientAddress, name: recipientName }],\n    global_merge_vars: variables,\n    headers: { 'Reply-To': replyTo || senderAddress },\n    bcc_address: bccAddress,\n  },\n  send_at: sendAt ? sendAt.toISOString() : undefined,\n});\n\nexport const renderMandrillTemplate = mandrillTemplate =>\n  Mandrill.templates.render(mandrillTemplate);\n\nexport const sendMandrillTemplate = (mandrillTemplate) => {\n  if (skipEmails) {\n    return Promise.resolve();\n  }\n\n  return new Promise((resolve, reject) => {\n    Mandrill.messages.sendTemplate(mandrillTemplate, (error, result) => {\n      if (error) {\n        logError.run({\n          error: JSON.parse(JSON.stringify(error, Object.getOwnPropertyNames(error))),\n          additionalData: ['Mandrill error'],\n        });\n        reject(error);\n      }\n      resolve(result.data[0]);\n    });\n  });\n};\n\nconst getDate30DaysAgo = () => {\n  const date = new Date();\n  date.setDate(date.getDate() - 30);\n  const dateString = date.toISOString().split('T')[0];\n  return dateString;\n};\n\nexport const getEmailsForAddress = email =>\n  new Promise((resolve, reject) =>\n    Mandrill.messages.search(\n      { query: `email:${email}`, date_from: getDate30DaysAgo() },\n      (error, result) => {\n        if (error) {\n          logError.run({\n            error: JSON.parse(JSON.stringify(error, Object.getOwnPropertyNames(error))),\n            additionalData: ['Mandrill error'],\n          });\n          resolve(error);\n        } else if (result.statusCode !== 200) {\n          resolve(result);\n        }\n        resolve(result.data);\n      },\n    ));\n","import { Meteor } from 'meteor/meteor';\n\nimport { sendEmail, sendEmailToAddress } from '../methodDefinitions';\nimport EmailService from './EmailService';\n\nsendEmail.setHandler((context, params) => {\n  context.unblock();\n  try {\n    return EmailService.sendEmailToUser(params);\n  } catch (error) {\n    console.log(`EmailService error for ${params.emailId}`, error);\n    throw new Meteor.Error(error);\n  }\n});\n\nsendEmailToAddress.setHandler((context, params) => {\n  context.unblock();\n  try {\n    return EmailService.sendEmail(params);\n  } catch (error) {\n    console.log(`EmailService error for ${params.emailId}`, error);\n    throw new Meteor.Error(error);\n  }\n});\n","import { Meteor } from 'meteor/meteor';\n\nexport const FROM_NAME = 'e-Potek';\nexport const FROM_EMAIL = 'info@e-potek.ch';\nexport const FROM_DEFAULT = `${FROM_NAME} <${FROM_EMAIL}>`;\nexport const CTA_URL_DEFAULT = Meteor.settings.public.subdomains.app;\nexport const INTERNAL_EMAIL = Meteor.settings.public.environment === 'production'\n  ? FROM_EMAIL\n  : 'dev@e-potek.ch';\nexport const EPOTEK_PHONE = '+41 22 566 01 10';\n\nexport const EMAIL_I18N_NAMESPACE = 'emails';\n\nexport const EMAIL_PARTS = {\n  SUBJECT: 'SUBJECT',\n  TITLE: 'TITLE',\n  BODY: 'BODY',\n  CTA: 'CTA',\n  FROM: 'FROM',\n};\n\nexport const FOOTER_TYPES = {\n  USER: 'footerUser',\n  VISITOR: 'footerVisitor',\n};\n\nexport const EMAIL_TEMPLATES = {\n  NOTIFICATION: {\n    name: 'NOTIFICATION',\n    mandrillId: 'notification',\n    variables: {\n      TITLE: 'TITLE',\n      BODY: 'BODY',\n    },\n  },\n  NOTIFICATION_AND_CTA: {\n    name: 'NOTIFICATION_AND_CTA',\n    mandrillId: 'notification-cta',\n    variables: {\n      TITLE: 'TITLE',\n      BODY: 'BODY',\n      CTA: 'CTA',\n      CTA_URL: 'CTA_URL',\n    },\n  },\n  PROMOTION_INVITATION: {\n    name: 'PROMOTION_INVITATION',\n    mandrillId: 'promotion-invitation',\n    variables: {\n      TITLE: 'TITLE',\n      MARKETING_BLURB: 'MARKETING_BLURB',\n      BODY: 'BODY',\n      CTA: 'CTA',\n      CTA_URL: 'CTA_URL',\n      COVER_IMAGE_URL: 'COVER_IMAGE_URL',\n      LOGO_URL_1: 'LOGO_URL_1',\n      LOGO_URL_2: 'LOGO_URL_2',\n      LOGO_URL_3: 'LOGO_URL_3',\n    },\n  },\n  SIMPLE: {\n    name: 'SIMPLE',\n    mandrillId: 'simple',\n    variables: {\n      TITLE: 'TITLE',\n      BODY: 'BODY',\n    },\n  },\n  NOTIFICATION_AND_CTA_V2: {\n    name: 'NOTIFICATION_AND_CTA_V2',\n    mandrillId: 'notification-cta-v2',\n    variables: {\n      TITLE: 'TITLE',\n      BODY: 'BODY',\n      CTA: 'CTA',\n      CTA_URL: 'CTA_URL',\n      CSS: 'CSS',\n    },\n  },\n};\n\nexport const EMAIL_IDS = {\n  CONTACT_US: 'CONTACT_US',\n  CONTACT_US_ADMIN: 'CONTACT_US_ADMIN',\n  VERIFY_EMAIL: 'VERIFY_EMAIL',\n  RESET_PASSWORD: 'RESET_PASSWORD',\n  ENROLL_ACCOUNT: 'ENROLL_ACCOUNT',\n  VERIFICATION_REQUESTED: 'VERIFICATION_REQUESTED',\n  VERIFICATION_ERROR: 'VERIFICATION_ERROR',\n  VERIFICATION_PASSED: 'VERIFICATION_PASSED',\n  INVITE_USER_TO_PROMOTION: 'INVITE_USER_TO_PROMOTION',\n  SEND_FEEDBACK_TO_LENDER: 'SEND_FEEDBACK_TO_LENDER',\n  INVITE_USER_TO_PROPERTY: 'INVITE_USER_TO_PROPERTY',\n  REFER_USER: 'REFER_USER',\n  FIND_LENDER_NOTIFICATION: 'FIND_LENDER_NOTIFICATION',\n  CONFIRM_USER_INVITATION: 'CONFIRM_USER_INVITATION',\n  LOAN_CHECKLIST: 'LOAN_CHECKLIST',\n};\n","import { Match } from 'meteor/check';\n\nimport { Method } from '../methods/methods';\n\nexport const sendEmail = new Method({\n  name: 'sendEmail',\n  params: {\n    emailId: String,\n    params: Object,\n    userId: String,\n  },\n});\n\nexport const sendEmailToAddress = new Method({\n  name: 'sendEmailToAddress',\n  params: {\n    address: String,\n    emailId: String,\n    name: Match.Maybe(String),\n    params: Object,\n  },\n});\n","import CollectionService from '../../helpers/CollectionService';\nimport Activities from '../activities';\nimport { ACTIVITY_TYPES, ACTIVITY_SECONDARY_TYPES } from '../activityConstants';\n\nclass ActivityService extends CollectionService {\n  constructor() {\n    super(Activities);\n  }\n\n  addServerActivity(activity) {\n    return this.insert({ ...activity, type: ACTIVITY_TYPES.SERVER });\n  }\n\n  addCreatedAtActivity({ createdAt, ...rest }) {\n    return this.addServerActivity({\n      secondaryType: ACTIVITY_SECONDARY_TYPES.CREATED,\n      date: createdAt,\n      ...rest,\n    });\n  }\n}\n\nexport default new ActivityService();\n","import ServerEventService from '../../events/server/ServerEventService';\nimport { removeLoanFromPromotion } from '../../methods';\nimport { ACTIVITY_SECONDARY_TYPES } from '../activityConstants';\nimport UserService from '../../users/server/UserService';\nimport PromotionService from '../../promotions/server/PromotionService';\nimport ActivityService from './ActivityService';\n\nServerEventService.addAfterMethodListener(\n  removeLoanFromPromotion,\n  ({ params: { loanId, promotionId }, context: { userId } }) => {\n    const { name } = PromotionService.fetchOne({\n      $filters: { _id: promotionId },\n      name: 1,\n    });\n    const { name: userName } = UserService.fetchOne({\n      $filters: { _id: userId },\n      name: 1,\n    }) || {};\n\n    ActivityService.addServerActivity({\n      secondaryType: ACTIVITY_SECONDARY_TYPES.REMOVE_LOAN_FROM_PROMOTION,\n      loanLink: { _id: loanId },\n      title: `Enlevé de la promotion \"${name}\"`,\n      description: userName ? `Par ${userName}` : '',\n      createdBy: userId,\n    });\n  },\n);\n","import { Match } from 'meteor/check';\n\nimport { exposeQuery } from '../../queries/queryHelpers';\nimport { adminActivities } from '../queries';\n\nexposeQuery({\n  query: adminActivities,\n  overrides: {\n    embody: (body) => {\n      body.$filter = ({ filters, params: { _id, loanId, type } }) => {\n        if (_id) {\n          filters._id = _id;\n        }\n\n        if (loanId) {\n          filters['loanLink._id'] = loanId;\n        }\n\n        if (type) {\n          filters.type = type;\n        }\n      };\n    },\n    validateParams: {\n      _id: Match.Maybe(String),\n      loanId: Match.Maybe(String),\n      type: Match.Maybe(Match.OneOf(Object, String)),\n    },\n  },\n});\n","import Activities from '../activities';\nimport NotificationService from '../../notifications/server/NotificationService';\n\nActivities.after.update(\n  function (userId, doc, fieldNames) {\n    if (fieldNames.includes('date')) {\n      const { date: newDate } = doc;\n      const { date: oldDate } = this.previous;\n\n      if ((newDate && newDate.getTime()) !== (oldDate && oldDate.getTime())) {\n        NotificationService.remove({ 'activityLink._id': doc._id });\n      }\n    }\n  },\n  { fetchPrevious: true },\n);\n","import { Meteor } from 'meteor/meteor';\n\nimport SecurityService from '../../security';\nimport {\n  activityInsert,\n  activityUpdate,\n  activityRemove,\n} from '../methodDefinitions';\nimport ActivityService from './ActivityService';\nimport { ACTIVITY_TYPES } from '../activityConstants';\n\nconst allowModification = (activityId) => {\n  const { type } = ActivityService.fetchOne({\n    $filters: { _id: activityId },\n    type: 1,\n  });\n\n  return type !== ACTIVITY_TYPES.SERVER;\n};\n\nactivityInsert.setHandler(({ userId }, { object }) => {\n  SecurityService.checkUserIsAdmin(userId);\n  return ActivityService.insert(object);\n});\n\nactivityUpdate.setHandler(({ userId }, { activityId, object }) => {\n  SecurityService.checkUserIsAdmin(userId);\n  if (!allowModification(activityId)) {\n    throw new Meteor.Error(\"Peut pas changer l'activité générée automatiquement\");\n  }\n  return ActivityService._update({ id: activityId, object });\n});\n\nactivityRemove.setHandler(({ userId }, { activityId }) => {\n  SecurityService.checkUserIsAdmin(userId);\n  if (!allowModification(activityId)) {\n    throw new Meteor.Error(\"Peut pas changer l'activité générée automatiquement\");\n  }\n  return ActivityService.remove(activityId);\n});\n","import { Mongo } from 'meteor/mongo';\n\nimport SimpleSchema from 'simpl-schema';\n\nimport { createdAt, updatedAt } from '../helpers/sharedSchemas';\nimport {\n  ACTIVITY_TYPES,\n  ACTIVITY_SECONDARY_TYPES,\n  ACTIVITIES_COLLECTION,\n} from './activityConstants';\n\nconst Activities = new Mongo.Collection(ACTIVITIES_COLLECTION);\n\nconst ActivitySchema = new SimpleSchema({\n  createdAt,\n  updatedAt,\n  createdBy: {\n    type: String,\n    optional: true,\n    autoValue() {\n      if (this.isInsert) {\n        return this.value || this.userId;\n      }\n      this.unset();\n    },\n  },\n  title: String,\n  description: { type: String, optional: true },\n  type: { type: String, allowedValues: Object.values(ACTIVITY_TYPES) },\n  secondaryType: {\n    type: String,\n    optional: true,\n    allowedValues: Object.values(ACTIVITY_SECONDARY_TYPES),\n  },\n  date: {\n    type: Date,\n    autoValue() {\n      if (this.isInsert) {\n        return this.value || new Date();\n      }\n    },\n  },\n  loanLink: { type: Object, optional: true },\n  'loanLink._id': { type: String, optional: true },\n  shouldNotify: { type: Boolean, optional: true },\n});\n\nActivities.attachSchema(ActivitySchema);\n\nexport default Activities;\n","export const ACTIVITIES_COLLECTION = 'activities';\n\nexport const ACTIVITY_QUERIES = {\n  ADMIN_ACTIVITIES: 'ADMIN_ACTIVITIES',\n};\n\nexport const ACTIVITY_TYPES = {\n  EMAIL: 'EMAIL',\n  EVENT: 'EVENT',\n  PHONE: 'PHONE',\n  SERVER: 'SERVER',\n  OTHER: 'OTHER',\n};\n\nexport const ACTIVITY_SECONDARY_TYPES = {\n  CREATED: 'CREATED',\n  REMOVE_LOAN_FROM_PROMOTION: 'REMOVE_LOAN_FROM_PROMOTION',\n};\n","export { default } from './activities';\n","import Notifications from '../notifications';\nimport Loans from '../loans';\nimport Activities from './activities';\n\nActivities.addLinks({\n  notifications: {\n    collection: Notifications,\n    inversedBy: 'activity',\n    autoremove: true,\n  },\n  loan: {\n    collection: Loans,\n    field: 'loanLink',\n    metadata: true,\n  },\n});\n","import { Method } from '../methods/methods';\n\nexport const activityInsert = new Method({\n  name: 'activityInsert',\n  params: { object: Object },\n});\n\nexport const activityUpdate = new Method({\n  name: 'activityUpdate',\n  params: { activityId: String, object: Object },\n});\n\nexport const activityRemove = new Method({\n  name: 'activityRemove',\n  params: { activityId: String },\n});\n","import Activities from './activities';\nimport { ACTIVITY_QUERIES } from './activityConstants';\nimport { activity } from '../fragments';\n\nexport const adminActivities = Activities.createQuery(\n  ACTIVITY_QUERIES.ADMIN_ACTIVITIES,\n  { ...activity(), $options: { sort: { date: 1 } } },\n);\n","import DefaultNodeAnalytics from 'analytics-node';\nimport { Meteor } from 'meteor/meteor';\nimport { Random } from 'meteor/random';\n\nimport UserService from 'core/api/users/server/UserService';\nimport { getClientHost } from 'core/utils/server/getClientUrl';\nimport { EVENTS_CONFIG } from './eventsConfig';\nimport { TRACKING_COOKIE } from '../analyticsConstants';\nimport MiddlewareManager from '../../../utils/MiddlewareManager';\nimport { impersonateMiddleware } from './analyticsHelpers';\nimport TestAnalytics from './TestAnalytics';\n\nclass NodeAnalytics extends DefaultNodeAnalytics {\n  constructor(...args) {\n    super(...args);\n    this.middlewareManager = new MiddlewareManager(this);\n  }\n\n  initAnalytics(context) {\n    ['identify', 'track', 'page', 'alias'].forEach((method) => {\n      this.middlewareManager.applyToMethod(\n        method,\n        impersonateMiddleware(context),\n      );\n    });\n  }\n}\n\nconst { Segment = {} } = Meteor.settings.public.analyticsSettings;\nconst { key } = Segment;\nconst nodeAnalytics = new NodeAnalytics(key);\nif (Meteor.isProduction && !key) {\n  throw new Meteor.Error('No segment key found !');\n}\n\nclass Analytics {\n  constructor(context) {\n    this.init(context);\n  }\n\n  init(context) {\n    this.events = EVENTS_CONFIG;\n    if (Meteor.isTest || Meteor.isAppTest){// || Meteor.isDevelopment) {\n      this.analytics = new TestAnalytics();\n    } else {\n      this.analytics = nodeAnalytics;\n    }\n\n    this.context(context);\n  }\n\n  context(context) {\n    const {\n      userId,\n      connection: {\n        clientAddress,\n        httpHeaders: {\n          'user-agent': userAgent,\n          'x-real-ip': realIp,\n          referer: referrer,\n        },\n      },\n    } = context;\n    this.userId = userId;\n    this.user = UserService.fetchOne({\n      $filters: { _id: userId },\n      firstName: 1,\n      lastName: 1,\n      email: 1,\n      roles: 1,\n    });\n    this.clientAddress = realIp || clientAddress;\n    this.host = getClientHost();\n    this.userAgent = userAgent;\n    this.referrer = referrer;\n\n    this.analytics.initAnalytics(context);\n  }\n\n  identify(trackingId) {\n    this.alias(trackingId);\n\n    this.analytics.identify({\n      anonymousId: trackingId,\n      userId: this.userId,\n      traits: {\n        firstName: this.user.firstName,\n        lastName: this.user.lastName,\n        email: this.user.email,\n        role: this.user.roles[0],\n      },\n    });\n  }\n\n  track(event, data, trackingId) {\n    if (!Object.keys(this.events).includes(event)) {\n      throw new Meteor.Error(`Unknown event ${event}`);\n    }\n    const eventConfig = this.events[event];\n    const { name, transform } = eventConfig;\n\n    const eventProperties = transform ? transform(data) : {};\n\n    this.analytics.track({\n      ...(trackingId ? { anonymousId: trackingId } : {}),\n      userId: this.userId,\n      event: name,\n      properties: eventProperties,\n      context: {\n        ip: this.clientAddress,\n        userAgent: this.userAgent,\n      },\n    });\n  }\n\n  alias(trackingId) {\n    if (trackingId) {\n      this.analytics.alias({ userId: this.userId, previousId: trackingId });\n    }\n  }\n\n  // Returns the route string in a more readable format\n  // ex: APP_LOGIN_PAGE => App login page\n  formatRouteName(route) {\n    return route\n      .toLowerCase()\n      .split('_')\n      .map((w, i) => {\n        if (i === 0) {\n          return w.slice(0, 1).toUpperCase() + w.slice(1);\n        }\n\n        return w;\n      })\n      .join(' ');\n  }\n\n  page(params) {\n    const {\n      cookies,\n      sessionStorage,\n      path,\n      route,\n      queryParams,\n      queryString,\n    } = params;\n    const trackingId = cookies[TRACKING_COOKIE];\n    const formattedRoute = this.formatRouteName(route);\n\n    this.analytics.page({\n      name: formattedRoute,\n      anonymousId: trackingId || Random.id(),\n      ...(this.userId ? { userId: this.userId } : {}),\n      context: {\n        ip: this.clientAddress,\n        userAgent: this.userAgent,\n      },\n      properties: {\n        path,\n        url: `${this.host}${path === '/' ? '' : path}`,\n        referrer: this.referrer,\n        ...queryString,\n        ...queryParams,\n      },\n    });\n  }\n}\n\nexport default Analytics;\n","export default class {\n  identify() {}\n\n  page() {}\n\n  track() {}\n\n  alias() {}\n\n  initAnalytics() {}\n}\n","import { LOGIN_IP_BLACKLIST } from '../analyticsConstants';\n\nexport const impersonateMiddleware = context => () => next => (...args) => {\n  const {\n    connection: {\n      clientAddress,\n      httpHeaders: { host },\n    },\n  } = context;\n\n  // Don't track login events when impersonating\n  if (!host.includes('admin')) {\n    if (LOGIN_IP_BLACKLIST.includes(clientAddress)) {\n      return;\n    }\n  }\n\n  return next(...args);\n};\n","import curryRight from 'lodash/curryRight';\nimport EVENTS from '../events';\n\nconst curryPick = curryRight((obj, keys) =>\n  keys.reduce((o, k) => ({ ...o, [k]: obj[k] }), {}));\n\nexport const EVENTS_CONFIG = {\n  [EVENTS.USER_CREATED]: {\n    name: 'User Created',\n    transform: curryPick(['userId', 'origin', 'referralId']),\n  },\n  [EVENTS.USER_LOGGED_IN]: {\n    name: 'User Logged in',\n  },\n  [EVENTS.USER_VERIFIED_EMAIL]: {\n    name: 'User Verified',\n  },\n  [EVENTS.LOAN_ANONYMOUS_LOAN_CLAIMED]: {\n    name: 'Loan Anonymous loan claimed',\n    transform: curryPick(['loanId']),\n  },\n  [EVENTS.API_CALLED]: {\n    name: 'Api Called',\n    transform: curryPick(['endpoint', 'result']),\n  },\n  [EVENTS.LOAN_CREATED]: {\n    name: 'Loan Created',\n    transform: curryPick([\n      'loanId',\n      'propertyId',\n      'promotionId',\n      'referralId',\n      'anonymous',\n    ]),\n  },\n  [EVENTS.LOAN_STATUS_CHANGED]: {\n    name: 'Loan Status changed',\n  },\n};\n","import {\n  analyticsLogin,\n  analyticsPage,\n  analyticsVerifyEmail,\n} from '../methodDefinitions';\nimport SecurityService from '../../security';\nimport Analytics from './Analytics';\nimport EVENTS from '../events';\n\nanalyticsLogin.setHandler((context, params) => {\n  SecurityService.checkLoggedIn();\n\n  const analytics = new Analytics(context);\n  analytics.identify(params.trackingId);\n  analytics.track(EVENTS.USER_LOGGED_IN);\n});\n\nanalyticsPage.setHandler((context, params) => {\n  const analytics = new Analytics(context);\n  analytics.page(params);\n});\n\nanalyticsVerifyEmail.setHandler((context, params) => {\n  const analytics = new Analytics(context);\n  analytics.track(EVENTS.USER_VERIFIED_EMAIL);\n});\n","export const TRACKING_COOKIE = 'epotek_trackingid';\n\n// e-Potek's office and VPN IPs\n// Those addresses are blacklisted from 'app' and 'pro' tracked events\n// to avoid wrong tracking when impersonating users\nexport const LOGIN_IP_BLACKLIST = ['185.19.31.79', '213.3.47.70'];\n","export const EVENTS = {\n  USER_CREATED: 'USER_CREATED',\n  USER_LOGGED_IN: 'USER_LOGGED_IN',\n  USER_VERIFIED_EMAIL: 'USER_VERIFIED_EMAIL',\n\n  PROMOTION_CREATED: 'PROMOTION_CREATED',\n  PROMOTION_CUSTOMER_INVITED: 'PROMOTION_CUSTOMER_INVITED',\n  PROMOTION_LOT_STATUS_UPDATED: 'PROMOTION_LOT_STATUS_UPDATED',\n\n  PROPERTY_CUSTOMER_INVITED: 'PROPERTY_CUSTOMER_INVITED',\n\n  LOAN_ANONYMOUS_LOAN_CLAIMED: 'LOAN_ANONYMOUS_LOAN_CLAIMED',\n  LOAN_STATUS_CHANGED: 'LOAN_STATUS_CHANGED',\n  LOAN_COMPLETED_A_STRUCTURE: 'LOAN_COMPLETED_A_STRUCTURE',\n  LOAN_CREATED: 'LOAN_CREATED',\n  LOAN_MADE_PROGRESS: 'LOAN_MADE_PROGRESS',\n  LOAN_SET_STATUS: 'LOAN_SET_STATUS',\n  LOAN_SET_STEP: 'LOAN_SET_STEP',\n  LOAN_TASK_ADDED: 'LOAN_TASK_ADDED',\n  LOAN_TASK_UPDATED: 'LOAN_TASK_UPDATED',\n\n  CTA_CLICKED: 'CTA_CLICKED',\n\n  API_CALLED: 'API_CALLED',\n};\n\nexport default EVENTS;\n","import { Method } from '../methods/methods';\n\nexport const analyticsLogin = new Method({\n  name: 'analyticsLogin',\n  params: {\n    trackingId: String,\n  },\n});\n\nexport const analyticsPage = new Method({\n  name: 'analyticsPage',\n  params: {\n    cookies: Object,\n    sessionStorage: Object,\n    path: String,\n    route: String,\n    queryParams: Object,\n    queryString: Object,\n  },\n});\n\nexport const analyticsVerifyEmail = new Method({\n  name: 'analyticsVerifyEmail',\n});\n","import SimpleSchema from 'simpl-schema';\nimport {\n  createdAt,\n  updatedAt,\n  additionalDocuments,\n  mortgageNoteLinks,\n  documentsField,\n} from '../../helpers/sharedSchemas';\nimport { initialDocuments } from '../borrowersAdditionalDocuments';\nimport {\n  personalInfoSchema,\n  financeInfoSchema,\n  ownCompaniesSchema,\n} from './otherSchemas';\n\n// Documentation is in the google drive dev/MongoDB Schemas\nconst BorrowerSchema = new SimpleSchema({\n  userId: {\n    type: String,\n    optional: true,\n  },\n  createdAt,\n  updatedAt,\n  admin: {\n    // TODO\n    type: Object,\n    optional: true,\n  },\n  adminValidation: {\n    type: Object,\n    defaultValue: {},\n    blackbox: true,\n  },\n  documents: documentsField,\n  ...personalInfoSchema,\n  ...financeInfoSchema,\n  ...additionalDocuments(initialDocuments),\n  ...mortgageNoteLinks,\n  ...ownCompaniesSchema,\n});\n\nconst protectedKeys = [\n  '_id',\n  'additionalDocuments',\n  'admin',\n  'adminValidation',\n  'createdAt',\n  'logic',\n  'mortgageNoteLinks',\n  'updatedAt',\n  'userId',\n  'documents',\n];\n\nexport const BorrowerSchemaAdmin = BorrowerSchema.omit(...protectedKeys);\nexport default BorrowerSchema;\n","import SimpleSchema from 'simpl-schema';\n\nimport {\n  percentageField,\n  moneyField,\n  address,\n} from '../../helpers/sharedSchemas';\nimport {\n  RESIDENCY_PERMIT,\n  GENDER,\n  CIVIL_STATUS,\n  OTHER_INCOME,\n  EXPENSES,\n  OWN_FUNDS_TYPES,\n} from '../borrowerConstants';\nimport { RESIDENCE_TYPE } from '../../constants';\nimport { CUSTOM_AUTOFIELD_TYPES } from '../../../components/AutoForm2/constants';\n\nconst makeArrayOfObjectsSchema = (name, allowedValues) => ({\n  [name]: { type: Array, defaultValue: [], optional: true },\n  [`${name}.$`]: Object,\n  [`${name}.$.value`]: { ...moneyField, optional: false },\n  [`${name}.$.description`]: {\n    type: String,\n    optional: true,\n    allowedValues,\n    uniforms: {\n      displayEmpty: false,\n      intlId: `${name}.description`,\n      allowedValuesIntlId: name,\n    },\n  },\n});\n\nexport const personalInfoSchema = {\n  firstName: { type: String, optional: true },\n  lastName: { type: String, optional: true },\n  gender: {\n    type: String,\n    optional: true,\n    allowedValues: Object.values(GENDER),\n    uniforms: { displayEmpty: false },\n  },\n  birthDate: {\n    type: Date,\n    optional: true,\n    uniforms: { type: CUSTOM_AUTOFIELD_TYPES.DATE },\n  },\n  ...address,\n  sameAddress: { type: Boolean, optional: true },\n  isSwiss: { type: Boolean, optional: true },\n  residencyPermit: {\n    type: String,\n    optional: true,\n    allowedValues: Object.values(RESIDENCY_PERMIT),\n    uniforms: { displayEmpty: false },\n  },\n  citizenship: { type: String, optional: true },\n  isUSPerson: { type: Boolean, optional: true },\n  civilStatus: {\n    type: String,\n    allowedValues: Object.values(CIVIL_STATUS),\n    optional: true,\n    uniforms: { displayEmpty: false },\n  },\n  childrenCount: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n    max: 20,\n  },\n  company: { type: String, optional: true },\n};\n\nexport const financeInfoSchema = {\n  salary: moneyField,\n  netSalary: moneyField,\n  bonusExists: { type: Boolean, optional: true },\n  bonus2015: moneyField,\n  bonus2016: moneyField,\n  bonus2017: moneyField,\n  bonus2018: moneyField,\n  bonus2019: moneyField,\n  [OWN_FUNDS_TYPES.BANK_FORTUNE]: moneyField,\n  ...makeArrayOfObjectsSchema(OWN_FUNDS_TYPES.INSURANCE_2),\n  ...makeArrayOfObjectsSchema(OWN_FUNDS_TYPES.INSURANCE_3A),\n  ...makeArrayOfObjectsSchema(OWN_FUNDS_TYPES.BANK_3A),\n  ...makeArrayOfObjectsSchema(OWN_FUNDS_TYPES.INSURANCE_3B),\n  [OWN_FUNDS_TYPES.THIRD_PARTY_FORTUNE]: moneyField,\n  ...makeArrayOfObjectsSchema('otherIncome', Object.values(OTHER_INCOME)),\n  'otherIncome.$.comment': { type: String, optional: true },\n  ...makeArrayOfObjectsSchema('otherFortune'),\n  ...makeArrayOfObjectsSchema('expenses', Object.values(EXPENSES)),\n  'expenses.$.comment': { type: String, optional: true },\n  ...makeArrayOfObjectsSchema('realEstate', Object.values(RESIDENCE_TYPE)),\n  'realEstate.$.loan': { ...moneyField, optional: false },\n  'realEstate.$.name': { type: String, optional: true },\n  'realEstate.$.income': { ...moneyField, optional: true, defaultValue: 0 },\n};\n\nexport const ownCompaniesSchema = {\n  hasOwnCompany: { type: Boolean, optional: true },\n  ownCompanies: { type: Array, defaultValue: [], optional: true },\n  'ownCompanies.$': Object,\n  'ownCompanies.$.description': { type: String, optional: false },\n  'ownCompanies.$.ownership': percentageField,\n  'ownCompanies.$.netIncome2016': moneyField,\n  'ownCompanies.$.netIncome2017': moneyField,\n  'ownCompanies.$.netIncome2018': moneyField,\n};\n","import Borrowers from '../borrowers';\nimport LoanService from '../../loans/server/LoanService';\nimport CollectionService from '../../helpers/CollectionService';\nimport { loanBorrower } from '../../fragments';\n\nexport class BorrowerService extends CollectionService {\n  constructor() {\n    super(Borrowers);\n  }\n\n  get(borrowerId) {\n    return this.fetchOne({ $filters: { _id: borrowerId }, ...loanBorrower() });\n  }\n\n  update = ({ borrowerId, object }) =>\n    Borrowers.update(borrowerId, { $set: object });\n\n  insert = ({ borrower = {}, userId }) =>\n    Borrowers.insert({ ...borrower, userId });\n\n  remove = ({ borrowerId, loanId }) => {\n    LoanService.cleanupRemovedBorrower({ borrowerId });\n    const borrower = this.get(borrowerId);\n    if (borrower.loans && borrower.loans.length > 1) {\n      const loansLink = this.getLink(borrowerId, 'loans');\n      if (loanId) {\n        // Fix this conditional when the issue has been dealt with\n        // https://github.com/cult-of-coders/grapher/issues/332\n        loansLink.remove(loanId);\n      } else {\n        // Only admins can remove a borrower that has multiple loans\n        return Borrowers.remove(borrowerId);\n      }\n    } else {\n      return Borrowers.remove(borrowerId);\n    }\n  };\n\n  pushValue = ({ borrowerId, object }) =>\n    Borrowers.update(borrowerId, { $push: object });\n\n  popValue = ({ borrowerId, object }) =>\n    Borrowers.update(borrowerId, { $pop: object });\n\n  pullValue = ({ borrowerId, object }) =>\n    Borrowers.update(borrowerId, { $pull: object });\n\n  getReusableBorrowers({ loanId, borrowerId }) {\n    // borrowerId can be the previous removed borrower, and therefore\n    // this line will fail if we don't provide a default empty object\n    const { userId, loans } = this.get(borrowerId) || {};\n    if (!userId) {\n      return { borrowers: [], isLastLoan: true };\n    }\n\n    const userBorrowers = this.fetch({\n      $filters: { userId },\n      name: 1,\n      loans: { name: 1 },\n    });\n    const loan = LoanService.get(loanId);\n    const isLastLoan = loans && loans.length === 1 && loans[0]._id === loanId;\n\n    const borrowersNotOnLoan = userBorrowers.filter(({ _id }) => !loan.borrowerIds.includes(_id));\n\n    return { borrowers: borrowersNotOnLoan, isLastLoan };\n  }\n\n  cleanUpMortgageNotes({ borrowerId }) {\n    const { mortgageNotes = [], loans = [] } = this.fetchOne({\n      $filters: { _id: borrowerId },\n      mortgageNotes: { _id: 1 },\n      loans: { structures: 1 },\n    });\n    const borrowerMortgageNoteIds = mortgageNotes.map(({ _id }) => _id);\n\n    loans.forEach(({ _id: loanId, structures = [] }) => {\n      structures.forEach(({ id: structureId, mortgageNoteIds = [] }) => {\n        LoanService.updateStructure({\n          loanId,\n          structureId,\n          structure: {\n            mortgageNoteIds: mortgageNoteIds.filter(id => !borrowerMortgageNoteIds.includes(id)),\n          },\n        });\n      });\n    });\n  }\n}\n\nexport default new BorrowerService();\n","import { Match } from 'meteor/check';\n\nimport { exposeQuery } from '../../queries/queryHelpers';\nimport { adminBorrowers, borrowerSearch } from '../queries';\n\nexposeQuery({\n  query: adminBorrowers,\n  options: { allowFilterById: true },\n});\n\nexposeQuery({\n  query: borrowerSearch,\n  overrides: { validateParams: { searchQuery: Match.Maybe(String) } },\n});\n","import { ROLES } from '../../constants';\nimport { additionalDocumentsHook } from '../../helpers/sharedHooks';\nimport UpdateWatcherService from '../../updateWatchers/server/UpdateWatcherService';\nimport SecurityService from '../../security';\nimport FileService from '../../files/server/FileService';\nimport { BorrowerSchemaAdmin } from '../schemas/BorrowerSchema';\nimport Borrowers from '../borrowers';\nimport { BORROWERS_COLLECTION } from '../borrowerConstants';\nimport {\n  initialDocuments,\n  conditionalDocuments,\n} from '../borrowersAdditionalDocuments';\nimport BorrowerService from './BorrowerService';\n\nBorrowers.after.insert(additionalDocumentsHook({\n  collection: BORROWERS_COLLECTION,\n  initialDocuments,\n  conditionalDocuments,\n}));\n\nBorrowers.after.update(additionalDocumentsHook({\n  collection: BORROWERS_COLLECTION,\n  initialDocuments,\n  conditionalDocuments,\n}));\n\n// Clean up mortgagenotes from all structures that come from this borrower\nBorrowers.before.remove((userId, { _id: borrowerId }) => {\n  BorrowerService.cleanUpMortgageNotes({ borrowerId });\n});\n\nUpdateWatcherService.addUpdateWatching({\n  collection: Borrowers,\n  fields: BorrowerSchemaAdmin._schemaKeys,\n  shouldWatch: ({ userId }) =>\n    SecurityService.hasRole(userId, ROLES.USER)\n    || SecurityService.hasRole(userId, ROLES.PRO),\n});\n\nBorrowers.after.remove((userId, { _id }) =>\n  FileService.deleteAllFilesForDoc(_id));\n","import SecurityService from '../../security';\nimport BorrowerService from './BorrowerService';\nimport {\n  borrowerInsert,\n  borrowerUpdate,\n  borrowerDelete,\n  pushBorrowerValue,\n  popBorrowerValue,\n  pullBorrowerValue,\n  getReusableBorrowers,\n} from '../methodDefinitions';\nimport { checkInsertUserId } from '../../helpers/server/methodServerHelpers';\n\nborrowerInsert.setHandler((context, { borrower, userId }) =>\n  BorrowerService.insert({\n    borrower,\n    userId: checkInsertUserId(userId),\n  }));\n\nborrowerUpdate.setHandler((context, params) => {\n  SecurityService.borrowers.isAllowedToUpdate(params.borrowerId);\n  return BorrowerService.update(params);\n});\n\nborrowerDelete.setHandler((context, params) => {\n  if (!params.loanId) {\n    SecurityService.checkCurrentUserIsAdmin();\n  } else {\n    SecurityService.borrowers.isAllowedToDelete(params.borrowerId);\n  }\n  return BorrowerService.remove(params);\n});\n\npushBorrowerValue.setHandler((context, params) => {\n  SecurityService.borrowers.isAllowedToUpdate(params.borrowerId);\n  return BorrowerService.pushValue(params);\n});\n\npopBorrowerValue.setHandler((context, params) => {\n  SecurityService.borrowers.isAllowedToUpdate(params.borrowerId);\n  return BorrowerService.popValue(params);\n});\n\npullBorrowerValue.setHandler((context, params) => {\n  SecurityService.borrowers.isAllowedToUpdate(params.borrowerId);\n  return BorrowerService.pullValue(params);\n});\n\ngetReusableBorrowers.setHandler((context, params) => {\n  SecurityService.loans.isAllowedToUpdate(params.loanId);\n  return BorrowerService.getReusableBorrowers({ ...params });\n});\n","import Borrowers from '../borrowers';\nimport assigneeReducer from '../../reducers/assigneeReducer';\n\nBorrowers.addReducers({ ...assigneeReducer() });\n","// @flow\nexport const BORROWERS_COLLECTION = 'borrowers';\n\nexport const RESIDENCY_PERMIT = {\n  B: 'b',\n  C: 'c',\n  CI: 'ci',\n  F: 'f',\n  G: 'g',\n  L: 'l',\n  N: 'n',\n  S: 's',\n  NONE: 'none',\n};\n\nexport const GENDER = {\n  M: 'M',\n  F: 'F',\n  OTHER: 'OTHER',\n};\n\nexport const CIVIL_STATUS = {\n  MARRIED: 'MARRIED',\n  SINGLE: 'SINGLE',\n  PACSED: 'PACSED',\n  DIVORCED: 'DIVORCED',\n  WIDOW: 'WIDOW',\n};\n\nexport const OTHER_INCOME = {\n  WELFARE: 'WELFARE',\n  PENSIONS: 'PENSIONS',\n  // REAL_ESTATE: 'REAL_ESTATE',\n  // INVESTMENT: 'INVESTMENT', // We probably don't need this\n  OTHER: 'OTHER',\n};\n\nexport const EXPENSES = {\n  LEASING: 'LEASING',\n  PERSONAL_LOAN: 'PERSONAL_LOAN',\n  PENSIONS: 'PENSIONS',\n  THIRD_PARTY_FORTUNE_REIMBURSEMENT: 'THIRD_PARTY_FORTUNE_REIMBURSEMENT',\n  OTHER: 'OTHER',\n};\n\nexport const BORROWER_QUERIES = {\n  ADMIN_BORROWERS: 'ADMIN_BORROWERS',\n  BORROWER_SEARCH: 'BORROWER_SEARCH',\n};\n\nexport const OWN_FUNDS_TYPES = {\n  BANK_FORTUNE: 'bankFortune',\n  INSURANCE_2: 'insurance2',\n  INSURANCE_3A: 'insurance3A',\n  BANK_3A: 'bank3A',\n  INSURANCE_3B: 'insurance3B',\n  THIRD_PARTY_FORTUNE: 'thirdPartyFortune',\n};\n\nexport const RETIREMENT_AGE = {\n  [GENDER.M]: 65,\n  [GENDER.F]: 64,\n};\n","import { Mongo } from 'meteor/mongo';\nimport { BORROWERS_COLLECTION } from './borrowerConstants';\nimport BorrowerSchema from './schemas/BorrowerSchema';\n\nconst Borrowers = new Mongo.Collection(BORROWERS_COLLECTION);\n\n// Prevent all client side modifications of mongoDB\nBorrowers.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true,\n});\n\nBorrowers.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false,\n});\n\nBorrowers.attachSchema(BorrowerSchema);\nexport default Borrowers;\n","import { DOCUMENTS } from '../files/fileConstants';\nimport * as borrowerConstants from './borrowerConstants';\n\nexport const initialDocuments = [\n  { id: DOCUMENTS.IDENTITY },\n  { id: DOCUMENTS.DEBT_COLLECTION_REGISTER_EXTRACT },\n  { id: DOCUMENTS.TAXES },\n  { id: DOCUMENTS.SALARY_CERTIFICATE },\n  { id: DOCUMENTS.LAST_SALARIES },\n  { id: DOCUMENTS.OWN_FUNDS_JUSTIFICATION },\n];\n\nexport const conditionalDocuments = [\n  {\n    id: DOCUMENTS.RESIDENCY_PERMIT,\n    condition: ({ doc: { isSwiss } }) => isSwiss === false,\n  },\n  {\n    id: DOCUMENTS.DIVORCE_RULING,\n    condition: ({ doc: { civilStatus } }) =>\n      civilStatus === borrowerConstants.CIVIL_STATUS.DIVORCED,\n  },\n  {\n    id: DOCUMENTS.BONUSES,\n    condition: ({ doc: { bonusExists } }) => bonusExists === true,\n  },\n  {\n    id: DOCUMENTS.PENSION_FUND_YEARLY_STATEMENT,\n    condition: ({ doc: { insurance2 } }) => insurance2 && insurance2.length > 0,\n  },\n  {\n    id: DOCUMENTS.THIRD_PILLAR_ACCOUNTS,\n    condition: ({ doc: { insurance3A, insurance3B, bank3A } }) =>\n      (insurance3A && insurance3A.length > 0)\n      || (insurance3B && insurance3B.length > 0)\n      || (bank3A && bank3A.length > 0),\n  },\n  {\n    id: DOCUMENTS.CURRENT_MORTGAGES,\n    condition: ({ doc: { realEstate } }) =>\n      realEstate\n      && realEstate.length > 0\n      && realEstate.some(({ loan }) => loan > 0),\n  },\n  {\n    id: DOCUMENTS.EXPENSES_JUSTIFICATION,\n    condition: ({ doc: { expenses } }) => expenses && expenses.length > 0,\n  },\n  {\n    id: DOCUMENTS.OTHER_FORTUNE_JUSTIFICATION,\n    condition: ({ doc: { otherFortune } }) =>\n      otherFortune && otherFortune.length > 0,\n  },\n  {\n    id: DOCUMENTS.OTHER_INCOME_JUSTIFICATION,\n    condition: ({ doc: { otherIncome } }) =>\n      otherIncome && otherIncome.length > 0,\n  },\n];\n","import { OTHER_INCOME, EXPENSES } from './borrowerConstants';\nimport { RESIDENCE_TYPE } from '../constants';\n\nexport const emptyFakeBorrower = {};\n\nexport const fakeBorrower = {\n  firstName: 'Marie',\n  lastName: 'Rochat',\n  gender: 'F',\n  address1: 'Chemin du Mont 3',\n  zipCode: 1400,\n  city: 'Yverdon-les-Bains',\n  citizenships: 'Suisse, Français',\n  birthDate: '1980-03-01',\n  birthPlace: 'Lausanne',\n  civilStatus: 'SINGLE',\n  childrenCount: 2,\n  company: 'Deloitte',\n  personalBank: 'BCGE',\n  isSwiss: true,\n  isUSPerson: false,\n  worksForOwnCompany: false,\n  sameAddress: true,\n};\n\nexport const completeFakeBorrower = {\n  ...fakeBorrower,\n  salary: 300000,\n  bonusExists: true,\n  bonus2015: 15490,\n  bonus2016: 11140,\n  bonus2017: 13780,\n  bonus2018: 12300,\n  otherIncome: [\n    {\n      value: 10000,\n      description: OTHER_INCOME.PENSIONS,\n    },\n  ],\n  expenses: [\n    {\n      value: 3000,\n      description: EXPENSES.LEASING,\n    },\n    {\n      value: 4000,\n      description: EXPENSES.PERSONAL_LOAN,\n    },\n  ],\n  realEstate: [\n    {\n      value: 433000,\n      loan: 240000,\n      description: RESIDENCE_TYPE.MAIN_RESIDENCE,\n    },\n  ],\n  bankFortune: 300000,\n  insurance2: [{ value: 120000, description: 'Allianz' }],\n  insurance3A: [{ value: 50000, description: 'Swisslife' }],\n  logic: {},\n};\n","export { default } from './borrowers';\nexport * from './methodDefinitions';\n","import Borrowers from './borrowers';\nimport { Loans, Users, MortgageNotes } from '..';\n\nBorrowers.addLinks({\n  user: {\n    field: 'userId',\n    collection: Users,\n    type: 'one',\n  },\n  loans: {\n    collection: Loans,\n    inversedBy: 'borrowers',\n  },\n  mortgageNotes: {\n    field: 'mortgageNoteLinks',\n    collection: MortgageNotes,\n    type: 'many',\n    metadata: true,\n    autoremove: true,\n    unique: true,\n  },\n});\n","import { Match } from 'meteor/check';\nimport { Method } from '../methods/methods';\n\nexport const borrowerInsert = new Method({\n  name: 'borrowerInsert',\n  params: { borrower: Object, userId: Match.Optional(String) },\n});\n\nexport const borrowerUpdate = new Method({\n  name: 'borrowerUpdate',\n  params: { borrowerId: String, object: Object },\n});\n\nexport const borrowerDelete = new Method({\n  name: 'borrowerDelete',\n  params: { borrowerId: String, loanId: Match.Optional(String) },\n});\n\nexport const pushBorrowerValue = new Method({\n  name: 'pushBorrowerValue',\n  params: { borrowerId: String, object: Object },\n});\n\nexport const popBorrowerValue = new Method({\n  name: 'popBorrowerValue',\n  params: { borrowerId: String, object: Object },\n});\n\nexport const pullBorrowerValue = new Method({\n  name: 'pullBorrowerValue',\n  params: { borrowerId: String, object: Object },\n});\n\nexport const getReusableBorrowers = new Method({\n  name: 'getReusableBorrowers',\n  params: { loanId: String, borrowerId: String },\n});\n","import {\n  createRegexQuery,\n  generateMatchAnyWordRegexp,\n} from '../helpers/mongoHelpers';\nimport { adminBorrower } from '../fragments';\nimport { BORROWER_QUERIES } from './borrowerConstants';\nimport Borrowers from '.';\n\nexport const adminBorrowers = Borrowers.createQuery(\n  BORROWER_QUERIES.ADMIN_BORROWERS,\n  adminBorrower(),\n  { scoped: true },\n);\n\nexport const borrowerSearch = Borrowers.createQuery(\n  BORROWER_QUERIES.BORROWER_SEARCH,\n  {\n    $filter({ filters, params: { searchQuery } }) {\n      // the following method forces one word to be found in lastname field\n      // and one word in firstName field.\n      const formattedSearchQuery = generateMatchAnyWordRegexp(searchQuery);\n\n      filters.$or = [\n        createRegexQuery('_id', searchQuery),\n        createRegexQuery('firstName', searchQuery),\n        createRegexQuery('lastName', searchQuery),\n        {\n          $and: [\n            createRegexQuery('firstName', formattedSearchQuery),\n            createRegexQuery('lastName', formattedSearchQuery),\n          ],\n        },\n      ];\n    },\n    name: 1,\n    createdAt: 1,\n    updatedAt: 1,\n    $options: { sort: { createdAt: -1 }, limit: 5 },\n  },\n);\n","import addressReducer from '../reducers/addressReducer';\nimport Borrowers from './borrowers';\n\nBorrowers.addReducers({\n  name: {\n    body: {\n      firstName: 1,\n      lastName: 1,\n    },\n    reduce: ({ firstName, lastName }) =>\n      [firstName, lastName].filter(x => x).join(' '),\n  },\n  age: {\n    body: { birthDate: 1 },\n    reduce: ({ birthDate }) => {\n      const age = Math.floor((new Date() - new Date(birthDate)) / 1000 / 60 / 60 / 24 / 365.25);\n      return age;\n    },\n  },\n  ...addressReducer,\n});\n","import SimpleSchema from 'simpl-schema';\nimport { createdAt, updatedAt, address } from '../../helpers/sharedSchemas';\n\nconst ContactSchema = new SimpleSchema({\n  createdAt,\n  updatedAt,\n  firstName: String,\n  lastName: String,\n  ...address,\n  emails: { type: Array, optional: true },\n  'emails.$': Object,\n  'emails.$.address': { type: String, regEx: SimpleSchema.RegEx.Email },\n  phoneNumbers: { type: Array, optional: true },\n  'phoneNumbers.$': String,\n  userLink: { type: String, optional: true },\n});\n\nexport default ContactSchema;\n","import Contacts from '../contacts';\nimport CollectionService from '../../helpers/CollectionService';\nimport { contact } from '../../fragments';\n\nclass ContactService extends CollectionService {\n  constructor() {\n    super(Contacts);\n  }\n\n  get(contactId) {\n    return this.fetchOne({\n      $filters: { _id: contactId },\n      ...contact(),\n    });\n  }\n\n  changeOrganisations({ contactId, newOrganisations = [] }) {\n    const { organisations: oldOrganisations = [] } = this.get(contactId);\n\n    oldOrganisations.forEach(({ _id: organisationId }) =>\n      this.removeLink({\n        id: contactId,\n        linkName: 'organisations',\n        linkId: organisationId,\n      }));\n\n    newOrganisations.forEach(({ _id: organisationId, metadata }) =>\n      this.addLink({\n        id: contactId,\n        linkName: 'organisations',\n        linkId: organisationId,\n        metadata,\n      }));\n  }\n}\n\nexport default new ContactService();\n","import { Match } from 'meteor/check';\nimport { exposeQuery } from '../../queries/queryHelpers';\nimport { adminContacts, contactSearch } from '../queries';\n\nexposeQuery({ query: adminContacts, options: { allowFilterById: true } });\n\nexposeQuery({\n  query: contactSearch,\n  overrides: { validateParams: { searchQuery: Match.Maybe(String) } },\n});\n","import formatNumbersHook from '../../../utils/phoneFormatting';\nimport Contacts from '../contacts';\n\nformatNumbersHook(Contacts, 'phoneNumbers');\n","import SecurityService from '../../security';\nimport {\n  contactInsert,\n  contactRemove,\n  contactUpdate,\n  contactChangeOrganisations,\n} from '../methodDefinitions';\nimport ContactService from './ContactService';\n\ncontactInsert.setHandler((context, { contact }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return ContactService.insert(contact);\n});\n\ncontactRemove.setHandler((context, { contactId }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return ContactService.remove(contactId);\n});\n\ncontactUpdate.setHandler((context, { contactId, object }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return ContactService._update({ id: contactId, object });\n});\n\ncontactChangeOrganisations.setHandler((context, { contactId, newOrganisations }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return ContactService.changeOrganisations({ contactId, newOrganisations });\n});\n","import Contacts from '../contacts';\nimport tasksReducer from '../../reducers/tasksReducer';\n\nContacts.addReducers({\n  ...tasksReducer,\n});\n","import { Mongo } from 'meteor/mongo';\n\nimport ContactSchema from './schemas/contactSchema';\nimport { CONTACTS_COLLECTION } from './contactsConstants';\n\nconst Contacts = new Mongo.Collection(CONTACTS_COLLECTION);\n\nContacts.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true,\n});\n\nContacts.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false,\n});\n\nContacts.attachSchema(ContactSchema);\nexport default Contacts;\n","export const CONTACTS_COLLECTION = 'contacts';\n\nexport const CONTACTS_QUERIES = {\n  ADMIN_CONTACTS: 'ADMIN_CONTACTS',\n  CONTACT_SEARCH: 'CONTACT_SEARCH',\n};\n","export * from './methodDefinitions';\nexport { default } from './contacts';\n","import Contacts from '.';\n\nimport { Users, Organisations, Lenders, Offers } from '..';\n\nContacts.addLinks({\n  user: {\n    collection: Users,\n    field: 'userLink',\n    type: 'one',\n    metadata: true,\n  },\n  organisations: {\n    collection: Organisations,\n    inversedBy: 'contacts',\n  },\n  lenders: {\n    collection: Lenders,\n    inversedBy: 'contact',\n  },\n});\n","import { Method } from '../methods/methods';\n\nexport const contactInsert = new Method({\n  name: 'contactInsert',\n  params: {\n    contact: Object,\n  },\n});\n\nexport const contactRemove = new Method({\n  name: 'contactRemove',\n  params: {\n    contactId: String,\n  },\n});\n\nexport const contactUpdate = new Method({\n  name: 'contactUpdate',\n  params: {\n    contactId: String,\n    object: Object,\n  },\n});\n\nexport const contactChangeOrganisations = new Method({\n  name: 'contactChangeOrganisations',\n  params: {\n    contactId: String,\n    newOrganisations: Array,\n  },\n});\n","import {\n  generateMatchAnyWordRegexp,\n  createRegexQuery,\n} from '../helpers/mongoHelpers';\nimport { contact } from '../fragments';\nimport { CONTACTS_QUERIES } from './contactsConstants';\nimport Contacts from '.';\n\nexport const adminContacts = Contacts.createQuery(\n  CONTACTS_QUERIES.ADMIN_CONTACTS,\n  contact(),\n);\n\nexport const contactSearch = Contacts.createQuery(\n  CONTACTS_QUERIES.CONTACT_SEARCH,\n  {\n    $filter({ filters, params: { searchQuery } }) {\n      const formattedSearchQuery = generateMatchAnyWordRegexp(searchQuery);\n\n      filters.$or = [\n        createRegexQuery('_id', searchQuery),\n        createRegexQuery('firstName', searchQuery),\n        createRegexQuery('lastName', searchQuery),\n        {\n          $and: [\n            createRegexQuery('firstName', formattedSearchQuery),\n            createRegexQuery('lastName', formattedSearchQuery),\n          ],\n        },\n      ];\n    },\n    name: 1,\n    organisations: { name: 1 },\n    $options: { sort: { createdAt: -1 }, limit: 5 },\n  },\n);\n","import addressReducer from '../reducers/addressReducer';\nimport Contacts from './contacts';\nimport { fullOffer } from '../fragments';\n\nContacts.addReducers({\n  name: {\n    body: {\n      firstName: 1,\n      lastName: 1,\n    },\n    reduce: ({ firstName, lastName }) =>\n      [firstName, lastName].filter(x => x).join(' '),\n  },\n  email: {\n    body: {\n      emails: 1,\n    },\n    reduce: ({ emails }) => emails && !!emails.length && emails[0].address,\n  },\n  phoneNumber: {\n    body: {\n      phoneNumbers: 1,\n    },\n    reduce: ({ phoneNumbers }) =>\n      phoneNumbers && !!phoneNumbers.length && phoneNumbers[0],\n  },\n  offers: {\n    body: {\n      lenders: { offers: fullOffer() },\n    },\n    reduce: ({ lenders = [] }) => {\n      const contactOffers = lenders.reduce(\n        (allOffers, { offers = [] }) => [...allOffers, ...offers],\n        [],\n      );\n      return contactOffers;\n    },\n  },\n  ...addressReducer,\n});\n","import { Meteor } from 'meteor/meteor';\nimport https from 'https';\nimport queryString from 'query-string';\n\nconst CRONITOR_URL = 'https://cronitor.io';\nconst ACTIONS = {\n  RUN: 'run',\n  COMPLETE: 'complete',\n  PAUSE: 'pause',\n  FAIL: 'fail',\n};\nconst REQ_TIMEOUT = 10000;\n\nexport default class CronitorService {\n  constructor({ id, authKey }) {\n    this.id = id;\n    this.authKey = authKey;\n    this.baseUrl = CRONITOR_URL;\n  }\n\n  run = () => {\n    const urlObj = this.buildUrlObj({ action: ACTIONS.RUN });\n    const url = this.buildUrl({ urlObj });\n    return this.getWithTimeout({ url });\n  };\n\n  complete = (msg) => {\n    const urlObj = this.buildUrlObj({ action: ACTIONS.COMPLETE });\n    if (msg) {\n      if (!urlObj.qs) {\n        urlObj.qs = {};\n      }\n\n      urlObj.qs.msg = JSON.stringify(msg);\n    }\n    const url = this.buildUrl({ urlObj });\n    return this.getWithTimeout({ url });\n  };\n\n  pause = (hours) => {\n    const urlObj = this.buildUrlObj({ action: ACTIONS.PAUSE });\n    urlObj.basePath = `${urlObj.basePath}/${hours}`;\n    const url = this.buildUrl({ urlObj });\n    return this.getWithTimeout({ url });\n  };\n\n  fail = (msg) => {\n    const urlObj = this.buildUrlObj({ action: ACTIONS.FAIL });\n    if (msg) {\n      if (!urlObj.qs) {\n        urlObj.qs = {};\n      }\n\n      if (msg.sanitizedError) {\n        urlObj.qs.msg = JSON.stringify(msg.sanitizedError.message);\n      } else {\n        urlObj.qs.msg = JSON.stringify(msg);\n      }\n    }\n    const url = this.buildUrl({ urlObj });\n    return this.getWithTimeout({ url });\n  };\n\n  buildUrlObj = ({ action }) => {\n    const urlObj = { basePath: `${this.baseUrl}/${this.id}/${action}` };\n    if (this.authKey) {\n      urlObj.qs = { auth_key: this.authKey };\n    }\n\n    return urlObj;\n  };\n\n  buildUrl = ({ urlObj }) =>\n    urlObj.basePath + (urlObj.qs ? `?${queryString.stringify(urlObj.qs)}` : '');\n\n  getWithTimeout = ({ url }) => {\n    const promise = new Promise((resolve, reject) => {\n      https\n        .get(url, (response) => {\n          let data = '';\n\n          response.on('data', (chunk) => {\n            data += chunk;\n          });\n\n          response.on('end', () => {\n            resolve(data);\n          });\n        })\n        .on('error', reject);\n    });\n\n    const timeout = new Promise((resolve, reject) => {\n      const wait = Meteor.setTimeout(() => {\n        Meteor.clearTimeout(wait);\n        reject(new Meteor.Error('Timed out'));\n      }, REQ_TIMEOUT);\n    });\n\n    return Promise.race([promise, timeout]);\n  };\n}\n","import { EventEmitter } from 'events';\nimport EventService from '../EventService';\n\nexport default new EventService({ emmitter: new EventEmitter() });\nexport * from './eventNames';\n","export const MODIFIED_FILES_EVENT = 'MODIFIED_FILES_EVENT';\nexport const LOAD_LOAN = 'LOAD_LOAN';\nexport const CALLED_METHOD = 'CALLED_METHOD';\n","export { default } from './ClientEventService';\nexport * from './eventNames';\n","import { EventEmitter } from 'events';\nimport EventService from '../EventService';\n\nexport default new EventService({ emmitter: new EventEmitter() });\n","// Import all server event listener files here\nimport '../../activities/server/activityListeners';\nimport '../../analytics/server/activityListeners';\nimport '../../email/server/emailListeners';\nimport '../../loans/server/loanListeners';\nimport '../../slack/server/slackListeners';\nimport '../../tasks/server/taskListeners';\nimport '../../notifications/server/notificationListeners';\n","import { Meteor } from 'meteor/meteor';\n\nconst IS_LOGGING = !Meteor.isProduction;\n\nexport default class EventService {\n  constructor({ emmitter }) {\n    this.emmitter = emmitter;\n    // contains arrays of listener functions, grouped by event names\n    this.listenerFunctions = {};\n    this.addErrorListener();\n  }\n\n  emit(eventName, ...args) {\n    this.logEmittedEvent(eventName, ...args);\n    this.emmitter.emit(eventName, ...args);\n  }\n\n  getBeforeMethodEventName(name) {\n    return `__before_${name}`;\n  }\n\n  emitBeforeMethod({ name }, ...args) {\n    this.emit(this.getBeforeMethodEventName(name), ...args);\n  }\n\n  emitAfterMethod({ name }, ...args) {\n    this.emit(name, ...args);\n  }\n\n  addListener(eventName, listenerFunction) {\n    this.emmitter.addListener(eventName, (...args) => {\n      this.logListener(eventName, ...args);\n      listenerFunction(...args);\n    });\n\n    const listenersForEvent = this.listenerFunctions[eventName] || [];\n\n    this.listenerFunctions[eventName] = [\n      ...listenersForEvent,\n      listenerFunction,\n    ];\n  }\n\n  addBeforeMethodListener(methods, listenerFunction) {\n    if (Array.isArray(methods)) {\n      methods.forEach((method) => {\n        this.checkMethod(method);\n        const {\n          config: { name },\n        } = method;\n        this.addListener(this.getBeforeMethodEventName(name), listenerFunction);\n      });\n    } else {\n      this.checkMethod(methods);\n      const {\n        config: { name },\n      } = methods;\n      this.addListener(this.getBeforeMethodEventName(name), listenerFunction);\n    }\n  }\n\n  addAfterMethodListener(methods, listenerFunction) {\n    if (Array.isArray(methods)) {\n      methods.forEach((method) => {\n        this.checkMethod(method);\n        const {\n          config: { name },\n        } = method;\n        this.addListener(name, listenerFunction);\n      });\n    } else {\n      this.checkMethod(methods);\n      const {\n        config: { name },\n      } = methods;\n      this.addListener(name, listenerFunction);\n    }\n  }\n\n  checkMethod(method) {\n    if (!method || !method.config) {\n      throw new Error('Method does not exist in EventService');\n    }\n  }\n\n  addErrorListener() {\n    this.addListener('error', (error) => {\n      console.log('An error occured in an event listener:');\n      console.log(error);\n      throw error;\n    });\n  }\n\n  logEmittedEvent(eventName, ...args) {\n    if (IS_LOGGING && !Meteor.isTest) {\n      // console.log(`Event \"${eventName}\" triggered with params:`);\n      // console.log(params);\n    }\n  }\n\n  logListener(eventName, ...args) {\n    if (IS_LOGGING && !Meteor.isTest) {\n      console.log(`Event \"${eventName}\" listened to with args:`);\n      args.forEach(arg => console.log(arg));\n    }\n  }\n\n  getListenerFunctions(eventName) {\n    return this.listenerFunctions[eventName] || [];\n  }\n\n  removeListener(eventName, listener) {\n    this.emmitter.removeListener(eventName, listener);\n  }\n\n  removeAllListeners(eventName) {\n    this.emmitter.removeAllListeners(eventName);\n  }\n}\n","import { Mongo } from 'meteor/mongo';\n\nimport { readFileBuffer, removeFile } from 'core/utils/filesUtils';\nimport { Meteor } from 'meteor/meteor';\nimport { HTTP_STATUS_CODES } from 'core/api/RESTAPI/server/restApiConstants';\nimport { FILE_STATUS, S3_ACLS } from '../fileConstants';\nimport S3Service from './S3Service';\nimport { getS3FileKey } from './meteor-slingshot-server';\n\nclass FileService {\n  listFilesForDoc = (docId, subdocument) => {\n    const prefix = subdocument ? `${docId}/${subdocument}` : docId;\n    return S3Service.listObjectsWithMetadata(prefix).then(results =>\n      results.map(this.formatFile));\n  };\n\n  listFilesForDocByCategory = (docId, subdocument) =>\n    this.listFilesForDoc(docId, subdocument).then(this.groupFilesByCategory);\n\n  setFileStatus = (key, status) => {\n    if (status === FILE_STATUS.VALID) {\n      return S3Service.updateMetadata(key, { status, message: '' });\n    }\n\n    return S3Service.updateMetadata(key, { status });\n  };\n\n  setFileError = (key, errorMessage) =>\n    S3Service.updateMetadata(key, {\n      status: FILE_STATUS.ERROR,\n      message: errorMessage,\n    });\n\n  setFileValid = key =>\n    S3Service.updateMetadata(key, { status: FILE_STATUS.VALID, message: '' });\n\n  deleteFile = S3Service.deleteObject;\n\n  deleteAllFilesForDoc = (docId, subdocument) => {\n    const prefix = subdocument ? `${docId}/${subdocument}` : docId;\n    return S3Service.deleteObjectsWithPrefix(prefix);\n  };\n\n  groupFilesByCategory = files =>\n    files.reduce((groupedFiles, file) => {\n      const category = file.Key.split('/')[1];\n      const currentCategoryFiles = groupedFiles[category] || [];\n      return { ...groupedFiles, [category]: [...currentCategoryFiles, file] };\n    }, {});\n\n  updateDocumentsCache = ({ docId, collection }) =>\n    this.listFilesForDocByCategory(docId).then(documents =>\n      Mongo.Collection.get(collection).update(\n        { _id: docId },\n        { $set: { documents } },\n      ));\n\n  formatFile = (file) => {\n    let fileName = file.name;\n    if (!fileName) {\n      const keyParts = file.Key.split('/');\n      fileName = keyParts[keyParts.length - 1];\n    }\n    return { ...file, name: fileName };\n  };\n\n  uploadFileAPI = ({ file, docId, id, collection }) => {\n    const { originalFilename, path } = file;\n    const key = getS3FileKey({ name: originalFilename }, { docId, id });\n\n    return S3Service.putObject(\n      readFileBuffer(path),\n      key,\n      {},\n      S3_ACLS.PUBLIC_READ_WRITE,\n    )\n      .then(() => this.updateDocumentsCache({ docId, collection }))\n      .then(() => this.listFilesForDoc(docId))\n      .then((files) => {\n        removeFile(path);\n        return { files };\n      });\n  };\n\n  deleteFileAPI = ({ docId, collection, key }) =>\n    this.listFilesForDoc(docId)\n      .then((files) => {\n        const keyExists = files.map(({ Key }) => Key).some(Key => Key === key);\n        if (!keyExists) {\n          throw new Meteor.Error(\n            HTTP_STATUS_CODES.NOT_FOUND,\n            `Key ${key} not found`,\n          );\n        }\n\n        return S3Service.deleteObject(key);\n      })\n      .then(() => this.updateDocumentsCache({ docId, collection }))\n      .then(() => this.listFilesForDoc(docId))\n      .then(files => ({ deletedFiles: [{ Key: key }], remainingFiles: files }));\n}\n\nexport default new FileService();\n","import { Meteor } from 'meteor/meteor';\nimport AWS from 'aws-sdk';\nimport { Roles } from 'meteor/alanning:roles';\nimport { Loans, Borrowers, Properties, Promotions } from '../..';\nimport {\n  TEST_BUCKET_NAME,\n  S3_ENDPOINT,\n  OBJECT_STORAGE_PATH,\n} from '../fileConstants';\nimport { PROPERTY_CATEGORY } from '../../constants';\n\nconst { API_KEY, SECRET_KEY } = Meteor.settings.exoscale;\n\nclass S3Service {\n  constructor() {\n    this.setupS3();\n    this.setBucket();\n  }\n\n  setupS3 = () => {\n    // API Ref: https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html\n    AWS.config.update({ accessKeyId: API_KEY, secretAccessKey: SECRET_KEY });\n    this.s3 = new AWS.S3({ signatureVersion: 'v4', endpoint: S3_ENDPOINT });\n  };\n\n  setBucket = () => {\n    if (Meteor.isTest || Meteor.isAppTest) {\n      this.params = { Bucket: TEST_BUCKET_NAME };\n    } else {\n      this.params = { Bucket: Meteor.settings.storage.bucketName };\n    }\n  };\n\n  makeParams = (extraParams = {}) => ({ ...this.params, ...extraParams });\n\n  isAllowedToAccess = (key) => {\n    const loggedInUser = Meteor.userId();\n    if (\n      Roles.userIsInRole(loggedInUser, 'admin')\n      || Roles.userIsInRole(loggedInUser, 'dev')\n    ) {\n      return true;\n    }\n\n    // Check if this user is the owner of the document\n    const keyId = key.split('/')[0];\n    const loanFound = !!Loans.findOne({\n      _id: keyId,\n      userId: loggedInUser,\n    });\n\n    if (loanFound) {\n      return true;\n    }\n\n    const borrowerFound = !!Borrowers.findOne({\n      _id: keyId,\n      userId: loggedInUser,\n    });\n\n    if (borrowerFound) {\n      return true;\n    }\n\n    const property = Properties.findOne({ _id: keyId });\n\n    if (property) {\n      if (!property.category || property.category === PROPERTY_CATEGORY.USER) {\n        if (property.userId === loggedInUser) {\n          return true;\n        }\n        throw new Meteor.Error('Unauthorized download');\n      }\n\n      return true;\n    }\n\n    const promotionFound = !!Promotions.findOne({ _id: keyId });\n\n    if (promotionFound) {\n      return true;\n    }\n\n    throw new Meteor.Error('Unauthorized download');\n  };\n\n  putObject = (binaryData, Key, Metadata, ACL = 'bucket-owner-full-control') =>\n    this.callS3Method('putObject', {\n      Body: binaryData,\n      Key,\n      Metadata,\n      ACL,\n    });\n\n  deleteObject = Key => this.callS3Method('deleteObject', { Key });\n\n  deleteObjects = keys =>\n    this.callS3Method('deleteObjects', {\n      Delete: { Objects: keys.map(Key => ({ Key })) },\n    });\n\n  deleteObjectsWithPrefix = prefix =>\n    this.listObjects(prefix)\n      .then(results => results.map(({ Key }) => Key))\n      .then(this.deleteObjects);\n\n  getObject = Key => this.callS3Method('getObject', { Key });\n\n  listObjects = Prefix =>\n    this.callS3Method('listObjectsV2', { Prefix }).then(results => results.Contents);\n\n  listObjectsWithMetadata = Prefix =>\n    this.listObjects(Prefix).then(results =>\n      Promise.all(results.map(object =>\n        this.headObject(object.Key).then(({ Metadata, ContentDisposition }) => {\n          const name = ContentDisposition\n                && decodeURIComponent(ContentDisposition.match(/filename=\"(.*)\"/)[1]);\n          return {\n            ...object,\n            ...Metadata,\n            url: this.buildFileUrl(object),\n            name,\n          };\n        }))));\n\n  copyObject = params => this.callS3Method('copyObject', params);\n\n  headObject = Key => this.callS3Method('headObject', { Key });\n\n  callS3Method = (methodName, params) =>\n    this.promisify(methodName, this.makeParams(params));\n\n  promisify = (methodName, params) =>\n    new Promise((resolve, reject) =>\n      this.s3[methodName](params, (err, data) =>\n        (err ? reject(err) : resolve(data))));\n\n  updateMetadata = (key, newMetadata) =>\n    this.headObject(key).then(({ Metadata: oldMetaData }) =>\n      this.copyObject({\n        Key: key,\n        Metadata: { ...oldMetaData, ...newMetadata },\n        CopySource: `/${this.params.Bucket}/${key}`,\n        MetadataDirective: 'REPLACE',\n      }));\n\n  buildFileUrl = file => `${OBJECT_STORAGE_PATH}/${file.Key}`;\n\n  makeSignedUrl = Key =>\n    this.s3.getSignedUrl('getObject', {\n      Bucket: this.params.Bucket,\n      Key,\n      Expires: 180,\n    });\n}\n\nexport default new S3Service();\n","import { Meteor } from 'meteor/meteor';\nimport { Slingshot } from 'meteor/edgee:slingshot';\n\nimport { ROLES } from 'core/api/constants';\nimport { COLLECTIONS } from '../../constants';\nimport SecurityService from '../../security';\nimport {\n  SLINGSHOT_DIRECTIVE_NAME,\n  MAX_FILE_SIZE,\n  ALLOWED_FILE_TYPES,\n} from '../fileConstants';\nimport uploadDirective from './uploadDirective';\n\nexport const getS3FileKey = (file, { docId, id }) =>\n  `${docId}/${id}/${file.name\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '')}`;\n\nSlingshot.createDirective(SLINGSHOT_DIRECTIVE_NAME, uploadDirective, {\n  maxSize: MAX_FILE_SIZE,\n  allowedFileTypes: ALLOWED_FILE_TYPES,\n  authorize(file, { collection, docId }) {\n    // Don't use arrow function, this is the current object here\n\n    // Check for devs and admins\n    if (\n      SecurityService.hasMinimumRole({ userId: this.userId, role: ROLES.ADMIN })\n    ) {\n      return true;\n    }\n\n    // Deny uploads if user is not logged in.\n    if (!this.userId) {\n      throw new Meteor.Error(\n        'Login Required',\n        'Please login before uploading files',\n      );\n    }\n\n    if (!Object.values(COLLECTIONS).includes(collection)) {\n      throw new Meteor.Error('Invalid collection', \"Collection doesn't exist\");\n    }\n\n    SecurityService.isAllowedToModifyFiles({\n      collection,\n      docId,\n      userId: this.userId,\n      fileKey: docId,\n    });\n\n    return true;\n  },\n  key: getS3FileKey,\n});\n","import SecurityService from '../../security';\nimport {\n  deleteFile,\n  setFileStatus,\n  setFileError,\n  downloadFile,\n  getSignedUrl,\n  updateDocumentsCache,\n} from '../methodDefinitions';\nimport FileService from './FileService';\nimport S3Service from './S3Service';\n\ndeleteFile.setHandler((context, { collection, docId, fileKey }) => {\n  context.unblock();\n  SecurityService.isAllowedToModifyFiles({\n    collection,\n    docId,\n    userId: context.userId,\n    fileKey,\n  });\n\n  return FileService.deleteFile(fileKey).then(() =>\n    FileService.updateDocumentsCache({ docId, collection }));\n});\n\nsetFileStatus.setHandler((context, { fileKey, newStatus }) => {\n  context.unblock();\n  SecurityService.checkCurrentUserIsAdmin();\n  // Should update documents cache when we start using this\n  return FileService.setFileStatus(fileKey, newStatus);\n});\n\nsetFileError.setHandler((context, { fileKey, error }) => {\n  context.unblock();\n  SecurityService.checkCurrentUserIsAdmin();\n  // Should update documents cache when we start using this\n  return FileService.setFileError(fileKey, error);\n});\n\ndownloadFile.setHandler((context, { key }) => {\n  context.unblock();\n  S3Service.isAllowedToAccess(key);\n  return S3Service.getObject(key);\n});\n\ngetSignedUrl.setHandler((context, { key }) => {\n  context.unblock();\n  SecurityService.checkCurrentUserIsAdmin();\n  return S3Service.makeSignedUrl(key);\n});\n\nupdateDocumentsCache.setHandler((context, params) => {\n  context.unblock();\n  SecurityService.checkLoggedIn();\n  return FileService.updateDocumentsCache(params);\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Match, check } from 'meteor/check';\nimport { Slingshot } from 'meteor/edgee:slingshot';\nimport { _ } from 'meteor/underscore';\n\nimport crypto from 'crypto';\n\nimport {\n  OBJECT_STORAGE_PATH,\n  BUCKET_NAME,\n  OBJECT_STORAGE_REGION,\n  FILE_STATUS,\n  S3_ACLS,\n  MAX_FILE_SIZE,\n  ONE_KB,\n} from '../fileConstants';\n\nconst { API_KEY, SECRET_KEY } = Meteor.settings.exoscale;\n\nconst FIVE_MINUTES = 5 * 60 * 1000;\n\nconst hmac256 = (key, data, encoding) =>\n  crypto\n    .createHmac('sha256', key)\n    .update(Buffer.from(data).toString('utf-8'))\n    .digest(encoding);\n\nconst formatNumber = (num, digits) => {\n  const string = String(num);\n  return Array(digits - string.length + 1)\n    .join('0')\n    .concat(string);\n};\n\nconst exoscaleStorageService = {\n  accessId: 'AWSAccessKeyId',\n  secretKey: 'AWSSecretAccessKey',\n\n  directiveMatch: {\n    bucket: String,\n    bucketUrl: Match.OneOf(String, Function),\n\n    region: String,\n\n    AWSAccessKeyId: String,\n    AWSSecretAccessKey: String,\n\n    acl: Match.Optional(Match.Where((acl) => {\n      check(acl, String);\n\n      return Object.values(S3_ACLS).indexOf(acl) >= 0;\n    })),\n\n    key: Match.OneOf(String, Function),\n\n    expire: Match.Where((expire) => {\n      check(expire, Number);\n\n      return expire > 0;\n    }),\n\n    cacheControl: Match.Optional(String),\n    contentDisposition: Match.Optional(Match.OneOf(String, Function, null)),\n\n    'x-amz-meta-status': Match.Optional(String),\n  },\n\n  directiveDefault: {\n    bucket: BUCKET_NAME,\n    bucketUrl: OBJECT_STORAGE_PATH,\n    region: OBJECT_STORAGE_REGION,\n    expire: FIVE_MINUTES,\n    AWSAccessKeyId: API_KEY,\n    AWSSecretAccessKey: SECRET_KEY,\n    acl: 'private',\n  },\n\n  getContentDisposition(method, directive, file, meta) {\n    let getContentDisposition = directive.contentDisposition;\n\n    if (!_.isFunction(getContentDisposition)) {\n      getContentDisposition = function () {\n        const filename = file.name && encodeURIComponent(file.name);\n\n        return (\n          directive.contentDisposition\n          || (filename\n            && `inline; filename=\"${filename}\"; filename*=utf-8''${filename}`)\n        );\n      };\n    }\n\n    return getContentDisposition.call(method, file, meta);\n  },\n\n  getMaxSize(directive, meta) {\n    // Only allow client maxSizes that are smaller than server defined maxSize\n    if (meta.maxSize && meta.maxSize <= directive.maxSize) {\n      return meta.maxSize;\n    }\n\n    return directive.maxSize || MAX_FILE_SIZE;\n  },\n\n  /**\n   *\n   * @param {{userId: String}} method\n   * @param {Directive} directive\n   * @param {FileInfo} file\n   * @param {Object} [meta]\n   *\n   * @returns {UploadInstructions}\n   */\n\n  upload(method, directive, file, meta) {\n    const maxSize = this.getMaxSize(directive, meta);\n    const policy = new Slingshot.StoragePolicy()\n      .expireIn(directive.expire)\n      .contentLength(0, Math.min(file.size, maxSize));\n\n    if (file.size > maxSize) {\n      throw new Meteor.Error(`Votre fichier ne peut pas dépasser ${maxSize\n          / ONE_KB}kb, essayez de réduire la résolution du fichier, ou de le compresser à l'aide de tinyjpg.com`);\n    }\n\n    const payload = {\n      key: _.isFunction(directive.key)\n        ? directive.key.call(method, file, meta)\n        : directive.key,\n\n      bucket: directive.bucket,\n\n      'Content-Type': file.type,\n      acl: meta.acl || directive.acl,\n\n      'Cache-Control': directive.cacheControl,\n      'Content-Disposition': this.getContentDisposition(\n        method,\n        directive,\n        file,\n        meta,\n      ),\n      'x-amz-meta-status': FILE_STATUS.UNVERIFIED,\n    };\n\n    const bucketUrl = _.isFunction(directive.bucketUrl)\n      ? directive.bucketUrl(directive.bucket, directive.region)\n      : directive.bucketUrl;\n\n    const downloadUrl = [directive.cdn || bucketUrl, payload.key]\n      .map(part => part.replace(/\\/+$/, ''))\n      .join('/');\n\n    this.applySignature(payload, policy, directive);\n\n    return {\n      upload: bucketUrl,\n      download: downloadUrl,\n      postData: [\n        {\n          name: 'key',\n          value: payload.key,\n        },\n      ].concat(_.chain(payload)\n        .omit('key')\n        .map((value, name) =>\n          !_.isUndefined(value) && {\n            name,\n            value,\n          })\n        .compact()\n        .value()),\n    };\n  },\n\n  /** Applies signature an upload payload\n   *\n   * @param {Object} payload - Data to be upload along with file\n   * @param {Slingshot.StoragePolicy} policy\n   * @param {Directive} directive\n   */\n\n  applySignature(payload, policy, directive) {\n    const now = new Date();\n\n    const today = now.getUTCFullYear()\n      + formatNumber(now.getUTCMonth() + 1, 2)\n      + formatNumber(now.getUTCDate(), 2);\n\n    const service = 's3';\n\n    _.extend(payload, {\n      'x-amz-algorithm': 'AWS4-HMAC-SHA256',\n      'x-amz-credential': [\n        directive[this.accessId],\n        today,\n        directive.region,\n        service,\n        'aws4_request',\n      ].join('/'),\n      'x-amz-date': `${today}T000000Z`,\n    });\n\n    const matchedPolicy = policy.match(payload);\n    const base64Policy = matchedPolicy.stringify();\n    const jsonPolicy = JSON.parse(matchedPolicy.stringify('utf-8'));\n\n    payload.policy = base64Policy;\n    payload['x-amz-signature'] = this.signAwsV4(\n      payload.policy,\n      directive[this.secretKey],\n      today,\n      directive.region,\n      service,\n    );\n  },\n\n  /** Generate a AWS Signature Version 4\n   *\n   * @param {String} policy - Base64 encoded policy to sign.\n   * @param {String} secretKey - AWSSecretAccessKey\n   * @param {String} date - Signature date (yyyymmdd)\n   * @param {String} region - AWS Data-Center region\n   * @param {String} service - type of service to use\n   * @returns {String} hex encoded HMAC-256 signature\n   */\n\n  signAwsV4(policy, secretKey, date, region, service) {\n    const dateKey = hmac256(`AWS4${secretKey}`, date);\n    const dateRegionKey = hmac256(dateKey, region);\n    const dateRegionServiceKey = hmac256(dateRegionKey, service);\n    const signingKey = hmac256(dateRegionServiceKey, 'aws4_request');\n\n    return hmac256(signingKey, policy, 'hex');\n  },\n};\n\nexport default exoscaleStorageService;\n","import {\n  PROPERTIES_COLLECTION,\n  BORROWERS_COLLECTION,\n  LOANS_COLLECTION,\n} from '../constants';\nimport {\n  DOCUMENTS,\n  DOCUMENTS_WITH_TOOLTIP,\n  BORROWER_DOCUMENTS,\n  PROPERTY_DOCUMENTS,\n  LOAN_DOCUMENTS,\n} from './fileConstants';\n\nexport const documentHasTooltip = documentId =>\n  !DOCUMENTS_WITH_TOOLTIP.some(id => documentId === id);\n\nconst makeAllObjectDocuments = documents =>\n  Object.values(documents).map(id => ({\n    id,\n    noTooltips: documentHasTooltip(id),\n  }));\n\nexport const allDocuments = ({ doc, collection }) => {\n  const s3Documents = doc.documents\n    ? Object.keys(doc.documents).map(key => ({ id: key }))\n    : [];\n  let documents = [];\n  switch (collection) {\n  case BORROWERS_COLLECTION:\n    documents = makeAllObjectDocuments(BORROWER_DOCUMENTS);\n    break;\n  case PROPERTIES_COLLECTION:\n    documents = makeAllObjectDocuments(PROPERTY_DOCUMENTS);\n    break;\n  case LOANS_COLLECTION:\n    documents = makeAllObjectDocuments(LOAN_DOCUMENTS);\n    break;\n  default:\n    break;\n  }\n\n  const otherAdditionalDocuments = documents.filter(({ id }) => !doc.additionalDocuments.some(document => id === document.id));\n  const legacyCustomDocuments = s3Documents.filter(({ id }) =>\n    !doc.additionalDocuments.some(document => id === document.id)\n      && !documents.some(document => id === document.id));\n\n  return doc.additionalDocuments && doc.additionalDocuments.length > 0\n    ? [\n      ...doc.additionalDocuments,\n      ...otherAdditionalDocuments,\n      ...legacyCustomDocuments,\n    ]\n    : documents;\n};\n\nconst requiredByAdminOnly = ({ requiredByAdmin }) => requiredByAdmin !== false;\n\nconst formatAdditionalDoc = additionalDoc => ({\n  ...additionalDoc,\n  required: true,\n  noTooltips: documentHasTooltip(additionalDoc.id),\n});\n\nconst makeGetDocuments = collection => ({ loan, id }, options = {}) => {\n  const { doc } = options;\n\n  const isLoans = collection === LOANS_COLLECTION;\n  if (!id && !isLoans) {\n    return [];\n  }\n\n  const document = doc || (!isLoans && loan[collection].find(({ _id }) => _id === id)) || loan;\n  const additionalDocumentsExist = document\n    && document.additionalDocuments\n    && document.additionalDocuments.length > 0;\n\n  return [\n    ...(additionalDocumentsExist\n      ? document.additionalDocuments\n        .filter(requiredByAdminOnly)\n        .map(formatAdditionalDoc)\n      : []),\n    { id: DOCUMENTS.OTHER, required: false, noTooltips: true },\n  ];\n};\n\nexport const getPropertyDocuments = makeGetDocuments(PROPERTIES_COLLECTION);\nexport const getBorrowerDocuments = makeGetDocuments(BORROWERS_COLLECTION);\nexport const getLoanDocuments = makeGetDocuments(LOANS_COLLECTION);\n","import { Meteor } from 'meteor/meteor';\n\nexport const FILE_STATUS = {\n  UNVERIFIED: 'UNVERIFIED',\n  VALID: 'VALID',\n  ERROR: 'ERROR',\n};\n\nexport const ALLOWED_FILE_TYPES = [\n  'image/png',\n  'image/jpeg',\n  'application/pdf',\n  'application/vnd.ms-excel',\n  'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n];\n\nexport const ONE_KB = 1024;\n\n// 50 MB (use null for unlimited)\nexport const MAX_FILE_SIZE = 50 * ONE_KB * ONE_KB;\n\nexport const SLINGSHOT_DIRECTIVE_NAME = 'exoscale';\n\nexport const EXOSCALE_PATH = 'sos-ch-dk-2.exo.io';\n\nexport const BUCKET_NAME = Meteor.isServer\n  ? Meteor.settings.storage.bucketName\n  : '';\n\nexport const TEST_BUCKET_NAME = 'e-potek-test-bucket';\n\nexport const OBJECT_STORAGE_PATH = `https://${BUCKET_NAME}.${EXOSCALE_PATH}`;\n\nexport const OBJECT_STORAGE_REGION = 'CH-DK-2';\n\nexport const S3_ENDPOINT = 'https://sos-ch-dk-2.exo.io';\n\nexport const PROPERTY_DOCUMENTS = {\n  COOWNERSHIP_AGREEMENT: 'COOWNERSHIP_AGREEMENT',\n  COOWNERSHIP_ALLOCATION_AGREEMENT: 'COOWNERSHIP_ALLOCATION_AGREEMENT',\n  FIRE_AND_WATER_INSURANCE: 'FIRE_AND_WATER_INSURANCE',\n  INVESTEMENT_PROPERTY_RENTAL_STATEMENT: 'INVESTMENT_PROPERTY_RENTAL_STATEMENT',\n  INVESTEMENT_PROPERTY_SERVICE_CHARGE_SETTLEMENT:\n    'INVESTEMENT_PROPERTY_SERVICE_CHARGE_SETTLEMENT',\n  INVESTEMENT_PROPERTY_WORKS_HISTORY: 'INVESTEMENT_PROPERTY_WORKS_HISTORY',\n  INVESTMENT_PROPERTY_CONDOMINIUM_OWNERSHIP_DIVISION_REGISTER:\n    'INVESTMENT_PROPERTY_CONDOMINIUM_OWNERSHIP_DIVISION_REGISTER',\n  INVESTMENT_PROPERTY_CONDOMINIUM_REGULATION:\n    'INVESTMENT_PROPERTY_CONDOMINIUM_REGULATION',\n  INVESTMENT_PROPERTY_RENT_JUSTIFICATION:\n    'INVESTMENT_PROPERTY_RENT_JUSTIFICATION',\n  LAND_REGISTER_EXTRACT: 'LAND_REGISTER_EXTRACT',\n  PROPERTY_FUTURE_WORKS: 'PROPERTY_FUTURE_WORKS',\n  PROPERTY_MINERGIE_CERTIFICATE: 'PROPERTY_MINERGIE_CERTIFICATE',\n  PROPERTY_MARKETING_BROCHURE: 'PROPERTY_MARKETING_BROCHURE',\n  PROPERTY_PICTURES: 'PROPERTY_PICTURES',\n  PROPERTY_PLANS: 'PROPERTY_PLANS',\n  PROPERTY_VOLUME: 'PROPERTY_VOLUME',\n  PROPERTY_WORKS_QUOTE: 'PROPERTY_WORKS_QUOTE',\n  PURCHASE_CONTRACT: 'PURCHASE_CONTRACT',\n  SHARE_BUILDING_PERMIT: 'SHARE_BUILDING_PERMIT',\n  SHARE_EASEMENTS: 'SHARE_EASEMENTS',\n  SHARE_FINANCIAL_PLAN: 'SHARE_FINANCIAL_PLAN',\n  SHARE_GC_CONTRACT: 'SHARE_GC_CONTRACT',\n  SHARE_GC_QUOTE_BY_BCC: 'SHARE_GC_QUOTE_BY_BCC',\n  SHARE_INSURANCE_CERTIFICATE: 'SHARE_INSURANCE_CERTIFICATE',\n  SHARE_PLANS: 'SHARE_PLANS',\n  SHARE_WORKS: 'SHARE_WORKS',\n};\n\nexport const BORROWER_DOCUMENTS = {\n  BONUSES: 'BONUSES',\n  CURRENT_MORTGAGES_INTERESTS_STATEMENT: 'CURRENT_MORTGAGE_INTERESTS_STATEMENT',\n  CURRENT_MORTGAGES: 'CURRENT_MORTGAGES',\n  DEBT_COLLECTION_REGISTER_EXTRACT: 'DEBT_COLLECTION_REGISTER_EXTRACT',\n  DIVORCE_RULING: 'DIVORCE_RULING',\n  EXPENSES_JUSTIFICATION: 'EXPENSES_JUSTIFICATION',\n  IDENTITY: 'IDENTITY',\n  LAST_SALARIES: 'LAST_SALARIES',\n  LEGITIMATION_CARD: 'LEGITIMATION_CARD',\n  OTHER_FORTUNE_JUSTIFICATION: 'OTHER_FORTUNE_JUSTIFICATION',\n  OTHER_INCOME_JUSTIFICATION: 'OTHER_INCOME_JUSTIFICATION',\n  OWN_COMPANY_COMMERCIAL_REGISTER: 'OWN_COMPANY_COMMERCIAL_REGISTER',\n  OWN_COMPANY_FINANCIAL_STATEMENTS: 'OWN_COMPANY_FINANCIAL_STATEMENTS',\n  OWN_FUNDS_JUSTIFICATION: 'OWN_FUND_JUSTIFICATION',\n  PENSION_FUND_YEARLY_STATEMENT: 'PENSION_FUND_YEARLY_STATEMENT',\n  RESIDENCY_PERMIT: 'RESIDENCY_PERMIT',\n  SALARY_CERTIFICATE: 'SALARY_CERTIFICATE',\n  TAX_STATEMENT: 'TAX_STATEMENT',\n  TAXES: 'TAXES',\n  THIRD_PILLAR_ACCOUNTS: 'THIRD_PILLAR_ACCOUNTS',\n  WITHDRAWAL_JUSTIFICATION: 'WITHDRAWAL_JUSTIFICATION',\n};\n\nexport const LOAN_DOCUMENTS = {\n  CONTRACT: 'CONTRACT',\n  REIMBURSEMENT_STATEMENT: 'REIMBURSEMENT_STATEMENT',\n  SIGNED_CONTRACT: 'SIGNED_CONTRACT',\n  SIGNED_MANDATE: 'SIGNED_MANDATE',\n};\n\nexport const DOCUMENTS = {\n  ...PROPERTY_DOCUMENTS,\n  ...BORROWER_DOCUMENTS,\n  ...LOAN_DOCUMENTS,\n  OTHER: 'OTHER',\n};\n\nexport const DOCUMENTS_CATEGORIES = {\n  PERSONAL_DOCUMENTS: [\n    BORROWER_DOCUMENTS.IDENTITY,\n    BORROWER_DOCUMENTS.RESIDENCY_PERMIT,\n    BORROWER_DOCUMENTS.LEGITIMATION_CARD,\n    BORROWER_DOCUMENTS.DEBT_COLLECTION_REGISTER_EXTRACT,\n    BORROWER_DOCUMENTS.DIVORCE_RULING,\n  ],\n  INCOMES_AND_EXPENSES: [\n    BORROWER_DOCUMENTS.TAXES,\n    BORROWER_DOCUMENTS.SALARY_CERTIFICATE,\n    BORROWER_DOCUMENTS.LAST_SALARIES,\n    BORROWER_DOCUMENTS.BONUSES,\n    BORROWER_DOCUMENTS.OTHER_INCOME_JUSTIFICATION,\n    BORROWER_DOCUMENTS.EXPENSES_JUSTIFICATION,\n    BORROWER_DOCUMENTS.CURRENT_MORTGAGES,\n  ],\n  FORTUNE_AND_OWN_FUNDS: [\n    BORROWER_DOCUMENTS.OWN_FUNDS_JUSTIFICATION,\n    BORROWER_DOCUMENTS.OTHER_FORTUNE_JUSTIFICATION,\n    BORROWER_DOCUMENTS.OWN_COMPANY_FINANCIAL_STATEMENTS,\n  ],\n  RETIREMENT: [\n    BORROWER_DOCUMENTS.PENSION_FUND_YEARLY_STATEMENT,\n    BORROWER_DOCUMENTS.THIRD_PILLAR_ACCOUNTS,\n    BORROWER_DOCUMENTS.WITHDRAWAL_JUSTIFICATION,\n  ],\n  HOUSING: [\n    PROPERTY_DOCUMENTS.PROPERTY_MARKETING_BROCHURE,\n    PROPERTY_DOCUMENTS.PROPERTY_PICTURES,\n    PROPERTY_DOCUMENTS.PROPERTY_PLANS,\n    PROPERTY_DOCUMENTS.PROPERTY_VOLUME,\n    PROPERTY_DOCUMENTS.PROPERTY_MINERGIE_CERTIFICATE,\n    PROPERTY_DOCUMENTS.FIRE_AND_WATER_INSURANCE,\n    PROPERTY_DOCUMENTS.PROPERTY_WORKS_QUOTE,\n    PROPERTY_DOCUMENTS.COOWNERSHIP_AGREEMENT,\n    PROPERTY_DOCUMENTS.COOWNERSHIP_ALLOCATION_AGREEMENT,\n    PROPERTY_DOCUMENTS.PROPERTY_FUTURE_WORKS,\n    PROPERTY_DOCUMENTS.INVESTEMENT_PROPERTY_RENTAL_STATEMENT,\n    PROPERTY_DOCUMENTS.INVESTEMENT_PROPERTY_SERVICE_CHARGE_SETTLEMENT,\n    PROPERTY_DOCUMENTS.PURCHASE_CONTRACT,\n    PROPERTY_DOCUMENTS.LAND_REGISTER_EXTRACT,\n  ],\n  SHARE: [\n    PROPERTY_DOCUMENTS.SHARE_BUILDING_PERMIT,\n    PROPERTY_DOCUMENTS.SHARE_EASEMENTS,\n    PROPERTY_DOCUMENTS.SHARE_FINANCIAL_PLAN,\n    PROPERTY_DOCUMENTS.SHARE_GC_CONTRACT,\n    PROPERTY_DOCUMENTS.SHARE_GC_QUOTE_BY_BCC,\n    PROPERTY_DOCUMENTS.SHARE_INSURANCE_CERTIFICATE,\n    PROPERTY_DOCUMENTS.SHARE_PLANS,\n    PROPERTY_DOCUMENTS.SHARE_WORKS,\n  ],\n};\n\nexport const DOCUMENTS_WITH_TOOLTIP = [\n  DOCUMENTS.BONUSES,\n  DOCUMENTS.BUYERS_CONTRACT,\n  DOCUMENTS.COOWNERSHIP_AGREEMENT,\n  DOCUMENTS.COOWNERSHIP_ALLOCATION_AGREEMENT,\n  DOCUMENTS.CURRENT_MORTGAGES,\n  DOCUMENTS.DEBT_COLLECTION_REGISTER_EXTRACT,\n  DOCUMENTS.EXPENSES_JUSTIFICATION,\n  DOCUMENTS.FIRE_AND_WATER_INSURANCE,\n  DOCUMENTS.IDENTITY,\n  DOCUMENTS.INVESTEMENT_PROPERTY_RENTAL_STATEMENT,\n  DOCUMENTS.INVESTEMENT_PROPERTY_SERVICE_CHARGE_SETTLEMENT,\n  DOCUMENTS.PURCHASE_CONTRACT,\n  DOCUMENTS.LAST_SALARIES,\n  DOCUMENTS.LEGITIMATION_CARD,\n  DOCUMENTS.OTHER_INCOME_JUSTIFICATION,\n  DOCUMENTS.OTHER_FORTUNE_JUSTIFICATION,\n  DOCUMENTS.OWN_COMPANY_FINANCIAL_STATEMENTS,\n  DOCUMENTS.OWN_FUNDS_JUSTIFICATION,\n  DOCUMENTS.PENSION_FUND_YEARLY_STATEMENT,\n  DOCUMENTS.PROPERTY_MARKETING_BROCHURE,\n  DOCUMENTS.PROPERTY_PICTURES,\n  DOCUMENTS.PROPERTY_VOLUME,\n  DOCUMENTS.PROPERTY_WORKS_QUOTE,\n  DOCUMENTS.PROPERTY_FUTURE_WORKS,\n  DOCUMENTS.REIMBURSEMENT_STATEMENT,\n  DOCUMENTS.RESIDENCY_PERMIT,\n  DOCUMENTS.SIGNED_CONTRACT,\n  DOCUMENTS.TAXES,\n  DOCUMENTS.THIRD_PILLAR_ACCOUNTS,\n  DOCUMENTS.WITHDRAWAL_JUSTIFICATION,\n];\n\nexport const S3_ACLS = {\n  PRIVATE: 'private',\n  PUBLIC_READ: 'public-read',\n  PUBLIC_READ_WRITE: 'public-read-write',\n  AUTHENTICATED_READ: 'authenticated-read',\n  BUCKET_OWNER_READ: 'bucket-owner-read',\n  BUCKET_OWNER_FULL_CONTROL: 'bucket-owner-full-control',\n  LOG_DELIVERY_WRITE: 'log-delivery-write',\n};\n","// @flow\nimport { getPercent } from '../../utils/general';\nimport { FILE_STATUS } from './fileConstants';\n\nconst documentIsRequired = required => required !== false;\n\nconst getDocumentsToCount = (\n  documentArray: Array<Object>,\n  doc: Object,\n  checkDocumentStatus?: boolean,\n): Array<Object> => {\n  if (!doc || !doc.documents) {\n    return [undefined];\n  }\n  const { documents } = doc;\n\n  return documentArray.reduce(\n    (documentsToCount, { required, id: documentId }) => {\n      if (!documentIsRequired(required)) {\n        // Don't count this document\n        return documentsToCount;\n      }\n\n      if (!documents[documentId]) {\n        // No document has been added yet, count this one, and as todo\n        return [...documentsToCount, undefined];\n      }\n\n      if (checkDocumentStatus) {\n        // Make sure all documents have a valid status\n        const allFilesAreValid = documents[documentId].every(({ status }) => status === FILE_STATUS.VALID);\n        return [...documentsToCount, allFilesAreValid ? true : undefined];\n      }\n\n      return [...documentsToCount, documents[documentId]];\n    },\n    [],\n  );\n};\n\n/**\n * filesPercent - Determines the completion rate of file upload for a given\n * step, doc and array of files\n *\n * @param {object} doc           The mongoDB document where files are saved\n * @param {function} fileArray   Array of files\n\n *\n * @return {number} a value between 0 and 1 indicating the percentage of\n * completion, 1 is complete, 0 is not started\n */\nexport const filesPercent = ({ fileArray, doc, checkValidity }) => {\n  const documentsToCount = getDocumentsToCount(fileArray, doc, checkValidity);\n  return {\n    percent: getPercent(documentsToCount),\n    count: documentsToCount.length,\n  };\n};\n\nconst documentExists = (doc, id) =>\n  doc && doc.documents && doc.documents[id] && doc.documents[id].length > 0;\n\nexport const getMissingDocumentIds = ({ fileArray, doc }) => {\n  const ids = fileArray\n    .filter(({ required, id }) =>\n      documentIsRequired(required) && !documentExists(doc, id))\n    .map(({ id }) => id);\n  return ids;\n};\n","import { Slingshot } from 'meteor/edgee:slingshot';\nimport {\n  SLINGSHOT_DIRECTIVE_NAME,\n  ALLOWED_FILE_TYPES,\n  MAX_FILE_SIZE,\n} from './fileConstants';\n\nSlingshot.fileRestrictions(SLINGSHOT_DIRECTIVE_NAME, {\n  allowedFileTypes: ALLOWED_FILE_TYPES,\n  maxSize: MAX_FILE_SIZE,\n});\n","import { Method } from '../methods/methods';\n\nexport const deleteFile = new Method({\n  name: 'deleteFile',\n  params: {\n    collection: String,\n    docId: String,\n    fileKey: String,\n  },\n});\n\nexport const setFileStatus = new Method({\n  name: 'setFileStatus',\n  params: {\n    fileKey: String,\n    newStatus: String,\n  },\n});\n\nexport const setFileError = new Method({\n  name: 'setFileError',\n  params: {\n    error: String,\n    fileKey: String,\n  },\n});\n\nexport const downloadFile = new Method({\n  name: 'downloadFile',\n  params: {\n    key: String,\n  },\n});\n\nexport const getSignedUrl = new Method({\n  name: 'getSignedUrl',\n  params: {\n    key: String,\n  },\n});\n\nexport const updateDocumentsCache = new Method({\n  name: 'updateDocumentsCache',\n  params: {\n    docId: String,\n    collection: String,\n  },\n});\n","import { Meteor } from 'meteor/meteor';\nimport { BaseResultCacher } from 'meteor/cultofcoders:grapher';\nimport { EJSON } from 'meteor/ejson';\nimport hashObject from 'object-hash';\n\nconst cloneDeep = require('lodash/cloneDeep');\n\nconst DEFAULT_TTL = 1000 * 60 * 60; // 1 hour\n\nexport default class QueryCacher extends BaseResultCacher {\n  constructor(config = {}) {\n    super(config);\n    this.store = {};\n  }\n\n  generateQueryId(queryName, params) {\n    // Store the queryname for reuse later\n    if (!this.queryName) {\n      this.queryName = queryName;\n    }\n    return `${queryName}::${EJSON.stringify(params)}`;\n  }\n\n  getHash(cacheId) {\n    const params = EJSON.parse(cacheId.split('::')[1]);\n    const { getDataToHash = () => null } = this.config;\n\n    const dataToHash = getDataToHash(params);\n    return hashObject.MD5(dataToHash);\n  }\n\n  fetch(cacheId, { query, countCursor }) {\n    const cacheData = this.store[cacheId];\n    const hash = this.getHash(cacheId);\n\n    if (cacheData !== undefined) {\n      const { hash: cachedHash, data } = cacheData;\n\n      if (hash === cachedHash) {\n        return cloneDeep(data);\n      }\n    }\n\n    const data = BaseResultCacher.fetchData({ query, countCursor }); // this.fetchData is not a function\n    this.storeData({ cacheId, data, hash });\n\n    return data;\n  }\n\n  invalidateCache(cacheId) {\n    delete this.store[cacheId];\n  }\n\n  cacheExists(cacheId) {\n    return !!this.store[cacheId];\n  }\n\n  setCache(cacheId, cacheData) {\n    this.store[cacheId] = cacheData;\n  }\n\n  findAndInvalidateCache(params) {\n    const cacheId = this.generateQueryId(this.queryName, params);\n    if (this.cacheExists(cacheId)) {\n      this.invalidateCache(cacheId);\n    }\n  }\n\n  storeData({ cacheId, data, hash }) {\n    const ttl = this.config.ttl || DEFAULT_TTL;\n    this.setCache(cacheId, { data: cloneDeep(data), hash });\n\n    Meteor.setTimeout(() => {\n      this.invalidateCache(cacheId);\n    }, ttl);\n  }\n}\n","import { Meteor } from 'meteor/meteor';\nimport SecurityService from '../../security';\n\nexport const checkInsertUserId = (userId) => {\n  if (userId === undefined) {\n    return Meteor.userId();\n  }\n  if (userId) {\n    SecurityService.checkCurrentUserIsAdmin();\n    return userId;\n  }\n\n  SecurityService.handleUnauthorized('Unauthorized insert');\n};\n","import { Meteor } from 'meteor/meteor';\n\nclass CollectionService {\n  constructor(collection) {\n    if (!collection) {\n      throw new Error('A collection is needed in CollectionService, but none was passed');\n    }\n    this.collection = collection;\n  }\n\n  insert(object = {}) {\n    return this.collection.insert(object);\n  }\n\n  _update({ id, object, operator = '$set' }) {\n    if (Object.keys(object).length > 0) {\n      // debugger;\n      return this.collection.update(id, { [operator]: object });\n    }\n    return null;\n  }\n\n  baseUpdate(...args) {\n    return this.collection.update(...args);\n  }\n\n  remove(...args) {\n    return this.collection.remove(...args);\n  }\n\n  get(id) {\n    return this.collection.findOne(id);\n  }\n\n  safeGet(id) {\n    const result = this.get(id);\n\n    if (!result) {\n      throw new Meteor.Error(`Could not find object with id \"${id}\" in collection \"${\n        this.collection._name\n      }\"`);\n    }\n\n    return result;\n  }\n\n  find(...args) {\n    return this.collection.find(...args);\n  }\n\n  findOne(...args) {\n    return this.collection.findOne(...args);\n  }\n\n  checkQuery(body) {\n    if (body && body.$filter) {\n      throw new Meteor.Error('$filter found in query body, did you mean $filters?');\n    }\n  }\n\n  createQuery(...args) {\n    this.checkQuery(args[0]);\n    return this.collection.createQuery(...args);\n  }\n\n  fetchOne(...args) {\n    this.checkQuery(args[0]);\n    return this.createQuery(...args).fetchOne();\n  }\n\n  safeFetchOne(...args) {\n    const { $filters = {} } = args.find(arg => arg.$filters);\n    const result = this.fetchOne(...args);\n\n    if (!result) {\n      throw new Meteor.Error(`Could not find object with filters \"${JSON.stringify($filters)}\" in collection \"${this.collection._name}\"`);\n    }\n\n    return result;\n  }\n\n  fetch(...args) {\n    this.checkQuery(args[0]);\n    return this.createQuery(...args).fetch();\n  }\n\n  getLink(...args) {\n    return this.collection.getLink(...args);\n  }\n\n  count(...args) {\n    this.checkQuery(args[0]);\n    return this.createQuery(...args).getCount();\n  }\n\n  countAll() {\n    return this.find({}).count();\n  }\n\n  getAll() {\n    return this.find({}).fetch();\n  }\n\n  get rawCollection() {\n    return this.collection.rawCollection();\n  }\n\n  exists(_id) {\n    return !!(_id && this.findOne({ _id }, { fields: { _id: 1 } }));\n  }\n\n  aggregate(...args) {\n    return this.rawCollection.aggregate(...args);\n  }\n\n  // Don't return the results from linker\n  addLink({ id, linkName, linkId, metadata = {} }) {\n    const linker = this.collection.getLink(id, linkName);\n    const {\n      linker: { strategy },\n    } = linker;\n\n    switch (strategy) {\n    case 'one':\n      linker.set(linkId);\n      return;\n    case 'many':\n      linker.add(linkId);\n      return;\n    case 'one-meta':\n      linker.set(linkId, metadata);\n      return;\n    case 'many-meta':\n      linker.add(linkId, metadata);\n      return;\n    default:\n      return null;\n    }\n  }\n\n  // Don't return the results from linker\n  removeLink({ id, linkName, linkId }) {\n    const linker = this.getLink(id, linkName);\n    const {\n      linker: { strategy },\n    } = linker;\n\n    switch (strategy.split('-')[0]) {\n    case 'one':\n      linker.unset(linkId);\n      return;\n    case 'many':\n      linker.remove(linkId);\n      return;\n    default:\n      return null;\n    }\n  }\n\n  updateLinkMetadata({ id, linkName, linkId, metadata }) {\n    const linker = this.getLink(id, linkName);\n    const {\n      linker: { strategy },\n    } = linker;\n\n    switch (strategy.split('-')[0]) {\n    case 'one':\n      linker.metadata(metadata);\n      return;\n    case 'many':\n      linker.metadata(linkId, metadata);\n      return;\n    default:\n      return null;\n    }\n  }\n\n  getAssignedEmployee({ id }) {\n    const { assignee } = this.fetchOne({ $filters: { _id: id }, assignee: 1 });\n\n    return assignee;\n  }\n\n  getAdditionalDocLabel({ label, additionalDoc }) {\n    if (label) {\n      return label;\n    }\n    if (additionalDoc.label) {\n      return additionalDoc.label;\n    }\n\n    return undefined;\n  }\n\n  setAdditionalDoc({ id, additionalDocId, requiredByAdmin, label, category }) {\n    const { additionalDocuments } = this.get(id);\n\n    const additionalDoc = additionalDocuments.find(doc => doc.id === additionalDocId);\n\n    if (additionalDoc) {\n      const additionalDocumentsUpdate = [\n        ...additionalDocuments.filter(doc => doc.id !== additionalDocId),\n        {\n          id: additionalDocId,\n          requiredByAdmin,\n          label: this.getAdditionalDocLabel({ label, additionalDoc }),\n          category,\n        },\n      ];\n      return this._update({\n        id,\n        object: { additionalDocuments: additionalDocumentsUpdate },\n      });\n    }\n\n    return this._update({\n      id,\n      object: {\n        additionalDocuments: [\n          ...additionalDocuments,\n          { id: additionalDocId, requiredByAdmin, label, category },\n        ],\n      },\n    });\n  }\n\n  removeAdditionalDoc({ id: docId, additionalDocId }) {\n    const { additionalDocuments = [] } = this.get(docId);\n    return this._update({\n      id: docId,\n      object: {\n        additionalDocuments: additionalDocuments.filter(({ id }) => id !== additionalDocId),\n      },\n    });\n  }\n}\n\nexport default CollectionService;\n","import { Meteor } from 'meteor/meteor';\n\nimport { Loans, Borrowers, Offers, Properties, Tasks, Users } from '..';\nimport {\n  LOANS_COLLECTION,\n  BORROWERS_COLLECTION,\n  PROPERTIES_COLLECTION,\n} from '../constants';\n\nexport const getDocFromCollection = (collectionName, docId) => {\n  let collection;\n  switch (collectionName) {\n  case 'loans':\n    collection = Loans;\n    break;\n  case 'borrowers':\n    collection = Borrowers;\n    break;\n  case 'properties':\n    collection = Properties;\n    break;\n  case 'offers':\n    collection = Offers;\n    break;\n  case 'tasks':\n    collection = Tasks;\n    break;\n  case 'users':\n    collection = Users;\n    break;\n  default:\n    break;\n  }\n\n  return collection.findOne(docId);\n};\n\nexport const getIdFieldNameFromCollection = collectionName =>\n  ({\n    [LOANS_COLLECTION]: 'loanId',\n    [BORROWERS_COLLECTION]: 'borrowerId',\n    [PROPERTIES_COLLECTION]: 'propertyId',\n  }[collectionName]);\n\nexport const getCollectionNameFromIdField = idFieldName =>\n  ({\n    loanId: LOANS_COLLECTION,\n    borrowerId: BORROWERS_COLLECTION,\n    propertyId: PROPERTIES_COLLECTION,\n  }[idFieldName]);\n\nexport const createMeteorAsyncFunction = promiseFunc =>\n  Meteor.wrapAsync((params, callback) =>\n    promiseFunc(params)\n      .then(result => callback(null, result))\n      .catch(callback));\n\nexport const flattenObject = (object, delimiter) => {\n  const delim = delimiter || '.';\n  let flattened = {};\n\n  Object.keys(object).forEach((key) => {\n    const val = object[key];\n    if (val instanceof Object && !(val instanceof Array)) {\n      const strip = flattenObject(val);\n      Object.keys(strip).forEach((k) => {\n        const v = strip[k];\n        flattened = { ...flattened, [`${key}${delim}${k}`]: v };\n      });\n    } else {\n      flattened = { ...flattened, [key]: val };\n    }\n  });\n\n  return flattened;\n};\n\nexport const getUserOrganisationName = ({ user }) => {\n  const { organisations = [] } = user;\n  const organisationName = !!organisations.length && organisations[0].name;\n  return organisationName;\n};\n\nexport const getUserNameAndOrganisation = ({ user }) => {\n  const { name, organisations = [] } = user;\n  const organisationName = !!organisations.length && organisations[0].name;\n  return organisationName ? `${name} (${organisationName})` : name;\n};\n\nconst isReferredByOrganisation = ({ organisations, referredByOrganisation }) =>\n  organisations.some(({ _id }) => referredByOrganisation._id === _id);\nconst isReferredByOrganisationUser = ({ organisationUsers, referredByUser }) =>\n  organisationUsers.some(({ _id }) => referredByUser._id === _id);\n\nexport const getReferredBy = ({ user, proUser = {}, isAdmin }) => {\n  if (!user) {\n    return { raw: null, label: '' };\n  }\n\n  const { organisations = [] } = proUser;\n  const organisationUsers = organisations.length ? organisations[0].users : [];\n  const { referredByUser = {}, referredByOrganisation = {} } = user;\n\n  let label = 'Déjà référé';\n\n  if (\n    isAdmin\n    || isReferredByOrganisation({ organisations, referredByOrganisation })\n    || isReferredByOrganisationUser({ organisationUsers, referredByUser })\n  ) {\n    label = getUserNameAndOrganisation({ user: referredByUser });\n  }\n\n  return { raw: referredByUser.name, label };\n};\n\nexport const sortObject = (object) => {\n  if (!object || typeof object !== 'object' || object instanceof Array) {\n    return object;\n  }\n\n  const sortedObject = {};\n  const keys = Object.keys(object);\n\n  keys.sort();\n\n  keys.forEach((key) => {\n    sortedObject[key] = sortObject(object[key]);\n  });\n\n  return sortedObject;\n};\n","export * from './helpers';\nexport * from './mongoHelpers';\n","export const generateMatchAllWordsRegexp = words =>\n  `${words.map(word => `(?=.*${word})`).join('')}.+`;\n\nexport const generateMatchAnyWordRegexp = string =>\n  string.trim().replace(/\\s+/g, '|');\n\nexport const splitStringIntoWords = string => string.trim().split(/\\s+/);\n\nexport const createRegexQuery = (fieldName, searchQuery) => {\n  const searchQueryWords = splitStringIntoWords(searchQuery);\n  const containsMultipleWords = searchQueryWords.length > 1;\n\n  if (containsMultipleWords) {\n    return {\n      [fieldName]: {\n        $regex: generateMatchAllWordsRegexp(searchQueryWords),\n        $options: 'gi',\n      },\n    };\n  }\n\n  return { [fieldName]: { $regex: searchQuery.trim(), $options: 'ix' } };\n};\n\nexport const createSearchFilters = (searchFieldsArray, searchQuery) => {\n  if (searchFieldsArray.length > 1) {\n    // multiple fields to match\n    return {\n      $or: searchFieldsArray.map(searchField =>\n        createRegexQuery(searchField, searchQuery)),\n    };\n  }\n  // single field to match\n  const fieldName = searchFieldsArray[0];\n  return createRegexQuery(fieldName, searchQuery);\n};\n","import { Mongo } from 'meteor/mongo';\n\nconst getOldCustomDocuments = ({\n  additionalDocuments,\n  initialDocuments,\n  conditionalDocuments,\n}) =>\n  additionalDocuments\n    .filter(document =>\n      document.requiredByAdmin === undefined\n        && !initialDocuments.some(({ id }) => id === document.id)\n        && !conditionalDocuments.some(({ id }) => id === document.id))\n    .map(document => ({ ...document, requiredByAdmin: true }));\n\nconst keepInitialDocuments = ({ additionalDocuments, initialDocuments }) =>\n  additionalDocuments.filter(document =>\n    initialDocuments.some(({ id }) => id === document.id && document.requiredByAdmin === undefined));\n\nconst otherInitialDocuments = ({ initialDocuments, additionalDocuments }) =>\n  initialDocuments.filter(({ id }) => !additionalDocuments.some(document => document.id === id));\n\nconst otherAdditionalDocuments = ({ additionalDocuments }) =>\n  additionalDocuments.filter(({ requiredByAdmin }) => requiredByAdmin !== undefined);\n\nconst getDocumentsToAdd = ({\n  additionalDocuments,\n  conditionalDocuments,\n  doc,\n}) =>\n  conditionalDocuments.reduce((docs, { id, condition }) => {\n    const document = additionalDocuments.find(additionalDocument => additionalDocument.id === id);\n\n    if (document && document.requiredByAdmin !== undefined) {\n      return docs;\n    }\n    // Insert conditional documents\n    if (condition({ doc })) {\n      return [...docs, { id }];\n    }\n\n    return docs;\n  }, []);\n\nexport const additionalDocumentsHook = ({\n  collection,\n  initialDocuments,\n  conditionalDocuments,\n}) => (userId, doc) => {\n  let documents = [];\n  const { additionalDocuments = [] } = doc || {};\n  if (additionalDocuments.length === 0) {\n    documents = initialDocuments;\n  } else {\n    const oldCustomDocuments = getOldCustomDocuments({\n      additionalDocuments,\n      initialDocuments,\n      conditionalDocuments,\n    });\n\n    documents = keepInitialDocuments({ additionalDocuments, initialDocuments });\n\n    documents = [\n      ...otherInitialDocuments({ initialDocuments, additionalDocuments }),\n      ...oldCustomDocuments,\n      ...documents,\n      ...otherAdditionalDocuments({ additionalDocuments }),\n    ];\n  }\n\n  // Check conditional documents\n  const documentsToAdd = getDocumentsToAdd({\n    additionalDocuments,\n    conditionalDocuments,\n    doc,\n  });\n\n  documents = [...documents, ...documentsToAdd];\n\n  // Update document\n  Mongo.Collection.get(collection).direct.update(doc._id, {\n    $set: { additionalDocuments: documents },\n  });\n};\n","export const MORTGAGE_NOTE_TYPES = {\n  PAPER: 'PAPER',\n  REGISTRAR: 'REGISTRAR',\n};\n\nexport const MORTGAGE_NOTE_CATEGORIES = {\n  BEARER: 'BEARER',\n  REGISTERED: 'REGISTERED',\n};\n","import SimpleSchema from 'simpl-schema';\n\nimport { CUSTOM_AUTOFIELD_TYPES } from 'core/components/AutoForm2/constants';\nimport { CANTONS } from '../loans/loanConstants';\nimport zipcodes from '../../utils/zipcodes';\n\nexport const createdAt = {\n  type: Date,\n  autoValue() {\n    if (this.isInsert) {\n      return new Date();\n    }\n    this.unset();\n  },\n  optional: true,\n};\n\nexport const updatedAt = {\n  type: Date,\n  autoValue() {\n    if (this.isUpdate || this.isInsert || this.isUpsert) {\n      return new Date();\n    }\n  },\n  optional: true,\n};\n\nexport const additionalDocuments = initialDocuments => ({\n  additionalDocuments: { type: Array, defaultValue: initialDocuments },\n  'additionalDocuments.$': Object,\n  'additionalDocuments.$.id': String,\n  'additionalDocuments.$.label': { type: String, optional: true },\n  'additionalDocuments.$.requiredByAdmin': { type: Boolean, optional: true },\n  'additionalDocuments.$.category': { type: String, optional: true },\n});\n\nexport const address = {\n  address1: { type: String, optional: true },\n  address2: { type: String, optional: true },\n  zipCode: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 1000,\n    max: 99999,\n  },\n  city: { type: String, optional: true },\n  canton: {\n    type: String,\n    allowedValues: Object.keys(CANTONS),\n    optional: true,\n    autoValue() {\n      return zipcodes(this.field('zipCode').value);\n    },\n    uniforms: { placeholder: null },\n  },\n};\n\nexport const contactsSchema = {\n  contacts: { type: Array, defaultValue: [] },\n  'contacts.$': Object,\n  'contacts.$.name': { type: String, uniforms: { label: 'Prénom Nom' } },\n  'contacts.$.title': { type: String, uniforms: { label: 'Fonction/Titre' } },\n  'contacts.$.email': {\n    type: String,\n    regEx: SimpleSchema.RegEx.Email,\n    optional: true,\n  },\n  'contacts.$.phoneNumber': {\n    type: String,\n    uniforms: { label: 'No. de Téléphone' },\n    optional: true,\n  },\n};\n\nexport const makePermissions = ({\n  permissionsSchema,\n  prefix,\n  autoFormDisplayCondition = () => true,\n  autoFormLabel,\n}) =>\n  Object.keys(permissionsSchema).reduce(\n    (permissions, key) => ({\n      ...permissions,\n      [`${prefix}.${key}`]: permissionsSchema[key],\n    }),\n    {\n      [prefix]: {\n        type: Object,\n        optional: true,\n        condition: autoFormDisplayCondition,\n        uniforms: { label: autoFormLabel || prefix },\n      },\n    },\n  );\n\nexport const userLinksSchema = permissionsSchema => ({\n  userLinks: { type: Array, defaultValue: [] },\n  'userLinks.$': Object,\n  'userLinks.$._id': { type: String, optional: true },\n  ...(permissionsSchema\n    ? makePermissions({ permissionsSchema, prefix: 'userLinks.$.permissions' })\n    : {}),\n});\n\nexport const mortgageNoteLinks = {\n  mortgageNoteLinks: { type: Array, optional: true },\n  'mortgageNoteLinks.$': Object,\n  'mortgageNoteLinks.$._id': { type: String, optional: true },\n};\n\nexport const roundedInteger = (digits) => {\n  const rounder = 10 ** digits;\n  return {\n    type: SimpleSchema.Integer,\n    min: 0,\n    max: 1000000000,\n    autoValue() {\n      if (this.isSet) {\n        return Math.round(this.value / rounder) * rounder;\n      }\n    },\n    optional: true,\n  };\n};\n\nexport const percentageField = {\n  type: Number,\n  min: -1,\n  max: 1,\n  optional: true,\n  autoValue() {\n    if (this.isSet) {\n      return Math.round(Number(this.value) * 10000) / 10000;\n    }\n  },\n  uniforms: { type: CUSTOM_AUTOFIELD_TYPES.PERCENT, placeholder: '0.00%' },\n};\n\nexport const moneyField = {\n  type: SimpleSchema.Integer,\n  min: 0,\n  max: 1000000000,\n  optional: true,\n  uniforms: { type: CUSTOM_AUTOFIELD_TYPES.MONEY },\n};\n\nexport const decimalMoneyField = {\n  ...moneyField,\n  type: Number,\n  uniforms: { type: CUSTOM_AUTOFIELD_TYPES.MONEY_DECIMAL },\n};\n\nexport const documentsField = {\n  type: Object,\n  defaultValue: {},\n  optional: true,\n  blackbox: true,\n};\n\nexport const dateField = {\n  type: Date,\n  optional: true,\n  uniforms: { type: CUSTOM_AUTOFIELD_TYPES.DATE },\n};\n\nexport const cacheField = {\n  type: Object,\n  optional: true,\n  blackbox: true,\n};\n","import { Meteor } from 'meteor/meteor';\nimport { Accounts } from 'meteor/accounts-base';\nimport Users from '../../users';\nimport Security from '../../security';\n\nclass ImpersonateService {\n  /**\n   * Impersonates the user\n   * @param {*} context The context of a given meteor method\n   * @param {*} authToken The token received from client\n   * @param {*} userIdToImpersonate\n   */\n  impersonate({ context, authToken, userIdToImpersonate }) {\n    const user = this._findUserByToken(authToken);\n\n    if (user) {\n      this._checkRolesForImpersonation(user._id);\n    } else {\n      this._throwNotAuthorized();\n    }\n\n    context.setUserId(userIdToImpersonate);\n    return Users.findOne(userIdToImpersonate);\n  }\n\n  _throwNotAuthorized() {\n    throw new Meteor.Error(401, 'Unauthorized');\n  }\n\n  _checkRolesForImpersonation(userId) {\n    if (!Security.isUserAdmin(userId)) {\n      this._throwNotAuthorized();\n    }\n  }\n\n  /**\n   * @param {string} authToken\n   * @returns {object|null}\n   */\n  _findUserByToken(authToken) {\n    // eslint-disable-next-line\n    const hashedToken = Accounts._hashLoginToken(authToken);\n\n    return Users.findOne(\n      { 'services.resume.loginTokens.hashedToken': hashedToken },\n      // We just need to check the validity, no need for other data\n      { fields: { _id: 1 } },\n    );\n  }\n\n  impersonateAdmin({ context, userIdToImpersonate }) {\n    context.setUserId(userIdToImpersonate);\n  }\n}\n\nexport default new ImpersonateService();\n","import SecurityService from 'core/api/security/index';\nimport { impersonateUser, impersonateAdmin } from '../methodDefinitions';\nimport ImpersonateService from './ImpersonateService';\n\nimpersonateUser.setHandler((context, { authToken, userId }) => {\n  const impersonatedUser = ImpersonateService.impersonate({\n    context,\n    authToken,\n    userIdToImpersonate: userId,\n  });\n\n  return impersonatedUser;\n});\n\nimpersonateAdmin.setHandler((context, { userId }) => {\n  SecurityService.checkUserIsDev(context.userId);\n  const impersonatedUser = ImpersonateService.impersonateAdmin({\n    context,\n    userIdToImpersonate: userId,\n  });\n\n  return impersonatedUser;\n});\n","import { Method } from '../methods/methods';\n\nexport const impersonateUser = new Method({\n  name: 'impersonateUser',\n  params: {\n    authToken: String,\n    userId: String,\n  },\n});\n\nexport const impersonateAdmin = new Method({\n  name: 'impersonateAdmin',\n  params: {\n    userId: String,\n  },\n});\n","import SimpleSchema from 'simpl-schema';\nimport {\n  createdAt,\n  updatedAt,\n  percentageField,\n} from '../../helpers/sharedSchemas';\nimport { TRENDS, INTEREST_RATES } from '../interestRatesConstants';\n\nconst singleInterestRate = type => ({\n  [type]: { type: Object, optional: true, defaultValue: {} },\n  [`${type}.rateLow`]: percentageField,\n  [`${type}.rateHigh`]: percentageField,\n  [`${type}.trend`]: {\n    type: String,\n    allowedValues: Object.values(TRENDS),\n    optional: true,\n  },\n});\n\nconst rates = Object.values(INTEREST_RATES).reduce(\n  (interestRates, type) => ({ ...interestRates, ...singleInterestRate(type) }),\n  {},\n);\n\nconst InterestRatesSchema = new SimpleSchema({\n  createdAt,\n  updatedAt,\n  date: Date,\n  ...rates,\n});\n\nexport default InterestRatesSchema;\n","import InterestRates from '../interestRates';\nimport CollectionService from '../../helpers/CollectionService';\n\nclass InterestRatesService extends CollectionService {\n  constructor() {\n    super(InterestRates);\n  }\n}\n\nexport default new InterestRatesService();\n","import moment from 'moment';\n\nimport { exposeQuery } from '../../queries/queryHelpers';\nimport { currentInterestRates, interestRates } from '../queries';\nimport { INTEREST_RATES } from '../interestRatesConstants';\n\nexposeQuery({\n  query: currentInterestRates,\n  overrides: {\n    firewall(userId) {},\n    embody(body) {\n      body.$filter = ({ filters }) => {\n        filters.date = { $lte: moment().toDate() };\n      };\n      body.$options = { sort: { date: -1 }, limit: 1 };\n    },\n  },\n});\n\nexposeQuery({\n  query: interestRates,\n  options: { allowFilterById: true },\n  overrides: {\n    firewall(userId) {},\n    embody(body) {\n      body.$postFilter = (rates = []) =>\n        rates.map((rate) => {\n          const { _id, date } = rate;\n          return Object.values(INTEREST_RATES).reduce(\n            (formattedRate, key) => ({\n              ...formattedRate,\n              [key]: rate[key] || {},\n            }),\n            { _id, date },\n          );\n        });\n    },\n  },\n});\n","import SecurityService from '../../security';\nimport InterestRatesService from './InterestRatesService';\nimport {\n  interestRatesInsert,\n  interestRatesRemove,\n  interestRatesUpdate,\n} from '../methodDefinitions';\n\ninterestRatesInsert.setHandler((context, { interestRates }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return InterestRatesService.insert(interestRates);\n});\n\ninterestRatesRemove.setHandler((context, { interestRatesId }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return InterestRatesService.remove(interestRatesId);\n});\n\ninterestRatesUpdate.setHandler((context, { interestRatesId, object }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return InterestRatesService._update({ id: interestRatesId, object });\n});\n","import { TRENDS } from './interestRatesConstants';\n\nconst randInArray = array => array[Math.floor(Math.random() * array.length)];\n\nexport const getRandomInterestRate = (mean) => {\n  const rateLow = (mean - Math.random() * 0.2) / 100;\n  const rateHigh = (mean + Math.random() * 0.2) / 100;\n  const trend = randInArray(Object.values(TRENDS));\n  return { rateLow, rateHigh, trend };\n};\n","export * from './methodDefinitions';\nexport { default } from './interestRates';\n","import { Mongo } from 'meteor/mongo';\n\nimport InterestRatesSchema from './schemas/interestRatesSchema';\nimport { INTEREST_RATES_COLLECTION } from './interestRatesConstants';\n\nconst InterestRates = new Mongo.Collection(INTEREST_RATES_COLLECTION);\n\nInterestRates.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true,\n});\n\nInterestRates.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false,\n});\n\nInterestRates.attachSchema(InterestRatesSchema);\nexport default InterestRates;\n","export const INTEREST_TREND = {\n  UP: 'UP',\n  DOWN: 'DOWN',\n};\n\nexport const INTEREST_RATES_COLLECTION = 'interestRates';\n\nexport const TRENDS = {\n  UP: 'UP',\n  DOWN: 'DOWN',\n  FLAT: 'FLAT',\n};\n\nexport const INTEREST_RATES = {\n  LIBOR: 'interestLibor',\n  YEARS_1: 'interest1',\n  YEARS_2: 'interest2',\n  YEARS_5: 'interest5',\n  YEARS_10: 'interest10',\n  YEARS_15: 'interest15',\n  YEARS_20: 'interest20',\n  YEARS_25: 'interest25',\n};\n\nexport const INTEREST_RATES_QUERIES = {\n  INTEREST_RATES: 'INTEREST_RATES',\n  CURRENT_INTEREST_RATES: 'CURRENT_INTEREST_RATES',\n};\n","import { Method } from '../methods/methods';\n\nexport const interestRatesInsert = new Method({\n  name: 'interestRatesInsert',\n  params: {\n    interestRates: Object,\n  },\n});\n\nexport const interestRatesRemove = new Method({\n  name: 'interestRatesRemove',\n  params: {\n    interestRatesId: String,\n  },\n});\n\nexport const interestRatesUpdate = new Method({\n  name: 'interestRatesUpdate',\n  params: {\n    interestRatesId: String,\n    object: Object,\n  },\n});\n","import {\n  currentInterestRates as currentInterestRatesFragment,\n  interestRates as interestRatesFragment,\n} from '../fragments';\nimport InterestRates from '.';\nimport {\n  INTEREST_RATES_QUERIES,\n  INTEREST_RATES,\n} from './interestRatesConstants';\n\nconst makeCheckIsRate = rates => type =>\n  rates[type].rateLow && rates[type].rateHigh && rates[type].trend;\n\nconst makeFormatRate = rates => type => ({\n  type,\n  rateLow: rates[type].rateLow,\n  rateHigh: rates[type].rateHigh,\n  trend: rates[type].trend,\n});\n\nconst sortRates = ({ type: a }, { type: b }) =>\n  Object.values(INTEREST_RATES).indexOf(a)\n  - Object.values(INTEREST_RATES).indexOf(b);\n\nconst getAverageRates = rates =>\n  rates.reduce(\n    (avgRates, { type, rateLow, rateHigh }) => ({\n      ...avgRates,\n      [type]: (rateLow + rateHigh) / 2,\n    }),\n    {},\n  );\n\nexport const currentInterestRates = InterestRates.createQuery(\n  INTEREST_RATES_QUERIES.CURRENT_INTEREST_RATES,\n  {\n    $postFilter(results) {\n      const interestRates = results.length > 0 && results[0];\n      const cleanedRates = Object.keys(interestRates)\n        .filter(makeCheckIsRate(interestRates))\n        .map(makeFormatRate(interestRates))\n        .sort(sortRates);\n      const averageRates = getAverageRates(cleanedRates);\n\n      return { rates: cleanedRates, averageRates, date: interestRates.date };\n    },\n    ...currentInterestRatesFragment(),\n  },\n);\n\nexport const interestRates = InterestRates.createQuery(\n  INTEREST_RATES_QUERIES.INTEREST_RATES,\n  {\n    ...interestRatesFragment(),\n    $options: { sort: { date: -1 } },\n  },\n);\n","import SimpleSchema from 'simpl-schema';\nimport {\n  createdAt,\n  updatedAt,\n  percentageField,\n} from '../../helpers/sharedSchemas';\n\nconst Irs10ySchema = new SimpleSchema({\n  createdAt,\n  updatedAt,\n  date: Date,\n  rate: { ...percentageField, optional: false },\n});\n\nexport default Irs10ySchema;\n","import { Meteor } from 'meteor/meteor';\nimport Irs10y from '../irs10y';\nimport CollectionService from '../../helpers/CollectionService';\n\nclass Irs10yService extends CollectionService {\n  constructor() {\n    super(Irs10y);\n  }\n\n  insert({ date, rate }) {\n    const start = new Date(date);\n    start.setHours(0, 0, 0, 0);\n\n    const end = new Date(date);\n    end.setHours(23, 59, 59, 999);\n\n    const existingFromToday = this.find({\n      date: { $gte: start, $lt: end },\n    }).fetch();\n\n    if (!existingFromToday || existingFromToday.length === 0) {\n      return super.insert({ date, rate });\n    }\n\n    throw new Meteor.Error('Un taux existe déjà pour cette date');\n  }\n}\n\nexport default new Irs10yService();\n","import { exposeQuery } from '../../queries/queryHelpers';\nimport { irs10y } from '../queries';\n\nexposeQuery({ query: irs10y, options: { allowFilterById: true } });\n","import { Meteor } from 'meteor/meteor';\n\nconst cheerio = require('cheerio');\nconst request = require('request');\n\nconst URL = 'https://kurse.vermoegenszentrum.ch/vermoegenszentrum/details/details.jsp?listingId=211372,433,1';\n\nexport const fetchIrs10y = () =>\n  new Promise((resolve, reject) => {\n    request(URL, (error, response, html) => {\n      if (!error && response.statusCode === 200) {\n        const $ = cheerio.load(html);\n        let result = $('.kum-bht-value').text();\n        result = result.split('%')[0] / 100;\n        resolve(result);\n      }\n      reject(new Meteor.Error(error));\n    });\n  });\n","import { Method } from '../../methods/methods';\nimport SecurityService from '../../security';\nimport { irs10yInsert, irs10yRemove, irs10yUpdate } from '../methodDefinitions';\nimport Irs10yService from './Irs10yService';\nimport { fetchIrs10y } from './fetchIrs10y';\n\nirs10yInsert.setHandler((context, { irs10y }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return Irs10yService.insert(irs10y);\n});\n\nirs10yRemove.setHandler((context, { irs10yId }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return Irs10yService.remove(irs10yId);\n});\n\nirs10yUpdate.setHandler((context, { irs10yId, object }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return Irs10yService._update({ id: irs10yId, object });\n});\n\nexport const irs10yFetch = new Method({\n  name: 'irs10yFetch',\n});\n\nirs10yFetch.setHandler(() =>\n  fetchIrs10y()\n    .then((irs10y) => {\n      Irs10yService.insert({ date: new Date(), rate: irs10y });\n      return { rate: irs10y };\n    })\n    .catch((error) => {\n      throw error;\n    }));\n","export * from './methodDefinitions';\nexport { default } from './irs10y';\n","import { Mongo } from 'meteor/mongo';\n\nimport Irs10ySchema from './schemas/irs10ySchema';\nimport { IRS10Y_COLLECTION } from './irs10yConstants';\n\nconst Irs10y = new Mongo.Collection(IRS10Y_COLLECTION);\n\nIrs10y.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true,\n});\n\nIrs10y.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false,\n});\n\nIrs10y.attachSchema(Irs10ySchema);\nexport default Irs10y;\n","export const IRS10Y_COLLECTION = 'irs10y';\n\nexport const IRS10Y_QUERIES = {\n  IRS10Y: 'IRS10Y',\n};\n","import { Method } from '../methods/methods';\n\nexport const irs10yInsert = new Method({\n  name: 'irs10yInsert',\n  params: {\n    irs10y: Object,\n  },\n});\n\nexport const irs10yRemove = new Method({\n  name: 'irs10yRemove',\n  params: {\n    irs10yId: String,\n  },\n});\n\nexport const irs10yUpdate = new Method({\n  name: 'irs10yUpdate',\n  params: {\n    irs10yId: String,\n    object: Object,\n  },\n});\n","import { irs10y as irs10yFragment } from '../fragments';\nimport { IRS10Y_QUERIES } from './irs10yConstants';\nimport Irs10y from '.';\n\nexport const irs10y = Irs10y.createQuery(IRS10Y_QUERIES.IRS10Y, {\n  ...irs10yFragment(),\n  $options: { sort: { date: -1 } },\n});\n","import { Meteor } from 'meteor/meteor';\nimport SimpleSchema from 'simpl-schema';\n\nimport {\n  BONUS_ALGORITHMS,\n  REAL_ESTATE_INCOME_ALGORITHMS,\n} from '../../../config/financeConstants';\nimport {\n  createdAt,\n  updatedAt,\n  percentageField,\n} from '../../helpers/sharedSchemas';\nimport {\n  INCOME_CONSIDERATION_TYPES,\n  EXPENSE_TYPES_WITHOUT_DELTAS,\n} from '../lenderRulesConstants';\n\n// When adding new rules to lenderRules, make sure to edit the\n// applyRules method on LenderRulesInitializator\n\nexport const incomeConsideration = {\n  incomeConsiderationType: {\n    type: String,\n    allowedValues: Object.values(INCOME_CONSIDERATION_TYPES),\n    optional: true,\n  },\n  bonusAlgorithm: {\n    type: String,\n    allowedValues: Object.values(BONUS_ALGORITHMS),\n    optional: true,\n    uniforms: { placeholder: null },\n  },\n  bonusConsideration: percentageField,\n  bonusHistoryToConsider: { type: SimpleSchema.Integer, optional: true },\n  companyIncomeConsideration: percentageField,\n  companyIncomeHistoryToConsider: {\n    type: SimpleSchema.Integer,\n    optional: true,\n  },\n  dividendsConsideration: percentageField,\n  dividendsHistoryToConsider: { type: SimpleSchema.Integer, optional: true },\n  realEstateIncomeAlgorithm: {\n    type: String,\n    allowedValues: Object.values(REAL_ESTATE_INCOME_ALGORITHMS),\n    optional: true,\n    uniforms: { placeholder: null },\n  },\n  realEstateIncomeConsideration: percentageField,\n  // realEstateIncomeConsiderationType: {\n  //   type: String,\n  //   allowedValues: Object.values(REAL_ESTATE_CONSIDERATION_TYPES),\n  //   optional: true,\n  // },\n  investmentIncomeConsideration: percentageField,\n  expensesSubtractFromIncome: {\n    type: Array,\n    optional: true,\n    uniforms: {\n      intlId: 'expenses',\n      placeholder: 'Ajouter toutes les charges aux charges théoriques',\n      label: 'Charges à soustraire aux revenus',\n    },\n    autoValue() {\n      if (\n        Meteor.isServer\n        && this.isSet\n        && Array.isArray(this.value)\n        && this.value.length === 0\n      ) {\n        return { $unset: true };\n      }\n    },\n  },\n  'expensesSubtractFromIncome.$': {\n    type: String,\n    // REAL_ESTATE_DELTAS are handled internally\n    allowedValues: EXPENSE_TYPES_WITHOUT_DELTAS,\n  },\n  fortuneReturnsRatio: percentageField,\n};\n\nexport const theoreticalExpenses = {\n  theoreticalInterestRate: percentageField,\n  theoreticalInterestRate2ndRank: percentageField,\n  theoreticalMaintenanceRate: percentageField,\n  amortizationGoal: percentageField,\n  amortizationYears: {\n    type: SimpleSchema.Integer,\n    min: 0,\n    max: 20,\n    optional: true,\n  },\n};\n\nexport const cutOffCriteria = {\n  maxBorrowRatio: percentageField,\n  maxBorrowRatioWithPledge: percentageField,\n  maxIncomeRatio: percentageField,\n};\n\nexport const otherParams = {\n  allowPledge: {\n    type: Boolean,\n    optional: true,\n    autoValue() {\n      if (Meteor.isServer && this.isSet && this.value === false) {\n        return { $unset: true };\n      }\n    },\n  },\n  adminComments: { type: Array, defaultValue: [] },\n  'adminComments.$': String,\n  pdfComments: { type: Array, defaultValue: [] },\n  'pdfComments.$': String,\n};\n\nconst LenderRulesSchema = new SimpleSchema({\n  createdAt,\n  updatedAt,\n  organisationLink: { type: Object, optional: true },\n  'organisationLink._id': { type: String, optional: true },\n  filter: { type: Object, blackbox: true },\n  name: { type: String, optional: true },\n  order: { type: Number, min: 0 },\n  organisationCache: {\n    type: Object,\n    blackbox: true,\n    optional: true,\n  },\n  ...incomeConsideration,\n  ...theoreticalExpenses,\n  ...cutOffCriteria,\n  ...otherParams,\n});\n\nexport const LenderRulesEditorSchema = LenderRulesSchema.pick(\n  ...Object.keys(incomeConsideration),\n  ...Object.keys(theoreticalExpenses),\n  ...Object.keys(cutOffCriteria),\n  ...Object.keys(otherParams),\n);\n\nexport default LenderRulesSchema;\n","import { Meteor } from 'meteor/meteor';\n\nimport OrganisationService from '../../organisations/server/OrganisationService';\nimport LenderRules from '../lenderRules';\nimport CollectionService from '../../helpers/CollectionService';\nimport {\n  DEFAULT_VALUE_FOR_ALL,\n  DEFAULT_MAIN_RESIDENCE_RULES,\n  DEFAULT_SECONDARY_RESIDENCE_RULES,\n} from '../lenderRulesConstants';\n\nclass LenderRulesService extends CollectionService {\n  constructor() {\n    super(LenderRules);\n  }\n\n  remove({ lenderRulesId }) {\n    return super.remove(lenderRulesId);\n  }\n\n  initialize({ organisationId }) {\n    const id1 = this.insert({\n      organisationId,\n      object: DEFAULT_VALUE_FOR_ALL,\n      logicRules: [true],\n    });\n    const id2 = this.insert({\n      organisationId,\n      object: { maxBorrowRatio: 0.8 },\n      logicRules: DEFAULT_MAIN_RESIDENCE_RULES,\n    });\n    const id3 = this.insert({\n      organisationId,\n      object: { maxBorrowRatio: 0.7 },\n      logicRules: DEFAULT_SECONDARY_RESIDENCE_RULES,\n    });\n\n    return [id1, id2, id3];\n  }\n\n  insert({ organisationId, object = {}, logicRules }) {\n    const { lenderRules = [] } = OrganisationService.fetchOne({\n      $filters: { _id: organisationId },\n      lenderRules: { _id: 1 },\n    });\n\n    const lenderRulesId = super.insert({\n      ...object,\n      filter: { and: logicRules },\n      order: lenderRules.length,\n    });\n\n    this.addLink({\n      id: lenderRulesId,\n      linkName: 'organisation',\n      linkId: organisationId,\n    });\n\n    return lenderRulesId;\n  }\n\n  update({ lenderRulesId, object }) {\n    if (object.filter) {\n      throw new Meteor.Error('You can not update the filter here');\n    }\n\n    return this._update({ id: lenderRulesId, object });\n  }\n\n  updateFilter({ lenderRulesId, logicRules, name }) {\n    return this._update({\n      id: lenderRulesId,\n      object: { filter: { and: logicRules }, name },\n    });\n  }\n\n  setOrder({ orders }) {\n    const ids = Object.keys(orders);\n    const numbers = Object.values(orders).sort((a, b) => a - b);\n\n    const lenderRules = this.fetch({\n      $filters: { _id: { $in: ids } },\n      organisation: { _id: 1 },\n      organisationLink: 1,\n    });\n\n    lenderRules.forEach(({ organisation: { _id } }) => {\n      if (_id !== lenderRules[0].organisation._id) {\n        throw new Meteor.Error('Tous les filtres doivent appartenir à la même organisation');\n      }\n    });\n\n    numbers.forEach((num, index) => {\n      if (index !== num) {\n        throw new Meteor.Error(\"L'ordre des filtres doit commencer par 0 et être continu\");\n      }\n    });\n\n    Object.keys(orders).forEach((lenderRulesId) => {\n      const nextOrder = orders[lenderRulesId];\n      this.update({ lenderRulesId, object: { order: nextOrder } });\n    });\n  }\n}\n\nexport default new LenderRulesService();\n","import { exposeQuery } from '../../queries/queryHelpers';\nimport SecurityService from '../../security';\nimport { organisationLenderRules } from '../queries';\n\nexposeQuery({\n  query: organisationLenderRules,\n  overrides: {\n    firewall() {\n      SecurityService.checkLoggedIn();\n    },\n    embody: (body, params) => {\n      body.$filter = ({ filters, params: { organisationId } }) => {\n        filters['organisationLink._id'] = organisationId;\n      };\n    },\n    validateParams: { organisationId: String },\n  },\n  options: { allowFilterById: true },\n});\n","import SecurityService from '../../security';\nimport LenderRulesService from './LenderRulesService';\nimport {\n  lenderRulesInitialize,\n  lenderRulesInsert,\n  lenderRulesRemove,\n  lenderRulesUpdate,\n  lenderRulesUpdateFilter,\n  setLenderRulesOrder,\n} from '../methodDefinitions';\n\nlenderRulesInitialize.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return LenderRulesService.initialize(params);\n});\n\nlenderRulesInsert.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return LenderRulesService.insert(params);\n});\n\nlenderRulesRemove.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return LenderRulesService.remove(params);\n});\n\nlenderRulesUpdate.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return LenderRulesService.update(params);\n});\n\nlenderRulesUpdateFilter.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return LenderRulesService.updateFilter(params);\n});\n\nsetLenderRulesOrder.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return LenderRulesService.setOrder(params);\n});\n","import jsonLogic from 'json-logic-js';\n\nconst rulesToMerge = ['pdfComments', 'adminComments'];\n\nconst filterIsValid = (filter, variables) => jsonLogic.apply(filter, variables);\n\nconst mergeRules = ({ names = [], ...oldRules }, newRules) => {\n  let mergedObject = { ...oldRules };\n\n  Object.keys(newRules).forEach((newRuleName) => {\n    const newRule = newRules[newRuleName];\n\n    if (rulesToMerge.includes(newRuleName) && mergedObject[newRuleName]) {\n      mergedObject = {\n        ...mergedObject,\n        [newRuleName]: [...mergedObject[newRuleName], ...newRule],\n      };\n    } else if (newRule !== undefined && newRule !== null) {\n      mergedObject = { ...mergedObject, [newRuleName]: newRule };\n    }\n  });\n\n  return {\n    ...mergedObject,\n    names: [...names, newRules.name],\n  };\n};\n\nexport const getMatchingRules = (\n  lenderRules,\n  variables,\n  storeOrigin = () => {},\n) =>\n  lenderRules.reduce((validRules, { filter, ...rules }) => {\n    if (filterIsValid(filter, variables)) {\n      storeOrigin(rules, rules._id);\n      return mergeRules(validRules, rules);\n    }\n\n    return validRules;\n  }, {});\n\nexport const isAllRule = ({ filter: { and } }) => and[0] === true;\n\nexport const parseFilter = (ruleObject) => {\n  if (ruleObject === true) {\n    // Handle exception for rules that are true, i.e. apply to all loans\n    return { value: true };\n  }\n\n  const [operator] = Object.keys(ruleObject);\n  const { var: variable } = ruleObject[operator].find(o => o && o.var);\n  const value = ruleObject[operator].find(o => !(o && o.var));\n\n  return { operator, variable, value };\n};\n\nexport const formatFilter = ({ variable, operator, value }) => ({\n  [operator]: [{ var: variable }, value],\n});\n","export * from './methodDefinitions';\nexport { default } from './lenderRules';\n","import { Mongo } from 'meteor/mongo';\n\nimport LenderRulesSchema from './schemas/lenderRulesSchema';\nimport { LENDER_RULES_COLLECTION } from './lenderRulesConstants';\n\nconst LenderRules = new Mongo.Collection(LENDER_RULES_COLLECTION);\n\nLenderRules.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true,\n});\n\nLenderRules.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false,\n});\n\nLenderRules.attachSchema(LenderRulesSchema);\nexport default LenderRules;\n","import { BONUS_ALGORITHMS } from 'core/config/financeConstants';\nimport { RESIDENCE_TYPE } from '../properties/propertyConstants';\nimport { EXPENSES } from '../borrowers/borrowerConstants';\n\nexport const LENDER_RULES_COLLECTION = 'lenderRules';\n\nexport const LENDER_RULES_QUERIES = {\n  ORGANISATION_LENDER_RULES: 'ORGANISATION_LENDER_RULES',\n};\n\nexport const INCOME_CONSIDERATION_TYPES = {\n  GROSS: 'GROSS',\n  NET: 'NET',\n};\n\nexport const REAL_ESTATE_CONSIDERATION_TYPES = {\n  ADD_TO_INCOME: 'ADD_TO_INCOME',\n  SUBTRACT_FROM_EXPENSES: 'SUBTRACT_FROM_EXPENSES',\n};\n\nexport const EXPENSES_CONSIDERATION_TYPES = {\n  SUBTRACT_FROM_INCOME: 'SUBTRACT_FROM_INCOME',\n  ADD_TO_EXPENSES: 'ADD_TO_EXPENSES',\n};\n\nexport const LENDER_RULES_VARIABLES = {\n  INCOME: 'income',\n  RESIDENCE_TYPE: 'residenceType',\n  CANTON: 'canton',\n  BORROW_RATIO: 'borrowRatio',\n  WANTED_LOAN: 'wantedLoan',\n  PROPERTY_VALUE: 'propertyValue',\n  INSIDE_AREA: 'insideArea',\n  BANK_FORTUNE: 'bankFortune',\n  PROPERTY_TYPE: 'propertyType',\n  ZIP_CODE: 'zipCode',\n  REMAINING_BANK_FORTUNE: 'remainingBankFortune',\n};\n\nexport const LENDER_RULES_OPERATORS = {\n  EQUALS: '===',\n  MORE_THAN: '>',\n  MORE_THAN_OR_EQUAL: '>=',\n  LESS_THAN: '<',\n  LESS_THAN_OR_EQUAL: '<=',\n  IN: 'in',\n};\n\nexport const DEFAULT_MAIN_RESIDENCE_RULES = [\n  {\n    [LENDER_RULES_OPERATORS.IN]: [\n      { var: 'residenceType' },\n      [RESIDENCE_TYPE.MAIN_RESIDENCE],\n    ],\n  },\n];\n\nexport const DEFAULT_SECONDARY_RESIDENCE_RULES = [\n  {\n    [LENDER_RULES_OPERATORS.IN]: [\n      { var: 'residenceType' },\n      [RESIDENCE_TYPE.SECOND_RESIDENCE],\n    ],\n  },\n];\n\n// Keep the deltas above other expenses so they appear in the right order\nexport const EXPENSE_TYPES = {\n  REAL_ESTATE_DELTA_POSITIVE: 'REAL_ESTATE_DELTA_POSITIVE',\n  REAL_ESTATE_DELTA_NEGATIVE: 'REAL_ESTATE_DELTA_NEGATIVE',\n  ...EXPENSES,\n  THEORETICAL_REAL_ESTATE: 'THEORETICAL_REAL_ESTATE',\n};\n\nexport const EXPENSE_TYPES_WITHOUT_DELTAS = Object.values(EXPENSE_TYPES).filter(value =>\n  ![\n    EXPENSE_TYPES.REAL_ESTATE_DELTA_POSITIVE,\n    EXPENSE_TYPES.REAL_ESTATE_DELTA_NEGATIVE,\n  ].includes(value));\n\nexport const DEFAULT_VALUE_FOR_ALL = {\n  incomeConsiderationType: INCOME_CONSIDERATION_TYPES.GROSS,\n  bonusAlgorithm: BONUS_ALGORITHMS.WEAK_AVERAGE,\n  bonusConsideration: 0.5,\n  bonusHistoryToConsider: 3,\n  companyIncomeConsideration: 1,\n  companyIncomeHistoryToConsider: 3,\n  dividendsConsideration: 1,\n  dividendsHistoryToConsider: 1,\n  pensionIncomeConsideration: 1,\n  realEstateIncomeConsideration: 1,\n  realEstateIncomeConsiderationType:\n    REAL_ESTATE_CONSIDERATION_TYPES.SUBTRACT_FROM_EXPENSES,\n  investmentIncomeConsideration: 1,\n  expensesSubtractFromIncome: EXPENSE_TYPES_WITHOUT_DELTAS,\n  theoreticalInterestRate: 0.05,\n  theoreticalMaintenanceRate: 0.01,\n  amortizationGoal: 0.65,\n  amortizationYears: 15,\n  maxBorrowRatio: 0.9,\n  maxIncomeRatio: 0.3333,\n  allowPledge: true,\n};\n","import LenderRules from '.';\nimport { Organisations } from '..';\n\nLenderRules.addLinks({\n  organisation: {\n    field: 'organisationLink',\n    type: 'one',\n    metadata: true,\n    collection: Organisations,\n    denormalize: {\n      field: 'organisationCache',\n      body: { _id: 1, name: 1 },\n    },\n  },\n});\n","import { Match } from 'meteor/check';\n\nimport { Method } from '../methods/methods';\n\nexport const lenderRulesInsert = new Method({\n  name: 'lenderRulesInsert',\n  params: {\n    organisationId: String,\n    logicRules: Array,\n    object: Match.Maybe(Object),\n  },\n});\nexport const lenderRulesInitialize = new Method({\n  name: 'lenderRulesInitialize',\n  params: {\n    organisationId: String,\n  },\n});\n\nexport const lenderRulesRemove = new Method({\n  name: 'lenderRulesRemove',\n  params: {\n    lenderRulesId: String,\n  },\n});\n\nexport const lenderRulesUpdate = new Method({\n  name: 'lenderRulesUpdate',\n  params: {\n    lenderRulesId: String,\n    object: Object,\n  },\n});\n\nexport const lenderRulesUpdateFilter = new Method({\n  name: 'lenderRulesUpdateFilter',\n  params: {\n    lenderRulesId: String,\n    logicRules: Array,\n    name: Match.Optional(String),\n  },\n});\n\nexport const setLenderRulesOrder = new Method({\n  name: 'setLenderRulesOrder',\n  params: {\n    orders: Object,\n  },\n});\n","import { lenderRules } from '../fragments';\nimport { LENDER_RULES_QUERIES } from './lenderRulesConstants';\nimport LenderRules from '.';\n\nexport const organisationLenderRules = LenderRules.createQuery(\n  LENDER_RULES_QUERIES.ORGANISATION_LENDER_RULES,\n  lenderRules(),\n);\n","import SimpleSchema from 'simpl-schema';\nimport { createdAt, updatedAt } from '../../helpers/sharedSchemas';\nimport { LENDER_STATUS } from '../lenderConstants';\n\nconst LenderSchema = new SimpleSchema({\n  createdAt,\n  updatedAt,\n  status: {\n    type: String,\n    allowedValues: Object.values(LENDER_STATUS),\n    defaultValue: LENDER_STATUS.TO_BE_CONTACTED,\n  },\n  contactLink: { type: Object, optional: true },\n  'contactLink._id': { type: String, optional: true },\n  organisationLink: { type: Object, optional: true },\n  'organisationLink._id': { type: String, optional: true },\n  loanLink: { type: Object, optional: true },\n  'loanLink._id': { type: String, optional: true },\n  adminNote: { type: String, optional: true },\n});\n\nexport default LenderSchema;\n","import { Meteor } from 'meteor/meteor';\n\nimport Lenders from '../lenders';\nimport CollectionService from '../../helpers/CollectionService';\nimport OrganisationService from '../../organisations/server/OrganisationService';\n\nclass LenderService extends CollectionService {\n  constructor() {\n    super(Lenders);\n  }\n\n  insert({ lender, contactId, organisationId }) {\n    const { loanId, ...data } = lender;\n\n    const existingLender = this.fetchOne({\n      $filters: {\n        'loanLink._id': loanId,\n        'organisationLink._id': organisationId,\n      },\n      organisationLink: 1,\n      loanLink: 1,\n    });\n\n    if (existingLender) {\n      throw new Meteor.Error('Peut pas ajouter le même prêteur 2 fois');\n    }\n\n    const lenderId = super.insert(data);\n    this.addLink({ id: lenderId, linkName: 'loan', linkId: loanId });\n\n    // If no contact is set, fetch first contact of organisation\n    if (!contactId && organisationId) {\n      const { contacts } = OrganisationService.fetchOne({\n        $filters: { _id: organisationId },\n        contacts: { _id: 1 },\n      });\n\n      if (contacts && contacts.length > 0) {\n        contactId = contacts[0]._id;\n      }\n    }\n\n    this.linkOrganisationAndContact({ lenderId, organisationId, contactId });\n    return lenderId;\n  }\n\n  linkOrganisationAndContact({ lenderId, organisationId, contactId }) {\n    if (organisationId) {\n      this.addLink({\n        id: lenderId,\n        linkName: 'organisation',\n        linkId: organisationId,\n      });\n    }\n    if (contactId) {\n      this.addLink({\n        id: lenderId,\n        linkName: 'contact',\n        linkId: contactId,\n      });\n    } else {\n      this.removeLink({ id: lenderId, linkName: 'contact' });\n    }\n  }\n\n  remove({ lenderId }) {\n    super.remove(lenderId);\n  }\n}\n\nexport default new LenderService();\n","import { exposeQuery } from '../../queries/queryHelpers';\nimport SecurityService from '../../security';\nimport { loanLenders } from '../queries';\n\nexposeQuery({\n  query: loanLenders,\n  overrides: {\n    firewall(userId, { loanId }) {\n      if (!SecurityService.isUserAdmin(userId)) {\n        SecurityService.loans.isAllowedToUpdate(loanId);\n      }\n    },\n    embody: (body) => {\n      body.$filter = ({ filters, params }) => {\n        filters['loanLink._id'] = params.loanId;\n      };\n    },\n    validateParams: { loanId: String },\n  },\n});\n","import SecurityService from '../../security';\nimport {\n  lenderInsert,\n  lenderRemove,\n  lenderUpdate,\n  lenderLinkOrganisationAndContact,\n} from '../methodDefinitions';\nimport LenderService from './LenderService';\n\nlenderInsert.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return LenderService.insert(params);\n});\n\nlenderRemove.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return LenderService.remove(params);\n});\n\nlenderUpdate.setHandler((context, { lenderId, object }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return LenderService._update({ id: lenderId, object });\n});\n\nlenderLinkOrganisationAndContact.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return LenderService.linkOrganisationAndContact(params);\n});\n","export * from './methodDefinitions';\nexport { default } from './lenders';\n","export const LENDERS_COLLECTION = 'lenders';\n\nexport const LENDERS_QUERIES = {\n  LOAN_LENDERS: 'LOAN_LENDERS',\n};\n\nexport const LENDER_STATUS = {\n  TO_BE_CONTACTED: 'TO_BE_CONTACTED',\n  CONTACTED: 'CONTACTED',\n  OFFER_RECEIVED: 'OFFER_RECEIVED',\n  TO_EXCLUDE: 'TO_EXCLUDE',\n};\n","import { Mongo } from 'meteor/mongo';\n\nimport LenderSchema from './schemas/lenderSchema';\nimport { LENDERS_COLLECTION } from './lenderConstants';\n\nconst Lenders = new Mongo.Collection(LENDERS_COLLECTION);\n\nLenders.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true,\n});\n\nLenders.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false,\n});\n\nLenders.attachSchema(LenderSchema);\nexport default Lenders;\n","import Lenders from '.';\nimport { Contacts, Organisations, Loans, Offers } from '..';\nimport Tasks from '../tasks';\n\nLenders.addLinks({\n  contact: {\n    field: 'contactLink',\n    collection: Contacts,\n    type: 'one',\n    metadata: true,\n  },\n  organisation: {\n    field: 'organisationLink',\n    collection: Organisations,\n    type: 'one',\n    metadata: true,\n  },\n  loan: {\n    field: 'loanLink',\n    collection: Loans,\n    type: 'one',\n    metadata: true,\n  },\n  offers: {\n    collection: Offers,\n    inversedBy: 'lender',\n    autoremove: true,\n  },\n  tasks: {\n    inversedBy: 'lender',\n    collection: Tasks,\n    autoremove: true,\n  },\n});\n","import { Match } from 'meteor/check';\nimport { Method } from '../methods/methods';\n\nexport const lenderInsert = new Method({\n  name: 'lenderInsert',\n  params: {\n    lender: Object,\n    organisationId: String,\n    contactId: Match.OneOf(String, null),\n  },\n});\n\nexport const lenderRemove = new Method({\n  name: 'lenderRemove',\n  params: {\n    lenderId: String,\n  },\n});\n\nexport const lenderUpdate = new Method({\n  name: 'lenderUpdate',\n  params: {\n    lenderId: String,\n    object: Object,\n  },\n});\n\nexport const lenderLinkOrganisationAndContact = new Method({\n  name: 'lenderLinkOrganisationAndContact',\n  params: {\n    lenderId: String,\n    organisationId: Match.OneOf(String, null),\n    contactId: Match.OneOf(String, null),\n  },\n});\n","import { lender } from '../fragments';\nimport { LENDERS_QUERIES } from './lenderConstants';\nimport Lenders from '.';\n\nexport const loanLenders = Lenders.createQuery(LENDERS_QUERIES.LOAN_LENDERS, {\n  ...lender(),\n  $options: { sort: { createdAt: -1 } },\n});\n","import { Match } from 'meteor/check';\n\nimport { exposeQuery } from '../../queries/queryHelpers';\nimport { liveSyncs } from '../liveSync';\n\nexposeQuery({\n  query: liveSyncs,\n  overrides: {\n    validateParams: { userId: Match.Maybe(Match.OneOf(String, Boolean)) },\n  },\n});\n","export { default } from './liveSync';\n","import { Mongo } from 'meteor/mongo';\nimport { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\n\nconst LiveSync = new Mongo.Collection('liveSync');\nconst STALE_LIVE_SYNC_MS = 2 * 60 * 1000;\n\nMeteor.methods({\n  liveSyncStart() {\n    LiveSync.upsert({ userId: this.userId }, { userId: this.userId });\n  },\n  liveSyncStop() {\n    LiveSync.remove({ userId: this.userId });\n  },\n  liveSyncUpdate(options) {\n    check(options, String);\n    LiveSync.update(\n      { userId: this.userId },\n      { $set: { options, updatedAt: new Date() } },\n    );\n  },\n  liveSyncClear() {\n    const now = new Date();\n    LiveSync.remove({\n      updatedAt: { $lt: new Date(now.getTime() - STALE_LIVE_SYNC_MS) },\n    });\n  },\n});\n\nexport const liveSyncs = LiveSync.createQuery('liveSyncs', {\n  $filter({ filters, params: { userId } }) {\n    if (userId) {\n      filters.userId = userId;\n    }\n  },\n  userId: 1,\n  options: 1,\n});\n\nexport default LiveSync;\n","// @flow\nimport SimpleSchema from 'simpl-schema';\n\nimport {\n  createdAt,\n  updatedAt,\n  contactsSchema,\n  additionalDocuments,\n  documentsField,\n  cacheField,\n} from '../../helpers/sharedSchemas';\nimport {\n  LOAN_STATUS,\n  LOAN_VERIFICATION_STATUS,\n  PURCHASE_TYPE,\n  OWNER,\n  CANTONS,\n  STEPS,\n  APPLICATION_TYPES,\n  LOAN_CATEGORIES,\n} from '../loanConstants';\nimport { RESIDENCE_TYPE } from '../../constants';\nimport StructureSchema from './StructureSchema';\nimport promotionSchema from './promotionSchema';\nimport {\n  borrowerIdsSchema,\n  propertyIdsSchema,\n  previousLoanTranchesSchema,\n  maxPropertyValueSchema,\n} from './otherSchemas';\n\nconst LoanSchema = new SimpleSchema({\n  userId: {\n    type: String,\n    optional: true,\n  },\n  createdAt,\n  updatedAt,\n  status: {\n    type: String,\n    defaultValue: LOAN_STATUS.LEAD,\n    allowedValues: Object.values(LOAN_STATUS),\n  },\n  general: { type: Object, optional: true, blackbox: true, defaultValue: {} }, // To be removed once migrations are done\n  name: { type: String, unique: true, regEx: /^\\d{2}-\\d{4}$/ },\n  adminValidation: { type: Object, defaultValue: {}, blackbox: true },\n  userFormsEnabled: { type: Boolean, defaultValue: true, optional: true },\n  structures: { type: Array, defaultValue: [] },\n  'structures.$': StructureSchema,\n  selectedStructure: { type: String, optional: true },\n  verificationStatus: {\n    type: String,\n    optional: true,\n    allowedValues: Object.values(LOAN_VERIFICATION_STATUS),\n    defaultValue: LOAN_VERIFICATION_STATUS.NONE,\n    uniforms: { displayEmpty: false },\n  },\n  purchaseType: {\n    type: String,\n    defaultValue: PURCHASE_TYPE.ACQUISITION,\n    allowedValues: Object.values(PURCHASE_TYPE),\n    uniforms: { displayEmpty: false },\n  },\n  residenceType: {\n    type: String,\n    allowedValues: Object.values(RESIDENCE_TYPE),\n    optional: true,\n    uniforms: { displayEmpty: false },\n  },\n  canton: {\n    type: String,\n    optional: true,\n    allowedValues: Object.keys(CANTONS),\n  },\n  currentOwner: {\n    type: String,\n    defaultValue: OWNER.FIRST,\n    allowedValues: Object.values(OWNER),\n  },\n  futureOwner: {\n    type: String,\n    defaultValue: OWNER.FIRST,\n    allowedValues: Object.values(OWNER),\n  },\n  otherOwner: {\n    type: String,\n    optional: true,\n  },\n  enableOffers: { type: Boolean, optional: true, defaultValue: false },\n  previousLender: { type: String, optional: true },\n  customName: { type: String, optional: true },\n  applicationType: {\n    type: String,\n    allowedValues: Object.values(APPLICATION_TYPES),\n    defaultValue: APPLICATION_TYPES.SIMPLE,\n    uniforms: { placeholder: null },\n  },\n  ...promotionSchema,\n  ...borrowerIdsSchema,\n  ...propertyIdsSchema,\n  ...contactsSchema,\n  ...previousLoanTranchesSchema,\n  ...additionalDocuments([]),\n  revenueLinks: { type: Array, optional: true },\n  'revenueLinks.$': String,\n  userCache: cacheField,\n  step: {\n    type: String,\n    defaultValue: STEPS.SOLVENCY,\n    allowedValues: Object.values(STEPS),\n    uniforms: { placeholder: '' },\n  },\n  displayWelcomeScreen: {\n    type: Boolean,\n    defaultValue: true,\n    optional: true,\n  },\n  ...maxPropertyValueSchema,\n  shareSolvency: { type: Boolean, optional: true },\n  documents: documentsField,\n  anonymous: { type: Boolean, optional: true, defaultValue: false },\n  referralId: { type: String, optional: true },\n  category: {\n    type: String,\n    defaultValue: LOAN_CATEGORIES.STANDARD,\n    allowedValues: Object.values(LOAN_CATEGORIES),\n    uniforms: { placeholder: null },\n  },\n  adminNote: {\n    type: String,\n    optional: true,\n  },\n  lendersCache: { type: Array, optional: true },\n  'lendersCache.$': cacheField,\n  tasksCache: { type: Array, optional: true },\n  'tasksCache.$': cacheField,\n  financedPromotionLink: { type: Object, optional: true },\n  'financedPromotionLink._id': { type: String, optional: true },\n  simpleBorrowersForm: { type: Boolean, defaultValue: true },\n});\n\nexport default LoanSchema;\n","// @flow\nimport SimpleSchema from 'simpl-schema';\nimport { AMORTIZATION_TYPE, OWN_FUNDS_USAGE_TYPES } from '../loanConstants';\nimport { OWN_FUNDS_TYPES } from '../../constants';\nimport { loanTranchesSchema } from './otherSchemas';\nimport { moneyField } from '../../helpers/sharedSchemas';\n\nexport const structureSchema = {\n  amortization: { ...moneyField, defaultValue: 0 },\n  amortizationType: {\n    type: String,\n    allowedValues: Object.values(AMORTIZATION_TYPE),\n    optional: true,\n  },\n  description: { type: String, optional: true },\n  disabled: { type: Boolean, defaultValue: false },\n  id: String,\n  mortgageNoteIds: { type: Array, optional: true },\n  'mortgageNoteIds.$': String,\n  name: { type: String, optional: true },\n  notaryFees: { ...moneyField, defaultValue: null },\n  propertyValue: { ...moneyField, defaultValue: null },\n  offerId: { type: String, optional: true },\n  propertyId: { type: String, optional: true },\n  promotionOptionId: { type: String, optional: true },\n  propertyWork: { ...moneyField, defaultValue: 0 },\n  sortOffersBy: { type: String, optional: true },\n  ownFunds: { type: Array, defaultValue: [] },\n  'ownFunds.$': Object,\n  'ownFunds.$.borrowerId': String,\n  'ownFunds.$.type': {\n    type: String,\n    allowedValues: Object.values(OWN_FUNDS_TYPES),\n    optional: true,\n  },\n  'ownFunds.$.value': { ...moneyField, optional: false },\n  'ownFunds.$.usageType': {\n    type: String,\n    optional: true,\n    allowedValues: Object.values(OWN_FUNDS_USAGE_TYPES),\n  },\n  'ownFunds.$.description': {\n    type: String,\n    optional: true,\n  },\n  wantedLoan: { ...moneyField, defaultValue: 0 },\n  ...loanTranchesSchema,\n};\n\nexport type structureType = {\n  id: string,\n  amortization: number,\n  amortizationType: string,\n  description: string,\n  name: string,\n  offerId: string,\n  propertyId: string,\n  propertyWork: number,\n  sortOffersBy: string,\n  wantedLoan: number,\n  ownFunds: Array<Object>,\n};\n\nexport default new SimpleSchema(structureSchema);\n","// @flow\nimport { INTEREST_RATES, SOLVENCY_TYPE, CANTONS } from '../../constants';\nimport { moneyField, percentageField } from '../../helpers/sharedSchemas';\n\nexport const borrowerIdsSchema = {\n  borrowerIds: { type: Array, defaultValue: [] },\n  'borrowerIds.$': String,\n};\n\nexport const loanTranchesSchema = {\n  loanTranches: {\n    type: Array,\n    defaultValue: [{ type: INTEREST_RATES.YEARS_10, value: 1 }],\n    optional: true,\n  },\n  'loanTranches.$': Object,\n  'loanTranches.$.type': {\n    type: String,\n    optional: true,\n    allowedValues: Object.values(INTEREST_RATES),\n  },\n  'loanTranches.$.value': {\n    ...moneyField,\n    type: Number, // Can be specified as percentages or monetary amounts\n  },\n};\n\nexport const previousLoanTranchesSchema = {\n  previousLoanTranches: {\n    type: Array,\n    defaultValue: [],\n    optional: true,\n  },\n  'previousLoanTranches.$': Object,\n  'previousLoanTranches.$.value': {\n    ...moneyField,\n    type: Number, // Can be specified as percentages or monetary amounts\n  },\n  'previousLoanTranches.$.dueDate': {\n    type: Date,\n    optional: true,\n  },\n  'previousLoanTranches.$.rate': {\n    type: Number,\n    min: 0,\n    max: 1,\n  },\n};\n\nexport type loanTranchesType = Array<{\n  type: string,\n  value: number,\n}>;\n\nexport const propertyIdsSchema = {\n  propertyIds: { type: Array, defaultValue: [], maxCount: 5 },\n  'propertyIds.$': String,\n};\n\nexport const maxPropertyValueSchema = {\n  maxPropertyValue: { type: Object, optional: true },\n  'maxPropertyValue.type': {\n    type: String,\n    allowedValues: Object.values(SOLVENCY_TYPE),\n    defaultValue: SOLVENCY_TYPE.SIMPLE,\n  },\n  'maxPropertyValue.canton': {\n    type: String,\n    allowedValues: Object.keys(CANTONS),\n  },\n  'maxPropertyValue.borrowerHash': { type: String, optional: true },\n  'maxPropertyValue.date': Date,\n  'maxPropertyValue.main': Object,\n  'maxPropertyValue.main.min': { type: Object, optional: true },\n  'maxPropertyValue.main.min.propertyValue': moneyField,\n  'maxPropertyValue.main.min.borrowRatio': percentageField,\n  'maxPropertyValue.main.min.organisationName': String,\n  'maxPropertyValue.main.max': Object,\n  'maxPropertyValue.main.max.propertyValue': moneyField,\n  'maxPropertyValue.main.max.borrowRatio': percentageField,\n  'maxPropertyValue.main.max.organisationName': String,\n  'maxPropertyValue.second': Object,\n  'maxPropertyValue.second.min': { type: Object, optional: true },\n  'maxPropertyValue.second.min.propertyValue': moneyField,\n  'maxPropertyValue.second.min.borrowRatio': percentageField,\n  'maxPropertyValue.second.min.organisationName': String,\n  'maxPropertyValue.second.max': Object,\n  'maxPropertyValue.second.max.propertyValue': moneyField,\n  'maxPropertyValue.second.max.borrowRatio': percentageField,\n  'maxPropertyValue.second.max.organisationName': String,\n};\n","const promotionSchema = {\n  promotionLinks: { type: Array, defaultValue: [] },\n  'promotionLinks.$': Object,\n  'promotionLinks.$._id': { type: String, optional: true },\n  'promotionLinks.$.priorityOrder': {\n    type: Array,\n    defaultValue: [],\n  },\n  'promotionLinks.$.priorityOrder.$': String,\n  'promotionLinks.$.invitedBy': { type: String, optional: true },\n  'promotionLinks.$.showAllLots': {\n    type: Boolean,\n    optional: true,\n    defaultValue: true,\n  },\n  promotionOptionLinks: { type: Array, defaultValue: [] },\n  'promotionOptionLinks.$': Object,\n  'promotionOptionLinks.$._id': { type: String, optional: true },\n};\n\nexport default promotionSchema;\n","import { Meteor } from 'meteor/meteor';\nimport { Random } from 'meteor/random';\nimport omit from 'lodash/omit';\nimport moment from 'moment';\n\nimport LenderRulesService from 'core/api/lenderRules/server/LenderRulesService';\nimport { PROPERTY_CATEGORY } from 'core/api/properties/propertyConstants';\nimport { ACTIVITY_SECONDARY_TYPES } from 'core/api/activities/activityConstants';\nimport ActivityService from 'core/api/activities/server/ActivityService';\nimport PromotionOptionService from '../../promotionOptions/server/PromotionOptionService';\nimport { shouldSendStepNotification } from '../../../utils/loanFunctions';\nimport Intl from '../../../utils/server/intl';\nimport {\n  makeFeedback,\n  FEEDBACK_OPTIONS,\n} from '../../../components/OfferList/feedbackHelpers';\nimport Calculator, {\n  Calculator as CalculatorClass,\n} from '../../../utils/Calculator';\nimport { getZipcodeForCanton } from '../../../utils/zipcodes';\nimport {\n  RESIDENCE_TYPE,\n  ORGANISATION_FEATURES,\n  LOAN_STATUS,\n  LOAN_VERIFICATION_STATUS,\n  CANTONS,\n  EMAIL_IDS,\n} from '../../constants';\nimport OfferService from '../../offers/server/OfferService';\nimport {\n  adminLoan,\n  lenderRules as lenderRulesFragment,\n  userLoan,\n} from '../../fragments';\nimport CollectionService from '../../helpers/CollectionService';\nimport BorrowerService from '../../borrowers/server/BorrowerService';\nimport PropertyService from '../../properties/server/PropertyService';\nimport PromotionService from '../../promotions/server/PromotionService';\nimport UserService from '../../users/server/UserService';\nimport OrganisationService from '../../organisations/server/OrganisationService';\nimport Loans from '../loans';\nimport { sendEmail } from '../../methods';\nimport {\n  ORGANISATION_NAME_SEPARATOR,\n  STEPS,\n  APPLICATION_TYPES,\n} from '../loanConstants';\nimport { fullLoan } from '../queries';\n\n// Pads a number with zeros: 4 --> 0004\nconst zeroPadding = (num, places) => {\n  const zero = places - num.toString().length + 1;\n  return Array(+(zero > 0 && zero)).join('0') + num;\n};\n\nexport class LoanService extends CollectionService {\n  constructor() {\n    super(Loans);\n  }\n\n  insert = ({ loan = {}, userId }) => {\n    const name = this.getNewLoanName();\n    return Loans.insert({ ...loan, name, userId });\n  };\n\n  insertAnonymousLoan = ({ proPropertyId, referralId }) => {\n    let loanId;\n    if (proPropertyId) {\n      loanId = this.insertPropertyLoan({ propertyIds: [proPropertyId] });\n    } else {\n      loanId = this.insert({ loan: {} });\n    }\n\n    this.update({\n      loanId,\n      object: { anonymous: true, displayWelcomeScreen: false, referralId },\n    });\n\n    return loanId;\n  };\n\n  getNewLoanName = (now = new Date()) => {\n    const year = now.getYear();\n    const yearPrefix = year - 100;\n    const lastLoan = Loans.findOne({}, { sort: { name: -1 } });\n    if (!lastLoan) {\n      return `${yearPrefix}-0001`;\n    }\n    const [lastPrefix, count] = lastLoan.name\n      .split('-')\n      .map(numb => parseInt(numb, 10));\n\n    if (lastPrefix !== yearPrefix) {\n      return `${yearPrefix}-0001`;\n    }\n\n    const nextCountString = zeroPadding(count + 1, 4);\n\n    return `${yearPrefix}-${nextCountString}`;\n  };\n\n  update = ({ loanId, object, operator = '$set' }) =>\n    Loans.update(loanId, { [operator]: object });\n\n  remove = ({ loanId }) => Loans.remove(loanId);\n\n  fullLoanInsert = ({ userId, loan = {} }) => {\n    const loanId = this.insert({\n      loan,\n      userId,\n    });\n    this.addNewStructure({ loanId });\n    return loanId;\n  };\n\n  setStep({ loanId, nextStep }) {\n    const { step, userId, user } = this.fetchOne({\n      $filters: { _id: loanId },\n      step: 1,\n      userId: 1,\n      user: { assignedEmployee: { name: 1 } },\n    });\n\n    this.update({ loanId, object: { step: nextStep } });\n\n    if (shouldSendStepNotification(step, nextStep)) {\n      if (!user || !user.assignedEmployee) {\n        throw new Meteor.Error('Il faut un conseiller sur ce dossier pour envoyer un email');\n      }\n\n      sendEmail.run({\n        emailId: EMAIL_IDS.FIND_LENDER_NOTIFICATION,\n        userId,\n        params: { loanId, assigneeName: user.assignedEmployee.name },\n      });\n    }\n  }\n\n  setStatus({ loanId, status }) {\n    const { status: oldStatus } = this.fetchOne({\n      $filters: { _id: loanId },\n      status: 1,\n    });\n\n    this.update({ loanId, object: { status } });\n    return { oldStatus, nextStatus: status };\n  }\n\n  askVerification = ({ loanId }) => {\n    const loan = this.get(loanId);\n\n    if (\n      loan.verificationStatus === LOAN_VERIFICATION_STATUS.REQUESTED\n      || loan.verificationStatus === LOAN_VERIFICATION_STATUS.OK\n    ) {\n      // Don't do anything if this loan is already in requested mode\n      throw new Meteor.Error('La vérification est déjà en cours, ou effectuée.');\n    }\n\n    return this.update({\n      loanId,\n      object: {\n        verificationStatus: LOAN_VERIFICATION_STATUS.REQUESTED,\n        userFormsEnabled: false,\n      },\n    });\n  };\n\n  insertPromotionLoan = ({\n    userId,\n    promotionId,\n    invitedBy,\n    showAllLots,\n    promotionLotIds = [],\n    shareSolvency,\n  }) => {\n    const customName = PromotionService.fetchOne({\n      $filters: { _id: promotionId },\n      name: 1,\n    }).name;\n    const loanId = this.insert({\n      loan: {\n        promotionLinks: [{ _id: promotionId, invitedBy, showAllLots }],\n        customName,\n        shareSolvency,\n      },\n      userId,\n    });\n\n    promotionLotIds.forEach((promotionLotId) => {\n      PromotionOptionService.insert({ promotionLotId, loanId });\n    });\n\n    this.addNewStructure({ loanId });\n\n    return loanId;\n  };\n\n  insertPropertyLoan = ({ userId, propertyIds, shareSolvency, loan }) => {\n    const customName = PropertyService.fetchOne({\n      $filters: { _id: propertyIds[0] },\n      address1: 1,\n    }).address1;\n    const loanId = this.insert({\n      loan: {\n        propertyIds,\n        customName,\n        shareSolvency,\n        ...loan,\n      },\n      userId,\n    });\n\n    this.addNewStructure({ loanId });\n    return loanId;\n  };\n\n  confirmClosing = ({ loanId, object }) =>\n    this.update({ loanId, object: { status: LOAN_STATUS.BILLING, ...object } });\n\n  pushValue = ({ loanId, object }) => Loans.update(loanId, { $push: object });\n\n  popValue = ({ loanId, object }) => Loans.update(loanId, { $pop: object });\n\n  pullValue = ({ loanId, object }) => Loans.update(loanId, { $pull: object });\n\n  addStructure = ({ loanId, structure, atIndex }) => {\n    const newStructureId = Random.id();\n    Loans.update(loanId, {\n      $push: {\n        structures: {\n          $each: [{ ...structure, id: newStructureId, disabled: false }],\n          $position: atIndex,\n        },\n      },\n    });\n    return newStructureId;\n  };\n\n  addNewStructure = ({ loanId, structure }) => {\n    const { structures, selectedStructure, propertyIds } = this.get(loanId);\n    const isFirstStructure = structures.length === 0;\n    const shouldCopyExistingStructure = !isFirstStructure && !structure && selectedStructure;\n\n    if (shouldCopyExistingStructure) {\n      structure = omit(structures.find(({ id }) => selectedStructure === id), [\n        'name',\n      ]);\n    }\n\n    const propertyId = (structure && structure.propertyId)\n      || (propertyIds.length > 0 ? propertyIds[0] : undefined);\n    const newStructureId = this.addStructure({\n      loanId,\n      structure: {\n        ...structure,\n        propertyId,\n        name:\n          (structure && structure.name)\n          || `Plan financier ${structures.length + 1}`,\n      },\n    });\n    this.update({\n      loanId,\n      object: isFirstStructure ? { selectedStructure: newStructureId } : {},\n    });\n\n    return newStructureId;\n  };\n\n  removeStructure = ({ loanId, structureId }) => {\n    const { selectedStructure: currentlySelected } = this.get(loanId);\n\n    if (currentlySelected === structureId) {\n      throw new Meteor.Error('Vous ne pouvez pas supprimer votre plan financier choisi');\n    }\n\n    const updateObj = {\n      $pull: { structures: { id: structureId } },\n    };\n\n    return Loans.update(loanId, updateObj, {\n      // Edge case fix: https://github.com/meteor/meteor/issues/4342\n      getAutoValues: false,\n    });\n  };\n\n  updateStructure = ({ loanId, structureId, structure }) => {\n    const currentStructure = this.get(loanId).structures.find(({ id }) => id === structureId);\n\n    return Loans.update(\n      { _id: loanId, 'structures.id': structureId },\n      { $set: { 'structures.$': { ...currentStructure, ...structure } } },\n    );\n  };\n\n  selectStructure = ({ loanId, structureId }) => {\n    // Make sure the structure exists\n    const structureExists = this.get(loanId).structures.some(({ id }) => id === structureId);\n\n    if (structureExists) {\n      return this.update({\n        loanId,\n        object: { selectedStructure: structureId },\n      });\n    }\n\n    throw new Meteor.Error(`Structure with id \"${structureId}\" does not exist`);\n  };\n\n  duplicateStructure = ({ loanId, structureId }) => {\n    const { structures } = this.get(loanId);\n    const currentStructure = structures.find(({ id }) => id === structureId);\n    const currentStructureIndex = structures.findIndex(({ id }) => id === structureId);\n\n    return (\n      !!currentStructure\n      && this.addStructure({\n        loanId,\n        structure: {\n          ...currentStructure,\n          name: `${currentStructure.name || 'Plan financier'} - copie`,\n          disabled: false,\n        },\n        atIndex: currentStructureIndex + 1,\n      })\n    );\n  };\n\n  addPropertyToLoan = ({ loanId, propertyId }) => {\n    const loan = this.get(loanId);\n    this.addLink({ id: loanId, linkName: 'properties', linkId: propertyId });\n\n    // Add this property to all structures that don't have a property\n    // for a better user experience\n    loan.structures.forEach(({ id, propertyId: structurePropertyId, promotionOptionId }) => {\n      if (!structurePropertyId && !promotionOptionId) {\n        this.updateStructure({\n          loanId,\n          structureId: id,\n          structure: { propertyId },\n        });\n      }\n    });\n  };\n\n  cleanupRemovedBorrower = ({ borrowerId }) => {\n    // Remove all references to this borrower on the loan\n    const loans = Loans.find({ borrowerIds: borrowerId }).fetch();\n    loans.forEach((loan) => {\n      this.update({\n        loanId: loan._id,\n        object: {\n          structures: loan.structures.map(structure => ({\n            ...structure,\n            ownFunds: structure.ownFunds.filter(({ borrowerId: bId }) => bId !== borrowerId),\n          })),\n        },\n      });\n    });\n  };\n\n  setPromotionPriorityOrder({ loanId, promotionId, priorityOrder }) {\n    return Loans.update(\n      { _id: loanId, 'promotionLinks._id': promotionId },\n      { $set: { 'promotionLinks.$.priorityOrder': priorityOrder } },\n    );\n  }\n\n  getPromotionPriorityOrder({ loanId, promotionId }) {\n    const promotionLink = this.get(loanId).promotionLinks.find(({ _id }) => _id === promotionId);\n    return promotionLink ? promotionLink.priorityOrder : [];\n  }\n\n  assignLoanToUser({ loanId, userId }) {\n    const {\n      properties = [],\n      borrowers = [],\n      referralId,\n      anonymous,\n    } = this.fetchOne({\n      $filters: { _id: loanId },\n      referralId: 1,\n      properties: { loans: { _id: 1 }, address1: 1, category: 1 },\n      borrowers: { loans: { _id: 1 }, name: 1 },\n      anonymous: 1,\n    });\n\n    borrowers.forEach(({ loans = [], name }) => {\n      if (loans.length > 1) {\n        throw new Meteor.Error(`Peut pas réassigner l'hypothèque, l'emprunteur \"${name}\" est assigné à plus d'une hypothèque`);\n      }\n    });\n    properties.forEach(({ loans = [], address1, category }) => {\n      if (category === PROPERTY_CATEGORY.USER && loans.length > 1) {\n        throw new Meteor.Error(`Peut pas réassigner l'hypothèque, le bien immobilier \"${address1}\" est assigné à plus d'une hypothèque`);\n      }\n    });\n\n    this.update({\n      loanId,\n      object: {\n        userId,\n        anonymous: false,\n        // If the loan was anonymous before, don't show welcome screen again\n        displayWelcomeScreen: anonymous ? false : undefined,\n      },\n    });\n    this.update({ loanId, object: { referralId: true }, operator: '$unset' });\n\n    borrowers.forEach(({ _id: borrowerId }) => {\n      BorrowerService.update({ borrowerId, object: { userId } });\n    });\n    properties.forEach(({ _id: propertyId, category }) => {\n      if (category === PROPERTY_CATEGORY.USER) {\n        PropertyService.update({ propertyId, object: { userId } });\n      }\n    });\n\n    // Refer this user only if he hasn't already been referred\n    if (referralId && UserService.exists(referralId)) {\n      const {\n        referredByUserLink,\n        referredByOrganisationLink,\n      } = UserService.fetchOne({\n        $filters: { _id: userId },\n        referredByUserLink: 1,\n        referredByOrganisationLink: 1,\n      });\n      if (!referredByUserLink && !referredByOrganisationLink) {\n        UserService.setReferredBy({ userId, proId: referralId });\n      }\n    }\n  }\n\n  switchBorrower({ loanId, borrowerId, oldBorrowerId }) {\n    const { borrowerIds } = this.get(loanId);\n    const { loans: oldBorrowerLoans = [] } = BorrowerService.createQuery({\n      $filters: { _id: oldBorrowerId },\n      loans: { name: 1 },\n    }).fetchOne();\n\n    if (borrowerIds.includes(borrowerId)) {\n      throw new Meteor.Error('Cet emprunteur est déjà sur ce prêt hypothécaire');\n    }\n\n    this.update({\n      loanId,\n      object: {\n        borrowerIds: borrowerIds.map(id =>\n          (id === oldBorrowerId ? borrowerId : id)),\n      },\n    });\n\n    if (oldBorrowerLoans.length === 1 && oldBorrowerLoans[0]._id === loanId) {\n      BorrowerService.remove({ borrowerId: oldBorrowerId });\n    }\n  }\n\n  sendNegativeFeedbackToAllLenders({ loanId }) {\n    const {\n      offers = [],\n      structure: { property },\n    } = this.createQuery({\n      $filters: { _id: loanId },\n      ...adminLoan({ withSort: true }),\n      $options: { sort: { createdAt: -1 } },\n    }).fetchOne() || {};\n\n    // Get lenders' last offer\n    const filteredOffers = offers.reduce((filtered, offer) => {\n      const {\n        lender: {\n          contact: { email: lenderEmail },\n        },\n      } = offer;\n\n      const lenderIsAlreadyInMailingList = filtered.find(({\n        lender: {\n          contact: { email },\n        },\n      }) => lenderEmail === email);\n\n      if (lenderIsAlreadyInMailingList) {\n        return filtered;\n      }\n\n      return [...filtered, offer];\n    }, []);\n\n    const promises = filteredOffers.map((offer) => {\n      const feedback = makeFeedback({\n        offer: { ...offer, property },\n        model: { option: FEEDBACK_OPTIONS.NEGATIVE_WITHOUT_FOLLOW_UP },\n        formatMessage: Intl.formatMessage.bind(Intl),\n      });\n      return OfferService.sendFeedback({\n        offerId: offer._id,\n        feedback,\n        saveFeedback: false,\n      });\n    });\n\n    return Promise.all(promises);\n  }\n\n  updatePromotionInvitedBy({ loanId, promotionId, invitedBy }) {\n    this.updateLinkMetadata({\n      id: loanId,\n      linkName: 'promotions',\n      linkId: promotionId,\n      metadata: { invitedBy },\n    });\n  }\n\n  reuseProperty({ loanId, propertyId }) {\n    const loan = this.get(loanId);\n\n    if (loan.propertyIds.includes(propertyId)) {\n      return false;\n    }\n\n    this.addLink({ id: loanId, linkName: 'properties', linkId: propertyId });\n  }\n\n  getMaxPropertyValueRange({ organisations, loan, residenceType, canton }) {\n    const { borrowers = [] } = loan;\n    const loanObject = Calculator.createLoanObject({\n      residenceType,\n      borrowers,\n      canton,\n    });\n    const maxPropertyValues = organisations\n      .map(({ lenderRules, name }) => {\n        const calculator = new CalculatorClass({\n          loan: loanObject,\n          lenderRules,\n        });\n\n        const {\n          borrowRatio,\n          propertyValue,\n        } = calculator.getMaxPropertyValueWithoutBorrowRatio({\n          borrowers,\n          residenceType,\n          canton,\n        });\n        if (propertyValue > 0 && borrowRatio > 0) {\n          return { borrowRatio, propertyValue, organisationName: name };\n        }\n\n        return null;\n      })\n      .filter(x => x);\n\n    const sortedValues = maxPropertyValues.sort(({ propertyValue: propertyValueA }, { propertyValue: propertyValueB }) =>\n      propertyValueA - propertyValueB);\n\n    if (sortedValues.length === 0) {\n      throw new Meteor.Error(\"Nous ne sommes pas parvenus à calculer votre capacité d'achat, contactez votre conseiller pour plus d'informations\");\n    }\n\n    // Only show min if there is more than 1 result\n    const showMin = sortedValues.length >= 2;\n    // Only show second max if there are more than 3 results\n    const showSecondMax = sortedValues.length >= 3;\n\n    const min = showMin ? sortedValues[0] : undefined;\n\n    // Don't take the max value, because that means there is only one single\n    // lender who can make an offer on this loan\n    const max = sortedValues[sortedValues.length - 1];\n    const secondMax = showSecondMax\n      ? sortedValues[sortedValues.length - 2]\n      : max;\n\n    // If there are at least 3 organisations, show a special label\n    // that combines the best and secondBest org\n    const maxOrganisationLabel = showSecondMax\n      ? `${secondMax\n          && secondMax.organisationName}${ORGANISATION_NAME_SEPARATOR}${\n        max.organisationName\n      } (${(max.borrowRatio * 100).toFixed(2)}%)`\n      : max.organisationName;\n\n    return {\n      min,\n      max: { ...secondMax, organisationName: maxOrganisationLabel },\n    };\n  }\n\n  getMaxPropertyValueWithoutBorrowRatio({ loan, canton, residenceType }) {\n    let query = { features: { $in: [ORGANISATION_FEATURES.LENDER] } };\n    if (loan.hasPromotion && loan.promotions[0].lenderOrganisationLink) {\n      query = { _id: loan.promotions[0].lenderOrganisationLink._id };\n    }\n\n    const lenderOrganisations = OrganisationService.fetch({\n      $filters: query,\n      lenderRules: lenderRulesFragment(),\n      name: 1,\n    });\n\n    return this.getMaxPropertyValueRange({\n      organisations: lenderOrganisations.filter(({ lenderRules }) => lenderRules && lenderRules.length > 0),\n      loan,\n      residenceType: residenceType || loan.residenceType,\n      canton,\n    });\n  }\n\n  setMaxPropertyValueWithoutBorrowRatio({ loanId, canton }) {\n    const loan = this.fetchOne({ $filters: { _id: loanId }, ...userLoan() });\n\n    const mainMaxPropertyValueRange = this.getMaxPropertyValueWithoutBorrowRatio({\n      loan,\n      residenceType: RESIDENCE_TYPE.MAIN_RESIDENCE,\n      canton,\n    });\n    const secondMaxPropertyValueRange = this.getMaxPropertyValueWithoutBorrowRatio({\n      loan,\n      residenceType: RESIDENCE_TYPE.SECOND_RESIDENCE,\n      canton,\n    });\n\n    const borrowerHash = Calculator.getBorrowerFormHash({\n      borrowers: loan.borrowers,\n    });\n\n    this.update({\n      loanId,\n      object: {\n        maxPropertyValue: {\n          main: mainMaxPropertyValueRange,\n          second: secondMaxPropertyValueRange,\n          canton,\n          date: new Date(),\n          borrowerHash,\n        },\n      },\n    });\n\n    return Promise.resolve();\n  }\n\n  addNewMaxStructure({ loanId, residenceType: newResidenceType, canton }) {\n    if (newResidenceType) {\n      // Set residence type if it is given\n      this.update({ loanId, object: { residenceType: newResidenceType } });\n    }\n\n    const loan = this.fetchOne({\n      $filters: { _id: loanId },\n      ...userLoan(),\n    });\n    const { properties = [], userId, borrowers, residenceType } = loan;\n\n    // Get the highest property value\n    const {\n      max: { borrowRatio, propertyValue, organisationName },\n    } = this.getMaxPropertyValueWithoutBorrowRatio({\n      loan,\n      canton,\n    });\n    const firstOrganisationName = organisationName.split(ORGANISATION_NAME_SEPARATOR)[0];\n\n    const organisation = OrganisationService.fetchOne({\n      $filters: { name: firstOrganisationName },\n      lenderRules: lenderRulesFragment(),\n    });\n\n    const calculator = new CalculatorClass({\n      loan,\n      lenderRules: organisation.lenderRules,\n    });\n\n    // Recalculate the best structure for this propertyvalue\n    const ownFunds = calculator.suggestStructure({\n      borrowers,\n      propertyValue,\n      loanValue: Math.round(propertyValue * borrowRatio),\n      canton,\n      residenceType,\n    });\n\n    let propertyWithCanton = properties.find(({ canton: propertyCanton }) => propertyCanton === canton);\n    const createNewProperty = !propertyWithCanton;\n\n    // If there is no property from this canton, insert a new one\n    // with the right canton\n    if (createNewProperty) {\n      const propertyId = PropertyService.insert({\n        property: {\n          address1: `Bien immo ${CANTONS[canton]}`,\n          zipCode: getZipcodeForCanton(canton),\n          value: propertyValue,\n        },\n        loanId,\n        userId,\n      });\n\n      propertyWithCanton = { _id: propertyId };\n    }\n\n    this.addNewStructure({\n      loanId,\n      structure: {\n        name: \"Capacité d'achat max.\",\n        description: CANTONS[canton],\n        propertyId: propertyWithCanton._id,\n        ownFunds,\n        propertyValue: createNewProperty ? undefined : propertyValue,\n        wantedLoan: Math.round(propertyValue * borrowRatio),\n      },\n    });\n  }\n\n  getLoanCalculator({ loanId, structureId }) {\n    const loan = fullLoan.clone({ _id: loanId }).fetchOne();\n    let lenderRules;\n\n    if (loan && loan.structure && loan.structure.offerId) {\n      lenderRules = loan.structure.offer.lender.organisation.lenderRules;\n    } else if (loan.hasPromotion) {\n      const { lenderOrganisationLink } = loan.promotions[0];\n      if (lenderOrganisationLink) {\n        lenderRules = LenderRulesService.fetch({\n          $filters: { 'organisationLink._id': lenderOrganisationLink._id },\n          ...lenderRulesFragment(),\n        });\n      }\n    }\n\n    if (!lenderRules || lenderRules.length === 0) {\n      return Calculator;\n    }\n\n    return new CalculatorClass({\n      loan,\n      structureId,\n      lenderRules,\n    });\n  }\n\n  expireAnonymousLoans() {\n    const lastWeek = moment()\n      .subtract(5, 'days')\n      .toDate();\n\n    return this.baseUpdate(\n      {\n        anonymous: true,\n        status: { $ne: LOAN_STATUS.UNSUCCESSFUL },\n        updatedAt: { $lte: lastWeek },\n      },\n      { $set: { status: LOAN_STATUS.UNSUCCESSFUL } },\n      { multi: true },\n    );\n  }\n\n  insertBorrowers({ loanId, amount }) {\n    const { borrowerIds: existingBorrowers = [], userId } = this.get(loanId);\n\n    if (existingBorrowers.length === 2) {\n      throw new Meteor.Error('Cannot insert more borrowers');\n    }\n\n    if (existingBorrowers.length === 1 && amount === 2) {\n      throw new Meteor.Error('Can insert only one more borrower');\n    }\n\n    if (amount === 1) {\n      const borrowerId = BorrowerService.insert({ userId });\n      this.addLink({\n        id: loanId,\n        linkName: 'borrowers',\n        linkId: borrowerId,\n      });\n    } else if (amount === 2) {\n      const borrowerId1 = BorrowerService.insert({ userId });\n      const borrowerId2 = BorrowerService.insert({ userId });\n      this.addLink({\n        id: loanId,\n        linkName: 'borrowers',\n        linkId: borrowerId1,\n      });\n      this.addLink({\n        id: loanId,\n        linkName: 'borrowers',\n        linkId: borrowerId2,\n      });\n    } else {\n      throw new Meteor.Error('Invalid borrowers number');\n    }\n  }\n\n  // Useful for demos\n  resetLoan({ loanId }) {\n    const loan = this.findOne({ _id: loanId });\n    const { structures = [], borrowerIds = [], status } = loan;\n\n    if (status !== LOAN_STATUS.TEST) {\n      throw new Meteor.Error('Seuls les dossiers avec le statut TEST peuvent être réinitialisés !');\n    }\n\n    // Set step to solvency\n    this.setStep({ loanId, nextStep: STEPS.SOLVENCY });\n\n    // Set application type to simple\n    this.update({\n      loanId,\n      object: { applicationType: APPLICATION_TYPES.SIMPLE },\n    });\n\n    // Remove structures and an empty one\n    // structures.forEach(({ _id: structureId }) => {\n    //   this.removeStructure({ loanId, structureId });\n    // });\n    // this.addNewStructure({ loanId });\n\n    // Remove MaxPropertyValue\n    this.update({\n      loanId,\n      object: { maxPropertyValue: true },\n      operator: '$unset',\n    });\n\n    // Reset borrowers financing info\n    // borrowerIds.forEach((borrowerId) => {\n    //   BorrowerService.update({\n    //     borrowerId,\n    //     object: {\n    //       netSalary: null,\n    //       salary: null,\n    //       bankFortune: null,\n    //       insurance2: [],\n    //       insurance3A: [],\n    //       bank3A: [],\n    //       insurance3B: [],\n    //       otherIncome: [],\n    //       otherFortune: [],\n    //       expenses: [],\n    //       realEstate: [],\n    //       bonusExists: false,\n    //       bonus2015: null,\n    //       bonus2016: null,\n    //       bonus2017: null,\n    //       bonus2018: null,\n    //       bonus2019: null,\n    //     },\n    //   });\n    // });\n  }\n\n  linkPromotion({ promotionId, loanId }) {\n    const { name: promotionName, promotionLoan } = PromotionService.fetchOne({\n      $filters: { _id: promotionId },\n      name: 1,\n      promotionLoan: { _id: 1 },\n    });\n\n    if (promotionLoan && promotionLoan._id) {\n      this.unlinkPromotion({ promotionId, loanId: promotionLoan._id });\n    }\n\n    this.addLink({\n      id: loanId,\n      linkName: 'financedPromotion',\n      linkId: promotionId,\n    });\n\n    this.update({\n      loanId,\n      object: { customName: `Financement de ${promotionName}` },\n    });\n\n    return loanId;\n  }\n\n  unlinkPromotion({ promotionId, loanId }) {\n    this.removeLink({\n      id: loanId,\n      linkName: 'financedPromotion',\n      linkId: promotionId,\n    });\n\n    return this.update({\n      loanId,\n      object: { customName: true },\n      operator: '$unset',\n    });\n  }\n\n  setCreatedAtActivityDescription({ loanId, description }) {\n    const { activities = [] } = this.fetchOne({\n      $filters: { _id: loanId },\n      activities: { secondaryType: 1 },\n    });\n    const { _id: createdAtActivityId } = activities.find(({ secondaryType }) =>\n      secondaryType === ACTIVITY_SECONDARY_TYPES.CREATED) || {};\n\n    if (createdAtActivityId) {\n      ActivityService._update({\n        id: createdAtActivityId,\n        object: { description },\n      });\n    }\n\n    return loanId;\n  }\n}\n\nexport default new LoanService({});\n","import { SyncedCron } from 'meteor/littledata:synced-cron';\n\nimport SlackService from '../../slack/server/SlackService';\nimport LoanService from './LoanService';\n\nSyncedCron.add({\n  name: 'Expire anonymous loans',\n  schedule(parser) {\n    return parser.text('every day');\n  },\n  job() {\n    try {\n      const count = LoanService.expireAnonymousLoans();\n      console.log(`Expired ${count} loans`);\n    } catch (error) {\n      SlackService.sendError({\n        error,\n        additionalData: ['Expire anonymous loans CRON error'],\n      });\n    }\n  },\n});\n","import { Match } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { formatLoanWithDocuments } from '../../../utils/loanFunctions';\nimport UserService from '../../users/server/UserService';\nimport { createSearchFilters } from '../../helpers/mongoHelpers';\nimport { exposeQuery } from '../../queries/queryHelpers';\nimport SecurityService from '../../security';\n\nimport {\n  adminLoans,\n  anonymousLoan,\n  fullLoan,\n  loanSearch,\n  proLoans,\n  proPromotionLoans,\n  proPropertyLoans,\n  proReferredByLoans,\n  userLoans,\n} from '../queries';\nimport { LOAN_STATUS } from '../loanConstants';\nimport {\n  proLoansResolver,\n  getLoanIds,\n  proPromotionLoansResolver,\n  proPropertyLoansResolver,\n  proReferredByLoansResolver,\n} from './resolvers';\n\nexposeQuery({\n  query: adminLoans,\n  overrides: {\n    embody: (body, params) => {\n      body.$filter = ({\n        filters,\n        params: {\n          _id,\n          assignedEmployeeId,\n          category,\n          hasPromotion,\n          noPromotion,\n          lenderId,\n          name,\n          owned,\n          promotionId,\n          relevantOnly,\n          status,\n          step,\n        },\n      }) => {\n        if (_id) {\n          filters._id = _id;\n        }\n\n        if (name) {\n          filters.name = name;\n        }\n\n        if (owned) {\n          filters.userId = { $exists: true };\n        }\n\n        if (assignedEmployeeId) {\n          filters['userCache.assignedEmployeeCache._id'] = assignedEmployeeId;\n        }\n\n        if (relevantOnly) {\n          filters.status = {\n            $nin: [LOAN_STATUS.TEST, LOAN_STATUS.UNSUCCESSFUL],\n          };\n          filters.anonymous = { $ne: true };\n        }\n\n        if (step) {\n          filters.step = step;\n        }\n\n        if (category) {\n          filters.category = category;\n        }\n\n        if (status) {\n          filters.status = status;\n        }\n\n        if (hasPromotion) {\n          filters.$or = [\n            { 'promotionLinks.0._id': { $exists: true } },\n            { 'financedPromotionLink._id': { $exists: true } },\n          ];\n        }\n\n        if (promotionId) {\n          filters.$or = [\n            { 'promotionLinks.0._id': promotionId },\n            { 'financedPromotionLink._id': promotionId },\n          ];\n        }\n\n        if (noPromotion) {\n          filters['promotionLinks.0._id'] = { $exists: false };\n        }\n\n        if (lenderId) {\n          filters.lendersCache = {\n            $elemMatch: { 'organisationLink._id': lenderId },\n          };\n        }\n      };\n    },\n    validateParams: {\n      _id: Match.Maybe(String),\n      assignedEmployeeId: Match.Maybe(Match.OneOf(Object, String)),\n      category: Match.Maybe(Match.OneOf(Object, String)),\n      hasPromotion: Match.Maybe(Boolean),\n      lenderId: Match.Maybe(Match.OneOf(Object, String)),\n      name: Match.Maybe(String),\n      noPromotion: Match.Maybe(Boolean),\n      owned: Match.Maybe(Boolean),\n      promotionId: Match.Maybe(Match.OneOf(Object, String)),\n      relevantOnly: Match.Maybe(Boolean),\n      status: Match.Maybe(Match.OneOf(Object, String)),\n      step: Match.Maybe(Match.OneOf(Object, String)),\n    },\n  },\n});\n\nexposeQuery({\n  query: anonymousLoan,\n  overrides: {\n    firewall(userId, params) {\n      SecurityService.loans.checkAnonymousLoan(params._id);\n    },\n    validateParams: { _id: String },\n  },\n  options: { allowFilterById: true },\n});\n\nexposeQuery({\n  query: fullLoan,\n  overrides: {\n    embody: (body) => {\n      body.$postFilter = (loans = []) => loans.map(formatLoanWithDocuments);\n    },\n  },\n  options: { allowFilterById: true },\n});\n\nexposeQuery({\n  query: loanSearch,\n  overrides: {\n    firewall(userId) {\n      SecurityService.checkUserIsAdmin(userId);\n    },\n    embody: (body) => {\n      body.$filter = ({ filters, params: { searchQuery } }) => {\n        Object.assign(\n          filters,\n          createSearchFilters(['name', '_id', 'customName'], searchQuery),\n        );\n      };\n    },\n    validateParams: { searchQuery: Match.Maybe(String) },\n  },\n});\n\nexposeQuery({\n  query: proLoans,\n  overrides: {\n    firewall(userId, params) {\n      const {\n        userId: providedUserId,\n        fetchOrganisationLoans,\n        organisationId,\n        promotionId,\n        propertyId,\n      } = params;\n      params.calledByUserId = userId;\n\n      if (providedUserId && SecurityService.isUserAdmin(userId)) {\n        params.userId = providedUserId;\n      } else {\n        params.userId = userId;\n      }\n\n      if (fetchOrganisationLoans) {\n        if (organisationId) {\n          SecurityService.checkUserIsAdmin(userId);\n        } else {\n          const { organisations } = UserService.fetchOne({\n            $filters: { _id: userId },\n            organisations: { _id: 1 },\n          });\n\n          if (!organisations || organisations.length === 0) {\n            throw new Meteor.Error(\"Pas d'organisation!\");\n          }\n\n          params.organisationId = organisations[0]._id;\n        }\n      }\n\n      SecurityService.checkUserIsPro(userId);\n    },\n    validateParams: {\n      promotionId: Match.Maybe(Match.OneOf(String, Object)),\n      propertyId: Match.Maybe(Match.OneOf(String, Object)),\n      userId: String,\n      calledByUserId: String,\n      organisationId: Match.Maybe(String),\n      fetchOrganisationLoans: Match.Maybe(Boolean),\n      status: Match.Maybe(Match.OneOf(String, Object)),\n    },\n  },\n  cacher: {\n    getDataToHash: getLoanIds({ withReferredBy: true }),\n    ttl: 60 * 1000,\n  },\n  resolver: proLoansResolver,\n});\n\nexposeQuery({\n  query: proPromotionLoans,\n  overrides: {\n    firewall(userId, params) {\n      const { promotionId } = params;\n      params.userId = userId;\n      SecurityService.checkUserIsPro(userId);\n      SecurityService.promotions.isAllowedToView({ userId, promotionId });\n    },\n    validateParams: {\n      promotionId: String,\n      userId: String,\n    },\n  },\n  resolver: ({ userId, promotionId }) =>\n    proPromotionLoansResolver({ calledByUserId: userId, promotionId }),\n});\n\nexposeQuery({\n  query: proPropertyLoans,\n  overrides: {\n    firewall(userId, params) {\n      const { propertyId } = params;\n      params.userId = userId;\n      SecurityService.checkUserIsPro(userId);\n      SecurityService.properties.isAllowedToView({ propertyId, userId });\n    },\n    validateParams: {\n      propertyId: String,\n      userId: String,\n    },\n  },\n  resolver: ({ userId, propertyId }) =>\n    proPropertyLoansResolver({ calledByUserId: userId, propertyId }),\n});\n\nexposeQuery({\n  query: proReferredByLoans,\n  overrides: {\n    firewall(userId, params) {\n      const { userId: providedUserId } = params;\n      SecurityService.checkUserIsPro(userId);\n      if (SecurityService.isUserAdmin(userId)) {\n        params.userId = providedUserId;\n      } else {\n        params.userId = userId;\n      }\n      params.calledByUserId = userId;\n    },\n    validateParams: {\n      userId: String,\n      calledByUserId: String,\n    },\n  },\n  resolver: proReferredByLoansResolver,\n});\n\nexposeQuery({\n  query: userLoans,\n  overrides: {\n    firewall(userId, params) {\n      if (params.userId) {\n        SecurityService.checkUserIsAdmin(userId);\n      } else {\n        params.userId = userId;\n\n        if (!userId) {\n          SecurityService.loans.checkAnonymousLoan(params.loanId);\n        }\n      }\n    },\n    embody: (body, embodyParams) => {\n      body.$filter = ({ filters, params }) => {\n        filters.userId = params.userId;\n        if (params.loanId) {\n          filters._id = params.loanId;\n        }\n      };\n\n      if (!embodyParams.userId) {\n        body.maxPropertyValue = 0;\n      }\n    },\n    validateParams: {\n      loanId: Match.Maybe(String),\n      userId: Match.Maybe(String),\n    },\n  },\n});\n","import FileService from '../../files/server/FileService';\nimport BorrowerService from '../../borrowers/server/BorrowerService';\nimport PropertyService from '../../properties/server/PropertyService';\nimport UpdateWatcherService from '../../updateWatchers/server/UpdateWatcherService';\nimport ActivityService from '../../activities/server/ActivityService';\nimport SecurityService from '../../security';\nimport { ROLES, PROPERTY_CATEGORY } from '../../constants';\nimport Loans from '../loans';\n\n// Autoremove borrowers and properties\nLoans.before.remove((userId, { borrowerIds, propertyIds }) => {\n  borrowerIds.forEach((borrowerId) => {\n    const { loans } = BorrowerService.createQuery({\n      $filters: { _id: borrowerId },\n      loans: { _id: 1 },\n    }).fetchOne();\n\n    if (loans.length === 1) {\n      BorrowerService.remove({ borrowerId });\n    }\n  });\n  propertyIds.forEach((propertyId) => {\n    const { loans, category } = PropertyService.createQuery({\n      $filters: { _id: propertyId },\n      loans: { _id: 1 },\n      category: 1,\n    }).fetchOne();\n\n    if (loans.length === 1 && category === PROPERTY_CATEGORY.USER) {\n      PropertyService.remove({ propertyId });\n    }\n  });\n});\n\nUpdateWatcherService.addUpdateWatching({\n  collection: Loans,\n  fields: [\n    'applicationType',\n    'contacts',\n    'customName',\n    'previousLoanTranches',\n    'purchaseType',\n    'residenceType',\n    'step',\n    'verificationStatus',\n    // 'selectedStructure',\n    // 'structures', // The structures notifications are hard to read in slack\n  ],\n  shouldWatch: ({ userId }) =>\n    SecurityService.hasRole(userId, ROLES.USER)\n    || SecurityService.hasRole(userId, ROLES.PRO),\n});\n\nLoans.after.remove((userId, { _id }) => FileService.deleteAllFilesForDoc(_id));\n\nLoans.after.insert((userId, doc) =>\n  ActivityService.addCreatedAtActivity({\n    createdAt: doc.createdAt,\n    loanLink: { _id: doc._id },\n    title: 'Dossier créé',\n  }));\n","import ServerEventService from '../../events/server/ServerEventService';\nimport LoanService from './LoanService';\nimport { requestLoanVerification } from '../..';\n\nexport const disableUserFormsListener = ({ params: { loanId } }) => {\n  LoanService.update({ loanId, object: { userFormsEnabled: false } });\n};\n\nServerEventService.addAfterMethodListener(\n  requestLoanVerification,\n  disableUserFormsListener,\n);\n","import Analytics from '../../analytics/server/Analytics';\nimport { checkInsertUserId } from '../../helpers/server/methodServerHelpers';\nimport EVENTS from '../../analytics/events';\n\nimport Security from '../../security/Security';\nimport SecurityService from '../../security';\nimport {\n  loanInsert,\n  loanUpdate,\n  loanDelete,\n  requestLoanVerification,\n  confirmClosing,\n  pushLoanValue,\n  popLoanValue,\n  adminLoanInsert,\n  addNewStructure,\n  removeStructure,\n  updateStructure,\n  selectStructure,\n  duplicateStructure,\n  assignLoanToUser,\n  switchBorrower,\n  sendNegativeFeedbackToAllLenders,\n  loanUpdatePromotionInvitedBy,\n  reuseProperty,\n  setMaxPropertyValueWithoutBorrowRatio,\n  addNewMaxStructure,\n  setLoanStep,\n  loanShareSolvency,\n  anonymousLoanInsert,\n  userLoanInsert,\n  loanInsertBorrowers,\n  adminLoanReset,\n  loanLinkPromotion,\n  loanUnlinkPromotion,\n  loanSetCreatedAtActivityDescription,\n  loanSetStatus,\n} from '../methodDefinitions';\nimport { STEPS, LOAN_STATUS } from '../loanConstants';\nimport LoanService from './LoanService';\n\nloanInsert.setHandler((context, { loan, userId }) => {\n  userId = checkInsertUserId(userId);\n  return LoanService.insert({ loan, userId });\n});\n\nloanUpdate.setHandler((context, { loanId, object }) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.update({ loanId, object });\n});\n\nloanDelete.setHandler((context, { loanId }) => {\n  SecurityService.loans.isAllowedToDelete(loanId);\n  return LoanService.remove({ loanId });\n});\n\nrequestLoanVerification.setHandler((context, { loanId }) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.askVerification({ loanId });\n});\n\nconfirmClosing.setHandler((context, { loanId, object }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return LoanService.confirmClosing({ loanId, object });\n});\n\npushLoanValue.setHandler((context, { loanId, object }) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.pushValue({ loanId, object });\n});\n\npopLoanValue.setHandler((context, { loanId, object }) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.popValue({ loanId, object });\n});\n\nexport const adminLoanInsertHandler = ({ userId: adminUserId }, { userId }) => {\n  SecurityService.checkUserIsAdmin(adminUserId);\n  return LoanService.fullLoanInsert({ userId });\n};\nadminLoanInsert.setHandler(adminLoanInsertHandler);\n\nuserLoanInsert.setHandler(({ userId }, { test, proPropertyId }) => {\n  SecurityService.checkLoggedIn();\n\n  if (proPropertyId) {\n    return LoanService.insertPropertyLoan({\n      userId,\n      propertyIds: [proPropertyId],\n      loan: { displayWelcomeScreen: false },\n    });\n  }\n\n  return LoanService.fullLoanInsert({\n    userId,\n    loan: {\n      displayWelcomeScreen: false,\n      status: test ? LOAN_STATUS.TEST : LOAN_STATUS.LEAD,\n    },\n  });\n});\n\nexport const addStructureHandler = (context, { loanId }) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.addNewStructure({ loanId });\n};\naddNewStructure.setHandler(addStructureHandler);\n\nexport const removeStructureHandler = (context, { loanId, structureId }) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.removeStructure({ loanId, structureId });\n};\nremoveStructure.setHandler(removeStructureHandler);\n\nexport const updateStructureHandler = (\n  context,\n  { loanId, structureId, structure },\n) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.updateStructure({ loanId, structureId, structure });\n};\nupdateStructure.setHandler(updateStructureHandler);\n\nexport const selectStructureHandler = (context, { loanId, structureId }) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.selectStructure({ loanId, structureId });\n};\nselectStructure.setHandler(selectStructureHandler);\n\nexport const duplicateStructureHandler = (context, { loanId, structureId }) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.duplicateStructure({ loanId, structureId });\n};\nduplicateStructure.setHandler(duplicateStructureHandler);\n\nassignLoanToUser.setHandler(({ userId }, params) => {\n  const { anonymous } = LoanService.fetchOne({\n    $filters: { _id: params.loanId },\n    anonymous: 1,\n  });\n\n  if (anonymous) {\n    SecurityService.loans.checkAnonymousLoan(params.loanId);\n  } else {\n    SecurityService.checkUserIsAdmin(userId);\n  }\n\n  LoanService.assignLoanToUser(params);\n});\n\nswitchBorrower.setHandler((context, params) => {\n  SecurityService.loans.isAllowedToUpdate(params.loanId);\n  return LoanService.switchBorrower(params);\n});\n\nsendNegativeFeedbackToAllLenders.setHandler((context, params) => {\n  const { userId } = context;\n  Security.checkUserIsAdmin(userId);\n  context.unblock();\n  return LoanService.sendNegativeFeedbackToAllLenders(params);\n});\n\nloanUpdatePromotionInvitedBy.setHandler(({ userId }, params) => {\n  Security.checkUserIsAdmin(userId);\n  LoanService.updatePromotionInvitedBy(params);\n});\n\nreuseProperty.setHandler((context, params) => {\n  SecurityService.loans.isAllowedToUpdate(params.loanId);\n  LoanService.reuseProperty(params);\n});\n\nsetMaxPropertyValueWithoutBorrowRatio.setHandler((context, params) => {\n  SecurityService.loans.isAllowedToUpdate(params.loanId);\n  return LoanService.setMaxPropertyValueWithoutBorrowRatio(params);\n});\n\naddNewMaxStructure.setHandler((context, params) => {\n  SecurityService.loans.isAllowedToUpdate(params.loanId);\n  return LoanService.addNewMaxStructure(params);\n});\n\nsetLoanStep.setHandler((context, params) => {\n  const userAllowedSteps = [STEPS.SOLVENCY, STEPS.REQUEST];\n\n  if (userAllowedSteps.includes(params.nextStep)) {\n    SecurityService.loans.isAllowedToUpdate(params.loanId);\n  } else {\n    Security.checkUserIsAdmin(context.userId);\n  }\n\n  context.unblock();\n  return LoanService.setStep(params);\n});\n\nloanShareSolvency.setHandler((context, params) => {\n  const { loanId, shareSolvency } = params;\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.update({\n    loanId: params.loanId,\n    object: { shareSolvency },\n  });\n});\n\nanonymousLoanInsert.setHandler((context, params) => {\n  const {\n    proPropertyId,\n    existingAnonymousLoanId,\n    referralId,\n    trackingId,\n  } = params;\n  if (proPropertyId) {\n    SecurityService.properties.isAllowedToAddAnonymousLoan({\n      propertyId: proPropertyId,\n    });\n  }\n\n  if (existingAnonymousLoanId) {\n    // If an anonymous loan exists on the client, don't add another one\n    // If a new property is requested on it, add it to the existing loan\n    if (proPropertyId) {\n      const existingLoan = LoanService.fetchOne({\n        $filters: { _id: existingAnonymousLoanId },\n        propertyIds: 1,\n      });\n\n      if (\n        existingLoan\n        && existingLoan.propertyIds\n        && !existingLoan.propertyIds.includes(proPropertyId)\n      ) {\n        // TODO: Quentin, track this\n        LoanService.addPropertyToLoan({\n          loanId: existingAnonymousLoanId,\n          propertyId: proPropertyId,\n        });\n      }\n    }\n\n    return existingAnonymousLoanId;\n  }\n\n  const loanId = LoanService.insertAnonymousLoan(params);\n  const analytics = new Analytics(context);\n  analytics.track(\n    EVENTS.LOAN_CREATED,\n    {\n      loanId,\n      propertyId: proPropertyId,\n      referralId,\n      anonymous: true,\n    },\n    trackingId,\n  );\n  return loanId;\n});\n\nloanInsertBorrowers.setHandler((context, params) => {\n  const { loanId } = params;\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  LoanService.insertBorrowers(params);\n});\n\nadminLoanReset.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return LoanService.resetLoan(params);\n});\n\nloanLinkPromotion.setHandler(({ userId }, params) => {\n  SecurityService.checkUserIsAdmin(userId);\n  return LoanService.linkPromotion(params);\n});\n\nloanUnlinkPromotion.setHandler(({ userId }, params) => {\n  SecurityService.checkUserIsAdmin(userId);\n  return LoanService.unlinkPromotion(params);\n});\n\nloanSetCreatedAtActivityDescription.setHandler(({ userId }, params) => {\n  SecurityService.checkUserIsAdmin(userId);\n  return LoanService.setCreatedAtActivityDescription(params);\n});\n\nloanSetStatus.setHandler(({ userId }, params) => {\n  SecurityService.checkUserIsAdmin(userId);\n  return LoanService.setStatus(params);\n});\n","// @flow\nimport uniqBy from 'lodash/uniqBy';\n\nimport {\n  PROPERTIES_COLLECTION,\n  PROPERTY_CATEGORY,\n  RESIDENCE_TYPE,\n  PROPERTY_SOLVENCY,\n} from '../../properties/propertyConstants';\nimport { PROMOTIONS_COLLECTION } from '../../promotions/promotionConstants';\nimport UserService from '../../users/server/UserService';\nimport { makeLoanAnonymizer as makePromotionLoanAnonymizer } from '../../promotions/server/promotionServerHelpers';\nimport { proLoans, revenue } from '../../fragments';\nimport SecurityService from '../../security';\nimport { makeProPropertyLoanAnonymizer } from '../../properties/server/propertyServerHelpers';\nimport OrganisationService from '../../organisations/server/OrganisationService';\nimport LoanService from './LoanService';\n\nconst proLoansFragment = proLoans();\n\nconst isSolventForProProperty = ({\n  isAdmin,\n  property,\n  maxPropertyValue,\n  residenceType,\n  shareSolvency,\n}) => {\n  if (!maxPropertyValue) {\n    return PROPERTY_SOLVENCY.UNDETERMINED;\n  }\n\n  if (!shareSolvency && !isAdmin) {\n    return PROPERTY_SOLVENCY.NOT_SHARED;\n  }\n\n  const {\n    main: {\n      max: { propertyValue: mainMaxValue },\n    },\n    second: {\n      max: { propertyValue: secondMaxValue },\n    },\n  } = maxPropertyValue;\n  const { totalValue } = property;\n\n  switch (residenceType) {\n  case RESIDENCE_TYPE.MAIN_RESIDENCE: {\n    return totalValue <= mainMaxValue\n      ? PROPERTY_SOLVENCY.SOLVENT\n      : PROPERTY_SOLVENCY.INSOLVENT;\n  }\n  case RESIDENCE_TYPE.SECOND_RESIDENCE: {\n    return totalValue <= secondMaxValue\n      ? PROPERTY_SOLVENCY.SOLVENT\n      : PROPERTY_SOLVENCY.INSOLVENT;\n  }\n  default:\n    return null;\n  }\n};\n\nconst handleLoanSolvencySharing = ({ isAdmin = false }) => (loanObject) => {\n  const { maxPropertyValue, shareSolvency, ...loan } = loanObject;\n\n  const propertiesWithSolvency = loan.properties.map(property => ({\n    ...property,\n    solvent: isSolventForProProperty({\n      isAdmin,\n      property,\n      maxPropertyValue,\n      residenceType: loan.residenceType,\n      shareSolvency,\n    }),\n  }));\n\n  return {\n    ...loan,\n    properties: propertiesWithSolvency,\n  };\n};\n\nconst anonymizePromotionLoans = ({ loans = [], userId }) =>\n  loans.map((loan) => {\n    const { promotions } = loan;\n    const promotionId = promotions[0]._id;\n\n    const promotionLoanAnonymizer = makePromotionLoanAnonymizer({\n      userId,\n      promotionId,\n    });\n\n    return promotionLoanAnonymizer(loan);\n  });\n\nconst anonymizePropertyLoans = ({ loans = [], userId }) =>\n  loans.map((loan) => {\n    const { properties } = loan;\n    const proPropertyIds = properties\n      .filter(({ category }) => category === PROPERTY_CATEGORY.PRO)\n      .map(({ _id }) => _id);\n    return makeProPropertyLoanAnonymizer({\n      userId,\n      propertyIds: proPropertyIds,\n    })(loan);\n  });\n\nconst anonymizeReferredByLoans = ({ loans = [], userId }) => [\n  ...loans,\n  // Don't anonymize referred loans\n  // ...anonymizePromotionLoans({\n  //   loans: loans.filter(({ hasPromotion }) => hasPromotion),\n  //   userId,\n  // }),\n\n  // ...anonymizePropertyLoans({\n  //   loans: loans.filter(({ hasProProperty }) => hasProProperty),\n  //   userId,\n  // }),\n  // ...loans.filter(({ hasPromotion, hasProProperty }) => !hasPromotion && !hasProProperty),\n];\n\nconst doesUserShareCustomers = ({ $metadata: { shareCustomers } }) =>\n  shareCustomers;\n\nexport const proReferredByLoansResolver = ({\n  userId,\n  calledByUserId,\n  status,\n}) => {\n  const mainOrganisation = UserService.getUserMainOrganisation(userId);\n  let mainOrganisationsUserIds = [];\n\n  if (mainOrganisation) {\n    const { _id: mainOrganisationId } = mainOrganisation;\n\n    const { users: mainOrganisationUsers = [] } = OrganisationService.fetchOne({\n      $filters: { _id: mainOrganisationId },\n      users: { _id: 1 },\n    });\n    mainOrganisationsUserIds = mainOrganisationUsers\n      .filter(({ _id }) => _id !== userId)\n      .filter(doesUserShareCustomers)\n      .map(({ _id }) => _id);\n  }\n\n  const users = UserService.fetch({\n    $filters: {\n      referredByUserLink: { $in: [userId, ...mainOrganisationsUserIds] },\n    },\n    loans: { ...proLoansFragment, $filters: status ? { status } : {} },\n  });\n\n  const loans = users.reduce(\n    (allLoans, { loans: userLoans = [] }) => [...allLoans, ...userLoans],\n    [],\n  );\n\n  try {\n    SecurityService.checkUserIsAdmin(calledByUserId);\n    return loans;\n  } catch (error) {\n    return anonymizeReferredByLoans({ loans, userId: calledByUserId });\n  }\n};\n\nexport const proPromotionLoansResolver = ({\n  calledByUserId,\n  promotionId,\n  status,\n}) => {\n  const loans = LoanService.fetch({\n    $filters: { 'promotionLinks._id': promotionId, status },\n    ...proLoansFragment,\n  });\n\n  try {\n    SecurityService.checkUserIsAdmin(calledByUserId);\n    return loans;\n  } catch (error) {\n    return anonymizePromotionLoans({ loans, userId: calledByUserId });\n  }\n};\n\nexport const proPropertyLoansResolver = ({\n  calledByUserId,\n  propertyId,\n  status,\n}) => {\n  const loans = LoanService.fetch({\n    $filters: { propertyIds: propertyId, status },\n    ...proLoansFragment,\n  });\n\n  try {\n    SecurityService.checkUserIsAdmin(calledByUserId);\n    return loans.map(handleLoanSolvencySharing({ isAdmin: true }));\n  } catch (error) {\n    return anonymizePropertyLoans({\n      loans: loans.map(handleLoanSolvencySharing({ isAdmin: false })),\n      userId: calledByUserId,\n    });\n  }\n};\n\nconst shouldShowPromotionLoan = ({ userId }) => (loan) => {\n  const { promotions = [] } = loan;\n  const {\n    $metadata: { invitedBy },\n  } = promotions[0];\n  return invitedBy === userId;\n};\n\nconst getRelatedProPropertiesOfUser = ({ loan, userId }) => {\n  const { properties = [] } = loan;\n  return properties\n    .filter(property => property.category === PROPERTY_CATEGORY.PRO)\n    .filter(({ users = [] }) => users.some(({ _id }) => _id === userId))\n    .map(property => ({ ...property, collection: PROPERTIES_COLLECTION }));\n};\n\nconst promotionHasUser = userId => ({ users = [] }) =>\n  users.some(({ _id }) => _id === userId);\n\nconst getRelatedPromotionsOfUser = ({ loan, userId }) => {\n  const { promotions = [] } = loan;\n  return promotions\n    .filter(promotionHasUser(userId))\n    .map(promotion => ({ ...promotion, collection: PROMOTIONS_COLLECTION }));\n};\n\nconst organisationLoans = ({ organisationId, status }) =>\n  LoanService.fetch({\n    $filters: {\n      'userCache.referredByOrganisationLink': organisationId,\n      status,\n    },\n    ...proLoansFragment,\n    revenues: revenue(),\n    user: { organisationLink: 1 },\n  });\n\nexport const proLoansResolver = ({\n  userId,\n  calledByUserId,\n  promotionId,\n  propertyId,\n  fetchOrganisationLoans,\n  organisationId,\n  status,\n}) => {\n  let loans = [];\n\n  if (fetchOrganisationLoans) {\n    return organisationLoans({ organisationId, status });\n  }\n\n  if (promotionId) {\n    const promotionLoans = proPromotionLoansResolver({\n      calledByUserId,\n      promotionId,\n      status,\n    })\n      .filter(shouldShowPromotionLoan({ userId }))\n      .map(loan => ({\n        ...loan,\n        relatedTo: getRelatedPromotionsOfUser({ loan, userId }),\n      }));\n    loans = promotionLoans;\n  }\n\n  if (propertyId) {\n    const propertyLoans = proPropertyLoansResolver({\n      calledByUserId,\n      propertyId,\n      status,\n    }).map(loan => ({\n      ...loan,\n      relatedTo: getRelatedProPropertiesOfUser({ loan, userId }),\n    }));\n    loans = [...loans, ...propertyLoans];\n  }\n\n  const referredByLoans = proReferredByLoansResolver({\n    userId,\n    calledByUserId,\n    status,\n  }).map(loan => ({\n    ...loan,\n    relatedTo: [\n      ...getRelatedProPropertiesOfUser({ loan, userId }),\n      ...getRelatedPromotionsOfUser({ loan, userId }),\n    ],\n  }));\n  loans = [...loans, ...referredByLoans];\n\n  return uniqBy(loans, '_id');\n};\n\nexport const getLoanIds = ({ withReferredBy = false } = {}) => (params = {}) => {\n  const { promotionId, propertyId, userId, status } = params;\n  let loanIds = [];\n\n  if (withReferredBy) {\n    const { organisations = [] } = UserService.fetch({\n      $filters: { _id: userId },\n      organisations: { _id: 1 },\n    });\n\n    const organisationId = !!organisations.length && organisations[0]._id;\n\n    const users = UserService.fetch({\n      $filters: {\n        $or: [\n          { referredByUserLink: userId },\n          organisationId && { referredByOrganisationLink: organisationId },\n        ].filter(x => x),\n      },\n      loans: { _id: 1, $filters: status ? { status } : {} },\n    });\n\n    loanIds = users.reduce(\n      (allLoans, { loans: userLoans = [] }) => [\n        ...allLoans,\n        ...userLoans.map(({ _id }) => _id),\n      ],\n      [],\n    );\n  }\n\n  if (promotionId) {\n    const promotionLoanIds = LoanService.fetch({\n      $filters: { 'promotionLinks._id': promotionId, status },\n      _id: 1,\n    });\n    loanIds = [...loanIds, ...promotionLoanIds.map(({ _id }) => _id)];\n  }\n\n  if (propertyId) {\n    const propertyLoanIds = LoanService.fetch({\n      $filters: { propertyIds: propertyId, status },\n      _id: 1,\n    });\n    loanIds = [...loanIds, ...propertyLoanIds.map(({ _id }) => _id)];\n  }\n\n  return loanIds;\n};\n","import merge from 'lodash/merge';\nimport omit from 'lodash/omit';\n\nimport Calculator from '../../../utils/Calculator';\nimport Loans from '../loans';\nimport assigneeReducer from '../../reducers/assigneeReducer';\nimport { userLoan } from '../../fragments';\n\nconst body = merge(\n  {},\n  omit(userLoan(), [\n    'maxPropertyValue',\n    'offers',\n    'promotions',\n    'user',\n    'promotionOptions',\n    'borrowers.mortgageNotes',\n    'borrowers.loans',\n  ]),\n  {\n    documents: 1,\n    borrowers: {\n      documents: 1,\n    },\n    properties: {\n      documents: 1,\n    },\n  },\n);\n\nLoans.addReducers({\n  ...assigneeReducer(),\n  loanProgress: {\n    body,\n    reduce: loan => ({\n      info: Calculator.personalInfoPercent({ loan }),\n      documents: Calculator.filesProgress({ loan }).percent,\n      verificationStatus: loan.verificationStatus,\n    }),\n  },\n});\n","import { RESIDENCE_TYPE, STEPS } from '../constants';\n\nexport const emptyLoan = {\n  step: STEPS.SOLVENCY,\n  documents: {},\n  contacts: [],\n};\n\nexport const loanStep1 = {\n  residenceType: RESIDENCE_TYPE.MAIN_RESIDENCE,\n  purchaseType: 'ACQUISITION',\n  step: STEPS.SOLVENCY,\n  structures: [\n    {\n      id: 'randomStructureId',\n      wantedLoan: 800000,\n    },\n  ],\n  selectedStructure: 'randomStructureId',\n};\n\nexport const loanStep2 = {\n  residenceType: RESIDENCE_TYPE.MAIN_RESIDENCE,\n  purchaseType: 'ACQUISITION',\n  step: STEPS.OFFERS,\n  displayWelcomeScreen: false,\n  structures: [\n    {\n      id: 'randomStructureId',\n      wantedLoan: 800000,\n    },\n  ],\n  selectedStructure: 'randomStructureId',\n  contacts: [\n    {\n      name: 'Jean Dupont',\n      phoneNumber: '+41 22 566 01 10',\n      title: 'Courtier immobilier',\n      email: 'digital@e-potek.ch',\n    },\n  ],\n};\n","// @flow\nexport * from './methodDefinitions';\nexport { default } from './loans';\n","// @flow\n\nimport Loans from './loans';\nimport {\n  Borrowers,\n  Lenders,\n  PromotionLots,\n  PromotionOptions,\n  Promotions,\n  Properties,\n  Revenues,\n  Tasks,\n  Users,\n} from '..';\n\nimport LinkInitializer from '../links/LinkInitializer';\nimport Activities from '../activities/activities';\n\nexport const userCache = {\n  _id: 1,\n  firstName: 1,\n  lastName: 1,\n  referredByOrganisationLink: 1,\n  assignedEmployeeCache: 1,\n};\n\nexport const lendersCache = {\n  status: 1,\n  contactLink: 1,\n  organisationLink: 1,\n};\n\nexport const tasksCache = {\n  createdAt: 1,\n  dueAt: 1,\n  status: 1,\n  title: 1,\n  isPrivate: 1,\n  assigneeLink: 1,\n};\n\nLinkInitializer.directInit(() => {\n  Loans.addLinks({\n    activities: {\n      inversedBy: 'loan',\n      collection: Activities,\n      autoremove: true,\n    },\n    borrowers: {\n      field: 'borrowerIds',\n      collection: Borrowers,\n      type: 'many',\n    },\n    promotions: {\n      field: 'promotionLinks',\n      collection: Promotions,\n      type: 'many',\n      metadata: true,\n    },\n    promotionOptions: {\n      field: 'promotionOptionLinks',\n      collection: PromotionOptions,\n      type: 'many',\n      unique: true,\n      metadata: true,\n      autoremove: true,\n    },\n    properties: {\n      field: 'propertyIds',\n      collection: Properties,\n      type: 'many',\n    },\n    revenues: {\n      field: 'revenueLinks',\n      collection: Revenues,\n      type: 'many',\n      unique: true,\n    },\n    user: {\n      field: 'userId',\n      collection: Users,\n      type: 'one',\n      denormalize: {\n        field: 'userCache',\n        body: userCache,\n      },\n    },\n    financedPromotion: {\n      field: 'financedPromotionLink',\n      type: 'one',\n      metadata: true,\n      unique: true,\n      collection: Promotions,\n    },\n  });\n});\n\nLinkInitializer.inversedInit(() => {\n  Loans.addLinks({\n    attributedPromotionLots: {\n      collection: PromotionLots,\n      inversedBy: 'attributedTo',\n    },\n    lenders: {\n      collection: Lenders,\n      inversedBy: 'loan',\n      unique: true,\n      autoremove: true,\n      denormalize: {\n        field: 'lendersCache',\n        body: lendersCache,\n      },\n    },\n    tasks: {\n      collection: Tasks,\n      inversedBy: 'loan',\n      autoremove: true,\n      denormalize: {\n        field: 'tasksCache',\n        body: tasksCache,\n      },\n    },\n  });\n});\n","// @flow\nexport const LOANS_COLLECTION = 'loans';\n\nexport const LOAN_STATUS = {\n  LEAD: 'LEAD',\n  ONGOING: 'ONGOING',\n  CLOSING: 'CLOSING',\n  BILLING: 'BILLING',\n  FINALIZED: 'FINALIZED',\n  PENDING: 'PENDING',\n  UNSUCCESSFUL: 'UNSUCCESSFUL',\n  TEST: 'TEST',\n};\n\nexport const LOAN_STATUS_ORDER = [\n  LOAN_STATUS.LEAD,\n  LOAN_STATUS.ONGOING,\n  LOAN_STATUS.PENDING,\n  LOAN_STATUS.CLOSING,\n  LOAN_STATUS.BILLING,\n  LOAN_STATUS.FINALIZED,\n  LOAN_STATUS.UNSUCCESSFUL,\n  LOAN_STATUS.TEST,\n];\n\nexport const PURCHASE_TYPE = {\n  ACQUISITION: 'ACQUISITION',\n  REFINANCING: 'REFINANCING',\n  // TODO: Figure out what needs to be changed for this\n  CONSTRUCTION: 'CONSTRUCTION',\n};\n\n// Keep these sorted alphabetically for zipcode search to work\nexport const CANTONS = {\n  AG: 'Aargau',\n  AR: 'Appenzell Ausserrhoden',\n  AI: 'Appenzell Innerrhoden',\n  BL: 'Basel-Land',\n  BS: 'Basel-Stadt',\n  BE: 'Bern',\n  FR: 'Fribourg',\n  GE: 'Genève',\n  GL: 'Glarus',\n  GR: 'Graubünden',\n  JU: 'Jura',\n  LU: 'Luzern',\n  NE: 'Neuchâtel',\n  NW: 'Nidwalden',\n  OW: 'Obwalden',\n  SG: 'St. Gallen',\n  SH: 'Schaffhausen',\n  SZ: 'Schwyz',\n  SO: 'Solothurn',\n  TG: 'Thurgau',\n  TI: 'Ticino',\n  UR: 'Uri',\n  VD: 'Vaud',\n  VS: 'Valais',\n  ZG: 'Zug',\n  ZH: 'Zürich',\n  LI: 'Liechtenstein',\n};\n\nexport const OWNER = {\n  FIRST: '0',\n  SECOND: '1',\n  BOTH: 'BOTH',\n  OTHER: 'OTHER',\n};\n\nexport const INSURANCE_USE_PRESET = {\n  WITHDRAWAL: 'WITHDRAWAL',\n  COLLATERAL: 'COLLATERAL',\n};\n\nexport const LOAN_STRATEGY_PRESET = {\n  FIXED: 'FIXED',\n  MANUAL: 'MANUAL',\n};\n\nexport const AMORTIZATION_TYPE = {\n  INDIRECT: 'INDIRECT',\n  DIRECT: 'DIRECT',\n};\n\nexport const PAYMENT_SCHEDULES = {\n  MONTHLY: 'MONTHLY',\n  YEARLY: 'YEARLY',\n  SEMESTERLY: 'SEMESTERLY',\n};\n\nexport const LOAN_QUERIES = {\n  ADMIN_LOANS: 'ADMIN_LOANS',\n  ANONYMOUS_LOAN: 'ANONYMOUS_LOAN',\n  FULL_LOAN: 'FULL_LOAN',\n  LOAN_FILES: 'LOAN_FILES',\n  LOAN_SEARCH: 'LOAN_SEARCH',\n  PRO_LOANS: 'PRO_LOANS',\n  PRO_PROMOTION_LOANS: 'PRO_PROMOTION_LOANS',\n  PRO_PROPERTY_LOANS: 'PRO_PROPERTY_LOANS',\n  PRO_REFERRED_BY_LOANS: 'PRO_REFERRED_BY_LOANS',\n  USER_LOANS_E2E: 'USER_LOANS_E2E',\n  USER_LOANS: 'USER_LOANS',\n};\n\nexport const OWN_FUNDS_USAGE_TYPES = {\n  WITHDRAW: 'WITHDRAW',\n  PLEDGE: 'PLEDGE',\n};\n\nexport const STEPS = {\n  SOLVENCY: 'SOLVENCY',\n  REQUEST: 'REQUEST',\n  OFFERS: 'OFFERS',\n  CLOSING: 'CLOSING',\n};\n\nexport const STEP_ORDER = [\n  STEPS.SOLVENCY,\n  STEPS.REQUEST,\n  STEPS.OFFERS,\n  STEPS.CLOSING,\n];\n\nexport const LOAN_VERIFICATION_STATUS = {\n  NONE: 'NONE',\n  REQUESTED: 'REQUESTED',\n  OK: 'OK',\n  ERROR: 'ERROR',\n};\n\nexport const SOLVENCY_TYPE = {\n  SIMPLE: 'SIMPLE',\n  FULL: 'FULL',\n};\n\nexport const APPLICATION_TYPES = {\n  SIMPLE: 'SIMPLE',\n  FULL: 'FULL',\n};\n\nexport const ORGANISATION_NAME_SEPARATOR = ' / ';\n\nexport const LOCAL_STORAGE_ANONYMOUS_LOAN = 'ANONYMOUS_LOAN_ID';\n\nexport const EMPTY_STRUCTURE = {\n  ownFunds: [],\n  loanTranches: [],\n};\n\nexport const LOAN_CATEGORIES = {\n  STANDARD: 'STANDARD',\n  PREMIUM: 'PREMIUM',\n};\n","import { Mongo } from 'meteor/mongo';\n\nimport LoanSchema from './schemas/LoanSchema';\nimport { LOANS_COLLECTION } from './loanConstants';\n\nconst Loans = new Mongo.Collection(LOANS_COLLECTION);\n\n// Prevent all client side modifications of mongoDB\nLoans.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true,\n});\nLoans.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false,\n});\n\nLoans.attachSchema(LoanSchema);\nexport default Loans;\n","// @flow\nimport { Match } from 'meteor/check';\nimport { Method } from '../methods/methods';\n\nexport const loanInsert = new Method({\n  name: 'loanInsert',\n  params: {\n    loan: Object,\n    userId: Match.Optional(String),\n  },\n});\n\nexport const loanUpdate = new Method({\n  name: 'loanUpdate',\n  params: {\n    loanId: String,\n    object: Object,\n  },\n});\n\nexport const loanDelete = new Method({\n  name: 'loanDelete',\n  params: {\n    loanId: String,\n  },\n});\n\nexport const requestLoanVerification = new Method({\n  name: 'requestLoanVerification',\n  params: {\n    loanId: String,\n  },\n});\n\nexport const confirmClosing = new Method({\n  name: 'confirmClosing',\n  params: {\n    loanId: String,\n    object: Object,\n  },\n});\n\nexport const pushLoanValue = new Method({\n  name: 'pushLoanValue',\n  params: {\n    loanId: String,\n    object: Object,\n  },\n});\n\nexport const popLoanValue = new Method({\n  name: 'popLoanValue',\n  params: {\n    loanId: String,\n    object: Object,\n  },\n});\n\nexport const adminLoanInsert = new Method({\n  name: 'adminLoanInsert',\n  params: {\n    userId: Match.Optional(String),\n  },\n});\n\nexport const userLoanInsert = new Method({\n  name: 'userLoanInsert',\n  params: {\n    proPropertyId: Match.Maybe(String),\n    test: Match.Optional(Boolean),\n  },\n});\n\nexport const addNewStructure = new Method({\n  name: 'addNewStructure',\n  params: {\n    loanId: String,\n  },\n});\n\nexport const removeStructure = new Method({\n  name: 'removeStructure',\n  params: {\n    loanId: String,\n    structureId: String,\n  },\n});\n\nexport const updateStructure = new Method({\n  name: 'updateStructure',\n  params: {\n    loanId: String,\n    structureId: String,\n    structure: Object,\n  },\n});\n\nexport const selectStructure = new Method({\n  name: 'selectStructure',\n  params: {\n    loanId: String,\n    structureId: String,\n  },\n});\n\nexport const duplicateStructure = new Method({\n  name: 'duplicateStructure',\n  params: {\n    loanId: String,\n    structureId: String,\n  },\n});\n\nexport const assignLoanToUser = new Method({\n  name: 'assignLoanToUser',\n  params: {\n    loanId: String,\n    userId: Match.OneOf(String, null),\n  },\n});\n\nexport const switchBorrower = new Method({\n  name: 'switchBorrower',\n  params: {\n    loanId: String,\n    borrowerId: String,\n    oldBorrowerId: String,\n  },\n});\n\nexport const sendNegativeFeedbackToAllLenders = new Method({\n  name: 'sendNegativeFeedbackToAllLenders',\n  params: { loanId: String },\n});\n\nexport const loanUpdatePromotionInvitedBy = new Method({\n  name: 'loanUpdatePromotionInvitedBy',\n  params: { loanId: String, promotionId: String, invitedBy: String },\n});\n\nexport const reuseProperty = new Method({\n  name: 'reuseProperty',\n  params: { loanId: String, propertyId: String },\n});\n\nexport const setMaxPropertyValueWithoutBorrowRatio = new Method({\n  name: 'setMaxPropertyValueWithoutBorrowRatio',\n  params: { loanId: String, canton: String },\n});\n\nexport const addNewMaxStructure = new Method({\n  name: 'addNewMaxStructure',\n  params: {\n    loanId: String,\n    residenceType: Match.Maybe(String),\n    canton: String,\n  },\n});\n\nexport const setLoanStep = new Method({\n  name: 'setLoanStep',\n  params: { loanId: String, nextStep: String },\n});\n\nexport const loanShareSolvency = new Method({\n  name: 'loanShareSolvency',\n  params: { loanId: String, shareSolvency: Boolean },\n});\n\nexport const anonymousLoanInsert = new Method({\n  name: 'anonymousLoanInsert',\n  params: {\n    trackingId: String,\n    proPropertyId: Match.Maybe(String),\n    referralId: Match.Maybe(String),\n    existingAnonymousLoanId: Match.Maybe(Match.OneOf(String, null)),\n  },\n});\n\nexport const loanInsertBorrowers = new Method({\n  name: 'loanInsertBorrowers',\n  params: {\n    loanId: String,\n    amount: Number,\n  },\n});\n\nexport const adminLoanReset = new Method({\n  name: 'adminLoanReset',\n  params: {\n    loanId: String,\n  },\n});\n\nexport const loanLinkPromotion = new Method({\n  name: 'loanLinkPromotion',\n  params: {\n    promotionId: String,\n    loanId: String,\n  },\n});\n\nexport const loanUnlinkPromotion = new Method({\n  name: 'loanUnlinkPromotion',\n  params: {\n    promotionId: String,\n    loanId: String,\n  },\n});\n\nexport const loanSetCreatedAtActivityDescription = new Method({\n  name: 'loanSetCreatedAtActivityDescription',\n  params: { loanId: String, description: String },\n});\n\nexport const loanSetStatus = new Method({\n  name: 'loanSetStatus',\n  params: { loanId: String, status: String },\n});\n","import omit from 'lodash/omit';\n\nimport Loans from '.';\nimport { LOAN_QUERIES } from './loanConstants';\nimport { adminLoan, userLoan } from '../fragments';\n\nexport const adminLoans = Loans.createQuery(\n  LOAN_QUERIES.ADMIN_LOANS,\n  {\n    ...adminLoan({ withSort: true }),\n    $options: { sort: { createdAt: -1 } },\n  },\n  { scoped: true },\n);\n\nexport const anonymousLoan = Loans.createQuery(\n  LOAN_QUERIES.ANONYMOUS_LOAN,\n  { ...omit(userLoan(), ['maxPropertyValue']), maxPropertyValueExists: 1 },\n  { scoped: true },\n);\n\n// This query can be used on the server to get a complete loan, just like on the client\nexport const fullLoan = Loans.createQuery(LOAN_QUERIES.FULL_LOAN, {\n  ...adminLoan({ withSort: true }),\n});\n\nexport const loanSearch = Loans.createQuery(LOAN_QUERIES.LOAN_SEARCH, {\n  name: 1,\n  createdAt: 1,\n  updatedAt: 1,\n  step: 1,\n  $options: { sort: { createdAt: -1 }, limit: 5 },\n});\n\n// Sort this query properly so that the merge on the client succeeds\nexport const proLoans = Loans.createQuery(LOAN_QUERIES.PRO_LOANS, () => {});\n\nexport const proPromotionLoans = Loans.createQuery(\n  LOAN_QUERIES.PRO_PROMOTION_LOANS,\n  () => {},\n);\n\nexport const proPropertyLoans = Loans.createQuery(\n  LOAN_QUERIES.PRO_PROPERTY_LOANS,\n  () => {},\n);\n\nexport const proReferredByLoans = Loans.createQuery(\n  LOAN_QUERIES.PRO_REFERRED_BY_LOANS,\n  () => {},\n);\n\nexport const userLoans = Loans.createQuery(\n  LOAN_QUERIES.USER_LOANS,\n  {\n    ...userLoan({ withSort: true, withFilteredPromotions: true }),\n    maxPropertyValueExists: 1,\n  },\n  { scoped: true },\n);\n","import omit from 'lodash/omit';\nimport Loans from '.';\nimport {\n  formatLoanWithStructure,\n  nextDueTaskReducer,\n} from '../../utils/loanFunctions';\nimport { STEPS, STEP_ORDER } from './loanConstants';\nimport { fullOffer, userProperty, loanPromotionOption } from '../fragments';\nimport { PROPERTY_CATEGORY } from '../properties/propertyConstants';\n\nLoans.addReducers({\n  structure: {\n    body: {\n      selectedStructure: 1,\n      structures: 1,\n      properties: omit(userProperty(), ['loans', '$options', 'user']),\n      offers: 1,\n      promotionOptions: loanPromotionOption(),\n    },\n    reduce: formatLoanWithStructure,\n  },\n  offers: {\n    body: { lenders: { offers: omit(fullOffer(), ['user']) } },\n    reduce: ({ lenders = [] }) =>\n      lenders.reduce(\n        (allOffers, { offers = [] }) => [...allOffers, ...offers],\n        [],\n      ),\n  },\n  hasPromotion: {\n    body: { promotions: { _id: 1 } },\n    reduce: ({ promotions }) => !!(promotions && promotions.length > 0),\n  },\n  enableOffers: {\n    body: { step: 1 },\n    reduce: ({ step }) =>\n      step && STEP_ORDER.indexOf(step) >= STEP_ORDER.indexOf(STEPS.OFFERS),\n  },\n  hasProProperty: {\n    body: { properties: { category: 1 } },\n    reduce: ({ properties = [] }) =>\n      properties.some(({ category }) => category === PROPERTY_CATEGORY.PRO),\n  },\n  maxPropertyValueExists: {\n    body: { maxPropertyValue: { date: 1 }, user: { _id: 1 } },\n    reduce: ({ maxPropertyValue, user }) =>\n      !!(!user && maxPropertyValue && maxPropertyValue.date),\n  },\n  nextDueTask: {\n    body: { tasksCache: 1 },\n    reduce: nextDueTaskReducer,\n  },\n});\n","import SimpleSchema from 'simpl-schema';\nimport { LOT_TYPES } from '../lotConstants';\nimport { createdAt, updatedAt, moneyField } from '../../helpers/sharedSchemas';\n\nconst LotSchema = new SimpleSchema({\n  createdAt,\n  updatedAt,\n  name: String,\n  type: {\n    type: String,\n    allowedValues: Object.values(LOT_TYPES),\n    uniforms: { displayEmpty: false },\n  },\n  description: { type: String, optional: true },\n  value: {\n    ...moneyField,\n    optional: false,\n  },\n});\n\nexport default LotSchema;\n","import { Meteor } from 'meteor/meteor';\n\nimport CollectionService from '../../helpers/CollectionService';\nimport PromotionLotService from '../../promotionLots/server/PromotionLotService';\nimport { LOT_ERRORS, ERROR_CODES } from '../../errors';\nimport { PROMOTION_LOT_STATUS } from '../../promotionLots/promotionLotConstants';\nimport Lots from '../lots';\n\nexport class LotService extends CollectionService {\n  constructor() {\n    super(Lots);\n  }\n\n  update = ({ lotId, object: { promotionLotId, ...rest } }) => {\n    const currentPromotionLot = PromotionLotService.findOne({\n      'lotLinks._id': lotId,\n    });\n\n    const currentPromotionLotId = currentPromotionLot\n      ? currentPromotionLot._id\n      : null;\n\n    const currentPromotionLotStatus = currentPromotionLot\n      ? currentPromotionLot.status\n      : null;\n\n    if (\n      currentPromotionLotStatus\n      && currentPromotionLotStatus !== PROMOTION_LOT_STATUS.AVAILABLE\n    ) {\n      throw new Meteor.Error(\n        ERROR_CODES.FORBIDDEN,\n        LOT_ERRORS.PROMOTION_LOT_BOOKED_OR_SOLD,\n      );\n    }\n\n    if (currentPromotionLotId !== promotionLotId) {\n      if (currentPromotionLotId !== null && promotionLotId !== undefined) {\n        PromotionLotService.removeLotLink({\n          promotionLotId: currentPromotionLotId,\n          lotId,\n        });\n      }\n\n      if (promotionLotId) {\n        PromotionLotService.addLotToPromotionLot({\n          promotionLotId,\n          lotId,\n        });\n      }\n    }\n\n    return this._update({ id: lotId, object: rest });\n  };\n}\n\nexport default new LotService();\n","import SecurityService from '../../security';\nimport PromotionService from '../../promotions/server/PromotionService';\nimport { lotInsert, lotUpdate, lotRemove } from '../methodDefinitions';\nimport LotService from './LotService';\n\nlotInsert.setHandler(({ userId }, { promotionId, lot }) => {\n  SecurityService.promotions.isAllowedToAddLots({ promotionId, userId });\n  const lotId = LotService.insert(lot);\n  PromotionService.addLink({\n    id: promotionId,\n    linkName: 'lots',\n    linkId: lotId,\n  });\n  return lotId;\n});\n\nlotUpdate.setHandler(({ userId }, params) => {\n  const { lotId } = params;\n  SecurityService.promotions.isAllowedToModifyAdditionalLot({ lotId, userId });\n  return LotService.update(params);\n});\n\nlotRemove.setHandler(({ userId }, { lotId }) => {\n  SecurityService.promotions.isAllowedToRemoveAdditionalLot({ lotId, userId });\n  return LotService.remove(lotId);\n});\n","import Lots from '..';\nimport assigneeReducer from '../../reducers/assigneeReducer';\n\nLots.addReducers({\n  ...assigneeReducer(\n    { promotions: { userLinks: 1 } },\n    ({ promotions }) =>\n      !!(\n        promotions\n        && promotions.length > 0\n        && promotions[0].userLinks\n        && promotions[0].userLinks.length > 0\n      ) && promotions[0].userLinks[0]._id,\n  ),\n});\n","export * from './methodDefinitions';\nexport { default } from './lots';\n","import Lots from '.';\n\nimport { Promotions, PromotionLots, PromotionOptions } from '..';\n\nLots.addLinks({\n  promotions: {\n    collection: Promotions,\n    inversedBy: 'lots',\n  },\n  promotionLots: {\n    collection: PromotionLots,\n    inversedBy: 'lots',\n  },\n  promotionOptions: {\n    collection: PromotionOptions,\n    inversedBy: 'lots',\n  },\n});\n","export const LOTS_COLLECTION = 'lots';\n\nexport const LOT_TYPES = {\n  BASEMENT: 'BASEMENT',\n  PARKING_MOTORBIKE: 'PARKING_MOTORBIKE',\n  PARKING_CAR: 'PARKING_CAR',\n  PARKING_IN_A_ROW: 'PARKING_IN_A_ROW',\n  PARKING_DISABLED: 'PARKING_DISABLED',\n};\n","import { Mongo } from 'meteor/mongo';\n\nimport LotSchema from './schemas/LotSchema';\nimport { LOTS_COLLECTION } from './lotConstants';\n\nconst Lots = new Mongo.Collection(LOTS_COLLECTION);\n\nLots.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true,\n});\n\nLots.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false,\n});\n\nLots.attachSchema(LotSchema);\nexport default Lots;\n","import { Match } from 'meteor/check';\nimport { Method } from '../methods/methods';\n\nexport const lotInsert = new Method({\n  name: 'lotInsert',\n  params: {\n    promotionId: String,\n    lot: Object,\n  },\n});\n\nexport const lotUpdate = new Method({\n  name: 'lotUpdate',\n  params: {\n    lotId: String,\n    object: Object,\n  },\n});\n\nexport const lotRemove = new Method({\n  name: 'lotRemove',\n  params: {\n    lotId: String,\n  },\n});\n","import Lots from '.';\n\nLots.addReducers({\n  status: {\n    body: {\n      promotionLots: { status: 1, value: 1 },\n    },\n    reduce: ({ promotionLots }) =>\n      promotionLots && promotionLots[0] && promotionLots[0].status,\n  },\n});\n","import './serverMethodsConfig';\nimport './registerServerMethods';\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\n\nimport { LOANS_COLLECTION } from '../../constants';\nimport SecurityService from '../../security';\nimport { Services } from '../../server';\nimport LoanService from '../../loans/server/LoanService';\nimport BorrowerService from '../../borrowers/server/BorrowerService';\nimport PropertyService from '../../properties/server/PropertyService';\nimport {\n  getMixpanelAuthorization,\n  getServerTime,\n  downloadPDF,\n  addBorrower,\n  setUserToLoan,\n  removeBorrower,\n  submitContactForm,\n  addUserToDoc,\n  throwDevError,\n  setAdditionalDoc,\n  removeAdditionalDoc,\n  migrateToLatest,\n  updateDocument,\n  updateDocumentUnset,\n  generateScenario,\n} from '../methodDefinitions';\nimport generator from '../../factories';\nimport { migrate } from '../../migrations/server';\n\ngetMixpanelAuthorization.setHandler(() => {\n  SecurityService.checkCurrentUserIsAdmin();\n  const btoa = require('btoa');\n  const { API_KEY, API_SECRET } = Meteor.settings.mixpanel;\n\n  return `Basic ${btoa(`${API_SECRET}:${API_KEY}`)}`;\n});\n\ngetServerTime.setHandler(() => new Date());\n\ndownloadPDF.setHandler(() => {\n  // TODO\n});\n\naddBorrower.setHandler((context, { loanId, borrower }) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  const loan = LoanService.get(loanId);\n\n  // A loan can't have more than 2 borrowers at the moment\n  if (loan.borrowerIds.length >= 2) {\n    throw new Meteor.Error('Vous ne pouvez pas avoir plus de 2 emprunteurs');\n  }\n\n  const newBorrowerId = BorrowerService.insert({\n    borrower,\n    userId: loan.userId,\n  });\n\n  return LoanService.pushValue({\n    loanId,\n    object: { borrowerIds: newBorrowerId },\n  });\n});\n\nsetUserToLoan.setHandler((context, { loanId }) => {\n  SecurityService.checkLoggedIn();\n  const loan = LoanService.get(loanId);\n  const { borrowerIds, propertyId } = loan;\n\n  if (loan.userId) {\n    throw new Meteor.Error('loan-already-owned');\n  }\n\n  const currentUserId = Meteor.userId();\n\n  LoanService.update({ loanId, object: { userId: currentUserId } });\n  borrowerIds.forEach((borrowerId) => {\n    BorrowerService.update({ borrowerId, object: { userId: currentUserId } });\n  });\n  PropertyService.update({ propertyId, object: { userId: currentUserId } });\n});\n\nremoveBorrower.setHandler((context, { loanId, borrowerId }) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  SecurityService.borrowers.isAllowedToUpdate(borrowerId);\n\n  const loan = LoanService.get(loanId);\n\n  // A loan has to have at least 1 borrower\n  if (loan.borrowerIds.length <= 1) {\n    return false;\n  }\n\n  BorrowerService.remove({ borrowerId });\n\n  return LoanService.pullValue({ loanId, object: { borrowerIds: borrowerId } });\n});\n\n// This method needs to exist as its being listened to in EmailListeners\nsubmitContactForm.setHandler(() => null);\n\naddUserToDoc.setHandler(({ userId }, { docId, collection, options, userId: newUserId }) => {\n  const doc = Mongo.Collection.get(collection).findOne(docId);\n  try {\n    SecurityService.checkUserIsAdmin(userId);\n  } catch (error) {\n    SecurityService.checkOwnership(doc);\n  }\n  Mongo.Collection.get(collection).update(docId, {\n    userLinks: { $push: { _id: newUserId, ...options } },\n  });\n});\n\nthrowDevError.setHandler((_, { promise, promiseNoReturn }) => {\n  console.log('Throwing dev error..');\n\n  if (promise) {\n    return new Promise((resolve, reject) => {\n      reject(new Meteor.Error(400, 'Dev promise error!'));\n    });\n  }\n  if (promiseNoReturn) {\n    new Promise((resolve, reject) => {\n      reject(new Meteor.Error(400, 'Dev promise error!'));\n    });\n\n    return;\n  }\n\n  throw new Meteor.Error(400, 'Dev error!');\n});\n\nsetAdditionalDoc.setHandler((context, { collection, ...rest }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return Services[collection].setAdditionalDoc(rest);\n});\n\nremoveAdditionalDoc.setHandler((context, { collection, ...rest }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return Services[collection].removeAdditionalDoc(rest);\n});\n\nmigrateToLatest.setHandler(({ userId }) => {\n  SecurityService.checkCurrentUserIsDev();\n  migrate();\n});\n\nupdateDocument.setHandler(({ userId }, { collection, docId, object }) => {\n  const service = Services[collection];\n  try {\n    SecurityService.checkUserIsAdmin(userId);\n  } catch (error) {\n    if (collection === LOANS_COLLECTION) {\n      SecurityService.loans.isAllowedToUpdate(docId);\n    } else {\n      const doc = service.findOne(docId);\n      SecurityService.checkOwnership(doc);\n    }\n  }\n\n  return service._update({ id: docId, object });\n});\n\nupdateDocumentUnset.setHandler(({ userId }, { collection, docId, object }) => {\n  const service = Services[collection];\n  SecurityService.checkUserIsDev(userId);\n\n  return service._update({ id: docId, object, operator: '$unset' });\n});\n\ngenerateScenario.setHandler(({ userId }, { scenario }) => {\n  if (!Meteor.isTest) {\n    SecurityService.checkUserIsAdmin(userId);\n  }\n\n  return generator(scenario);\n});\n","import '../../activities/server/methods';\nimport '../../analytics/server/methods';\nimport '../../borrowers/server/methods';\nimport '../../contacts/server/methods';\nimport '../../email/server/methods';\nimport '../../files/server/methods';\nimport '../../impersonation/server/methods';\nimport '../../interestRates/server/methods';\nimport '../../irs10y/server/methods';\nimport '../../lenderRules/server/methods';\nimport '../../lenders/server/methods';\nimport '../../loans/server/methods';\nimport '../../lots/server/methods';\nimport '../../mortgageNotes/server/methods';\nimport '../../notifications/server/methods';\nimport '../../offers/server/methods';\nimport '../../organisations/server/methods';\nimport '../../pdf/server/methods';\nimport '../../promotionLots/server/methods';\nimport '../../promotionOptions/server/methods';\nimport '../../promotions/server/methods';\nimport '../../properties/server/methods';\nimport '../../revenues/server/methods';\nimport '../../slack/server/methods';\nimport '../../tasks/server/methods';\nimport '../../users/server/methods';\n\nimport './methods';\n","import { Meteor } from 'meteor/meteor';\n\nimport SlackService from '../../slack/server/SlackService';\nimport ServerEventService from '../../events/server/ServerEventService';\nimport { Method } from '../methods';\n\nconst logMethod = ({ context, config, params, result, error }) => {\n  if (Meteor.isProduction || Meteor.isStaging || Meteor.isDevEnvironment) {\n    console.log('---------------------- METHOD CALL ----------------------');\n    console.log(`METHOD Method ${config.name} called`);\n    console.log('METHOD Params:', params);\n    console.log('METHOD userId:', context.userId);\n    console.log('METHOD result:', result);\n    console.log('METHOD error:', error);\n  }\n};\n\nMethod.addBeforeExecution(({ context, config, params }) => {\n  ServerEventService.emitBeforeMethod(config, {\n    context,\n    config,\n    params,\n  });\n});\n\nMethod.addAfterExecution(({ context, config, params, result, error }) => {\n  logMethod({ context, config, params, result, error });\n\n  if (error) {\n    SlackService.sendError({\n      error,\n      additionalData: [\n        `Server method error in method: \"${config.name}\"`,\n        { name: 'context', data: context },\n        { name: 'params', data: params },\n      ],\n      userId: context.userId,\n    });\n  }\n\n  if (!error) {\n    console.log('emit after method');\n    \n    ServerEventService.emitAfterMethod(config, {\n      context,\n      config,\n      params,\n      result,\n      error,\n    });\n  }\n});\n","import { Meteor } from 'meteor/meteor';\nimport ClientEventService from '../events/ClientEventService';\n\nconst isActive = () => !!global.window;\n\nconst init = () => {\n  if (isActive()) {\n    window.activeQueries = {};\n  }\n};\n\ninit();\n\nconst addQuery = (queryName, type) => {\n  // Add support for passing method config objects\n  if (typeof type === 'object') {\n    window.activeQueries[type.config.name] = [\n      ...(window.activeQueries[type.config.name] || []),\n      queryName,\n    ];\n  } else {\n    window.activeQueries[type] = [\n      ...(window.activeQueries[type] || []),\n      queryName,\n    ];\n  }\n};\n\nexport const addQueryToRefetch = (queryName, type) => {\n  if (isActive()) {\n    if (!type) {\n      return;\n    }\n\n    if (Array.isArray(type)) {\n      type.forEach((t) => {\n        addQuery(queryName, t);\n      });\n    } else {\n      addQuery(queryName, type);\n    }\n  }\n};\n\nexport const removeQueryToRefetch = (queryName) => {\n  if (isActive()) {\n    Object.keys(window.activeQueries).forEach((type) => {\n      if (Array.isArray(window.activeQueries[type])) {\n        window.activeQueries[type] = window.activeQueries[type].filter(query => query !== queryName);\n\n        // Clean up this particular refetch key if there is no query in it anymore\n        if (window.activeQueries[type].length === 0) {\n          window.activeQueries[type] = undefined;\n        }\n      }\n    });\n  }\n};\n\nexport const refetchQuery = query => ClientEventService.emit(query);\n\nexport const refetchQueries = (methodName) => {\n  if (isActive()) {\n    if (window.activeQueries.all) {\n      window.activeQueries.all.forEach(refetchQuery);\n    }\n\n    if (window.activeQueries[methodName]) {\n      window.activeQueries[methodName].forEach(refetchQuery);\n    }\n  }\n};\n\nif (Meteor.isAppTest && global.window) {\n  global.window.refetchQueries = refetchQueries;\n}\n","export * from './registerMethodDefinitions';\nexport * from './methods';\n","import { Match } from 'meteor/check';\nimport { Method } from './methods';\n\nexport const getMixpanelAuthorization = new Method({\n  name: 'getMixpanelAuthorization',\n});\n\nexport const getServerTime = new Method({\n  name: 'getServerTime',\n});\n\nexport const downloadPDF = new Method({\n  name: 'downloadPDF',\n  params: {\n    loanId: String,\n    type: String,\n  },\n});\n\nexport const addBorrower = new Method({\n  name: 'addBorrower',\n  params: {\n    loanId: String,\n    borrower: Match.Optional(Object),\n  },\n});\n\nexport const setUserToLoan = new Method({\n  name: 'setUserToLoan',\n  params: {\n    loanId: String,\n  },\n});\n\nexport const removeBorrower = new Method({\n  name: 'removeBorrower',\n  params: {\n    loanId: String,\n    borrowerId: String,\n  },\n});\n\nexport const submitContactForm = new Method({\n  name: 'submitContactForm',\n  params: {\n    name: String,\n    email: String,\n    phoneNumber: String,\n    details: Match.Optional(String),\n  },\n  rateLimit: {\n    global: {\n      limit: 1,\n      timeRange: 5000,\n    },\n  },\n});\n\nexport const addUserToDoc = new Method({\n  name: 'addUserToDoc',\n  params: {\n    docId: String,\n    collection: String,\n    options: Object,\n    userId: String,\n  },\n});\n\nexport const throwDevError = new Method({\n  name: 'throwDevError',\n  params: {\n    promise: Match.Maybe(Boolean),\n    promiseNoReturn: Match.Maybe(Boolean),\n  },\n});\n\nexport const setAdditionalDoc = new Method({\n  name: 'setAdditionalDoc',\n  params: {\n    collection: String,\n    id: String,\n    additionalDocId: String,\n    requiredByAdmin: Boolean,\n    label: Match.Optional(String),\n    category: Match.Optional(String),\n  },\n});\n\nexport const removeAdditionalDoc = new Method({\n  name: 'removeAdditionalDoc',\n  params: {\n    collection: String,\n    id: String,\n    additionalDocId: String,\n  },\n});\n\nexport const migrateToLatest = new Method({\n  name: 'migrateToLatest',\n});\n\nexport const updateDocument = new Method({\n  name: 'updateDocument',\n  params: {\n    collection: String,\n    docId: String,\n    object: Object,\n  },\n});\n\nexport const updateDocumentUnset = new Method({\n  name: 'updateDocumentUnset',\n  params: {\n    collection: String,\n    docId: String,\n    object: Object,\n  },\n});\n\nexport const generateScenario = new Method({\n  name: 'generateScenario',\n  params: {\n    scenario: Object,\n  },\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Mutation } from 'meteor/cultofcoders:mutations';\nimport { Match, check } from 'meteor/check';\n\nif (Meteor.isTest) {\n  Mutation.isDebugEnabled = false;\n} else {\n  Mutation.isDebugEnabled = { omit: ['analyticsPage', 'analyticsLogin'] };\n}\n\nexport class Method extends Mutation {\n  run(callParams = {}, options = {}) {\n    const { config } = this;\n    let location;\n    if (Meteor.isClient && window && window.location) {\n      location = {\n        href: window.location.href,\n        host: window.location.host,\n        pathname: window.location.pathname,\n      };\n    }\n\n    const aopData = { config, params: callParams };\n    Mutation.callAOP.executeBefores(aopData);\n    this.callAOP.executeBefores(aopData);\n\n    const { name, params } = config;\n    const additionalData = { location };\n\n    return new Promise((resolve, reject) => {\n      Meteor.apply(\n        name,\n        [callParams, additionalData],\n        options,\n        (error, result) => {\n          const aopData = {\n            config,\n            params: callParams,\n            result,\n            error,\n          };\n\n          Mutation.callAOP.executeAfters(aopData);\n          this.callAOP.executeAfters(aopData);\n\n          if (error) {\n            reject(error);\n          } else {\n            resolve(result);\n          }\n        },\n      );\n    });\n  }\n\n  setHandler(fn) {\n    const { config } = this;\n    const { name, params } = config;\n    const self = this;\n\n    Meteor.methods({\n      [name](params = {}, additionalData) {\n        check(additionalData, Object);\n        check(\n          additionalData.location,\n          Match.Maybe({\n            href: Match.Maybe(String),\n            host: Match.Maybe(String),\n            pathname: Match.Maybe(String),\n          }),\n        );\n\n        if (Meteor.isServer && additionalData.location) {\n          const { setClientUrl } = require('../../utils/server/getClientUrl');\n          setClientUrl(additionalData.location);\n        }\n\n        if (config.validate) {\n          config.validate(params);\n        } else if (config.params) {\n          check(params, config.params);\n        }\n\n        let aopData = {\n          context: this,\n          config,\n          params,\n        };\n\n        Mutation.executionAOP.executeBefores(aopData);\n        self.executionAOP.executeBefores(aopData);\n\n        let error;\n        let result;\n        try {\n          result = fn.call(null, this, params);\n        } catch (e) {\n          error = e;\n        }\n\n        aopData = {\n          context: this,\n          config,\n          params,\n          result,\n          error,\n        };\n\n        Mutation.executionAOP.executeAfters(aopData);\n        self.executionAOP.executeAfters(aopData);\n\n        if (error) {\n          throw error;\n        }\n\n        return result;\n      },\n    });\n  }\n}\n","// Export all method definitions here\nexport * from '../borrowers/methodDefinitions';\nexport * from '../contacts/methodDefinitions';\nexport * from '../email/methodDefinitions';\nexport * from '../files/methodDefinitions';\nexport * from '../impersonation/methodDefinitions';\nexport * from '../interestRates/methodDefinitions';\nexport * from '../irs10y/methodDefinitions';\nexport * from '../lenderRules/methodDefinitions';\nexport * from '../lenders/methodDefinitions';\nexport * from '../loans/methodDefinitions';\nexport * from '../lots/methodDefinitions';\nexport * from '../mortgageNotes/methodDefinitions';\nexport * from '../offers/methodDefinitions';\nexport * from '../organisations/methodDefinitions';\nexport * from '../pdf/methodDefinitions';\nexport * from '../promotionLots/methodDefinitions';\nexport * from '../promotionOptions/methodDefinitions';\nexport * from '../promotions/methodDefinitions';\nexport * from '../properties/methodDefinitions';\nexport * from '../slack/methodDefinitions';\nexport * from '../tasks/methodDefinitions';\nexport * from '../users/methodDefinitions';\nexport * from '../analytics/methodDefinitions';\n\nexport * from './methodDefinitions';\n","import { Migrations } from 'meteor/percolate:migrations';\n\nimport { Properties } from '../..';\nimport { PROPERTY_CATEGORY } from '../../properties/propertyConstants';\n\nexport const up = () => {\n  Properties.update(\n    {},\n    { $set: { category: PROPERTY_CATEGORY.USER } },\n    { multi: true },\n  );\n};\n\nexport const down = () => {\n  Properties.update({}, { $unset: { category: true } }, { multi: true });\n};\n\nMigrations.add({\n  version: 1,\n  name: 'Add property category',\n  up,\n  down,\n});\n","import { Migrations } from 'meteor/percolate:migrations';\n\nimport { Meteor } from 'meteor/meteor';\nimport { STEPS } from 'core/api/loans/loanConstants';\nimport { Loans } from '../..';\n\nconst mapStepUp = (step) => {\n  switch (step) {\n  case STEPS.SOLVENCY:\n    return STEPS.REQUEST;\n  case STEPS.REQUEST:\n    return STEPS.OFFERS;\n  case STEPS.OFFERS:\n    return STEPS.OFFERS;\n  case STEPS.CLOSING:\n    return STEPS.CLOSING;\n  default:\n    throw new Meteor.Error(`Unknown step ${step}`);\n  }\n};\n\nconst mapStepDown = (step) => {\n  switch (step) {\n  case STEPS.SOLVENCY:\n    return STEPS.SOLVENCY;\n  case STEPS.REQUEST:\n    return STEPS.REQUEST;\n  case STEPS.OFFERS:\n    return STEPS.OFFERS;\n  case STEPS.CLOSING:\n    return STEPS.CLOSING;\n  default:\n    throw new Meteor.Error(`Unknown step ${step}`);\n  }\n};\n\nexport const up = () => {\n  const allLoans = Loans.find({}).fetch();\n\n  return Promise.all(allLoans.map(({ _id, step }) =>\n    Loans.rawCollection().update(\n      { _id },\n      { $set: { step: mapStepUp(step) } },\n    )));\n};\n\nexport const down = () => {\n  const allLoans = Loans.find({}).fetch();\n\n  return Promise.all(allLoans.map(({ _id, step }) =>\n    Loans.rawCollection().update(\n      { _id },\n      { $set: { step: mapStepDown(step) } },\n    )));\n};\n\nMigrations.add({\n  version: 10,\n  name: 'Correct step for current loans',\n  up,\n  down,\n});\n","import { Migrations } from 'meteor/percolate:migrations';\n\nimport UserService from '../../users/server/UserService';\n\nexport const up = () => {\n  const allUsers = UserService.fetch({ organisations: { _id: 1 } });\n\n  return Promise.all(allUsers.map(({ _id: userId, organisations = [] }) =>\n    organisations.forEach(({ _id: organisationId, $metadata: metadata }, index) =>\n      UserService.updateLinkMetadata({\n        id: userId,\n        linkName: 'organisations',\n        linkId: organisationId,\n        metadata: { ...metadata, isMain: index === 0 },\n      }))));\n};\n\nexport const down = () => {\n  const allUsers = UserService.fetch({ organisations: { _id: 1 } });\n\n  return Promise.all(allUsers.map(({ _id: userId, organisations = [] }) =>\n    organisations.forEach(({ _id: organisationId, $metadata: metadata }) => {\n      const { isMain, ...restMeta } = metadata;\n      UserService.updateLinkMetadata({\n        id: userId,\n        linkName: 'organisations',\n        linkId: organisationId,\n        metadata: { isMain: undefined, ...restMeta },\n      });\n    })));\n};\n\nMigrations.add({\n  version: 11,\n  name: 'Set first organisation as main',\n  up,\n  down,\n});\n","import { Migrations } from 'meteor/percolate:migrations';\n\nimport UserService from '../../users/server/UserService';\n\nexport const up = () => {\n  const allUsers = UserService.fetch({ organisations: { _id: 1 } });\n\n  return Promise.all(allUsers.map(({ _id: userId, organisations = [] }) =>\n    organisations.forEach(({ _id: organisationId, $metadata: metadata }) =>\n      UserService.updateLinkMetadata({\n        id: userId,\n        linkName: 'organisations',\n        linkId: organisationId,\n        metadata: { ...metadata, shareCustomers: true },\n      }))));\n};\n\nexport const down = () => {\n  const allUsers = UserService.fetch({ organisations: { _id: 1 } });\n\n  return Promise.all(allUsers.map(({ _id: userId, organisations = [] }) =>\n    organisations.forEach(({ _id: organisationId, $metadata: metadata }) => {\n      const { shareCustomers, ...restMeta } = metadata;\n      UserService.updateLinkMetadata({\n        id: userId,\n        linkName: 'organisations',\n        linkId: organisationId,\n        metadata: { shareCustomers: undefined, ...restMeta },\n      });\n    })));\n};\n\nMigrations.add({\n  version: 12,\n  name: 'Share customers with organisation users',\n  up,\n  down,\n});\n","import { Migrations } from 'meteor/percolate:migrations';\nimport { Mongo } from 'meteor/mongo';\n\nimport {\n  LOANS_COLLECTION,\n  BORROWERS_COLLECTION,\n  PROPERTIES_COLLECTION,\n  ORGANISATIONS_COLLECTION,\n  PROMOTIONS_COLLECTION,\n} from 'core/api/constants';\nimport FileService from 'core/api/files/server/FileService';\n\nconst collections = [\n  LOANS_COLLECTION,\n  BORROWERS_COLLECTION,\n  PROPERTIES_COLLECTION,\n  ORGANISATIONS_COLLECTION,\n  PROMOTIONS_COLLECTION,\n];\n\nexport const up = async () => {\n  for (let index = 0; index < collections.length; index++) {\n    const collection = collections[index];\n\n    const docs = Mongo.Collection.get(collection)\n      .find({}, { fields: { _id: 1 } })\n      .fetch();\n\n    for (let index2 = 0; index2 < docs.length; index2++) {\n      const { _id: docId } = docs[index2];\n      await FileService.updateDocumentsCache({ collection, docId });\n    }\n  }\n};\n\nexport const down = () => {\n  collections.forEach((collection) => {\n    Mongo.Collection.get(collection).update(\n      {},\n      { $unset: { documents: true } },\n      { multi: true },\n    );\n  });\n};\n\nMigrations.add({\n  version: 13,\n  name: 'Add documents cache on all collections',\n  up,\n  down,\n});\n","import { Migrations } from 'meteor/percolate:migrations';\n\nimport { Properties } from '../..';\n\nexport const up = () => {\n  const allProperties = Properties.find({}).fetch();\n\n  return Promise.all(allProperties.map(({ _id, monthlyExpenses }) =>\n    Properties.rawCollection().update(\n      { _id },\n      {\n        ...(monthlyExpenses\n          ? { $set: { yearlyExpenses: monthlyExpenses * 12 } }\n          : {}),\n        $unset: { monthlyExpenses: true },\n      },\n    )));\n};\n\nexport const down = () => {\n  const allProperties = Properties.find({}).fetch();\n\n  return Promise.all(allProperties.map(({ _id, yearlyExpenses }) =>\n    Properties.rawCollection().update(\n      { _id },\n      {\n        ...(yearlyExpenses\n          ? { $set: { monthlyExpenses: Math.round(yearlyExpenses / 12) } }\n          : {}),\n        $unset: { yearlyExpenses: true },\n      },\n    )));\n};\n\nMigrations.add({\n  version: 14,\n  name: 'Change monthlyExpenses into yearlyExpenses',\n  up,\n  down,\n});\n","import { Migrations } from 'meteor/percolate:migrations';\n\nimport { Loans } from '../..';\nimport { LOAN_CATEGORIES } from '../../loans/loanConstants';\n\nexport const up = async () => {\n  await Loans.rawCollection().update(\n    {},\n    { $set: { category: LOAN_CATEGORIES.STANDARD } },\n    { multi: true },\n  );\n};\n\nexport const down = async () => {\n  await Loans.rawCollection().update(\n    {},\n    { $unset: { category: true } },\n    { multi: true },\n  );\n};\n\nMigrations.add({\n  version: 15,\n  name: 'Add loan category',\n  up,\n  down,\n});\n","import { Migrations } from 'meteor/percolate:migrations';\n\nimport { Users, Contacts } from '../..';\nimport { formatPhoneNumber } from '../../../utils/phoneFormatting';\n\nexport const up = async () => {\n  const allUsers = Users.find({}, { fields: { phoneNumbers: 1 } }).fetch();\n  const allContacts = Contacts.find(\n    {},\n    { fields: { phoneNumbers: 1 } },\n  ).fetch();\n\n  await Promise.all(allUsers.map(({ _id, phoneNumbers = [] }) =>\n    Users.rawCollection().update(\n      { _id },\n      { $set: { phoneNumbers: phoneNumbers.map(formatPhoneNumber) } },\n    )));\n\n  await Promise.all(allContacts.map(({ _id, phoneNumbers = [] }) =>\n    Contacts.rawCollection().update(\n      { _id },\n      { $set: { phoneNumbers: phoneNumbers.map(formatPhoneNumber) } },\n    )));\n};\n\n// Do nothing, can't go back!\nexport const down = () => {};\n\nMigrations.add({\n  version: 16,\n  name: 'Format all phone numbers',\n  up,\n  down,\n});\n","import { Migrations } from 'meteor/percolate:migrations';\n\nimport { ACTIVITY_TYPES } from '../../activities/activityConstants';\nimport ActivityService from '../../activities/server/ActivityService';\nimport LoanService from '../../loans/server/LoanService';\n\nexport const up = async () => {\n  const allLoans = LoanService.fetch({\n    createdAt: 1,\n    closingDate: 1,\n    signingDate: 1,\n    user: { assignedEmployeeId: 1 },\n  });\n\n  await Promise.all(allLoans.map(({ createdAt, _id, signingDate, closingDate, user = {} }) => {\n    const assignee = user.assignedEmployeeId;\n    ActivityService.addCreatedAtActivity({\n      createdAt,\n      loanLink: { _id },\n      title: 'Dossier créé',\n    });\n\n    if (signingDate) {\n      ActivityService.insert({\n        title: 'Signature',\n        date: signingDate,\n        type: ACTIVITY_TYPES.EVENT,\n        createdBy: assignee,\n        loanLink: { _id },\n      });\n    }\n\n    if (closingDate) {\n      ActivityService.insert({\n        title: 'Closing',\n        date: closingDate,\n        type: ACTIVITY_TYPES.EVENT,\n        createdBy: assignee,\n        loanLink: { _id },\n      });\n    }\n\n    LoanService.baseUpdate(_id, {\n      $unset: { closingDate: 1, signingDate: 1 },\n    });\n  }));\n};\n\n// No need to migrate back\nexport const down = () => {};\n\nMigrations.add({\n  version: 17,\n  name: 'Add activities and remove closing + signing dates',\n  up,\n  down,\n});\n","import { Migrations } from 'meteor/percolate:migrations';\n\nimport { Tasks } from '../..';\nimport { TASK_PRIORITIES } from '../../tasks/taskConstants';\n\nexport const up = async () => {\n  await Tasks.rawCollection().update(\n    {},\n    { $set: { priority: TASK_PRIORITIES.DEFAULT } },\n    { multi: true },\n  );\n};\n\nexport const down = async () => {\n  await Tasks.rawCollection().update(\n    {},\n    { $unset: { priority: true } },\n    { multi: true },\n  );\n};\n\nMigrations.add({\n  version: 18,\n  name: 'Add task priority',\n  up,\n  down,\n});\n","import { Migrations } from 'meteor/percolate:migrations';\n\nimport Revenues from '../../revenues';\n\nexport const up = async () => {\n  const allRevenues = Revenues.find({}).fetch();\n\n  return Promise.all(allRevenues.map(({ _id, organisationLinks }) =>\n    Revenues.rawCollection().update(\n      { _id },\n      {\n        $set: {\n          organisationLinks: organisationLinks.map(({ paidDate, ...link }) => ({\n            ...link,\n            paidAt: paidDate,\n          })),\n        },\n      },\n    )));\n};\n\nexport const down = async () => {\n  const allRevenues = Revenues.find({}).fetch();\n\n  return Promise.all(allRevenues.map(({ _id, organisationLinks }) =>\n    Revenues.rawCollection().update(\n      { _id },\n      {\n        $set: {\n          organisationLinks: organisationLinks.map(({ paidAt, ...link }) => ({\n            ...link,\n            paidDate: paidAt,\n          })),\n        },\n      },\n    )));\n};\n\nMigrations.add({\n  version: 19,\n  name: 'Use paidAt instead of paidDate of consistency',\n  up,\n  down,\n});\n","import { Migrations } from 'meteor/percolate:migrations';\n\nimport { Loans } from '../..';\n\nexport const up = () => {\n  Loans.update({}, { $set: { additionalDocuments: [] } }, { multi: true });\n};\n\nexport const down = () => {\n  Loans.update({}, { $unset: { additionalDocuments: true } }, { multi: true });\n};\n\nMigrations.add({\n  version: 2,\n  name: 'Add additional documents to loans',\n  up,\n  down,\n});\n","import { Migrations } from 'meteor/percolate:migrations';\n\nimport { Loans } from '../..';\n\nexport const up = () => {\n  const allLoans = Loans.find({}).fetch();\n\n  return Promise.all(allLoans.map(({ _id, general }) =>\n    Loans.rawCollection().update(\n      { _id },\n      {\n        $set: {\n          ...general,\n          previousLoanTranches: [],\n        },\n        $unset: { general: true },\n      },\n    )));\n};\n\nexport const down = () => {\n  const allLoans = Loans.find({}).fetch();\n\n  return Promise.all(allLoans.map(({\n    _id,\n    purchaseType,\n    residenceType,\n    canton,\n    currentOwner,\n    futureOwner,\n    otherOwner,\n  }) =>\n    Loans.rawCollection().update(\n      { _id },\n      {\n        $set: {\n          general: {\n            purchaseType,\n            residenceType,\n            canton,\n            currentOwner,\n            futureOwner,\n            otherOwner,\n          },\n        },\n        $unset: {\n          purchaseType: true,\n          residenceType: true,\n          canton: true,\n          currentOwner: true,\n          futureOwner: true,\n          otherOwner: true,\n        },\n      },\n    )));\n};\n\nMigrations.add({\n  version: 3,\n  name: 'Remove general from loans, and add previousLoanTranches',\n  up,\n  down,\n});\n","import { Migrations } from 'meteor/percolate:migrations';\n\nimport { Promotions } from '../..';\n\nexport const PERMISSIONS = {\n  canSellLots: false,\n  canModifyLots: false,\n  canRemoveLots: false,\n  canModifyPromotion: false,\n  canManageDocuments: false,\n  canBookLots: false,\n  canInviteCustomers: false,\n  canAddLots: false,\n  displayCustomerNames: false,\n};\n\nexport const up = () => {\n  const allPromotions = Promotions.find().fetch();\n\n  return Promise.all(allPromotions.map((promotion) => {\n    const { _id, userLinks = [] } = promotion;\n    const newUserLinks = userLinks.map(({ permissions, ...user }) => ({\n      permissions: PERMISSIONS,\n      ...user,\n    }));\n    return Promotions.rawCollection().update(\n      { _id },\n      { $set: { userLinks: newUserLinks } },\n    );\n  }));\n};\n\nexport const down = () => {\n  const allPromotions = Promotions.find().fetch();\n\n  return Promise.all(allPromotions.map((promotion) => {\n    const { _id, userLinks = [] } = promotion;\n    const oldUserLinks = userLinks.map(({ permissions, ...user }) => ({\n      permissions: 'READ',\n      ...user,\n    }));\n    return Promotions.rawCollection().update(\n      { _id },\n      { $set: { userLinks: oldUserLinks } },\n    );\n  }));\n};\n\nMigrations.add({\n  version: 4,\n  name: 'Modify user promotion permissions',\n  up,\n  down,\n});\n","import { Migrations } from 'meteor/percolate:migrations';\n\nimport { Loans } from '../..';\nimport LoanService from '../../loans/server/LoanService';\n\nexport const up = () => {\n  const allLoans = Loans.find().fetch();\n\n  return Promise.all(allLoans.map((loan) => {\n    const { maxSolvency } = loan;\n    if (maxSolvency) {\n      const { canton } = maxSolvency;\n      return LoanService.setMaxPropertyValueWithoutBorrowRatio({\n        loanId: loan._id,\n        canton,\n      }).then(() =>\n        Loans.rawCollection().update(\n          { _id: loan._id },\n          { $unset: { maxSolvency: true } },\n        ));\n    }\n\n    return Promise.resolve();\n  }));\n};\n\nexport const down = () => {\n  const allLoans = Loans.find().fetch();\n\n  return Promise.all(allLoans.map((loan) => {\n    const { maxPropertyValue } = loan;\n    if (maxPropertyValue) {\n      const {\n        main: { max: maxMain },\n        second: { max: maxSecond },\n        canton,\n        date,\n      } = maxPropertyValue;\n\n      // Schema would not be valid if we used LoanService.baseUpdate\n      return Loans.rawCollection().update(\n        { _id: loan._id },\n        {\n          $set: {\n            maxSolvency: {\n              date,\n              canton,\n              main: maxMain,\n              second: maxSecond,\n            },\n          },\n          $unset: { maxPropertyValue: true },\n        },\n      );\n    }\n  }));\n};\n\nMigrations.add({\n  version: 5,\n  name: 'Add lender rules to max solvency',\n  up,\n  down,\n});\n","import { Migrations } from 'meteor/percolate:migrations';\n\nimport { Organisations } from '../..';\n\nexport const up = () => {\n  const allOrganisations = Organisations.find().fetch();\n\n  return Promise.all(allOrganisations.map((organisation) => {\n    const { contactIds = [], userLinks = [] } = organisation;\n    let promises = [];\n\n    if (contactIds.length > 0) {\n      const newContactIds = contactIds.map(({ role, ...contact }) => ({\n        title: role,\n        ...contact,\n      }));\n      promises = [\n        Organisations.rawCollection().update(\n          { _id: organisation._id },\n          { $set: { contactIds: newContactIds } },\n        ),\n      ];\n    }\n\n    if (userLinks.length > 0) {\n      const newUserLinks = userLinks.map(({ role, ...user }) => ({\n        title: role,\n        ...user,\n      }));\n\n      promises = [\n        ...promises,\n        Organisations.rawCollection().update(\n          { _id: organisation._id },\n          { $set: { userLinks: newUserLinks } },\n        ),\n      ];\n    }\n\n    if (promises.length > 0) {\n      return Promise.all(promises);\n    }\n\n    return Promise.resolve();\n  }));\n};\n\nexport const down = () => {\n  const allOrganisations = Organisations.find().fetch();\n\n  return Promise.all(allOrganisations.map((organisation) => {\n    const { contactIds = [], userLinks = [] } = organisation;\n    let promises = [];\n\n    if (contactIds.length > 0) {\n      const newContactIds = contactIds.map(({ title, ...contact }) => ({\n        role: title,\n        ...contact,\n      }));\n      promises = [\n        Organisations.rawCollection().update(\n          { _id: organisation._id },\n          { $set: { contactIds: newContactIds } },\n        ),\n      ];\n    }\n\n    if (userLinks.length > 0) {\n      const newUserLinks = userLinks.map(({ title, ...user }) => ({\n        role: title,\n        ...user,\n      }));\n\n      promises = [\n        ...promises,\n        Organisations.rawCollection().update(\n          { _id: organisation._id },\n          { $set: { userLinks: newUserLinks } },\n        ),\n      ];\n    }\n\n    if (promises.length > 0) {\n      return Promise.all(promises);\n    }\n\n    return Promise.resolve();\n  }));\n};\n\nMigrations.add({\n  version: 6,\n  name:\n    'Rename role into title in organisations userLinks and contactIds metadata',\n  up,\n  down,\n});\n","import { Migrations } from 'meteor/percolate:migrations';\n\nimport { Loans } from '../..';\n\nexport const up = () => {\n  const allLoans = Loans.find({}).fetch();\n\n  return Promise.all(allLoans.map(({ _id, logic: { step } }) =>\n    Loans.rawCollection().update(\n      { _id },\n      { $set: { step }, $unset: { logic: true } },\n    )));\n};\n\nexport const down = () => {\n  const allLoans = Loans.find({}).fetch();\n\n  return Promise.all(allLoans.map(({ _id, step }) =>\n    Loans.rawCollection().update(\n      { _id },\n      { $set: { logic: { step } }, $unset: { step: true } },\n    )));\n};\n\nMigrations.add({\n  version: 7,\n  name: 'Remove loan.logic',\n  up,\n  down,\n});\n","import { Migrations } from 'meteor/percolate:migrations';\n\nimport { APPLICATION_TYPES } from 'core/api/loans/loanConstants';\nimport { Loans } from '../..';\n\nexport const up = () => {\n  const allLoans = Loans.find({}).fetch();\n\n  return Promise.all(allLoans.map(({ _id }) =>\n    Loans.rawCollection().update(\n      { _id },\n      { $set: { applicationType: APPLICATION_TYPES.FULL } },\n    )));\n};\n\nexport const down = () => {\n  const allLoans = Loans.find({}).fetch();\n\n  return Promise.all(allLoans.map(({ _id }) =>\n    Loans.rawCollection().update(\n      { _id },\n      { $unset: { applicationType: true } },\n    )));\n};\n\nMigrations.add({\n  version: 8,\n  name: 'Add applicationType on loans',\n  up,\n  down,\n});\n","import { Migrations } from 'meteor/percolate:migrations';\n\nimport { Meteor } from 'meteor/meteor';\nimport { STEPS } from 'core/api/loans/loanConstants';\nimport { Loans } from '../..';\n\nconst mapStepUp = (step) => {\n  switch (step) {\n  case 'PREPARATION':\n    return STEPS.SOLVENCY;\n  case 'FIND_LENDER':\n    return STEPS.REQUEST;\n  case 'GET_CONTRACT':\n    return STEPS.OFFERS;\n  case 'CLOSING':\n    return STEPS.CLOSING;\n  default:\n    throw new Meteor.Error(`Unknown step ${step}`);\n  }\n};\n\nconst mapStepDown = (step) => {\n  switch (step) {\n  case STEPS.SOLVENCY:\n    return 'PREPARATION';\n  case STEPS.REQUEST:\n    return 'FIND_LENDER';\n  case STEPS.OFFERS:\n    return 'GET_CONTRACT';\n  case STEPS.CLOSING:\n    return 'CLOSING';\n  default:\n    throw new Meteor.Error(`Unknown step ${step}`);\n  }\n};\n\nexport const up = () => {\n  const allLoans = Loans.find({}).fetch();\n\n  return Promise.all(allLoans.map(({ _id, step }) =>\n    Loans.rawCollection().update(\n      { _id },\n      { $set: { step: mapStepUp(step) } },\n    )));\n};\n\nexport const down = () => {\n  const allLoans = Loans.find({}).fetch();\n\n  return Promise.all(allLoans.map(({ _id, step }) =>\n    Loans.rawCollection().update(\n      { _id },\n      { $set: { step: mapStepDown(step) } },\n    )));\n};\n\nMigrations.add({\n  version: 9,\n  name: 'Rename steps',\n  up,\n  down,\n});\n","import { Migrations } from 'meteor/percolate:migrations';\n\nimport './1';\nimport './2';\nimport './3';\nimport './4';\nimport './5';\nimport './6';\nimport './7';\nimport './8';\nimport './9';\nimport './10';\nimport './11';\nimport './12';\nimport './13';\nimport './14';\nimport './15';\nimport './16';\nimport './17';\nimport './18';\nimport './19';\n\n// To migrate to a specific version\n// Migrations.migrateTo(2);\n// To redo a migration\n// Migrations.migrateTo(`3,rerun`);\nexport const migrate = () => {\n  Migrations.migrateTo('latest');\n};\n","import { Match } from 'meteor/check';\n\nimport { exposeQuery } from '../../queries/queryHelpers';\nimport { loanMonitoring } from '../queries';\nimport { loanMonitoring as loanMonitoringResolver } from './resolvers';\n\nexposeQuery({\n  query: loanMonitoring,\n  overrides: {\n    validateParams: {\n      groupBy: String,\n      value: String,\n      filters: Match.Maybe(Object),\n    },\n  },\n  resolver: loanMonitoringResolver,\n});\n","import { Meteor } from 'meteor/meteor';\n\nimport merge from 'lodash/merge';\n\nimport { REVENUE_STATUS, LOAN_STATUS } from 'core/api/constants';\nimport LoanService from '../../loans/server/LoanService';\n\nconst defaultFilters = {\n  status: { $nin: [LOAN_STATUS.TEST] },\n};\n\nconst getPredicate = (filters = {}) => ({\n  $match: merge({}, defaultFilters, filters),\n});\n\nconst getProjection = () => ({\n  $project: {\n    status: 1,\n    revenueLinks: 1,\n    selectedStructure: 1,\n    createdYear: { $year: { date: '$createdAt' } },\n    createdMonth: { $month: { date: '$createdAt' } },\n    structure: {\n      $arrayElemAt: [\n        {\n          $filter: {\n            input: '$structures',\n            as: 'item',\n            cond: { $eq: ['$$item.id', '$selectedStructure'] },\n          },\n        },\n        0,\n      ],\n    },\n  },\n});\n\nconst getRevenues = ({ value }) => {\n  if (value === 'revenues') {\n    return [\n      {\n        $lookup: {\n          from: 'revenues',\n          localField: 'revenueLinks',\n          foreignField: '_id',\n          as: 'revenues',\n        },\n      },\n      { $unwind: '$revenues' },\n      {\n        $addFields: {\n          revenueDate: {\n            $cond: {\n              if: { $eq: ['$revenues.status', REVENUE_STATUS.EXPECTED] },\n              then: '$revenues.expectedAt',\n              else: '$revenues.paidAt',\n            },\n          },\n        },\n      },\n      {\n        $addFields: {\n          revenueYear: { $year: { date: '$revenueDate' } },\n          revenueMonth: { $month: { date: '$revenueDate' } },\n        },\n      },\n    ];\n  }\n};\n\nconst getGroupBy = (groupBy) => {\n  switch (groupBy) {\n  case 'status':\n    return '$status';\n  case 'revenueDate':\n    return { month: '$revenueMonth', year: '$revenueYear' };\n  case 'createdAt':\n    return { month: '$createdMonth', year: '$createdYear' };\n\n  default:\n    throw new Meteor.Error(`Invalid groupBy: \"${groupBy}\"`);\n  }\n};\n\nconst getGrouping = ({ groupBy, value }) => {\n  const fields = {};\n  switch (value) {\n  case 'count':\n    fields.count = { $sum: 1 };\n    break;\n  case 'revenues':\n    fields.revenues = { $sum: '$revenues.amount' };\n    fields.paidRevenues = {\n      $sum: {\n        $cond: {\n          if: { $eq: ['$revenues.status', REVENUE_STATUS.CLOSED] },\n          then: '$revenues.amount',\n          else: 0,\n        },\n      },\n    };\n    fields.expectedRevenues = {\n      $sum: {\n        $cond: {\n          if: { $eq: ['$revenues.status', REVENUE_STATUS.EXPECTED] },\n          then: '$revenues.amount',\n          else: 0,\n        },\n      },\n    };\n    break;\n  case 'loanValue':\n    fields.loanValue = { $sum: '$structure.wantedLoan' };\n    break;\n  default:\n    throw new Meteor.Error('Invalid grouping value');\n  }\n\n  return { $group: { _id: getGroupBy(groupBy), ...fields } };\n};\n\nconst getSort = ({ groupBy }) => {\n  if (groupBy === 'revenueDate' || groupBy === 'createdAt') {\n    return { $sort: { '_id.year': 1, '_id.month': 1 } };\n  }\n};\n\nconst buildPipeline = ({ filters, groupBy, value }) =>\n  [\n    getPredicate(filters),\n    getProjection(),\n    getRevenues({ value }),\n    getGrouping({ groupBy, value }),\n    getSort({ groupBy }),\n  ]\n    .reduce((arr, val) => [...arr, ...(Array.isArray(val) ? val : [val])], [])\n    .filter(x => x);\n\nexport const loanMonitoring = async (args) => {\n  const pipeline = buildPipeline(args);\n  const agg = await LoanService.aggregate(pipeline).toArray();\n  return agg;\n};\n","import Loans from '../loans';\n\nexport const loanMonitoring = Loans.createQuery('loanMonitoring', () => {});\n","import SimpleSchema from 'simpl-schema';\nimport { createdAt, updatedAt, moneyField } from '../../helpers/sharedSchemas';\nimport {\n  CANTONS,\n  MORTGAGE_NOTE_TYPES,\n  MORTGAGE_NOTE_CATEGORIES,\n} from '../../constants';\n\nconst MortgageNoteSchema = new SimpleSchema({\n  createdAt,\n  updatedAt,\n  value: moneyField,\n  rank: { type: Number, min: 0, max: 10, optional: true },\n  type: {\n    type: String,\n    allowedValues: Object.values(MORTGAGE_NOTE_TYPES),\n    optional: true,\n    uniforms: { placeholder: null },\n  },\n  category: {\n    type: String,\n    allowedValues: Object.values(MORTGAGE_NOTE_CATEGORIES),\n    optional: true,\n    uniforms: { placeholder: null },\n  },\n  canton: {\n    type: String,\n    allowedValues: Object.keys(CANTONS),\n    optional: true,\n    uniforms: { placeholder: null },\n  },\n});\n\nexport default MortgageNoteSchema;\n","import { Meteor } from 'meteor/meteor';\n\nimport MortgageNotes from '../mortgageNotes';\nimport CollectionService from '../../helpers/CollectionService';\n\nclass MortgageNoteService extends CollectionService {\n  constructor() {\n    super(MortgageNotes);\n  }\n\n  insert({ mortgageNote = {}, propertyId, borrowerId }) {\n    if (!borrowerId && !propertyId) {\n      throw new Meteor.Error('Une cédule doit être liée à un emprunteur ou bien immo');\n    }\n\n    const id = super.insert(mortgageNote);\n\n    if (borrowerId) {\n      this.addLink({ id, linkName: 'borrower', linkId: borrowerId });\n    }\n    if (propertyId) {\n      this.addLink({ id, linkName: 'property', linkId: propertyId });\n    }\n\n    return id;\n  }\n}\n\nexport default new MortgageNoteService();\n","import BorrowerService from '../../borrowers/server/BorrowerService';\nimport MortgageNotes from '../mortgageNotes';\nimport MortgageNoteService from './MortgageNoteService';\n\nMortgageNotes.before.remove((userId, { _id: mortgageNoteId }) => {\n  const { borrower } = MortgageNoteService.fetchOne({\n    $filters: { _id: mortgageNoteId },\n    borrower: { _id: 1 },\n  });\n\n  if (borrower) {\n    BorrowerService.cleanUpMortgageNotes({ borrowerId: borrower._id });\n  }\n});\n","import SecurityService from '../../security';\nimport {\n  mortgageNoteInsert,\n  mortgageNoteRemove,\n  mortgageNoteUpdate,\n} from '../methodDefinitions';\nimport MortgageNoteService from './MortgageNoteService';\n\nmortgageNoteInsert.setHandler(({ userId }, params) => {\n  if (params.propertyId) {\n    SecurityService.properties.isAllowedToUpdate(params.propertyId, userId);\n  }\n  if (params.borrowerId) {\n    SecurityService.borrowers.isAllowedToUpdate(params.borrowerId, userId);\n  }\n  MortgageNoteService.insert(params);\n});\n\nmortgageNoteRemove.setHandler(({ userId }, { mortgageNoteId }) => {\n  const { borrower, property } = MortgageNoteService.fetchOne({\n    $filters: { _id: mortgageNoteId },\n  });\n  if (property) {\n    SecurityService.properties.isAllowedToUpdate(property._id, userId);\n  }\n  if (borrower) {\n    SecurityService.borrowers.isAllowedToUpdate(borrower._id, userId);\n  }\n\n  return MortgageNoteService.remove(mortgageNoteId);\n});\n\nmortgageNoteUpdate.setHandler(({ userId }, { mortgageNoteId, object }) => {\n  const { borrower, property } = MortgageNoteService.fetchOne({\n    $filters: { _id: mortgageNoteId },\n    borrower: { _id: 1 },\n    property: { _id: 1 },\n  });\n  if (property) {\n    SecurityService.properties.isAllowedToUpdate(property._id, userId);\n  }\n  if (borrower) {\n    SecurityService.borrowers.isAllowedToUpdate(borrower._id, userId);\n  }\n\n  return MortgageNoteService._update({ id: mortgageNoteId, object });\n});\n","export * from './methodDefinitions';\nexport { default } from './mortgageNotes';\n","import MortgageNotes from '.';\nimport { Borrowers, Properties } from '..';\n\n// If you want to use links, don't forget to import this file in 'core/api/links.js'\n\nMortgageNotes.addLinks({\n  borrower: {\n    collection: Borrowers,\n    inversedBy: 'mortgageNotes',\n  },\n  property: {\n    collection: Properties,\n    inversedBy: 'mortgageNotes',\n  },\n});\n","import { Match } from 'meteor/check';\n\nimport { Method } from '../methods/methods';\n\nexport const mortgageNoteInsert = new Method({\n  name: 'mortgageNoteInsert',\n  params: {\n    mortgageNote: Match.Optional(Object),\n    propertyId: Match.Optional(String),\n    borrowerId: Match.Optional(String),\n  },\n});\n\nexport const mortgageNoteRemove = new Method({\n  name: 'mortgageNoteRemove',\n  params: {\n    mortgageNoteId: String,\n  },\n});\n\nexport const mortgageNoteUpdate = new Method({\n  name: 'mortgageNoteUpdate',\n  params: {\n    mortgageNoteId: String,\n    object: Object,\n  },\n});\n","export const MORTGAGE_NOTES_COLLECTION = 'mortgageNotes';\n\nexport const MORTGAGE_NOTES_QUERIES = {\n// Insert your queries name here\n// Example:\n// EXAMPLE_QUERIE: 'EXAMPLE_QUERIE',\n};\n","import { Mongo } from 'meteor/mongo';\n\nimport MortgageNoteSchema from './schemas/MortgageNoteSchema';\nimport { MORTGAGE_NOTES_COLLECTION } from './mortgageNoteConstants';\n\nconst MortgageNotes = new Mongo.Collection(MORTGAGE_NOTES_COLLECTION);\n\nMortgageNotes.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true,\n});\n\nMortgageNotes.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false,\n});\n\nMortgageNotes.attachSchema(MortgageNoteSchema);\nexport default MortgageNotes;\n","import TaskService from '../../tasks/server/TaskService';\nimport { TASK_STATUS } from '../../tasks/taskConstants';\nimport ActivityService from '../../activities/server/ActivityService';\nimport UserService from '../../users/server/UserService';\nimport { ROLES } from '../../users/userConstants';\nimport CollectionService from '../../helpers/CollectionService';\nimport RevenueService from '../../revenues/server/RevenueService';\nimport Notifications from '../notifications';\n\nclass NotificationService extends CollectionService {\n  constructor() {\n    super(Notifications);\n  }\n\n  readNotification({ userId, notificationId }) {\n    this.updateLinkMetadata({\n      id: notificationId,\n      linkName: 'recipients',\n      linkId: userId,\n      metadata: { read: true },\n    });\n  }\n\n  snoozeNotification({ userId, notificationId }) {\n    const inOneHour = new Date();\n    inOneHour.setHours(inOneHour.getHours() + 1);\n    this.updateLinkMetadata({\n      id: notificationId,\n      linkName: 'recipients',\n      linkId: userId,\n      metadata: { snoozeDate: inOneHour },\n    });\n  }\n\n  unreadNotification({ userId, notificationId }) {\n    this.updateLinkMetadata({\n      id: notificationId,\n      linkName: 'recipients',\n      linkId: userId,\n      metadata: { read: false },\n    });\n  }\n\n  readNotificationAll({ filters }) {\n    const notification = this.fetchOne({\n      $filters: filters,\n      recipientLinks: 1,\n    });\n\n    if (notification) {\n      const { _id: notificationId, recipientLinks } = notification;\n      this._update({\n        id: notificationId,\n        object: {\n          recipientLinks: recipientLinks.map(recipientLink => ({\n            ...recipientLink,\n            read: true,\n          })),\n        },\n      });\n    }\n  }\n\n  addTaskNotifications() {\n    const tasks = TaskService.fetch({\n      $filters: {\n        status: TASK_STATUS.ACTIVE,\n        dueAt: { $lte: new Date() },\n      },\n      _id: 1,\n      assigneeLink: 1,\n    });\n\n    const admins = UserService.fetch({ $filters: { roles: ROLES.ADMIN } });\n    tasks.forEach(({ _id: taskId, assigneeLink = {} }) => {\n      const existingNotification = this.fetchOne({\n        $filters: { 'taskLink._id': taskId },\n      });\n\n      if (!existingNotification) {\n        this.insert({\n          recipientLinks: this.getNotificationRecipient(\n            assigneeLink._id,\n            admins,\n          ),\n          taskLink: { _id: taskId },\n        });\n      }\n    });\n  }\n\n  addActivityNotifications() {\n    const now = new Date();\n    const yesterday = new Date();\n    yesterday.setDate(yesterday.getDate() - 2);\n    const activities = ActivityService.fetch({\n      $filters: {\n        shouldNotify: true,\n        date: { $gte: yesterday, $lte: now },\n      },\n      _id: 1,\n      createdBy: 1,\n      loan: { userCache: 1 },\n    });\n\n    activities.forEach(({ _id: activityId, createdBy = {}, loan }) => {\n      const existingNotification = this.fetchOne({\n        $filters: { 'activityLink._id': activityId },\n      });\n\n      const recipients = [{ _id: createdBy }];\n\n      if (loan && loan.userCache && loan.userCache.assignedEmployeeCache) {\n        recipients.push({ _id: loan.userCache.assignedEmployeeCache._id });\n      }\n\n      if (!existingNotification) {\n        this.insert({\n          recipientLinks: [{ _id: createdBy }],\n          activityLink: { _id: activityId },\n        });\n      }\n    });\n  }\n\n  addRevenueNotifications() {\n    const now = new Date();\n    const revenues = RevenueService.fetch({\n      $filters: { expectedAt: { $lte: now }, paidAt: { $exists: false } },\n      loan: { userCache: 1 },\n    });\n\n    const admins = UserService.fetch({ $filters: { roles: ROLES.ADMIN } });\n    revenues.forEach(({ _id: revenueId, loan }) => {\n      const existingNotification = this.fetchOne({\n        $filters: { 'revenueLink._id': revenueId },\n      });\n\n      if (!existingNotification) {\n        this.insert({\n          recipientLinks: this.getNotificationRecipient(\n            loan.userCache\n              && loan.userCache.assignedEmployeeCache\n              && loan.userCache.assignedEmployeeCache._id,\n            admins,\n          ),\n          revenueLink: { _id: revenueId },\n        });\n      }\n    });\n  }\n\n  getNotificationRecipient(assignee, admins) {\n    if (assignee) {\n      return [{ _id: assignee }];\n    }\n    return admins.map(({ _id }) => ({ _id }));\n  }\n}\n\nexport default new NotificationService();\n","import { Meteor } from 'meteor/meteor';\nimport { Match } from 'meteor/check';\n\nimport { exposeQuery } from '../../queries/queryHelpers';\nimport { adminNotifications } from '../queries';\n\nexposeQuery({\n  query: adminNotifications,\n  overrides: {\n    embody: (body) => {\n      body.$filter = ({\n        filters,\n        params: { _userId, userId, read, unread },\n      }) => {\n        if (!read && !unread) {\n          throw new Meteor.Error('You have to provide either read or unread');\n        }\n\n        if (unread) {\n          filters.recipientLinks = {\n            $elemMatch: {\n              _id: _userId || userId,\n              read: false,\n              $or: [\n                { snoozeDate: { $exists: false } },\n                { snoozeDate: { $lte: new Date() } },\n              ],\n            },\n          };\n        }\n\n        if (read) {\n          filters.recipientLinks = {\n            $elemMatch: { _id: userId || _userId, read: true },\n          };\n        }\n      };\n    },\n    validateParams: {\n      userId: Match.Maybe(String),\n      read: Match.Maybe(Boolean),\n      unread: Match.Maybe(Boolean),\n    },\n  },\n});\n","import SecurityService from '../../security';\nimport {\n  readNotification,\n  snoozeNotification,\n  unreadNotification,\n  generateAllNotifications,\n} from '../methodDefinitions';\nimport NotificationService from './NotificationService';\n\nreadNotification.setHandler(({ userId }, params) => {\n  SecurityService.checkUserIsAdmin(userId);\n  NotificationService.readNotification({ ...params, userId });\n});\n\nsnoozeNotification.setHandler(({ userId }, params) => {\n  SecurityService.checkUserIsAdmin(userId);\n  NotificationService.snoozeNotification({ ...params, userId });\n});\n\nunreadNotification.setHandler(({ userId }, params) => {\n  SecurityService.checkUserIsAdmin(userId);\n  NotificationService.unreadNotification({ ...params, userId });\n});\n\ngenerateAllNotifications.setHandler(({ userId }) => {\n  SecurityService.checkUserIsDev(userId);\n  NotificationService.addTaskNotifications();\n  NotificationService.addActivityNotifications();\n});\n","import { SyncedCron } from 'meteor/littledata:synced-cron';\n\nimport SlackService from '../../slack/server/SlackService';\nimport NotificationService from './NotificationService';\n\nSyncedCron.add({\n  name: 'Generate notifications',\n  schedule(parser) {\n    return parser.text('every 1 minute');\n  },\n  job() {\n    try {\n      NotificationService.addTaskNotifications();\n      NotificationService.addActivityNotifications();\n      NotificationService.addRevenueNotifications();\n    } catch (error) {\n      SlackService.sendError({\n        error,\n        additionalData: ['Notification generation error'],\n      });\n    }\n  },\n});\n","import ServerEventService from '../../events/server/ServerEventService';\nimport { taskComplete } from '../../tasks/methodDefinitions';\nimport NotificationService from './NotificationService';\n","export { default } from './notifications';\n","import Notifications from './notifications';\nimport Users from '../users';\nimport Activities from '../activities';\nimport Tasks from '../tasks';\nimport Revenues from '../revenues';\n\nNotifications.addLinks({\n  recipients: {\n    collection: Users,\n    field: 'recipientLinks',\n    type: 'many',\n    metadata: true,\n  },\n  activity: {\n    collection: Activities,\n    field: 'activityLink',\n    type: 'one',\n    metadata: true,\n  },\n  task: {\n    collection: Tasks,\n    field: 'taskLink',\n    type: 'one',\n    metadata: true,\n  },\n  revenue: {\n    collection: Revenues,\n    field: 'revenueLink',\n    type: 'one',\n    metadata: true,\n  },\n});\n","import { Method } from '../methods/methods';\n\nexport const snoozeNotification = new Method({\n  name: 'snoozeNotification',\n  params: { notificationId: String },\n});\n\nexport const readNotification = new Method({\n  name: 'readNotification',\n  params: { notificationId: String },\n});\n\nexport const unreadNotification = new Method({\n  name: 'unreadNotification',\n  params: { notificationId: String },\n});\n\nexport const generateAllNotifications = new Method({\n  name: 'generateAllNotifications',\n  params: {  },\n});\n","export const NOTIFICATIONS_COLLECTION = 'notifications';\n\nexport const NOTIFICATION_QUERIES = {\n  ADMIN_NOTIFICATIONS: 'ADMIN_NOTIFICATIONS',\n};\n","import { Mongo } from 'meteor/mongo';\n\nimport SimpleSchema from 'simpl-schema';\n\nimport { createdAt, updatedAt } from '../helpers/sharedSchemas';\nimport { NOTIFICATIONS_COLLECTION } from './notificationConstants';\n\nconst Notifications = new Mongo.Collection(NOTIFICATIONS_COLLECTION);\nconst NotificationSchema = new SimpleSchema({\n  createdAt,\n  updatedAt,\n  recipientLinks: { type: Array, minCount: 1 },\n  'recipientLinks.$': Object,\n  'recipientLinks.$._id': String,\n  'recipientLinks.$.read': { type: Boolean, defaultValue: false },\n  'recipientLinks.$.readDate': { type: Date, optional: true },\n  'recipientLinks.$.snoozeDate': { type: Date, optional: true },\n  taskLink: { type: Object, optional: true },\n  'taskLink._id': String,\n  activityLink: { type: Object, optional: true },\n  'activityLink._id': String,\n  revenueLink: { type: Object, optional: true },\n  'revenueLink._id': String,\n});\n\nNotifications.attachSchema(NotificationSchema);\n\nexport default Notifications;\n","import Notifications from './notifications';\nimport { NOTIFICATION_QUERIES } from './notificationConstants';\nimport { notification } from '../fragments';\n\nexport const adminNotifications = Notifications.createQuery(\n  NOTIFICATION_QUERIES.ADMIN_NOTIFICATIONS,\n  notification(),\n);\n","import Notifications from './notifications';\nimport { LOANS_COLLECTION } from '../loans/loanConstants';\n\nNotifications.addReducers({\n  relatedDoc: {\n    body: {\n      activity: { loan: { name: 1 } },\n      task: { loan: { name: 1 } },\n      revenue: { loan: { name: 1 } },\n    },\n    reduce: ({ activity, task, revenue }) => {\n      if (activity) {\n        if (activity.loan) {\n          return { ...activity.loan, collection: LOANS_COLLECTION };\n        }\n      }\n      if (task) {\n        if (task.loan) {\n          return { ...task.loan, collection: LOANS_COLLECTION };\n        }\n      }\n      if (revenue) {\n        if (revenue.loan) {\n          return { ...revenue.loan, collection: LOANS_COLLECTION };\n        }\n      }\n    },\n  },\n  title: {\n    body: {\n      task: { title: 1, dueAt: 1 },\n      activity: { title: 1, date: 1 },\n      revenue: { type: 1, description: 1 },\n    },\n    reduce: ({ task, activity, revenue }) => {\n      let title;\n      if (task) {\n        title = task.title;\n      } else if (activity) {\n        title = activity.title;\n      } else if (revenue) {\n        title = `Paiement \"${revenue.type}\" attendu`;\n      } else {\n        title = \"L'orgine de la notification a été supprimée\";\n      }\n\n      return title;\n    },\n  },\n});\n","import moment from 'moment';\n\nimport CollectionService from '../../helpers/CollectionService';\nimport LoanService from '../../loans/server/LoanService';\nimport LenderService from '../../lenders/server/LenderService';\nimport { LENDER_STATUS } from '../../lenders/lenderConstants';\nimport { fullOffer } from '../../fragments';\nimport { EMAIL_IDS } from '../../email/emailConstants';\nimport { sendEmailToAddress } from '../../methods';\nimport Offers from '../offers';\n\nexport class OfferService extends CollectionService {\n  constructor() {\n    super(Offers);\n  }\n\n  update = ({ offerId, object }) => Offers.update(offerId, { $set: object });\n\n  sendFeedback = ({ offerId, feedback, saveFeedback = true }) => {\n    if (saveFeedback) {\n      this.update({\n        offerId,\n        object: { feedback: { message: feedback, date: new Date() } },\n      });\n    }\n\n    const {\n      createdAt,\n      lender: {\n        organisation: { name: organisationName },\n        contact: { email: address, name },\n        loan: {\n          name: loanName,\n          user: { assignedEmployee },\n        },\n      },\n    } = this.fetchOne({ $filters: { _id: offerId }, ...fullOffer() });\n\n    const { email: assigneeAddress, name: assigneeName } = assignedEmployee || {};\n\n    return sendEmailToAddress.run({\n      emailId: EMAIL_IDS.SEND_FEEDBACK_TO_LENDER,\n      address,\n      name,\n      params: {\n        assigneeAddress,\n        assigneeName,\n        loanName,\n        organisationName,\n        date: moment(createdAt).format('DD.MM.YYYY'),\n        feedback,\n      },\n    });\n  };\n\n  insert = ({ offer: { lenderId, ...offer } }) => {\n    const offerId = Offers.insert({ ...offer });\n    this.addLink({ id: offerId, linkName: 'lender', linkId: lenderId });\n    LenderService._update({\n      id: lenderId,\n      object: { status: LENDER_STATUS.OFFER_RECEIVED },\n    });\n    return offerId;\n  };\n\n  remove = ({ offerId }) => Offers.remove(offerId);\n\n  cleanUpOffer = ({ offerId }) => {\n    const loan = LoanService.fetchOne({\n      $filters: {\n        structures: { $elemMatch: { offerId } },\n      },\n    });\n\n    if (loan) {\n      LoanService.update({\n        loanId: loan._id,\n        object: {\n          structures: loan.structures.map(structure => ({\n            ...structure,\n            offerId:\n              structure.offerId === offerId ? undefined : structure.offerId,\n          })),\n        },\n      });\n    }\n  };\n}\n\nexport default new OfferService();\n","import { exposeQuery } from '../../queries/queryHelpers';\nimport SecurityService from '../../security';\nimport { adminOffers, loanOffers } from '../queries';\n\nexposeQuery({ query: adminOffers, options: { allowFilterById: true } });\n\nexposeQuery({\n  query: loanOffers,\n  overrides: {\n    firewall(userId, { loanId }) {\n      SecurityService.checkLoggedIn();\n\n      if (loanId) {\n        SecurityService.loans.isAllowedToUpdate(loanId);\n      }\n    },\n    embody: (body) => {\n      body.$filter = ({ filters, params: { loanId } }) => {\n        if (loanId) {\n          filters['lenderCache.loanLink._id'] = loanId;\n        }\n      };\n    },\n    validateParams: { loanId: String },\n  },\n});\n","import Offers from '../offers';\nimport OfferService from './OfferService';\n\nOffers.before.remove((userId, { _id: offerId }) => {\n  OfferService.cleanUpOffer({ offerId });\n});\n","import OfferService from './OfferService';\nimport {\n  offerInsert,\n  offerUpdate,\n  offerDelete,\n  offerSendFeedback,\n} from '../methodDefinitions';\nimport SecurityService from '../../security';\n\nofferInsert.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OfferService.insert(params);\n});\n\nofferUpdate.setHandler((context, params) => {\n  SecurityService.offers.isAllowedToUpdate(params.offerId);\n  return OfferService.update(params);\n});\n\nofferDelete.setHandler((context, params) => {\n  SecurityService.offers.isAllowedToDelete(params.offerId);\n  return OfferService.remove(params);\n});\n\nofferSendFeedback.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OfferService.sendFeedback(params);\n});\n","import Offers from '..';\nimport assigneeReducer from '../../reducers/assigneeReducer';\n\nOffers.addReducers({ ...assigneeReducer() });\n","const randInArray = array => array[Math.floor(Math.random() * array.length)];\n\nconst getRandomCondition = () => {\n  const conditions = [\n    'Expertise additionelle requise',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n  ];\n\n  return randInArray(conditions);\n};\n\nconst getRandomCounterpart = () => {\n  const counterparts = [\n    'Gestion de toute la fortune',\n    'Souscrire à une assurance vie',\n    \"Gestion de CHF 100'000 de patrimoine minimum\",\n    'Souscrire à une assurance voiture',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n  ];\n\n  return randInArray(counterparts);\n};\n\nconst round = v => Math.round(v * 10000) / 10000;\n\nconst rand = (min, max) => round(Math.random() * (max - min) + min);\n\nexport const getRandomOffer = ({ loan }) => {\n  const rate1 = rand(0.007, 0.012);\n  const rate2 = rand(0.005, 0.009);\n\n  const loanWanted = loan.structures[0].wantedLoan;\n  const maxAmountLimited = loanWanted > 100000000 ? 100000000 : loanWanted;\n  const counterpart = getRandomCounterpart();\n  const condition = getRandomCondition();\n  return {\n    organisation: 'fake',\n    loanId: loan._id,\n    maxAmount: maxAmountLimited,\n    amortizationGoal: randInArray([0.65, 0.6, 0.5]),\n    interestLibor: rate1,\n    interest1: round(rate1 + rand(0.0004, 0.0016)),\n    interest2: round(rate1 + rand(0.0016, 0.004)),\n    interest5: round(rate1 + rand(0.004, 0.006)),\n    interest10: round(rate1 + rand(0.006, 0.01)),\n    conditions: [condition, counterpart].filter(x => x),\n  };\n};\n","import * as methodDefinitions from './methodDefinitions';\n\nexport * from './methodDefinitions';\nexport { default } from './offers';\nexport const offerMethods = methodDefinitions;\n","import Offers from './offers';\nimport { Users, Lenders } from '..';\n\nOffers.addLinks({\n  user: {\n    field: 'userId',\n    collection: Users,\n    type: 'one',\n  },\n  lender: {\n    field: 'lenderLink',\n    collection: Lenders,\n    type: 'one',\n    metadata: true,\n    denormalize: {\n      field: 'lenderCache',\n      body: {\n        loanLink: 1,\n      },\n    },\n  },\n});\n","import { Match } from 'meteor/check';\nimport { Method } from '../methods/methods';\n\nexport const offerInsert = new Method({\n  name: 'offerInsert',\n  params: {\n    offer: Object,\n  },\n});\n\nexport const offerUpdate = new Method({\n  name: 'offerUpdate',\n  params: {\n    offerId: String,\n    object: Object,\n  },\n});\n\nexport const offerDelete = new Method({\n  name: 'offerDelete',\n  params: {\n    offerId: String,\n  },\n});\n\nexport const offerSendFeedback = new Method({\n  name: 'offerSendFeedback',\n  params: {\n    offerId: String,\n    feedback: String,\n    saveFeedback: Match.Maybe(Boolean),\n  },\n});\n","export const OFFER_TYPE = {\n  STANDARD: 'STANDARD',\n  COUNTERPARTS: 'COUNTERPARTS',\n};\n\nexport const OFFERS_COLLECTION = 'offers';\n\nexport const OFFER_QUERIES = {\n  LOAN_OFFERS: 'LOAN_OFFERS',\n  ADMIN_OFFERS: 'ADMIN_OFFERS',\n};\n","import { Mongo } from 'meteor/mongo';\nimport SimpleSchema from 'simpl-schema';\n\nimport { INTEREST_RATES, OFFERS_COLLECTION } from '../constants';\nimport {\n  createdAt,\n  updatedAt,\n  percentageField,\n  moneyField,\n  cacheField,\n} from '../helpers/sharedSchemas';\n\nconst Offers = new Mongo.Collection(OFFERS_COLLECTION);\n\n// Prevent all client side modifications of mongoDB\nOffers.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true,\n});\nOffers.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false,\n});\n\nexport const OfferSchema = new SimpleSchema({\n  createdAt,\n  updatedAt,\n  organisationLink: { type: Object, optional: true },\n  'organisationLink._id': { type: String, optional: true },\n  contactLink: { type: Object, optional: true },\n  'contactLink._id': String,\n  'contactLink.feedback': { type: String, optional: true },\n  maxAmount: moneyField,\n  amortizationGoal: percentageField,\n  amortizationYears: {\n    type: SimpleSchema.Integer,\n    min: 0,\n    max: 100,\n    optional: true,\n  },\n  fees: moneyField,\n  epotekFees: moneyField,\n  // For each existing rate, insert an allowed value in the schema\n  ...Object.values(INTEREST_RATES).reduce(\n    (accumulator, interestKey) => ({\n      ...accumulator,\n      [interestKey]: percentageField,\n    }),\n    {},\n  ),\n  conditions: {\n    type: Array,\n    optional: true,\n    defaultValue: [],\n  },\n  'conditions.$': { type: String, optional: true },\n  lenderLink: { type: Object, optional: true },\n  'lenderLink._id': { type: String, optional: true },\n  feedback: { type: Object, optional: true },\n  'feedback.message': { type: String, optional: true },\n  'feedback.date': { type: Date, optional: true },\n  withCounterparts: { type: Boolean, optional: true },\n  enableOffer: { type: Boolean, defaultValue: true, optional: true },\n  lenderCache: cacheField,\n});\n\nexport const AdminOfferSchema = OfferSchema.omit(\n  'lenderLink',\n  'organisationLink',\n  'contactLink',\n  'createdAt',\n  'updatedAt',\n  'feedback',\n  'lenderCache',\n);\n\n// Attach schema\nOffers.attachSchema(OfferSchema);\nexport default Offers;\n","import { fullOffer } from '../fragments';\nimport { OFFER_QUERIES } from './offerConstants';\nimport Offers from '.';\n\nexport const adminOffers = Offers.createQuery(\n  OFFER_QUERIES.ADMIN_OFFERS,\n  fullOffer(),\n);\n\nexport const loanOffers = Offers.createQuery(OFFER_QUERIES.LOAN_OFFERS, {\n  ...fullOffer(),\n  $options: { sort: { createdAt: -1 } },\n});\n","import Offers from '.';\n\nOffers.addReducers({\n  loanId: {\n    body: { lender: { loan: { _id: 1 } } },\n    reduce: ({\n      lender: {\n        loan: { _id: loanId },\n      },\n    }) => loanId,\n  },\n  organisation: {\n    body: { lender: { organisation: { name: 1, logo: 1 } } },\n    reduce: ({ lender: { organisation } }) => organisation,\n  },\n});\n","import { Meteor } from 'meteor/meteor';\n\nimport Organisations from '../organisations';\nimport CollectionService from '../../helpers/CollectionService';\n\nexport class OrganisationService extends CollectionService {\n  constructor() {\n    super(Organisations);\n  }\n\n  setCommissionRates({ commissionRates, organisationId }) {\n    if (commissionRates.length > 0) {\n      if (commissionRates[0].threshold !== 0) {\n        throw new Meteor.Error('Le premier seuil doit être 0');\n      }\n    }\n\n    commissionRates.forEach(({ rate, threshold }, i, arr) => {\n      if (i === 0) {\n        return;\n      }\n\n      const { rate: previousRate, threshold: previousThreshold } = arr[i - 1];\n\n      if (previousRate >= rate) {\n        throw new Meteor.Error('Chaque taux doit être plus élevé que le précédent');\n      }\n\n      if (previousThreshold >= threshold) {\n        throw new Meteor.Error('Chaque seuil doit être plus élevé que le précédent');\n      }\n    });\n\n    return this._update({ id: organisationId, object: { commissionRates } });\n  }\n}\n\nexport default new OrganisationService();\n","import { Match } from 'meteor/check';\n\nimport { exposeQuery } from '../../queries/queryHelpers';\nimport SecurityService from '../../security';\nimport {\n  adminOrganisations,\n  organisationSearch,\n  proOrganisation,\n  userOrganisations,\n} from '../queries';\n\nconst makeFilter = ({ param, field, filters }) => {\n  if (param && !(Array.isArray(param) && !param.length)) {\n    filters[field] = { $in: Array.isArray(param) ? param : [param] };\n  }\n};\n\nexposeQuery({\n  query: adminOrganisations,\n  overrides: {\n    validateParams: {\n      features: Match.Maybe(Match.OneOf(String, [String])),\n      tags: Match.Maybe(Match.OneOf(String, [String])),\n      type: Match.Maybe(Match.OneOf(String, [String])),\n      hasRules: Match.Maybe(Boolean),\n    },\n    embody: (body, params) => {\n      body.$filter = ({\n        filters,\n        params: { features, tags, type, _id, hasRules },\n      }) => {\n        if (_id) {\n          filters._id = _id;\n        }\n\n        if (hasRules) {\n          filters.lenderRulesCount = { $gte: 1 };\n        }\n\n        makeFilter({ param: features, field: 'features', filters });\n        makeFilter({ param: tags, field: 'tags', filters });\n        makeFilter({ param: type, field: 'type', filters });\n      };\n      body.$options = { sort: { name: 1 } };\n    },\n  },\n  options: { allowFilterById: true },\n});\n\nexposeQuery({\n  query: organisationSearch,\n  overrides: {\n    firewall: () => {\n      SecurityService.checkCurrentUserIsAdmin();\n    },\n    validateParams: { searchQuery: Match.Maybe(String) },\n  },\n});\n\nexposeQuery({\n  query: proOrganisation,\n  overrides: {\n    firewall: (userId) => {\n      SecurityService.checkUserIsPro(userId);\n    },\n    validateParams: { organisationId: String, $body: Match.Maybe(Object) },\n    embody: (body) => {\n      body.$filter = ({ filters, params: { organisationId } }) => {\n        filters._id = organisationId;\n      };\n    },\n  },\n});\n\nexposeQuery({\n  query: userOrganisations,\n  overrides: {\n    firewall: (userId) => {\n      SecurityService.checkUserLoggedIn(userId);\n    },\n    validateParams: {},\n  },\n});\n","import FileService from '../../files/server/FileService';\nimport Organisations from '../organisations';\n\nOrganisations.after.remove((userId, { _id }) =>\n  FileService.deleteAllFilesForDoc(_id));\n","import SecurityService from '../../security';\nimport {\n  organisationInsert,\n  organisationUpdate,\n  organisationRemove,\n  addContactToOrgnaisation,\n  addUserToOrganisation,\n  removeUserFromOrganisation,\n  setCommissionRates,\n} from '../methodDefinitions';\nimport OrganisationService from './OrganisationService';\n\norganisationInsert.setHandler((context, { organisation }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OrganisationService.insert(organisation);\n});\n\norganisationUpdate.setHandler((context, { organisationId, object }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OrganisationService._update({ id: organisationId, object });\n});\n\norganisationRemove.setHandler((context, { organisationId }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OrganisationService.remove(organisationId);\n});\n\naddContactToOrgnaisation.setHandler((context, { organisationId, contactId, metadata }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OrganisationService.addLink({\n    id: organisationId,\n    linkName: 'contacts',\n    linkId: contactId,\n    metadata,\n  });\n});\n\naddUserToOrganisation.setHandler((context, { organisationId, userId, metadata }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OrganisationService.addLink({\n    id: organisationId,\n    linkName: 'users',\n    linkId: userId,\n    metadata,\n  });\n});\n\nremoveUserFromOrganisation.setHandler((context, { organisationId, userId }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OrganisationService.removeLink({\n    id: organisationId,\n    linkName: 'users',\n    linkId: userId,\n  });\n});\n\nsetCommissionRates.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OrganisationService.setCommissionRates(params);\n});\n","import Organisations from '..';\nimport RevenueService from '../../revenues/server/RevenueService';\nimport { getCurrentRate } from '../helpers';\n\nOrganisations.addReducers({\n  generatedRevenues: {\n    body: { _id: 1 },\n    reduce: ({ _id: organisationId }) =>\n      RevenueService.getGeneratedRevenues({ organisationId }),\n  },\n  commissionRate: {\n    body: { commissionRates: 1 },\n    reduce: ({ commissionRates = [], _id: organisationId }) => {\n      let generatedRevenues = 0;\n      if (commissionRates.length > 1) {\n        generatedRevenues = RevenueService.getGeneratedRevenues({\n          organisationId,\n        });\n      }\n\n      return getCurrentRate(commissionRates, generatedRevenues);\n    },\n  },\n});\n","export const getCurrentRate = (commissionRates, referredRevenues) => {\n  if (!commissionRates || commissionRates.length === 0) {\n    return 0;\n  }\n\n  if (commissionRates.length === 1) {\n    return commissionRates[0].rate;\n  }\n\n  let index = 0;\n  commissionRates.some(({ threshold }, i) => {\n    if (threshold > referredRevenues) {\n      index = i - 1;\n      return true;\n    }\n\n    index = i;\n    return false;\n  });\n  return commissionRates[index].rate;\n};\n","export { default } from './organisations';\n","import LinkInitializer from '../links/LinkInitializer';\nimport { Contacts, Lenders, Users, LenderRules, Revenues, Tasks } from '..';\nimport Organisations from './organisations';\n\nOrganisations.addLinks({\n  contacts: {\n    collection: Contacts,\n    field: 'contactIds',\n    type: 'many',\n    metadata: true,\n  },\n  lenders: {\n    collection: Lenders,\n    inversedBy: 'organisation',\n  },\n  users: {\n    collection: Users,\n    field: 'userLinks',\n    type: 'many',\n    metadata: true,\n  },\n  lenderRules: {\n    collection: LenderRules,\n    inversedBy: 'organisation',\n    autoremove: true,\n  },\n  referredCustomers: {\n    collection: Users,\n    inversedBy: 'referredByOrganisation',\n    type: 'many',\n  },\n  revenues: {\n    collection: Revenues,\n    inversedBy: 'organisations',\n    type: 'many',\n  },\n  tasks: {\n    inversedBy: 'organisation',\n    collection: Tasks,\n    autoremove: true,\n  },\n});\n\nLinkInitializer.inversedInit(() => {\n  Organisations.addLinks({\n    sourceOfRevenues: {\n      collection: Revenues,\n      inversedBy: 'organisations',\n    },\n  });\n});\n","import { Match } from 'meteor/check';\nimport { Method } from '../methods/methods';\n\nexport const organisationInsert = new Method({\n  name: 'organisationInsert',\n  params: {\n    organisation: Object,\n  },\n});\n\nexport const organisationUpdate = new Method({\n  name: 'organisationUpdate',\n  params: {\n    organisationId: String,\n    object: Object,\n  },\n});\n\nexport const organisationRemove = new Method({\n  name: 'organisationRemove',\n  params: {\n    organisationId: String,\n  },\n});\n\nexport const addContactToOrgnaisation = new Method({\n  name: 'addContactToOrganisation',\n  params: {\n    organisationId: String,\n    contactId: String,\n    metadata: Object,\n  },\n});\n\nexport const addUserToOrganisation = new Method({\n  name: 'addUserToOrganisation',\n  params: {\n    organisationId: String,\n    userId: String,\n    metadata: Object,\n  },\n});\n\nexport const removeUserFromOrganisation = new Method({\n  name: 'removeUserFromOrganisation',\n  params: {\n    organisationId: String,\n    userId: String,\n  },\n});\n\nexport const setCommissionRates = new Method({\n  name: 'setCommissionRates',\n  params: {\n    organisationId: String,\n    commissionRates: Array,\n  },\n});\n","export const ORGANISATIONS_COLLECTION = 'organisations';\n\nexport const ORGANISATION_TYPES = {\n  BANK: 'BANK',\n  INSURANCE: 'INSURANCE',\n  PRIVATE_BANK: 'PRIVATE_BANK',\n  REAL_ESTATE_BROKER: 'REAL_ESTATE_BROKER',\n  NOTARY_OFFICE: 'NOTARY_OFFICE',\n  CONSTRUCTION_COMPANY: 'CONSTRUCTION_COMPANY',\n  DEVELOPER: 'DEVELOPER',\n  ARCHITECT: 'ARCHITECT',\n  OTHER: 'OTHER',\n};\n\nexport const ORGANISATION_QUERIES = {\n  ADMIN_ORGANISATIONS: 'ADMIN_ORGANISATIONS',\n  FILES: 'FILES',\n  ORGANISATION_SEARCH: 'ORGANISATION_SEARCH',\n  PRO_ORGANISATION: 'PRO_ORGANISATION',\n  USER_ORGANISATIONS: 'USER_ORGANISATIONS',\n};\n\nexport const ORGANISATION_FEATURES = {\n  LENDER: 'LENDER',\n  PRO: 'PRO',\n};\n\nexport const ORGANISATION_TAGS = {\n  CH_PREMIUM: 'CH_PREMIUM',\n  CH_RETAIL: 'CH_RETAIL',\n  FR_RETAIL: 'FR_RETAIL',\n  FR_PREMIUM: 'FR_PREMIUM',\n  YACHTING: 'YACHTING',\n  HELICOPTERS_LEASING: 'HELICOPTERS_LEASING',\n  LBO: 'LBO',\n};\n","import { Mongo } from 'meteor/mongo';\n\nimport SimpleSchema from 'simpl-schema';\n\nimport {\n  address,\n  percentageField,\n  moneyField,\n  documentsField,\n} from '../helpers/sharedSchemas';\nimport {\n  ORGANISATIONS_COLLECTION,\n  ORGANISATION_TYPES,\n  ORGANISATION_FEATURES,\n  ORGANISATION_TAGS,\n} from './organisationConstants';\n\n// console.trace();\n\nconst Organisations = new Mongo.Collection(ORGANISATIONS_COLLECTION);\n\nOrganisations.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true,\n});\n\nOrganisations.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false,\n});\n\nexport const OrganisationSchema = new SimpleSchema({\n  name: {\n    type: String,\n    uniforms: { placeholder: 'Crédit Suisse' },\n    unique: true,\n  },\n  type: {\n    type: String,\n    allowedValues: Object.values(ORGANISATION_TYPES),\n    uniforms: { displayEmpty: false },\n  },\n  features: {\n    type: Array,\n    optional: true,\n    defaultValue: [],\n    uniforms: { placeholder: null },\n  },\n  'features.$': {\n    type: String,\n    allowedValues: Object.values(ORGANISATION_FEATURES),\n  },\n  logo: {\n    type: String,\n    optional: true,\n  },\n  ...address,\n  contactIds: { type: Array, defaultValue: [] },\n  'contactIds.$': Object,\n  'contactIds.$._id': { type: String, optional: true },\n  'contactIds.$.title': { type: String, optional: true },\n  'contactIds.$.useSameAddress': { type: Boolean, optional: true },\n  tags: {\n    type: Array,\n    optional: true,\n    defaultValue: [],\n    uniforms: { placeholder: null },\n  },\n  'tags.$': { type: String, allowedValues: Object.values(ORGANISATION_TAGS) },\n  userLinks: { type: Array, defaultValue: [] },\n  'userLinks.$': Object,\n  'userLinks.$._id': { type: String, optional: true },\n  'userLinks.$.title': { type: String, optional: true },\n  'userLinks.$.isMain': { type: Boolean, optional: true },\n  'userLinks.$.shareCustomers': { type: Boolean, optional: true },\n  commissionRates: { type: Array, defaultValue: [] },\n  'commissionRates.$': Object,\n  'commissionRates.$.rate': percentageField,\n  'commissionRates.$.threshold': moneyField,\n  documents: documentsField,\n  lenderRulesCount: { type: Number, optional: true },\n});\n\nOrganisations.attachSchema(OrganisationSchema);\nexport default Organisations;\n","import { createSearchFilters } from '../helpers';\nimport { fullOrganisation, userOrganisation } from '../fragments';\nimport {\n  ORGANISATION_QUERIES,\n  ORGANISATION_FEATURES,\n} from './organisationConstants';\nimport Organisations from '.';\n\nexport const adminOrganisations = Organisations.createQuery(\n  ORGANISATION_QUERIES.ADMIN_ORGANISATIONS,\n  fullOrganisation(),\n  { scoped: true },\n);\n\nexport const organisationSearch = Organisations.createQuery(\n  ORGANISATION_QUERIES.ORGANISATION_SEARCH,\n  {\n    $filter({ filters, params: { searchQuery } }) {\n      Object.assign(\n        filters,\n        createSearchFilters(['name', '_id', 'type'], searchQuery),\n      );\n    },\n    name: 1,\n    $options: { sort: { name: 1 }, limit: 5 },\n  },\n);\n\nexport const proOrganisation = Organisations.createQuery(\n  ORGANISATION_QUERIES.PRO_ORGANISATION,\n  fullOrganisation(),\n);\n\nexport const userOrganisations = Organisations.createQuery(\n  ORGANISATION_QUERIES.USER_ORGANISATIONS,\n  {\n    $filter({ filters }) {\n      filters.features = { $in: [ORGANISATION_FEATURES.LENDER] };\n    },\n    $options: { sort: { name: 1 } },\n    ...userOrganisation(),\n  },\n);\n","import addressReducer from '../reducers/addressReducer';\nimport Organisations from './organisations';\nimport { fullOffer } from '../fragments';\n\nOrganisations.addReducers({\n  ...addressReducer,\n  offers: {\n    body: {\n      lenders: { offers: fullOffer() },\n    },\n    reduce: ({ lenders = [] }) =>\n      lenders.reduce(\n        (allOffers, { offers = [] }) => [...allOffers, ...offers],\n        [],\n      ),\n  },\n  offerCount: {\n    body: {\n      lenders: { offers: { _id: 1 } },\n    },\n    reduce: ({ lenders = [] }) =>\n      lenders.reduce((tot, { offers = [] }) => tot + offers.length, 0),\n  },\n});\n","import SimpleSchema from 'simpl-schema';\nimport { PROMOTION_LOT_STATUS } from '../promotionLotConstants';\nimport {\n  createdAt,\n  updatedAt,\n} from '../../helpers/sharedSchemas';\n\nconst PromotionLotSchema = new SimpleSchema({\n  createdAt,\n  updatedAt,\n  status: {\n    type: String,\n    allowedValues: Object.values(PROMOTION_LOT_STATUS),\n    defaultValue: PROMOTION_LOT_STATUS.AVAILABLE,\n  },\n  propertyLinks: { type: Array, minCount: 1, maxCount: 1 },\n  'propertyLinks.$': Object,\n  'propertyLinks.$._id': { type: String, optional: true },\n  lotLinks: { type: Array, defaultValue: [] },\n  'lotLinks.$': Object,\n  'lotLinks.$._id': { type: String, optional: true },\n  attributedToLink: { type: Object, optional: true },\n  'attributedToLink._id': { type: String, optional: true },\n});\n\nexport default PromotionLotSchema;\n","import CollectionService from '../../helpers/CollectionService';\nimport PromotionLots from '../promotionLots';\nimport { PROMOTION_LOT_STATUS } from '../promotionLotConstants';\n\nexport class PromotionLotService extends CollectionService {\n  constructor() {\n    super(PromotionLots);\n  }\n\n  update({ promotionLotId, ...rest }) {\n    return this._update({ id: promotionLotId, ...rest });\n  }\n\n  addLotToPromotionLot({ promotionLotId, lotId }) {\n    return this.addLink({\n      id: promotionLotId,\n      linkName: 'lots',\n      linkId: lotId,\n    });\n  }\n\n  removeLotLink({ promotionLotId, lotId }) {\n    return this.removeLink({\n      id: promotionLotId,\n      linkName: 'lots',\n      linkId: lotId,\n    });\n  }\n\n  bookPromotionLot({ promotionLotId, loanId }) {\n    this.update({\n      promotionLotId,\n      object: { status: PROMOTION_LOT_STATUS.BOOKED },\n    });\n\n    return this.addLink({\n      id: promotionLotId,\n      linkName: 'attributedTo',\n      linkId: loanId,\n    });\n  }\n\n  cancelPromotionLotBooking({ promotionLotId }) {\n    this.update({\n      promotionLotId,\n      object: { status: PROMOTION_LOT_STATUS.AVAILABLE },\n    });\n    return this.removeLink({\n      id: promotionLotId,\n      linkName: 'attributedTo',\n    });\n  }\n\n  sellPromotionLot({ promotionLotId }) {\n    return this.update({\n      promotionLotId,\n      object: { status: PROMOTION_LOT_STATUS.SOLD },\n    });\n  }\n}\n\nexport default new PromotionLotService();\n","import { exposeQuery } from '../../queries/queryHelpers';\nimport SecurityService from '../../security';\nimport { appPromotionLot, proPromotionLot } from '../queries';\nimport { proPromotionLotResolver } from './resolvers';\n\nexposeQuery({\n  query: appPromotionLot,\n  overrides: {\n    firewall(userId, { promotionLotId }) {\n      SecurityService.promotions.hasAccessToPromotionLot({\n        promotionLotId,\n        userId,\n      });\n    },\n    validateParams: { promotionLotId: String },\n  },\n});\n\nexposeQuery({\n  query: proPromotionLot,\n  overrides: {\n    firewall(userId, params) {\n      const { promotionLotId } = params;\n      params.userId = userId;\n      SecurityService.checkUserIsPro(userId);\n      SecurityService.promotions.isAllowedToViewPromotionLot({\n        promotionLotId,\n        userId,\n      });\n    },\n    validateParams: { promotionLotId: String, userId: String },\n  },\n  resolver: proPromotionLotResolver,\n});\n","import SecurityService from '../../security';\nimport PromotionLotService from './PromotionLotService';\nimport {\n  promotionLotInsert,\n  promotionLotUpdate,\n  promotionLotRemove,\n  addLotToPromotionLot,\n  removeLotLink,\n  bookPromotionLot,\n  cancelPromotionLotBooking,\n  sellPromotionLot,\n} from '../methodDefinitions';\n\npromotionLotInsert.setHandler(({ userId }, { promotionLot, promotionId }) => {\n  SecurityService.promotions.isAllowedToAddLots({ promotionId, userId });\n  return PromotionLotService.insert({ promotionLot, promotionId });\n});\n\npromotionLotUpdate.setHandler(({ userId }, { promotionLotId, object }) => {\n  SecurityService.promotions.isAllowedToModifyPromotionLot({\n    promotionLotId,\n    userId,\n  });\n  return PromotionLotService.update({ promotionLotId, object });\n});\n\npromotionLotRemove.setHandler(({ userId }, { promotionLotId }) => {\n  SecurityService.promotions.isAllowedToRemovePromotionLot({\n    promotionLotId,\n    userId,\n  });\n  return PromotionLotService.remove(promotionLotId);\n});\n\naddLotToPromotionLot.setHandler(({ userId }, params) => {\n  SecurityService.promotions.isAllowedToModifyPromotionLot({\n    ...params,\n    userId,\n  });\n  return PromotionLotService.addLotToPromotionLot(params);\n});\n\nremoveLotLink.setHandler(({ userId }, params) => {\n  SecurityService.promotions.isAllowedToModifyPromotionLot({\n    ...params,\n    userId,\n  });\n  return PromotionLotService.removeLotLink(params);\n});\n\nbookPromotionLot.setHandler(({ userId }, params) => {\n  const { promotionLotId, loanId } = params;\n  SecurityService.promotions.isAllowedToBookLotToCustomer({\n    promotionLotId,\n    loanId,\n    userId,\n  });\n  return PromotionLotService.bookPromotionLot(params);\n});\n\ncancelPromotionLotBooking.setHandler(({ userId }, params) => {\n  const { promotionLotId } = params;\n  SecurityService.promotions.isAllowedToCancelLotBooking({\n    promotionLotId,\n    userId,\n  });\n  return PromotionLotService.cancelPromotionLotBooking(params);\n});\n\nsellPromotionLot.setHandler(({ userId }, params) => {\n  const { promotionLotId } = params;\n  SecurityService.promotions.isAllowedToSellLotToCustomer({\n    promotionLotId,\n    userId,\n  });\n  return PromotionLotService.sellPromotionLot(params);\n});\n","import { makePromotionLotAnonymizer } from '../../promotions/server/promotionServerHelpers';\nimport { proPromotionLot as proPromotionLotFragment } from '../../fragments';\nimport SecurityService from '../../security';\nimport PromotionLotService from './PromotionLotService';\n\nexport const proPromotionLotResolver = ({ userId, promotionLotId }) => {\n  const promotionLot = PromotionLotService.fetchOne({\n    $filters: { _id: promotionLotId },\n    ...proPromotionLotFragment(),\n  });\n\n  try {\n    SecurityService.checkCurrentUserIsAdmin(userId);\n    return [promotionLot];\n  } catch (error) {\n    return [promotionLot].map(makePromotionLotAnonymizer({ userId }));\n  }\n};\n","import PromotionLots from '../promotionLots';\nimport assigneeReducer from '../../reducers/assigneeReducer';\n\nPromotionLots.addReducers({ ...assigneeReducer() });\n","export * from './methodDefinitions';\nexport { default } from './promotionLots';\n","import PromotionLots from '.';\n\nimport { Promotions, Properties, Lots, PromotionOptions, Loans } from '..';\n\nPromotionLots.addLinks({\n  promotion: {\n    collection: Promotions,\n    inversedBy: 'promotionLots',\n  },\n  properties: {\n    collection: Properties,\n    field: 'propertyLinks',\n    type: 'many',\n    metadata: true,\n  },\n  lots: {\n    collection: Lots,\n    field: 'lotLinks',\n    type: 'many',\n    metadata: true,\n  },\n  promotionOptions: {\n    collection: PromotionOptions,\n    inversedBy: 'promotionLots',\n    autoremove: true,\n  },\n  attributedTo: {\n    collection: Loans,\n    field: 'attributedToLink',\n    type: 'one',\n    metadata: true,\n  },\n});\n","import { Match } from 'meteor/check';\nimport { Method } from '../methods/methods';\n\nexport const promotionLotInsert = new Method({\n  name: 'promotionLotInsert',\n  params: {\n    promotionLot: Object,\n    promotionId: String,\n  },\n});\n\nexport const promotionLotUpdate = new Method({\n  name: 'promotionLotUpdate',\n  params: {\n    promotionLotId: String,\n    object: Object,\n  },\n});\n\nexport const promotionLotRemove = new Method({\n  name: 'promotionLotRemove',\n  params: {\n    promotionLotId: String,\n  },\n});\n\nexport const addLotToPromotionLot = new Method({\n  name: 'addLotToPromotionLot',\n  params: {\n    promotionLotId: String,\n    lotId: String,\n  },\n});\n\nexport const removeLotLink = new Method({\n  name: 'removeLotLink',\n  params: {\n    promotionLotId: String,\n    lotId: String,\n  },\n});\n\nexport const bookPromotionLot = new Method({\n  name: 'bookPromotionLot',\n  params: {\n    promotionLotId: String,\n    loanId: String,\n  },\n});\n\nexport const cancelPromotionLotBooking = new Method({\n  name: 'cancelPromotionLotBooking',\n  params: {\n    promotionLotId: String,\n  },\n});\n\nexport const sellPromotionLot = new Method({\n  name: 'sellPromotionLot',\n  params: {\n    promotionLotId: String,\n  },\n});\n","export const PROMOTION_LOTS_COLLECTION = 'promotionLots';\n\nexport const PROMOTION_LOT_STATUS = {\n  AVAILABLE: 'AVAILABLE',\n  BOOKED: 'BOOKED',\n  SOLD: 'SOLD',\n};\n\nexport const PROMOTION_LOT_REDUCED_STATUS = {\n  BOOKED_FOR_ME: 'BOOKED_FOR_ME',\n  NOT_AVAILABLE: 'NOT_AVAILABLE',\n  SOLD_TO_ME: 'SOLD_TO_ME',\n};\n\nexport const PROMOTION_LOT_QUERIES = {\n  APP_PROMOTION_LOT: 'APP_PROMOTION_LOT',\n  PRO_PROMOTION_LOT: 'PRO_PROMOTION_LOT',\n  PROMOTION_LOT_FILES: 'PROMOTION_LOT_FILES',\n};\n","import { Mongo } from 'meteor/mongo';\n\nimport PromotionLotSchema from './schemas/PromotionLotSchema';\nimport { PROMOTION_LOTS_COLLECTION } from './promotionLotConstants';\n\nconst PromotionLots = new Mongo.Collection(PROMOTION_LOTS_COLLECTION);\n\nPromotionLots.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true,\n});\n\nPromotionLots.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false,\n});\n\nPromotionLots.attachSchema(PromotionLotSchema);\nexport default PromotionLots;\n","import { appPromotionLot as appPromotionLotFragment } from '../fragments';\nimport { PROMOTION_LOT_QUERIES } from './promotionLotConstants';\nimport PromotionLots from '.';\n\nexport const appPromotionLot = PromotionLots.createQuery(\n  PROMOTION_LOT_QUERIES.APP_PROMOTION_LOT,\n  {\n    $filter({ filters, params: { promotionLotId } }) {\n      filters._id = promotionLotId;\n    },\n    ...appPromotionLotFragment(),\n  },\n);\n\nexport const proPromotionLot = PromotionLots.createQuery(\n  PROMOTION_LOT_QUERIES.PRO_PROMOTION_LOT,\n  () => {},\n);\n","import { Meteor } from 'meteor/meteor';\nimport {\n  PROMOTION_LOT_STATUS,\n  PROMOTION_LOT_REDUCED_STATUS,\n} from 'core/api/constants';\nimport PromotionLots from './promotionLots';\n\nPromotionLots.addReducers({\n  name: {\n    body: { properties: { name: 1 } },\n    reduce: ({ properties }) =>\n      properties && properties[0] && properties[0].name,\n  },\n  documents: {\n    body: { properties: { documents: 1 } },\n    reduce: ({ properties }) =>\n      properties && properties[0] && properties[0].documents,\n  },\n  value: {\n    body: { properties: { totalValue: 1 }, lots: { value: 1 } },\n    reduce: ({ properties, lots }) => {\n      // Sometimes, lots are undefined........ fuck me\n      const propertiesValue = properties.reduce(\n        (total, { totalValue }) => total + totalValue,\n        0,\n      );\n      const lotsValue = lots\n        ? lots.reduce((total, { value }) => total + value, 0)\n        : 0;\n\n      return propertiesValue + lotsValue;\n    },\n  },\n  reducedStatus: {\n    body: { status: 1, attributedTo: { user: { _id: 1 } } },\n    reduce: ({ status, attributedTo }) => {\n      if (\n        attributedTo\n        && attributedTo.user\n        && attributedTo.user._id === Meteor.userId()\n      ) {\n        switch (status) {\n        case PROMOTION_LOT_STATUS.BOOKED:\n          return PROMOTION_LOT_REDUCED_STATUS.BOOKED_FOR_ME;\n        case PROMOTION_LOT_STATUS.SOLD:\n          return PROMOTION_LOT_REDUCED_STATUS.SOLD_TO_ME;\n        default:\n          return status;\n        }\n      }\n      if (status === PROMOTION_LOT_STATUS.BOOKED) {\n        return PROMOTION_LOT_REDUCED_STATUS.NOT_AVAILABLE;\n      }\n      return status;\n    },\n  },\n});\n","import SimpleSchema from 'simpl-schema';\nimport { createdAt, updatedAt } from '../../helpers/sharedSchemas';\nimport { PROMOTION_OPTION_SOLVENCY } from '../promotionOptionConstants';\n\nconst PromotionOptionSchema = new SimpleSchema({\n  createdAt,\n  updatedAt,\n  promotionLotLinks: { type: Array, defaultValue: [] },\n  'promotionLotLinks.$': Object,\n  'promotionLotLinks.$._id': { type: String, optional: true },\n  lotLinks: { type: Array, optional: true },\n  'lotLinks.$': Object,\n  'lotLinks.$._id': { type: String, optional: true },\n  custom: {\n    type: String,\n    optional: true,\n  },\n  solvency: {\n    type: String,\n    allowedValues: Object.values(PROMOTION_OPTION_SOLVENCY),\n    defaultValue: PROMOTION_OPTION_SOLVENCY.UNDETERMINED,\n    uniforms: { displayEmpty: false },\n  },\n});\n\nexport default PromotionOptionSchema;\n","import { Meteor } from 'meteor/meteor';\n\nimport LoanService from '../../loans/server/LoanService';\nimport CollectionService from '../../helpers/CollectionService';\nimport { fullPromotionOption } from '../../fragments';\nimport PromotionOptions from '../promotionOptions';\n\nexport class PromotionOptionService extends CollectionService {\n  constructor() {\n    super(PromotionOptions);\n  }\n\n  get(promotionOptionId) {\n    return this.collection\n      .createQuery({\n        $filters: { _id: promotionOptionId },\n        ...fullPromotionOption(),\n      })\n      .fetchOne();\n  }\n\n  getPromotion(promotionOptionId) {\n    const promotionOption = this.fetchOne({\n      $filters: { _id: promotionOptionId },\n      promotionLots: { promotion: { _id: 1 } },\n    });\n\n    return (\n      promotionOption.promotionLots\n      && promotionOption.promotionLots[0].promotion\n    );\n  }\n\n  remove({ promotionOptionId }) {\n    const {\n      loan: { _id: loanId },\n    } = this.fetchOne({\n      $filters: { _id: promotionOptionId },\n      loan: { _id: 1 },\n    });\n\n    const promotionId = this.getPromotion(promotionOptionId)._id;\n\n    const newPriorityOrder = LoanService.getPromotionPriorityOrder({\n      loanId,\n      promotionId,\n    }).filter(id => id !== promotionOptionId);\n    LoanService.setPromotionPriorityOrder({\n      loanId,\n      promotionId,\n      priorityOrder: newPriorityOrder,\n    });\n\n    return super.remove(promotionOptionId);\n  }\n\n  insert = ({ promotionLotId, loanId }) => {\n    const { promotionOptions } = LoanService.fetchOne({\n      $filters: { _id: loanId },\n      promotionOptions: { _id: 1, promotionLots: { _id: 1 } },\n    });\n\n    const existingPromotionOption = promotionOptions\n      && promotionOptions.find(({ promotionLots }) =>\n        promotionLots\n          && promotionLots.some(lot => lot._id === promotionLotId));\n\n    if (existingPromotionOption) {\n      throw new Meteor.Error('Vous avez déjà choisi ce lot. Essayez de rafraîchir la page.');\n    }\n\n    const promotionOptionId = super.insert({\n      promotionLotLinks: [{ _id: promotionLotId }],\n    });\n    LoanService.addLink({\n      id: loanId,\n      linkName: 'promotionOptions',\n      linkId: promotionOptionId,\n    });\n    const promotionId = this.getPromotion(promotionOptionId)._id;\n    const priorityOrder = LoanService.getPromotionPriorityOrder({\n      loanId,\n      promotionId,\n    });\n    LoanService.setPromotionPriorityOrder({\n      loanId,\n      promotionId,\n      priorityOrder: [...priorityOrder, promotionOptionId],\n    });\n    return promotionOptionId;\n  };\n\n  update = ({ promotionOptionId, ...rest }) =>\n    this._update({ id: promotionOptionId, ...rest });\n\n  changePriorityOrder({ promotionOptionId, change }) {\n    const promotionOption = this.get(promotionOptionId);\n    const { loan } = promotionOption;\n    const { _id: promotionId } = this.getPromotion(promotionOptionId);\n    const priorityOrder = LoanService.getPromotionPriorityOrder({\n      loanId: loan._id,\n      promotionId,\n    });\n    const optionIndex = priorityOrder.indexOf(promotionOptionId);\n\n    if (change < 0 && optionIndex === 0) {\n      return false;\n    }\n\n    if (change > 0 && optionIndex === priorityOrder.length - 1) {\n      return false;\n    }\n\n    const newPriorityOrder = priorityOrder.slice();\n    newPriorityOrder[optionIndex] = priorityOrder[optionIndex + change];\n    newPriorityOrder[optionIndex + change] = promotionOptionId;\n\n    return LoanService.setPromotionPriorityOrder({\n      loanId: loan._id,\n      promotionId,\n      priorityOrder: newPriorityOrder,\n    });\n  }\n\n  increasePriorityOrder({ promotionOptionId }) {\n    return this.changePriorityOrder({ promotionOptionId, change: -1 });\n  }\n\n  reducePriorityOrder({ promotionOptionId }) {\n    return this.changePriorityOrder({ promotionOptionId, change: 1 });\n  }\n}\n\nexport default new PromotionOptionService();\n","import { Match } from 'meteor/check';\n\nimport { makePromotionOptionAnonymizer } from '../../promotions/server/promotionServerHelpers';\nimport { exposeQuery } from '../../queries/queryHelpers';\nimport SecurityService from '../../security';\nimport { appPromotionOption, proPromotionOptions } from '../queries';\n\nexposeQuery({\n  query: appPromotionOption,\n  overrides: {\n    firewall(userId, { promotionOptionId }) {\n      SecurityService.promotions.hasAccessToPromotionOption({\n        promotionOptionId,\n        userId,\n      });\n    },\n    embody: (body) => {\n      body.$filter = ({ filters, params: { promotionOptionId } }) => {\n        filters._id = promotionOptionId;\n      };\n    },\n    validateParams: { promotionOptionId: String },\n  },\n});\n\nexposeQuery({\n  query: proPromotionOptions,\n  overrides: {\n    firewall(userId, params) {\n      const { promotionOptionIds } = params;\n      params.userId = userId;\n      SecurityService.checkUserIsPro(userId);\n      promotionOptionIds.forEach((promotionOptionId) => {\n        SecurityService.promotions.isAllowedToViewPromotionOption({\n          promotionOptionId,\n          userId,\n        });\n      });\n      if (!SecurityService.isUserAdmin(userId)) {\n        params.anonymize = true;\n      }\n    },\n    embody: (body, embodyParams) => {\n      body.$filter = ({ filters, params }) => {\n        const { promotionOptionIds = [] } = params;\n        filters._id = { $in: promotionOptionIds };\n      };\n\n      body.$postFilter = (promotionOptions = [], params) => {\n        const { anonymize = false, userId } = params;\n        return anonymize\n          ? promotionOptions.map(makePromotionOptionAnonymizer({ userId }))\n          : promotionOptions;\n      };\n    },\n    validateParams: {\n      promotionOptionIds: [String],\n      userId: String,\n      anonymize: Match.Maybe(Boolean),\n    },\n  },\n});\n","import LoanService from '../../loans/server/LoanService';\nimport PromotionOptions from '..';\n\nPromotionOptions.before.remove((userId, { _id: promotionOptionId }) => {\n  // Remove all references to this promotionOption on the loan\n  const loans = LoanService.find({\n    'promotionOptionLinks._id': promotionOptionId,\n  }).fetch();\n\n  loans.forEach((loan) => {\n    LoanService.update({\n      loanId: loan._id,\n      object: {\n        structures: loan.structures.map(structure => ({\n          ...structure,\n          promotionOptionId:\n            structure.promotionOptionId === promotionOptionId\n              ? null\n              : structure.promotionOptionId,\n        })),\n      },\n    });\n  });\n});\n","import SecurityService from '../../security';\nimport PromotionOptionService from './PromotionOptionService';\nimport LoanService from '../../loans/server/LoanService';\nimport {\n  promotionOptionInsert,\n  promotionOptionUpdate,\n  promotionOptionRemove,\n  increaseOptionPriority,\n  reducePriorityOrder,\n} from '../methodDefinitions';\n\npromotionOptionInsert.setHandler(({ userId }, params) => {\n  const loan = LoanService.get(params.loanId);\n  SecurityService.checkOwnership(loan);\n  return PromotionOptionService.insert(params);\n});\n\npromotionOptionUpdate.setHandler(({ userId }, params) =>\n  // TODO: Security check\n  PromotionOptionService.update(params));\n\npromotionOptionRemove.setHandler(({ userId }, params) =>\n// TODO: Security check\n\n  PromotionOptionService.remove(params));\n\nincreaseOptionPriority.setHandler((context, params) =>\n  PromotionOptionService.increasePriorityOrder(params));\n\nreducePriorityOrder.setHandler((context, params) =>\n  PromotionOptionService.reducePriorityOrder(params));\n","import PromotionOptions from '..';\nimport assigneeReducer from '../../reducers/assigneeReducer';\n\nPromotionOptions.addReducers({\n  ...assigneeReducer(\n    { promotionLots: { promotion: { userLinks: 1 } } },\n    ({ promotionLots }) =>\n      promotionLots[0].promotion.userLinks.length > 0\n      && promotionLots[0].promotion.userLinks[0]._id,\n  ),\n});\n","export * from './methodDefinitions';\nexport { default } from './promotionOptions';\n","import PromotionOptions from '.';\n\nimport { PromotionLots, Lots, Loans } from '..';\n\nPromotionOptions.addLinks({\n  promotionLots: {\n    field: 'promotionLotLinks',\n    collection: PromotionLots,\n    type: 'many',\n    metadata: true,\n  },\n  lots: {\n    field: 'lotLinks',\n    collection: Lots,\n    type: 'many',\n    metadata: true,\n  },\n  loan: {\n    collection: Loans,\n    inversedBy: 'promotionOptions',\n  },\n});\n","import { Match } from 'meteor/check';\nimport { Method } from '../methods/methods';\n\nexport const promotionOptionInsert = new Method({\n  name: 'promotionOptionInsert',\n  params: {\n    promotionLotId: String,\n    loanId: String,\n  },\n});\n\nexport const promotionOptionRemove = new Method({\n  name: 'promotionOptionRemove',\n  params: {\n    promotionOptionId: String,\n  },\n});\n\nexport const promotionOptionUpdate = new Method({\n  name: 'promotionOptionUpdate',\n  params: {\n    promotionOptionId: String,\n    object: Object,\n  },\n});\n\nexport const increaseOptionPriority = new Method({\n  name: 'increaseOptionPriority',\n  params: { promotionOptionId: String },\n});\n\nexport const reducePriorityOrder = new Method({\n  name: 'reducePriorityOrder',\n  params: { promotionOptionId: String },\n});\n","export const PROMOTION_OPTIONS_COLLECTION = 'promotionOptions';\n\nexport const PROMOTION_OPTION_QUERIES = {\n  APP_PROMOTION_OPTION: 'APP_PROMOTION_OPTION',\n  PRO_PROMOTION_OPTIONS: 'PRO_PROMOTION_OPTIONS',\n};\n\nexport const PROMOTION_OPTION_SOLVENCY = {\n  UNDETERMINED: 'UNDETERMINED',\n  SOLVENT: 'SOLVENT',\n  INSOLVENT: 'INSOLVENT',\n};\n","import { Mongo } from 'meteor/mongo';\n\nimport PromotionOptionSchema from './schemas/PromotionOptionSchema';\nimport { PROMOTION_OPTIONS_COLLECTION } from './promotionOptionConstants';\n\nconst PromotionOptions = new Mongo.Collection(PROMOTION_OPTIONS_COLLECTION);\n\nPromotionOptions.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true,\n});\n\nPromotionOptions.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false,\n});\n\nPromotionOptions.attachSchema(PromotionOptionSchema);\nexport default PromotionOptions;\n","import {\n  appPromotionOption as appPromotionOptionFragment,\n  proPromotionOption,\n} from '../fragments';\nimport { PROMOTION_OPTION_QUERIES } from './promotionOptionConstants';\nimport PromotionOptions from '.';\n\nexport const appPromotionOption = PromotionOptions.createQuery(\n  PROMOTION_OPTION_QUERIES.APP_PROMOTION_OPTION,\n  appPromotionOptionFragment(),\n);\n\nexport const proPromotionOptions = PromotionOptions.createQuery(\n  PROMOTION_OPTION_QUERIES.PRO_PROMOTION_OPTIONS,\n  proPromotionOption(),\n);\n","import { Meteor } from 'meteor/meteor';\nimport PromotionOptions from '.';\n\nPromotionOptions.addReducers({\n  promotion: {\n    body: {\n      promotionLots: {\n        promotion: {\n          name: 1,\n          address1: 1,\n          address2: 1,\n          zipCode: 1,\n          canton: 1,\n          city: 1,\n        },\n      },\n    },\n    reduce: ({ promotionLots = [] }) =>\n      (promotionLots.length > 0 ? promotionLots[0].promotion : {}),\n  },\n  name: {\n    body: { promotionLots: { name: 1 } },\n    reduce: ({ promotionLots = [] }) =>\n      (promotionLots.length > 0 ? promotionLots[0].name : ''),\n  },\n  value: {\n    body: { promotionLots: { value: 1 } },\n    reduce: ({ promotionLots = [] }) => {\n      if (promotionLots.length === 0) {\n        return 0;\n      }\n      const { value } = promotionLots[0];\n      return value;\n    },\n  },\n  priority: {\n    body: { loan: { promotionLinks: 1 } },\n    reduce: ({ loan, _id: promotionOptionId }) => {\n      const { promotionLinks } = loan;\n      if (promotionLinks && promotionLinks.length > 0) {\n        return promotionLinks[0].priorityOrder.findIndex(id => id === promotionOptionId);\n      }\n      return null;\n    },\n  },\n  attributedToMe: {\n    body: { promotionLots: { attributedTo: { userId: 1 } } },\n    reduce: ({ promotionLots = [] }) =>\n      !!(\n        promotionLots[0]\n        && promotionLots[0].attributedTo\n        && promotionLots[0].attributedTo.userId === Meteor.userId()\n      ),\n  },\n  canton: {\n    body: { promotionLots: { promotion: { canton: 1 } } },\n    reduce: ({ promotionLots = [] }) =>\n      (promotionLots.length > 0 ? promotionLots[0].promotion.canton : undefined),\n  },\n});\n","import { Meteor } from 'meteor/meteor';\nimport SimpleSchema from 'simpl-schema';\nimport {\n  PROMOTION_TYPES,\n  PROMOTION_STATUS,\n  PROMOTION_PERMISSIONS,\n} from '../promotionConstants';\nimport {\n  address,\n  contactsSchema,\n  userLinksSchema,\n  createdAt,\n  updatedAt,\n  documentsField,\n  percentageField,\n  dateField,\n} from '../../helpers/sharedSchemas';\n\nconst SCHEMA_BOOLEAN = { type: Boolean, optional: true, defaultValue: false };\n\nexport const promotionPermissionsSchema = {\n  canAddLots: SCHEMA_BOOLEAN,\n  canModifyLots: SCHEMA_BOOLEAN,\n  canRemoveLots: SCHEMA_BOOLEAN,\n  canModifyPromotion: SCHEMA_BOOLEAN,\n  canManageDocuments: SCHEMA_BOOLEAN,\n  displayCustomerNames: {\n    type: SimpleSchema.oneOf(Boolean, Object),\n    optional: true,\n    autoValue() {\n      if (Meteor.isServer && this.isSet) {\n        if (this.value === undefined) {\n          return false;\n        }\n\n        if (this.value instanceof Object) {\n          if (!Object.keys(this.value).length) {\n            return false;\n          }\n\n          if (!this.value.invitedBy) {\n            return false;\n          }\n        }\n\n        return this.value;\n      }\n    },\n  },\n  'displayCustomerNames.forLotStatus': {\n    type: Array,\n    optional: true,\n    defaultValue: [],\n    uniforms: { displayEmpty: false, placeholder: '', checkboxes: true },\n  },\n  'displayCustomerNames.forLotStatus.$': {\n    type: String,\n    allowedValues: Object.values(PROMOTION_PERMISSIONS.DISPLAY_CUSTOMER_NAMES.FOR_LOT_STATUS),\n  },\n  'displayCustomerNames.invitedBy': {\n    type: String,\n    optional: true,\n    allowedValues: Object.values(PROMOTION_PERMISSIONS.DISPLAY_CUSTOMER_NAMES.INVITED_BY),\n    uniforms: { displayEmpty: false, placeholder: '' },\n  },\n  canInviteCustomers: SCHEMA_BOOLEAN,\n  canBookLots: SCHEMA_BOOLEAN,\n  // canPreBookLots: SCHEMA_BOOLEAN,\n  canSellLots: SCHEMA_BOOLEAN,\n};\n\nconst PromotionSchema = new SimpleSchema({\n  createdAt,\n  updatedAt,\n  name: { type: String, uniforms: { placeholder: 'Les Terrasses de Versoix' } },\n  type: {\n    type: String,\n    allowedValues: Object.values(PROMOTION_TYPES),\n    uniforms: { displayEmpty: false },\n  },\n  status: {\n    type: String,\n    allowedValues: Object.values(PROMOTION_STATUS),\n    defaultValue: PROMOTION_STATUS.PREPARATION,\n    uniforms: { displayEmpty: false },\n  },\n  ...address,\n  ...contactsSchema,\n  propertyLinks: { type: Array, defaultValue: [] },\n  'propertyLinks.$': Object,\n  'propertyLinks.$._id': { type: String, optional: true },\n  lotLinks: { type: Array, defaultValue: [] },\n  'lotLinks.$': Object,\n  'lotLinks.$._id': { type: String, optional: true },\n  promotionLotLinks: { type: Array, defaultValue: [] },\n  'promotionLotLinks.$': Object,\n  'promotionLotLinks.$._id': { type: String, optional: true },\n  assignedEmployeeId: { type: String, optional: true },\n  ...userLinksSchema(promotionPermissionsSchema),\n  documents: documentsField,\n  lenderOrganisationLink: { type: Object, optional: true },\n  'lenderOrganisationLink._id': { type: String, optional: true },\n  constructionTimeline: { type: Array, defaultValue: [] },\n  'constructionTimeline.$': Object,\n  'constructionTimeline.$.description': String,\n  'constructionTimeline.$.duration': Number,\n  'constructionTimeline.$.percent': { ...percentageField, optional: false },\n  signingDate: dateField,\n});\n\nexport const BasePromotionSchema = PromotionSchema.pick(\n  'name',\n  'type',\n  'address1',\n  'address2',\n  'zipCode',\n  'city',\n  'contacts',\n);\n\nexport default PromotionSchema;\n","import { Meteor } from 'meteor/meteor';\n\nimport { HTTP_STATUS_CODES } from '../../RESTAPI/server/restApiConstants';\nimport UserService from '../../users/server/UserService';\nimport LoanService from '../../loans/server/LoanService';\nimport FileService from '../../files/server/FileService';\nimport CollectionService from '../../helpers/CollectionService';\nimport PropertyService from '../../properties/server/PropertyService';\nimport PromotionLotService from '../../promotionLots/server/PromotionLotService';\nimport {\n  PROMOTION_STATUS,\n  PROMOTION_PERMISSIONS_FULL_ACCESS,\n} from '../../constants';\nimport { sendEmail } from '../../email/methodDefinitions';\nimport { EMAIL_IDS } from '../../email/emailConstants';\nimport { PROPERTY_CATEGORY } from '../../properties/propertyConstants';\nimport PromotionOptionService from '../../promotionOptions/server/PromotionOptionService';\nimport SecurityService from '../../security';\nimport Promotions from '../promotions';\n\nexport class PromotionService extends CollectionService {\n  constructor() {\n    super(Promotions);\n  }\n\n  insert({ promotion = {}, userId }) {\n    const isAdmin = SecurityService.isUserAdmin(userId);\n\n    return super.insert({\n      ...promotion,\n      userLinks: isAdmin\n        ? undefined\n        : [{ _id: userId, permissions: PROMOTION_PERMISSIONS_FULL_ACCESS() }],\n    });\n  }\n\n  insertPromotionProperty({ promotionId, property }) {\n    const { address1, address2, zipCode, city, canton } = this.get(promotionId);\n    const propertyId = PropertyService.insert({\n      property: {\n        ...property,\n        address1,\n        address2,\n        zipCode,\n        city,\n        canton,\n        category: PROPERTY_CATEGORY.PROMOTION,\n      },\n    });\n    const promotionLotId = PromotionLotService.insert({\n      propertyLinks: [{ _id: propertyId }],\n    });\n    this.addLink({\n      id: promotionId,\n      linkName: 'promotionLots',\n      linkId: promotionLotId,\n    });\n    this.addLink({\n      id: promotionId,\n      linkName: 'properties',\n      linkId: propertyId,\n    });\n\n    return promotionLotId;\n  }\n\n  update({ promotionId, ...rest }) {\n    const result = this._update({ id: promotionId, ...rest });\n\n    const { propertyLinks, ...address } = this.fetchOne({\n      $filters: { _id: promotionId },\n      propertyLinks: 1,\n      address1: 1,\n      address2: 1,\n      city: 1,\n      zipCode: 1,\n    });\n\n    propertyLinks.forEach(({ _id }) => {\n      PropertyService.update({ propertyId: _id, object: address });\n    });\n\n    return result;\n  }\n\n  remove({ promotionId }) {\n    return super.remove(promotionId);\n  }\n\n  inviteUser({\n    promotionId,\n    userId,\n    isNewUser,\n    pro = {},\n    sendInvitation = true,\n    promotionLotIds,\n    showAllLots,\n    shareSolvency,\n  }) {\n    const promotion = this.get(promotionId);\n    const user = UserService.get(userId);\n    const allowAddingUsers = promotion.status === PROMOTION_STATUS.OPEN;\n\n    if (!allowAddingUsers) {\n      throw new Meteor.Error(\"Vous ne pouvez pas inviter de clients lorsque la promotion n'est pas en vente, contactez-nous pour valider la promotion.\");\n    }\n\n    if (UserService.hasPromotion({ userId, promotionId })) {\n      throw new Meteor.Error(\n        HTTP_STATUS_CODES.CONFLICT,\n        'Cet utilisateur est déjà invité à cette promotion',\n      );\n    }\n\n    const loanId = LoanService.insertPromotionLoan({\n      userId,\n      promotionId,\n      invitedBy: pro._id,\n      showAllLots,\n      promotionLotIds,\n      shareSolvency,\n    });\n\n    if (isNewUser) {\n      const admin = UserService.get(promotion.assignedEmployeeId);\n      UserService.assignAdminToUser({ userId, adminId: admin && admin._id });\n    }\n\n    const { assignedEmployeeId } = UserService.fetchOne({\n      $filters: { _id: userId },\n      assignedEmployeeId: 1,\n    });\n\n    if (sendInvitation) {\n      return this.sendPromotionInvitationEmail({\n        userId,\n        isNewUser,\n        promotionId,\n        firstName: user.firstName,\n        proId: pro._id,\n        adminId: assignedEmployeeId,\n      }).then(() => loanId);\n    }\n\n    return Promise.resolve(loanId);\n  }\n\n  sendPromotionInvitationEmail({\n    userId,\n    isNewUser,\n    promotionId,\n    firstName,\n    proId,\n  }) {\n    return FileService.listFilesForDocByCategory(promotionId).then(({ promotionImage, logos }) => {\n      const coverImageUrl = promotionImage && promotionImage.length > 0 && promotionImage[0].url;\n      const logoUrls = logos && logos.map(({ url }) => url);\n\n      let ctaUrl = Meteor.settings.public.subdomains.app;\n      const promotion = this.get(promotionId);\n      const assignedEmployee = UserService.get(promotion.assignedEmployeeId);\n\n      if (isNewUser) {\n        // Envoyer invitation avec enrollment link\n        ctaUrl = UserService.getEnrollmentUrl({ userId });\n      }\n\n      let invitedBy;\n\n      if (proId) {\n        invitedBy = UserService.fetchOne({\n          $filters: { _id: proId },\n          name: 1,\n        }).name;\n      }\n\n      return sendEmail.run({\n        emailId: EMAIL_IDS.INVITE_USER_TO_PROMOTION,\n        userId,\n        params: {\n          proUserId: proId,\n          promotion: { ...promotion, assignedEmployee },\n          coverImageUrl,\n          logoUrls,\n          ctaUrl,\n          name: firstName,\n          invitedBy,\n        },\n      });\n    });\n  }\n\n  addProUser({ promotionId, userId }) {\n    return this.addLink({\n      id: promotionId,\n      linkName: 'users',\n      linkId: userId,\n      metadata: { permissions: {} },\n    });\n  }\n\n  removeProUser({ promotionId, userId }) {\n    const loans = LoanService.fetch({\n      $filters: {\n        'promotionLinks.invitedBy': userId,\n        'promotionLinks._id': promotionId,\n      },\n    });\n\n    loans.forEach(({ _id: loanId }) => {\n      this.updateLinkMetadata({\n        id: promotionId,\n        linkName: 'loans',\n        linkId: loanId,\n        metadata: { invitedBy: undefined },\n      });\n    });\n\n    return this.removeLink({\n      id: promotionId,\n      linkName: 'users',\n      linkId: userId,\n    });\n  }\n\n  setUserPermissions({ promotionId, userId, permissions }) {\n    return Promotions.update(\n      { _id: promotionId, 'userLinks._id': userId },\n      { $set: { 'userLinks.$.permissions': permissions } },\n    );\n  }\n\n  removeLoan({ promotionId, loanId }) {\n    const {\n      promotionOptionLinks = [],\n      attributedPromotionLots = [],\n    } = LoanService.fetchOne({\n      $filters: { _id: loanId },\n      promotionOptionLinks: { _id: 1 },\n      attributedPromotionLots: { _id: 1 },\n    });\n\n    this.removeLink({\n      id: promotionId,\n      linkName: 'loans',\n      linkId: loanId,\n    });\n\n    promotionOptionLinks.forEach(({ _id }) => {\n      PromotionOptionService.remove({ promotionOptionId: _id });\n    });\n\n    attributedPromotionLots.forEach(({ _id }) => {\n      PromotionLotService.cancelPromotionLotBooking({ promotionLotId: _id });\n    });\n  }\n\n  editPromotionLoan({\n    loanId,\n    promotionId,\n    promotionLotIds = [],\n    showAllLots,\n  }) {\n    if (showAllLots !== undefined) {\n      this.updateLinkMetadata({\n        id: promotionId,\n        linkName: 'loans',\n        linkId: loanId,\n        metadata: { showAllLots },\n      });\n    }\n\n    const { promotionOptions = [] } = LoanService.fetchOne({\n      $filters: { _id: loanId },\n      promotionOptions: {\n        promotionLots: { attributedTo: { _id: 1 }, name: 1 },\n      },\n    });\n\n    // Add any new promotionOptions if they don't already exist\n    promotionLotIds.forEach((promotionLotId) => {\n      const existingPromotionOption = promotionOptions.find(({ promotionLots: promotionOptionLots }) =>\n        promotionOptionLots[0]._id === promotionLotId);\n\n      if (!existingPromotionOption) {\n        PromotionOptionService.insert({ promotionLotId, loanId });\n      }\n    });\n\n    // Remove all promotionOptions that aren't in the specified array\n    const promotionOptionsToRemove = promotionOptions.filter(({ promotionLots }) => promotionLotIds.indexOf(promotionLots[0]._id) < 0);\n\n    promotionOptionsToRemove.forEach((promotionOption) => {\n      // Try to remove this promotion option\n      const { promotionLots, _id: promotionOptionId } = promotionOption;\n      const { attributedTo, name } = promotionLots[0];\n\n      if (attributedTo && attributedTo._id === loanId) {\n        throw new Meteor.Error(`Vous ne pouvez pas supprimer le lot \"${name}\" de ce client, car il lui est attribué.`);\n      }\n\n      PromotionOptionService.remove({ promotionOptionId });\n    });\n  }\n}\n\nexport default new PromotionService();\n","import { Match } from 'meteor/check';\n\nimport { exposeQuery } from '../../queries/queryHelpers';\nimport { createSearchFilters } from '../../helpers/mongoHelpers';\nimport SecurityService from '../../security';\nimport {\n  adminPromotions,\n  appPromotion,\n  promotionSearch,\n  proPromotions,\n  proPromotionUsers,\n} from '../queries';\nimport { PROMOTION_STATUS } from '../promotionConstants';\n\nimport { makePromotionLotAnonymizer } from './promotionServerHelpers';\n\nexposeQuery({ query: adminPromotions, options: { allowFilterById: true } });\n\nexposeQuery({\n  query: appPromotion,\n  overrides: {\n    firewall(userId, { promotionId }) {\n      SecurityService.promotions.hasAccessToPromotion({ promotionId, userId });\n    },\n    embody: (body) => {\n      body.$filter = ({ filters, params }) => {\n        filters._id = params.promotionId;\n        filters.status = PROMOTION_STATUS.OPEN;\n      };\n    },\n    validateParams: { promotionId: String, loanId: String },\n  },\n});\n\nexposeQuery({\n  query: promotionSearch,\n  overrides: {\n    embody: (body) => {\n      body.$filter = ({ filters, params: { searchQuery } }) => {\n        Object.assign(\n          filters,\n          createSearchFilters(['name', '_id'], searchQuery),\n        );\n      };\n    },\n    validateParams: { searchQuery: Match.Maybe(String) },\n  },\n});\n\nexposeQuery({\n  query: proPromotions,\n  overrides: {\n    firewall(userId, params) {\n      SecurityService.checkUserIsPro(userId);\n      const { _id: promotionId } = params;\n      params.userId = userId;\n\n      if (promotionId) {\n        SecurityService.promotions.isAllowedToView({\n          promotionId,\n          userId,\n        });\n      }\n\n      if (!SecurityService.isUserAdmin(userId)) {\n        params.anonymize = true;\n      }\n    },\n    embody: (body, embodyParams) => {\n      body.$filter = ({ filters, params }) => {\n        const { _id: promotionId, userId } = params;\n        if (promotionId) {\n          filters._id = promotionId;\n        } else {\n          filters['userLinks._id'] = userId;\n        }\n      };\n\n      body.$postFilter = (promotions = [], params) => {\n        const { anonymize = false, simple, userId } = params;\n\n        if (!anonymize) {\n          return promotions;\n        }\n\n        return promotions.map((promotion) => {\n          const { promotionLots = [], ...rest } = promotion;\n          return simple\n            ? { promotionLots: promotionLots.map(({ name }) => name) }\n            : {\n              promotionLots: promotionLots.map(makePromotionLotAnonymizer({ userId })),\n              ...rest,\n            };\n        });\n      };\n    },\n    validateParams: {\n      userId: String,\n      simple: Match.Maybe(Boolean),\n      anonymize: Match.Maybe(Boolean),\n      _id: Match.Maybe(String),\n    },\n  },\n});\n\nexposeQuery({\n  query: proPromotionUsers,\n  overrides: {\n    firewall(userId, { _id: promotionId }) {\n      SecurityService.promotions.hasAccessToPromotion({ promotionId, userId });\n    },\n    embody: (body) => {\n      body.$filter = ({ filters, params: { promotionId } }) => {\n        filters._id = promotionId;\n      };\n      body.$postFilter = (promotion = []) => {\n        const { users = [] } = (!!promotion.length && promotion[0]) || {};\n        return users;\n      };\n    },\n  },\n  options: { allowFilterById: true },\n});\n","import FileService from '../../files/server/FileService';\nimport Promotions from '../promotions';\nimport formatNumbersHook, {\n  formatPhoneNumber,\n} from '../../../utils/phoneFormatting';\n\nPromotions.after.remove((userId, { _id }) =>\n  FileService.deleteAllFilesForDoc(_id));\n\nformatNumbersHook(Promotions, 'contacts', oldContacts =>\n  oldContacts.map(contact => ({\n    ...contact,\n    phoneNumber: formatPhoneNumber(contact.phoneNumber),\n  })));\n","import SecurityService from '../../security';\nimport PromotionService from './PromotionService';\nimport {\n  promotionInsert,\n  promotionUpdate,\n  promotionRemove,\n  insertPromotionProperty,\n  setPromotionUserPermissions,\n  addProUserToPromotion,\n  removeProFromPromotion,\n  sendPromotionInvitationEmail,\n  removeLoanFromPromotion,\n  editPromotionLoan,\n} from '../methodDefinitions';\n\npromotionInsert.setHandler(({ userId }, { promotion }) => {\n  SecurityService.checkUserIsPro(userId);\n  return PromotionService.insert({ promotion, userId });\n});\n\npromotionUpdate.setHandler(({ userId }, { promotionId, object }) => {\n  SecurityService.promotions.isAllowedToModify({ promotionId, userId });\n  return PromotionService.update({ promotionId, object });\n});\n\npromotionRemove.setHandler(({ userId }, params) => {\n  SecurityService.checkUserIsAdmin(userId);\n  return PromotionService.remove(params);\n});\n\ninsertPromotionProperty.setHandler(({ userId }, { promotionId, property }) => {\n  SecurityService.promotions.isAllowedToAddLots({ promotionId, userId });\n  return PromotionService.insertPromotionProperty({ promotionId, property });\n});\n\nsetPromotionUserPermissions.setHandler(({ userId: currentUserId }, { promotionId, userId, permissions }) => {\n  SecurityService.checkUserIsAdmin(currentUserId);\n  return PromotionService.setUserPermissions({\n    promotionId,\n    userId,\n    permissions,\n  });\n});\n\naddProUserToPromotion.setHandler(({ userId: currentUserId }, { promotionId, userId }) => {\n  SecurityService.checkUserIsAdmin(currentUserId);\n  return PromotionService.addProUser({ promotionId, userId });\n});\n\nremoveProFromPromotion.setHandler(({ userId: currentUserId }, { promotionId, userId }) => {\n  SecurityService.checkUserIsAdmin(currentUserId);\n  return PromotionService.removeProUser({ promotionId, userId });\n});\n\nsendPromotionInvitationEmail.setHandler(({ userId }, params) => {\n  SecurityService.promotions.isAllowedToInviteCustomers({\n    promotionId: params.promotionId,\n    userId,\n  });\n  return PromotionService.sendPromotionInvitationEmail(params);\n});\n\nremoveLoanFromPromotion.setHandler(({ userId }, params) => {\n  const { promotionId, loanId } = params;\n  SecurityService.promotions.isAllowedToRemoveCustomer({\n    promotionId,\n    loanId,\n    userId,\n  });\n  return PromotionService.removeLoan(params);\n});\n\neditPromotionLoan.setHandler(({ userId }, params) => {\n  const { promotionId, loanId } = params;\n  SecurityService.promotions.isAllowedToSeePromotionCustomer({\n    promotionId,\n    loanId,\n    userId,\n  });\n  return PromotionService.editPromotionLoan(params);\n});\n","import UserService from '../../users/server/UserService';\nimport PromotionLotService from '../../promotionLots/server/PromotionLotService';\nimport {\n  shouldAnonymize as clientShouldAnonymize,\n  getPromotionCustomerOwnerType as getCustomerOwnerType,\n  clientGetBestPromotionLotStatus,\n} from '../promotionClientHelpers';\nimport LoanService from '../../loans/server/LoanService';\n\nconst ANONYMIZED_STRING = 'XXX';\nconst ANONYMIZED_USER = {\n  name: ANONYMIZED_STRING,\n  phoneNumbers: [ANONYMIZED_STRING],\n  email: ANONYMIZED_STRING,\n};\n\nconst getUserPromotionPermissions = ({ userId, promotionId }) => {\n  const { promotions = [] } = UserService.fetchOne({\n    $filters: { _id: userId },\n    promotions: { _id: 1 },\n  });\n\n  const promotion = promotions.find(({ _id }) => _id === promotionId);\n\n  if (!promotion) {\n    return {};\n  }\n\n  const {\n    $metadata: { permissions = {} },\n  } = promotion;\n\n  return permissions;\n};\n\nconst getCustomerInvitedBy = ({ customerId, promotionId }) => {\n  const { loans = [] } = UserService.fetchOne({\n    $filters: { _id: customerId },\n    loans: { promotions: { _id: 1 } },\n  }) || {};\n\n  const { $metadata } = loans\n    .reduce((promotions, loan) => {\n      const { promotions: loanPromotions = [] } = loan;\n      return [...promotions, ...loanPromotions];\n    }, [])\n    .find(({ _id }) => _id === promotionId) || {};\n\n  return $metadata && $metadata.invitedBy;\n};\n\nconst getPromotionLotStatus = ({ promotionLotId }) => {\n  if (!promotionLotId) {\n    return {};\n  }\n\n  const { status, attributedToLink = {} } = PromotionLotService.fetchOne({\n    $filters: { _id: promotionLotId },\n    status: 1,\n    attributedToLink: 1,\n  }) || {};\n\n  return { status, attributedTo: attributedToLink._id };\n};\n\n/**\n * Out of all promotionLots attributed to this user, which one has\n * the most permissive status?\n *\n * @param {String} { loanId }\n * @returns {String} PROMOTION_LOT_STATUS\n */\nexport const getBestPromotionLotStatus = ({ loanId }) => {\n  const { promotionOptions = [] } = LoanService.fetchOne({\n    $filters: { _id: loanId },\n    userId: 1,\n    promotionOptions: {\n      promotionLots: { status: 1, attributedToLink: 1 },\n    },\n  });\n\n  return clientGetBestPromotionLotStatus(promotionOptions, loanId);\n};\n\nexport const getPromotionCustomerOwnerType = ({\n  customerId,\n  promotionId,\n  userId,\n}) => {\n  const invitedBy = getCustomerInvitedBy({ customerId, promotionId });\n  const { organisations = [] } = UserService.fetchOne({\n    $filters: { _id: userId },\n    organisations: { users: { _id: 1 } },\n  });\n\n  return getCustomerOwnerType({\n    invitedBy,\n    currentUser: { _id: userId, organisations },\n  });\n};\n\nconst shouldAnonymize = ({\n  customerId,\n  userId,\n  promotionId,\n  promotionLotId,\n  loanId,\n}) => {\n  const customerOwnerType = getPromotionCustomerOwnerType({\n    customerId,\n    userId,\n    promotionId,\n  });\n  const permissions = getUserPromotionPermissions({ userId, promotionId });\n\n  const { status: promotionLotStatus, attributedTo } = getPromotionLotStatus({\n    promotionLotId,\n  });\n\n  return clientShouldAnonymize({\n    customerOwnerType,\n    permissions,\n    promotionLotStatus,\n    isAttributed: attributedTo === loanId,\n  });\n};\n\nexport const makeLoanAnonymizer = ({\n  userId,\n  promotionId,\n  promotionLotId,\n  anonymize,\n}) => {\n  let permissions;\n  let promotionLotStatus;\n  let attributedTo;\n\n  if (anonymize === undefined) {\n    permissions = getUserPromotionPermissions({ userId, promotionId });\n    const { status, attributedTo: attr } = getPromotionLotStatus({\n      promotionLotId,\n      promotionId,\n    });\n    promotionLotStatus = status;\n    attributedTo = attr;\n  }\n\n  return (loan) => {\n    const { _id: loanId, user = {}, ...rest } = loan;\n    const { _id: customerId } = user;\n\n    let isAttributed = loanId === attributedTo;\n\n    if (!promotionLotId) {\n      // If no promotionLot is passed here, we get the best one from the loan\n      // For statuses BOOKED and SOLD, we check that it is attributed to\n      // this loan\n      promotionLotStatus = getBestPromotionLotStatus({ loanId });\n      isAttributed = true;\n    }\n\n    const customerOwnerType = getPromotionCustomerOwnerType({\n      customerId,\n      promotionId,\n      userId,\n    });\n\n    const anonymizeUser = anonymize === undefined\n      ? clientShouldAnonymize({\n        customerOwnerType,\n        permissions,\n        promotionLotStatus,\n        isAttributed,\n      })\n      : anonymize;\n\n    return {\n      user: anonymizeUser ? { _id: user._id, ...ANONYMIZED_USER } : user,\n      _id: loanId,\n      isAnonymized: !!anonymizeUser,\n      ...rest,\n    };\n  };\n};\n\nexport const makePromotionLotAnonymizer = ({ userId }) => (promotionLot) => {\n  const { attributedTo, ...rest } = promotionLot;\n  const {\n    _id: promotionLotId,\n    promotion: { _id: promotionId },\n  } = promotionLot;\n\n  const [loan] = [attributedTo]\n    .filter(x => x)\n    .map(makeLoanAnonymizer({ userId, promotionId, promotionLotId }));\n\n  return { attributedTo: loan, ...rest };\n};\n\nexport const makePromotionOptionAnonymizer = ({\n  userId,\n}) => (promotionOption) => {\n  const { loan, custom, ...rest } = promotionOption;\n  const {\n    promotionLots,\n    promotion: { _id: promotionId },\n  } = promotionOption;\n  const { _id: promotionLotId } = promotionLots[0];\n\n  const anonymize = shouldAnonymize({\n    customerId: loan.user._id,\n    userId,\n    promotionId,\n    promotionLotId,\n    loanId: loan._id,\n  });\n\n  return {\n    loan: makeLoanAnonymizer({\n      userId,\n      promotionId,\n      promotionLotId,\n      anonymize,\n    })(loan),\n    custom: anonymize ? ANONYMIZED_STRING : custom,\n    isAnonymized: !!anonymize,\n    ...rest,\n  };\n};\n","import Promotions from '../promotions';\nimport assigneeReducer from '../../reducers/assigneeReducer';\n\nPromotions.addReducers({ ...assigneeReducer() });\n","export * from './methodDefinitions';\nexport { default } from './promotions';\n","import Promotions from '.';\n\nimport {\n  Properties,\n  Lots,\n  PromotionLots,\n  Users,\n  Loans,\n  Organisations,\n} from '..';\nimport Tasks from '../tasks';\n\nPromotions.addLinks({\n  properties: {\n    field: 'propertyLinks',\n    collection: Properties,\n    type: 'many',\n    metadata: true,\n    autoremove: true,\n    unique: true,\n  },\n  lots: {\n    field: 'lotLinks',\n    collection: Lots,\n    type: 'many',\n    metadata: true,\n    autoremove: true,\n    unique: true,\n  },\n  promotionLots: {\n    field: 'promotionLotLinks',\n    collection: PromotionLots,\n    type: 'many',\n    metadata: true,\n    autoremove: true,\n    unique: true,\n  },\n  users: {\n    field: 'userLinks',\n    collection: Users,\n    type: 'many',\n    metadata: true,\n  },\n  loans: {\n    collection: Loans,\n    inversedBy: 'promotions',\n  },\n  assignedEmployee: {\n    collection: Users,\n    field: 'assignedEmployeeId',\n    type: 'one',\n  },\n  lenderOrganisation: {\n    field: 'lenderOrganisationLink',\n    type: 'one',\n    metadata: true,\n    collection: Organisations,\n  },\n  tasks: {\n    inversedBy: 'promotion',\n    collection: Tasks,\n    autoremove: true,\n  },\n  promotionLoan: {\n    inversedBy: 'financedPromotion',\n    type: 'one',\n    collection: Loans,\n  },\n});\n","// @flow\nimport { Match } from 'meteor/check';\nimport { Method } from '../methods/methods';\n\nexport const promotionInsert = new Method({\n  name: 'promotionInsert',\n  params: {\n    promotion: Object,\n  },\n});\n\nexport const promotionUpdate = new Method({\n  name: 'promotionUpdate',\n  params: {\n    promotionId: String,\n    object: Object,\n  },\n});\n\nexport const promotionRemove = new Method({\n  name: 'promotionRemove',\n  params: {\n    promotionId: String,\n  },\n});\n\nexport const insertPromotionProperty = new Method({\n  name: 'insertPromotionProperty',\n  params: {\n    promotionId: String,\n    property: Object,\n  },\n});\n\nexport const setPromotionUserPermissions = new Method({\n  name: 'setPromotionUserPermissions',\n  params: {\n    promotionId: String,\n    userId: String,\n    permissions: Object,\n  },\n});\n\nexport const addProUserToPromotion = new Method({\n  name: 'addProUserToPromotion',\n  params: {\n    promotionId: String,\n    userId: String,\n  },\n});\n\nexport const removeProFromPromotion = new Method({\n  name: 'removeProFromPromotion',\n  params: {\n    promotionId: String,\n    userId: String,\n  },\n});\n\nexport const sendPromotionInvitationEmail = new Method({\n  name: 'sendPromotionInvitationEmail',\n  params: {\n    userId: String,\n    email: String,\n    isNewUser: Boolean,\n    promotionId: String,\n    firstName: String,\n  },\n});\n\nexport const removeLoanFromPromotion = new Method({\n  name: 'removeLoanFromPromotion',\n  params: {\n    promotionId: String,\n    loanId: String,\n  },\n});\n\nexport const editPromotionLoan = new Method({\n  name: 'editPromotionLoan',\n  params: {\n    promotionId: String,\n    loanId: String,\n    promotionLotIds: [String],\n    showAllLots: Match.Optional(Boolean),\n  },\n});\n","import { PROMOTION_INVITED_BY_TYPE } from './promotionConstants';\nimport { PROMOTION_LOT_STATUS } from '../promotionLots/promotionLotConstants';\n\nexport const getCurrentUserPermissionsForPromotion = ({\n  currentUser: { promotions = [] } = {},\n  promotionId,\n}) => {\n  const promotion = promotions.find(({ _id }) => _id === promotionId);\n  return promotion && promotion.$metadata.permissions;\n};\n\nexport const getPromotionCustomerOwnerType = ({ invitedBy, currentUser }) => {\n  const { _id: userId, organisations = [] } = currentUser;\n\n  // Is invited by nobody\n  if (!invitedBy) {\n    return null;\n  }\n\n  // Is invited by user\n  if (invitedBy === userId) {\n    return PROMOTION_INVITED_BY_TYPE.USER;\n  }\n\n  const organisationUserIds = organisations.reduce(\n    (userIds, { users = [] }) => [...userIds, ...users.map(({ _id }) => _id)],\n    [],\n  );\n\n  // Is invited by organisation\n  if (organisationUserIds.includes(invitedBy)) {\n    return PROMOTION_INVITED_BY_TYPE.ORGANISATION;\n  }\n\n  // Is invited by someone else\n  return PROMOTION_INVITED_BY_TYPE.ANY;\n};\n\nexport const clientGetBestPromotionLotStatus = (promotionOptions, loanId) => {\n  const myPromotionLotStatuses = promotionOptions\n    .reduce((arr, { promotionLots }) => [...arr, ...promotionLots], [])\n    .filter(({ attributedToLink = {} }) => attributedToLink._id === loanId)\n    .map(({ status }) => status);\n\n  if (myPromotionLotStatuses.indexOf(PROMOTION_LOT_STATUS.SOLD) >= 0) {\n    return PROMOTION_LOT_STATUS.SOLD;\n  }\n  if (myPromotionLotStatuses.indexOf(PROMOTION_LOT_STATUS.BOOKED) >= 0) {\n    return PROMOTION_LOT_STATUS.BOOKED;\n  }\n  if (myPromotionLotStatuses.indexOf(PROMOTION_LOT_STATUS.AVAILABLE) >= 0) {\n    return PROMOTION_LOT_STATUS.AVAILABLE;\n  }\n\n  // return undefined if no promotion lots are attributed to this user\n};\n\nconst shouldHideForLotStatus = (\n  { forLotStatus = [] },\n  promotionLotStatus,\n  isAttributed,\n) => {\n  if (\n    promotionLotStatus === PROMOTION_LOT_STATUS.AVAILABLE\n    && forLotStatus.includes(promotionLotStatus)\n  ) {\n    return false;\n  }\n\n  // For status BOOKED and SOLD, we check that it is attributed\n  if (forLotStatus.includes(promotionLotStatus) && isAttributed) {\n    return false;\n  }\n\n  return true;\n};\n\nexport const shouldAnonymize = ({\n  customerOwnerType,\n  permissions,\n  promotionLotStatus = PROMOTION_LOT_STATUS.AVAILABLE,\n  isAttributed,\n}) => {\n  const { displayCustomerNames } = permissions;\n\n  if (displayCustomerNames === false || !customerOwnerType) {\n    return true;\n  }\n\n  const shouldHide = shouldHideForLotStatus(\n    displayCustomerNames,\n    promotionLotStatus,\n    isAttributed,\n  );\n\n  if (displayCustomerNames.invitedBy === PROMOTION_INVITED_BY_TYPE.ANY) {\n    return shouldHide;\n  }\n\n  switch (customerOwnerType) {\n  case PROMOTION_INVITED_BY_TYPE.USER:\n    return (\n      shouldHide\n        || ![\n          PROMOTION_INVITED_BY_TYPE.USER,\n          PROMOTION_INVITED_BY_TYPE.ORGANISATION,\n        ].includes(displayCustomerNames.invitedBy)\n    );\n  case PROMOTION_INVITED_BY_TYPE.ORGANISATION:\n    return (\n      shouldHide\n        || displayCustomerNames.invitedBy\n          !== PROMOTION_INVITED_BY_TYPE.ORGANISATION\n    );\n  default:\n    return true;\n  }\n};\n","import merge from 'lodash/merge';\nimport { PROMOTION_LOT_STATUS } from '../promotionLots/promotionLotConstants';\n\nexport const PROMOTIONS_COLLECTION = 'promotions';\n\nexport const PROMOTION_TYPES = {\n  CREDIT: 'CREDIT',\n  SHARE: 'SHARE',\n};\n\nexport const PROMOTION_STATUS = {\n  CANCELLED: 'CANCELLED',\n  FINISHED: 'FINISHED',\n  OPEN: 'OPEN',\n  PREPARATION: 'PREPARATION',\n};\n\nexport const PROMOTION_QUERIES = {\n  ADMIN_PROMOTIONS: 'ADMIN_PROMOTIONS',\n  APP_PROMOTION: 'APP_PROMOTION',\n  PRO_PROMOTION: 'PRO_PROMOTION',\n  PRO_PROMOTIONS: 'PRO_PROMOTIONS',\n  PRO_PROMOTION_USERS: 'PRO_PROMOTION_USERS',\n  PROMOTION_FILES: 'PROMOTION_FILES',\n  PROMOTION_SEARCH: 'PROMOTION_SEARCH',\n  PRO_PROMOTION_SIMPLE: 'PRO_PROMOTION_SIMPLE',\n};\n\nexport const PROMOTION_INVITED_BY_TYPE = {\n  ANY: 'ANY',\n  USER: 'USER',\n  ORGANISATION: 'ORGANISATION',\n};\n\nexport const PROMOTION_PERMISSIONS = {\n  DISPLAY_CUSTOMER_NAMES: {\n    FOR_LOT_STATUS: { ...PROMOTION_LOT_STATUS },\n    INVITED_BY: { ...PROMOTION_INVITED_BY_TYPE },\n  },\n};\n\nexport const PROMOTION_PERMISSIONS_BUNDLES = {\n  INVITATION: settings => ({\n    canInviteCustomers: true,\n    displayCustomerNames: {\n      forLotStatus: Object.values(PROMOTION_PERMISSIONS.DISPLAY_CUSTOMER_NAMES.FOR_LOT_STATUS),\n      invitedBy:\n        PROMOTION_PERMISSIONS.DISPLAY_CUSTOMER_NAMES.INVITED_BY.ORGANISATION,\n    },\n  }),\n  CONSULTATION: ({ consultation = {} } = {}) => {\n    const {\n      forLotStatus = [],\n      invitedBy = PROMOTION_PERMISSIONS.DISPLAY_CUSTOMER_NAMES.INVITED_BY.ANY,\n    } = consultation;\n    return {\n      displayCustomerNames: { forLotStatus, invitedBy },\n    };\n  },\n  MODIFICATION: settings => ({\n    canAddLots: true,\n    canModifyLots: true,\n    canRemoveLots: true,\n    canModifyPromotion: true,\n    canManageDocuments: true,\n  }),\n  BOOKING: settings => ({ canBookLots: true }),\n  SELLING: settings => ({ canSellLots: true }),\n};\n\nexport const PROMOTION_PERMISSIONS_FULL_ACCESS = () => {\n  const settings = {\n    consultation: {\n      forLotStatus: Object.values(PROMOTION_PERMISSIONS.DISPLAY_CUSTOMER_NAMES.FOR_LOT_STATUS),\n      invitedBy: PROMOTION_PERMISSIONS.DISPLAY_CUSTOMER_NAMES.INVITED_BY.ANY,\n    },\n  };\n\n  return Object.keys(PROMOTION_PERMISSIONS_BUNDLES).reduce(\n    (bundles, bundle) =>\n      merge({}, bundles, PROMOTION_PERMISSIONS_BUNDLES[bundle](settings)),\n    {},\n  );\n};\n","import { Mongo } from 'meteor/mongo';\n\nimport PromotionSchema from './schemas/PromotionSchema';\nimport { PROMOTIONS_COLLECTION } from './promotionConstants';\n\nconst Promotions = new Mongo.Collection(PROMOTIONS_COLLECTION);\n\nPromotions.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true,\n});\n\nPromotions.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false,\n});\n\nPromotions.attachSchema(PromotionSchema);\nexport default Promotions;\n","import {\n  adminPromotions as adminPromotionsFragment,\n  proPromotion,\n  searchPromotions,\n} from '../fragments';\nimport { PROMOTION_QUERIES } from './promotionConstants';\nimport Promotions from '.';\n\nexport const adminPromotions = Promotions.createQuery(\n  PROMOTION_QUERIES.ADMIN_PROMOTIONS,\n  adminPromotionsFragment(),\n);\n\nexport const appPromotion = Promotions.createQuery(\n  PROMOTION_QUERIES.APP_PROMOTION,\n  proPromotion({ withFilteredLoan: true }),\n);\n\nexport const promotionSearch = Promotions.createQuery(\n  PROMOTION_QUERIES.PROMOTION_SEARCH,\n  {\n    ...searchPromotions(),\n    $options: { sort: { createdAt: -1 }, limit: 5 },\n  },\n);\n\nexport const proPromotions = Promotions.createQuery(\n  PROMOTION_QUERIES.PRO_PROMOTIONS,\n  proPromotion(),\n);\n\nexport const proPromotionUsers = Promotions.createQuery(\n  PROMOTION_QUERIES.PRO_PROMOTION_USERS,\n  {\n    users: {\n      name: 1,\n      organisations: { name: 1, users: { _id: 1 } },\n    },\n  },\n);\n","import { PROMOTION_LOT_STATUS } from '../constants';\nimport addressReducer from '../reducers/addressReducer';\nimport Promotions from '.';\n\nconst promotionLotStatusReducer = status => ({\n  body: {\n    promotionLots: { status: 1 },\n  },\n  reduce: ({ promotionLots = [] }) =>\n    promotionLots.filter(({ status: promotionLotStatus }) => status === promotionLotStatus),\n});\n\nPromotions.addReducers({\n  ...addressReducer,\n  soldPromotionLots: promotionLotStatusReducer(PROMOTION_LOT_STATUS.SOLD),\n  bookedPromotionLots: promotionLotStatusReducer(PROMOTION_LOT_STATUS.BOOKED),\n  availablePromotionLots: promotionLotStatusReducer(PROMOTION_LOT_STATUS.AVAILABLE),\n});\n","import { Meteor } from 'meteor/meteor';\nimport SimpleSchema from 'simpl-schema';\n\nimport {\n  createdAt,\n  updatedAt,\n  additionalDocuments,\n  address,\n  mortgageNoteLinks,\n  moneyField,\n  userLinksSchema,\n  documentsField,\n  cacheField,\n} from '../../helpers/sharedSchemas';\nimport * as propertyConstants from '../propertyConstants';\nimport { initialDocuments } from '../propertiesAdditionalDocuments';\n\nconst SCHEMA_BOOLEAN = { type: Boolean, optional: true, defaultValue: false };\n\nexport const propertyPermissionsSchema = {\n  canInviteCustomers: SCHEMA_BOOLEAN,\n  canInviteProUsers: SCHEMA_BOOLEAN,\n  canModifyProperty: SCHEMA_BOOLEAN,\n  canManagePermissions: SCHEMA_BOOLEAN,\n  canSellProperty: SCHEMA_BOOLEAN,\n  canBookProperty: SCHEMA_BOOLEAN,\n  displayCustomerNames: {\n    type: SimpleSchema.oneOf(Boolean, Object),\n    optional: true,\n    autoValue() {\n      if (Meteor.isServer && this.isSet) {\n        if (this.value === undefined) {\n          return false;\n        }\n\n        if (this.value instanceof Object) {\n          if (!Object.keys(this.value).length) {\n            return false;\n          }\n\n          if (!this.value.referredBy) {\n            return false;\n          }\n        }\n\n        return this.value;\n      }\n    },\n  },\n  'displayCustomerNames.referredBy': {\n    type: String,\n    optional: true,\n    allowedValues: Object.values(propertyConstants.PROPERTY_PERMISSIONS.DISPLAY_CUSTOMER_NAMES.REFERRED_BY),\n    uniforms: {\n      displayEmpty: true,\n      placeholder: 'Ne pas afficher le nom des clients',\n    },\n  },\n  'displayCustomerNames.forPropertyStatus': {\n    type: Array,\n    optional: true,\n    defaultValue: [],\n    uniforms: { displayEmpty: false, placeholder: '', checkboxes: true },\n    condition: ({ permissions: { displayCustomerNames = {} } }) => {\n      const { referredBy } = displayCustomerNames;\n      return !!referredBy;\n    },\n  },\n  'displayCustomerNames.forPropertyStatus.$': {\n    type: String,\n    allowedValues: Object.values(propertyConstants.PROPERTY_PERMISSIONS.DISPLAY_CUSTOMER_NAMES\n      .FOR_PROPERTY_STATUS),\n  },\n};\n\nexport const PropertySchema = new SimpleSchema({\n  userId: {\n    type: String,\n    optional: true,\n  },\n  createdAt,\n  updatedAt,\n  name: {\n    type: String,\n    optional: true,\n    uniforms: { placeholder: null },\n  },\n  description: {\n    type: String,\n    optional: true,\n    uniforms: { placeholder: null, multiline: true, rows: 5, rowsMax: 15 },\n  },\n  category: {\n    type: String,\n    optional: true,\n    defaultValue: propertyConstants.PROPERTY_CATEGORY.USER,\n    allowedValues: Object.values(propertyConstants.PROPERTY_CATEGORY),\n    uniforms: { placeholder: null },\n  },\n  value: moneyField,\n  status: {\n    type: String,\n    defaultValue: propertyConstants.PROPERTY_STATUS.FOR_SALE,\n    allowedValues: Object.values(propertyConstants.PROPERTY_STATUS),\n    uniforms: { placeholder: null },\n  },\n  propertyType: {\n    type: String,\n    optional: true,\n    defaultValue: propertyConstants.PROPERTY_TYPE.FLAT,\n    allowedValues: Object.values(propertyConstants.PROPERTY_TYPE),\n    uniforms: { placeholder: null },\n  },\n  houseType: {\n    type: String,\n    optional: true,\n    defaultValue: propertyConstants.HOUSE_TYPE.DETACHED,\n    allowedValues: Object.values(propertyConstants.HOUSE_TYPE),\n    uniforms: { placeholder: null },\n    condition: ({ propertyType }) =>\n      propertyType === propertyConstants.PROPERTY_TYPE.HOUSE,\n  },\n  flatType: {\n    type: String,\n    optional: true,\n    defaultValue: propertyConstants.FLAT_TYPE.SINGLE_FLOOR_APARTMENT,\n    allowedValues: Object.values(propertyConstants.FLAT_TYPE),\n    uniforms: { placeholder: null },\n    condition: ({ propertyType }) =>\n      propertyType === propertyConstants.PROPERTY_TYPE.FLAT,\n  },\n  investmentRent: {\n    // Rent of property if investment\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n    max: 100000000,\n  },\n  ...address,\n  constructionYear: {\n    type: SimpleSchema.Integer,\n    min: 0,\n    max: 2030,\n    optional: true,\n  },\n  renovationYear: {\n    type: SimpleSchema.Integer,\n    min: 0,\n    max: 2030,\n    optional: true,\n  },\n  insideArea: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n  },\n  areaNorm: {\n    type: String,\n    optional: true,\n    allowedValues: Object.values(propertyConstants.AREA_NORM),\n    defaultValue: propertyConstants.AREA_NORM.NIA,\n    uniforms: { placeholder: null },\n  },\n  landArea: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n  },\n  terraceArea: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n  },\n  gardenArea: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n  },\n  numberOfFloors: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n    max: 20,\n  },\n  floorNumber: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n    max: 20,\n  },\n  roomCount: {\n    type: Number,\n    optional: true,\n    min: 0,\n    max: 100,\n  },\n  bathroomCount: {\n    type: Number,\n    optional: true,\n    min: 0,\n    max: 100,\n  },\n  volume: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n    max: 100000,\n  },\n  volumeNorm: {\n    type: String,\n    defaultValue: propertyConstants.VOLUME_NORM.SIA_416,\n    allowedValues: Object.values(propertyConstants.VOLUME_NORM),\n    uniforms: { placeholder: null },\n  },\n  parkingInside: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n    max: 100,\n  },\n  parkingOutside: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n    max: 100,\n  },\n  minergie: {\n    type: String,\n    defaultValue: propertyConstants.MINERGIE_CERTIFICATE.WITHOUT_CERTIFICATE,\n    allowedValues: Object.values(propertyConstants.MINERGIE_CERTIFICATE),\n    uniforms: { placeholder: null },\n  },\n  isCoproperty: {\n    type: Boolean,\n    defaultValue: false,\n  },\n  copropertyPercentage: {\n    type: SimpleSchema.Integer,\n    min: 0,\n    max: 1000,\n    optional: true,\n  },\n  isNew: {\n    type: Boolean,\n    defaultValue: false,\n  },\n  latitude: {\n    type: Number,\n    optional: true,\n    min: -90,\n    max: 90,\n  },\n  longitude: {\n    type: Number,\n    optional: true,\n    min: -180,\n    max: 180,\n  },\n  adminValidation: { type: Object, defaultValue: {}, blackbox: true },\n  yearlyExpenses: moneyField,\n  landValue: moneyField,\n  constructionValue: moneyField,\n  additionalMargin: moneyField,\n  ...additionalDocuments(initialDocuments),\n  ...mortgageNoteLinks,\n  ...userLinksSchema(propertyPermissionsSchema),\n  externalId: {\n    type: String,\n    optional: true,\n  },\n  useOpenGraph: {\n    type: Boolean,\n    optional: true,\n    condition: ({ externalUrl }) => externalUrl,\n  },\n  externalUrl: {\n    type: String,\n    regEx: SimpleSchema.RegEx.Url,\n    optional: true,\n  },\n  imageUrls: {\n    type: Array,\n    optional: true,\n    defaultValue: [],\n  },\n  'imageUrls.$': {\n    type: String,\n    regEx: SimpleSchema.RegEx.Url,\n  },\n  documents: documentsField,\n  loanCount: { type: Number, optional: true },\n});\n\nconst protectedKeys = [\n  '_id',\n  'additionalDocuments',\n  'address',\n  'adminValidation',\n  'createdAt',\n  'latitude',\n  'longitude',\n  'mortgageNoteLinks',\n  'updatedAt',\n  'userId',\n  'documents',\n  'userLinks',\n];\n\nexport const userAllowedKeys = [\n  'externalId',\n  'address1',\n  'address2',\n  'zipCode',\n  'city',\n  'value',\n  'description',\n  'propertyType',\n  'flatType',\n  'houseType',\n  'roomCount',\n  'insideArea',\n  'landArea',\n  'terraceArea',\n  'gardenArea',\n  'constructionYear',\n  'externalUrl',\n  'useOpenGraph',\n  'imageUrls',\n];\n\nexport const PropertySchemaAdmin = PropertySchema.omit(...protectedKeys);\nexport default PropertySchema;\n","import { Meteor } from 'meteor/meteor';\n\nimport { EMAIL_IDS } from 'core/api/email/emailConstants';\nimport { sendEmail } from 'core/api/methods/index';\nimport LoanService from '../../loans/server/LoanService';\nimport CollectionService from '../../helpers/CollectionService';\nimport {\n  PROPERTY_PERMISSIONS_FULL_ACCESS,\n  PROPERTY_CATEGORY,\n} from '../propertyConstants';\nimport Properties from '../properties';\nimport UserService from '../../users/server/UserService';\nimport { removePropertyFromLoan } from './propertyServerHelpers';\nimport { getUserNameAndOrganisation } from '../../helpers';\nimport { HTTP_STATUS_CODES } from '../../RESTAPI/server/restApiConstants';\n\nexport class PropertyService extends CollectionService {\n  constructor() {\n    super(Properties);\n  }\n\n  insert = ({ property, userId, loanId }) => {\n    const propertyId = super.insert({ ...property, userId });\n    if (loanId) {\n      LoanService.addPropertyToLoan({ loanId, propertyId });\n    }\n\n    return propertyId;\n  };\n\n  update = ({ propertyId, object }) =>\n    Properties.update(propertyId, { $set: object });\n\n  remove = ({ propertyId, loanId }) => {\n    const property = this.fetchOne({\n      $filters: { _id: propertyId },\n      loans: { _id: 1 },\n      category: 1,\n    });\n\n    if (property && property.loans && property.loans.length > 1) {\n      if (loanId) {\n        const loansLink = this.getLink(propertyId, 'loans');\n        loansLink.remove(loanId);\n        return removePropertyFromLoan({\n          loan: LoanService.get(loanId),\n          propertyId,\n        });\n      }\n      // Can't delete a property that has multiple loans without specifying\n      // from where you want to remove it\n      return false;\n    }\n\n    return Properties.remove(propertyId);\n  };\n\n  pushValue = ({ propertyId, object }) =>\n    Properties.update(propertyId, { $push: object });\n\n  popValue = ({ propertyId, object }) =>\n    Properties.update(propertyId, { $pop: object });\n\n  pullValue = ({ propertyId, object }) =>\n    Properties.update(propertyId, { $pull: object });\n\n  hasOneOfProperties = ({ userId, propertyIds }) =>\n    propertyIds.some(propertyId =>\n      UserService.hasProperty({ userId, propertyId }));\n\n  inviteUser = ({\n    propertyIds,\n    admin,\n    pro,\n    userId,\n    isNewUser,\n    shareSolvency,\n  }) => {\n    const properties = propertyIds.map(propertyId => this.get(propertyId));\n\n    if (this.hasOneOfProperties({ userId, propertyIds })) {\n      throw new Meteor.Error(\n        HTTP_STATUS_CODES.CONFLICT,\n        'Cet utilisateur est déjà invité à ce bien immobilier',\n      );\n    }\n\n    LoanService.insertPropertyLoan({ userId, propertyIds, shareSolvency });\n\n    const addresses = properties.map(({ address1 }) => `\"${address1}\"`);\n\n    return this.sendPropertyInvitationEmail({\n      userId,\n      isNewUser,\n      addresses,\n      proName: pro ? getUserNameAndOrganisation({ user: pro }) : admin.name,\n      proUserId: pro && pro._id,\n    });\n  };\n\n  sendPropertyInvitationEmail({\n    userId,\n    isNewUser,\n    proName,\n    addresses,\n    proUserId,\n  }) {\n    let ctaUrl = Meteor.settings.public.subdomains.app;\n\n    const formattedAddresses = [\n      addresses.slice(0, -1).join(', '),\n      addresses.slice(-1)[0],\n    ].join(addresses.length < 2 ? '' : ' et ');\n\n    if (isNewUser) {\n      // Envoyer invitation avec enrollment link\n      ctaUrl = UserService.getEnrollmentUrl({ userId });\n    }\n\n    return sendEmail.run({\n      emailId: EMAIL_IDS.INVITE_USER_TO_PROPERTY,\n      userId,\n      params: {\n        proUserId,\n        proName,\n        address: formattedAddresses,\n        ctaUrl,\n        multiple: addresses.length > 1,\n      },\n    });\n  }\n\n  addProUser({ propertyId, userId }) {\n    this.addLink({\n      id: propertyId,\n      linkName: 'users',\n      linkId: userId,\n      metadata: { permissions: {} },\n    });\n  }\n\n  proPropertyInsert({ property, userId }) {\n    const propertyId = this.insert({\n      property: { ...property, category: PROPERTY_CATEGORY.PRO },\n    });\n    this.addLink({\n      id: propertyId,\n      linkName: 'users',\n      linkId: userId,\n      metadata: { permissions: PROPERTY_PERMISSIONS_FULL_ACCESS },\n    });\n\n    return propertyId;\n  }\n\n  setProUserPermissions({ propertyId, userId, permissions }) {\n    this.updateLinkMetadata({\n      id: propertyId,\n      linkName: 'users',\n      linkId: userId,\n      metadata: { permissions },\n    });\n  }\n\n  removeProFromProperty({ propertyId, proUserId }) {\n    this.removeLink({ id: propertyId, linkName: 'users', linkId: proUserId });\n  }\n\n  removeCustomerFromProperty({ propertyId, loanId }) {\n    const loan = LoanService.findOne({ _id: loanId });\n    const { structures = [] } = loan;\n\n    if (structures.length) {\n      removePropertyFromLoan({ loan, propertyId });\n    }\n\n    this.removeLink({ id: propertyId, linkName: 'loans', linkId: loanId });\n  }\n\n  insertExternalProperty({ userId, property: { externalId, ...property } }) {\n    const existingProperty = this.fetchOne({ $filters: { externalId } });\n\n    if (existingProperty) {\n      throw new Meteor.Error(`Property with externalId \"${externalId}\" exists already`);\n    }\n\n    return this.proPropertyInsert({\n      userId,\n      property: { externalId, ...property },\n    });\n  }\n}\n\nexport default new PropertyService();\n","import { Match } from 'meteor/check';\n\nimport UserService from '../../users/server/UserService';\nimport { exposeQuery } from '../../queries/queryHelpers';\nimport { createSearchFilters } from '../../helpers/mongoHelpers';\nimport Security from '../../security';\nimport {\n  adminProperties,\n  anonymousProperty,\n  proProperties,\n  userProperty,\n  proPropertyUsers,\n  propertySearch,\n} from '../queries';\n\nexposeQuery({ query: adminProperties, options: { allowFilterById: true } });\nexposeQuery({\n  query: anonymousProperty,\n  overrides: {\n    firewall(userId, { _id }) {\n      Security.properties.checkPropertyIsPublic({ propertyId: _id });\n    },\n  },\n  options: { allowFilterById: true },\n});\n\nexposeQuery({\n  query: proProperties,\n  overrides: {\n    firewall(userId, params) {\n      if (params.userId) {\n        // When visiting a pro user's page from admin\n        Security.checkUserIsAdmin(userId);\n      } else {\n        Security.checkUserIsPro(userId);\n        params.userId = userId;\n      }\n\n      if (params._id) {\n        Security.properties.hasAccessToProperty({\n          propertyId: params._id,\n          userId,\n        });\n      }\n    },\n    embody: (body, embodyParams) => {\n      body.$filter = ({ filters, params }) => {\n        const { _id: propertyId, userId, fetchOrganisationProperties } = params;\n        if (propertyId) {\n          filters._id = propertyId;\n        }\n\n        if (userId) {\n          filters['userLinks._id'] = userId;\n        }\n\n        if (fetchOrganisationProperties) {\n          const { organisations = [] } = UserService.fetchOne({\n            $filters: { _id: userId },\n            organisations: { users: { _id: 1 } },\n          });\n\n          const otherOrganisationUsers = organisations.length\n            ? organisations[0].users\n              .map(({ _id: orgUserId }) => orgUserId)\n              .filter(id => id !== userId)\n            : [];\n\n          filters['userLinks._id'] = { $in: otherOrganisationUsers };\n        }\n      };\n\n      body.$postFilter = (properties, params) => {\n        const { fetchOrganisationProperties, userId } = params;\n\n        if (fetchOrganisationProperties) {\n          return properties.filter(({ userLinks }) =>\n            !userLinks.some(({ _id: userLinkId }) => userLinkId === userId));\n        }\n\n        return properties;\n      };\n    },\n    validateParams: {\n      userId: Match.Maybe(String),\n      fetchOrganisationProperties: Match.Maybe(Boolean),\n    },\n  },\n  options: { allowFilterById: true },\n});\n\nexposeQuery({\n  query: userProperty,\n  overrides: {\n    firewall(userId, { _id: propertyId }) {\n      Security.properties.hasAccessToProperty({ propertyId, userId });\n    },\n  },\n  options: { allowFilterById: true },\n});\n\nexposeQuery({\n  query: proPropertyUsers,\n  overrides: {\n    firewall(userId, params) {\n      const { propertyId } = params;\n      params.userId = userId;\n\n      Security.properties.isAllowedToView({ propertyId, userId });\n    },\n    embody: (body, embodyParams) => {\n      body.$filter = ({ filters, params: { propertyId } }) => {\n        filters._id = propertyId;\n      };\n\n      body.$postFilter = (properties = [], params) => {\n        const property = !!properties.length && properties[0];\n\n        if (!property) {\n          return [];\n        }\n\n        const { users = [] } = property;\n        return users;\n      };\n    },\n    validateParams: {\n      propertyId: String,\n      userId: String,\n    },\n  },\n});\n\nexposeQuery({\n  query: propertySearch,\n  overrides: {\n    validateParams: { searchQuery: Match.Maybe(String) },\n    embody: (body) => {\n      body.$filter = ({ filters, params: { searchQuery } }) => {\n        Object.assign(\n          filters,\n          createSearchFilters(['address1', 'city', '_id'], searchQuery),\n        );\n      };\n    },\n  },\n});\n","import LoanService from '../../loans/server/LoanService';\nimport Properties from '..';\nimport SecurityService from '../../security';\nimport { additionalDocumentsHook } from '../../helpers/sharedHooks';\nimport { PROPERTIES_COLLECTION } from '../propertyConstants';\nimport {\n  initialDocuments,\n  conditionalDocuments,\n} from '../propertiesAdditionalDocuments';\nimport UpdateWatcherService from '../../updateWatchers/server/UpdateWatcherService';\nimport { ROLES } from '../../constants';\nimport FileService from '../../files/server/FileService';\nimport { PropertySchemaAdmin } from '../schemas/PropertySchema';\nimport { removePropertyFromLoan } from './propertyServerHelpers';\n\nProperties.before.remove((userId, { _id: propertyId }) => {\n  // Remove all references to this property on the loan\n  const loans = LoanService.find({ propertyIds: propertyId }).fetch();\n\n  loans.forEach((loan) => {\n    removePropertyFromLoan({ loan, propertyId });\n  });\n});\n\nProperties.after.insert(additionalDocumentsHook({\n  collection: PROPERTIES_COLLECTION,\n  initialDocuments,\n  conditionalDocuments,\n}));\n\nProperties.after.update(additionalDocumentsHook({\n  collection: PROPERTIES_COLLECTION,\n  initialDocuments,\n  conditionalDocuments,\n}));\n\nUpdateWatcherService.addUpdateWatching({\n  collection: Properties,\n  fields: PropertySchemaAdmin._schemaKeys,\n  shouldWatch: ({ userId }) =>\n    SecurityService.hasRole(userId, ROLES.USER)\n    || SecurityService.hasRole(userId, ROLES.PRO),\n});\n\nProperties.after.remove((userId, { _id }) =>\n  FileService.deleteAllFilesForDoc(_id));\n","import SecurityService from '../../security';\nimport { checkInsertUserId } from '../../helpers/server/methodServerHelpers';\nimport {\n  propertyInsert,\n  propertyUpdate,\n  propertyDelete,\n  pushPropertyValue,\n  popPropertyValue,\n  pullPropertyValue,\n  evaluateProperty,\n  propertyDataIsInvalid,\n  addProUserToProperty,\n  proPropertyInsert,\n  setProPropertyPermissions,\n  removeProFromProperty,\n  removeCustomerFromProperty,\n  insertExternalProperty,\n} from '../methodDefinitions';\nimport PropertyService from './PropertyService';\n\npropertyInsert.setHandler((context, params) => {\n  const userId = checkInsertUserId(params.userId);\n  return PropertyService.insert({ ...params, userId });\n});\n\npropertyUpdate.setHandler(({ userId }, params) => {\n  SecurityService.properties.isAllowedToUpdate(params.propertyId, userId);\n  return PropertyService.update(params);\n});\n\npropertyDelete.setHandler((context, params) => {\n  SecurityService.properties.isAllowedToDelete(\n    params.propertyId,\n    context.userId,\n  );\n  return PropertyService.remove(params);\n});\n\npushPropertyValue.setHandler(({ userId }, params) => {\n  SecurityService.properties.isAllowedToUpdate(params.propertyId, userId);\n  return PropertyService.pushValue(params);\n});\n\npopPropertyValue.setHandler(({ userId }, params) => {\n  SecurityService.properties.isAllowedToUpdate(params.propertyId, userId);\n  return PropertyService.popValue(params);\n});\n\npullPropertyValue.setHandler(({ userId }, params) => {\n  SecurityService.properties.isAllowedToUpdate(params.propertyId, userId);\n  return PropertyService.pullValue(params);\n});\n\nevaluateProperty.setHandler(({ userId }, params) => {\n  context.unblock();\n  SecurityService.properties.isAllowedToUpdate(params.propertyId, userId);\n  return PropertyService.evaluateProperty(params);\n});\n\npropertyDataIsInvalid.setHandler(({ userId }, params) => {\n  context.unblock();\n  SecurityService.properties.isAllowedToUpdate(params.propertyId, userId);\n  return PropertyService.propertyDataIsInvalid(params);\n});\n\naddProUserToProperty.setHandler(({ userId }, params) => {\n  SecurityService.checkUserIsPro(userId);\n  SecurityService.properties.isAllowedToInviteProUsers({\n    userId,\n    propertyId: params.propertyId,\n  });\n  return PropertyService.addProUser(params);\n});\n\nproPropertyInsert.setHandler(({ userId }, params) => {\n  SecurityService.checkUserIsPro(userId);\n  return PropertyService.proPropertyInsert(params);\n});\n\nsetProPropertyPermissions.setHandler(({ userId }, params) => {\n  SecurityService.checkUserIsPro(userId);\n  SecurityService.properties.isAllowedToManagePermissions({\n    userId,\n    propertyId: params.propertyId,\n  });\n  PropertyService.setProUserPermissions(params);\n});\n\nremoveProFromProperty.setHandler(({ userId }, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  PropertyService.removeProFromProperty(params);\n});\n\nremoveCustomerFromProperty.setHandler(({ userId }, params) => {\n  const { loanId, propertyId } = params;\n  SecurityService.checkUserIsPro(userId);\n  SecurityService.properties.isAllowedToRemoveCustomer({\n    userId,\n    propertyId,\n    loanId,\n  });\n  PropertyService.removeCustomerFromProperty(params);\n});\n\ninsertExternalProperty.setHandler(({ userId }, params) => {\n  SecurityService.checkUserIsPro(userId);\n  PropertyService.insertExternalProperty({ userId, ...params });\n});\n","import UserService from '../../users/server/UserService';\nimport {\n  shouldAnonymize as clientShouldAnonymize,\n  getProPropertyCustomerOwnerType as getCustomerOwnerType,\n} from '../propertyClientHelper';\nimport PropertyService from './PropertyService';\nimport LoanService from '../../loans/server/LoanService';\n\nconst ANONYMIZED_STRING = 'XXX';\nconst ANONYMIZED_USER = {\n  name: ANONYMIZED_STRING,\n  phoneNumbers: [ANONYMIZED_STRING],\n  email: ANONYMIZED_STRING,\n};\nconst anonymizeUser = ({ user }) => ({ ...user, ...ANONYMIZED_USER });\n\nconst getUserProPropertyPermissions = ({ userId, propertyId }) => {\n  const user = UserService.fetchOne({\n    $filters: { _id: userId },\n    proProperties: { _id: 1 },\n  });\n\n  if (!user) {\n    return {};\n  }\n\n  const { proProperties: properties = [] } = user;\n\n  const { $metadata: { permissions = {} } = {} } = properties.find(({ _id }) => _id === propertyId) || {};\n\n  return permissions;\n};\n\nconst getCustomerReferredBy = ({ customerId }) => {\n  const { referredByUser, referredByOrganisation } = UserService.fetchOne({\n    $filters: { _id: customerId },\n    referredByUser: { _id: 1 },\n    referredByOrganisation: { _id: 1 },\n  }) || {};\n\n  return { referredByUser, referredByOrganisation };\n};\n\nconst getProPropertyStatus = ({ propertyId }) => {\n  const { status } = PropertyService.fetchOne({\n    $filters: { _id: propertyId },\n    status: 1,\n  }) || {};\n\n  return status;\n};\n\nexport const getProPropertyCustomerOwnerType = ({ customerId, userId }) => {\n  const { referredByUser, referredByOrganisation } = getCustomerReferredBy({\n    customerId,\n  });\n  const user = UserService.fetchOne({\n    $filters: { _id: userId },\n    organisations: { users: { _id: 1 } },\n  });\n\n  if (!user) {\n    return null;\n  }\n\n  const { organisations = [] } = user;\n\n  return getCustomerOwnerType({\n    referredByUser,\n    referredByOrganisation,\n    currentUser: { _id: userId, organisations },\n  });\n};\n\nconst shouldAnonymize = ({ customerId, userId, propertyId }) => {\n  const customerOwnerType = getProPropertyCustomerOwnerType({\n    customerId,\n    userId,\n  });\n  const permissions = getUserProPropertyPermissions({ userId, propertyId });\n\n  const propertyStatus = getProPropertyStatus({ propertyId });\n\n  return clientShouldAnonymize({\n    customerOwnerType,\n    permissions,\n    propertyStatus,\n  });\n};\n\nexport const makeProPropertyLoanAnonymizer = ({\n  userId,\n  propertyIds = [],\n  anonymize,\n}) => {\n  let propertiesPermissionsAndStatus;\n\n  if (anonymize === undefined) {\n    propertiesPermissionsAndStatus = propertyIds.map(propertyId => ({\n      propertyId,\n      permissions: getUserProPropertyPermissions({ userId, propertyId }),\n      status: getProPropertyStatus({ propertyId }),\n    }));\n  }\n\n  return (loan) => {\n    const { user = {}, properties = [], ...rest } = loan;\n    const { _id: customerId } = user;\n\n    const shouldAnonymizeUser = anonymize === undefined\n      ? propertiesPermissionsAndStatus\n        .map(({ propertyId, permissions, status: propertyStatus }) => {\n          const customerOwnerType = getProPropertyCustomerOwnerType({\n            customerId,\n            propertyId,\n            userId,\n          });\n          return clientShouldAnonymize({\n            customerOwnerType,\n            permissions,\n            propertyStatus,\n          });\n        })\n        .every(anonymizeForProperty => anonymizeForProperty)\n      : anonymize;\n\n    return {\n      user: shouldAnonymizeUser ? anonymizeUser({ user }) : user,\n      properties: shouldAnonymizeUser\n        ? properties.map(({ solvent, ...property }) => property)\n        : properties,\n      isAnonymized: !!shouldAnonymizeUser,\n      ...rest,\n    };\n  };\n};\n\nexport const removePropertyFromLoan = ({ loan, propertyId }) =>\n  LoanService.update({\n    loanId: loan._id,\n    object: {\n      structures: loan.structures.map(structure => ({\n        ...structure,\n        propertyId:\n          structure.propertyId === propertyId ? null : structure.propertyId,\n      })),\n    },\n  });\n","import Properties from '../properties';\nimport assigneeReducer from '../../reducers/assigneeReducer';\nimport { createMeteorAsyncFunction } from '../../helpers';\nimport { getOpenGraphMeta } from '../../../utils/openGraph';\n\nProperties.addReducers({\n  ...assigneeReducer(),\n  openGraphData: {\n    body: { externalUrl: 1 },\n    reduce: ({ externalUrl }) => {\n      const asyncFunc = createMeteorAsyncFunction(getOpenGraphMeta);\n\n      if (externalUrl) {\n        return asyncFunc(externalUrl);\n      }\n\n      return undefined;\n    },\n  },\n});\n","import {\n  RESIDENCE_TYPE,\n  PROPERTY_TYPE,\n  MINERGIE_CERTIFICATE,\n  VOLUME_NORM,\n} from './propertyConstants';\n\nexport const emptyProperty = {};\n\nexport const fakeProperty = {\n  value: 1000000,\n  address1: 'Rue du Succès 18',\n  zipCode: 1000,\n  city: 'Lausanne',\n  residenceType: RESIDENCE_TYPE.MAIN_RESIDENCE,\n  type: PROPERTY_TYPE.FLAT,\n  futureOwner: 0,\n  constructionYear: 2010,\n  landArea: 300,\n  insideArea: 140,\n  volume: 1500,\n  volumeNorm: VOLUME_NORM.SIA_416,\n  roomCount: 5,\n  numberOfFloors: 5,\n  floorNumber: 3,\n  parkingInside: 1,\n  parkingOutside: 2,\n  minergie: MINERGIE_CERTIFICATE.MINERGIE_ECO,\n  isCoproperty: true,\n  copropertyPercentage: 400,\n  terraceArea: 20,\n};\n","import * as methodDefinitions from './methodDefinitions';\n\nexport * from './methodDefinitions';\nexport { default } from './properties';\nexport const propertyMethods = methodDefinitions;\n","import Properties from './properties';\nimport { Users, Loans, Promotions, PromotionLots, MortgageNotes } from '..';\n\nProperties.addLinks({\n  user: {\n    field: 'userId',\n    collection: Users,\n    type: 'one',\n  },\n  loans: {\n    collection: Loans,\n    inversedBy: 'properties',\n  },\n  promotion: {\n    collection: Promotions,\n    inversedBy: 'properties',\n    unique: true,\n  },\n  promotionLots: {\n    collection: PromotionLots,\n    inversedBy: 'properties',\n  },\n  mortgageNotes: {\n    field: 'mortgageNoteLinks',\n    collection: MortgageNotes,\n    type: 'many',\n    metadata: true,\n    autoremove: true,\n    unique: true,\n  },\n  users: {\n    field: 'userLinks',\n    collection: Users,\n    type: 'many',\n    metadata: true,\n  },\n});\n","import { Match } from 'meteor/check';\nimport { Method } from '../methods/methods';\n\nexport const propertyInsert = new Method({\n  name: 'propertyInsert',\n  params: {\n    property: Object,\n    userId: Match.Optional(String),\n    loanId: Match.Optional(String),\n  },\n});\n\nexport const propertyUpdate = new Method({\n  name: 'propertyUpdate',\n  params: {\n    propertyId: String,\n    object: Object,\n  },\n});\n\nexport const propertyDelete = new Method({\n  name: 'propertyDelete',\n  params: {\n    propertyId: String,\n    loanId: Match.Maybe(String),\n  },\n});\n\nexport const pushPropertyValue = new Method({\n  name: 'pushPropertyValue',\n  params: {\n    propertyId: String,\n    object: Object,\n  },\n});\n\nexport const popPropertyValue = new Method({\n  name: 'popPropertyValue',\n  params: {\n    propertyId: String,\n    object: Object,\n  },\n});\n\nexport const pullPropertyValue = new Method({\n  name: 'pullPropertyValue',\n  params: {\n    propertyId: String,\n    object: Object,\n  },\n});\n\nexport const evaluateProperty = new Method({\n  name: 'evaluateProperty',\n  params: {\n    propertyId: String,\n    loanResidenceType: String,\n  },\n});\n\nexport const propertyDataIsInvalid = new Method({\n  name: 'propertyDataIsInvalid',\n  params: {\n    propertyId: String,\n    loanResidenceType: Match.Optional(String),\n  },\n});\n\nexport const addProUserToProperty = new Method({\n  name: 'addProUserToProperty',\n  params: { propertyId: String, userId: String },\n});\n\nexport const proPropertyInsert = new Method({\n  name: 'proPropertyInsert',\n  params: { userId: String, property: Object },\n});\n\nexport const setProPropertyPermissions = new Method({\n  name: 'setProPropertyPermissions',\n  params: { propertyId: String, userId: String, permissions: Object },\n});\n\nexport const removeProFromProperty = new Method({\n  name: 'removeProFromProperty',\n  params: { propertyId: String, proUserId: String },\n});\n\nexport const removeCustomerFromProperty = new Method({\n  name: 'removeCustomerFromProperty',\n  params: { propertyId: String, loanId: String },\n});\n\nexport const insertExternalProperty = new Method({\n  name: 'insertExternalProperty',\n  params: { property: Object },\n});\n","import { Mongo } from 'meteor/mongo';\nimport * as propertyConstants from './propertyConstants';\nimport PropertySchema from './schemas/PropertySchema';\n\nconst Properties = new Mongo.Collection(propertyConstants.PROPERTIES_COLLECTION);\n\n// Prevent all client side modifications of mongoDB\nProperties.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true,\n});\nProperties.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false,\n});\n\n// Attach schema\nProperties.attachSchema(PropertySchema);\nexport default Properties;\n","import { DOCUMENTS } from '../files/fileConstants';\nimport * as propertyConstants from './propertyConstants';\nimport { RESIDENCE_TYPE } from '../constants';\nimport Loans from '../loans';\n\nexport const initialDocuments = [\n  { id: DOCUMENTS.PURCHASE_CONTRACT },\n  { id: DOCUMENTS.LAND_REGISTER_EXTRACT },\n  { id: DOCUMENTS.PROPERTY_MARKETING_BROCHURE },\n  { id: DOCUMENTS.PROPERTY_PICTURES },\n  { id: DOCUMENTS.PROPERTY_PLANS },\n  { id: DOCUMENTS.FIRE_AND_WATER_INSURANCE },\n];\n\nconst getLoanResidenceType = (propertyId) => {\n  // If a property is shared among multiple loans, this may work in unexpected ways,\n  // since each of those properties could have a different residenceType\n  const loan = Loans.findOne(\n    { propertyIds: propertyId },\n    { fields: { residenceType: 1 }, sort: { createdAt: 1 } },\n  );\n  return loan && loan.residenceType;\n};\n\nexport const conditionalDocuments = [\n  {\n    id: DOCUMENTS.PROPERTY_VOLUME,\n    condition: ({ doc: { propertyType } }) =>\n      propertyType === propertyConstants.PROPERTY_TYPE.HOUSE,\n  },\n  {\n    id: DOCUMENTS.PROPERTY_MINERGIE_CERTIFICATE,\n    condition: ({ doc: { minergie } }) =>\n      minergie !== propertyConstants.MINERGIE_CERTIFICATE.WITHOUT_CERTIFICATE,\n  },\n  {\n    id: DOCUMENTS.COOWNERSHIP_AGREEMENT,\n    condition: ({ doc: { isCoproperty } }) => isCoproperty === true,\n  },\n  {\n    id: DOCUMENTS.COOWNERSHIP_ALLOCATION_AGREEMENT,\n    condition: ({ doc: { isCoproperty } }) => isCoproperty === true,\n  },\n  {\n    id: DOCUMENTS.INVESTEMENT_PROPERTY_RENTAL_STATEMENT,\n    condition: ({ doc: { _id: propertyId } }) =>\n      getLoanResidenceType(propertyId) === RESIDENCE_TYPE.INVESTMENT,\n  },\n  {\n    id: DOCUMENTS.INVESTEMENT_PROPERTY_SERVICE_CHARGE_SETTLEMENT,\n    condition: ({ doc: { _id: propertyId } }) =>\n      getLoanResidenceType(propertyId) === RESIDENCE_TYPE.INVESTMENT,\n  },\n];\n","import { PROPERTY_REFERRED_BY_TYPE } from './propertyConstants';\n\nexport const getCurrentUserPermissionsForProProperty = ({\n  currentUser: { properties = [] } = {},\n  propertyId,\n}) => {\n  const property = properties.find(({ _id }) => _id === propertyId);\n  return property && property.$metadata.permissions;\n};\n\nexport const getProPropertyCustomerOwnerType = ({\n  referredByUser = {},\n  referredByOrganisation = {},\n  currentUser = {},\n}) => {\n  const { _id: userId, organisations = [] } = currentUser;\n\n  // Is referred by nobody\n  if (!referredByUser) {\n    return null;\n  }\n\n  // Is referred by user\n  if (referredByUser._id === userId) {\n    return PROPERTY_REFERRED_BY_TYPE.USER;\n  }\n\n  const organisationIds = organisations.map(({ _id }) => _id);\n  const organisationUserIds = organisations.reduce(\n    (userIds, { users = [] }) => [...userIds, ...users.map(({ _id }) => _id)],\n    [],\n  );\n\n  // Is referred by organisation\n  if (\n    organisationIds.includes(referredByOrganisation._id)\n    // User is not referred by organisation, but by a user in current user's organisations\n    || organisationUserIds.includes(referredByUser._id)\n  ) {\n    return PROPERTY_REFERRED_BY_TYPE.ORGANISATION;\n  }\n\n  // Is referred by someone else\n  return PROPERTY_REFERRED_BY_TYPE.ANY;\n};\n\nconst hasNoPermissions = ({ permissions }) => !Object.keys(permissions).length;\n\nconst shouldAnonymizeWhenReferredByTypeUser = ({\n  shouldHideForPropertyStatus,\n  referredBy,\n}) =>\n  shouldHideForPropertyStatus\n  || ![\n    PROPERTY_REFERRED_BY_TYPE.USER,\n    PROPERTY_REFERRED_BY_TYPE.ORGANISATION,\n  ].includes(referredBy);\n\nconst shouldAnonymizeWhenReferredByTypeOrganisation = ({\n  shouldHideForPropertyStatus,\n  referredBy,\n}) =>\n  shouldHideForPropertyStatus\n  || referredBy !== PROPERTY_REFERRED_BY_TYPE.ORGANISATION;\n\nexport const shouldAnonymize = ({\n  customerOwnerType,\n  permissions = {},\n  propertyStatus,\n}) => {\n  // Never anonymize if referred by user\n  if (customerOwnerType === PROPERTY_REFERRED_BY_TYPE.USER) {\n    return false;\n  }\n\n  if (hasNoPermissions({ permissions })) {\n    return true;\n  }\n\n  const { displayCustomerNames } = permissions;\n\n  if (displayCustomerNames === false || !customerOwnerType) {\n    return true;\n  }\n\n  const shouldHideForPropertyStatus = !!propertyStatus\n    && !displayCustomerNames.forPropertyStatus.includes(propertyStatus);\n\n  if (displayCustomerNames.referredBy === PROPERTY_REFERRED_BY_TYPE.ANY) {\n    return shouldHideForPropertyStatus;\n  }\n\n  switch (customerOwnerType) {\n  case PROPERTY_REFERRED_BY_TYPE.ORGANISATION:\n    return shouldAnonymizeWhenReferredByTypeOrganisation({\n      shouldHideForPropertyStatus,\n      referredBy: displayCustomerNames.referredBy,\n    });\n  default:\n    return true;\n  }\n};\n","// @flow\nexport const PROPERTIES_COLLECTION = 'properties';\n\nexport const PROPERTY_STATUS = {\n  FOR_SALE: 'FOR_SALE',\n  BOOKED: 'BOOKED',\n  SOLD: 'SOLD',\n};\n\nexport const RESIDENCE_TYPE = {\n  MAIN_RESIDENCE: 'MAIN_RESIDENCE',\n  SECOND_RESIDENCE: 'SECOND_RESIDENCE',\n  INVESTMENT: 'INVESTMENT',\n  COMMERCE: 'COMMERCE',\n};\n\nexport const PROPERTY_TYPE = {\n  FLAT: 'FLAT',\n  HOUSE: 'HOUSE',\n};\n\nexport const VOLUME_NORM = {\n  SIA_416: 'SIA_416',\n  SIA_116: 'SIA_116',\n  BIC: 'BIC',\n};\n\nexport const AREA_NORM = {\n  NIA: 'NIA',\n  NLS: 'NLS',\n};\n\nexport const PROPERTY_QUERIES = {\n  ADMIN_PROPERTIES: 'ADMIN_PROPERTIES',\n  ANONYMOUS_PROPERTY: 'ANONYMOUS_PROPERTY',\n  PRO_PROPERTIES: 'PRO_PROPERTIES',\n  PRO_PROPERTY_USERS: 'PRO_PROPERTY_USERS',\n  PROPERTY_FILES: 'PROPERTY_FILES',\n  PROPERTY_SEARCH: 'PROPERTY_SEARCH',\n  USER_PROPERTY: 'USER_PROPERTY',\n};\n\nexport const HOUSE_TYPE = {\n  DETACHED: 'DETACHED',\n  ATTACHED_END_BUILDING: 'ATTACHED_END_BUILDING',\n  ATTACHED_MID_TERRACE_BUILDING: 'ATTACHED_MID_TERRACE_BUILDING',\n};\n\nexport const FLAT_TYPE = {\n  SINGLE_FLOOR_APARTMENT: 'SINGLE_FLOOR_APARTMENT',\n  DUPLEX_APARTMENT: 'DUPLEX_APARTMENT',\n  PENTHOUSE_APARTMENT: 'PENTHOUSE_APARTMENT',\n  PENTHOUSE_MAISONETTE: 'PENTHOUSE_MAISONETTE',\n  TERRACE_APARTMENT: 'TERRACE_APARTMENT',\n};\n\nexport const MINERGIE_CERTIFICATE = {\n  WITHOUT_CERTIFICATE: 'WITHOUT_CERTIFICATE',\n  MINERGIE_P: 'MINERGIE_P',\n  MINERGIE_ECO: 'MINERGIE_ECO',\n  MINERGIE_P_ECO: 'MINERGIE_P_ECO',\n  OTHER_CERTIFICATE: 'OTHER_CERTIFICATE',\n};\n\nexport const PROPERTY_CATEGORY = {\n  USER: 'USER',\n  PRO: 'PRO',\n  PROMOTION: 'PROMOTION',\n};\n\nexport const PROPERTY_REFERRED_BY_TYPE = {\n  ANY: 'ANY',\n  USER: 'USER',\n  ORGANISATION: 'ORGANISATION',\n};\n\nexport const PROPERTY_PERMISSIONS = {\n  DISPLAY_CUSTOMER_NAMES: {\n    FOR_PROPERTY_STATUS: PROPERTY_STATUS,\n    REFERRED_BY: PROPERTY_REFERRED_BY_TYPE,\n  },\n};\n\nexport const PROPERTY_PERMISSIONS_FULL_ACCESS = {\n  canInviteCustomers: true,\n  canInviteProUsers: true,\n  canModifyProperty: true,\n  canManagePermissions: true,\n  canSellProperty: true,\n  canBookProperty: true,\n  displayCustomerNames: {\n    forPropertyStatus: Object.values(PROPERTY_STATUS),\n    referredBy: PROPERTY_REFERRED_BY_TYPE.ANY,\n  },\n};\n\nexport const PROPERTY_SOLVENCY = {\n  UNDETERMINED: 'UNDETERMINED',\n  NOT_SHARED: 'NOT_SHARED',\n  SOLVENT: 'SOLVENT',\n  INSOLVENT: 'INSOLVENT',\n};\n","import Properties from '.';\nimport { PROPERTY_QUERIES } from './propertyConstants';\nimport {\n  adminProperty,\n  userProperty as userPropertyFragment,\n  proProperty,\n  proUser,\n} from '../fragments';\n\nexport const adminProperties = Properties.createQuery(\n  PROPERTY_QUERIES.ADMIN_PROPERTIES,\n  adminProperty(),\n);\n\nexport const anonymousProperty = Properties.createQuery(\n  PROPERTY_QUERIES.ANONYMOUS_PROPERTY,\n  {\n    ...userPropertyFragment(),\n    // Ask these for non-reactive queries, like ProPropertyPage\n    documents: 1,\n    openGraphData: 1,\n  },\n);\n\nexport const propertySearch = Properties.createQuery(\n  PROPERTY_QUERIES.PROPERTY_SEARCH,\n  {\n    address1: 1,\n    address2: 1,\n    city: 1,\n    zipCode: 1,\n    totalValue: 1,\n    status: 1,\n    style: 1,\n    insideArea: 1,\n    $options: { limit: 5 },\n  },\n);\n\nexport const proProperties = Properties.createQuery(\n  PROPERTY_QUERIES.PRO_PROPERTIES,\n  proProperty(),\n);\n\nexport const proPropertyUsers = Properties.createQuery(\n  PROPERTY_QUERIES.PRO_PROPERTY_USERS,\n  { users: proUser() },\n);\n\nexport const userProperty = Properties.createQuery(\n  PROPERTY_QUERIES.USER_PROPERTY,\n  {\n    $filter({ filters, params: { propertyId } }) {\n      filters._id = propertyId;\n    },\n    ...userPropertyFragment(),\n    // Ask these for non-reactive queries, like ProPropertyPage\n    openGraphData: 1,\n    documents: 1,\n  },\n);\n","import addressReducer from '../reducers/addressReducer';\nimport Properties from '.';\nimport { PROPERTY_DOCUMENTS } from '../files/fileConstants';\n\nProperties.addReducers({\n  ...addressReducer,\n  thumbnail: {\n    body: {\n      documents: { [PROPERTY_DOCUMENTS.PROPERTY_PICTURES]: { url: 1 } },\n      imageUrls: 1,\n    },\n    reduce: ({ documents = {}, imageUrls = [] }) => {\n      if (imageUrls.length > 0) {\n        return imageUrls[0];\n      }\n\n      if (\n        documents\n        && documents[PROPERTY_DOCUMENTS.PROPERTY_PICTURES]\n        && documents[PROPERTY_DOCUMENTS.PROPERTY_PICTURES].length\n      ) {\n        return documents[PROPERTY_DOCUMENTS.PROPERTY_PICTURES][0].url;\n      }\n    },\n  },\n  totalValue: {\n    body: { value: 1, landValue: 1, constructionValue: 1, additionalMargin: 1 },\n    reduce: ({\n      value = 0,\n      landValue = 0,\n      constructionValue = 0,\n      additionalMargin = 0,\n    }) => value || landValue + constructionValue + additionalMargin,\n  },\n  valuePerSquareMeterInside: {\n    body: { totalValue: 1, insideArea: 1 },\n    reduce: ({ totalValue = 0, insideArea = 0 }) =>\n      (insideArea === 0 ? 0 : totalValue / insideArea),\n  },\n  valuePerSquareMeterLand: {\n    body: { totalValue: 1, landArea: 1 },\n    reduce: ({ totalValue = 0, landArea = 0 }) =>\n      (landArea === 0 ? 0 : totalValue / landArea),\n  },\n  organisation: {\n    body: { users: { organisations: { name: 1 } } },\n    reduce: ({ users = [] }) => {\n      if (users.length === 0) {\n        return undefined;\n      }\n\n      let org;\n\n      const hasOrg = users.every(({ organisations = [] }) => {\n        if (organisations.length !== 1) {\n          return false;\n        }\n\n        if (!org) {\n          org = organisations[0];\n          return true;\n        }\n\n        return organisations[0]._id === org._id;\n      });\n\n      return hasOrg ? org : null;\n    },\n  },\n});\n","import { Match } from 'meteor/check';\n\nimport { searchDatabase } from '../queries';\nimport { exposeQuery } from '../queryHelpers';\nimport { searchDatabaseResolver } from './resolvers';\n\nexposeQuery({\n  query: searchDatabase,\n  overrides: {\n    validateParams: { searchQuery: Match.Maybe(String) },\n  },\n  resolver: searchDatabaseResolver,\n  cacher: { ttl: 20 * 1000 },\n});\n","import '../../activities/server/exposures';\nimport '../../borrowers/server/exposures';\nimport '../../contacts/server/exposures';\nimport '../../interestRates/server/exposures';\nimport '../../irs10y/server/exposures';\nimport '../../lenderRules/server/exposures';\nimport '../../lenders/server/exposures';\nimport '../../liveSync/server/exposures';\nimport '../../loans/server/exposures';\nimport '../../monitoring/server/exposures';\nimport '../../notifications/server/exposures';\nimport '../../offers/server/exposures';\nimport '../../organisations/server/exposures';\nimport '../../promotionLots/server/exposures';\nimport '../../promotionOptions/server/exposures';\nimport '../../promotions/server/exposures';\nimport '../../properties/server/exposures';\nimport '../../revenues/server/exposures';\nimport '../../stats/server/exposures';\nimport '../../tasks/server/exposures';\nimport '../../users/server/exposures';\nimport './exposures';\n","import { borrowerSearch } from '../../borrowers/queries';\nimport { loanSearch } from '../../loans/queries';\nimport { propertySearch } from '../../properties/queries';\nimport { userSearch } from '../../users/queries';\nimport { promotionSearch } from '../../promotions/queries';\nimport { contactSearch } from '../../contacts/queries';\nimport { organisationSearch } from '../../organisations/queries';\nimport { COLLECTIONS } from '../../constants';\n\nconst collectionSearches = {\n  [COLLECTIONS.USERS_COLLECTION]: searchQuery =>\n    userSearch.clone({ searchQuery }).fetch(),\n  [COLLECTIONS.LOANS_COLLECTION]: searchQuery =>\n    loanSearch.clone({ searchQuery }).fetch(),\n  [COLLECTIONS.CONTACTS_COLLECTION]: searchQuery =>\n    contactSearch.clone({ searchQuery }).fetch(),\n  [COLLECTIONS.ORGANISATIONS_COLLECTION]: searchQuery =>\n    organisationSearch.clone({ searchQuery }).fetch(),\n  [COLLECTIONS.PROMOTIONS_COLLECTION]: searchQuery =>\n    promotionSearch.clone({ searchQuery }).fetch(),\n  [COLLECTIONS.PROPERTIES_COLLECTION]: searchQuery =>\n    propertySearch.clone({ searchQuery }).fetch(),\n  [COLLECTIONS.BORROWERS_COLLECTION]: searchQuery =>\n    borrowerSearch.clone({ searchQuery }).fetch(),\n};\n\nexport const searchDatabaseResolver = ({ searchQuery, collection }) => {\n  if (collection) {\n    return collectionSearches[collection](searchQuery);\n  }\n\n  return {\n    ...Object.keys(collectionSearches).reduce(\n      (obj, collectionName) => ({\n        ...obj,\n        [collectionName]: collectionSearches[collectionName](searchQuery),\n      }),\n      {},\n    ),\n    searchQuery,\n  };\n};\n","import { createQuery } from 'meteor/cultofcoders:grapher';\nimport { RESOLVERS } from './resolversConstants';\n\nexport const searchDatabase = createQuery(RESOLVERS.SEARCH_DATABASE, () => {});\n","import { Match } from 'meteor/check';\n\nimport { Meteor } from 'meteor/meteor';\nimport Security from '../security';\nimport QueryCacher from '../helpers/server/QueryCacher';\n\nconst defaultParams = (options) => {\n  const { allowFilterById = false } = options;\n  return {\n    $body: Match.Maybe(Object),\n    limit: Match.Maybe(Number),\n    skip: Match.Maybe(Number),\n    $sort: Match.Maybe(Object),\n    $skip: Match.Maybe(Number),\n    $limit: Match.Maybe(Number),\n    _userId: Match.Maybe(Match.OneOf(String, null)),\n    ...(allowFilterById ? { _id: Match.Maybe(String) } : {}),\n  };\n};\n\nconst defaultFilter = options => ({ filters, params: { _id } }) => {\n  const { allowFilterById = false } = options;\n  if (allowFilterById && _id) {\n    filters._id = _id;\n  }\n};\n\nconst getValidateParams = ({ validateParams = {} } = {}, options) => ({\n  ...defaultParams(options),\n  ...validateParams,\n});\n\nconst addSort = (body, params) => {\n  const { $sort } = params;\n  body.$options = {\n    ...body.$options,\n    ...($sort !== undefined ? { sort: $sort } : {}),\n  };\n};\n\nconst addSkip = (body, params) => {\n  const { $skip } = params;\n  if ($skip) {\n    body.$options = { ...body.$options, skip: $skip };\n  }\n};\n\nconst addLimit = (body, params) => {\n  const { $limit } = params;\n  if ($limit) {\n    const { $options: { limit } = {} } = body;\n    body.$options = {\n      ...body.$options,\n      limit: limit ? Math.min($limit, limit) : $limit,\n    };\n  }\n};\n\nconst addPaginate = (body) => {\n  body.$paginate = true;\n};\n\nconst addOptions = (body, params) => {\n  addSort(body, params);\n  addSkip(body, params);\n  addLimit(body, params);\n  addPaginate(body);\n};\n\nconst addFilters = (body, embody, options) => {\n  const { $filter: bodyFilter } = body;\n  const { $filter: overrideFilter } = embody || {};\n\n  body.$filter = (...args) => {\n    if (bodyFilter) {\n      bodyFilter(...args);\n    }\n    if (overrideFilter) {\n      overrideFilter(...args);\n    }\n\n    defaultFilter(options)(...args);\n  };\n};\n\nconst getEmbody = (overrides, options) =>\n  function customEmbody(body, params) {\n    if (overrides.embody) {\n      if (typeof overrides.embody !== 'function') {\n        throw new Meteor.Error('Embody must be a function!');\n      }\n      overrides.embody(body, params);\n    }\n\n    addFilters(body, overrides.embody, options);\n    addOptions(body, params);\n  };\n\nconst getFirewall = (overrides, options) => (userId, params) => {\n  params._userId = userId;\n  if (!overrides.firewall) {\n    Security.checkUserIsAdmin(userId);\n  } else {\n    overrides.firewall(userId, params);\n  }\n};\n\nexport const exposeQuery = ({\n  query,\n  overrides = {},\n  options = {},\n  resolver,\n  caching,\n}) => {\n  query.expose({\n    ...overrides,\n    firewall: getFirewall(overrides, options),\n    embody: getEmbody(overrides, options),\n    validateParams: getValidateParams(overrides, options),\n  });\n\n  if (resolver) {\n    query.resolve(resolver);\n  }\n\n  if (caching) {\n    const { ttl, getDataToHash } = caching;\n    const cacher = new QueryCacher({ ttl, getDataToHash });\n    query.cacheResults(cacher);\n  }\n};\n","export const RESOLVERS = {\n  SEARCH_DATABASE: 'searchDatabase',\n};\n","import SimpleSchema from 'simpl-schema';\n\nimport { CUSTOM_AUTOFIELD_TYPES } from 'core/components/AutoForm2/constants';\nimport {\n  createdAt,\n  updatedAt,\n  percentageField,\n  decimalMoneyField,\n  cacheField,\n} from '../../helpers/sharedSchemas';\nimport {\n  REVENUE_TYPES,\n  REVENUE_STATUS,\n  COMMISSION_STATUS,\n  REVENUE_SECONDARY_TYPES,\n} from '../revenueConstants';\n\nconst RevenueSchema = new SimpleSchema({\n  createdAt,\n  updatedAt,\n  amount: { ...decimalMoneyField, optional: false },\n  description: { type: String, optional: true },\n  type: {\n    type: String,\n    allowedValues: Object.values(REVENUE_TYPES),\n    uniforms: { displayEmpty: false, placeholder: '' },\n  },\n  secondaryType: {\n    type: String,\n    optional: true,\n    allowedValues: Object.values(REVENUE_SECONDARY_TYPES),\n    uniforms: { displayEmpty: false, placeholder: '' },\n    condition: ({ type }) => type === REVENUE_TYPES.INSURANCE,\n  },\n  status: {\n    type: String,\n    allowedValues: Object.values(REVENUE_STATUS),\n    uniforms: { displayEmpty: false, placeholder: '' },\n    defaultValue: REVENUE_STATUS.EXPECTED,\n  },\n  expectedAt: {\n    type: Date,\n    optional: true,\n    uniforms: { type: CUSTOM_AUTOFIELD_TYPES.DATE },\n  },\n  paidAt: {\n    type: Date,\n    optional: true,\n    uniforms: { type: CUSTOM_AUTOFIELD_TYPES.DATE },\n  },\n  organisationLinks: {\n    type: Array,\n    defaultValue: [],\n  },\n  'organisationLinks.$': Object,\n  'organisationLinks.$._id': String,\n  'organisationLinks.$.commissionRate': { ...percentageField, optional: false },\n  'organisationLinks.$.paidAt': {\n    type: Date,\n    optional: true,\n    uniforms: { type: CUSTOM_AUTOFIELD_TYPES.DATE },\n  },\n  'organisationLinks.$.status': {\n    type: String,\n    allowedValues: Object.values(COMMISSION_STATUS),\n    defaultValue: COMMISSION_STATUS.TO_BE_PAID,\n  },\n  sourceOrganisationLink: { type: Object, defaultValue: {}, optional: true },\n  'sourceOrganisationLink._id': { type: String, optional: true },\n  // This should be an object, since there's only one loan\n  // https://github.com/Herteby/denormalize/issues/17\n  loanCache: { type: Array, optional: true },\n  'loanCache.$': cacheField,\n});\n\nexport default RevenueSchema;\n","import { COMMISSION_STATUS } from 'imports/core/api/constants';\nimport Revenues from '../revenues';\nimport CollectionService from '../../helpers/CollectionService';\nimport LoanService from '../../loans/server/LoanService';\nimport { REVENUE_STATUS } from '../revenueConstants';\n\nclass RevenueService extends CollectionService {\n  constructor() {\n    super(Revenues);\n  }\n\n  insert({ revenue, loanId }) {\n    const revenueId = this.collection.insert(revenue);\n\n    if (loanId) {\n      LoanService.addLink({\n        id: loanId,\n        linkName: 'revenues',\n        linkId: revenueId,\n      });\n    }\n\n    return revenueId;\n  }\n\n  remove({ revenueId }) {\n    return super.remove(revenueId);\n  }\n\n  getGeneratedRevenues({ organisationId }) {\n    const revenues = this.fetch({\n      $filters: {\n        $and: [\n          { status: REVENUE_STATUS.CLOSED },\n          { organisationLinks: { $elemMatch: { _id: organisationId } } },\n        ],\n      },\n      amount: 1,\n      organisationLinks: 1,\n      status: 1,\n    });\n\n    return revenues.reduce((total, { amount, organisationLinks }) => {\n      const sharedAmount = amount / organisationLinks.length;\n\n      return total + sharedAmount;\n    }, 0);\n  }\n\n  consolidateRevenue({ revenueId, amount, paidAt }) {\n    return this._update({\n      id: revenueId,\n      object: {\n        amount,\n        paidAt,\n        status: REVENUE_STATUS.CLOSED,\n      },\n    });\n  }\n\n  consolidateCommission({ revenueId, organisationId, paidAt, commissionRate }) {\n    return this.updateLinkMetadata({\n      id: revenueId,\n      linkName: 'organisations',\n      linkId: organisationId,\n      metadata: { paidAt, status: COMMISSION_STATUS.PAID, commissionRate },\n    });\n  }\n}\n\nexport default new RevenueService();\n","import { Match } from 'meteor/check';\n\nimport { exposeQuery } from '../../queries/queryHelpers';\nimport { adminRevenues } from '../queries';\n\nexposeQuery({\n  query: adminRevenues,\n  overrides: {\n    embody: (body) => {\n      body.$filter = ({\n        filters,\n        params: {\n          _id,\n          status,\n          loanId,\n          sourceOrganisationId,\n          organisationId,\n          commissionStatus,\n        },\n      }) => {\n        if (_id) {\n          filters._id = _id;\n        }\n\n        if (status) {\n          filters.status = status;\n        }\n\n        if (loanId) {\n          filters['loanCache.0._id'] = loanId;\n        }\n\n        if (sourceOrganisationId) {\n          filters['sourceOrganisationLink._id'] = sourceOrganisationId;\n        }\n\n        if (organisationId) {\n          if (commissionStatus) {\n            filters.organisationLinks = {\n              $elemMatch: { _id: organisationId, status: commissionStatus },\n            };\n          } else {\n            filters.organisationLinks = {\n              $elemMatch: { _id: organisationId },\n            };\n          }\n        }\n      };\n    },\n    validateParams: {\n      _id: Match.Maybe(String),\n      loanId: Match.Maybe(String),\n      sourceOrganisationId: Match.Maybe(String),\n      organisationId: Match.Maybe(String),\n      status: Match.Maybe(Match.OneOf(Object, String)),\n      commissionStatus: Match.Maybe(Match.OneOf(Object, String)),\n    },\n  },\n});\n","import NotificationService from '../../notifications/server/NotificationService';\nimport Revenues from '..';\nimport { REVENUE_STATUS } from '../revenueConstants';\n\nRevenues.before.update((userId, { _id: revenueId, expectedAt: oldDate }, fieldNames, modifier) => {\n  // Read the notification automatically if a paidAt date is added, or if\n  // the status is set to CLOSED\n  if (fieldNames.includes('status') || fieldNames.includes('paidAt')) {\n    const newStatus = modifier.$set && modifier.$set.status;\n    const newPaidAt = modifier.$set && modifier.$set.paidAt;\n\n    if (newStatus === REVENUE_STATUS.CLOSED || newPaidAt) {\n      NotificationService.readNotificationAll({\n        filters: { 'revenueLink._id': revenueId },\n      });\n    }\n  }\n\n  // Cancel notification if expetedAt changes\n  if (fieldNames.includes('expectedAt')) {\n    const newDate = modifier.$set && modifier.$set.expectedAt;\n\n    if ((newDate && newDate.getTime()) !== (oldDate && oldDate.getTime())) {\n      NotificationService.remove({ 'revenueLink._id': revenueId });\n    }\n  }\n});\n","import SecurityService from '../../security';\nimport RevenueService from './RevenueService';\nimport {\n  revenueInsert,\n  revenueRemove,\n  revenueUpdate,\n  consolidateRevenue,\n  consolidateCommission,\n} from '../methodDefinitions';\n\nrevenueInsert.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return RevenueService.insert(params);\n});\n\nrevenueRemove.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return RevenueService.remove(params);\n});\n\nrevenueUpdate.setHandler((context, { revenueId, object }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return RevenueService._update({ id: revenueId, object });\n});\n\nconsolidateRevenue.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return RevenueService.consolidateRevenue(params);\n});\n\nconsolidateCommission.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return RevenueService.consolidateCommission(params);\n});\n","export * from './methodDefinitions';\nexport { default } from './revenues';\n","import LinkInitializer from '../links/LinkInitializer';\nimport Revenues from '.';\nimport { Loans, Organisations } from '..';\n\nRevenues.addLinks({\n  organisations: {\n    collection: Organisations,\n    field: 'organisationLinks',\n    type: 'many',\n    metadata: true,\n  },\n  sourceOrganisation: {\n    collection: Organisations,\n    field: 'sourceOrganisationLink',\n    type: 'one',\n    metadata: true,\n  },\n});\n\nLinkInitializer.inversedInit(() => {\n  Revenues.addLinks({\n    loan: {\n      collection: Loans,\n      inversedBy: 'revenues',\n      denormalize: {\n        field: 'loanCache',\n        body: { _id: 1, name: 1 },\n      },\n    },\n  });\n});\n","import { Match } from 'meteor/check';\n\nimport { Method } from '../methods/methods';\n\nexport const revenueInsert = new Method({\n  name: 'revenueInsert',\n  params: {\n    revenue: Object,\n    loanId: Match.Maybe(String),\n  },\n});\n\nexport const revenueRemove = new Method({\n  name: 'revenueRemove',\n  params: {\n    revenueId: String,\n  },\n});\n\nexport const revenueUpdate = new Method({\n  name: 'revenueUpdate',\n  params: {\n    revenueId: String,\n    object: Object,\n  },\n});\n\nexport const consolidateRevenue = new Method({\n  name: 'consolidateRevenue',\n  params: {\n    revenueId: String,\n    amount: Number,\n    paidAt: String,\n  },\n});\n\nexport const consolidateCommission = new Method({\n  name: 'consolidateCommission',\n  params: {\n    revenueId: String,\n    organisationId: String,\n    paidAt: String,\n    commissionRate: Number,\n  },\n});\n","import { revenue } from '../fragments';\nimport { REVENUE_QUERIES } from './revenueConstants';\nimport Revenues from '.';\n\nexport const adminRevenues = Revenues.createQuery(\n  REVENUE_QUERIES.ADMIN_REVENUES,\n  revenue(),\n);\n","export const REVENUES_COLLECTION = 'revenues';\n\nexport const REVENUE_QUERIES = {\n  ADMIN_REVENUES: 'ADMIN_REVENUES',\n};\n\nexport const REVENUE_TYPES = {\n  INSURANCE: 'INSURANCE',\n  MORTGAGE: 'MORTGAGE',\n  FEE: 'FEE',\n  OTHER: 'OTHER',\n};\n\nconst REVENUE_TYPES_INSURANCE = {\n  DEATH_3A: 'DEATH_3A',\n  DEATH_3B: 'DEATH_3B',\n  INCOME_PROTECTION_3A: 'INCOME_PROTECTION_3A',\n  INCOME_PROTECTION_3B: 'INCOME_PROTECTION_3B',\n  LIFE_3A: 'LIFE_3A',\n  LIFE_3B: 'LIFE_3B',\n};\n\nexport const REVENUE_SECONDARY_TYPES = {\n  ...REVENUE_TYPES_INSURANCE,\n};\n\nexport const REVENUE_STATUS = {\n  EXPECTED: 'EXPECTED',\n  CLOSED: 'CLOSED',\n};\n\nexport const COMMISSION_STATUS = {\n  PAID: 'PAID',\n  TO_BE_PAID: 'TO_BE_PAID',\n};\n","import { Mongo } from 'meteor/mongo';\n\nimport RevenueSchema from './schemas/revenueSchema';\nimport { REVENUES_COLLECTION } from './revenueConstants';\n\nconst Revenues = new Mongo.Collection(REVENUES_COLLECTION);\n\nRevenues.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true,\n});\n\nRevenues.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false,\n});\n\nRevenues.attachSchema(RevenueSchema);\nexport default Revenues;\n","import SecurityService from '../Security';\n\nexport const hasMinimumRole = ({ role, userId }) => {\n  try {\n    SecurityService.minimumRole(role)(userId);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n","export * from './generalSecurityHelpers';\nexport * from './proPropertySecurityHelpers';\nexport * from './promotionSecurityHelpers';\n","import { hasMinimumRole } from './generalSecurityHelpers';\nimport { ROLES } from '../../users/userConstants';\nimport SecurityService from '../Security';\nimport { PROPERTY_STATUS } from '../../properties/propertyConstants';\nimport {\n  getCurrentUserPermissionsForProProperty,\n  shouldAnonymize,\n} from '../../properties/propertyClientHelper';\n\nconst checkProPropertyPermissions = ({\n  property,\n  userId,\n  requiredPermissions,\n  propertyStatus = [],\n}) => {\n  if (propertyStatus.length && !propertyStatus.includes(property.status)) {\n    return false;\n  }\n  if (hasMinimumRole({ role: ROLES.ADMIN, userId })) {\n    return true;\n  }\n\n  try {\n    SecurityService.hasPermissionOnDoc({\n      doc: property,\n      requiredPermissions,\n      userId,\n    });\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nconst isUserLinkedToProperty = ({ userId, property = {} }) => {\n  const { userLinks = [], users = [], loans = [] } = property;\n  const userLoans = loans\n    .reduce((usersLoans, { user }) => [...usersLoans, user], [])\n    .filter(x => x);\n\n  const user = userLinks.find(({ _id }) => _id === userId)\n    || users.find(({ _id }) => _id === userId)\n    || userLoans.find(({ _id }) => _id === userId);\n\n  if (!user) {\n    return false;\n  }\n\n  return true;\n};\n\nexport const isAllowedToViewProProperty = ({ property, currentUser }) => {\n  const { _id: userId } = currentUser;\n\n  if (hasMinimumRole({ role: ROLES.ADMIN, userId })) {\n    return true;\n  }\n\n  return isUserLinkedToProperty({ userId, property });\n};\n\nexport const isAllowedToInviteCustomersToProProperty = ({\n  property,\n  currentUser,\n}) => {\n  const { _id: userId } = currentUser;\n  const requiredPermissions = { canInviteCustomers: true };\n\n  return checkProPropertyPermissions({\n    property,\n    userId,\n    requiredPermissions,\n    propertyStatus: [PROPERTY_STATUS.FOR_SALE, PROPERTY_STATUS.BOOKED],\n  });\n};\n\nexport const isAllowedToInviteProUsersToProProperty = ({\n  property,\n  currentUser,\n}) => {\n  const { _id: userId } = currentUser;\n  const requiredPermissions = { canInviteProUsers: true };\n\n  return checkProPropertyPermissions({\n    property,\n    userId,\n    requiredPermissions,\n  });\n};\n\nexport const isAllowedToManageProPropertyPermissions = ({\n  property,\n  currentUser,\n}) => {\n  const { _id: userId } = currentUser;\n  const requiredPermissions = { canManagePermissions: true };\n\n  return checkProPropertyPermissions({\n    property,\n    userId,\n    requiredPermissions,\n  });\n};\n\nexport const isAllowedToRemoveCustomerFromProProperty = ({\n  property,\n  currentUser,\n  customerOwnerType,\n}) => {\n  const { _id: userId } = currentUser;\n  if (hasMinimumRole({ role: ROLES.ADMIN, userId })) {\n    return true;\n  }\n  const { _id: propertyId } = property;\n  const permissions = getCurrentUserPermissionsForProProperty({\n    currentUser,\n    propertyId,\n  });\n\n  return (\n    isAllowedToInviteCustomersToProProperty({ property, currentUser })\n    && !shouldAnonymize({ customerOwnerType, permissions })\n  );\n};\n\nexport const isAllowedToModifyProProperty = ({ property, currentUser }) => {\n  const { _id: userId } = currentUser;\n  const requiredPermissions = { canModifyProperty: true };\n\n  return checkProPropertyPermissions({\n    property,\n    userId,\n    requiredPermissions,\n    propertyStatus: [PROPERTY_STATUS.FOR_SALE],\n  });\n};\n\nexport const isAllowedToSeeProPropertyCustomers = ({\n  property,\n  currentUser,\n}) => {\n  const { _id: userId } = currentUser;\n\n  if (hasMinimumRole({ role: ROLES.ADMIN, userId })) {\n    return true;\n  }\n\n  const { userLinks = [], users = [] } = property;\n\n  const user = userLinks.find(({ _id }) => _id === userId)\n    || users.find(({ _id }) => _id === userId);\n\n  if (!user) {\n    return false;\n  }\n\n  const userPermissions = user.permissions || user.$metadata.permissions;\n\n  if (userPermissions.displayCustomerNames === false) {\n    return false;\n  }\n\n  return true;\n};\n\nexport const isAllowedToBookProProperty = ({ property, currentUser }) => {\n  const { _id: userId } = currentUser;\n  const requiredPermissions = { canBookLots: true };\n\n  return checkProPropertyPermissions({ property, userId, requiredPermissions });\n};\n\nexport const isAllowedToBookProPropertyToCustomer = ({\n  property,\n  currentUser,\n  customerOwnerType,\n}) => {\n  const { _id: userId } = currentUser;\n  if (hasMinimumRole({ role: ROLES.ADMIN, userId })) {\n    return true;\n  }\n\n  const { _id: propertyId } = property;\n  const permissions = getCurrentUserPermissionsForProProperty({\n    propertyId,\n    currentUser,\n  });\n\n  return (\n    isAllowedToBookProProperty({ property, currentUser })\n    && !shouldAnonymize({ customerOwnerType, permissions })\n  );\n};\n\nexport const isAllowedToSellProProperty = ({ property, currentUser }) => {\n  const { _id: userId } = currentUser;\n  const requiredPermissions = {\n    canSellLots: true,\n  };\n\n  return checkProPropertyPermissions({ property, userId, requiredPermissions });\n};\n\nexport const isAllowedToSellProPropertyToCustomer = ({\n  property,\n  currentUser,\n  customerOwnerType,\n}) => {\n  const { _id: userId } = currentUser;\n  if (hasMinimumRole({ role: ROLES.ADMIN, userId })) {\n    return true;\n  }\n\n  const { _id: propertyId } = property;\n  const permissions = getCurrentUserPermissionsForProProperty({\n    propertyId,\n    currentUser,\n  });\n\n  return (\n    isAllowedToSellProProperty({ property, currentUser })\n    && !shouldAnonymize({ customerOwnerType, permissions })\n  );\n};\n","import { PROMOTION_STATUS, ROLES } from '../../constants';\nimport SecurityService from '../Security';\nimport {\n  shouldAnonymize,\n  getCurrentUserPermissionsForPromotion,\n} from '../../promotions/promotionClientHelpers';\nimport { hasMinimumRole } from './generalSecurityHelpers';\n\nconst checkPromotionPermissions = ({\n  promotion,\n  userId,\n  requiredPermissions,\n  promotionStatus = [],\n}) => {\n  if (promotionStatus.length && !promotionStatus.includes(promotion.status)) {\n    return false;\n  }\n\n  if (hasMinimumRole({ role: ROLES.ADMIN, userId })) {\n    return true;\n  }\n\n  try {\n    SecurityService.hasPermissionOnDoc({\n      doc: promotion,\n      requiredPermissions,\n      userId,\n    });\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nexport const isAllowedToViewPromotion = ({\n  promotion,\n  currentUser: { _id: userId },\n}) => {\n  if (hasMinimumRole({ role: ROLES.ADMIN, userId })) {\n    return true;\n  }\n\n  const { userLinks = [], users = [] } = promotion;\n\n  const user = userLinks.find(({ _id }) => _id === userId)\n    || users.find(({ _id }) => _id === userId);\n\n  if (!user) {\n    return false;\n  }\n\n  return true;\n};\n\nexport const isAllowedToInviteCustomersToPromotion = ({\n  promotion,\n  currentUser,\n}) => {\n  const { _id: userId } = currentUser;\n  const requiredPermissions = { canInviteCustomers: true };\n\n  return checkPromotionPermissions({\n    promotion,\n    userId,\n    requiredPermissions,\n    promotionStatus: [PROMOTION_STATUS.OPEN],\n  });\n};\n\nexport const isAllowedToRemoveCustomerFromPromotion = ({\n  promotion,\n  currentUser,\n  customerOwnerType,\n}) => {\n  const { _id: userId } = currentUser;\n  if (hasMinimumRole({ role: ROLES.ADMIN, userId })) {\n    return true;\n  }\n  const { _id: promotionId } = promotion;\n  const permissions = getCurrentUserPermissionsForPromotion({\n    currentUser,\n    promotionId,\n  });\n\n  return (\n    isAllowedToInviteCustomersToPromotion({ promotion, currentUser })\n    && !shouldAnonymize({ customerOwnerType, permissions })\n  );\n};\n\nexport const isAllowedToModifyPromotion = ({ promotion, currentUser }) => {\n  const { _id: userId } = currentUser;\n  const requiredPermissions = { canModifyPromotion: true };\n\n  return checkPromotionPermissions({\n    promotion,\n    userId,\n    requiredPermissions,\n    promotionStatus: [PROMOTION_STATUS.OPEN, PROMOTION_STATUS.PREPARATION],\n  });\n};\n\nexport const isAllowedToManagePromotionDocuments = ({\n  promotion,\n  currentUser,\n}) => {\n  const { _id: userId } = currentUser;\n  const requiredPermissions = { canManageDocuments: true };\n\n  return checkPromotionPermissions({\n    promotion,\n    userId,\n    requiredPermissions,\n    promotionStatus: [PROMOTION_STATUS.OPEN, PROMOTION_STATUS.PREPARATION],\n  });\n};\n\nexport const isAllowedToSeePromotionCustomers = ({\n  promotion,\n  currentUser,\n}) => {\n  const { _id: userId } = currentUser;\n\n  if (hasMinimumRole({ role: ROLES.ADMIN, userId })) {\n    return true;\n  }\n\n  const { userLinks = [], users = [] } = promotion;\n\n  const user = userLinks.find(({ _id }) => _id === userId)\n    || users.find(({ _id }) => _id === userId);\n\n  if (!user) {\n    return false;\n  }\n\n  const userPermissions = user.permissions || user.$metadata.permissions;\n\n  if (userPermissions.displayCustomerNames === false) {\n    return false;\n  }\n\n  return true;\n};\n\nexport const isAllowedToAddLotsToPromotion = ({ promotion, currentUser }) => {\n  const { _id: userId } = currentUser;\n  const requiredPermissions = {\n    canModifyPromotion: true,\n    canAddLots: true,\n  };\n\n  return checkPromotionPermissions({ promotion, userId, requiredPermissions });\n};\n\nexport const isAllowedToModifyPromotionLots = ({ promotion, currentUser }) => {\n  const { _id: userId } = currentUser;\n  const requiredPermissions = {\n    canModifyPromotion: true,\n    canModifyLots: true,\n  };\n\n  return checkPromotionPermissions({ promotion, userId, requiredPermissions });\n};\n\nexport const isAllowedToRemovePromotionLots = ({ promotion, currentUser }) => {\n  const { _id: userId } = currentUser;\n  const requiredPermissions = {\n    canModifyPromotion: true,\n    canRemoveLots: true,\n  };\n\n  return checkPromotionPermissions({ promotion, userId, requiredPermissions });\n};\n\nexport const isAllowedToBookPromotionLots = ({ promotion, currentUser }) => {\n  const { _id: userId } = currentUser;\n  const requiredPermissions = { canBookLots: true };\n\n  return checkPromotionPermissions({ promotion, userId, requiredPermissions });\n};\n\nexport const isAllowedToBookPromotionLotToCustomer = ({\n  promotion,\n  currentUser,\n  customerOwnerType,\n}) => {\n  const { _id: userId } = currentUser;\n  if (hasMinimumRole({ role: ROLES.ADMIN, userId })) {\n    return true;\n  }\n  const { _id: promotionId } = promotion;\n  const permissions = getCurrentUserPermissionsForPromotion({\n    currentUser,\n    promotionId,\n  });\n  return (\n    isAllowedToBookPromotionLots({ promotion, currentUser })\n    && !shouldAnonymize({ customerOwnerType, permissions })\n  );\n};\n\nexport const isAllowedToSellPromotionLots = ({ promotion, currentUser }) => {\n  const { _id: userId } = currentUser;\n  const requiredPermissions = {\n    canSellLots: true,\n  };\n\n  return checkPromotionPermissions({ promotion, userId, requiredPermissions });\n};\n\nexport const isAllowedToSellPromotionLotToCustomer = ({\n  promotion,\n  currentUser,\n  customerOwnerType,\n}) => {\n  const { _id: userId } = currentUser;\n  if (hasMinimumRole({ role: ROLES.ADMIN, userId })) {\n    return true;\n  }\n  const { _id: promotionId } = promotion;\n  const permissions = getCurrentUserPermissionsForPromotion({\n    currentUser,\n    promotionId,\n  });\n  return (\n    isAllowedToSellPromotionLots({ promotion, currentUser })\n    && !shouldAnonymize({ customerOwnerType, permissions })\n  );\n};\n","import BorrowerService from '../../borrowers/server/BorrowerService';\nimport Security from '../Security';\nimport { LoanSecurity } from './index';\n\nclass BorrowerSecurity {\n  static isAllowedToInsert() {\n    Security.checkLoggedIn();\n  }\n\n  static isAllowedToUpdate(borrowerId, userId) {\n    if (!borrowerId) {\n      Security.handleUnauthorized();\n    }\n\n    if (Security.currentUserIsAdmin()) {\n      return;\n    }\n\n    const borrower = BorrowerService.fetchOne({\n      $filters: { _id: borrowerId },\n      userId: 1,\n      loans: { anonymous: 1 },\n    });\n\n    if (borrower.userId) {\n      Security.checkOwnership(borrower, userId);\n    } else if (borrower.loans.length === 1 && borrower.loans[0].anonymous) {\n      LoanSecurity.checkAnonymousLoan(borrower.loans[0]._id);\n    } else {\n      Security.handleUnauthorized('borrowerUpdate not allowed');\n    }\n  }\n\n  static isAllowedToDelete(borrowerId) {\n    this.isAllowedToUpdate(borrowerId);\n  }\n}\n\nexport default BorrowerSecurity;\n","import { LOAN_STATUS } from 'core/api/loans/loanConstants';\nimport Security from '../Security';\nimport LoanService from '../../loans/server/LoanService';\n\nclass LoanSecurity {\n  static isAllowedToInsert() {\n    Security.checkLoggedIn();\n  }\n\n  static isAllowedToUpdate(loanId, userId) {\n    if (!loanId) {\n      Security.handleUnauthorized();\n    }\n\n    if (Security.currentUserIsAdmin()) {\n      return;\n    }\n\n    const loan = LoanService.fetchOne({\n      $filters: { _id: loanId },\n      userId: 1,\n      userLinks: 1,\n    });\n    if (loan.userId) {\n      Security.checkOwnership(loan, userId);\n    } else {\n      this.checkAnonymousLoan(loanId);\n    }\n  }\n\n  static isAllowedToDelete() {\n    Security.checkCurrentUserIsAdmin();\n  }\n\n  static checkAnonymousLoan(loanId) {\n    const loan = LoanService.fetchOne({\n      $filters: { _id: loanId },\n      anonymous: 1,\n      status: 1,\n    });\n\n    if (\n      !loan\n      || loan.anonymous !== true\n      || loan.status === LOAN_STATUS.UNSUCCESSFUL\n      || loan.userId\n    ) {\n      Security.handleUnauthorized();\n    }\n  }\n}\n\nexport default LoanSecurity;\n","import Security from '../Security';\nimport { Offers } from '../..';\n\nclass OfferSecurity {\n  static isAllowedToInsert() {\n    Security.checkLoggedIn();\n  }\n\n  static isAllowedToUpdate(offerId) {\n    if (Security.currentUserIsAdmin()) {\n      return;\n    }\n\n    const offer = Offers.findOne(offerId);\n    Security.checkOwnership(offer);\n  }\n\n  static isAllowedToDelete() {\n    Security.checkCurrentUserIsAdmin();\n  }\n}\n\nexport default OfferSecurity;\n","import PromotionService from '../../promotions/server/PromotionService';\nimport PromotionLotService from '../../promotionLots/server/PromotionLotService';\nimport PromotionOptionService from '../../promotionOptions/server/PromotionOptionService';\nimport UserService from '../../users/server/UserService';\nimport { ROLES } from '../../users/userConstants';\nimport Security from '../Security';\nimport LoanSecurity from './LoanSecurity';\nimport {\n  isAllowedToInviteCustomersToPromotion,\n  isAllowedToRemoveCustomerFromPromotion,\n  isAllowedToModifyPromotion,\n  isAllowedToManagePromotionDocuments,\n  isAllowedToAddLotsToPromotion,\n  isAllowedToModifyPromotionLots,\n  isAllowedToRemovePromotionLots,\n  isAllowedToViewPromotion,\n  isAllowedToBookPromotionLots,\n  isAllowedToBookPromotionLotToCustomer,\n  isAllowedToSellPromotionLots,\n  isAllowedToSellPromotionLotToCustomer,\n} from '../clientSecurityHelpers';\nimport LoanService from '../../loans/server/LoanService';\nimport {\n  getPromotionCustomerOwnerType,\n  makeLoanAnonymizer,\n} from '../../promotions/server/promotionServerHelpers';\nimport LotService from '../../lots/server/LotService';\n\nclass PromotionSecurity {\n  static checkPermissions({\n    promotionId,\n    userId,\n    checkingFunction,\n    errorMessage,\n  }) {\n    if (Security.isUserAdmin(userId)) {\n      return;\n    }\n    const promotion = PromotionService.safeFetchOne({\n      $filters: { _id: promotionId },\n      status: 1,\n      users: { _id: 1 },\n      userLinks: { _id: 1 },\n    });\n\n    const currentUser = UserService.safeFetchOne({\n      $filters: { _id: userId },\n      promotions: {\n        permissions: 1,\n        status: 1,\n        users: { _id: 1 },\n      },\n      organisations: { users: { _id: 1 } },\n    });\n\n    if (!checkingFunction({ promotion, currentUser })) {\n      Security.handleUnauthorized(errorMessage || 'Checking permissions');\n    }\n  }\n\n  static getPromotionIdFromPromotionLot = ({ promotionLotId }) => {\n    const { promotion = {} } = PromotionLotService.safeFetchOne({\n      $filters: { _id: promotionLotId },\n      promotion: { _id: 1 },\n    });\n\n    return promotion._id;\n  };\n\n  static hasAccessToPromotion({ promotionId, userId }) {\n    try {\n      this.isAllowedToView({ promotionId, userId });\n      return;\n    } catch (error) {\n      const hasPromotion = UserService.hasPromotion({ promotionId, userId });\n\n      if (!hasPromotion) {\n        Security.handleUnauthorized(\"Vous n'avez pas accès à cette promotion\");\n      }\n    }\n  }\n\n  static hasAccessToPromotionLot({ promotionLotId, userId }) {\n    this.hasAccessToPromotion({\n      promotionId: this.getPromotionIdFromPromotionLot({ promotionLotId }),\n      userId,\n    });\n  }\n\n  static hasAccessToPromotionOption({ promotionOptionId, userId }) {\n    if (Security.isUserAdmin(userId)) {\n      return;\n    }\n\n    const { loan, promotionLots } = PromotionOptionService.safeFetchOne({\n      $filters: { _id: promotionOptionId },\n      loan: { _id: 1, userId: 1 },\n      promotionLots: { _id: 1 },\n    });\n\n    if (Security.hasRole(userId, ROLES.PRO)) {\n      this.hasAccessToPromotionLot(promotionLots[0]._id, userId);\n    } else {\n      LoanSecurity.isAllowedToUpdate(loan && loan._id);\n    }\n  }\n\n  static isAllowedToModify({ promotionId, userId }) {\n    this.checkPermissions({\n      promotionId,\n      userId,\n      checkingFunction: isAllowedToModifyPromotion,\n      errorMessage: 'Vous ne pouvez pas modifier cette promotion',\n    });\n  }\n\n  static isAllowedToManageDocuments({ promotionId, userId }) {\n    this.checkPermissions({\n      promotionId,\n      userId,\n      checkingFunction: isAllowedToManagePromotionDocuments,\n      errorMessage: 'Vous ne pouvez pas gérer les documents de cette promotion',\n    });\n  }\n\n  static isAllowedToManagePromotionLotDocuments({ propertyId, userId }) {\n    const { promotion } = PromotionLotService.safeFetchOne({\n      $filters: { 'propertyLinks._id': propertyId },\n      promotion: { _id: 1 },\n    });\n\n    this.isAllowedToManageDocuments({ promotionId: promotion._id, userId });\n  }\n\n  static isAllowedToAddLots({ promotionId, userId }) {\n    this.checkPermissions({\n      promotionId,\n      userId,\n      checkingFunction: isAllowedToAddLotsToPromotion,\n      errorMessage: 'Vous ne pouvez pas ajouter de lots à cette promotion',\n    });\n  }\n\n  static isAllowedToModifyLots({ promotionId, userId }) {\n    this.checkPermissions({\n      promotionId,\n      userId,\n      checkingFunction: isAllowedToModifyPromotionLots,\n      errorMessage: 'Vous ne pouvez pas modifier les lots de cette promotion',\n    });\n  }\n\n  static isAllowedToRemoveLots({ promotionId, userId }) {\n    this.checkPermissions({\n      promotionId,\n      userId,\n      checkingFunction: isAllowedToRemovePromotionLots,\n      errorMessage: 'Vous ne pouvez pas supprimer les lots de cette promotion',\n    });\n  }\n\n  static isAllowedToInviteCustomers({ promotionId, userId }) {\n    this.checkPermissions({\n      promotionId,\n      userId,\n      checkingFunction: isAllowedToInviteCustomersToPromotion,\n      errorMessage: 'Vous ne pouvez pas inviter des clients à cette promotion',\n    });\n  }\n\n  static isAllowedToRemoveCustomer({ promotionId, loanId, userId }) {\n    if (Security.isUserAdmin(userId)) {\n      return;\n    }\n\n    const promotion = PromotionService.safeFetchOne({\n      $filters: { _id: promotionId },\n      status: 1,\n      users: { _id: 1 },\n      userLinks: { _id: 1 },\n    });\n    const currentUser = UserService.safeFetchOne({\n      $filters: { _id: userId },\n      promotions: {\n        permissions: 1,\n        status: 1,\n        users: { _id: 1 },\n      },\n      organisations: { users: { _id: 1 } },\n    });\n\n    const loan = LoanService.safeFetchOne({\n      $filters: { _id: loanId },\n      user: { _id: 1 },\n    });\n\n    const customerOwnerType = getPromotionCustomerOwnerType({\n      customerId: loan.user._id,\n      userId,\n      promotionId,\n    });\n\n    if (\n      !isAllowedToRemoveCustomerFromPromotion({\n        promotion,\n        currentUser,\n        customerOwnerType,\n      })\n    ) {\n      Security.handleUnauthorized('Vous ne pouvez pas supprimer ce client de cette promotion');\n    }\n  }\n\n  static isAllowedToView({ promotionId, userId }) {\n    this.checkPermissions({\n      promotionId,\n      userId,\n      checkingFunction: isAllowedToViewPromotion,\n      errorMessage: \"Vous n'avez pas accès à cette promotion\",\n    });\n  }\n\n  static isAllowedToViewPromotionLot({ promotionLotId, userId }) {\n    if (Security.isUserAdmin(userId)) {\n      return;\n    }\n\n    this.isAllowedToView({\n      promotionId: this.getPromotionIdFromPromotionLot({ promotionLotId }),\n      userId,\n    });\n  }\n\n  static isAllowedToViewPromotionOption({ promotionOptionId, userId }) {\n    if (Security.isUserAdmin(userId)) {\n      return;\n    }\n\n    const { promotionLots = [] } = PromotionOptionService.safeFetchOne({\n      $filters: { _id: promotionOptionId },\n      promotionLots: { _id: 1 },\n    });\n\n    promotionLots.forEach(({ _id: promotionLotId }) => {\n      this.isAllowedToViewPromotionLot({ promotionLotId, userId });\n    });\n  }\n\n  static isAllowedToModifyPromotionLot({ promotionLotId, userId }) {\n    this.isAllowedToModifyLots({\n      promotionId: this.getPromotionIdFromPromotionLot({ promotionLotId }),\n      userId,\n    });\n  }\n\n  static isAllowedToRemovePromotionLot({ promotionLotId, userId }) {\n    this.isAllowedToRemoveLots({\n      promotionId: this.getPromotionIdFromPromotionLot({ promotionLotId }),\n      userId,\n    });\n  }\n\n  static isAllowedToBookLots({ promotionLotId, userId }) {\n    this.checkPermissions({\n      promotionId: this.getPromotionIdFromPromotionLot({ promotionLotId }),\n      userId,\n      checkingFunction: isAllowedToBookPromotionLots,\n      errorMessage: 'Vous ne pouvez pas réserver des lots dans cette promotion',\n    });\n  }\n\n  static isAllowedToBookLotToCustomer({ promotionLotId, loanId, userId }) {\n    if (Security.isUserAdmin(userId)) {\n      return;\n    }\n\n    const { promotion } = PromotionLotService.safeFetchOne({\n      $filters: { _id: promotionLotId },\n      promotion: { _id: 1, users: { _id: 1 } },\n    });\n\n    const loan = LoanService.safeFetchOne({\n      $filters: { _id: loanId },\n      user: {_id: 1},\n    });\n\n    const customerOwnerType = getPromotionCustomerOwnerType({\n      customerId: loan.user._id,\n      userId,\n      promotionId: promotion._id,\n    });\n\n    const currentUser = UserService.safeFetchOne({\n      $filters: { _id: userId },\n      promotions: {\n        permissions: 1,\n        status: 1,\n        users: { _id: 1 },\n      },\n      organisations: { users: { _id: 1 } },\n    });\n\n    if (\n      !isAllowedToBookPromotionLotToCustomer({\n        promotion,\n        currentUser,\n        customerOwnerType,\n      })\n    ) {\n      Security.handleUnauthorized('Vous ne pouvez pas réserver de lot à ce client');\n    }\n  }\n\n  static isAllowedToCancelLotBooking({ promotionLotId, userId }) {\n    const { attributedTo } = PromotionLotService.safeFetchOne({\n      $filters: { _id: promotionLotId },\n      attributedTo: { _id: 1 },\n    });\n\n    this.isAllowedToBookLotToCustomer({\n      promotionLotId,\n      loanId: attributedTo._id,\n      userId,\n    });\n  }\n\n  static isAllowedToSellLots({ promotionLotId, userId }) {\n    this.checkPermissions({\n      promotionId: this.getPromotionIdFromPromotionLot({ promotionLotId }),\n      userId,\n      checkingFunction: isAllowedToSellPromotionLots,\n      errorMessage: 'Vous ne pouvez pas vendre des lots dans cette promotion',\n    });\n  }\n\n  static isAllowedToSellLotToCustomer({ promotionLotId, userId }) {\n    if (Security.currentUserIsAdmin()) {\n      return;\n    }\n\n    const { promotion, attributedTo } = PromotionLotService.safeFetchOne({\n      $filters: { _id: promotionLotId },\n      promotion: { _id: 1, users: { _id: 1 } },\n      attributedTo: { _id: 1 },\n    });\n\n    const loan = LoanService.safeFetchOne({\n      $filters: { _id: attributedTo._id },\n      user: {_id: 1},\n    });\n\n    const customerOwnerType = getPromotionCustomerOwnerType({\n      customerId: loan.user._id,\n      userId,\n      promotionId: promotion._id,\n    });\n\n    const currentUser = UserService.safeFetchOne({\n      $filters: { _id: userId },\n      promotions: {\n        permissions: 1,\n        status: 1,\n        users: { _id: 1 },\n      },\n      organisations: { users: { _id: 1 } },\n    });\n\n    if (\n      !isAllowedToSellPromotionLotToCustomer({\n        promotion,\n        currentUser,\n        customerOwnerType,\n      })\n    ) {\n      Security.handleUnauthorized('Vous ne pouvez pas vendre de lot à ce client');\n    }\n  }\n\n  static isAllowedToModifyAdditionalLot({ lotId, userId }) {\n    const { promotions } = LotService.safeFetchOne({\n      $filters: { _id: lotId },\n      promotions: { _id: 1 },\n    });\n\n    this.isAllowedToModifyLots({ promotionId: promotions._id, userId });\n  }\n\n  static isAllowedToRemoveAdditionalLot({ lotId, userId }) {\n    const { promotions } = LotService.safeFetchOne({\n      $filters: { _id: lotId },\n      promotions: { _id: 1 },\n    });\n\n    this.isAllowedToRemoveLots({ promotionId: promotions._id, userId });\n  }\n\n  static isAllowedToSeePromotionCustomer({ userId, promotionId, loanId }) {\n    if (Security.isUserAdmin(userId)) {\n      return;\n    }\n\n    const loan = LoanService.fetchOne({\n      $filters: { _id: loanId },\n      _id: 1,\n      user: { _id: 1 },\n    });\n    const anonymizer = makeLoanAnonymizer({ userId, promotionId });\n    if (anonymizer(loan).isAnonymized) {\n      Security.handleUnauthorized(\"Vous n'avez pas accès à ce client\");\n    }\n  }\n}\n\nexport default PromotionSecurity;\n","import { Meteor } from 'meteor/meteor';\nimport { HTTP_STATUS_CODES } from 'core/api/RESTAPI/server/restApiConstants';\nimport Security from '../Security';\nimport { Properties, Promotions } from '../..';\nimport UserService from '../../users/server/UserService';\nimport { ROLES } from '../../users/userConstants';\nimport PromotionSecurity from './PromotionSecurity';\nimport PropertyService from '../../properties/server/PropertyService';\nimport { PROPERTY_CATEGORY } from '../../properties/propertyConstants';\nimport {\n  isAllowedToViewProProperty,\n  isAllowedToModifyProProperty,\n  isAllowedToInviteCustomersToProProperty,\n  isAllowedToInviteProUsersToProProperty,\n  isAllowedToRemoveCustomerFromProProperty,\n  isAllowedToBookProProperty,\n  isAllowedToBookProPropertyToCustomer,\n  isAllowedToSellProProperty,\n  isAllowedToSellProPropertyToCustomer,\n  isAllowedToManageProPropertyPermissions,\n} from '../clientSecurityHelpers';\nimport LoanService from '../../loans/server/LoanService';\nimport { getProPropertyCustomerOwnerType } from '../../properties/server/propertyServerHelpers';\n\nclass PropertySecurity {\n  static getProperty({ propertyId }) {\n    const property = PropertyService.fetchOne({\n      $filters: { _id: propertyId },\n      category: 1,\n      loans: { user: { _id: 1 } },\n      status: 1,\n      userId: 1,\n      userLinks: { _id: 1 },\n      users: { _id: 1 },\n    });\n\n    return property;\n  }\n\n  static getCurrentUser({ userId }) {\n    const currentUser = UserService.fetchOne({\n      $filters: { _id: userId },\n      organisations: { users: { _id: 1 } },\n      properties: { _id: 1, permissions: 1, status: 1 },\n    });\n\n    return currentUser;\n  }\n\n  static getLoan({ loanId }) {\n    const loan = LoanService.fetchOne({\n      $filters: { _id: loanId },\n      user: { _id: 1 },\n    });\n\n    return loan;\n  }\n\n  static getObjects({ propertyId, userId, loanId }) {\n    const objects = {};\n    if (propertyId) {\n      objects.property = this.getProperty({ propertyId });\n    }\n    if (userId) {\n      objects.currentUser = this.getCurrentUser({ userId });\n    }\n    if (loanId) {\n      objects.loan = this.getLoan({ loanId });\n    }\n    return objects;\n  }\n\n  static checkPermissions({\n    propertyId,\n    userId,\n    checkingFunction,\n    errorMessage,\n  }) {\n    if (Security.hasMinimumRole({ role: ROLES.ADMIN, userId })) {\n      return;\n    }\n\n    const { property, currentUser } = this.getObjects({ propertyId, userId });\n\n    if (!property) {\n      throw new Meteor.Error(\n        HTTP_STATUS_CODES.NOT_FOUND,\n        `Property with id \"${propertyId}\" not found`,\n      );\n    }\n\n    if (!checkingFunction({ property, currentUser })) {\n      Security.handleUnauthorized(errorMessage || 'Checking permissions');\n    }\n  }\n\n  static isAllowedToInsert() {\n    Security.checkLoggedIn();\n  }\n\n  static isPromotionLot(propertyId) {\n    const { category } = PropertyService.fetchOne({\n      $filters: { _id: propertyId },\n      category: 1,\n    });\n\n    return category === PROPERTY_CATEGORY.PROMOTION;\n  }\n\n  static checkBelongsToPromotion(propertyId, userId) {\n    const promotion = Promotions.findOne({ 'propertyLinks._id': propertyId });\n    if (promotion) {\n      PromotionSecurity.isAllowedToModify({\n        promotionId: promotion._id,\n        userId,\n      });\n      return;\n    }\n\n    Security.handleUnauthorized('Not allowed to modify promotion property');\n  }\n\n  static isProUserAllowedToUpdate({ propertyId, userId }) {\n    const { category } = Properties.findOne(propertyId);\n    if (category === PROPERTY_CATEGORY.PRO) {\n      this.checkPermissions({\n        propertyId,\n        userId,\n        checkingFunction: isAllowedToModifyProProperty,\n        errorMessage: 'Vous ne pouvez pas modifier ce bien immobilier',\n      });\n    } else if (category === PROPERTY_CATEGORY.PROMOTION) {\n      this.checkBelongsToPromotion(propertyId, userId);\n    } else {\n      Security.handleUnauthorized('Vous ne pouvez pas modifier ce bien immobilier');\n    }\n  }\n\n  static isAllowedToUpdate(propertyId, userId) {\n    if (Security.hasMinimumRole({ role: ROLES.ADMIN, userId })) {\n      return;\n    }\n\n    if (Security.hasMinimumRole({ role: ROLES.PRO, userId })) {\n      this.isProUserAllowedToUpdate({ propertyId, userId });\n    } else {\n      const property = Properties.findOne(propertyId);\n      Security.checkOwnership(property, userId);\n    }\n  }\n\n  static isAllowedToDelete(propertyId, userId) {\n    if (Security.hasMinimumRole({ role: ROLES.ADMIN, userId })) {\n      return;\n    }\n\n    const property = Properties.findOne(propertyId);\n    Security.checkOwnership(property);\n  }\n\n  static hasAccessToProperty({ propertyId, userId }) {\n    try {\n      this.isAllowedToView({ propertyId, userId });\n      return;\n    } catch (error) {\n      const hasProperty = UserService.hasProperty({ userId, propertyId });\n\n      if (!hasProperty) {\n        Security.handleUnauthorized(\"Vous n'avez pas accès à ce bien immobilier\");\n      }\n    }\n  }\n\n  static isPropertyPublic({ propertyId }) {\n    const property = PropertyService.fetchOne({\n      $filters: { _id: propertyId },\n      category: 1,\n    });\n\n    return property && property.category === PROPERTY_CATEGORY.PRO;\n  }\n\n  static checkPropertyIsPublic({ propertyId }) {\n    if (!this.isPropertyPublic({ propertyId })) {\n      Security.handleUnauthorized();\n    }\n  }\n\n  static isAllowedToView({ userId, propertyId }) {\n    this.checkPermissions({\n      propertyId,\n      userId,\n      checkingFunction: isAllowedToViewProProperty,\n      errorMessage: \"Vous n'avez pas accès à ce bien immobilier\",\n    });\n  }\n\n  static isAllowedToManageDocuments({ userId, propertyId }) {\n    this.checkPermissions({\n      propertyId,\n      userId,\n      checkingFunction: isAllowedToModifyProProperty,\n      errorMessage:\n        'Vous ne pouvez pas gérer les documents de ce bien immobilier',\n    });\n  }\n\n  static isAllowedToInviteCustomers({ userId, propertyId }) {\n    this.checkPermissions({\n      propertyId,\n      userId,\n      checkingFunction: isAllowedToInviteCustomersToProProperty,\n      errorMessage:\n        'Vous ne pouvez pas inviter de clients sur ce bien immobilier',\n    });\n  }\n\n  static isAllowedToInviteProUsers({ userId, propertyId }) {\n    this.checkPermissions({\n      propertyId,\n      userId,\n      checkingFunction: isAllowedToInviteProUsersToProProperty,\n      errorMessage:\n        \"Vous ne pouvez pas inviter d'utilisateurs sur ce bien immobilier\",\n    });\n  }\n\n  static isAllowedToRemoveCustomer({ userId, propertyId, loanId }) {\n    if (Security.hasMinimumRole({ role: ROLES.ADMIN, userId })) {\n      return;\n    }\n\n    const { property, currentUser, loan } = this.getObjects({\n      propertyId,\n      userId,\n      loanId,\n    });\n\n    const customerOwnerType = getProPropertyCustomerOwnerType({\n      customerId: loan.user._id,\n      userId,\n      propertyId,\n    });\n\n    if (\n      !isAllowedToRemoveCustomerFromProProperty({\n        property,\n        currentUser,\n        customerOwnerType,\n      })\n    ) {\n      Security.handleUnauthorized('Vous ne pouvez pas supprimer ce client de ce bien immobilier');\n    }\n  }\n\n  static isAllowedToBook({ userId, propertyId }) {\n    this.checkPermissions({\n      propertyId,\n      userId,\n      checkingFunction: isAllowedToBookProProperty,\n      errorMessage: 'Vous ne pouvez pas réserver ce bien immobilier',\n    });\n  }\n\n  static isAllowedToBookToCustomer({ propertyId, loanId, userId }) {\n    if (Security.hasMinimumRole({ role: ROLES.ADMIN, userId })) {\n      return;\n    }\n\n    const { property, currentUser, loan } = this.getObjects({\n      propertyId,\n      userId,\n      loanId,\n    });\n\n    const customerOwnerType = getProPropertyCustomerOwnerType({\n      customerId: loan.user._id,\n      userId,\n      propertyId,\n    });\n\n    if (\n      !isAllowedToBookProPropertyToCustomer({\n        property,\n        currentUser,\n        customerOwnerType,\n      })\n    ) {\n      Security.handleUnauthorized('Vous ne pouvez pas réserver ce bien immobilier à ce client');\n    }\n  }\n\n  static isAllowedToCancelBooking({ propertyId, loanId, userId }) {\n    // TODO\n  }\n\n  static isAllowedToSell({ propertyId, userId }) {\n    this.checkPermissions({\n      propertyId,\n      userId,\n      checkingFunction: isAllowedToSellProProperty,\n      errorMessage: 'Vous ne pouvez pas vendre ce bien immobilier',\n    });\n  }\n\n  static isAllowedToSellToCustomer({ propertyId, loanId, userId }) {\n    if (Security.hasMinimumRole({ role: ROLES.ADMIN, userId })) {\n      return;\n    }\n    const { property, currentUser, loan } = this.getObjects({\n      propertyId,\n      userId,\n      loanId,\n    });\n\n    const customerOwnerType = getProPropertyCustomerOwnerType({\n      customerId: loan.user._id,\n      userId,\n      propertyId,\n    });\n\n    if (\n      !isAllowedToSellProPropertyToCustomer({\n        property,\n        currentUser,\n        customerOwnerType,\n      })\n    ) {\n      Security.handleUnauthorized('Vous ne pouvez pas vendre ce bien immobilier à ce client');\n    }\n  }\n\n  static isAllowedToManagePermissions({ propertyId, userId }) {\n    this.checkPermissions({\n      propertyId,\n      userId,\n      checkingFunction: isAllowedToManageProPropertyPermissions,\n      errorMessage:\n        'Vous ne pouvez pas gérer les permissions sur ce bien immobilier',\n    });\n  }\n\n  static isAllowedToAddAnonymousLoan({ propertyId }) {\n    const property = this.getProperty({ propertyId });\n\n    if (!property || property.category !== PROPERTY_CATEGORY.PRO) {\n      Security.handleUnauthorized('Unauthorized propertyId');\n    }\n  }\n}\n\nexport default PropertySecurity;\n","import Security from '../Security';\nimport { ROLES } from '../../constants';\nimport UserService from '../../users/server/UserService';\n\nclass UserSecurity {\n  isAllowedToInsertByRole = ({ role }) => {\n    if (!role || !Object.values(ROLES).includes(role)) {\n      Security.handleUnauthorized('You can only create accounts with one of the accepted roles.');\n    } else if (!Security.currentUserIsAdmin()) {\n      Security.handleUnauthorized(\"You don't have enough privileges to create an account\");\n    } else if (role === ROLES.DEV || role === ROLES.ADMIN) {\n      Security.checkCurrentUserIsDev();\n    }\n  };\n\n  isAllowedToUpdate = (userId, userId2) => {\n    if (Security.currentUserIsAdmin()) {\n      return;\n    }\n\n    if (userId !== userId2) {\n      Security.handleUnauthorized('Pas autorisé');\n    }\n  };\n\n  isAllowedToInviteUsersToOrganisation = ({ userId, organisationId }) => {\n    if (Security.currentUserIsAdmin()) {\n      return;\n    }\n\n    const { organisations = [] } = UserService.fetchOne({\n      $filters: { _id: userId },\n      organisations: { _id: 1 },\n    });\n\n    if (!organisations.some(({ _id }) => _id === organisationId)) {\n      Security.handleUnauthorized('Pas autorisé à inviter des utilisateurs à cette organisation');\n    }\n  };\n}\n\nexport default new UserSecurity();\n","export { default as BorrowerSecurity } from './BorrowerSecurity';\nexport { default as LoanSecurity } from './LoanSecurity';\nexport { default as OfferSecurity } from './OfferSecurity';\nexport { default as PromotionSecurity } from './PromotionSecurity';\nexport { default as PropertySecurity } from './PropertySecurity';\nexport { default as UserSecurity } from './UserSecurity';\n","import { Meteor } from 'meteor/meteor';\nimport { Roles } from 'meteor/alanning:roles';\nimport get from 'lodash/get';\n\nimport { flattenObject } from '../helpers';\nimport { ROLES, COLLECTIONS } from '../constants';\nimport { DOCUMENT_USER_PERMISSIONS } from './constants';\n\nexport const SECURITY_ERROR = 'NOT_AUTHORIZED';\n\nexport default class Security {\n  static hasRole(userId, role) {\n    return Roles.userIsInRole(userId, role);\n  }\n\n  static handleUnauthorized(message) {\n    throw new Meteor.Error(SECURITY_ERROR, message);\n  }\n\n  static checkRole(userId, role) {\n    if (!this.hasRole(userId, role)) {\n      this.handleUnauthorized(`Checking role: ${role}`);\n    }\n  }\n\n  static checkLoggedIn() {\n    this.checkUserLoggedIn(Meteor.userId());\n  }\n\n  static checkUserLoggedIn(userId) {\n    if (!userId) {\n      this.handleUnauthorized('Checking if logged in, no user');\n    }\n\n    if (userId !== Meteor.userId()) {\n      this.handleUnauthorized('Checking if logged in, not the right user');\n    }\n  }\n\n  static checkLoggedOut() {\n    if (Meteor.userId()) {\n      this.handleUnauthorized('Checking if logged out');\n    }\n  }\n\n  static currentUserHasRole(role) {\n    return this.hasRole(Meteor.userId(), role);\n  }\n\n  static isUserAdmin(userId) {\n    return this.hasRole(userId, ROLES.ADMIN) || this.hasRole(userId, ROLES.DEV);\n  }\n\n  static isUserDev(userId) {\n    return this.hasRole(userId || Meteor.userId(), ROLES.DEV);\n  }\n\n  static isUserPro(userId) {\n    return (\n      this.hasRole(userId, ROLES.PRO)\n      || this.hasRole(userId, ROLES.ADMIN)\n      || this.hasRole(userId, ROLES.DEV)\n    );\n  }\n\n  static currentUserIsAdmin() {\n    const userId = Meteor.userId();\n    return this.hasRole(userId, ROLES.ADMIN) || this.hasRole(userId, ROLES.DEV);\n  }\n\n  static checkCurrentUserIsAdmin() {\n    if (!this.currentUserIsAdmin()) {\n      this.handleUnauthorized('Checking if current user is admin');\n    }\n  }\n\n  static checkUserIsAdmin(userId) {\n    if (!this.isUserAdmin(userId)) {\n      this.handleUnauthorized('Checking if user is admin');\n    }\n  }\n\n  static checkUserIsDev(userId) {\n    if (!this.isUserDev(userId)) {\n      this.handleUnauthorized('Checking if user is dev');\n    }\n  }\n\n  static checkUserIsPro(userId) {\n    if (!this.isUserPro(userId)) {\n      this.handleUnauthorized('Checking if user is pro');\n    }\n  }\n\n  static checkOwnership(doc, userId) {\n    userId = userId || Meteor.userId();\n    const userIdIsValid = doc && doc.userId === userId;\n    const userLinksIsValid = doc\n      && doc.userLinks\n      && doc.userLinks.filter(({ _id }) => userId === _id).length > 0;\n\n    if (!(userIdIsValid || userLinksIsValid)) {\n      this.handleUnauthorized('Checking ownership');\n    }\n  }\n\n  static checkRequiredPermissions({ requiredPermissions, userPermissions }) {\n    if (\n      !Object.keys(flattenObject(requiredPermissions)).every((permission) => {\n        const userPermission = get(userPermissions, permission);\n        const requiredPermission = get(requiredPermissions, permission);\n\n        if (!userPermission) {\n          return false;\n        }\n\n        if (Array.isArray(requiredPermission)) {\n          if (!Array.isArray(userPermission)) {\n            return false;\n          }\n          return requiredPermission.every(required =>\n            userPermission.includes(required));\n        }\n\n        return userPermission === requiredPermission;\n      })\n    ) {\n      this.handleUnauthorized('Checking permissions');\n    }\n  }\n\n  static hasPermissionOnDoc({\n    doc,\n    requiredPermissions,\n    userId = Meteor.userId(),\n  }) {\n    const { userLinks = [], users = [] } = doc;\n\n    const user = userLinks.find(({ _id }) => _id === userId)\n      || users.find(({ _id }) => _id === userId);\n\n    if (!user) {\n      this.handleUnauthorized('Checking permissions');\n    }\n\n    const userPermissions = user.permissions || user.$metadata.permissions;\n\n    this.checkRequiredPermissions({ requiredPermissions, userPermissions });\n  }\n\n  static checkCurrentUserIsDev() {\n    if (!this.currentUserHasRole(ROLES.DEV)) {\n      this.handleUnauthorized('unauthorized developer');\n    }\n\n    return true;\n  }\n\n  static hasMinimumRole({ role, userId }) {\n    let allowedRoles;\n\n    switch (role) {\n    case ROLES.DEV:\n      allowedRoles = [ROLES.DEV];\n      break;\n    case ROLES.ADMIN:\n      allowedRoles = [ROLES.DEV, ROLES.ADMIN];\n      break;\n    case ROLES.USER:\n      allowedRoles = [ROLES.DEV, ROLES.ADMIN, ROLES.USER];\n      break;\n    case ROLES.PRO:\n      allowedRoles = [ROLES.DEV, ROLES.ADMIN, ROLES.PRO];\n      break;\n\n    default:\n      throw new Meteor.Error(`Invalid role: ${role} at minimumRole`);\n    }\n\n    const isAllowed = allowedRoles.some(allowedRole =>\n      this.hasRole(userId, allowedRole));\n\n    if (!isAllowed) {\n      return false;\n    }\n\n    return true;\n  }\n\n  static minimumRole(role) {\n    return userId =>\n      (this.hasMinimumRole({ userId, role })\n        ? undefined\n        : this.handleUnauthorized('Unauthorized role'));\n  }\n\n  static canModifyDoc = (doc) => {\n    // Only for client side docs that replace userLinks with users\n    const { _id: userId } = Meteor.user();\n    if (this.minimumRole(ROLES.ADMIN)(userId)) {\n      return;\n    }\n\n    const me = doc.users.find(({ _id }) => _id === userId);\n\n    return (\n      me\n      && me.$metadata\n      && me.$metadata.permissions === DOCUMENT_USER_PERMISSIONS.MODIFY\n    );\n  };\n\n  static isAllowedToModifyFiles({ collection, docId, userId, fileKey }) {\n    const keyId = fileKey.split('/')[0];\n\n    if (keyId !== docId) {\n      this.handleUnauthorized('Invalid fileKey or docId');\n    }\n\n    try {\n      this.minimumRole(ROLES.ADMIN)(userId);\n      return;\n    } catch (error) {}\n\n    switch (collection) {\n    case COLLECTIONS.PROMOTIONS_COLLECTION: {\n      this.promotions.isAllowedToManageDocuments({\n        promotionId: docId,\n        userId,\n      });\n      break;\n    }\n    case COLLECTIONS.PROPERTIES_COLLECTION: {\n      if (this.properties.isPromotionLot(docId)) {\n        this.promotions.isAllowedToManagePromotionLotDocuments({\n          propertyId: docId,\n          userId,\n        });\n        break;\n      }\n\n      this.properties.isAllowedToUpdate(docId, userId);\n      break;\n    }\n    default:\n      this[collection].isAllowedToUpdate(docId);\n    }\n  }\n}\n","export const DOCUMENT_USER_PERMISSIONS = {\n  MODIFY: 'MODIFY',\n  READ: 'READ',\n};\n","import Security from './Security';\nimport {\n  LoanSecurity,\n  OfferSecurity,\n  BorrowerSecurity,\n  PropertySecurity,\n  UserSecurity,\n  PromotionSecurity,\n} from './collections';\n\nclass SecurityService extends Security {\n  static get users() {\n    return UserSecurity;\n  }\n\n  static get loans() {\n    return LoanSecurity;\n  }\n\n  static get offers() {\n    return OfferSecurity;\n  }\n\n  static get properties() {\n    return PropertySecurity;\n  }\n\n  static get borrowers() {\n    return BorrowerSecurity;\n  }\n\n  static get promotions() {\n    return PromotionSecurity;\n  }\n}\n\nexport { SECURITY_ERROR } from './Security';\nexport default SecurityService;\n","import { Meteor } from 'meteor/meteor';\nimport isArray from 'lodash/isArray';\nimport pick from 'lodash/pick';\nimport fetch from 'node-fetch';\n\nimport colors from 'core/config/colors';\nimport { getAPIUser } from 'core/api/RESTAPI/server/helpers';\nimport UserService from '../../users/server/UserService';\nimport { ROLES } from '../../constants';\nimport { fullLoan } from '../../loans/queries';\nimport Calculator from '../../../utils/Calculator';\nimport { getClientMicroservice } from '../../../utils/server/getClientUrl';\nimport { percentFormatters } from '../../../utils/formHelpers';\n\nconst LOGO_URL = 'http://d2gb1cl8lbi69k.cloudfront.net/E-Potek_icon_signature.jpg';\nconst shouldNotLog = Meteor.isDevelopment || Meteor.isAppTest || Meteor.isTest;\nconst ERRORS_TO_IGNORE = ['INVALID_STATE_ERR'];\n\nexport class SlackService {\n  send = ({\n    channel = '#clients_general',\n    username = 'e-Potek Bot',\n    text,\n    ...rest\n  }) => {\n    const body = {\n      channel,\n      username,\n      text: this.formatText(text),\n      icon_url: LOGO_URL,\n      mrkdwn: true,\n      ...rest,\n    };\n\n    if (shouldNotLog) {\n      return Promise.resolve(body);\n    }\n\n    return fetch(\n      'https://hooks.slack.com/services/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',\n      {\n        method: 'POST',\n        headers: {},\n        body: JSON.stringify(body),\n      },\n    ).catch((err) => {\n      // Somehow, this error is catched somewhere if we don't do this\n      throw err;\n    });\n  };\n\n  formatText = text => (isArray(text) ? text.join('\\n') : text);\n\n  sendAttachments = ({ attachments, ...rest }) =>\n    this.send({\n      attachments: attachments.map(this.formatAttachment),\n      ...rest,\n    });\n\n  formatAttachment = ({ text, ...rest }) => ({\n    text: this.formatText(text),\n    mrkdwn_in: ['text', 'pretext'],\n    ...rest,\n  });\n\n  sendError = ({ error, additionalData = [], userId, url, connection }) => {\n    if (Meteor.isDevelopment && !Meteor.isTest) {\n      console.log('error', error);\n      console.log('additionalData', additionalData);\n      console.log('userId', userId);\n      console.log('url', url);\n    }\n\n    if (\n      (error && ERRORS_TO_IGNORE.includes(error.name))\n      || ERRORS_TO_IGNORE.includes(error.message || error.reason)\n    ) {\n      return false;\n    }\n\n    let user;\n\n    try {\n      // Can't use Meteor.user() outside of client or server-methods-body\n      user = Meteor.user();\n      // Can't access window on server\n    } catch (err) {\n      user = null;\n    }\n\n    if (!user && userId) {\n      user = UserService.get(userId);\n    }\n\n    const attachments = [\n      {\n        title: error && error.name,\n        pretext: `Une erreur est arrivée sur *e-Potek ${getClientMicroservice()}*`,\n        text: error && (error.message || error.reason),\n        color: colors.error,\n        footer: 'c la merde',\n        ts: new Date() / 1000,\n      },\n      {\n        title: 'Stack',\n        text: error && `\\`\\`\\`${error.stack && error.stack.toString()}\\`\\`\\``,\n        color: colors.error,\n      },\n      {\n        title: 'User',\n        text: `\\`\\`\\`${JSON.stringify(user, null, 2)}\\`\\`\\``,\n        color: colors.primary,\n      },\n      {\n        title: 'URL',\n        text: url,\n        color: colors.primary,\n      },\n    ];\n\n    if (additionalData.length > 0) {\n      attachments.push(...additionalData.map((data, index) => ({\n        title: `Additional data ${index + 1}`,\n        text: JSON.stringify(data),\n      })));\n    }\n\n    if (connection) {\n      attachments.push({\n        title: 'Connection',\n        text: `\\`\\`\\`${JSON.stringify(\n          pick(connection, ['clientAdress', 'httpHeaders']),\n          null,\n          2,\n        )}\\`\\`\\``,\n      });\n    }\n\n    return this.sendAttachments({\n      channel: `errors-${Meteor.settings.public.environment}`,\n      username: this.getNotificationOrigin(user),\n      attachments,\n    });\n  };\n\n  getChannelForAdmin = admin =>\n    (admin ? `#clients_${admin.email.split('@')[0]}` : '#clients_general');\n\n  notifyAssignee = ({\n    currentUser,\n    message,\n    title,\n    link,\n    assignee,\n    notifyAlways,\n  }) => {\n    const isAdmin = currentUser\n      && (currentUser.roles.includes(ROLES.ADMIN)\n        || currentUser.roles.includes(ROLES.DEV));\n\n    if (!notifyAlways && isAdmin) {\n      return false;\n    }\n\n    const admin = assignee || (currentUser && currentUser.assignedEmployee);\n    const channel = this.getChannelForAdmin(admin);\n\n    const slackPayload = {\n      channel,\n      attachments: [{ title, title_link: link, text: message }],\n      username: this.getNotificationOrigin(currentUser),\n    };\n\n    if (\n      (Meteor.isStaging || Meteor.isDevEnvironment || Meteor.isDevelopment)\n      && !Meteor.isTest\n    ) {\n      console.log('Slack dev/staging notification');\n      console.log('Payload:', slackPayload);\n      return slackPayload;\n    }\n\n    return this.sendAttachments(slackPayload);\n  };\n\n  getNotificationOrigin = (currentUser) => {\n    const APIUser = getAPIUser();\n    const username = currentUser ? currentUser.name : undefined;\n\n    if (APIUser) {\n      const mainOrg = UserService.getUserMainOrganisation(APIUser._id);\n      return [username, `(API ${mainOrg && mainOrg.name})`].join(' ');\n    }\n\n    return username;\n  };\n\n  notifyOfUpload = ({ currentUser, fileName, docLabel, loanId }) => {\n    const isUser = currentUser && currentUser.roles.includes(ROLES.USER);\n\n    if (!isUser) {\n      return false;\n    }\n\n    const loan = loanId && fullLoan.clone({ _id: loanId }).fetchOne();\n    const loanNameEnd = loan ? ` pour ${loan.name}.` : '.';\n    const title = `Upload: ${fileName} dans ${docLabel}${loanNameEnd}`;\n    let link = `${Meteor.settings.public.subdomains.admin}/users/${currentUser._id}`;\n    let message = '';\n\n    if (loan) {\n      const infoProgress = Calculator.personalInfoPercent({ loan });\n      const propertyProgress = Calculator.propertyPercent({ loan });\n      const documentsProgress = Calculator.filesProgress({\n        loan,\n      }).percent;\n\n      const progressParts = [\n        `Emprunteurs \\`${percentFormatters.format(infoProgress)}%\\``,\n        `Documents: \\`${percentFormatters.format(documentsProgress)}%\\``,\n        `Bien immo: \\`${percentFormatters.format(propertyProgress)}%\\``,\n      ];\n\n      if (loan.hasPromotion) {\n        message = `_Promotion: \\`${loan.promotions[0].name}\\`_ `;\n        progressParts.pop(); // Remove property progress in case of a promotion\n      }\n\n      message += `*Progrès:* ${progressParts.join(', ')}`;\n      link = `${Meteor.settings.public.subdomains.admin}/loans/${loan._id}`;\n    }\n\n    return this.notifyAssignee({ currentUser, message, title, link });\n  };\n}\n\nexport default new SlackService({ serverSide: Meteor.isServer });\n","import { Meteor } from 'meteor/meteor';\n\nimport { notifyAssignee, logError, notifyOfUpload } from '../methodDefinitions';\nimport UserService from '../../users/server/UserService';\nimport SlackService from './SlackService';\nimport SecurityService from '../../security';\n\nnotifyAssignee.setHandler((context, { message, title }) => {\n  context.unblock();\n  SecurityService.checkLoggedIn();\n  const user = UserService.get(context.userId);\n  SlackService.notifyAssignee({\n    currentUser: user,\n    message,\n    title,\n    link: `${Meteor.settings.public.subdomains.admin}/users/${context.userId}`,\n  });\n});\n\nnotifyOfUpload.setHandler((context, params) => {\n  context.unblock();\n  SecurityService.checkLoggedIn();\n  const user = UserService.get(context.userId);\n  SlackService.notifyOfUpload({ currentUser: user, ...params });\n});\n\nlogError.setHandler((context, params) => {\n  context.unblock();\n  SlackService.sendError({ ...params, connection: context.connection });\n});\n","import PropertyService from 'core/api/properties/server/PropertyService';\nimport ServerEventService from '../../events/server/ServerEventService';\nimport {\n  bookPromotionLot,\n  sellPromotionLot,\n  proInviteUser,\n  anonymousLoanInsert,\n  userLoanInsert,\n  anonymousCreateUser,\n} from '../../methods';\nimport PromotionLotService from '../../promotionLots/server/PromotionLotService';\nimport UserService from '../../users/server/UserService';\nimport LoanService from '../../loans/server/LoanService';\nimport {\n  promotionLotBooked,\n  promotionLotSold,\n  referralOnlyNotification,\n  newAnonymousLoan,\n  newLoan,\n  newUser,\n} from './slackNotifications';\nimport {\n  sendPropertyInvitations,\n  sendPromotionInvitations,\n} from './slackNotificationHelpers';\n\nServerEventService.addAfterMethodListener(\n  bookPromotionLot,\n  ({ context: { userId }, params: { promotionLotId, loanId } }) => {\n    const currentUser = UserService.get(userId);\n    const promotionLot = PromotionLotService.fetchOne({\n      $filters: { _id: promotionLotId },\n      name: 1,\n      promotion: { name: 1, assignedEmployee: { email: 1 } },\n    });\n    const { user } = LoanService.fetchOne({\n      $filters: { _id: loanId },\n      user: { name: 1 },\n    });\n\n    promotionLotBooked({ currentUser, promotionLot, user });\n  },\n);\n\nServerEventService.addAfterMethodListener(\n  sellPromotionLot,\n  ({ context: { userId }, params: { promotionLotId } }) => {\n    const currentUser = UserService.get(userId);\n    const { attributedTo, ...promotionLot } = PromotionLotService.fetchOne({\n      $filters: { _id: promotionLotId },\n      name: 1,\n      promotion: { name: 1, assignedEmployee: { email: 1 } },\n      attributedTo: { _id: 1 },\n    });\n    const { user } = LoanService.fetchOne({\n      $filters: { _id: attributedTo._id },\n      user: { name: 1 },\n    });\n\n    promotionLotSold({ currentUser, promotionLot, user });\n  },\n);\n\nServerEventService.addAfterMethodListener(\n  proInviteUser,\n  ({\n    context: { userId },\n    params: { propertyIds = [], properties = [], promotionIds = [], user },\n  }) => {\n    const notificationPropertyIds = [\n      ...propertyIds,\n      ...properties.map(({ _id, externalId }) => _id || externalId),\n    ];\n    const currentUser = UserService.get(userId);\n    const invitedUser = UserService.getByEmail(user.email);\n\n    sendPropertyInvitations(notificationPropertyIds, currentUser, {\n      ...invitedUser,\n      email: user.email,\n    });\n\n    sendPromotionInvitations(promotionIds, currentUser, {\n      ...invitedUser,\n      email: user.email,\n    });\n\n    if (notificationPropertyIds.length === 0 && promotionIds.length === 0) {\n      referralOnlyNotification({\n        currentUser,\n        user: { ...invitedUser, email: user.email },\n      });\n    }\n  },\n);\n\nServerEventService.addAfterMethodListener(\n  anonymousLoanInsert,\n  ({ params: { proPropertyId, referralId }, result: loanId }) => {\n    const property = proPropertyId\n      && PropertyService.fetchOne({\n        $filters: { _id: proPropertyId },\n        address1: 1,\n      });\n    const { name: loanName } = LoanService.fetchOne({\n      $filters: { _id: loanId },\n      name: 1,\n    });\n    const referral = referralId\n      && UserService.fetchOne({\n        $filters: { _id: referralId },\n        name: 1,\n        organisations: { name: 1 },\n      });\n\n    newAnonymousLoan({ loanName, loanId, property, referral });\n  },\n);\n\nServerEventService.addAfterMethodListener(\n  userLoanInsert,\n  ({ context: { userId }, result: loanId }) => {\n    const currentUser = UserService.get(userId);\n    const { name: loanName } = LoanService.fetchOne({\n      $filters: { _id: loanId },\n      name: 1,\n    });\n\n    newLoan({ loanId, loanName, currentUser });\n  },\n);\n\nServerEventService.addAfterMethodListener(\n  anonymousCreateUser,\n  ({ result: userId }) => {\n    const currentUser = UserService.get(userId);\n    const { loans, name } = UserService.get(userId);\n\n    newUser({ loans, name, currentUser });\n  },\n);\n","import PropertyService from '../../properties/server/PropertyService';\nimport PromotionService from '../../promotions/server/PromotionService';\n\nimport {\n  promotionInviteNotification,\n  propertyInviteNotification,\n} from './slackNotifications';\n\nexport const sendPropertyInvitations = (\n  propertyIds,\n  currentUser,\n  invitedUser,\n) => {\n  propertyIds.forEach((id) => {\n    const property = PropertyService.fetchOne({\n      $filters: { $or: [{ _id: id }, { externalId: id }] },\n      address1: 1,\n    });\n    propertyInviteNotification({\n      currentUser,\n      user: invitedUser,\n      property,\n    });\n  });\n};\n\nexport const sendPromotionInvitations = (\n  promotionIds,\n  currentUser,\n  invitedUser,\n) => {\n  promotionIds.forEach((id) => {\n    const promotion = PromotionService.fetchOne({\n      $filters: { _id: id },\n      name: 1,\n      assignedEmployee: { email: 1 },\n    });\n    promotionInviteNotification({ currentUser, promotion, user: invitedUser });\n  });\n};\n","import { Meteor } from 'meteor/meteor';\n\nimport { getUserNameAndOrganisation } from 'core/api/helpers/index';\nimport SlackService from './SlackService';\n\nexport const referralOnlyNotification = ({ currentUser, user }) => {\n  const { _id: userId, firstName, lastName } = user;\n  SlackService.notifyAssignee({\n    currentUser,\n    link: `${Meteor.settings.public.subdomains.admin}/users/${userId}`,\n    title: `${firstName} ${lastName} a été invité sur e-Potek en referral uniquement`,\n  });\n};\n\nexport const propertyInviteNotification = ({ currentUser, property, user }) => {\n  const { _id: userId, firstName, lastName } = user;\n  const { address1 } = property;\n\n  SlackService.notifyAssignee({\n    currentUser,\n    link: `${Meteor.settings.public.subdomains.admin}/users/${userId}`,\n    title: `${firstName} ${lastName} a été invité au bien immo \"${address1}\"`,\n  });\n};\n\nexport const promotionInviteNotification = ({\n  currentUser,\n  promotion: { name, assignedEmployee, _id: promotionId },\n  user,\n}) => {\n  const { firstName, lastName, email } = user;\n\n  SlackService.notifyAssignee({\n    currentUser,\n    title: `Promotion ${name}`,\n    message: `${firstName} ${lastName} a été invité! ${email}`,\n    link: `${\n      Meteor.settings.public.subdomains.admin\n    }/promotions/${promotionId}`,\n    assignee: assignedEmployee,\n    notifyAlways: true,\n  });\n};\n\nexport const promotionLotBooked = ({\n  currentUser,\n  promotionLot,\n  user: { name },\n}) => {\n  const {\n    name: lotName,\n    promotion: { name: promotionName, assignedEmployee, _id: promotionId },\n  } = promotionLot;\n\n  SlackService.notifyAssignee({\n    currentUser,\n    title: `Promotion ${promotionName}`,\n    message: `Le lot ${lotName} a été réservé pour ${name}`,\n    link: `${\n      Meteor.settings.public.subdomains.admin\n    }/promotions/${promotionId}`,\n    assignee: assignedEmployee,\n    notifyAlways: true,\n  });\n};\n\nexport const promotionLotSold = ({\n  currentUser,\n  promotionLot,\n  user: { name },\n}) => {\n  const {\n    name: lotName,\n    promotion: { name: promotionName, assignedEmployee, _id: promotionId },\n  } = promotionLot;\n\n  SlackService.notifyAssignee({\n    currentUser,\n    title: `Promotion ${promotionName}`,\n    message: `Le lot ${lotName} a été vendu à ${name}`,\n    link: `${\n      Meteor.settings.public.subdomains.admin\n    }/promotions/${promotionId}`,\n    assignee: assignedEmployee,\n    notifyAlways: true,\n  });\n};\n\nexport const updateWatcherNotification = ({\n  user,\n  title,\n  collection,\n  docId,\n  message,\n}) => {\n  SlackService.notifyAssignee({\n    currentUser: user,\n    title,\n    link: `${Meteor.settings.public.subdomains.admin}/${collection}/${docId}`,\n    message,\n  });\n};\n\nexport const newAnonymousLoan = ({ loanName, loanId, property, referral }) => {\n  SlackService.notifyAssignee({\n    title: `Nouveau dossier anonyme: ${loanName}`,\n    link: `${Meteor.settings.public.subdomains.admin}/loans/${loanId}`,\n    message: property\n      ? `Pour le bien immo ${property.address1} ${\n        referral ? `de ${getUserNameAndOrganisation({ user: referral })}` : ''\n      }`\n      : '',\n  });\n};\n\nexport const newLoan = ({ loanId, loanName, currentUser }) => {\n  SlackService.notifyAssignee({\n    currentUser,\n    title: `Nouveau dossier: ${loanName}`,\n    link: `${Meteor.settings.public.subdomains.admin}/loans/${loanId}`,\n  });\n};\n\nexport const newUser = ({ loans = [], currentUser }) => {\n  SlackService.notifyAssignee({\n    currentUser,\n    title: `Nouvel utilisateur! ${\n      loans.length ? `(dossier ${loans[0].name})` : ''\n    }`,\n    link: `${Meteor.settings.public.subdomains.admin}/users/${currentUser._id}`,\n  });\n};\n","import { Match } from 'meteor/check';\nimport { Method } from '../methods/methods';\n\nexport const notifyAssignee = new Method({\n  name: 'notifyAssignee',\n  params: {\n    message: Match.Optional(String),\n    title: Match.Optional(String),\n  },\n});\n\nexport const notifyOfUpload = new Method({\n  name: 'notifyOfUpload',\n  params: {\n    docLabel: String,\n    fileName: String,\n    loanId: Match.Optional(String),\n  },\n});\n\nexport const logError = new Method({\n  name: 'logError',\n  params: {\n    error: Match.Any,\n    additionalData: Match.Maybe(Match.Any),\n    url: Match.Optional(String),\n  },\n});\n","import { exposeQuery } from '../../queries/queryHelpers';\nimport { newLoans, loanHistogram } from '../queries';\nimport { newLoansResolver, loanHistogramResolver } from '../stats';\n\nexposeQuery({\n  query: newLoans,\n  overrides: { validateParams: { period: Number } },\n  options: { allowFilterById: true },\n  resolver: newLoansResolver,\n});\n\nexposeQuery({\n  query: loanHistogram,\n  overrides: { validateParams: { period: Number } },\n  options: { allowFilterById: true },\n  resolver: loanHistogramResolver,\n});\n","import Loans from '../loans';\n\nexport const newLoans = Loans.createQuery('newLoans', () => {});\nexport const loanHistogram = Loans.createQuery('loanHistogram', () => {});\n","import moment from 'moment';\n\nimport LoanService from '../loans/server/LoanService';\n\nconst dateInPast = days =>\n  moment()\n    .subtract(days, 'days')\n    .startOf('day')\n    .toDate();\n\nexport const newLoansResolver = ({ period = 7 } = {}) => {\n  const end1 = dateInPast(period);\n  const end2 = dateInPast(period * 2);\n  const period1 = LoanService.count({\n    $filters: { createdAt: { $gte: end1 } },\n  });\n  const period2 = LoanService.count({\n    $filters: { createdAt: { $gte: end2, $lte: end1 } },\n  });\n\n  const change = period2 === 0 ? 1 : (period1 - period2) / period2;\n\n  return { count: period1, change };\n};\n\nexport const loanHistogramResolver = async ({ period = 7 }) => {\n  const aggregation = await LoanService.aggregate([\n    { $match: { createdAt: { $gte: dateInPast(period) } } },\n    {\n      $project: {\n        // Filter out time of day\n        date: { $dateToString: { format: '%Y-%m-%d', date: '$createdAt' } },\n      },\n    },\n    { $group: { _id: '$date', count: { $sum: 1 } } },\n    { $sort: { _id: 1 } },\n  ]).toArray();\n  return aggregation;\n};\n","import { Mongo } from 'meteor/mongo';\n\nimport moment from 'moment';\n\nimport { LOANS_COLLECTION, USERS_COLLECTION } from '../../constants';\nimport CollectionService from '../../helpers/CollectionService';\nimport { TASK_STATUS } from '../taskConstants';\nimport Tasks from '../tasks';\nimport { PROMOTIONS_COLLECTION } from '../../promotions/promotionConstants';\nimport { ORGANISATIONS_COLLECTION } from '../../organisations/organisationConstants';\nimport { LENDERS_COLLECTION } from '../../lenders/lenderConstants';\n\nclass TaskService extends CollectionService {\n  constructor() {\n    super(Tasks);\n  }\n\n  insert = ({\n    object: { collection, dueAt, dueAtTime, docId, assigneeLink = {}, ...rest },\n  }) => {\n    let assignee = assigneeLink._id;\n    if (!assignee && docId && collection) {\n      assignee = this.getAssigneeForDoc(docId, collection);\n    }\n\n    const taskId = Tasks.insert({\n      dueAt: this.getDueDate({ dueAt, dueAtTime }),\n      ...rest,\n    });\n\n    if (collection === LOANS_COLLECTION) {\n      this.addLink({ id: taskId, linkName: 'loan', linkId: docId });\n    }\n    if (collection === USERS_COLLECTION) {\n      this.addLink({ id: taskId, linkName: 'user', linkId: docId });\n    }\n    if (collection === PROMOTIONS_COLLECTION) {\n      this.addLink({ id: taskId, linkName: 'promotion', linkId: docId });\n    }\n    if (collection === ORGANISATIONS_COLLECTION) {\n      this.addLink({ id: taskId, linkName: 'organisation', linkId: docId });\n    }\n    if (collection === LENDERS_COLLECTION) {\n      this.addLink({ id: taskId, linkName: 'lender', linkId: docId });\n    }\n\n    if (assignee) {\n      this.addLink({\n        id: taskId,\n        linkName: 'assignee',\n        linkId: assignee,\n      });\n    }\n\n    return taskId;\n  };\n\n  remove = ({ taskId }) => Tasks.remove(taskId);\n\n  update = ({ taskId, object }) => Tasks.update(taskId, { $set: object });\n\n  getTaskById = taskId => Tasks.findOne(taskId);\n\n  getTasksForDoc = docId => Tasks.find({ docId }).fetch();\n\n  getDueDate = ({ dueAt, dueAtTime }) => {\n    if (dueAt && !dueAtTime) {\n      return dueAt;\n    }\n\n    if (dueAtTime) {\n      const [hours = 0, minutes = 0] = dueAtTime.split(':');\n      const date = moment(dueAt || undefined)\n        .hour(hours)\n        .minute(minutes)\n        .seconds(0)\n        .milliseconds(0);\n\n      if (dueAt) {\n        return date.toDate();\n      }\n\n      if (moment().isAfter(date)) {\n        // If it is 14:00, and you choose 10:00 as the time, you don't want it\n        // in the past, but tomorrow\n        date.add(1, 'd');\n      }\n      return date.toDate();\n    }\n  };\n\n  complete = ({ taskId }) =>\n    this.update({\n      taskId,\n      object: { status: TASK_STATUS.COMPLETED, completedAt: new Date() },\n    });\n\n  changeStatus = ({ taskId, newStatus }) =>\n    this.update({\n      taskId,\n      object: {\n        status: newStatus,\n        completedAt:\n          newStatus === TASK_STATUS.COMPLETED ? new Date() : undefined,\n      },\n    });\n\n  changeAssignedTo = ({ taskId, newAssigneeId }) => {\n    this.addLink({ id: taskId, linkName: 'assignee', linkId: newAssigneeId });\n  };\n\n  getAssigneeForDoc = (docId, collection) => {\n    const doc = Mongo.Collection.get(collection)\n      .createQuery({ $filters: { _id: docId }, assignee: 1 })\n      .fetchOne();\n\n    return doc && doc.assignee ? doc.assignee._id : null;\n  };\n}\n\nexport default new TaskService();\n","import { Match } from 'meteor/check';\n\nimport moment from 'moment';\n\nimport { exposeQuery } from '../../queries/queryHelpers';\nimport { tasks } from '../queries';\n\nconst getUptoDate = (uptoDate) => {\n  switch (uptoDate) {\n  case 'TODAY':\n    return moment()\n      .endOf('day')\n      .toDate();\n  case 'TOMORROW':\n    return moment()\n      .endOf('day')\n      .add(1, 'days')\n      .endOf('day')\n      .toDate();\n\n  default:\n    return null;\n  }\n};\n\nexposeQuery({\n  query: tasks,\n  overrides: {\n    embody: (body, params) => {\n      body.$filter = ({\n        filters,\n        params: { assignee, loanId, status, uptoDate },\n      }) => {\n        if (assignee) {\n          filters['assigneeLink._id'] = assignee;\n        }\n\n        if (status) {\n          filters.status = status;\n        }\n\n        if (getUptoDate(uptoDate)) {\n          filters.$or = [\n            { dueAt: { $lt: getUptoDate(uptoDate) } },\n            { dueAt: { $exists: false } },\n          ];\n        }\n\n        if (loanId) {\n          filters['loanLink._id'] = loanId;\n        }\n      };\n      body.$postFilter = (results, postFilterParams) => {\n        const { _userId } = postFilterParams;\n\n        return results.filter((task) => {\n          const {\n            assigneeLink: { _id: assigneeId } = {},\n            isPrivate = false,\n          } = task;\n\n          if (isPrivate && assigneeId) {\n            return assigneeId === _userId;\n          }\n\n          return true;\n        });\n      };\n    },\n    validateParams: {\n      assignee: Match.Maybe(Match.OneOf(Object, String)),\n      loanId: Match.Maybe(String),\n      status: Match.Maybe(Match.OneOf(Object, String)),\n      uptoDate: Match.Maybe(String),\n    },\n  },\n  options: { allowFilterById: true },\n});\n","import NotificationService from '../../notifications/server/NotificationService';\nimport { TASK_STATUS } from '../taskConstants';\nimport Tasks from '..';\n\nTasks.before.update((\n  userId,\n  { _id: taskId, status: oldStatus, dueAt: oldDate },\n  fieldNames,\n  modifier,\n) => {\n  if (fieldNames.includes('status')) {\n    const newStatus = modifier.$set && modifier.$set.status;\n    if (\n      oldStatus !== TASK_STATUS.COMPLETED\n        && newStatus === TASK_STATUS.COMPLETED\n    ) {\n      modifier.$set.completedAt = new Date();\n    }\n\n    if (\n      oldStatus === TASK_STATUS.COMPLETED\n        && newStatus !== TASK_STATUS.COMPLETED\n    ) {\n      modifier.$set.completedAt = null;\n    }\n\n    if (\n      newStatus === TASK_STATUS.COMPLETED\n        || newStatus === TASK_STATUS.CANCELLED\n    ) {\n      NotificationService.readNotificationAll({\n        filters: { 'taskLink._id': taskId },\n      });\n    }\n  }\n\n  if (fieldNames.includes('dueAt')) {\n    const newDate = modifier.$set && modifier.$set.dueAt;\n\n    if ((newDate && newDate.getTime()) !== (oldDate && oldDate.getTime())) {\n      NotificationService.remove({ 'taskLink._id': taskId });\n    }\n  }\n});\n","import SecurityService from '../../security';\nimport TaskService from './TaskService';\nimport {\n  taskInsert,\n  taskUpdate,\n  taskComplete,\n  taskChangeStatus,\n  setAssigneeOfTask,\n} from '../methodDefinitions';\n\ntaskInsert.setHandler(({ userId }, params) => {\n  SecurityService.checkUserIsAdmin(userId);\n  return TaskService.insert(params);\n});\n\ntaskUpdate.setHandler(({ userId }, params) => {\n  SecurityService.checkUserIsAdmin(userId);\n  return TaskService.update(params);\n});\n\ntaskComplete.setHandler(({ userId }, params) => {\n  SecurityService.checkUserIsAdmin(userId);\n  return TaskService.complete(params);\n});\n\ntaskChangeStatus.setHandler(({ userId }, params) => {\n  SecurityService.checkUserIsAdmin(userId);\n  return TaskService.changeStatus(params);\n});\n\nsetAssigneeOfTask.setHandler(({ userId }, params) => {\n  SecurityService.checkUserIsAdmin(userId);\n  return TaskService.changeAssignedTo(params);\n});\n","import Tasks from '../tasks';\n\nTasks.addReducers({});\n","import UserService from '../../users/server/UserService';\nimport ServerEventService from '../../events/server/ServerEventService';\nimport {\n  requestLoanVerification,\n  adminCreateUser,\n  anonymousCreateUser,\n} from '../../methods';\nimport { LOANS_COLLECTION, USERS_COLLECTION } from '../../constants';\nimport TaskService from './TaskService';\n\nServerEventService.addAfterMethodListener(\n  requestLoanVerification,\n  ({ params: { loanId } }) => {\n    TaskService.insert({\n      object: {\n        title: 'Vérification du dossier demandée',\n        docId: loanId,\n        collection: LOANS_COLLECTION,\n      },\n    });\n  },\n);\n\nServerEventService.addAfterMethodListener(\n  [adminCreateUser, anonymousCreateUser],\n  ({ result: userId }) => {\n    if (userId) {\n      const user = UserService.fetchOne({\n        $filters: { _id: userId },\n        assignedEmployeeId: 1,\n      });\n\n      if (user && !user.assignedEmployeeId) {\n        TaskService.insert({\n          object: {\n            title: 'Assigner un conseiller',\n            docId: userId,\n            collection: USERS_COLLECTION,\n          },\n        });\n      } else {\n        TaskService.insert({\n          object: {\n            title: 'Nouvel utilisateur: prendre contact',\n            docId: userId,\n            collection: USERS_COLLECTION,\n          },\n        });\n      }\n    }\n  },\n);\n","import * as methodDefinitions from './methodDefinitions';\n\nexport * from './methodDefinitions';\nexport { default } from './tasks';\nexport const taskMethods = methodDefinitions;\n","import Tasks from './tasks';\nimport { Users, Loans } from '..';\nimport Notifications from '../notifications';\nimport Promotions from '../promotions';\nimport Organisations from '../organisations';\nimport Lenders from '../lenders';\n\nTasks.addLinks({\n  assignee: {\n    field: 'assigneeLink',\n    collection: Users,\n    type: 'one',\n    metadata: true,\n  },\n  loan: {\n    field: 'loanLink',\n    collection: Loans,\n    type: 'one',\n    metadata: true,\n  },\n  user: {\n    field: 'userLink',\n    collection: Users,\n    type: 'one',\n    metadata: true,\n  },\n  promotion: {\n    field: 'promotionLink',\n    collection: Promotions,\n    type: 'one',\n    metadata: true,\n  },\n  organisation: {\n    field: 'organisationLink',\n    collection: Organisations,\n    type: 'one',\n    metadata: true,\n  },\n  lender: {\n    field: 'lenderLink',\n    collection: Lenders,\n    type: 'one',\n    metadata: true,\n  },\n  notifications: {\n    collection: Notifications,\n    inversedBy: 'task',\n    autoremove: true,\n  },\n});\n","import { Method } from '../methods/methods';\n\nexport const taskInsert = new Method({\n  name: 'taskInsert',\n  params: {\n    object: Object,\n  },\n});\n\nexport const taskUpdate = new Method({\n  name: 'taskUpdate',\n  params: {\n    taskId: String,\n    object: Object,\n  },\n});\n\nexport const taskComplete = new Method({\n  name: 'taskComplete',\n  params: {\n    taskId: String,\n  },\n});\n\nexport const taskChangeStatus = new Method({\n  name: 'taskChangeStatus',\n  params: {\n    taskId: String,\n    newStatus: String,\n  },\n});\n\nexport const setAssigneeOfTask = new Method({\n  name: 'setAssigneeOfTask',\n  params: {\n    taskId: String,\n    newAssigneeId: String,\n  },\n});\n","import Tasks from '.';\nimport { TASK_QUERIES } from './taskConstants';\nimport { task } from '../fragments';\n\nexport const tasks = Tasks.createQuery(TASK_QUERIES.TASKS, task());\n","export const TASKS_COLLECTION = 'tasks';\n\nexport const TASK_STATUS = {\n  ACTIVE: 'ACTIVE',\n  COMPLETED: 'COMPLETED',\n  CANCELLED: 'CANCELLED',\n};\n\nexport const TASK_QUERIES = {\n  TASKS: 'TASKS',\n  UNASSIGNED_TASKS: 'UNASSIGNED_TASKS',\n  TASKS_FOR_DOC: 'TASKS_FOR_DOC',\n  SIDENAV_TASKS: 'SIDENAV_TASKS',\n};\n\nexport const TASK_PRIORITIES = {\n  DEFAULT: 'DEFAULT',\n  HIGH: 'HIGH',\n};\n","import { Mongo } from 'meteor/mongo';\nimport SimpleSchema from 'simpl-schema';\n\nimport { createdAt, updatedAt } from '../helpers/sharedSchemas';\nimport {\n  TASK_STATUS,\n  TASKS_COLLECTION,\n  TASK_PRIORITIES,\n} from './taskConstants';\n\nconst Tasks = new Mongo.Collection(TASKS_COLLECTION);\n\n// Prevent all client side modifications of mongoDB\nTasks.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true,\n});\n\nTasks.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false,\n});\n\nexport const TasksSchema = new SimpleSchema({\n  createdAt,\n  updatedAt,\n  status: {\n    type: String,\n    defaultValue: TASK_STATUS.ACTIVE,\n    allowedValues: Object.values(TASK_STATUS),\n  },\n  completedAt: {\n    type: Date,\n    optional: true,\n  },\n  dueAt: {\n    type: Date,\n    optional: true,\n  },\n  createdBy: {\n    type: String,\n    optional: true,\n    autoValue() {\n      if (this.isInsert) {\n        return this.userId;\n      }\n      this.unset();\n    },\n  },\n  assigneeLink: {\n    type: Object,\n    optional: true,\n  },\n  'assigneeLink._id': {\n    type: String,\n    optional: true,\n  },\n  title: {\n    type: String,\n    optional: true,\n  },\n  description: {\n    type: String,\n    optional: true,\n  },\n  loanLink: {\n    type: Object,\n    optional: true,\n  },\n  'loanLink._id': {\n    type: String,\n    optional: true,\n  },\n  userLink: {\n    type: Object,\n    optional: true,\n  },\n  'userLink._id': {\n    type: String,\n    optional: true,\n  },\n  promotionLink: {\n    type: Object,\n    optional: true,\n  },\n  'promotionLink._id': {\n    type: String,\n    optional: true,\n  },\n  organisationLink: {\n    type: Object,\n    optional: true,\n  },\n  'organisationLink._id': {\n    type: String,\n    optional: true,\n  },\n  lenderLink: {\n    type: Object,\n    optional: true,\n  },\n  'lenderLink._id': {\n    type: String,\n    optional: true,\n  },\n  isPrivate: {\n    type: Boolean,\n    defaultValue: false,\n  },\n  priority: {\n    type: String,\n    defaultValue: TASK_PRIORITIES.DEFAULT,\n    allowedValues: Object.values(TASK_PRIORITIES),\n  },\n});\n\nTasks.attachSchema(TasksSchema);\nexport default Tasks;\n","import { Mongo } from 'meteor/mongo';\n\nimport intersection from 'lodash/intersection';\nimport difference from 'lodash/difference';\nimport moment from 'moment';\n\nimport { LOANS_COLLECTION } from 'core/api/loans/loanConstants';\nimport LoanService from 'core/api/loans/server/LoanService';\nimport Intl from '../../../utils/server/intl';\nimport { toMoney } from '../../../utils/conversionFunctions';\nimport { percentFormatters } from '../../../utils/formHelpers';\nimport { BORROWERS_COLLECTION, PROPERTIES_COLLECTION } from '../../constants';\nimport { updateWatcherNotification } from '../../slack/server/slackNotifications';\nimport UserService from '../../users/server/UserService';\nimport CollectionService from '../../helpers/CollectionService';\nimport UpdateWatchers from './updateWatchers';\n\nclass UpdateWatcherService extends CollectionService {\n  constructor() {\n    super(UpdateWatchers);\n  }\n\n  addUpdateWatching({ collection, fields, shouldWatch = () => true }) {\n    const that = this;\n    const hookHandle = collection.after.update(function (\n      userId,\n      doc,\n      fieldNames,\n    ) {\n      const collectionName = collection._name;\n      const changedFields = that.getChangedFields({ fieldNames, fields });\n\n      if (!changedFields || changedFields.length === 0) {\n        return;\n      }\n\n      if (shouldWatch({ userId, fieldNames })) {\n        that.updateWatcher({\n          userId,\n          collectionName,\n          doc,\n          changedFields,\n          previousDoc: this.previous,\n        });\n      }\n    });\n\n    return hookHandle;\n  }\n\n  getChangedFields({ fieldNames, fields }) {\n    return intersection(fieldNames, fields);\n  }\n\n  updateWatcher({ collectionName, doc, changedFields, previousDoc, userId }) {\n    const existingUpdateWatcher = this.findOne({\n      collection: collectionName,\n      docId: doc._id,\n    });\n\n    if (!existingUpdateWatcher) {\n      this.insertWatcher({\n        userId,\n        doc,\n        previousDoc,\n        collection: collectionName,\n        changedFields,\n      });\n    } else {\n      this.update({\n        currentWatcher: existingUpdateWatcher,\n        doc,\n        previousDoc,\n        changedFields,\n      });\n    }\n  }\n\n  insertWatcher({ doc, previousDoc, collection, changedFields, userId }) {\n    return this.insert({\n      userId,\n      docId: doc._id,\n      collection,\n      updatedFields: this.createFieldDiffs({\n        previous: previousDoc,\n        current: doc,\n        fieldNames: changedFields,\n      }),\n    });\n  }\n\n  createFieldDiffs({ previous, current, fieldNames }) {\n    return fieldNames\n      .map((fieldName) => {\n        if (previous[fieldName] === current[fieldName]) {\n          return null;\n        }\n\n        return {\n          fieldName,\n          previousValue: previous[fieldName],\n          currentValue: current[fieldName],\n        };\n      })\n      .filter(x => x);\n  }\n\n  getUpdatedFieldDiffs({ updatedFields, doc }) {\n    return updatedFields\n      .map((updatedField) => {\n        const newValue = doc[updatedField.fieldName];\n\n        // If a value is changed back to its old value, remove it\n        if (newValue === updatedField.previousValue) {\n          return null;\n        }\n\n        if (newValue !== undefined) {\n          return { ...updatedField, currentValue: newValue };\n        }\n\n        return updatedField;\n      })\n      .filter(x => x);\n  }\n\n  update({ currentWatcher, doc, previousDoc, changedFields }) {\n    const previouslyUpdatedFields = currentWatcher.updatedFields.map(({ fieldName }) => fieldName);\n    const newFields = difference(changedFields, previouslyUpdatedFields);\n\n    const updatedDiffs = this.getUpdatedFieldDiffs({\n      updatedFields: currentWatcher.updatedFields,\n      doc,\n    });\n\n    const newDiffs = this.createFieldDiffs({\n      current: doc,\n      previous: previousDoc,\n      fieldNames: newFields,\n    });\n\n    return this.baseUpdate(\n      { _id: currentWatcher._id },\n      { $set: { updatedFields: [...updatedDiffs, ...newDiffs] } },\n    );\n  }\n\n  getOldUpdateWatchers({ secondsFromNow }) {\n    const date = new Date();\n    date.setSeconds(date.getSeconds() - secondsFromNow);\n    const foundWatchers = this.find({ updatedAt: { $lt: date } }).fetch();\n\n    return foundWatchers;\n  }\n\n  processUpdateWatcher({\n    _id: updateWatcherId,\n    userId,\n    docId,\n    collection,\n    updatedFields,\n  }) {\n    const user = UserService.fetchOne({\n      $filters: { _id: userId },\n      assignedEmployee: { email: 1 },\n      name: 1,\n      roles: 1,\n    });\n\n    if (!user) {\n      return this.remove(updateWatcherId);\n    }\n\n    const title = this.getNotificationTitle({ docId, collection });\n    const message = this.formatUpdatedFields(updatedFields);\n\n    updateWatcherNotification({\n      user,\n      title,\n      collection,\n      docId,\n      message,\n    });\n\n    this.remove(updateWatcherId);\n  }\n\n  getNotificationTitle({ docId, collection }) {\n    const doc = Mongo.Collection.get(collection).findOne({ _id: docId });\n\n    // Document has been deleted\n    if (!doc) {\n      return;\n    }\n\n    switch (collection) {\n    case BORROWERS_COLLECTION: {\n      const { firstName, lastName } = doc;\n      return `Modifications pour l'emprunteur \"${firstName\n          || ''} ${lastName || ''}\"`;\n    }\n\n    case PROPERTIES_COLLECTION: {\n      const { address1 } = doc;\n      return `Modifications pour le bien immo \"${address1}\"`;\n    }\n\n    case LOANS_COLLECTION: {\n      const { name, promotions, hasPromotion } = LoanService.fetchOne({\n        $filters: { _id: docId },\n        name: 1,\n        promotions: { name: 1 },\n        hasPromotion: 1,\n      });\n      const text = `Modifications dans le dossier ${name}`;\n      const suffix = hasPromotion ? ` (${promotions[0].name})` : '';\n      return text + suffix;\n    }\n\n    default:\n      return `Modifications dans ${collection}`;\n    }\n  }\n\n  formatUpdatedFields(updatedFields) {\n    return updatedFields.map(field => this.formatField(field)).join('\\n');\n  }\n\n  formatField({ fieldName, previousValue, currentValue }) {\n    const previousValueIsNonEmpty = previousValue\n      || (Array.isArray(previousValue) && previousValue.length > 0);\n\n    if (previousValueIsNonEmpty) {\n      if (Array.isArray(currentValue)) {\n        return this.formatArrayDiff(fieldName, previousValue, currentValue);\n      }\n\n      return `*${Intl.formatMessage({\n        id: `Forms.${fieldName}`,\n      })}*: ${this.formatValue(previousValue, fieldName)} -> ${this.formatValue(\n        currentValue,\n        fieldName,\n      )}`;\n    }\n\n    return `*${Intl.formatMessage({\n      id: `Forms.${fieldName}`,\n    })}*: ${this.formatValue(currentValue, fieldName)}`;\n  }\n\n  formatArrayDiff(fieldName, previousValue, currentValue) {\n    const stringifiedPrevious = previousValue.map(JSON.stringify);\n    const stringifiedCurrent = currentValue.map(JSON.stringify);\n    const differentValues = currentValue\n      .map((val, i) => ({\n        val,\n        _currIndex: i,\n        _atIndex: stringifiedPrevious.indexOf(stringifiedCurrent[i]),\n      }))\n      .filter(({ _atIndex }) => _atIndex < 0);\n\n    const diff = differentValues\n      .map(({ _currIndex, val }) => {\n        const prefix = `\\`${_currIndex + 1}\\`\\n`;\n        const prev = previousValue && previousValue[_currIndex];\n\n        if (val && typeof val === 'object') {\n          return `${prefix}${this.formatObjectDiff(fieldName, prev, val)}`;\n        }\n\n        if (prev) {\n          const previous = this.formatValue(prev, fieldName);\n          const current = this.formatValue(val, fieldName, true);\n\n          return `${prefix}${previous} -> ${current}`;\n        }\n\n        return `${prefix}${this.formatValue(val, fieldName)}`;\n      })\n      .join('\\n');\n\n    const removedValues = previousValue.length > currentValue.length\n      ? previousValue\n        .map((item, i) => {\n          if (i >= currentValue.length) {\n            const prefix = `\\`${i + 1}\\`\\n`;\n\n            return `${prefix}${this.formatValue(\n              item,\n              fieldName,\n            )} -> _supprimé_`;\n          }\n          return null;\n        })\n        .filter(x => x)\n        .join('\\n')\n      : '';\n\n    return `*${Intl.formatMessage({\n      id: `Forms.${fieldName}`,\n    })}*:\\n${diff}${removedValues}`;\n  }\n\n  formatObjectDiff(parentName, previousValue, currentValue) {\n    const updated = Object.keys(currentValue)\n      .map((key) => {\n        const value = currentValue[key];\n        const previous = previousValue && previousValue[key];\n\n        if (value === previous) {\n          return null;\n        }\n\n        if (previous !== undefined) {\n          return `*${Intl.formatMessage({\n            id: `Forms.${parentName}.${key}`,\n          })}*: ${previous} -> ${value}`;\n        }\n\n        return `*${Intl.formatMessage({\n          id: `Forms.${parentName}.${key}`,\n        })}*: ${value}`;\n      })\n      .filter(x => x)\n      .join('\\n');\n\n    return updated;\n  }\n\n  formatValue(value, parentKey, skipPrefix) {\n    if (typeof value === 'boolean') {\n      return value ? 'Oui' : 'Non';\n    }\n\n    if (typeof value === 'number') {\n      return value === 0\n        ? '0'\n        : value > 1\n          ? toMoney(value)\n          : `${percentFormatters.format(value)}%`;\n    }\n\n    if (!value) {\n      return '-';\n    }\n\n    if (value instanceof Date) {\n      return moment(value).format('D/M/YYYY');\n    }\n\n    if (Array.isArray(value)) {\n      return value.map(item => this.formatValue(item, parentKey)).join('\\n');\n    }\n\n    if (typeof value === 'object') {\n      return Object.keys(value)\n        .map((key) => {\n          const val = value[key];\n\n          if (skipPrefix) {\n            return this.formatValue(val, `${parentKey}.${key}`);\n          }\n\n          return `*${Intl.formatMessage({\n            id: `Forms.${parentKey}.${key}`,\n          })}*: ${this.formatValue(val, `${parentKey}.${key}`)}`;\n        })\n        .join(', ');\n    }\n\n    return value;\n  }\n\n  manageUpdateWatchers({ secondsFromNow }) {\n    this.getOldUpdateWatchers({ secondsFromNow }).forEach(updateWatcher =>\n      this.processUpdateWatcher(updateWatcher));\n  }\n}\n\nexport default new UpdateWatcherService();\n","import { SyncedCron } from 'meteor/littledata:synced-cron';\nimport UpdateWatcherService from './UpdateWatcherService';\nimport SlackService from '../../slack/server/SlackService';\n\nSyncedCron.add({\n  name: 'Manage update watchers',\n  schedule(parser) {\n    return parser.text('every 1 minute');\n  },\n  job() {\n    try {\n      UpdateWatcherService.manageUpdateWatchers({ secondsFromNow: 120 });\n    } catch (error) {\n      SlackService.sendError({\n        error,\n        additionalData: ['Manage update watchers CRON error'],\n      });\n    }\n  },\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\n\nimport SimpleSchema from 'simpl-schema';\n\nimport { createdAt, updatedAt } from '../../helpers/sharedSchemas';\nimport { UPDATE_WATCHERS_COLLECTION } from '../updateWatcherConstants';\n\nconst UpdateWatchers = new Mongo.Collection(UPDATE_WATCHERS_COLLECTION);\n\nUpdateWatchers.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true,\n});\n\nUpdateWatchers.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false,\n});\n\nconst UpdateWatcherSchema = new SimpleSchema({\n  createdAt,\n  updatedAt,\n  collection: String,\n  docId: String,\n  userId: { type: String, optional: true },\n  updatedFields: { type: Array, defaultValue: [] },\n  'updatedFields.$': { type: Object, blackbox: true },\n});\n\nUpdateWatchers.attachSchema(UpdateWatcherSchema);\n\nMeteor.startup(() => {\n  UpdateWatchers._ensureIndex({ docId: 1, collection: 1 });\n  UpdateWatchers._ensureIndex({ updatedAt: -1 });\n});\n\nexport default UpdateWatchers;\n","export const UPDATE_WATCHERS_COLLECTION = 'updateWatchers';\n","import { Meteor } from 'meteor/meteor';\nimport { Roles } from 'meteor/alanning:roles';\nimport { Accounts } from 'meteor/accounts-base';\nimport NodeRSA from 'node-rsa';\nimport omit from 'lodash/omit';\n\nimport { EMAIL_IDS } from '../../email/emailConstants';\nimport { sendEmail } from '../../methods';\nimport { fullUser } from '../../fragments';\nimport CollectionService from '../../helpers/CollectionService';\nimport LoanService from '../../loans/server/LoanService';\nimport PropertyService from '../../properties/server/PropertyService';\nimport PromotionService from '../../promotions/server/PromotionService';\nimport OrganisationService from '../../organisations/server/OrganisationService';\nimport SecurityService from '../../security';\nimport { getUserNameAndOrganisation } from '../../helpers';\nimport { ROLES } from '../userConstants';\nimport { roundRobinAdvisors } from './userServerContants';\nimport Users from '../users';\n\nexport class UserServiceClass extends CollectionService {\n  constructor({ employees }) {\n    super(Users);\n    this.setupRoundRobin(employees);\n  }\n\n  get(userId) {\n    return this.fetchOne({ $filters: { _id: userId }, ...fullUser() });\n  }\n\n  getByEmail(email) {\n    return Accounts.findUserByEmail(email);\n  }\n\n  createUser = ({ options, role }) => {\n    if (!options.password) {\n      // password is not even allowed to be undefined,\n      // it has to be stripped from the options object\n      options = omit(options, ['password']);\n    }\n\n    const newUserId = Accounts.createUser(options);\n\n    if (role) {\n      Roles.setUserRoles(newUserId, role);\n    }\n\n    return newUserId;\n  };\n\n  adminCreateUser = ({\n    options: { email, password, sendEnrollmentEmail, ...additionalData },\n    role = ROLES.USER,\n    adminId,\n  }) => {\n    const newUserId = this.createUser({ options: { email, password }, role });\n\n    if (additionalData.phoneNumber && additionalData.phoneNumber.length) {\n      additionalData.phoneNumbers = [additionalData.phoneNumber];\n    }\n\n    this.update({ userId: newUserId, object: additionalData });\n\n    if (role === ROLES.USER && adminId && !additionalData.assignedEmployeeId) {\n      this.assignAdminToUser({ userId: newUserId, adminId });\n    } else if (!additionalData.assignedEmployeeId) {\n      this.setAssigneeForNewUser(newUserId);\n    }\n\n    if (sendEnrollmentEmail) {\n      this.sendEnrollmentEmail({ userId: newUserId });\n    }\n\n    return newUserId;\n  };\n\n  anonymousCreateUser = ({ user, loanId, referralId }) => {\n    const userId = this.adminCreateUser({\n      options: { ...user, sendEnrollmentEmail: true },\n    });\n\n    if (loanId) {\n      LoanService.assignLoanToUser({ userId, loanId });\n    }\n\n    if (referralId) {\n      this.setReferredBy({ userId, proId: referralId });\n    }\n\n    return userId;\n  };\n\n  // This should remain a simple inequality check\n  doesUserExist = ({ email }) => this.getByEmail(email) != null;\n\n  sendVerificationEmail = ({ userId }) =>\n    Accounts.sendVerificationEmail(userId);\n\n  sendEnrollmentEmail = ({ userId }) => {\n    try {\n      Accounts.sendEnrollmentEmail(userId);\n    } catch (error) {\n      // FIXME: Temporary fix for meteor toys in dev\n      // https://github.com/MeteorToys/meteor-devtools/issues/111\n      if (error.message !== 'MeteorToys is not defined') {\n        throw error;\n      }\n    }\n  };\n\n  remove = ({ userId }) => Users.remove(userId);\n\n  allowUpdate = ({ object }) => object && Object.keys(object).length !== 0;\n\n  update = ({ userId, object }) =>\n    this.allowUpdate({ object }) && Users.update(userId, { $set: object });\n\n  assignAdminToUser = ({ userId, adminId }) =>\n    adminId && this.update({ userId, object: { assignedEmployeeId: adminId } });\n\n  getUsersByRole = role => Users.find({ roles: { $in: [role] } }).fetch();\n\n  setRole = ({ userId, role }) => Roles.setUserRoles(userId, role);\n\n  getUserById = ({ userId }) => Users.findOne(userId);\n\n  getUserByPasswordResetToken = ({ token }) =>\n    Users.findOne(\n      { 'services.password.reset.token': token },\n      { fields: { firstName: 1, lastName: 1, emails: 1 } },\n    );\n\n  getLoginToken = ({ userId }) => {\n    const user = Users.findOne(userId, { fields: { services: 1 } });\n\n    return (\n      user.services.password\n      && user.services.password.reset\n      && user.services.password.reset.token\n    );\n  };\n\n  testCreateUser = ({ user }) => Users.insert(user);\n\n  hasPromotion = ({ userId, promotionId }) => {\n    const loans = LoanService.fetch({\n      $filters: { userId },\n      promotionLinks: 1,\n    });\n\n    if (!promotionId) {\n      // Return true if any promotion exists\n      return (\n        loans\n        && loans.some(({ promotionLinks }) => promotionLinks && promotionLinks.length > 0)\n      );\n    }\n\n    return (\n      loans\n      && loans.some(({ promotionLinks = [] }) =>\n        promotionLinks.some(({ _id }) => _id === promotionId))\n    );\n  };\n\n  hasProperty = ({ userId, propertyId }) => {\n    if (!propertyId) {\n      return false;\n    }\n\n    const loans = LoanService.fetch({\n      $filters: { userId },\n      propertyIds: 1,\n    });\n\n    return (\n      loans\n      && loans.some(({ propertyIds = [] }) =>\n        propertyIds.some(id => id === propertyId))\n    );\n  };\n\n  changeEmail = ({ userId, newEmail }) => {\n    const { emails } = Users.findOne(userId);\n    Accounts.addEmail(userId, newEmail);\n    Accounts.removeEmail(userId, emails[0].address);\n    Accounts.sendVerificationEmail(userId);\n  };\n\n  updateOrganisations = ({ userId, newOrganisations = [] }) => {\n    const { organisations: oldOrganisations = [] } = this.get(userId);\n\n    oldOrganisations.forEach(({ _id: organisationId }) =>\n      this.removeLink({\n        id: userId,\n        linkName: 'organisations',\n        linkId: organisationId,\n      }));\n\n    newOrganisations.forEach(({ _id: organisationId, metadata }) =>\n      this.linkOrganisation({ userId, organisationId, metadata }));\n  };\n\n  testUserAccount = ({ email, password, role }) => {\n    if (this.doesUserExist({ email })) {\n      // Sometimes this methods is called twice from a test.....???????\n      // Apparently due to a duplicate websocket connection\n      return this.getByEmail(email);\n    }\n    const userId = Accounts.createUser({ email, password });\n    Roles.setUserRoles(userId, role);\n    return this.get(userId);\n  };\n\n  generateKeyPair = ({ userId }) => {\n    const key = new NodeRSA();\n    key.generateKeyPair(512);\n    const publicKey = key\n      .exportKey('pkcs1-public-pem')\n      .replace(/\\r?\\n|\\r/g, '');\n    const privateKey = key\n      .exportKey('pkcs1-private-pem')\n      .replace(/\\r?\\n|\\r/g, '');\n    const createdAt = new Date();\n    this._update({\n      id: userId,\n      object: { apiPublicKey: { publicKey, createdAt } },\n    });\n    return { publicKey, privateKey, createdAt };\n  };\n\n  proReferUser = ({ user, proUserId, shareSolvency }) => {\n    const { email } = user;\n    if (this.doesUserExist({ email })) {\n      throw new Meteor.Error(\"Ce client existe déjà. Vous ne pouvez pas le référer, mais vous pouvez l'inviter sur un de vos biens immobiliers.\");\n    }\n\n    const { userId, pro, admin } = this.proCreateUser({\n      user,\n      proUserId,\n      sendInvitation: false,\n    });\n\n    const loanId = LoanService.fullLoanInsert({ userId });\n    LoanService.update({ loanId, object: { shareSolvency } });\n\n    return sendEmail.run({\n      emailId: EMAIL_IDS.REFER_USER,\n      userId,\n      params: {\n        proUserId,\n        proName: getUserNameAndOrganisation({ user: pro }),\n        ctaUrl: this.getEnrollmentUrl({ userId }),\n      },\n    });\n  };\n\n  proCreateUser = ({\n    user: { email, firstName, lastName, phoneNumber },\n    proUserId,\n    sendInvitation = true,\n    adminId,\n  }) => {\n    let pro;\n    let assignedEmployeeId;\n\n    if (proUserId) {\n      pro = this.fetchOne({\n        $filters: { _id: proUserId },\n        name: 1,\n        assignedEmployeeId: 1,\n        organisations: { name: 1 },\n      });\n\n      const { assignedEmployeeId: proAssignedEmployeeId } = pro;\n\n      assignedEmployeeId = proAssignedEmployeeId;\n    } else if (adminId) {\n      assignedEmployeeId = adminId;\n    }\n\n    const isNewUser = !this.doesUserExist({ email });\n    let userId;\n    let admin;\n\n    if (isNewUser) {\n      admin = this.get(assignedEmployeeId);\n      userId = this.adminCreateUser({\n        options: {\n          email,\n          sendEnrollmentEmail: sendInvitation && !pro && Meteor.isProduction,\n          firstName,\n          lastName,\n          phoneNumbers: [phoneNumber],\n        },\n        adminId: admin && admin._id,\n      });\n\n      if (pro) {\n        this.setReferredBy({ userId, proId: proUserId });\n      }\n    } else {\n      const {\n        _id: existingUserId,\n        assignedEmployeeId: existingAssignedEmployeeId,\n      } = this.getByEmail(email);\n\n      admin = this.get(existingAssignedEmployeeId);\n      userId = existingUserId;\n    }\n\n    return { userId, admin, pro, isNewUser };\n  };\n\n  proInviteUser = ({\n    user,\n    propertyIds = [],\n    promotionIds = [],\n    properties = [],\n    proUserId,\n    adminId,\n    shareSolvency,\n  }) => {\n    const referOnly = propertyIds.length === 0\n      && promotionIds.length === 0\n      && properties.length === 0;\n\n    if (referOnly) {\n      return this.proReferUser({ user, proUserId, shareSolvency });\n    }\n\n    const { invitedBy } = user;\n    const { userId, admin, pro, isNewUser } = this.proCreateUser({\n      user,\n      proUserId: proUserId || invitedBy,\n      adminId,\n      // Invitation will be sent by the propertyInvitationEmail or\n      // promotionInvitationEmail\n      sendInvitation: false,\n    });\n\n    let promises = [];\n\n    if (propertyIds && propertyIds.length) {\n      promises = [\n        ...promises,\n        PropertyService.inviteUser({\n          propertyIds,\n          admin,\n          pro,\n          userId,\n          isNewUser,\n          shareSolvency,\n        }),\n      ];\n    }\n    if (promotionIds && promotionIds.length) {\n      promises = [\n        ...promises,\n        ...promotionIds.map(promotionId =>\n          PromotionService.inviteUser({\n            promotionId,\n            userId,\n            pro,\n            isNewUser,\n            promotionLotIds: user.promotionLotIds,\n            showAllLots: user.showAllLots,\n            shareSolvency,\n          })),\n      ];\n    }\n    if (properties && properties.length) {\n      const internalPropertyIds = properties.map((property) => {\n        let propertyId;\n\n        const existingProperty = PropertyService.fetchOne({\n          $filters: { externalId: property.externalId },\n        });\n\n        if (!existingProperty) {\n          propertyId = PropertyService.insertExternalProperty({\n            userId: pro._id,\n            property,\n          });\n        } else {\n          propertyId = existingProperty._id;\n        }\n\n        if (!propertyId) {\n          throw new Meteor.Error('No property found');\n        }\n\n        return propertyId;\n      });\n\n      promises = [\n        ...promises,\n        PropertyService.inviteUser({\n          propertyIds: internalPropertyIds,\n          admin,\n          pro,\n          userId,\n          isNewUser,\n          shareSolvency,\n        }),\n      ];\n    }\n\n    return Promise.all(promises);\n  };\n\n  getEnrollmentUrl({ userId }) {\n    let domain = Meteor.settings.public.subdomains.app;\n\n    if (SecurityService.hasRole(userId, ROLES.PRO)) {\n      domain = Meteor.settings.public.subdomains.pro;\n    }\n\n    const { token } = Accounts.generateResetToken(\n      userId,\n      null,\n      'enrollAccount',\n    );\n    return `${domain}/enroll-account/${token}`;\n  }\n\n  setReferredBy({ userId, proId, organisationId }) {\n    if (!organisationId) {\n      const mainOrg = this.getUserMainOrganisation(proId);\n      organisationId = mainOrg && mainOrg._id;\n    }\n\n    return this.update({\n      userId,\n      object: {\n        referredByUserLink: proId,\n        referredByOrganisationLink: organisationId,\n      },\n    });\n  }\n\n  setReferredByOrganisation({ userId, organisationId }) {\n    return this.update({\n      userId,\n      object: { referredByOrganisationLink: organisationId },\n    });\n  }\n\n  proInviteUserToOrganisation({ user, organisationId, title, proId, adminId }) {\n    const { email, phoneNumber } = user;\n    let assigneeId;\n\n    if (this.doesUserExist({ email })) {\n      throw new Meteor.Error('Cet utilisateur existe déjà');\n    }\n\n    if (proId) {\n      const { assignedEmployeeId } = this.fetchOne({\n        $filters: { _id: proId },\n        assignedEmployeeId: 1,\n      });\n      assigneeId = assignedEmployeeId;\n    } else {\n      assigneeId = adminId;\n    }\n\n    const userId = this.adminCreateUser({\n      options: {\n        ...user,\n        phoneNumbers: [phoneNumber],\n        sendEnrollmentEmail: !Meteor.isDevelopment, // Meteor toys is not defined\n      },\n      role: ROLES.PRO,\n      adminId: assigneeId,\n    });\n\n    this.linkOrganisation({ userId, organisationId, metadata: { title } });\n\n    return userId;\n  }\n\n  linkOrganisation({ userId, organisationId, metadata }) {\n    const { organisations: userOrganisations = [] } = this.fetchOne({\n      $filters: { _id: userId },\n      organisations: { _id: 1 },\n    });\n    const isMain = userOrganisations.length === 0;\n\n    this.addLink({\n      id: userId,\n      linkName: 'organisations',\n      linkId: organisationId,\n      metadata: { ...metadata, isMain, shareCustomers: true },\n    });\n  }\n\n  getUserMainOrganisation(userId) {\n    const organisations = OrganisationService.fetch({\n      $filters: { userLinks: { $elemMatch: { _id: userId } } },\n      userLinks: 1,\n      name: 1,\n    });\n\n    let mainOrganisation = null;\n    if (organisations.length === 1) {\n      mainOrganisation = organisations[0];\n    } else if (organisations.length > 1) {\n      mainOrganisation = organisations.find(({ userLinks }) => {\n        const userLink = userLinks.find(({ _id }) => _id === userId);\n        return userLink.isMain;\n      }) || organisations[0];\n    }\n\n    return mainOrganisation;\n  }\n\n  proSetShareCustomers({ userId, organisationId, shareCustomers }) {\n    this.updateLinkMetadata({\n      id: userId,\n      linkName: 'organisations',\n      linkId: organisationId,\n      metadata: { shareCustomers },\n    });\n  }\n\n  setupRoundRobin(employees = []) {\n    this.employees = employees\n      .map((email) => {\n        const employee = this.getByEmail(email);\n        if (employee) {\n          return employee._id;\n        }\n      })\n      .filter(x => x);\n  }\n\n  setAssigneeForNewUser(userId) {\n    const { roles, assignedEmployeeId } = this.fetchOne({\n      $filters: { _id: userId },\n      assignedEmployeeId: 1,\n      roles: 1,\n    });\n\n    if (assignedEmployeeId) {\n      return;\n    }\n    let newAssignee;\n\n    if (roles.includes(ROLES.USER)) {\n      const lastCreatedUser = this.fetchOne({\n        $filters: {\n          roles: ROLES.USER,\n          assignedEmployeeId: { $in: this.employees },\n        },\n        $options: { sort: { createdAt: -1 } },\n        assignedEmployeeId: 1,\n        createdAt: 1,\n      });\n\n      if (lastCreatedUser && lastCreatedUser.assignedEmployeeId) {\n        const index = this.employees.indexOf(lastCreatedUser.assignedEmployeeId);\n        if (index >= this.employees.length - 1) {\n          newAssignee = this.employees[0];\n        } else {\n          newAssignee = this.employees[index + 1];\n        }\n      } else {\n        // Assign the very first user\n        newAssignee = this.employees[0];\n      }\n    }\n\n    return this.update({ userId, object: { assignedEmployeeId: newAssignee } });\n  }\n}\n\nexport default new UserServiceClass({ employees: roundRobinAdvisors });\n","import { Accounts } from 'meteor/accounts-base';\nimport pick from 'lodash/pick';\n\nAccounts.onCreateUser((options, user) => {\n  if (options.profile) {\n    return {\n      ...pick(options.profile, ['firstName', 'lastName', 'phoneNumbers']),\n      ...user,\n    };\n  }\n\n  return user;\n});\n","import { Match } from 'meteor/check';\nimport { Roles } from 'meteor/alanning:roles';\nimport { Meteor } from 'meteor/meteor';\n\nimport { exposeQuery } from '../../queries/queryHelpers';\nimport { ROLES } from '../../constants';\nimport SecurityService from '../../security';\nimport {\n  adminUsers,\n  appUser,\n  currentUser,\n  proReferredByUsers,\n  userEmails,\n  userSearch,\n  proUser,\n} from '../queries';\nimport { proReferredByUsersResolver } from './resolvers';\n\nexposeQuery({\n  query: adminUsers,\n  overrides: {\n    embody: (body, params) => {\n      body.$filter = ({\n        filters,\n        params: { roles, _id, admins, assignedEmployeeId, _userId },\n      }) => {\n        if (_id) {\n          filters._id = _id;\n        }\n\n        if (roles) {\n          filters.roles = { $in: roles };\n        }\n\n        if (admins) {\n          const userIsDev = Roles.userIsInRole(Meteor.user(), ROLES.DEV);\n\n          if (userIsDev) {\n            filters.roles = { $in: [ROLES.ADMIN, ROLES.DEV] };\n          } else {\n            filters.roles = { $in: [ROLES.ADMIN] };\n          }\n        }\n\n        if (assignedEmployeeId) {\n          filters.assignedEmployeeId = assignedEmployeeId;\n        }\n      };\n    },\n    validateParams: {\n      roles: Match.Maybe([String]),\n      admins: Match.Maybe(Boolean),\n      assignedEmployeeId: Match.Maybe(Match.OneOf(Object, String)),\n    },\n  },\n  options: { allowFilterById: true },\n});\n\nexposeQuery({\n  query: appUser,\n  overrides: {\n    firewall(userId, params) {\n      if (!userId) {\n        // Don't throw unauthorized error here, it causes race-conditions in E2E tests\n        // to not reload this subscription\n        // So simply set userId to an impossible id\n        params._userId = 'none';\n      }\n    },\n    embody: (body) => {\n      body.$filter = ({ filters, params }) => {\n        filters._id = params._userId;\n      };\n    },\n  },\n});\n\nexposeQuery({\n  query: currentUser,\n  overrides: {\n    firewall(userId, params) {\n      if (!userId) {\n        // Don't throw unauthorized error here, it causes race-conditions in E2E tests\n        // to not reload this subscription\n        // So simply set userId to an impossible id\n        params._userId = 'none';\n      }\n    },\n    embody: (body) => {\n      // This will deepExtend your body\n      body.$filter = ({ filters, params }) => {\n        filters._id = params._userId;\n      };\n    },\n  },\n});\n\nexposeQuery({\n  query: proReferredByUsers,\n  overrides: {\n    firewall(userId, params) {\n      const {\n        userId: providedUserId,\n        organisationId,\n        ownReferredUsers,\n      } = params;\n\n      SecurityService.checkUserIsPro(userId);\n\n      if (providedUserId) {\n        SecurityService.checkUserIsAdmin(userId);\n        params.userId = providedUserId;\n      }\n\n      if (ownReferredUsers) {\n        params.userId = userId;\n      }\n\n      if (organisationId) {\n        SecurityService.checkUserIsAdmin(userId);\n      }\n    },\n    validateParams: {\n      userId: Match.Maybe(String),\n      organisationId: Match.Maybe(String),\n      ownReferredUsers: Match.Maybe(Boolean),\n    },\n  },\n  resolver: proReferredByUsersResolver,\n});\n\nexposeQuery({ query: userEmails, options: { allowFilterById: true } });\n\nexposeQuery({\n  query: userSearch,\n  overrides: {\n    validateParams: {\n      searchQuery: Match.Maybe(String),\n      roles: Match.Maybe([String]),\n    },\n  },\n});\n\nexposeQuery({\n  query: proUser,\n  overrides: {\n    firewall(userId, params) {},\n    embody: (body) => {\n      body.$filter = ({ filters, params }) => {\n        filters._id = params._userId;\n      };\n    },\n  },\n});\n","import formatNumbersHook from '../../../utils/phoneFormatting';\nimport Users from '../users';\n\nformatNumbersHook(Users, 'phoneNumbers');\n","import { Meteor } from 'meteor/meteor';\n\nimport Analytics from 'core/api/analytics/server/Analytics';\nimport EVENTS from 'core/api/analytics/events';\nimport SecurityService from '../../security';\nimport {\n  doesUserExist,\n  sendVerificationLink,\n  assignAdminToUser,\n  assignAdminToNewUser,\n  setRole,\n  adminCreateUser,\n  updateUser,\n  getUserByPasswordResetToken,\n  testCreateUser,\n  removeUser,\n  sendEnrollmentEmail,\n  changeEmail,\n  userUpdateOrganisations,\n  testUserAccount,\n  generateApiKeyPair,\n  proInviteUser,\n  getUserByEmail,\n  setUserReferredBy,\n  setUserReferredByOrganisation,\n  proInviteUserToOrganisation,\n  proSetShareCustomers,\n  anonymousCreateUser,\n  referralExists,\n} from '../methodDefinitions';\nimport UserService from './UserService';\nimport PropertyService from '../../properties/server/PropertyService';\nimport { ROLES } from '../userConstants';\n\ndoesUserExist.setHandler((context, { email }) =>\n  UserService.doesUserExist({ email }));\n\nsendVerificationLink.setHandler((context, { userId } = {}) => {\n  if (userId) {\n    SecurityService.checkCurrentUserIsAdmin();\n  } else {\n    SecurityService.checkLoggedIn();\n  }\n  const id = userId || Meteor.userId();\n\n  if (Meteor.isDevelopment) {\n    console.log(`Not sending verification link in development for userId: ${id}`);\n    return false;\n  }\n\n  return UserService.sendVerificationEmail({ userId: id });\n});\n\nassignAdminToUser.setHandler((context, { userId, adminId }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n\n  return UserService.assignAdminToUser({ userId, adminId });\n});\n\nassignAdminToNewUser.setHandler((context, { userId, adminId }) => {\n  // same action as assignAdminToUser, but with a dedicated\n  // listener that would complete & reassign the user's tasks\n  SecurityService.checkCurrentUserIsAdmin();\n\n  return UserService.assignAdminToUser({ userId, adminId });\n});\n\nsetRole.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return UserService.setRole(params);\n});\n\nadminCreateUser.setHandler((context, { options, role }) => {\n  SecurityService.users.isAllowedToInsertByRole({ role });\n  return UserService.adminCreateUser({\n    options,\n    role,\n    adminId: context.userId,\n  });\n});\n\nupdateUser.setHandler((context, { userId, object }) => {\n  SecurityService.users.isAllowedToUpdate(userId, context.userId);\n\n  if (object.roles) {\n    SecurityService.handleUnauthorized('Vous ne pouvez pas changer le rôle');\n  }\n\n  return UserService.update({ userId, object });\n});\n\ngetUserByPasswordResetToken.setHandler((context, params) =>\n  UserService.getUserByPasswordResetToken(params));\n\ntestCreateUser.setHandler((context, params) => {\n  if (!Meteor.isTest) {\n    throw new Meteor.Error('Test only');\n  }\n  return UserService.testCreateUser(params);\n});\n\nremoveUser.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsDev();\n  UserService.remove(params);\n});\n\nsendEnrollmentEmail.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return UserService.sendEnrollmentEmail(params);\n});\n\nchangeEmail.setHandler(({ userId }, params) => {\n  SecurityService.users.isAllowedToUpdate(userId, params.userId);\n  return UserService.changeEmail(params);\n});\n\nuserUpdateOrganisations.setHandler((context, { userId, newOrganisations }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return UserService.updateOrganisations({ userId, newOrganisations });\n});\n\ntestUserAccount.setHandler((context, params) => {\n  if (Meteor.isTest) {\n    return UserService.testUserAccount(params);\n  }\n});\n\ngenerateApiKeyPair.setHandler((context, params) => {\n  SecurityService.checkUserIsPro(context.userId);\n  return UserService.generateKeyPair(params);\n});\n\nproInviteUser.setHandler((context, params) => {\n  const { userId } = context;\n  const { propertyIds, promotionIds, properties } = params;\n  SecurityService.checkUserIsPro(userId);\n\n  if (propertyIds && propertyIds.length) {\n    propertyIds.forEach(propertyId =>\n      SecurityService.properties.isAllowedToInviteCustomers({\n        userId,\n        propertyId,\n      }));\n  }\n\n  if (promotionIds && promotionIds.length) {\n    promotionIds.forEach(promotionId =>\n      SecurityService.promotions.isAllowedToInviteCustomers({\n        promotionId,\n        userId,\n      }));\n  }\n\n  if (properties && properties.length) {\n    properties.forEach(({ externalId }) => {\n      const existingProperty = PropertyService.fetchOne({\n        $filters: { externalId },\n      });\n      if (existingProperty) {\n        SecurityService.properties.isAllowedToInviteCustomers({\n          userId,\n          propertyId: existingProperty._id,\n        });\n      }\n    });\n  }\n\n  // Only pass proUserId if this is a pro user\n  const isProUser = SecurityService.hasRole(userId, ROLES.PRO);\n\n  return UserService.proInviteUser({\n    ...params,\n    proUserId: isProUser ? userId : undefined,\n    adminId: !isProUser ? userId : undefined,\n  });\n});\n\ngetUserByEmail.setHandler(({ userId }, { email }) => {\n  SecurityService.checkUserIsPro(userId);\n  const user = UserService.getByEmail(email);\n\n  if (user) {\n    return UserService.fetchOne({\n      $filters: { $and: [{ _id: user._id }, { roles: { $in: [ROLES.PRO] } }] },\n      name: 1,\n      organisations: { name: 1 },\n    });\n  }\n});\n\nsetUserReferredBy.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return UserService.setReferredBy(params);\n});\n\nsetUserReferredByOrganisation.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return UserService.setReferredByOrganisation(params);\n});\n\nproInviteUserToOrganisation.setHandler(({ userId }, params) => {\n  const { organisationId } = params;\n  SecurityService.checkUserIsPro(userId);\n  SecurityService.users.isAllowedToInviteUsersToOrganisation({\n    userId,\n    organisationId,\n  });\n\n  if (SecurityService.currentUserIsAdmin()) {\n    params.adminId = userId;\n  } else {\n    params.proId = userId;\n  }\n\n  return UserService.proInviteUserToOrganisation(params);\n});\n\nproSetShareCustomers.setHandler(({ userId }, params) => {\n  SecurityService.checkUserIsPro(userId);\n  return UserService.proSetShareCustomers(params);\n});\n\nanonymousCreateUser.setHandler((context, params) => {\n  if (params.loanId) {\n    SecurityService.loans.checkAnonymousLoan(params.loanId);\n  }\n\n  const userId = UserService.anonymousCreateUser(params);\n\n  const analytics = new Analytics({ ...context, userId });\n  analytics.alias(params.trackingId);\n  analytics.track(EVENTS.USER_CREATED, {\n    userId,\n    origin: params.referralId ? 'referral' : 'organic',\n    referralId: params.referralId,\n  });\n  if (params.loanId) {\n    analytics.track(EVENTS.LOAN_ANONYMOUS_LOAN_CLAIMED, {\n      loanId: params.loanId,\n    });\n  }\n\n  return userId;\n});\n\nreferralExists.setHandler((context, params) => {\n  const { ref } = params;\n  const referral = UserService.fetchOne({\n    $filters: { _id: ref, roles: { $in: [ROLES.PRO] } },\n  });\n\n  return !!referral;\n});\n","import { proUser as proUserFragment } from '../../fragments';\nimport UserService from './UserService';\n\nexport const proReferredByUsersResolver = ({\n  userId,\n  organisationId: providedOrganisationId,\n}) => {\n  let organisationId;\n  if (!providedOrganisationId) {\n    const { organisations = [] } = UserService.fetchOne({\n      $filters: { _id: userId },\n      organisations: { _id: 1 },\n    });\n    organisationId = !!organisations.length && organisations[0]._id;\n  } else {\n    organisationId = providedOrganisationId;\n  }\n\n  const users = UserService.fetch({\n    $filters: {\n      $or: [\n        userId && { referredByUserLink: userId },\n        organisationId && { referredByOrganisationLink: organisationId },\n      ].filter(x => x),\n    },\n    ...proUserFragment(),\n  });\n\n  return users;\n};\n","import Users from '..';\nimport { getEmailsForAddress } from '../../email/server/mandrill';\nimport { createMeteorAsyncFunction } from '../../helpers';\nimport assigneeReducer from '../../reducers/assigneeReducer';\n\nUsers.addReducers({\n  ...assigneeReducer(),\n  sentEmails: {\n    body: { emails: 1 },\n    reduce: user =>\n      // Simplify this to use email reducer once feature/pro is merged with grapher fixes\n      createMeteorAsyncFunction(getEmailsForAddress)(user.emails[0].address),\n  },\n});\n","export const roundRobinAdvisors = ['lydia@e-potek.ch', 'max@e-potek.ch'];\n","import * as methodDefinitions from './methodDefinitions';\n\nexport * from './methodDefinitions';\nexport { default } from './users';\nexport const userMutations = methodDefinitions;\n","import Users from './users';\nimport {\n  Loans,\n  Offers,\n  Borrowers,\n  Properties,\n  Promotions,\n  Contacts,\n  Organisations,\n  Tasks,\n} from '..';\n\nconst assignedEmployeeCache = {\n  _id: 1,\n  firstName: 1,\n  lastName: 1,\n};\n\nUsers.addLinks({\n  assignedEmployee: {\n    collection: Users,\n    field: 'assignedEmployeeId',\n    type: 'one',\n    denormalize: {\n      field: 'assignedEmployeeCache',\n      body: assignedEmployeeCache,\n    },\n  },\n  assignedEndUsers: {\n    collection: Users,\n    inversedBy: 'assignedEmployee',\n  },\n  assignedPromotions: {\n    collection: Promotions,\n    inversedBy: 'assignedEmployee',\n  },\n  assignedTasks: {\n    collection: Tasks,\n    inversedBy: 'assignee',\n  },\n  borrowers: {\n    collection: Borrowers,\n    inversedBy: 'user',\n    autoremove: true,\n  },\n  contact: {\n    collection: Contacts,\n    inversedBy: 'user',\n  },\n  loans: {\n    collection: Loans,\n    inversedBy: 'user',\n    autoremove: true,\n  },\n  promotions: {\n    collection: Promotions,\n    inversedBy: 'users',\n  },\n  properties: {\n    collection: Properties,\n    inversedBy: 'user',\n    autoremove: true,\n  },\n  offers: {\n    collection: Offers,\n    inversedBy: 'user',\n  },\n  organisations: {\n    collection: Organisations,\n    inversedBy: 'users',\n  },\n  proProperties: {\n    collection: Properties,\n    inversedBy: 'users',\n  },\n  referredByUser: {\n    collection: Users,\n    field: 'referredByUserLink',\n    type: 'one',\n  },\n  referredCustomers: {\n    collection: Users,\n    inversedBy: 'referredByUser',\n    type: 'many',\n  },\n  referredByOrganisation: {\n    collection: Organisations,\n    field: 'referredByOrganisationLink',\n    type: 'one',\n  },\n  tasks: {\n    collection: Tasks,\n    inversedBy: 'user',\n    autoremove: true,\n  },\n});\n","import { check, Match } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { Method } from '../methods/methods';\n\nexport const doesUserExist = new Method({\n  name: 'doesUserExist',\n  params: {\n    email: String,\n  },\n});\n\nexport const sendVerificationLink = new Method({\n  name: 'sendVerificationLink',\n  params: {\n    userId: Match.Optional(String),\n  },\n});\n\nexport const assignAdminToUser = new Method({\n  name: 'assignAdminToUser',\n  params: {\n    userId: String,\n    adminId: String,\n  },\n});\n\nexport const assignAdminToNewUser = new Method({\n  name: 'assignAdminToNewUser',\n  params: {\n    userId: String,\n    adminId: String,\n  },\n});\n\nexport const setRole = new Method({\n  name: 'setRole',\n  params: {\n    userId: String,\n    role: String,\n  },\n});\n\nexport const adminCreateUser = new Method({\n  name: 'adminCreateUser',\n  params: {\n    options: Object,\n    role: String,\n  },\n});\n\nexport const updateUser = new Method({\n  name: 'updateUser',\n  params: {\n    userId: String,\n    object: Object,\n  },\n});\n\nexport const getUserByPasswordResetToken = new Method({\n  name: 'getUserByPasswordResetToken',\n  params: {\n    token: String,\n  },\n});\n\nexport const testCreateUser = new Method({\n  name: 'testCreateUser',\n  params: {\n    user: Object,\n  },\n});\n\nexport const removeUser = new Method({\n  name: 'removeUser',\n  params: {\n    userId: String,\n  },\n});\n\nexport const sendEnrollmentEmail = new Method({\n  name: 'sendEnrollmentEmail',\n  params: {\n    userId: String,\n  },\n});\n\nexport const changeEmail = new Method({\n  name: 'changeEmail',\n  params: {\n    userId: String,\n    newEmail: String,\n  },\n});\n\nexport const userUpdateOrganisations = new Method({\n  name: 'userUpdateOrganisations',\n  params: {\n    userId: String,\n    newOrganisations: Array,\n  },\n});\n\nexport const testUserAccount = new Method({\n  name: 'testUserAccount',\n  params: {\n    email: String,\n    password: String,\n    role: String,\n  },\n});\n\nexport const generateApiKeyPair = new Method({\n  name: 'generateApiKeyPair',\n  params: {\n    userId: String,\n  },\n});\n\nexport const proInviteUser = new Method({\n  name: 'proInviteUser',\n  params: {\n    user: Object,\n    propertyIds: Match.Maybe([String]),\n    promotionIds: Match.Maybe([String]),\n    properties: Match.Maybe(Array),\n    shareSolvency: Match.Maybe(Match.OneOf(Boolean, undefined)),\n  },\n});\n\nexport const getUserByEmail = new Method({\n  name: 'getUserByEmail',\n  params: {\n    email: String,\n  },\n});\n\nexport const setUserReferredBy = new Method({\n  name: 'setUserReferredBy',\n  params: {\n    userId: String,\n    proId: String,\n  },\n});\n\nexport const setUserReferredByOrganisation = new Method({\n  name: 'setUserReferredByOrganisation',\n  params: { userId: String, organisationId: String },\n});\n\nexport const proInviteUserToOrganisation = new Method({\n  name: 'proInviteUserToOrganisation',\n  params: { user: Object, organisationId: String, title: String },\n});\n\nexport const proSetShareCustomers = new Method({\n  name: 'proSetShareCustomers',\n  params: { userId: String, organisationId: String, shareCustomers: Boolean },\n});\n\nexport const anonymousCreateUser = new Method({\n  name: 'anonymousCreateUser',\n  params: {\n    loanId: Match.Maybe(String),\n    user: {\n      firstName: String,\n      lastName: String,\n      email: String,\n      phoneNumber: String,\n    },\n    trackingId: String,\n    referralId: Match.Maybe(String),\n  },\n});\n\nexport const referralExists = new Method({\n  name: 'referralExists',\n  params: {\n    ref: String,\n  },\n});\n","import {\n  createRegexQuery,\n  generateMatchAnyWordRegexp,\n} from '../helpers/mongoHelpers';\nimport {\n  adminUser,\n  appUser as appUserFragment,\n  fullUser,\n  proUser as proUserFragment,\n} from '../fragments';\n\nimport { USER_QUERIES } from './userConstants';\nimport Users from '.';\n\nexport const adminUsers = Users.createQuery(\n  USER_QUERIES.ADMIN_USERS,\n  adminUser(),\n);\n\nexport const appUser = Users.createQuery(\n  USER_QUERIES.APP_USER,\n  appUserFragment(),\n  { scoped: true },\n);\n\nexport const currentUser = Users.createQuery(\n  USER_QUERIES.CURRENT_USER,\n  fullUser(),\n  { scoped: true },\n);\n\nexport const proReferredByUsers = Users.createQuery(\n  USER_QUERIES.PRO_REFERRED_BY,\n  () => {},\n);\n\nexport const proUser = Users.createQuery(\n  USER_QUERIES.PRO_USER,\n  proUserFragment(),\n);\n\nexport const userEmails = Users.createQuery(USER_QUERIES.USER_EMAILS, {\n  $filter({ filters, params: { _id } }) {\n    filters._id = _id;\n  },\n  sentEmails: 1,\n});\n\nexport const userSearch = Users.createQuery(USER_QUERIES.USER_SEARCH, {\n  $filter({ filters, params: { searchQuery, roles } }) {\n    const formattedSearchQuery = generateMatchAnyWordRegexp(searchQuery);\n    if (roles) {\n      filters.roles = { $in: roles };\n    }\n    filters.$or = [\n      createRegexQuery('_id', searchQuery),\n      createRegexQuery('emails.0.address', searchQuery),\n      createRegexQuery('firstName', searchQuery),\n      createRegexQuery('lastName', searchQuery),\n      {\n        $and: [\n          createRegexQuery('firstName', formattedSearchQuery),\n          createRegexQuery('lastName', formattedSearchQuery),\n        ],\n      },\n    ];\n  },\n  assignedEmployee: { name: 1 },\n  createdAt: 1,\n  email: 1,\n  loans: { name: 1 },\n  name: 1,\n  organisations: { name: 1 },\n  roles: 1,\n  $options: { limit: 5 },\n});\n","import { getUserDisplayName } from 'core/utils/userFunctions';\nimport Users from './users';\n\nUsers.addReducers({\n  email: {\n    body: {\n      emails: 1,\n    },\n    reduce: ({ emails }) => emails && emails.length && emails[0].address,\n  },\n  name: {\n    body: { firstName: 1, lastName: 1, emails: 1 },\n    reduce: getUserDisplayName,\n  },\n  phoneNumber: {\n    body: {\n      phoneNumbers: 1,\n    },\n    reduce: ({ phoneNumbers = [] }) =>\n      (!!phoneNumbers.length && phoneNumbers[0]) || '',\n  },\n});\n","// Not actually used to create a meteor collection, but useful to switch()\n// on collection names\nexport const USERS_COLLECTION = 'users';\n\nexport const ROLES = {\n  ADMIN: 'admin',\n  DEV: 'dev',\n  USER: 'user',\n  PRO: 'pro',\n};\n\nexport const USER_QUERIES = {\n  ADMIN_USERS: 'ADMIN_USERS',\n  APP_USER: 'APP_USER',\n  CURRENT_USER: 'CURRENT_USER',\n  PRO_REFERRED_BY: 'PRO_REFERRED_BY',\n  PRO_USER: 'PRO_USER',\n  REFERRED_USERS: 'REFERRED_USERS',\n  USER_EMAILS: 'USER_EMAILS',\n  USER_SEARCH: 'USER_SEARCH',\n};\n\nexport const USER_EVENTS = {\n  USER_CREATED: 'USER_CREATED',\n};\n\nexport const LOCAL_STORAGE_REFERRAL = 'REFERRAL_ID';\nexport const LOCAL_STORAGE_OLD_REFERRAL = 'OLD_REFERRAL_ID';\n","import SimpleSchema from 'simpl-schema';\nimport { Meteor } from 'meteor/meteor';\n\nimport { createdAt, updatedAt, cacheField } from '../helpers/sharedSchemas';\nimport { ROLES } from './userConstants';\n\nexport const UserSchema = new SimpleSchema({\n  username: {\n    type: String,\n    // For accounts-password, either emails or username is required, but not both. It is OK to make this\n    // optional here because the accounts-password package does its own validation.\n    // Third-party login packages may not require either. Adjust this schema as necessary for your usage.\n    optional: true,\n  },\n  emails: {\n    type: Array,\n    // For accounts-password, either emails or username is required, but not both. It is OK to make this\n    // optional here because the accounts-password package does its own validation.\n    // Third-party login packages may not require either. Adjust this schema as necessary for your usage.\n    optional: true,\n  },\n  'emails.$': {\n    type: Object,\n  },\n  'emails.$.address': {\n    type: String,\n    regEx: SimpleSchema.RegEx.Email,\n  },\n  'emails.$.verified': {\n    type: Boolean,\n  },\n  createdAt,\n  updatedAt,\n  // Make sure this services field is in your schema if you're using any of the accounts packages\n  services: {\n    type: Object,\n    optional: true,\n    blackbox: true,\n  },\n  // Add `roles` to your schema if you use the meteor-roles package.\n  // Option 1: Object type\n  // If you specify that type as Object, you must also specify the\n  // `Roles.GLOBAL_GROUP` group whenever you add a user to a role.\n  // Example:\n  // Roles.addUsersToRoles(userId, [\"admin\"], Roles.GLOBAL_GROUP);\n  // You can't mix and match adding with and without a group since\n  // you will fail validation in some cases.\n  // roles: {\n  //   type: Object,\n  //   optional: true,\n  //   blackbox: true,\n  // },\n  // Option 2: [String] type\n  // If you are sure you will never need to use role groups, then\n  // you can specify [String] as the type\n  roles: {\n    type: Array,\n    optional: true,\n    defaultValue: [ROLES.USER],\n  },\n  'roles.$': {\n    type: String,\n    allowedValues: Object.values(ROLES),\n  },\n  // In order to avoid an 'Exception in setInterval callback' from Meteor\n  heartbeat: {\n    type: Date,\n    optional: true,\n  },\n  assignedEmployeeId: {\n    type: String,\n    optional: true,\n  },\n  firstName: {\n    type: String,\n    optional: true,\n  },\n  lastName: {\n    type: String,\n    optional: true,\n  },\n  phoneNumbers: {\n    type: Array,\n    optional: true,\n  },\n  'phoneNumbers.$': {\n    type: String,\n  },\n  apiPublicKey: {\n    type: Object,\n    optional: true,\n  },\n  'apiPublicKey.publicKey': {\n    type: String,\n    optional: true,\n  },\n  'apiPublicKey.createdAt': { type: Date, optional: true },\n  referredByUserLink: { type: String, optional: true },\n  referredByOrganisationLink: { type: String, optional: true },\n  assignedEmployeeCache: cacheField,\n});\n\nMeteor.users.attachSchema(UserSchema);\n\nconst Users = Meteor.users;\nexport default Users;\n","export { default as withSmartQuery } from './withSmartQuery';\nexport { branch, renderComponent } from 'recompose';\n","// @flow\nimport React, { Component } from 'react';\n\n// Determine whether to skip adding an HOC `container` based on a `skip`\n// function, only change the wrappedComponent when needed to avoid UI flashes\nconst makeSkipContainer = (container, skip) => WrappedComponent =>\n  class extends Component {\n    constructor(props) {\n      super(props);\n      this.setWrappedComponent(props);\n    }\n\n    componentWillReceiveProps(nextProps) {\n      if (skip(this.props) !== skip(nextProps)) {\n        this.setWrappedComponent(nextProps);\n        this.forceUpdate();\n      }\n    }\n\n    setWrappedComponent(props) {\n      this.wrappedComponent = skip(props)\n        ? WrappedComponent\n        : container(WrappedComponent);\n    }\n\n    render() {\n      const FinalComponent = this.wrappedComponent;\n      return <FinalComponent {...this.props} />;\n    }\n  };\n\nexport default makeSkipContainer;\n","// @flow\nimport { withQuery } from 'meteor/cultofcoders:grapher-react';\nimport {\n  mapProps,\n  compose,\n  branch,\n  renderComponent,\n  lifecycle,\n} from 'recompose';\nimport { withLoading } from '../../components/Loading';\nimport MissingDoc from '../../components/MissingDoc';\nimport ClientEventService from '../events/ClientEventService';\nimport {\n  addQueryToRefetch,\n  removeQueryToRefetch,\n} from '../methods/clientQueryManager';\nimport makeSkipContainer from './skipContainer';\n\n// render the missing doc component only when we want to\nconst makeRenderMissingDocIfNoData = (render: boolean = false, { single }) => {\n  let renderFunc;\n  if (typeof render === 'function') {\n    renderFunc = props =>\n      render(props) && single && (!props.isLoading && !props.data);\n  } else {\n    renderFunc = ({ isLoading, data }) =>\n      render && single && (!isLoading && !data);\n  }\n\n  return branch(renderFunc, renderComponent(MissingDoc));\n};\n\n// Use proper name for data, and remove unnecessary props from children\n// error should be thrown and catched by our errorboundaries anyways\n// or displayed by an alert\nconst makeMapProps = dataName =>\n  mapProps(({ data, isLoading, error, ...rest }) => ({\n    [dataName]: data,\n    ...rest,\n  }));\n\nconst withQueryRefetcher = ({ queryName }) =>\n  lifecycle({\n    componentDidMount() {\n      const { refetch } = this.props;\n\n      if (refetch) {\n        ClientEventService.addListener(queryName, refetch);\n      }\n    },\n    componentWillUnmount() {\n      const { refetch } = this.props;\n      if (refetch) {\n        ClientEventService.removeListener(queryName, refetch);\n      }\n    },\n  });\n\n// This adds all non-reactive queries on the window object, and removes them\n// when the query disappears\n// These queries can then all be refreshed from `clientMethodsConfig`\n// every time a method is called\nconst withGlobalQueryManager = (\n  { queryName },\n  { reactive },\n  refetchOnMethodCall,\n) => {\n  const shouldActivateGlobalRefetch = refetchOnMethodCall && !reactive && global.window;\n\n  if (!shouldActivateGlobalRefetch) {\n    return x => x;\n  }\n\n  return lifecycle({\n    componentDidMount() {\n      addQueryToRefetch(queryName, refetchOnMethodCall);\n    },\n    componentWillUnmount() {\n      removeQueryToRefetch(queryName);\n    },\n  });\n};\n\ntype withSmartQueryArgs = {\n  query: () => mixed,\n  params: (props: Object) => Object,\n  queryOptions?: { single: boolean },\n  dataName?: string,\n  renderMissingDoc?: boolean | Function,\n  smallLoader?: boolean,\n};\n\nconst calculateParams = (params, props) => {\n  if (typeof params === 'function') {\n    return params(props);\n  }\n  return params;\n};\n\nconst withSmartQuery = ({\n  query,\n  params = {},\n  queryOptions = { single: false },\n  dataName = 'data',\n  // used to bypass the missing doc component\n  renderMissingDoc = true,\n  smallLoader = false,\n  refetchOnMethodCall = 'all',\n  skip,\n}: withSmartQueryArgs) => {\n  let completeQuery;\n\n  if (typeof query === 'function') {\n    completeQuery = props => query(props).clone(calculateParams(params, props));\n  } else {\n    completeQuery = props => query.clone(calculateParams(params, props));\n  }\n\n  const container = compose(\n    withGlobalQueryManager(query, queryOptions, refetchOnMethodCall),\n    withQuery(completeQuery, { loadOnRefetch: false, ...queryOptions }),\n    withLoading(smallLoader),\n    makeRenderMissingDocIfNoData(renderMissingDoc, queryOptions),\n    makeMapProps(dataName),\n    withQueryRefetcher(query),\n  );\n\n  if (skip) {\n    return makeSkipContainer(container, skip);\n  }\n\n  return container;\n};\n\nexport default withSmartQuery;\n","export const ERROR_CODES = {\n  BAD_REQUEST: 400,\n  UNAUTHORIZED: 401,\n  FORBIDDEN: 403,\n  NOT_FOUND: 404,\n};\n\nexport const LOT_ERRORS = {\n  PROMOTION_LOT_BOOKED_OR_SOLD: 'PROMOTION_LOT_BOOKED_OR_SOLD',\n};\n","import { Factory } from 'meteor/dburles:factory';\nimport faker from 'faker';\n\nimport {\n  LOT_TYPES,\n  ORGANISATION_TYPES,\n  PROMOTION_TYPES,\n  REVENUE_TYPES,\n  ROLES,\n  STEPS,\n  TASK_STATUS,\n  DEFAULT_VALUE_FOR_ALL,\n  DEFAULT_MAIN_RESIDENCE_RULES,\n  DEFAULT_SECONDARY_RESIDENCE_RULES,\n} from '../constants';\nimport {\n  Borrowers,\n  Contacts,\n  InterestRates,\n  LenderRules,\n  Lenders,\n  Loans,\n  Lots,\n  MortgageNotes,\n  Offers,\n  Organisations,\n  PromotionLots,\n  PromotionOptions,\n  Promotions,\n  Properties,\n  Revenues,\n  Tasks,\n  Users,\n} from '..';\nimport { PROPERTY_CATEGORY } from '../properties/propertyConstants';\nimport Notifications from '../notifications/index';\nimport Activities from '../activities/index';\n\nconst TEST_LASTNAME = 'TestLastName';\nconst TEST_FIRSTNAME = 'TestFirstName';\nconst TEST_PHONE = '0123456789';\n\nconst getRandomLoanName = () => `19-0${Math.floor(Math.random() * 899 + 100)}`;\n\nFactory.define('user', Users, {\n  roles: [ROLES.USER],\n  emails: () => [{ address: faker.internet.email(), verified: false }],\n  lastName: TEST_LASTNAME,\n  firstName: TEST_FIRSTNAME,\n  phoneNumbers: [TEST_PHONE],\n});\n\nFactory.define('dev', Users, {\n  roles: [ROLES.DEV],\n  emails: () => [{ address: faker.internet.email(), verified: false }],\n  lastName: TEST_LASTNAME,\n  firstName: TEST_FIRSTNAME,\n  phoneNumbers: [TEST_PHONE],\n});\n\nFactory.define('admin', Users, {\n  roles: [ROLES.ADMIN],\n  emails: () => [{ address: faker.internet.email(), verified: false }],\n  lastName: TEST_LASTNAME,\n  firstName: TEST_FIRSTNAME,\n  phoneNumbers: [TEST_PHONE],\n});\n\nFactory.define('adminEpotek', Users, {\n  roles: [ROLES.ADMIN],\n  emails: () => [{ address: 'dev@e-potek.ch', verified: true }],\n  lastName: 'e-Potek',\n  firstName: 'Dev',\n  phoneNumbers: [TEST_PHONE],\n});\n\nFactory.define('pro', Users, {\n  roles: [ROLES.PRO],\n  emails: () => [{ address: faker.internet.email(), verified: false }],\n  lastName: TEST_LASTNAME,\n  firstName: TEST_FIRSTNAME,\n  phoneNumbers: [TEST_PHONE],\n});\n\nFactory.define('borrower', Borrowers);\n\nFactory.define('task', Tasks, {\n  createdAt: () => new Date(),\n  status: TASK_STATUS.ACTIVE,\n});\n\nFactory.define('loan', Loans, {\n  createdAt: () => new Date(),\n  borrowerIds: [],\n  documents: () => ({}),\n  step: STEPS.SOLVENCY,\n  name: () => {\n    // there is a 1/900% chance that 2 loan names collide,\n    // make sure it never happens instead\n    while (true) {\n      const name = getRandomLoanName();\n\n      if (!Loans.findOne({ name })) {\n        return name;\n      }\n    }\n  },\n  emails: () => [],\n  propertyIds: [],\n});\n\nFactory.define('property', Properties, {\n  value: 1000000,\n  category: PROPERTY_CATEGORY.USER,\n});\n\nFactory.define('offer', Offers, {\n  userId: () => faker.random.uuid(),\n  createdAt: () => new Date(),\n  canton: 'GE',\n  conditions: ['Do something'],\n  maxAmount: 800000,\n  amortizationGoal: 0.65,\n});\n\nFactory.define('promotion', Promotions, {\n  name: 'Test promotion',\n  type: PROMOTION_TYPES.CREDIT,\n});\n\nFactory.define('promotionOption', PromotionOptions, {});\nFactory.define('promotionLot', PromotionLots, {});\n\nFactory.define('lot', Lots, {\n  name: 'test',\n  type: LOT_TYPES.PARKING_CAR,\n  value: 1000,\n});\n\nFactory.define('task', Tasks, {});\n\nFactory.define('mortgageNote', MortgageNotes, {\n  value: 100000,\n  canton: 'GE',\n});\n\nFactory.define('organisation', Organisations, {\n  name: () => {\n    // Make sure organisation names don't collide\n    while (true) {\n      const name = faker.company.companyName();\n\n      if (!Organisations.findOne({ name })) {\n        return name;\n      }\n    }\n  },\n  type: ORGANISATION_TYPES.BANK,\n});\n\nFactory.define('lender', Lenders, {});\n\nFactory.define('interestRates', InterestRates, {});\n\nFactory.define('contact', Contacts, {\n  firstName: 'John',\n  lastName: 'Doe',\n});\n\nFactory.define('lenderRules', LenderRules, {\n  filter: { and: [] },\n  order: 0,\n});\n\nFactory.define('revenues', Revenues, {\n  amount: 1000,\n  type: REVENUE_TYPES.MORTGAGE,\n});\n\nFactory.define('lenderRulesAll', LenderRules, {\n  ...DEFAULT_VALUE_FOR_ALL,\n  order: 0,\n  filter: { and: [true] },\n});\n\nFactory.define('lenderRulesMain', LenderRules, {\n  maxBorrowRatio: 0.8,\n  order: 0,\n  filter: { and: DEFAULT_MAIN_RESIDENCE_RULES },\n});\n\nFactory.define('lenderRulesSecondary', LenderRules, {\n  maxBorrowRatio: 0.7,\n  order: 0,\n  filter: { and: DEFAULT_SECONDARY_RESIDENCE_RULES },\n});\n\nFactory.define('notification', Notifications, {});\n\nFactory.define('activity', Activities, {});\n","import { Factory } from 'meteor/dburles:factory';\nimport { Mongo } from 'meteor/mongo';\nimport pick from 'lodash/pick';\nimport omit from 'lodash/omit';\nimport uniq from 'lodash/uniq';\nimport uniqBy from 'lodash/uniqBy';\n\nimport CollectionService from '../helpers/CollectionService';\nimport { COLLECTIONS } from '../constants';\nimport { NOTIFICATIONS_COLLECTION } from '../notifications/notificationConstants';\nimport { ACTIVITIES_COLLECTION } from '../activities/activityConstants';\n\nconst getSingularFactoryName = (collection) => {\n  switch (collection) {\n  case COLLECTIONS.LOANS_COLLECTION:\n    return 'loan';\n  case COLLECTIONS.BORROWERS_COLLECTION:\n    return 'borrower';\n  case COLLECTIONS.PROPERTIES_COLLECTION:\n    return 'property';\n  case COLLECTIONS.USERS_COLLECTION:\n    return 'user';\n  case COLLECTIONS.TASKS_COLLECTION:\n    return 'task';\n  case COLLECTIONS.OFFERS_COLLECTION:\n    return 'offer';\n  case COLLECTIONS.PROMOTIONS_COLLECTION:\n    return 'promotion';\n  case COLLECTIONS.PROMOTION_OPTIONS_COLLECTION:\n    return 'promotionOption';\n  case COLLECTIONS.PROMOTION_LOTS_COLLECTION:\n    return 'promotionLot';\n  case COLLECTIONS.LOTS_COLLECTION:\n    return 'lot';\n  case COLLECTIONS.MORTGAGE_NOTES_COLLECTION:\n    return 'mortgageNote';\n  case COLLECTIONS.ORGANISATIONS_COLLECTION:\n    return 'organisation';\n  case COLLECTIONS.LENDERS_COLLECTION:\n    return 'lender';\n  case COLLECTIONS.CONTACTS_COLLECTION:\n    return 'contact';\n  case NOTIFICATIONS_COLLECTION:\n    return 'notification';\n  case ACTIVITIES_COLLECTION:\n    return 'activity';\n  default:\n    throw new Error(`No singular factory name found for ${collection}, add it in the generator`);\n  }\n};\n\nconst arrayify = maybeArray =>\n  (Array.isArray(maybeArray) ? maybeArray : [maybeArray]);\n\nconst findCollectionNameByLinkName = ({ collection, linkName }) =>\n  Mongo.Collection.get(collection).__links[linkName].linkConfig.collection\n    ._name;\n\nconst findLinkKeys = ({ collection }) => {\n  const { __links: linkNames = {} } = Mongo.Collection.get(collection);\n  const links = Object.keys(linkNames);\n  return links;\n};\n\nconst insertDoc = ({ doc, collection, useFactories, factory }) => {\n  let docExists = false;\n\n  if (doc._id) {\n    docExists = !!Mongo.Collection.get(collection).findOne(doc._id);\n  }\n\n  if (docExists) {\n    return doc;\n  }\n\n  if (useFactories && factory !== null) {\n    if (factory) {\n      return Factory.create(factory, doc);\n    }\n\n    try {\n      return Factory.create(collection, doc);\n    } catch (error) {\n      if (\n        error.message\n        && error.message === `Factory: There is no factory named ${collection}`\n      ) {\n        return Factory.create(getSingularFactoryName(collection), doc);\n      }\n      throw error;\n    }\n  }\n\n  const _id = Mongo.Collection.get(collection).insert(doc);\n  return Mongo.Collection.get(collection).findOne(_id);\n};\n\nconst generator = (scenario, { useFactories = true } = {}) => {\n  const ids = {};\n  const docs = {};\n  const docsById = {};\n\n  const pushId = ({ id, collection }) => {\n    ids[collection] = ids[collection] ? [...ids[collection], id] : [id];\n    ids[collection] = uniq(ids[collection]);\n  };\n\n  const pushDoc = ({ doc, collection }) => {\n    docs[collection] = docs[collection] ? [...docs[collection], doc] : [doc];\n    docs[collection] = uniqBy(docs[collection], '_id');\n\n    docsById[collection] = docsById[collection]\n      ? { ...docsById[collection], [doc._id]: doc }\n      : { [doc._id]: doc };\n  };\n\n  const createNestedObject = ({ doc, collection }) => {\n    const linkKeys = findLinkKeys({ doc, collection });\n\n    const docToInsert = omit(doc, [...linkKeys, '_factory', '$metadata']);\n\n    const insertedDoc = insertDoc({\n      collection,\n      doc: docToInsert,\n      useFactories,\n      factory: doc._factory,\n    });\n    const { _id: id } = insertedDoc;\n    pushId({ id, collection });\n    pushDoc({ doc: insertedDoc, collection });\n\n    const linksToInsert = pick(doc, linkKeys);\n\n    Object.keys(linksToInsert).forEach((linkName) => {\n      const linkCollection = findCollectionNameByLinkName({\n        collection,\n        linkName,\n      });\n      const linkedDocs = arrayify(linksToInsert[linkName]);\n      linkedDocs.forEach((linkedDoc) => {\n        const linkId = createNestedObject({\n          doc: linkedDoc,\n          collection: linkCollection,\n          parentId: id,\n        });\n        const collectionService = new CollectionService(Mongo.Collection.get(collection));\n        collectionService.addLink({\n          id,\n          linkName,\n          linkId,\n          metadata: linkedDoc.$metadata,\n        });\n      });\n    });\n\n    return id;\n  };\n\n  Object.keys(scenario).forEach((collection) => {\n    const docsInCollection = arrayify(scenario[collection]);\n    docsInCollection.forEach(doc => createNestedObject({ doc, collection }));\n  });\n\n  return { ids, docs, docsById };\n};\n\nexport default generator;\n","import './factories';\n\nexport { default } from './factoriesHelpers';\n","// Inversed links need to be defined after direct links, use this\n// class to manage that\n// Might become obsolete after this is fixed in grapher\n// https://github.com/cult-of-coders/grapher/issues/200#issuecomment-500803766\nclass LinkInitializer {\n  constructor() {\n    this.direct = [];\n    this.inversed = [];\n  }\n\n  directInit(fn) {\n    this.direct.push(fn);\n  }\n\n  inversedInit(fn) {\n    this.inversed.push(fn);\n  }\n\n  setLinks() {\n    this.direct.forEach(fn => fn());\n    this.inversed.forEach(fn => fn());\n    // Don't unnecessarily store these functions\n    delete this.direct;\n    delete this.inversed;\n  }\n}\n\nexport default new LinkInitializer();\n","import '../activities/links';\nimport '../borrowers/links';\nimport '../contacts/links';\nimport '../lenderRules/links';\nimport '../lenders/links';\nimport '../loans/links';\nimport '../lots/links';\nimport '../mortgageNotes/links';\nimport '../notifications/links';\nimport '../offers/links';\nimport '../organisations/links';\nimport '../promotionLots/links';\nimport '../promotionOptions/links';\nimport '../promotions/links';\nimport '../properties/links';\nimport '../revenues/links';\nimport '../tasks/links';\nimport '../users/links';\nimport LinkInitializer from './LinkInitializer';\n\nLinkInitializer.setLinks();\n","const addressReducer = {\n  address: {\n    body: {\n      address1: 1,\n      zipCode: 1,\n      city: 1,\n    },\n    reduce(object) {\n      const { address1, zipCode, city } = object;\n      return address1\n        ? `${address1}, ${zipCode} ${city}`\n        : 'Aucune addresse indiquée';\n    },\n  },\n};\n\nexport default addressReducer;\n","import UserService from '../users/server/UserService';\n\nconst assigneeReducer = (body = {}, getUserId) => ({\n  assignee: {\n    body: {\n      userId: 1,\n      userLinks: 1,\n      promotions: { userLinks: 1 },\n      promotion: { userLinks: 1 },\n      assignedEmployeeId: 1,\n      ...body,\n    },\n    reduce(data) {\n      const {\n        userId,\n        userLinks,\n        promotion,\n        promotions,\n        assignedEmployeeId,\n      } = data;\n      let userToFind = userId;\n      let users = userLinks;\n\n      if (assignedEmployeeId) {\n        return UserService.findOne({ _id: assignedEmployeeId });\n      }\n\n      if (promotion && promotion.userLinks) {\n        users = promotion.userLinks;\n      }\n\n      if (promotions && promotions.length > 0) {\n        users = promotions[0].userLinks;\n      }\n\n      if (!userToFind && users && users.length > 0) {\n        userToFind = users[0]._id;\n      }\n\n      if (!userToFind && getUserId) {\n        userToFind = getUserId(data);\n      }\n\n      if (userToFind) {\n        const user = UserService.findOne({ _id: userToFind });\n        if (user) {\n          return UserService.findOne({ _id: user.assignedEmployeeId });\n        }\n      }\n\n      return null;\n    },\n  },\n});\n\nexport default assigneeReducer;\n","import '../borrowers/reducers';\nimport '../contacts/reducers';\nimport '../loans/reducers';\nimport '../lots/reducers';\nimport '../notifications/reducers';\nimport '../offers/reducers';\nimport '../organisations/reducers';\nimport '../promotionLots/reducers';\nimport '../promotionOptions/reducers';\nimport '../promotions/reducers';\nimport '../properties/reducers';\nimport '../users/reducers';\n","import TaskService from '../tasks/server/TaskService';\n\nconst tasksReducer = {\n  tasks: {\n    body: { _id: 1 },\n    reduce({ _id: docId }) {\n      return TaskService.getTasksForDoc(docId);\n    },\n  },\n};\n\nexport default tasksReducer;\n","import { Meteor } from 'meteor/meteor';\nimport { migrate } from 'meteor/herteby:denormalize';\n\nimport { Organisations, LenderRules, Properties, Loans } from '..';\n\nOrganisations.cacheCount({\n  collection: LenderRules,\n  referenceField: 'organisationLink._id',\n  cacheField: 'lenderRulesCount',\n});\n\nProperties.cacheCount({\n  collection: Loans,\n  referenceField: 'propertyIds',\n  cacheField: 'loanCount',\n});\n\nMeteor.startup(() => {\n  migrate('properties', 'loanCount', { loanCount: { $exists: false } });\n  // migrate('revenues', 'loanCache', { loanCache: { $exists: false } });\n  //\n  // Old migrations\n  //\n  // migrate('users', 'assignedEmployeeCache', {\n  //   $or: [\n  //     { 'assignedEmployeeCache.lastName': { $exists: false } },\n  //     { 'assignedEmployeeCache.firstName': { $exists: false } },\n  //   ],\n  // });\n  // migrate('loans', 'userCache', { 'userCache._id': { $exists: false } });\n  // migrate('loans', 'lendersCache', { lendersCache: { $exists: false } });\n  // migrate('loans', 'tasksCache', { tasksCache: { $exists: false } });\n  // migrate('offers', 'lenderCache', { lenderCache: { $exists: false } });\n  // migrate('lenderRules', 'organisationCache', {\n  //   'organisationCache._id': { $exists: false },\n  // });\n  // migrate('organisations', 'lenderRulesCount', {\n  //   lenderRulesCount: { $exists: false },\n  // });\n});\n","import { Meteor } from 'meteor/meteor';\n\nconst isDev = false; // process.env.NODE_ENV === 'development';\n\nMeteor.startup(() => {\n  const enableGrapherLive = false;\n\n  if (isDev && enableGrapherLive) {\n    const { initialize } = require('meteor/cultofcoders:grapher-live');\n    initialize(); // exposes a method \"grapher_live\", used by the React Component\n  }\n});\n","import '../activities/server/hooks';\nimport '../borrowers/server/hooks';\nimport '../contacts/server/hooks';\nimport '../loans/server/hooks';\nimport '../mortgageNotes/server/hooks';\nimport '../offers/server/hooks';\nimport '../organisations/server/hooks';\nimport '../promotionOptions/server/hooks';\nimport '../promotions/server/hooks';\nimport '../properties/server/hooks';\nimport '../revenues/server/hooks';\nimport '../tasks/server/hooks';\nimport '../users/server/hooks';\n","import { Meteor } from 'meteor/meteor';\nimport '../initialization';\n\nimport '../../fixtures/server/fixtureMethods';\n\nimport '../users/server/accounts-server-config';\n\nimport '../methods/server';\nimport '../methods';\n\nimport '../factories';\n\nimport '../files/server/methods';\nimport '../files/server/meteor-slingshot-server';\n\nimport '../email/server';\n\nimport '../events/server/registerServerListeners';\n\nimport '../links';\nimport '../reducers/registerReducers';\n\nimport './grapher-live';\nimport './hooks';\nimport '../queries/server';\nimport './reducers';\nimport './mongoIndexes';\nimport './caches';\n\nimport { COLLECTIONS } from '../constants';\nimport BorrowerService from '../borrowers/server/BorrowerService';\nimport ContactService from '../contacts/server/ContactService';\nimport InterestRatesService from '../interestRates/server/InterestRatesService';\nimport Irs10yService from '../irs10y/server/Irs10yService';\nimport LenderService from '../lenders/server/LenderService';\nimport LoanService from '../loans/server/LoanService';\nimport LotService from '../lots/server/LotService';\nimport MortgageNoteService from '../mortgageNotes/server/MortgageNoteService';\nimport OfferService from '../offers/server/OfferService';\nimport PromotionLotService from '../promotionLots/server/PromotionLotService';\nimport PromotionOptionService from '../promotionOptions/server/PromotionOptionService';\nimport PromotionService from '../promotions/server/PromotionService';\nimport PropertyService from '../properties/server/PropertyService';\nimport TaskService from '../tasks/server/TaskService';\nimport UserService from '../users/server/UserService';\nimport SlackService from '../slack/server/SlackService';\nimport LenderRulesService from '../lenderRules/server/LenderRulesService';\nimport RevenueService from '../revenues/server/RevenueService';\nimport '../liveSync';\n\nprocess.on('uncaughtException', (error) => {\n  if (!Meteor.isProduction) {\n    console.log('uncaughtException error', JSON.stringify(error, null, 2));\n  }\n  SlackService.sendError({\n    error,\n    additionalData: ['Server uncaughtException'],\n  });\n  process.exit(1);\n});\n\nprocess.on('unhandledRejection', (error) => {\n  if (!Meteor.isProduction) {\n    console.log('unhandledRejection error', JSON.stringify(error, null, 2));\n  }\n  SlackService.sendError({\n    error,\n    additionalData: ['Server unhandledRejection'],\n  });\n});\n\nexport const Services = {\n  [COLLECTIONS.LOANS_COLLECTION]: LoanService,\n  [COLLECTIONS.PROPERTIES_COLLECTION]: PropertyService,\n  [COLLECTIONS.BORROWERS_COLLECTION]: BorrowerService,\n  [COLLECTIONS.LOTS_COLLECTION]: LotService,\n  [COLLECTIONS.OFFERS_COLLECTION]: OfferService,\n  [COLLECTIONS.PROMOTION_LOTS_COLLECTION]: PromotionLotService,\n  [COLLECTIONS.PROMOTIONS_COLLECTION]: PromotionService,\n  [COLLECTIONS.PROMOTION_OPTIONS_COLLECTION]: PromotionOptionService,\n  [COLLECTIONS.USERS_COLLECTION]: UserService,\n  [COLLECTIONS.TASKS_COLLECTION]: TaskService,\n  [COLLECTIONS.INTEREST_RATES_COLLECTION]: InterestRatesService,\n  [COLLECTIONS.IRS10Y_COLLECTION]: Irs10yService,\n  [COLLECTIONS.MORTGAGE_NOTES_COLLECTION]: MortgageNoteService,\n  [COLLECTIONS.CONTACTS_COLLECTION]: ContactService,\n  [COLLECTIONS.LENDERS_COLLECTION]: LenderService,\n  [COLLECTIONS.LENDER_RULES_COLLECTION]: LenderRulesService,\n  [COLLECTIONS.REVENUES_COLLECTION]: RevenueService,\n};\n","import { Loans, Borrowers, Offers, Properties, Tasks, Users } from '..';\n\nLoans._ensureIndex({ userId: 1 });\nBorrowers._ensureIndex({ userId: 1 });\nOffers._ensureIndex({ loanId: 1 });\nProperties._ensureIndex({ userId: 1 });\nTasks._ensureIndex({ docId: 1 });\nUsers._ensureIndex({ referredByUserLink: 1 });\n","import '../borrowers/server/serverReducers';\nimport '../contacts/server/serverReducers';\nimport '../loans/server/serverReducers';\nimport '../lots/server/serverReducers';\nimport '../offers/server/serverReducers';\nimport '../organisations/server/serverReducers';\nimport '../promotionLots/server/serverReducers';\nimport '../promotionOptions/server/serverReducers';\nimport '../promotions/server/serverReducers';\nimport '../properties/server/serverReducers';\nimport '../tasks/server/serverReducers';\nimport '../users/server/serverReducers';\n","import './initialization';\nimport './files/meteor-slingshot';\nimport './links';\nimport './reducers/registerReducers';\n","// @flow\nimport { BORROWERS_COLLECTION } from './borrowers/borrowerConstants';\nimport { LOANS_COLLECTION } from './loans/loanConstants';\nimport { LOTS_COLLECTION } from './lots/lotConstants';\nimport { OFFERS_COLLECTION } from './offers/offerConstants';\nimport { ORGANISATIONS_COLLECTION } from './organisations/organisationConstants';\nimport { PROMOTION_LOTS_COLLECTION } from './promotionLots/promotionLotConstants';\nimport { PROMOTION_OPTIONS_COLLECTION } from './promotionOptions/promotionOptionConstants';\nimport { PROMOTIONS_COLLECTION } from './promotions/promotionConstants';\nimport { PROPERTIES_COLLECTION } from './properties/propertyConstants';\nimport { TASKS_COLLECTION } from './tasks/taskConstants';\nimport { USERS_COLLECTION } from './users/userConstants';\nimport { INTEREST_RATES_COLLECTION } from './interestRates/interestRatesConstants';\nimport { IRS10Y_COLLECTION } from './irs10y/irs10yConstants';\nimport { MORTGAGE_NOTES_COLLECTION } from './mortgageNotes/mortgageNoteConstants';\nimport { CONTACTS_COLLECTION } from './contacts/contactsConstants';\nimport { LENDERS_COLLECTION } from './lenders/lenderConstants';\nimport { LENDER_RULES_COLLECTION } from './lenderRules/lenderRulesConstants';\nimport { REVENUES_COLLECTION } from './revenues/revenueConstants';\n\nexport * from './borrowers/borrowerConstants';\nexport * from './contacts/contactsConstants';\nexport * from './email/emailConstants';\nexport * from './files/fileConstants';\nexport * from './helpers/sharedSchemaConstants';\nexport * from './interestRates/interestRatesConstants';\nexport * from './irs10y/irs10yConstants';\nexport * from './lenderRules/lenderRulesConstants';\nexport * from './lenders/lenderConstants';\nexport * from './loans/loanConstants';\nexport * from './lots/lotConstants';\nexport * from './mortgageNotes/mortgageNoteConstants';\nexport * from './offers/offerConstants';\nexport * from './organisations/organisationConstants';\nexport * from './pdf/pdfConstants';\nexport * from './promotionLots/promotionLotConstants';\nexport * from './promotionOptions/promotionOptionConstants';\nexport * from './promotions/promotionConstants';\nexport * from './properties/propertyConstants';\nexport * from './revenues/revenueConstants';\nexport * from './security/constants';\nexport * from './tasks/taskConstants';\nexport * from './updateWatchers/updateWatcherConstants';\nexport * from './users/userConstants';\n\nexport const SUCCESS = 'SUCCESS';\nexport const WARNING = 'WARNING';\nexport const ERROR = 'ERROR';\n\n// Preserve order, as we sometimes loop over these, and the most common\n// collections should come first\nexport const COLLECTIONS = {\n  LOANS_COLLECTION,\n  BORROWERS_COLLECTION,\n  PROPERTIES_COLLECTION,\n  PROMOTIONS_COLLECTION,\n  LOTS_COLLECTION,\n  PROMOTION_OPTIONS_COLLECTION,\n  PROMOTION_LOTS_COLLECTION,\n  TASKS_COLLECTION,\n  OFFERS_COLLECTION,\n  ORGANISATIONS_COLLECTION,\n  USERS_COLLECTION,\n  INTEREST_RATES_COLLECTION,\n  IRS10Y_COLLECTION,\n  MORTGAGE_NOTES_COLLECTION,\n  CONTACTS_COLLECTION,\n  LENDERS_COLLECTION,\n  LENDER_RULES_COLLECTION,\n  REVENUES_COLLECTION,\n};\n","// import merge from 'lodash/merge';\n\nimport { Meteor } from 'meteor/meteor';\nimport { INTEREST_RATES } from './constants';\n\n// //\n// // activity fragments\n// //\nexport const activity = () => ({\n  createdAt: 1,\n  createdBy: 1,\n  date: 1,\n  description: 1,\n  loan: { name: 1 },\n  secondaryType: 1,\n  shouldNotify: 1,\n  title: 1,\n  type: 1,\n  updatedAt: 1,\n});\n\n// //\n// // borrower fragments\n// //\nexport const baseBorrower = () => ({\n  createdAt: 1,\n  firstName: 1,\n  lastName: 1,\n  name: 1,\n  updatedAt: 1,\n  userId: 1,\n});\n\nexport const loanBorrower = ({ withSort } = {}) => ({\n  ...baseBorrower(),\n  additionalDocuments: 1,\n  address1: 1,\n  address2: 1,\n  adminValidation: 1,\n  age: 1,\n  bank3A: 1,\n  bankFortune: 1,\n  birthDate: 1,\n  birthPlace: 1,\n  bonus2015: 1,\n  bonus2016: 1,\n  bonus2017: 1,\n  bonus2018: 1,\n  bonus2019: 1,\n  bonusExists: 1,\n  canton: 1,\n  childrenCount: 1,\n  citizenship: 1,\n  city: 1,\n  civilStatus: 1,\n  company: 1,\n  documents: 1,\n  expenses: 1,\n  gender: 1,\n  hasOwnCompany: 1,\n  insurance2: 1,\n  insurance3A: 1,\n  insurance3B: 1,\n  isSwiss: 1,\n  isUSPerson: 1,\n  loans: { name: 1 },\n  mortgageNotes: mortgageNote(),\n  netSalary: 1,\n  otherFortune: 1,\n  otherIncome: 1,\n  ownCompanies: 1,\n  personalBank: 1,\n  realEstate: 1,\n  residencyPermit: 1,\n  salary: 1,\n  sameAddress: 1,\n  step: 1,\n  thirdPartyFortune: 1,\n  worksForOwnCompany: 1,\n  zipCode: 1,\n  ...(withSort ? { $options: { sort: { createdAt: 1 } } } : {}),\n});\n\nexport const adminBorrower = () => ({\n  ...loanBorrower(),\n  loans: loanBase(),\n  user: appUser(),\n});\n\n// //\n// // Contact fragments\n// //\nexport const contact = () => ({\n  address: 1,\n  address1: 1,\n  address2: 1,\n  canton: 1,\n  city: 1,\n  email: 1,\n  emails: 1,\n  firstName: 1,\n  lastName: 1,\n  name: 1,\n  organisations: { name: 1, address: 1 },\n  phoneNumber: 1,\n  phoneNumbers: 1,\n  zipCode: 1,\n  offers: { _id: 1 },\n});\n\n// //\n// // InterestRate fragments\n// //\nconst singleInterestRate = type => ({\n  [type]: { rateLow: 1, rateHigh: 1, trend: 1 },\n});\n\nconst rates = Object.values(INTEREST_RATES).reduce(\n  (interestRates, type) => ({\n    ...interestRates,\n    ...singleInterestRate(type),\n  }),\n  {},\n);\n\nexport const interestRates = () => ({\n  ...rates,\n  createdAt: 1,\n  updatedAt: 1,\n  date: 1,\n});\n\nexport const currentInterestRates = () => ({\n  ...rates,\n  date: 1,\n});\n\n// //\n// // Irs10Y fragments\n// //\nexport const irs10y = () => ({\n  date: 1,\n  rate: 1,\n});\n\n// //\n// // Lender fragments\n// //\nexport const lender = () => ({\n  contact: contact(),\n  loan: { _id: 1 },\n  offers: fullOffer(),\n  organisation: {\n    address: 1,\n    address1: 1,\n    address2: 1,\n    canton: 1,\n    city: 1,\n    contacts: contact(),\n    logo: 1,\n    name: 1,\n    type: 1,\n    zipCode: 1,\n  },\n});\n\nexport const adminLender = () => ({\n  ...lender(),\n  status: 1,\n  adminNote: 1,\n});\n\n// //\n// // LenderRules fragments\n// //\nexport const lenderRules = () => ({\n  adminComments: 1,\n  allowPledge: 1,\n  amortizationGoal: 1,\n  amortizationYears: 1,\n  bonusAlgorithm: 1,\n  bonusConsideration: 1,\n  bonusHistoryToConsider: 1,\n  companyIncomeConsideration: 1,\n  companyIncomeHistoryToConsider: 1,\n  createdAt: 1,\n  dividendsConsideration: 1,\n  dividendsHistoryToConsider: 1,\n  expensesSubtractFromIncome: 1,\n  filter: 1,\n  fortuneReturnsRatio: 1,\n  incomeConsiderationType: 1,\n  investmentIncomeConsideration: 1,\n  maxBorrowRatio: 1,\n  maxBorrowRatioWithPledge: 1,\n  maxIncomeRatio: 1,\n  maxIncomeRatioTight: 1,\n  minCash: 1,\n  name: 1,\n  order: 1,\n  organisation: { name: 1 },\n  pdfComments: 1,\n  pensionIncomeConsideration: 1,\n  realEstateIncomeAlgorithm: 1,\n  realEstateIncomeConsideration: 1,\n  realEstateIncomeConsiderationType: 1,\n  theoreticalInterestRate: 1,\n  theoreticalInterestRate2ndRank: 1,\n  theoreticalMaintenanceRate: 1,\n  updatedAt: 1,\n});\n\n// //\n// // Loan fragments\n// //\nexport const loan = () => ({\n  additionalDocuments: 1,\n  applicationType: 1,\n  anonymous: 1,\n  borrowerIds: 1,\n  borrowers: { firstName: 1, lastName: 1, name: 1 },\n  canton: 1,\n  createdAt: 1,\n  currentOwner: 1,\n  customName: 1,\n  enableOffers: 1,\n  futureOwner: 1,\n  hasProProperty: 1,\n  hasPromotion: 1,\n  name: 1,\n  otherOwner: 1,\n  previousLender: 1,\n  previousLoanTranches: 1,\n  promotions: {\n    address: 1,\n    contacts: 1,\n    lenderOrganisationLink: 1,\n    name: 1,\n    type: 1,\n    users: { name: 1, email: 1, phoneNumber: 1 },\n  },\n  properties: { totalValue: 1, address1: 1 },\n  propertyIds: 1,\n  purchaseType: 1,\n  residenceType: 1,\n  selectedStructure: 1,\n  status: 1,\n  step: 1,\n  structure: 1,\n  structures: {\n    amortization: 1,\n    amortizationType: 1,\n    description: 1,\n    disabled: 1,\n    id: 1,\n    loanTranches: 1,\n    mortgageNoteIds: 1,\n    name: 1,\n    notaryFees: 1,\n    offerId: 1,\n    ownFunds: 1,\n    promotionOptionId: 1,\n    propertyId: 1,\n    propertyValue: 1,\n    propertyWork: 1,\n    sortOffersBy: 1,\n    wantedLoan: 1,\n  },\n  updatedAt: 1,\n  userId: 1,\n  verificationStatus: 1,\n  shareSolvency: 1,\n  simpleBorrowersForm: 1,\n});\n\nexport const loanBase = () => ({\n  ...loan(),\n  promotionOptions: loanPromotionOption(),\n});\n\nconst userPropertyValue = { borrowRatio: 1, propertyValue: 1 };\nconst adminPropertyValue = { ...userPropertyValue, organisationName: 1 };\nconst userMaxPropertyValue = {\n  main: { min: userPropertyValue, max: userPropertyValue },\n  second: { min: userPropertyValue, max: userPropertyValue },\n  canton: 1,\n  date: 1,\n  borrowerHash: 1,\n};\nconst adminMaxPropertyValue = {\n  main: { min: adminPropertyValue, max: adminPropertyValue },\n  second: { min: adminPropertyValue, max: adminPropertyValue },\n  canton: 1,\n  date: 1,\n  borrowerHash: 1,\n};\n\nexport const userLoan = ({ withSort, withFilteredPromotions } = {}) => ({\n  ...loanBase(),\n  adminValidation: 1,\n  borrowers: loanBorrower({ withSort }),\n  contacts: 1,\n  displayWelcomeScreen: 1,\n  documents: 1,\n  offers: 1,\n  properties: userProperty({ withSort }),\n  user: appUser(),\n  userFormsEnabled: 1,\n  maxPropertyValue: userMaxPropertyValue,\n  ...(withFilteredPromotions\n    ? {\n      promotions: {\n        address: 1,\n        contacts: 1,\n        documents: { promotionImage: 1 },\n        lenderOrganisationLink: 1,\n        name: 1,\n        status: 1,\n        type: 1,\n        canton: 1,\n        users: {\n          _id: 1,\n          name: 1,\n          email: 1,\n          phoneNumber: 1,\n          organisations: { users: { title: 1 } },\n        },\n        loans: {\n          _id: 1,\n          $filter({ filters, params: { loanId } }) {\n            filters.userId = Meteor.userId();\n            filters._id = loanId;\n          },\n        },\n      },\n    }\n    : {}),\n});\n\nexport const adminLoan = ({ withSort } = {}) => ({\n  ...userLoan({ withSort }),\n  adminNote: 1,\n  category: 1,\n  lenders: adminLender(),\n  maxPropertyValue: adminMaxPropertyValue,\n  nextDueTask: 1,\n  properties: adminProperty({ withSort }),\n  revenues: revenue(),\n  status: 1,\n  tasksCache: {\n    createdAt: 1,\n    dueAt: 1,\n    status: 1,\n    title: 1,\n    isPrivate: 1,\n    assigneeLink: 1,\n  },\n  user: adminUser(),\n  financedPromotion: { name: 1 },\n  financedPromotionLink: 1,\n});\n\nexport const adminLoans = () => ({\n  ...loanBase(),\n  borrowers: { name: 1 },\n  category: 1,\n  properties: { totalValue: 1, address1: 1 },\n  status: 1,\n  user: { assignedEmployee: { email: 1 }, name: 1 },\n});\n\nexport const proLoans = () => ({\n  anonymous: 1,\n  createdAt: 1,\n  name: 1,\n  status: 1,\n  promotions: {\n    name: 1,\n    users: { _id: 1 },\n    status: 1,\n    lenderOrganisationLink: 1,\n  },\n  promotionLinks: 1,\n  promotionOptions: {\n    name: 1,\n    status: 1,\n    promotionLots: { attributedTo: { user: { _id: 1 } } },\n    solvency: 1,\n    value: 1,\n  },\n  loanProgress: 1,\n  user: {\n    name: 1,\n    phoneNumbers: 1,\n    email: 1,\n    referredByUser: { name: 1, organisations: { name: 1 } },\n    referredByOrganisation: { name: 1 },\n  },\n  hasPromotion: 1,\n  hasProProperty: 1,\n  maxPropertyValue: userMaxPropertyValue,\n  properties: { address1: 1, category: 1, users: { _id: 1 }, totalValue: 1 },\n  referralId: 1,\n  residenceType: 1,\n  shareSolvency: 1,\n  structure: 1,\n});\n\n// //\n// // MortgageNote fragments\n// //\nexport const mortgageNote = () => ({\n  canton: 1,\n  category: 1,\n  rank: 1,\n  type: 1,\n  value: 1,\n});\n\n// //\n// // Notification fragments\n// //\nexport const notification = () => ({\n  activity: activity(),\n  createdAt: 1,\n  readAt: 1,\n  recipients: { firstName: 1, lastName: 1, name: 1 },\n  relatedDoc: 1,\n  task: task(),\n  title: 1,\n  revenue: revenue(),\n  updatedAt: 1,\n});\n\n// //\n// // Offer fragments\n// //\nexport const fullOffer = () => ({\n  amortizationGoal: 1,\n  amortizationYears: 1,\n  conditions: 1,\n  epotekFees: 1,\n  feedback: 1,\n  ...Object.values(INTEREST_RATES).reduce(\n    (obj, rate) => ({ ...obj, [rate]: 1 }),\n    {},\n  ),\n  fees: 1,\n  lender: {\n    loan: {\n      status: 1,\n      name: 1,\n      user: { name: 1, assignedEmployee: { email: 1, name: 1, firstName: 1 } },\n      borrowers: { name: 1 },\n    },\n    contact: { name: 1, email: 1 },\n    organisation: { name: 1, lenderRules: lenderRules() },\n  },\n  loanId: 1,\n  maxAmount: 1,\n  organisation: 1,\n  user: simpleUser(),\n  createdAt: 1,\n  withCounterparts: 1,\n  enableOffer: 1,\n});\n\n// //\n// // Organisation fragments\n// //\nexport const baseOrganisation = () => ({\n  address: 1,\n  address1: 1,\n  address2: 1,\n  canton: 1,\n  city: 1,\n  contacts: { title: 1, email: 1, name: 1 },\n  features: 1,\n  logo: 1,\n  name: 1,\n  type: 1,\n  zipCode: 1,\n  tags: 1,\n  users: { _id: 1 },\n});\n\nexport const fullOrganisation = () => ({\n  ...baseOrganisation(),\n  commissionRate: 1,\n  commissionRates: 1,\n  contacts: contact(),\n  documents: 1,\n  generatedRevenues: 1,\n  lenderRules: lenderRules(),\n  lenders: lender(),\n  offers: 1,\n  offerCount: 1,\n  users: organisationUser(),\n});\n\nexport const userOrganisation = () => ({\n  logo: 1,\n  name: 1,\n  lenderRules: lenderRules(),\n});\n\n// //\n// // PromotionLot fragments\n// //\nexport const proPromotionLot = () => ({\n  attributedTo: { user: { name: 1 } },\n  createdAt: 1,\n  documents: 1,\n  lots: { name: 1, value: 1, type: 1, description: 1 },\n  name: 1,\n  promotion: {\n    status: 1,\n    name: 1,\n    promotionLots: { name: 1 },\n    users: { _id: 1 },\n    lots: {\n      name: 1,\n      value: 1,\n      type: 1,\n      description: 1,\n      promotionLots: { _id: 1 },\n    },\n  },\n  promotionOptions: { _id: 1 },\n  properties: promotionProperty(),\n  status: 1,\n  updatedAt: 1,\n  value: 1,\n});\n\nexport const appPromotionLot = () => ({\n  attributedTo: { user: { _id: 1 } },\n  createdAt: 1,\n  documents: 1,\n  lots: { name: 1, value: 1, type: 1, description: 1 },\n  name: 1,\n  promotion: { name: 1, status: 1 },\n  properties: promotionProperty(),\n  reducedStatus: 1,\n  status: 1,\n  updatedAt: 1,\n  value: 1,\n});\n\n// //\n// // PromotionOption fragments\n// //\nexport const fullPromotionOption = () => ({\n  canton: 1,\n  createdAt: 1,\n  custom: 1,\n  loan: { name: 1 },\n  lots: { name: 1, type: 1, status: 1, description: 1 },\n  priority: 1,\n  promotionLots: { name: 1, promotion: { name: 1 } },\n  solvency: 1,\n  updatedAt: 1,\n});\n\nexport const proPromotionOption = () => ({\n  canton: 1,\n  createdAt: 1,\n  custom: 1,\n  loan: {\n    name: 1,\n    solvency: 1,\n    status: 1,\n    user: { phoneNumbers: 1, name: 1, email: 1 },\n    promotions: { users: { _id: 1, name: 1, organisations: { name: 1 } } },\n    promotionOptions: {\n      name: 1,\n      promotionLots: { attributedTo: { user: { _id: 1 } } },\n      solvency: 1,\n    },\n    loanProgress: 1,\n  },\n  lots: { name: 1, type: 1, description: 1 },\n  priority: 1,\n  solvency: 1,\n  updatedAt: 1,\n  promotion: { users: { _id: 1 } },\n  promotionLots: { _id: 1 },\n});\n\nexport const appPromotionOption = () => ({\n  attributedToMe: 1,\n  canton: 1,\n  createdAt: 1,\n  custom: 1,\n  lots: { description: 1, name: 1, type: 1, value: 1 },\n  promotionLots: appPromotionLot(),\n  priority: 1,\n  solvency: 1,\n  updatedAt: 1,\n});\n\nexport const loanPromotionOption = () => ({\n  attributedToMe: 1,\n  canton: 1,\n  custom: 1,\n  name: 1,\n  priority: 1,\n  promotion: 1,\n  promotionLots: {\n    name: 1,\n    status: 1,\n    reducedStatus: 1,\n    value: 1,\n    properties: promotionProperty(),\n  },\n  solvency: 1,\n  value: 1,\n});\n\n// //\n// // Promotion fragments\n// //\nexport const basePromotion = () => ({\n  address: 1,\n  address1: 1,\n  availablePromotionLots: 1,\n  bookedPromotionLots: 1,\n  canton: 1,\n  city: 1,\n  constructionTimeline: 1,\n  contacts: 1,\n  createdAt: 1,\n  documents: 1,\n  lenderOrganisation: { name: 1, logo: 1 },\n  loans: { _id: 1 },\n  lots: {\n    value: 1,\n    name: 1,\n    type: 1,\n    description: 1,\n    promotionLots: { name: 1 },\n    status: 1,\n  },\n  name: 1,\n  promotionLots: {\n    status: 1,\n    reducedStatus: 1,\n    lots: { name: 1 },\n    promotionOptions: { _id: 1 },\n    name: 1,\n  },\n  properties: promotionProperty(),\n  soldPromotionLots: 1,\n  status: 1,\n  type: 1,\n  updatedAt: 1,\n  users: {\n    name: 1,\n    email: 1,\n    roles: 1,\n    phoneNumber: 1,\n    organisations: { name: 1 },\n  },\n  zipCode: 1,\n});\n\nexport const proPromotion = ({ withFilteredLoan } = {}) => ({\n  ...basePromotion(),\n  assignedEmployee: { name: 1, email: 1 },\n  assignedEmployeeId: 1,\n  promotionLots: {\n    attributedTo: { user: { name: 1 } },\n    lots: { name: 1, value: 1, type: 1, description: 1, status: 1 },\n    name: 1,\n    promotionOptions: { _id: 1 },\n    properties: promotionProperty(),\n    reducedStatus: 1,\n    status: 1,\n    value: 1,\n    promotion: { _id: 1 },\n  },\n  promotionLoan: { _id: 1, name: 1 },\n  ...(withFilteredLoan\n    ? {\n      loans: {\n        $filter({ filters, params: { loanId } }) {\n          filters._id = loanId;\n        },\n      },\n    }\n    : {}),\n});\n\nexport const proPromotions = () => ({\n  ...basePromotion(),\n  promotionLots: { attributedTo: { user: { name: 1 } }, promotion: { _id: 1 } },\n});\n\nexport const adminPromotions = proPromotion;\n\nexport const searchPromotions = () => ({\n  createdAt: 1,\n  name: 1,\n  promotionLotLinks: 1,\n  updatedAt: 1,\n});\n\nexport const propertySummary = () => ({\n  address: 1,\n  address1: 1,\n  address2: 1,\n  canton: 1,\n  city: 1,\n  externalId: 1,\n  externalUrl: 1,\n  imageUrls: 1,\n  insideArea: 1,\n  organisation: 1,\n  promotion: { name: 1 },\n  propertyType: 1,\n  status: 1,\n  thumbnail: 1,\n  totalValue: 1,\n  userId: 1,\n  value: 1,\n  zipCode: 1,\n});\n\nexport const fullProperty = ({ withSort } = {}) => ({\n  ...propertySummary(),\n  additionalDocuments: 1,\n  additionalMargin: 1,\n  adminValidation: 1,\n  areaNorm: 1,\n  bathroomCount: 1,\n  category: 1,\n  constructionValue: 1,\n  constructionYear: 1,\n  copropertyPercentage: 1,\n  createdAt: 1,\n  description: 1,\n  documents: 1,\n  flatType: 1,\n  floorNumber: 1,\n  gardenArea: 1,\n  houseType: 1,\n  investmentRent: 1,\n  isCoproperty: 1,\n  isNew: 1,\n  landArea: 1,\n  landValue: 1,\n  latitude: 1,\n  loans: loanBase(),\n  longitude: 1,\n  minergie: 1,\n  mortgageNotes: mortgageNote(),\n  name: 1,\n  numberOfFloors: 1,\n  parkingInside: 1,\n  parkingOutside: 1,\n  pictures: 1,\n  promotion: { name: 1 },\n  renovationYear: 1,\n  residenceType: 1,\n  roomCount: 1,\n  terraceArea: 1,\n  totalValue: 1,\n  updatedAt: 1,\n  user: appUser(),\n  users: { _id: 1 },\n  useOpenGraph: 1,\n  volume: 1,\n  volumeNorm: 1,\n  yearlyExpenses: 1,\n  ...(withSort ? { $options: { sort: { createdAt: 1 } } } : {}),\n});\n\nexport const adminProperty = ({ withSort } = {}) => ({\n  ...fullProperty({ withSort }),\n  loanCount: 1,\n  useOpenGraph: 1,\n});\n\nexport const promotionProperty = () => ({\n  additionalMargin: 1,\n  address: 1,\n  bathroomCount: 1,\n  canton: 1,\n  constructionValue: 1,\n  description: 1,\n  gardenArea: 1,\n  insideArea: 1,\n  landValue: 1,\n  mortgageNotes: mortgageNote(),\n  name: 1,\n  propertyType: 1,\n  roomCount: 1,\n  terraceArea: 1,\n  totalValue: 1,\n  value: 1,\n  yearlyExpenses: 1,\n});\n\nexport const userProperty = ({ withSort } = {}) => {\n  const obj = { ...fullProperty({ withSort }) };\n  delete obj.users;\n  return obj;\n};\n\nexport const proPropertySummary = () => ({\n  address1: 1,\n  city: 1,\n  status: 1,\n  totalValue: 1,\n  loanCount: 1,\n});\n\nexport const proProperty = ({ withSort } = {}) => ({\n  ...fullProperty({ withSort }),\n  loanCount: 1,\n  useOpenGraph: 1,\n  users: { name: 1, organisations: { name: 1 }, email: 1, phoneNumber: 1 },\n});\n\nexport const apiProperty = () => ({\n  externalId: 1,\n  address1: 1,\n  address2: 1,\n  city: 1,\n  zipCode: 1,\n  value: 1,\n  description: 1,\n  propertyType: 1,\n  houseType: 1,\n  flatType: 1,\n  roomCount: 1,\n  insideArea: 1,\n  landArea: 1,\n  terraceArea: 1,\n  constructionYear: 1,\n  externalUrl: 1,\n  useOpenGraph: 1,\n  imageUrls: 1,\n});\n\n// //\n// // Task fragments\n// //\nexport const baseTask = () => ({\n  completedAt: 1,\n  createdAt: 1,\n  dueAt: 1,\n  status: 1,\n  title: 1,\n  description: 1,\n  updatedAt: 1,\n  isPrivate: 1,\n  priority: 1,\n});\n\nexport const task = () => ({\n  ...baseTask(),\n  assigneeLink: 1,\n  assignee: simpleUser(),\n  loan: { name: 1, borrowers: { name: 1 }, user: { name: 1 } },\n  user: { name: 1 },\n});\n\n// //\n// // User fragments\n// //\nexport const simpleUser = () => ({\n  email: 1,\n  emails: 1,\n  name: 1,\n  firstName: 1,\n  lastName: 1,\n  phoneNumbers: 1,\n  phoneNumber: 1,\n  roles: 1,\n});\n\nexport const organisationUser = () => ({\n  ...simpleUser(),\n  organisations: baseOrganisation(),\n});\n\nexport const fullUser = () => ({\n  ...simpleUser(),\n  apiPublicKey: 1,\n  assignedEmployee: simpleUser(),\n  createdAt: 1,\n  emails: 1,\n  loans: loanBase(),\n  updatedAt: 1,\n  organisations: fullOrganisation(),\n});\n\nexport const adminUser = () => ({\n  ...fullUser(),\n  assignedEmployee: simpleUser(),\n  assignedEmployeeCache: 1,\n  promotions: { name: 1, status: 1 },\n  proProperties: { address1: 1, status: 1, loanCount: 1, totalValue: 1 },\n  referredByUser: { name: 1, organisations: { name: 1 } },\n  referredByOrganisation: { name: 1 },\n  referredByOrganisationLink: 1,\n});\n\nexport const appUser = () => ({\n  ...fullUser(),\n  assignedEmployee: simpleUser(),\n  borrowers: { name: 1 },\n  loans: {\n    borrowers: { _id: 1, name: 1 },\n    customName: 1,\n    hasPromotion: 1,\n    hasProProperty: 1,\n    name: 1,\n    promotions: { address: 1, name: 1, documents: 1 },\n    properties: { address: 1, documents: 1 },\n    purchaseType: 1,\n    step: 1,\n  },\n  properties: { _id: 1 },\n});\n\nexport const proUser = () => ({\n  ...fullUser(),\n  assignedEmployee: simpleUser(),\n  promotions: { _id: 1, name: 1, permissions: 1, status: 1, users: { _id: 1 } },\n  properties: { _id: 1 },\n  proProperties: {\n    _id: 1,\n    address1: 1,\n    permissions: 1,\n    status: 1,\n    users: { _id: 1 },\n  },\n});\n\n// //\n// // Revenues fragments\n// //\nexport const revenue = () => ({\n  amount: 1,\n  createdAt: 1,\n  description: 1,\n  expectedAt: 1,\n  loan: { name: 1 },\n  organisationLinks: 1,\n  organisations: { name: 1 },\n  paidAt: 1,\n  secondaryType: 1,\n  sourceOrganisationLink: 1,\n  sourceOrganisation: { name: 1 },\n  status: 1,\n  type: 1,\n});\n","// @flow\nimport './initialization';\nimport { Meteor } from 'meteor/meteor';\n\nimport * as _constants from './constants';\nimport LoanSchema from './loans/schemas/LoanSchema';\nimport PromotionOptionSchema from './promotionOptions/schemas/PromotionOptionSchema';\nimport BorrowerSchema from './borrowers/schemas/BorrowerSchema';\nimport PropertySchema from './properties/schemas/PropertySchema';\nimport { TasksSchema } from './tasks/tasks';\nimport PromotionSchema from './promotions/schemas/PromotionSchema';\nimport LotSchema from './lots/schemas/LotSchema';\nimport { OfferSchema } from './offers/offers';\nimport PromotionLotSchema from './promotionLots/schemas/PromotionLotSchema';\nimport { OrganisationSchema } from './organisations/organisations';\nimport { UserSchema } from './users/users';\nimport InterestRatesSchema from './interestRates/schemas/interestRatesSchema';\nimport Irs10ySchema from './irs10y/schemas/irs10ySchema';\nimport MortgageNoteSchema from './mortgageNotes/schemas/MortgageNoteSchema';\nimport ContactSchema from './contacts/schemas/contactSchema';\nimport LenderSchema from './lenders/schemas/lenderSchema';\nimport RevenueSchema from './revenues/schemas/revenueSchema';\n\nexport { default as Borrowers } from './borrowers';\nexport { default as Loans } from './loans';\nexport { default as Lots } from './lots';\nexport { default as Offers } from './offers';\nexport { default as Organisations } from './organisations';\nexport { default as PromotionLots } from './promotionLots';\nexport { default as PromotionOptions } from './promotionOptions';\nexport { default as Promotions } from './promotions';\nexport { default as Properties } from './properties';\nexport { default as Tasks } from './tasks';\nexport { default as Users } from './users';\nexport { default as InterestRates } from './interestRates';\nexport { default as Irs10y } from './irs10y';\nexport { default as MortgageNotes } from './mortgageNotes';\nexport { default as Contacts } from './contacts';\nexport { default as Lenders } from './lenders';\nexport { default as LenderRules } from './lenderRules';\nexport { default as Revenues } from './revenues';\n\nexport * from './methods';\nexport * from './helpers';\nexport * from './containerToolkit';\n\n// Do this for autocompletion...\nexport const constants = _constants;\nexport const schemas = {\n  [constants.BORROWERS_COLLECTION]: BorrowerSchema,\n  [constants.LOANS_COLLECTION]: LoanSchema,\n  [constants.LOTS_COLLECTION]: LotSchema,\n  [constants.OFFERS_COLLECTION]: OfferSchema,\n  [constants.PROMOTION_LOTS_COLLECTION]: PromotionLotSchema,\n  [constants.PROMOTION_OPTIONS_COLLECTION]: PromotionOptionSchema,\n  [constants.PROMOTIONS_COLLECTION]: PromotionSchema,\n  [constants.PROPERTIES_COLLECTION]: PropertySchema,\n  [constants.TASKS_COLLECTION]: TasksSchema,\n  [constants.ORGANISATIONS_COLLECTION]: OrganisationSchema,\n  [constants.USERS_COLLECTION]: UserSchema,\n  [constants.INTEREST_RATES_COLLECTION]: InterestRatesSchema,\n  [constants.IRS10Y_COLLECTION]: Irs10ySchema,\n  [constants.MORTGAGE_NOTES_COLLECTION]: MortgageNoteSchema,\n  [constants.CONTACTS_COLLECTION]: ContactSchema,\n  [constants.LENDERS_COLLECTION]: LenderSchema,\n  [constants.REVENUES_COLLECTION]: RevenueSchema,\n};\n\nMeteor.isStaging = Meteor.settings.public.environment === 'staging';\nMeteor.isDevEnvironment = Meteor.settings.public.environment === 'dev-production';\n","// Leave this imported here for autoforms to work\nimport 'uniforms-bridge-simple-schema-2';\nimport SimpleSchema from 'simpl-schema';\n\nSimpleSchema.extendOptions([\n  'condition',\n  'customAllowedValues',\n  'customAutoValue',\n]);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport classnames from 'classnames';\n\nimport Icon from 'core/components/Icon';\nimport colors from 'core/config/colors';\nimport ValidIconContainer, { STATUS } from './ValidIconContainer';\n\nconst ValidIcon = ({ status, style, fade, hide }) => {\n  if (hide) {\n    return null;\n  }\n\n  switch (status) {\n  case STATUS.HIDE:\n    return null;\n  case STATUS.ERROR:\n    return (\n      <Icon\n        style={{ ...style, color: colors.error }}\n        icon=\"close\"\n        size={50}\n      />\n    );\n  case STATUS.VALID:\n    return (\n      <span\n        style={style}\n        className={classnames('saving-icon', { 'animated zoomOut': !!fade })}\n      >\n        <svg\n          className=\"checkmark\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 52 52\"\n        >\n          <circle\n            className=\"checkmark__circle\"\n            cx=\"26\"\n            cy=\"26\"\n            r=\"25\"\n            fill=\"none\"\n          />\n          <path\n            className=\"checkmark__check\"\n            fill=\"none\"\n            d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"\n          />\n        </svg>\n      </span>\n    );\n  case STATUS.TODO:\n    return (\n      <span className=\"todo-circle\" style={style}>\n        <span className=\"inside\" />\n      </span>\n    );\n  default:\n    return null;\n  }\n};\n\nValidIcon.propTypes = {\n  hide: PropTypes.bool,\n  style: PropTypes.objectOf(PropTypes.any),\n};\n\nValidIcon.defaultProps = {\n  style: {},\n  hide: false,\n};\n\nexport default ValidIconContainer(ValidIcon);\n","import { Meteor } from 'meteor/meteor';\n\nimport React, { Component } from 'react';\n\nexport const STATUS = {\n  ERROR: 'ERROR',\n  VALID: 'VALID',\n  HIDE: 'HIDE',\n  TODO: 'TODO',\n};\n\nconst SAVING_ANIMATION_DURATION_MS = 900;\n\nexport default WrappedComponent =>\n  class extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        status: this.getStatus(),\n      };\n\n      this.timer = null;\n    }\n\n    componentWillReceiveProps({ saving: nextSaving }) {\n      // If the animation is going on, don't trigger this again\n      if (this.timer) {\n        return;\n      }\n\n      const { saving } = this.props;\n\n      if (saving === false && nextSaving === true) {\n        // If saving is happening, hide the icon, and then make it reappear\n        this.setState({ status: STATUS.HIDE }, () => {\n          this.timer = Meteor.setTimeout(() => {\n            Meteor.clearTimeout(this.timer);\n            this.timer = null;\n          }, SAVING_ANIMATION_DURATION_MS);\n\n          this.setState({ status: this.getStatus() });\n        });\n      }\n    }\n\n    getStatus = () => {\n      const { error, required, value, todo } = this.props;\n\n      if (error) {\n        return STATUS.ERROR;\n      }\n      if (\n        todo\n        || (required === true && [undefined, '', null].includes(value))\n      ) {\n        return STATUS.TODO;\n      }\n\n      return STATUS.VALID;\n    };\n\n    render() {\n      const { status } = this.state;\n      return <WrappedComponent {...this.props} status={status} />;\n    }\n  };\n","export { default } from './ValidIcon.jsx';\n","import { Meteor } from 'meteor/meteor';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport * as constants from '../../config/constants';\nimport colors from '../../config/colors';\nimport { toNumber, toDecimalNumber } from '../../utils/conversionFunctions';\nimport MyTextInput from '../TextInput';\nimport ValidIcon from './ValidIcon';\nimport FormValidator from './FormValidator';\n\nconst styles = {\n  div: {\n    position: 'relative',\n  },\n  infoIcon: {\n    position: 'absolute',\n    bottom: 5,\n    left: -40,\n    padding: 10,\n  },\n  infoStyle: {\n    color: colors.primary,\n    borderColor: colors.primary,\n  },\n};\n\nconst cleanValue = v => (v === 0 ? 0 : v || '');\n\nconst isEqual = (value, currentValue, type) => {\n  if (type === 'date') {\n    // To avoid the saving icon from firing twice when chaning the date,\n    // only compare the date without times\n    // If we ever have date inputs in autoform that need time, we'll have to find another hack\n\n    return moment(value).isSame(currentValue, 'day');\n  }\n\n  return value === cleanValue(currentValue);\n};\n\nclass AutoFormTextInput extends Component {\n  constructor(props) {\n    super(props);\n\n    const { currentValue, number, decimal } = props.inputProps;\n\n    this.state = {\n      // Make sure 0 values are displayed properly\n      value: cleanValue(currentValue),\n      errorText: '',\n      saving: false,\n      showInfo: false,\n      history: [cleanValue(currentValue)],\n    };\n\n    if (number) {\n      if (decimal) {\n        this.formatter = toDecimalNumber;\n      } else {\n        this.formatter = toNumber;\n      }\n    } else {\n      this.formatter = v => v;\n    }\n  }\n\n  componentWillUnmount() {\n    Meteor.clearTimeout(this.timeout);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const valueIsDifferent = nextProps.inputProps.currentValue !== this.props.inputProps.currentValue;\n    if (valueIsDifferent) {\n      // To handle race conditions, check if the new value from the DB\n      // has been typed in the past\n      // If it has, then don't update the textfield\n      // If it hasn't, override it, because the backend says it should be a new value\n      const valueExistsInHistory = this.state.history.includes(nextProps.inputProps.currentValue);\n\n      if (!valueExistsInHistory) {\n        this.handleChange(null, nextProps.inputProps.currentValue);\n      }\n    }\n  }\n\n  handleBlur = () => {\n    this.setState({ showInfo: false });\n    // If the value has changed, save it\n    // state is initialized as '', but currentValue is initially undefined, so check that too\n    this.saveValue(true);\n  };\n\n  handleChange = (_, value) => {\n    const {\n      saveOnChange,\n      showValidIconOnChange,\n      inputProps: { currentValue, inputType },\n    } = this.props;\n\n    // Make sure value is a number if this is a number or money input\n    // const safeValue =\n    //   this.props.number || this.props.money\n    //     ? toNumber(event.target.value)\n    //     : event.target.value;\n\n    if (isEqual(value, currentValue, inputType)) {\n      return;\n    }\n\n    this.setState(\n      ({ history }) => ({ value, history: [...history, value] }),\n      () => {\n        // do not show saving icon when changing text, only show it on blur\n        if (saveOnChange) {\n          this.saveValue(showValidIconOnChange);\n        }\n      },\n    );\n  };\n\n  handleFocus = () => {\n    this.setState({ showInfo: true });\n  };\n\n  saveValue = (showSaving) => {\n    const {\n      updateFunc,\n      docId,\n      inputProps: { id, currentValue, inputType },\n    } = this.props;\n    const { value } = this.state;\n    // Save data to DB\n    const object = { [id]: value };\n    let shouldSave = true;\n\n    // Don't save if value hasn't changed\n    if (isEqual(value, currentValue, inputType)) {\n      shouldSave = false;\n    }\n\n    Meteor.clearTimeout(this.timeout);\n    this.timeout = Meteor.setTimeout(() => {\n      Promise.resolve()\n        .then(() => shouldSave && updateFunc({ object, id: docId }))\n        // on success, set saving briefly to true, before setting it to false again to trigger icon\n        .then(() => this.setState({ errorText: '', saving: showSaving }))\n        // If there was an error, reset value to the backend value\n        .catch(() => this.setState({ value: currentValue }))\n        .finally(() => this.setState({ saving: false }));\n    }, constants.AUTOSAVE_DEBOUNCE);\n  };\n\n  render() {\n    const {\n      inputProps: {\n        style,\n        label,\n        placeholder,\n        number,\n        id,\n        multiline,\n        rows,\n        info,\n        disabled,\n        money,\n        required,\n        date,\n        percent,\n        onFocusChange,\n        focused,\n        todo,\n\n        // Destructure these props to avoid warnings\n        inputRef,\n        currentValue,\n        condition,\n        decimal,\n        intlId,\n        saveOnChange,\n\n        ...otherProps\n      },\n      noValidator,\n      savingIconStyle,\n      admin,\n      inputLabelProps,\n    } = this.props;\n    const { value, errorText, saving, showInfo } = this.state;\n\n    let type;\n    if (money) {\n      type = 'money';\n    } else if (number) {\n      type = 'number';\n    } else if (date) {\n      type = 'date';\n    } else if (percent) {\n      type = 'percent';\n    } else {\n      type = 'text';\n    }\n\n    return (\n      <div className=\"form-input__row\" style={{ ...styles.div, ...style }}>\n        <MyTextInput\n          {...otherProps}\n          InputProps={{ onFocusChange, focused }}\n          label={label}\n          placeholder={placeholder}\n          value={value}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          onFocus={this.handleFocus}\n          type={type}\n          id={id}\n          multiline={multiline}\n          rows={rows}\n          info={errorText || (showInfo && info)}\n          error={!!errorText}\n          disabled={disabled}\n          style={{ width: '100%', ...style, marginBottom: 16 }}\n          noValidate\n          fullWidth\n          inputLabelProps={inputLabelProps}\n        />\n        <ValidIcon\n          saving={saving}\n          error={!!errorText}\n          style={{ ...styles.savingIcon, ...savingIconStyle }}\n          value={value}\n          required={required}\n          hide={admin}\n          todo={todo}\n        />\n        {!noValidator && <FormValidator {...this.props} />}\n      </div>\n    );\n  }\n}\n\nAutoFormTextInput.propTypes = {\n  autocomplete: PropTypes.string,\n  currentValue: PropTypes.any,\n  decimal: PropTypes.bool,\n  docId: PropTypes.string.isRequired,\n  floatingLabelFixed: PropTypes.bool,\n  info: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  inputProps: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.node.isRequired,\n    placeholder: PropTypes.node.isRequired,\n    style: PropTypes.objectOf(PropTypes.any),\n    multiline: PropTypes.bool,\n    disabled: PropTypes.bool,\n  }).isRequired,\n  inputStyle: PropTypes.objectOf(PropTypes.any),\n  money: PropTypes.bool,\n  noValidator: PropTypes.bool,\n  number: PropTypes.bool,\n  rows: PropTypes.number,\n  saveOnChange: PropTypes.bool,\n  savingIconStyle: PropTypes.object,\n  showValidIconOnChange: PropTypes.bool,\n  updateFunc: PropTypes.func,\n};\n\nAutoFormTextInput.defaultProps = {\n  autocomplete: '',\n  currentValue: '',\n  decimal: false,\n  floatingLabelFixed: true,\n  info: '',\n  inputStyle: undefined,\n  money: false,\n  noValidator: false,\n  number: false,\n  rows: 1,\n  saveOnChange: true,\n  savingIconStyle: {},\n  showValidIconOnChange: false,\n};\n\nexport default AutoFormTextInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\n\nimport Checkbox from 'core/components/Checkbox';\n\nconst handleCheck = (\n  { updateFunc, docId, inputProps: { id } },\n  isInputChecked,\n) => {\n  const object = { [`adminValidation.${id}`]: isInputChecked };\n  updateFunc({ object, id: docId });\n};\n\nconst styles = {\n  div: {\n    position: 'absolute',\n    top: '0px',\n    right: '0px',\n  },\n  wrapper: {\n    position: 'relative',\n    right: '-100%',\n  },\n};\n\nconst FormValidator = (props) => {\n  let id;\n  const { admin, doc, inputProps } = props;\n  if (!admin) {\n    return null;\n  }\n\n  if (!inputProps) {\n    id = props.id;\n  } else {\n    id = inputProps.id;\n  }\n\n  const checked = !!get(doc.adminValidation, id);\n\n  return (\n    <div style={styles.div}>\n      <div style={styles.wrapper}>\n        <Checkbox\n          label={checked ? 'Validé' : 'Valider'}\n          value={checked}\n          onChange={(e, c) => handleCheck(props, c)}\n        />\n      </div>\n    </div>\n  );\n};\n\nFormValidator.propTypes = {\n  admin: PropTypes.bool,\n  doc: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nFormValidator.defaultProps = {\n  admin: false,\n};\n\nexport default FormValidator;\n","// @flow\nimport React from 'react';\nimport LoanChecklistEmailTable from './LoanChecklistEmailTable';\n\ntype EmailLoanChecklistProps = {};\n\nconst EmailLoanChecklist = ({\n  labels,\n  title,\n  formatMessage,\n}: EmailLoanChecklistProps) => (\n  <>\n    <LoanChecklistEmailTable\n      columns={[\n        <h4 className=\"list-title\" key={title}>\n          {title}\n        </h4>,\n      ]}\n    />\n    {labels.length === 0 && (\n      <LoanChecklistEmailTable\n        columns={[\n          {\n            el: <div className=\"check-mark\">&#10003;</div>,\n            style: { width: '15px' },\n          },\n          {\n            el: formatMessage({ id: 'LoanChecklist.done' }),\n            style: { className: 'secondary' },\n          },\n        ]}\n      />\n    )}\n    {labels.map(label => (\n      <LoanChecklistEmailTable\n        key={label}\n        columns={[\n          {\n            el: (\n              <div className=\"bullet\">\n                <div>&nbsp;</div>\n              </div>\n            ),\n            style: { width: '15px' },\n          },\n          label,\n        ]}\n      />\n    ))}\n  </>\n);\n\nexport default EmailLoanChecklist;\n","// @flow\nimport React from 'react';\nimport { getChecklistMissingInformations } from '../helpers';\nimport styles from './styles';\nimport LoanChecklistEmailSection from './LoanChecklistEmailSection';\nimport LoanChecklistEmailTable from './LoanChecklistEmailTable';\n\ntype LoanChecklistEmailProps = {};\n\nconst LoanChecklistEmail = (props: LoanChecklistEmailProps) => {\n  const {\n    intl: { formatMessage },\n  } = props;\n  const { fields, documents } = getChecklistMissingInformations(props);\n\n  return (\n    <>\n      <LoanChecklistEmailSection\n        key=\"fields\"\n        missingInformations={fields}\n        label={formatMessage({ id: 'LoanChecklist.missingFields' })}\n        formatMessage={formatMessage}\n      />\n      <LoanChecklistEmailTable columns={[<span>&nbsp;</span>]} />\n      <div className=\"separator\" />\n      <LoanChecklistEmailSection\n        key=\"documents\"\n        missingInformations={documents}\n        label={formatMessage({\n          id: 'LoanChecklist.missingDocuments',\n        })}\n        formatMessage={formatMessage}\n      />\n    </>\n  );\n};\n\nexport default LoanChecklistEmail;\n","// @flow\nimport React from 'react';\nimport EmailLoanChecklist from './EmailLoanChecklist';\nimport LoanChecklistEmailTable from './LoanChecklistEmailTable';\n\ntype LoanChecklistEmailSectionProps = {\n  missingInformations: Object,\n  label: String,\n};\n\nconst LoanChecklistEmailSection = (props: LoanChecklistEmailSectionProps) => {\n  const {\n    missingInformations: { property = {}, borrowers = [] } = {},\n    label,\n    formatMessage,\n  } = props;\n\n  return (\n    <>\n      <LoanChecklistEmailTable\n        columns={[\n          <h3 className=\"section-title\" key={label}>\n            {label}\n          </h3>,\n        ]}\n      />\n      {!!Object.keys(property).length && (\n        <EmailLoanChecklist\n          title={property.title}\n          labels={property.labels}\n          formatMessage={formatMessage}\n        />\n      )}\n      {borrowers.map(borrower => (\n        <EmailLoanChecklist\n          key={borrower.title}\n          title={borrower.title}\n          labels={borrower.labels}\n          formatMessage={formatMessage}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default LoanChecklistEmailSection;\n","// @flow\nimport React from 'react';\n\ntype LoanChecklistEmailTableProps = {};\n\nconst displayColumn = (column, index = 0) => {\n  if (column.el) {\n    return (\n      <td key={index} {...column.style}>\n        {column.el}\n      </td>\n    );\n  }\n\n  return <td key={index}>{column}</td>;\n};\n\nconst LoanChecklistEmailTable = ({\n  columns = [],\n}: LoanChecklistEmailTableProps) => (\n  <table align=\"center\" cellPadding=\"0\" cellSpacing=\"0\">\n    <tbody>\n      <tr>{columns.map(displayColumn)}</tr>\n    </tbody>\n  </table>\n);\n\nexport default LoanChecklistEmailTable;\n","const styles = `\n.check-mark {\n    width: 15px;\n    height: 15px;\n    border-radius: 50%;     \n    background-color: #86E9DA;\n    color: white;     \n    margin: 0;\n    text-align: center;\n    font-size: 12px;\n    line-height: 16px;\n}\n\n.bullet {\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    border: 1px solid #2F5DE1;\n}\n\n.bullet div {\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    background-color: #2F5DE1;\n    margin: 2px ;\n }\n\n table {\n     width: 100%;\n }\n\n td {\n     padding: 9px;\n }\n\n .secondary {\n     color: rgba(0,0,0,0.3);\n }\n\n .section-title {\n     text-align: center;\n }\n\n .list-title {\n     text-align: center;\n     color: #ABABAB;\n }\n\n .separator {\n     margin: 8px;\n }\n`;\n\nexport default styles;\n","import { PROPERTY_CATEGORY } from '../../api/constants';\nimport Calculator from '../../utils/Calculator';\n\nconst shouldDisplayPropertyChecklist = (props) => {\n  const { loan = {} } = props;\n  const property = Calculator.selectProperty({ loan });\n  return (\n    !loan.hasPromotion\n    && property\n    && property._id // Perform extra check in case property is an empty object\n    && property.category !== PROPERTY_CATEGORY.PRO\n  );\n};\n\nconst makeLabelOverrider = doc => (id) => {\n  const additionalDocument = doc.additionalDocuments.find(({ id: documentId }) => documentId === id);\n\n  if (additionalDocument) {\n    return additionalDocument.label;\n  }\n\n  return false;\n};\n\nconst formatFileTitle = ({ doc, formatMessage }) => (file) => {\n  const labelOverrider = makeLabelOverrider(doc);\n  const label = labelOverrider(file);\n\n  return label || formatMessage({ id: `files.${file}` });\n};\n\nconst getPropertyMissingFields = (props) => {\n  const {\n    loan = {},\n    intl: { formatMessage },\n  } = props;\n  const displayPropertyChecklist = shouldDisplayPropertyChecklist(props);\n  const property = Calculator.selectProperty({ loan });\n\n  return {\n    ...(displayPropertyChecklist\n      ? {\n        property: {\n          title:\n              (property && property.address1)\n              || formatMessage({ id: 'general.property' }),\n          labels: Calculator.getMissingPropertyFields({ loan }).map(field =>\n            formatMessage({ id: `Forms.${field}` })),\n        },\n      }\n      : {}),\n  };\n};\n\nconst getPropertyMissingDocuments = (props) => {\n  const {\n    loan = {},\n    intl: { formatMessage },\n  } = props;\n  const displayPropertyChecklist = shouldDisplayPropertyChecklist(props);\n  const property = Calculator.selectProperty({ loan });\n\n  return {\n    ...(displayPropertyChecklist\n      ? {\n        property: {\n          title:\n              (property && property.address1)\n              || formatMessage({ id: 'general.property' }),\n          labels: Calculator.getMissingPropertyDocuments({\n            loan,\n          }).map(formatFileTitle({ doc: property, formatMessage })),\n        },\n      }\n      : {}),\n  };\n};\n\nconst getBorrowersMissingFields = (props) => {\n  const {\n    loan = {},\n    intl: { formatMessage },\n  } = props;\n  const { borrowers = [] } = loan;\n\n  return {\n    borrowers: borrowers.map((borrower, index) => ({\n      title:\n        borrower.name\n        || formatMessage(\n          { id: 'general.borrowerWithIndex' },\n          { index: index + 1 },\n        ),\n      labels: Calculator.getMissingBorrowerFields({\n        borrowers: borrower,\n      }).map(field => formatMessage({ id: `Forms.${field}` })),\n    })),\n  };\n};\n\nconst getBorrowersMissingDocuments = (props) => {\n  const {\n    loan = {},\n    intl: { formatMessage },\n  } = props;\n  const { borrowers = [] } = loan;\n\n  return {\n    borrowers: borrowers.map((borrower, index) => ({\n      title:\n        borrower.name\n        || formatMessage(\n          { id: 'general.borrowerWithIndex' },\n          { index: index + 1 },\n        ),\n      labels: Calculator.getMissingBorrowerDocuments({\n        loan,\n        borrowers: borrower,\n      }).map(formatFileTitle({ doc: borrower, formatMessage })),\n    })),\n  };\n};\n\nexport const getChecklistMissingInformations = props => ({\n  fields: {\n    ...getPropertyMissingFields(props),\n    ...getBorrowersMissingFields(props),\n  },\n  documents: {\n    ...getPropertyMissingDocuments(props),\n    ...getBorrowersMissingDocuments(props),\n  },\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedDate, FormattedTime, FormattedRelative } from 'react-intl';\n\nexport const IntlDate = ({ type, ...props }) => {\n  switch (type) {\n  case 'time':\n    return <FormattedTime {...props} />;\n  case 'relative':\n    return <FormattedRelative {...props} />;\n  default:\n    return <FormattedDate {...props} />;\n  }\n};\n\nIntlDate.propTypes = {\n  type: PropTypes.string,\n};\n\nexport default IntlDate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst MetricArea = ({ value, placeholder }) => {\n  if (!value || value === 0) {\n    return (\n      placeholder || (\n        <span>\n          0 m<sup>2</sup>\n        </span>\n      )\n    );\n  }\n\n  return (\n    <span>\n      {value} m<sup>2</sup>\n    </span>\n  );\n};\n\nMetricArea.propTypes = {\n  value: PropTypes.number,\n};\n\nMetricArea.defaultProps = {\n  value: undefined,\n};\n\nexport default MetricArea;\n","export { default as MetricArea } from './MetricArea';\nexport { default as IntlDate } from './IntlDate';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedNumber, FormattedPlural } from 'react-intl';\n\nconst shouldRenderDash = value => (!value && value !== 0) || value === Infinity;\n\nconst IntlNumber = ({ type, value, ...rest }) => {\n  // Render a dash if the number is not well specified\n  if (shouldRenderDash(value)) {\n    return '-';\n  }\n  if (typeof value !== 'number') {\n    // Render whatever comes if it is not a number\n    return value;\n  }\n\n  switch (type) {\n  case 'plural':\n    return <FormattedPlural {...rest} value={value} />;\n  default:\n    return <FormattedNumber {...rest} value={value} />;\n  }\n};\n\nIntlNumber.propTypes = {\n  value: PropTypes.number,\n};\n\nIntlNumber.defaultProps = {\n  value: undefined,\n};\n\nexport default IntlNumber;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { toMoney } from '../../../utils/conversionFunctions';\n\nconst getValue = ({ displayZero, value, currency, rounded }) => {\n  if (!displayZero && (!value || value === 0)) {\n    return '-';\n  }\n\n  if (value !== 0 && !value) {\n    return currency ? 0 : <>CHF&nbsp;0</>;\n  }\n\n  return currency ? (\n    <>\n      CHF&nbsp;\n      {toMoney(value, { rounded })}\n    </>\n  ) : (\n    toMoney(value, { rounded })\n  );\n};\n\n// The Intl standard for CHF is messed up, and display the currency after the\n// monetary value, which is not what we want. We can use IntlNumber later on\n// if needed\nconst Money = ({\n  value,\n  currency,\n  displayZero,\n  className,\n  tag: Tag,\n  rounded,\n}) => (\n  <Tag className={className}>\n    {getValue({ displayZero, value, currency, rounded })}\n  </Tag>\n);\n\nMoney.propTypes = {\n  className: PropTypes.string,\n  currency: PropTypes.bool,\n  displayZero: PropTypes.bool,\n  tag: PropTypes.string,\n  value: PropTypes.number,\n};\n\nMoney.defaultProps = {\n  className: '',\n  currency: true,\n  displayZero: true,\n  tag: 'span',\n  value: 0,\n};\n\nexport default Money;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { IntlNumber } from '..';\n\nconst Percent = ({ value, rounded, showPlus }) => (\n  <IntlNumber\n    value={value}\n    format={rounded ? 'percentageRounded' : 'percentage'}\n  >\n    {formattedValue => (\n      <span>\n        {showPlus ? (value > 0 ? '+' : '') : ''}\n        {formattedValue}\n      </span>\n    )}\n  </IntlNumber>\n);\n\nPercent.propTypes = {\n  showPlus: PropTypes.boolean,\n  value: PropTypes.number,\n};\n\nPercent.defaultProps = {\n  showPlus: false,\n  value: undefined,\n};\n\nexport default Percent;\n","export { default as Money } from './Money';\nexport { default as Percent } from './Percent';\nexport { default as IntlNumber } from './IntlNumber';\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Consumer } from './withTranslationContext';\n\n// For some \"select\" strings that need a default value\nconst defaultTranslationValues = {\n  purchaseType: 'ACQUISITION',\n};\n\nexport default ({ values = {}, ...props }) => (\n  <Consumer>\n    {(translationValues = {}) => (\n      <FormattedMessage\n        {...props}\n        values={{\n          ...defaultTranslationValues,\n          ...translationValues,\n          ...values,\n        }}\n      />\n    )}\n  </Consumer>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport AutoTooltip from '../tooltips/AutoTooltip';\nimport defaultIntlValues from './defaultIntlValues';\nimport FormattedMessage from './FormattedMessage';\n\nconst makeAutoTooltip = props => (content, key) => (\n  <AutoTooltip {...props} placement={props.tooltipPlacement} key={key}>\n    {content}\n  </AutoTooltip>\n);\n\n/**\n * T - A wrapper around react-intl's Formatted Message, it\n * automatically adds tooltips if they exist.\n * It is only rerendered if the id changes\n * @extends Component\n */\nexport const T = (props) => {\n  const { noTooltips, id, values, tooltipPlacement, ...rest } = props;\n\n  if (noTooltips) {\n    return <FormattedMessage {...props} />;\n  }\n  if (typeof id !== 'string') {\n    return id;\n  }\n  if (!id) {\n    throw new Error('Undefined id in Translation component');\n  }\n\n  const Auto = makeAutoTooltip(props);\n\n  return (\n    <FormattedMessage\n      id={id}\n      values={{ ...defaultIntlValues, ...values }}\n      {...rest}\n    >\n      {(...formattedMessage) => formattedMessage.map((msg, i) => Auto(msg, i))}\n    </FormattedMessage>\n  );\n};\n\nT.propTypes = {\n  id: PropTypes.string.isRequired,\n  noTooltips: PropTypes.bool,\n  tooltipPlacement: PropTypes.string,\n  values: PropTypes.object,\n};\n\nT.defaultProps = {\n  noTooltips: false,\n  tooltipPlacement: undefined,\n  values: {},\n};\n\nexport default T;\n","import React from 'react';\n\n// These values are injected into every intl message for convenience\nconst defaultIntlValues = {\n  verticalSpace: (\n    <span>\n      <br />\n      <br />\n    </span>\n  ),\n  purchaseType: '',\n  name: '',\n};\n\nexport default defaultIntlValues;\n","export * from './Translation';\nexport { default } from './Translation';\nexport * from './numberComponents';\nexport * from './formattingComponents';\n","import React from 'react';\n\nexport const { Consumer, Provider } = React.createContext();\n\nexport default translationValues => Component => props => (\n  <Consumer>\n    {(translationContext = {}) => (\n      <Provider value={{ ...translationContext, ...translationValues(props) }}>\n        <Component {...props} />\n      </Provider>\n    )}\n  </Consumer>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport omit from 'lodash/omit';\nimport { FormattedMessage } from 'react-intl';\nimport Popover from 'react-bootstrap/lib/Popover';\n\nimport DialogSimple from '../../DialogSimple/loadable';\nimport Button from '../../Button';\nimport defaultIntlValues from '../../Translation/defaultIntlValues';\nimport T from '../../Translation';\nimport TooltipSynonyms from '../TooltipSynonyms';\n\nconst getTooltip1Id = id => (id.includes('tooltip') ? id : `tooltip.${id}`);\nconst getTooltip2Id = id => (id.includes('tooltip') ? id : `tooltip2.${id}`);\n\nconst Tooltip = ({\n  tooltipConfig: { id, double: isDoubleTooltip },\n  match,\n  ...rest\n}) => {\n  let content = null;\n\n  if (isDoubleTooltip) {\n    content = (\n      <span className=\"tooltip\">\n        <FormattedMessage id={getTooltip1Id(id)} />\n        <DialogSimple\n          title={match}\n          // Dialogs normally have zIndex of 1500\n          // Usually dialogs should be behind tooltips (which are\n          // at zindex 1501), but when you trigger a dialog from a tooltip,\n          // it should be above the previous tooltip, hence 1502\n          style={{ zIndex: 1502 }}\n          buttonStyle={{ marginTop: 16 }}\n          label={<FormattedMessage id=\"general.learnMore\" />}\n          autoFocus\n          actions={handleClose => (\n            <Button\n              primary\n              label={<T id=\"general.ok\" />}\n              onClick={handleClose}\n            />\n          )}\n        >\n          <TooltipSynonyms tooltipId={id} match={match} />\n          <br />\n          <br />\n          <FormattedMessage id={getTooltip2Id(id)} values={defaultIntlValues} />\n        </DialogSimple>\n      </span>\n    );\n  } else {\n    content = <FormattedMessage id={getTooltip1Id(id)} />;\n  }\n\n  const passedProps = omit(rest, ['trigger', 'hide', 'match']);\n\n  return (\n    <Popover {...passedProps} id={id}>\n      {content}\n    </Popover>\n  );\n};\n\nTooltip.propTypes = {\n  match: PropTypes.string,\n  tooltipConfig: PropTypes.object.isRequired,\n};\n\nexport default Tooltip;\n","export { default } from './Tooltip';\n","import loadable from 'core/utils/loadable';\n\nexport default loadable({\n  req: () => require('./index'),\n  loader: () => import('./index'),\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport reactStringReplace from 'react-string-replace';\n\nimport { tooltips, TOOLTIP_LISTS } from 'core/arrays/tooltips';\nimport TooltipOverlay from './TooltipOverlay';\nimport { TooltipContainer } from './TooltipContext';\n\nexport const createRegexThatFindsAnyWordFromList = (list) => {\n  if (list) {\n    return new RegExp(`(${Object.keys(tooltips(list)).join('|')})`, 'gi');\n  }\n\n  return null;\n};\n\nexport const reformatString = string => string.replace(/’/gi, \"'\");\n\nconst parseTextForTooltips = props =>\n  reactStringReplace(\n    reformatString(props.children),\n    createRegexThatFindsAnyWordFromList(props.tooltipList),\n    (match, index) => (\n      <TooltipOverlay {...props} key={index} match={match}>\n        {match}\n      </TooltipOverlay>\n    ),\n  );\n\nexport const autoTooltipParser = (\n  string,\n  tooltipList = TOOLTIP_LISTS.GENERAL,\n) => parseTextForTooltips({ children: string, tooltipList });\n\nexport const AutoTooltip = (props) => {\n  const { children, tooltipId } = props;\n  if (!children) {\n    return null;\n  }\n\n  if (typeof children !== 'string') {\n    // If no id is given and children is not a string, return\n    return children;\n  }\n\n  if (tooltipId) {\n    return <TooltipOverlay {...props}>{children}</TooltipOverlay>;\n  }\n\n  // If no id is given and children is a string,\n  // automatically replace all matching strings with tooltips\n  const content = parseTextForTooltips(props);\n\n  return <span>{content}</span>;\n};\n\nAutoTooltip.propTypes = {\n  children: PropTypes.node,\n  tooltipList: PropTypes.string,\n};\n\nAutoTooltip.defaultProps = {\n  children: null,\n  tooltipList: TOOLTIP_LISTS.GENERAL,\n};\n\nexport default TooltipContainer(AutoTooltip);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { TOOLTIP_LISTS } from '../../arrays/tooltips';\n\nconst { Provider, Consumer } = React.createContext();\n\nexport const TooltipProvider = ({ tooltipList, children }) => (\n  <Provider value={tooltipList}>{children}</Provider>\n);\nexport const TooltipProviderContainer = tooltipList => Component => props => (\n  <Provider value={tooltipList}>\n    <Component {...props} />\n  </Provider>\n);\n\nexport const TooltipContainer = Component => props => (\n  <Consumer>\n    {tooltipList => <Component tooltipList={tooltipList} {...props} />}\n  </Consumer>\n);\n\nTooltipProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n  tooltipList: PropTypes.string,\n};\n\nTooltipProvider.defaultProps = {\n  tooltipList: TOOLTIP_LISTS.GENERAL,\n};\n\nexport { TOOLTIP_LISTS };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport OverlayTrigger from 'react-bootstrap/lib/OverlayTrigger';\n\nimport { tooltips } from '../../arrays/tooltips';\nimport Tooltip from './Tooltip/loadable';\n\nconst handleClick = (event) => {\n  // Trigger tooltip instead of another onClick handler in a parent\n  event.preventDefault();\n  event.stopPropagation();\n};\n\nconst TooltipOverlay = ({\n  placement,\n  tooltipList,\n  match,\n  trigger,\n  delayShow,\n  children,\n  tooltipId,\n}) => {\n  const tooltipConfig = tooltipId\n    ? { id: tooltipId, double: Array.isArray(tooltipId) }\n    : tooltips(tooltipList)[match.toLowerCase()];\n\n  return (\n    <OverlayTrigger\n      placement={placement}\n      overlay={(\n        <Tooltip\n          placement={placement}\n          trigger={trigger}\n          tooltipConfig={tooltipConfig}\n          match={match}\n        />\n      )}\n      rootClose\n      animation={false}\n      trigger={trigger}\n      delayShow={delayShow}\n      container={global.document !== undefined ? document.body : undefined}\n      onClick={handleClick}\n    >\n      <span className=\"tooltip-overlay\" tabIndex={-1}>\n        {children}\n      </span>\n    </OverlayTrigger>\n  );\n};\n\nTooltipOverlay.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.string])\n    .isRequired,\n  delayShow: PropTypes.number,\n  match: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n  placement: PropTypes.string,\n  tooltipList: PropTypes.string.isRequired,\n  trigger: PropTypes.arrayOf(PropTypes.string),\n};\n\nTooltipOverlay.defaultProps = {\n  delayShow: 300,\n  match: undefined,\n  placement: 'bottom',\n  trigger: ['click'], // Can be 'click', 'hover', and/or 'focus'\n};\n\nexport default TooltipOverlay;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withProps } from 'recompose';\n\nimport { generalTooltips } from '../../arrays/tooltips';\nimport T from '../Translation';\n\nconst findSynonymsForTooltipId = (tooltipId, match, tooltips) =>\n  Object.keys(tooltips)\n    .filter(tooltipMatcher => tooltips[tooltipMatcher].id === tooltipId)\n    .filter(synonym => synonym !== match.toLowerCase());\n\nexport const TooltipSynonyms = ({ tooltipId, match, tooltips }) => {\n  const synonyms = findSynonymsForTooltipId(tooltipId, match, tooltips);\n\n  if (!synonyms || synonyms.length <= 0) {\n    return null;\n  }\n\n  return (\n    <span className=\"tooltip-synonyms\">\n      <b>\n        <T id=\"TooltipSynonyms.title\" values={{ count: synonyms.length }} />\n        {': '}\n      </b>\n      <i>{synonyms.join(', ')}</i>\n    </span>\n  );\n};\n\nTooltipSynonyms.propTypes = {\n  match: PropTypes.string.isRequired,\n  tooltipId: PropTypes.string.isRequired,\n  tooltips: PropTypes.object.isRequired,\n};\n\nexport default withProps({ tooltips: generalTooltips })(TooltipSynonyms);\n","export const CUSTOM_AUTOFIELD_TYPES = {\n  DATE: 'DATE',\n  PERCENT: 'PERCENT',\n  TEXT_AREA: 'TEXT_AREA',\n  MONEY: 'MONEY',\n  MONEY_DECIMAL: 'MONEY_DECIMAL',\n  HTML_PREVIEW: 'HTML_PREVIEW',\n};\n\n// Use internally to manage exceptions\nexport const COMPONENT_TYPES = {\n  ARRAY: 'ARRAY',\n  DATE: 'DATE',\n  PERCENT: 'PERCENT',\n  SELECT: 'SELECT',\n  TEXT_AREA: 'TEXT_AREA',\n  MONEY: 'MONEY',\n  RENDER: 'RENDER',\n  HTML_PREVIEW: 'HTML_PREVIEW',\n};\n\nexport const FIELDS_TO_IGNORE = [\n  'label',\n  'field',\n  'fields',\n  'uniforms',\n  'InputLabelProps',\n  'onChange',\n  'model',\n  'changedMap',\n];\n","// @flow\n// @flow\nimport React from 'react';\nimport { withProps, withState, compose } from 'recompose';\n\nimport RadioButtons from 'core/components/RadioButtons';\nimport { addBorrower } from 'core/api';\nimport T from '../Translation';\nimport Button from '../Button';\nimport { CIVIL_STATUS } from '../../api/constants';\n\ntype BorrowerAddPartnerProps = {\n  handleClick: Function,\n  isLoading: boolean,\n};\n\nconst BorrowerAddPartner = ({\n  handleClick,\n  isLoading,\n}: BorrowerAddPartnerProps) => (\n  <div className=\"borrower-add-partner\">\n    <Button\n      onClick={handleClick}\n      primary\n      outlined\n      label={<T id=\"BorrowerAddPartner.label\" />}\n      loading={isLoading}\n    />\n  </div>\n);\n\nexport default compose(\n  withState('isLoading', 'setLoading', false),\n  withProps(({ loanId, setLoading }) => ({\n    handleClick: () => {\n      setLoading(true);\n      addBorrower\n        .run({\n          loanId,\n          borrower: { sameAddress: true, civilStatus: CIVIL_STATUS.MARRIED },\n        })\n        .finally(() => setLoading(false));\n    },\n  })),\n)(BorrowerAddPartner);\n","export { default } from './BorrowerAddPartner';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport omit from 'lodash/omit';\nimport MuiButton from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Fab from '@material-ui/core/Fab';\nimport { mapProps, compose } from 'recompose';\nimport cx from 'classnames';\n\nimport Icon from 'core/components/Icon';\nimport Link from '../Link';\n\nconst styles = theme => ({\n  root: {\n    color: theme.palette.error.main,\n    borderColor: theme.palette.error.main,\n    '&$raised': {\n      color: theme.palette.error.contrastText,\n      backgroundColor: theme.palette.error.main,\n    },\n    '&:hover': {\n      backgroundColor: fade(\n        theme.palette.text.primary,\n        theme.palette.action.hoverOpacity,\n      ),\n    },\n  },\n  raised: {},\n});\n\nconst getColor = ({ primary, secondary, color, error }) => {\n  if (primary) {\n    return 'primary';\n  }\n  if (secondary) {\n    return 'secondary';\n  }\n  if (error) {\n    return 'error';\n  }\n\n  return color;\n};\n\nconst getVariant = ({ raised, outlined }) => {\n  if (raised) {\n    return 'contained';\n  }\n  if (outlined) {\n    return 'outlined';\n  }\n  return undefined;\n};\n\nconst getContent = ({ icon, fab, label, children, iconAfter }) => {\n  if (iconAfter) {\n    return (\n      <>\n        {label || children}\n        {icon && !fab && <span style={{ height: '100%', width: 8 }} />}\n        {icon}\n      </>\n    );\n  }\n\n  return (\n    <>\n      {icon}\n      {icon && !fab && <span style={{ height: '100%', width: 8 }} />}\n      {label || children}\n    </>\n  );\n};\n\nconst Button = (props) => {\n  const childProps = omit(props, [\n    'iconAfter',\n    'primary',\n    'secondary',\n    'label',\n    'icon',\n    'link',\n    'raised',\n    'outlined',\n    'error',\n    'classes',\n  ]);\n\n  const variant = props.variant || getVariant(props);\n  const color = props.color || getColor(props);\n\n  const Comp = props.fab ? Fab : MuiButton;\n\n  const button = (\n    <Comp\n      {...childProps}\n      color={color}\n      variant={variant}\n      component={props.component || (props.link ? Link : 'button')}\n      to={props.to || undefined}\n      className={cx(props.className, {\n        [props.classes.root]: color === 'error',\n        [props.classes.raised]: !!(color === 'error' && variant === 'raised'),\n      })}\n    >\n      {getContent(props)}\n    </Comp>\n  );\n\n  if (props.tooltip) {\n    if (props.disabled) {\n      // When the button is disabled, it does not trigger pointer-events,\n      // so a tooltip will not appear\n      // Careful with styling here, as the additional span might break layouts\n      return (\n        <Tooltip title={props.tooltip}>\n          <span>{button}</span>\n        </Tooltip>\n      );\n    }\n\n    return <Tooltip title={props.tooltip}>{button}</Tooltip>;\n  }\n\n  return button;\n};\n\nButton.propTypes = {\n  children: PropTypes.node,\n  icon: PropTypes.node,\n  label: PropTypes.node,\n  link: PropTypes.bool,\n  raised: PropTypes.bool,\n};\n\nButton.defaultProps = {\n  raised: false,\n  link: false,\n};\n\nconst withLoadingProp = mapProps(({ loading, ...props }) =>\n  (loading\n    ? {\n      ...props,\n      disabled: true,\n      icon: <Icon type=\"loop-spin\" />,\n      children: props.fab ? null : props.children,\n    }\n    : props));\n\nexport default compose(\n  withLoadingProp,\n  withStyles(styles),\n)(Button);\n","export { default } from './Button';\n","// @flow\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nimport T from '../Translation';\nimport AutoFormTextInput from '../AutoForm/AutoFormTextInput';\nimport { CANTONS } from '../../api/constants';\n\ntype CantonFieldProps = {\n  canton: String,\n  intl: Object,\n};\n\nconst CantonField = ({ canton, intl: { formatMessage } }: CantonFieldProps) => (\n  <AutoFormTextInput\n    inputProps={{\n      currentValue:\n        CANTONS[canton] || formatMessage({ id: 'Forms.canton.placeholder' }),\n      label: <T id=\"Forms.canton\" />,\n      style: { width: '100%', maxWidth: '400px' },\n      readOnly: true,\n      required: true,\n      todo: !canton,\n      multiline: true,\n    }}\n    saveOnChange\n    showValidIconOnChange\n    updateFunc={() => Promise.resolve()}\n  />\n);\n\nexport default injectIntl(CantonField);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport MuiCheckbox from '@material-ui/core/Checkbox';\n\nconst Checkbox = ({ value, onChange, id, ...props }) => (\n  <FormControlLabel\n    control={(\n      <MuiCheckbox\n        className=\"checkbox\"\n        checked={value}\n        onChange={onChange}\n        value={id}\n      />\n    )}\n    {...props}\n  />\n);\n\nCheckbox.propTypes = {\n  disabled: PropTypes.bool,\n  id: PropTypes.string,\n  label: PropTypes.node,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.bool.isRequired,\n};\n\nCheckbox.defaultProps = {\n  id: undefined,\n  label: undefined,\n  disabled: false,\n};\n\nexport default Checkbox;\n","export { default } from './Checkbox';\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Dialog from '../Material/Dialog';\nimport Button from '../Button';\nimport T from '../Translation';\n\nexport default class DialogSimple extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { open: false, disabled: false, isCancel: true };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!this.props.close && nextProps.close) {\n      this.setState({ open: false });\n    }\n  }\n\n  handleOpen = event =>\n    this.setState(\n      { open: true },\n      () => this.props.onOpen && this.props.onOpen(),\n    );\n\n  handleClose = isSubmit => this.setState({ open: false, isCancel: !isSubmit });\n\n  disableClose = () => this.setState({ disabled: true });\n\n  enableClose = () => this.setState({ disabled: false });\n\n  render() {\n    const { open, disabled, isCancel } = this.state;\n    const {\n      actions,\n      autoFocus,\n      autoScroll,\n      bodyStyle,\n      buttonProps,\n      buttonStyle,\n      closeOnly,\n      children,\n      contentStyle,\n      important,\n      label,\n      onOpen,\n      passProps,\n      primary,\n      raised = true,\n      renderProps,\n      rootStyle,\n      secondary,\n      style,\n      title,\n      renderTrigger,\n      onClose = () => null,\n      ...otherProps\n    } = this.props;\n\n    const finalActions = (actions && actions(this.handleClose))\n      || (closeOnly\n        ? [\n          <Button\n            primary\n            label={<T id=\"general.close\" />}\n            onClick={(args) => {\n              onClose();\n              this.handleClose(args);\n            }}\n            key=\"close\"\n          />,\n        ]\n        : [\n          <Button\n            primary\n            label={<T id=\"general.cancel\" />}\n            onClick={this.handleClose}\n            key=\"cancel\"\n          />,\n          <Button\n            primary\n            label=\"Ok\"\n            onClick={() => this.handleClose(true)}\n            autoFocus={autoFocus} // TODO doesn't work with tooltips\n            disabled={disabled}\n            key=\"submit\"\n          />,\n        ]);\n\n    const childProps = {\n      disableClose: this.disableClose,\n      enableClose: this.enableClose,\n      isCancel,\n      handleClose: this.handleClose,\n    };\n\n    return (\n      // Prevent triggering background clicks\n      <span style={rootStyle} onClick={e => e.stopPropagation()}>\n        {renderTrigger ? (\n          renderTrigger({ handleOpen: this.handleOpen })\n        ) : (\n          <Button\n            raised={raised}\n            label={label}\n            onClick={this.handleOpen}\n            primary={primary}\n            secondary={secondary}\n            style={buttonStyle}\n            {...buttonProps}\n          />\n        )}\n        <Dialog\n          {...otherProps}\n          title={title}\n          actions={finalActions}\n          important={important}\n          open={open}\n          onClose={this.handleClose}\n          style={style}\n        >\n          {!!children && passProps\n            ? React.cloneElement(children, { ...childProps })\n            : renderProps\n              ? children(childProps)\n              : children}\n        </Dialog>\n      </span>\n    );\n  }\n}\n\nDialogSimple.propTypes = {\n  actions: PropTypes.func,\n  autoFocus: PropTypes.bool,\n  autoScroll: PropTypes.bool,\n  buttonStyle: PropTypes.objectOf(PropTypes.any),\n  close: PropTypes.bool,\n  closeOnly: PropTypes.bool,\n  important: PropTypes.bool,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  onOpen: PropTypes.func,\n  passProps: PropTypes.bool,\n  primary: PropTypes.bool,\n  rootStyle: PropTypes.objectOf(PropTypes.any),\n  secondary: PropTypes.bool,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nDialogSimple.defaultProps = {\n  actions: undefined,\n  autoFocus: false,\n  autoScroll: false,\n  buttonStyle: {},\n  closeOnly: false,\n  close: undefined,\n  important: false,\n  label: null,\n  onOpen: () => {},\n  passProps: false,\n  primary: false,\n  rootStyle: {},\n  secondary: false,\n  title: null,\n};\n","export { default } from './DialogSimple';\n","import loadable from 'core/utils/loadable';\n\nexport default loadable({\n  req: () => require('./index'),\n  loader: () => import('./index'),\n});\n","import { Meteor } from 'meteor/meteor';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DevError = ({ error }) =>\n  (Meteor.isDevelopment || Meteor.isTest ? (\n    <div className=\"error\" style={{ margin: 40 }}>\n      <span style={{ display: 'flex', alignItems: 'center' }}>\n        <h4>{error.name}</h4>:\n        <h3 style={{ marginLeft: 16 }}>{error.message}</h3>\n      </span>\n      {error.stack}\n    </div>\n  ) : null);\n\nDevError.propTypes = {\n  error: PropTypes.object.isRequired,\n};\n\nexport default DevError;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// import T from '../Translation';\nimport Button from '../Button';\nimport DevError from './DevError';\n\n// Don't user Translation here, because Loadable depends on it...\n// Find another solution once we really need this to be translated\nconst LayoutError = ({ style, error }) => (\n  <div className=\"flex-col center animated jackInTheBox\" style={style}>\n    <h2 className=\"error\">Woops une erreur!</h2>\n    <div className=\"description\">\n      <p>\n        Quelque chose n'a pas fonctionné comme prévu, on en est déjà informés,\n        et vous pouvez essayer de recharger la page.\n        <br />\n        Si ça ne résoud pas le problème, écrivez-nous à digital@e-potek.ch.\n      </p>\n    </div>\n    <DevError error={error} />\n    <div className=\"flex center\">\n      <Button raised color=\"primary\" onClick={() => location.reload()}>\n        Recharger la page\n      </Button>\n      <a href=\"/\" className=\"home-link\">\n        <Button raised color=\"secondary\">\n          Page d'accueil\n        </Button>\n      </a>\n    </div>\n  </div>\n);\n\nLayoutError.propTypes = {\n  error: PropTypes.object.isRequired,\n  style: PropTypes.object,\n};\n\nLayoutError.defaultProps = {\n  style: {},\n};\n\nexport default LayoutError;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Badge from '@material-ui/core/Badge';\n\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport AddIcon from '@material-ui/icons/AddCircleOutline';\nimport RemoveIcon from '@material-ui/icons/RemoveCircleOutline';\nimport LoopIcon from '@material-ui/icons/Loop';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport ForumIcon from '@material-ui/icons/Forum';\nimport MailIcon from '@material-ui/icons/MailOutline';\nimport PhoneIcon from '@material-ui/icons/Call';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport WaitingIcon from '@material-ui/icons/HourglassEmpty';\nimport ArrowUp from '@material-ui/icons/KeyboardArrowUp';\nimport DropDownCircle from '@material-ui/icons/ArrowDropDownCircle';\nimport ArrowDown from '@material-ui/icons/KeyboardArrowDown';\nimport ArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport ArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport SearchIcon from '@material-ui/icons/Search';\nimport PowerOffIcon from '@material-ui/icons/PowerSettingsNew';\nimport LockOpen from '@material-ui/icons/LockOpen';\nimport Lock from '@material-ui/icons/Lock';\nimport BuildingIcon from '@material-ui/icons/Business';\nimport HomeIcon from '@material-ui/icons/Home';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport FolderIcon from '@material-ui/icons/FolderOpen';\nimport Person from '@material-ui/icons/Person';\nimport FaceIcon from '@material-ui/icons/Face';\nimport Eye from '@material-ui/icons/Visibility';\nimport EyeCrossed from '@material-ui/icons/VisibilityOff';\nimport SortIcon from '@material-ui/icons/Sort';\nimport MoreIcon from '@material-ui/icons/MoreHoriz';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Apps from '@material-ui/icons/Apps';\nimport DollarSign from '@material-ui/icons/AttachMoney';\nimport ContactMail from '@material-ui/icons/ContactMail';\nimport People from '@material-ui/icons/People';\nimport DeveloperMode from '@material-ui/icons/DeveloperMode';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport CheckCircle from '@material-ui/icons/CheckCircle';\nimport RadioButtonChecked from '@material-ui/icons/RadioButtonChecked';\nimport Edit from '@material-ui/icons/Edit';\nimport TrendingUp from '@material-ui/icons/TrendingUp';\nimport TrendingDown from '@material-ui/icons/TrendingDown';\nimport TrendingFlat from '@material-ui/icons/TrendingFlat';\nimport Star from '@material-ui/icons/Star';\nimport StarHalf from '@material-ui/icons/StarHalf';\nimport StarEmpty from '@material-ui/icons/StarBorder';\nimport PersonAdd from '@material-ui/icons/PersonAdd';\nimport OfflinePin from '@material-ui/icons/OfflinePin';\nimport Save from '@material-ui/icons/Save';\nimport SupervisorAccount from '@material-ui/icons/SupervisedUserCircle';\nimport FlashOn from '@material-ui/icons/FlashOn';\nimport Report from '@material-ui/icons/Report';\nimport DeleteForever from '@material-ui/icons/DeleteForever';\nimport DeleteSweep from '@material-ui/icons/DeleteSweep';\nimport GroupAdd from '@material-ui/icons/GroupAdd';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport SettingsBackupRestore from '@material-ui/icons/SettingsBackupRestore';\nimport FilterList from '@material-ui/icons/FilterList';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Domain from '@material-ui/icons/Domain';\nimport Info from '@material-ui/icons/Info';\nimport AttachFile from '@material-ui/icons/AttachFile';\nimport CloudDownload from '@material-ui/icons/CloudDownload';\nimport LocalHospital from '@material-ui/icons/LocalHospital';\nimport Help from '@material-ui/icons/Help';\nimport MonetizationOn from '@material-ui/icons/MonetizationOn';\nimport InsertChart from '@material-ui/icons/InsertChart';\nimport Image from '@material-ui/icons/Image';\nimport Delete from '@material-ui/icons/Delete';\nimport Phonelink from '@material-ui/icons/Phonelink';\nimport OpenInNew from '@material-ui/icons/OpenInNew';\nimport Add from '@material-ui/icons/Add';\nimport Settings from '@material-ui/icons/Settings';\nimport Event from '@material-ui/icons/Event';\nimport Computer from '@material-ui/icons/Computer';\nimport Notifications from '@material-ui/icons/Notifications';\nimport Snooze from '@material-ui/icons/Snooze';\nimport DragHandle from '@material-ui/icons/DragHandle';\nimport PriorityHigh from '@material-ui/icons/PriorityHigh';\n\nexport const iconMap = {\n  close: CloseIcon,\n  check: CheckIcon,\n  add: AddIcon,\n  addBasic: Add,\n  remove: RemoveIcon,\n  warning: WarningIcon,\n  menu: MenuIcon,\n  forum: ForumIcon,\n  mail: MailIcon,\n  phone: PhoneIcon,\n  waiting: WaitingIcon,\n  up: ArrowUp,\n  down: ArrowDown,\n  right: ArrowRight,\n  left: ArrowLeft,\n  dropdown: DropDownCircle,\n  search: SearchIcon,\n  powerOff: PowerOffIcon,\n  lock: Lock,\n  lockOpen: LockOpen,\n  home: HomeIcon,\n  building: BuildingIcon,\n  dashboard: AssessmentIcon,\n  folder: FolderIcon,\n  loop: LoopIcon,\n  'loop-spin': { component: LoopIcon, props: { className: 'fa-spin' } },\n  person: Person,\n  face: FaceIcon,\n  eye: Eye,\n  eyeCrossed: EyeCrossed,\n  sort: SortIcon,\n  more: MoreIcon,\n  star: Star,\n  starHalf: StarHalf,\n  starEmpty: StarEmpty,\n  accountCircle: AccountCircle,\n  app: Apps,\n  personAdd: PersonAdd,\n  offlinePin: OfflinePin,\n  dollarSign: DollarSign,\n  contactMail: ContactMail,\n  people: People,\n  developerMode: DeveloperMode,\n  save: Save,\n  supervisorAccount: SupervisorAccount,\n  error: ErrorIcon,\n  checkCircle: CheckCircle,\n  radioButtonChecked: RadioButtonChecked,\n  flash: FlashOn,\n  report: Report,\n  deleteForever: DeleteForever,\n  deleteSweep: DeleteSweep,\n  groupAdd: GroupAdd,\n  edit: Edit,\n  trendingUp: TrendingUp,\n  trendingDown: TrendingDown,\n  trendingFlat: TrendingFlat,\n  expandMore: ExpandMoreIcon,\n  backupRestore: SettingsBackupRestore,\n  filter: FilterList,\n  arrowUp: ArrowUpward,\n  arrowDown: ArrowDownward,\n  domain: Domain,\n  info: Info,\n  attachFile: AttachFile,\n  download: CloudDownload,\n  health: LocalHospital,\n  help: Help,\n  monetizationOn: MonetizationOn,\n  chart: InsertChart,\n  image: Image,\n  delete: Delete,\n  phoneLink: Phonelink,\n  openInNew: OpenInNew,\n  settings: Settings,\n  event: Event,\n  computer: Computer,\n  notifications: Notifications,\n  snooze: Snooze,\n  dragHandle: DragHandle,\n  priorityHigh: PriorityHigh,\n};\n\nconst Icon = React.forwardRef((\n  {\n    type,\n    size,\n    tooltip,\n    tooltipPlacement,\n    style = {},\n    badgeContent,\n    ...props\n  },\n  ref,\n) => {\n  const iconStyle = {\n    ...style,\n    ...(size ? { width: size, height: size } : {}),\n  };\n\n  if (type !== null && typeof type === 'object') {\n    return React.cloneElement(type, { style: iconStyle });\n  }\n\n  const MyIcon = iconMap[type];\n\n  if (!MyIcon) {\n    throw new Error(`invalid icon type: ${type}`);\n  } else if (MyIcon.component) {\n    return <MyIcon.component {...MyIcon.props} {...props} {...iconStyle} />;\n  }\n\n  let icon = <MyIcon ref={ref} style={iconStyle} {...props} />;\n\n  if (tooltip) {\n    icon = (\n      <Tooltip\n        placement={tooltipPlacement}\n        title={tooltip}\n        enterTouchDelay={0}\n      >\n        {icon}\n      </Tooltip>\n    );\n  }\n\n  if (badgeContent) {\n    icon = (\n      <Badge badgeContent={badgeContent} color=\"error\">\n        {icon}\n      </Badge>\n    );\n  }\n\n  return icon;\n});\n\nIcon.propTypes = {\n  size: PropTypes.number,\n  type: PropTypes.node.isRequired,\n};\n\nIcon.defaultProps = {\n  size: undefined,\n};\n\nexport default Icon;\n","export { default } from './Icon';\n","// @flow\nimport { Link as DefaultLink } from 'react-router-dom';\nimport { withProps } from 'recompose';\n\nexport default withProps(({ disabled, onClick }) => ({\n  onClick: disabled ? e => e.preventDefault() : onClick,\n}))(DefaultLink);\n","export { default } from './Link';\n","import React from 'react';\nimport cx from 'classnames';\n\n// http://codepen.io/TaniaLD/pen/oKxep\nconst Loading = ({ small }) => (\n  // Fade it in so that the loader doesn't show up if loading is super fast\n  <div className={cx('loading-container animated fadeIn', { small })}>\n    <div className=\"loading-box\">\n      <div className=\"loader2\" />\n    </div>\n  </div>\n);\n\nexport default Loading;\n","export { default } from './Loading';\nexport { default as withLoading } from './withLoading';\n","import React from 'react';\nimport { branch, renderComponent } from 'recompose';\nimport Loading from './Loading';\n\nexport default (small, disableVar) =>\n  branch(\n    ({ loading, isLoading, ...props }) =>\n      (loading || isLoading) && (!disableVar || !props[disableVar]),\n    renderComponent(() => <Loading small={small} />),\n  );\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MuiDialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst Dialog = (props) => {\n  const { title, actions, children, important, text, ...otherProps } = props;\n  return (\n    <MuiDialog\n      disableBackdropClick={important}\n      disableEscapeKeyDown={important}\n      {...otherProps}\n    >\n      {title && <DialogTitle>{title}</DialogTitle>}\n      <DialogContent>\n        {text && <DialogContentText>{text}</DialogContentText>}\n        {children}\n      </DialogContent>\n      {actions && <DialogActions>{actions}</DialogActions>}\n    </MuiDialog>\n  );\n};\n\nDialog.propTypes = {\n  // A dialog can only be closed using the buttons if this boolean is set\n  actions: PropTypes.array,\n  children: PropTypes.node,\n  important: PropTypes.bool,\n  text: PropTypes.node,\n  title: PropTypes.node,\n};\n\nDialog.defaultProps = {\n  important: false,\n  title: undefined,\n  text: undefined,\n  actions: undefined,\n  children: undefined,\n};\n\nexport default Dialog;\n","// @flow\nimport React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\n\nexport default props => <FormControl variant=\"outlined\" {...props} />;\n","// @flow\nimport React from 'react';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nexport default props => <FormHelperText variant=\"outlined\" {...props} />;\n","export { default } from '@material-ui/core/OutlinedInput';\n","// @flow\nimport React from 'react';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nexport default props => <InputAdornment {...props} />;\n","// @flow\nimport React from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nexport default React.forwardRef((props, ref) => (\n  <InputLabel variant=\"outlined\" ref={ref} {...props} />\n));\n\nexport const useInputLabelWidth = () => {\n  const inputLabelRef = React.useRef(null);\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  React.useEffect(() => {\n    if (inputLabelRef && inputLabelRef.current) {\n      setLabelWidth(inputLabelRef.current.offsetWidth);\n    }\n  }, []);\n\n  return { inputLabelRef, labelWidth };\n};\n","export { default } from '@material-ui/core/Radio';\nexport { default as RadioGroup } from '@material-ui/core/RadioGroup';\n","import React, { Component } from 'react';\n\nimport Link from '../Link';\nimport T from '../Translation';\nimport Button from '../Button';\nimport Loading from '../Loading';\n\nclass MissingDoc extends Component {\n  constructor() {\n    super();\n    this.state = { render: false };\n  }\n\n  componentDidMount() {\n    // Set a timeout to allow subscriptions to refetch data before\n    // showing the missingdoc component\n    // 500ms is chosen because it should catch most subscription refreshes\n    // on regular connections\n    setTimeout(() => {\n      this.setState({ render: true });\n    }, 500);\n  }\n\n  render() {\n    const { render } = this.state;\n\n    if (!render) {\n      return <Loading />;\n    }\n\n    return (\n      <div className=\"flex-col center animated jackInTheBox\">\n        <div className=\"description\">\n          <p>\n            <T id=\"MissingDoc.text\" />\n          </p>\n        </div>\n        <div className=\"flex center\">\n          <Link to=\"/\" className=\"home-link\">\n            <Button raised color=\"secondary\">\n              <T id=\"MissingDoc.redirectHome\" />\n            </Button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\nexport default MissingDoc;\n","export { default } from './MissingDoc';\n","import { Meteor } from 'meteor/meteor';\nimport moment from 'moment';\n\nexport const FEEDBACK_OPTIONS = {\n  POSITIVE: 'POSITIVE',\n  NEGATIVE_NOT_COMPETITIVE: 'NEGATIVE_NOT_COMPETITIVE',\n  NEGATIVE_WITHOUT_FOLLOW_UP: 'NEGATIVE_WITHOUT_FOLLOW_UP',\n  CUSTOM: 'CUSTOM',\n};\n\nexport const FEEDBACK_OPTIONS_SETTINGS = {\n  [FEEDBACK_OPTIONS.POSITIVE]: {\n    enableComments: true,\n    enableOutro: true,\n  },\n  [FEEDBACK_OPTIONS.NEGATIVE_NOT_COMPETITIVE]: {\n    enableComments: true,\n    enableOutro: true,\n  },\n  [FEEDBACK_OPTIONS.NEGATIVE_WITHOUT_FOLLOW_UP]: {\n    enableComments: true,\n    enableCustomIntro: true,\n    enableOutro: true,\n  },\n  [FEEDBACK_OPTIONS.CUSTOM]: {\n    enableCustomIntro: false,\n    enableComments: false,\n    enableOutro: false,\n  },\n};\n\nconst greetings = ({ contactName, formatMessage }) =>\n  formatMessage({ id: 'Feedback.greetings' }, { contactName });\n\nconst introduction = ({\n  option,\n  borrowers,\n  singleBorrower,\n  address,\n  date,\n  formatMessage,\n}) => {\n  if (singleBorrower) {\n    return formatMessage(\n      {\n        id: FEEDBACK_OPTIONS_SETTINGS[option].enableCustomIntro\n          ? `Feedback.${option}.introduction.singleBorrower`\n          : 'Feedback.introduction.singleBorrower',\n      },\n      {\n        borrower: borrowers[0].name,\n        address,\n        date,\n      },\n    );\n  }\n\n  return formatMessage(\n    {\n      id: FEEDBACK_OPTIONS_SETTINGS[option].enableCustomIntro\n        ? `Feedback.${option}.introduction.twoBorrowers`\n        : 'Feedback.introduction.twoBorrowers',\n    },\n    {\n      borrower1: borrowers[0].name,\n      borrower2: borrowers[1].name,\n      address,\n      date,\n    },\n  );\n};\n\nconst outro = ({ borrowers, singleBorrower, option, formatMessage }) => {\n  if (singleBorrower) {\n    return formatMessage(\n      { id: `Feedback.${option}.outro.singleBorrower` },\n      { borrower: borrowers[0].name, singleBorrower: true },\n    );\n  }\n\n  return formatMessage(\n    { id: `Feedback.${option}.outro.twoBorrowers` },\n    {\n      borrower1: borrowers[0].name,\n      borrower2: borrowers[1].name,\n      singleBorrower: false,\n    },\n  );\n};\n\nconst closing = ({ assignee, formatMessage }) =>\n  formatMessage({ id: 'Feedback.closing' }, { assignee });\n\nexport const makeFeedback = ({ model, offer, formatMessage }) => {\n  const { option, comments = [], customFeedback = '' } = model;\n  const {\n    lender: {\n      contact: { firstName: contactName },\n      loan: {\n        borrowers,\n        user: { assignedEmployee },\n      },\n    },\n    property,\n    createdAt,\n  } = offer;\n\n  const { firstName: assignee = 'e-Potek' } = assignedEmployee || {};\n  const { address1, zipCode, city } = property || {};\n\n  if (!property || !address1 || !zipCode || !city) {\n    throw new Meteor.Error('No property or address');\n  }\n\n  const address = `${address1}, ${zipCode} ${city}`;\n\n  if (option === FEEDBACK_OPTIONS.CUSTOM) {\n    // Replace all returns into HTML\n    return customFeedback.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>');\n  }\n\n  let feedback = '';\n  const singleBorrower = borrowers.length === 1;\n\n  if (option) {\n    feedback = feedback.concat(greetings({ contactName, formatMessage }));\n    feedback = feedback.concat(introduction({\n      option,\n      borrowers,\n      singleBorrower,\n      address,\n      date: moment(createdAt).format('DD.MM.YYYY'),\n      formatMessage,\n    }));\n    feedback = feedback.concat(formatMessage({ id: `Feedback.${option}.body` }, { singleBorrower }));\n\n    if (comments.length && FEEDBACK_OPTIONS_SETTINGS[option].enableComments) {\n      feedback = feedback.concat(formatMessage(\n        { id: `Feedback.${option}.comments` },\n        { singleBorrower },\n      ));\n      feedback = feedback.concat(\n        '<ul>',\n        comments\n          .filter(x => x)\n          .map(comment => `<li><b>${comment}</b></li>`)\n          .join('\\n'),\n        '</ul>',\n      );\n    }\n\n    if (FEEDBACK_OPTIONS_SETTINGS[option].enableOutro) {\n      feedback = feedback.concat(outro({ option, singleBorrower, borrowers, formatMessage }));\n    }\n\n    feedback = feedback.concat(closing({ assignee, formatMessage }));\n  }\n\n  return feedback;\n};\n","// @flow\nimport React from 'react';\n\nimport { Percent } from '../Translation';\nimport StatusIcon from '../StatusIcon';\nimport { SUCCESS, ERROR } from '../../api/constants';\n\ntype PercentWithStatusProps = {\n  value: number,\n  status?: String,\n  tooltip?: String,\n  id?: String,\n  rounded?: boolean,\n};\n\nconst PercentWithStatus = ({\n  value,\n  status = value >= 1 ? SUCCESS : ERROR,\n  id,\n  tooltip,\n  rounded,\n}: PercentWithStatusProps) => (\n  <React.Fragment>\n    {Number.isNaN(value) ? '-' : <Percent value={value} rounded={rounded} />}\n    {!Number.isNaN(value) && (\n      <StatusIcon\n        status={status}\n        className=\"icon\"\n        style={{ marginLeft: 4 }}\n        tooltip={tooltip}\n        id={id}\n      />\n    )}\n  </React.Fragment>\n);\n\nexport default PercentWithStatus;\n","export { default } from './PercentWithStatus';\n","// @flow\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport Icon from 'core/components/Icon';\nimport { SUCCESS, WARNING, ERROR } from 'core/api/constants';\nimport colors from 'core/config/colors';\nimport T from '../Translation';\n\nconst styles = {\n  [SUCCESS]: { color: colors.success, fill: colors.success },\n  [WARNING]: { color: colors.warning, fill: colors.warning },\n  [ERROR]: { color: colors.error, fill: colors.error },\n};\n\nconst StatusIcon = React.forwardRef(({ id, status, style = {}, tooltip, ...rest }, ref) => {\n  if (!status) {\n    return null;\n  }\n\n  const icon = (\n    <Icon\n      type={status === SUCCESS ? 'checkCircle' : 'error'}\n      style={{ ...styles[status], ...style }}\n      ref={ref}\n      {...rest}\n    />\n  );\n\n  if (tooltip) {\n    return (\n      <Tooltip\n        title={\n          typeof tooltip === 'object' ? (\n            tooltip\n          ) : (\n            <T id={`StatusIconTooltip.${id}.${status}`} />\n          )\n        }\n        placement=\"right\"\n        enterTouchDelay={0}\n      >\n        {icon}\n      </Tooltip>\n    );\n  }\n\n  return icon;\n});\n\nStatusIcon.propTypes = {\n  status: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n};\n\nStatusIcon.defaultProps = {\n  status: undefined,\n};\n\nexport default StatusIcon;\n","// @flow\nexport { default } from './StatusIcon.jsx';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport MaskedInput from 'react-text-mask';\nimport moment from 'moment';\nimport classnames from 'classnames';\n\nimport InputAdornment from '../Material/InputAdornment';\nimport FormHelperText from '../Material/FormHelperText';\nimport InputLabel, { useInputLabelWidth } from '../Material/InputLabel';\nimport FormControl from '../Material/FormControl';\nimport Input from '../Material/Input';\nimport { swissFrancMask, percentMask } from '../../utils/textMasks';\nimport { toNumber } from '../../utils/conversionFunctions';\n\nconst getDefaults = ({ type, id, onChange, value, simpleOnChange }) => {\n  if (simpleOnChange) {\n    return { onChangeHandler: onChange, value };\n  }\n\n  switch (type) {\n  case 'money':\n    return {\n      onChangeHandler: event => onChange(id, toNumber(event.target.value)),\n      showMask: true,\n      mask: swissFrancMask,\n      placeholder: 0,\n      value,\n    };\n  case 'percent':\n    return {\n      onChangeHandler: event =>\n        onChange(\n          id,\n          Math.round(parseFloat(event.target.value) * 100) / 10000,\n        ),\n      showMask: true,\n      mask: percentMask,\n      placeholder: '%',\n      value: (value * 100).toFixed(2),\n    };\n  case 'number':\n    return {\n      onChangeHandler: event => onChange(id, toNumber(event.target.value)),\n      showMask: false,\n      value,\n    };\n  case 'date':\n    return {\n      onChangeHandler: event => onChange(id, event.target.value, event),\n      onDateChange: (val) => {\n        // This specific format should be used for the server to get the\n        // date in the right order\n        const date = moment(val).format('YYYY-MM-DD');\n        // Allow setting a date to null\n        onChange(id, val ? date : null, {});\n      },\n      showMask: false,\n      value: value ? moment(value) : null,\n    };\n  default:\n    return {\n      // Pass event as third argument, for some components which need it\n      // like react-autosuggest\n      onChangeHandler: event => onChange(id, event.target.value, event),\n      showMask: false,\n      value,\n    };\n  }\n};\n\nexport const getFinalPlaceholder = ({\n  noIntl,\n  placeholder,\n  defaultPlaceholder,\n  intl,\n  type,\n}) => {\n  let finalPlaceholder;\n  if (noIntl) {\n    finalPlaceholder = placeholder || defaultPlaceholder;\n  } else {\n    finalPlaceholder = placeholder && typeof placeholder === 'string'\n      ? `${intl.formatMessage({\n        id: 'Forms.textInput.placeholderPrefix',\n      })} ${intl.formatMessage({ id: placeholder })}`\n      : defaultPlaceholder;\n  }\n\n  // Ignore placeholder for money inputs, and just show the currency\n  // Showing an amount is confusing\n  if (type === 'money') {\n    finalPlaceholder = defaultPlaceholder;\n  }\n\n  return finalPlaceholder;\n};\nconst TextInput = (props) => {\n  const {\n    classes,\n    className,\n    error,\n    fullWidth,\n    id,\n    info,\n    inputComponent,\n    InputProps,\n    inputProps,\n    inputRef,\n    intl,\n    label,\n    labelStyle,\n    noIntl,\n    onChange,\n    placeholder,\n    simpleOnChange,\n    style,\n    type,\n    inputType,\n    inputLabelProps,\n    ...otherProps\n  } = props;\n\n  const {\n    onChangeHandler,\n    onDateChange,\n    showMask,\n    mask,\n    placeholder: defaultPlaceholder,\n    value,\n  } = getDefaults(props);\n  const { inputLabelRef, labelWidth } = useInputLabelWidth(!!label);\n\n  return (\n    <FormControl\n      error={error}\n      className={classnames('mui-text-input', className)}\n      style={style}\n      fullWidth={fullWidth}\n    >\n      {label && (\n        <InputLabel\n          ref={inputLabelRef}\n          htmlFor={id}\n          style={labelStyle}\n          {...inputLabelProps}\n        >\n          {label}\n        </InputLabel>\n      )}\n      <Input\n        {...otherProps}\n        labelWidth={labelWidth}\n        className={classes ? Object.values(classes).join(' ') : ''}\n        id={id}\n        onChange={onChangeHandler}\n        type={inputType || 'text'}\n        style={{ fontSize: 'inherit' }}\n        inputComponent={showMask ? MaskedInput : inputComponent || undefined}\n        inputProps={{\n          ...inputProps, // Backwards compatible\n          ...InputProps,\n          value,\n          placeholder: getFinalPlaceholder({\n            noIntl,\n            placeholder,\n            defaultPlaceholder,\n            intl,\n            type,\n          }),\n          noValidate: true,\n          mask: mask || undefined,\n          pattern: mask ? '[0-9]*' : undefined,\n          onDateChange: inputType === 'date' ? onDateChange : undefined,\n        }}\n        startAdornment={\n          props.type === 'money' ? (\n            <InputAdornment position=\"start\">CHF</InputAdornment>\n          ) : null\n        }\n      />\n      {info && <FormHelperText>{info}</FormHelperText>}\n    </FormControl>\n  );\n};\n\nTextInput.propTypes = {\n  error: PropTypes.bool,\n  id: PropTypes.string,\n  info: PropTypes.node,\n  inputComponent: PropTypes.func,\n  inputProps: PropTypes.object,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  noIntl: PropTypes.bool,\n  onChange: PropTypes.func,\n  placeholder: PropTypes.node,\n  simpleOnChange: PropTypes.bool, // Removes all onChange modifications\n  type: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n\nTextInput.defaultProps = {\n  error: false,\n  id: undefined,\n  info: undefined,\n  inputComponent: null,\n  inputProps: undefined,\n  label: '',\n  noIntl: false,\n  onChange: undefined,\n  placeholder: undefined,\n  simpleOnChange: false,\n  type: undefined,\n  value: undefined,\n};\n\nexport default injectIntl(TextInput);\n","export { default } from './TextInput';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Radio, { RadioGroup } from 'core/components/Material/Radio';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport T from 'core/components/Translation';\n\nconst safeChange = (value, id, onChange, options) => {\n  // If all options are booleans, transform the onChange handler's value\n  // to booleans\n  if (options.every(o => typeof o === 'boolean' || typeof o.id === 'boolean')) {\n    return onChange(id, value === 'true');\n  }\n  return onChange(id, value);\n};\n\n// Cast value to strings, so that is plays nicely with material-ui,\n// in the onChange handler, convert back to boolean\nconst RadioButtons = ({\n  options,\n  onChange,\n  id,\n  intlPrefix,\n  value,\n  label,\n  style,\n  radioGroupStyle,\n  disabled,\n}) => (\n  <FormControl style={style} className=\"mui-radio-group\">\n    {React.isValidElement(label) && <FormLabel htmlFor={id}>{label}</FormLabel>}\n\n    <RadioGroup\n      onChange={(event, newValue) =>\n        safeChange(newValue, id, onChange, options)\n      }\n      value={`${value}`}\n      name={id}\n      id={id}\n      className=\"radio-group flex\"\n      style={\n        radioGroupStyle || {\n          justifyContent: 'flex-start',\n          flexDirection: 'row',\n        }\n      }\n    >\n      {options.map(option => (\n        <FormControlLabel\n          control={<Radio className=\"radio\" />}\n          key={option.id || option}\n          value={`${option.id !== undefined ? option.id : option}`}\n          label={option.label || <T id={`${intlPrefix}.${option}`} />}\n          disabled={disabled}\n        />\n      ))}\n    </RadioGroup>\n  </FormControl>\n);\n\nRadioButtons.propTypes = {\n  disabled: PropTypes.bool,\n  id: PropTypes.string,\n  intlPrefix: PropTypes.string,\n  label: PropTypes.node,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired,\n  style: PropTypes.object,\n  value: PropTypes.any,\n};\n\nRadioButtons.defaultProps = {\n  label: '',\n  style: {},\n  value: undefined,\n  intlPrefix: '',\n  disabled: false,\n};\n\nexport default RadioButtons;\n","export const properties = [\n  {\n    name: '2.01',\n    value: 1290000,\n    lots: ['2', '3', 'a'],\n  },\n  {\n    name: '2.02',\n    value: 920000,\n    lots: ['4', '5', 'b'],\n  },\n  {\n    name: '2.03',\n    value: 950000,\n    lots: ['6', '7', 'c'],\n  },\n  {\n    name: '2.04',\n    value: 1340000,\n    lots: ['8', '9', 'd'],\n  },\n  {\n    name: '3.01',\n    value: 1360000,\n    lots: ['10', '11', 'e'],\n  },\n  {\n    name: '3.02',\n    value: 920000,\n    lots: ['12', '13', 'f'],\n  },\n  {\n    name: '3.03',\n    value: 970000,\n    lots: ['14', '15', 'g'],\n  },\n  {\n    name: '3.04',\n    value: 1410000,\n    lots: ['16', '17', 'h'],\n  },\n  {\n    name: '4.01',\n    value: 1370000,\n    lots: ['18', '19', 'i'],\n  },\n  {\n    name: '4.02',\n    value: 955000,\n    lots: ['1', 'j'],\n  },\n  {\n    name: '4.03',\n    value: 1460000,\n    lots: ['20', '21', 'k'],\n  },\n];\n","import { Meteor } from 'meteor/meteor';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Roles } from 'meteor/alanning:roles';\nimport range from 'lodash/range';\nimport random from 'lodash/random';\nimport shuffle from 'lodash/shuffle';\nimport faker from 'faker/locale/fr';\n\nimport LoanService from '../../api/loans/server/LoanService';\nimport PromotionService from '../../api/promotions/server/PromotionService';\nimport UserService from '../../api/users/server/UserService';\nimport PromotionOptionService from '../../api/promotionOptions/server/PromotionOptionService';\nimport PromotionLotService from '../../api/promotionLots/server/PromotionLotService';\nimport LotService from '../../api/lots/server/LotService';\nimport {\n  LOT_TYPES,\n  PROMOTION_TYPES,\n  PROMOTION_STATUS,\n  ROLES,\n} from '../../api/constants';\nimport { properties } from './data';\n\nconst DEMO_PROMOTION = {\n  name: 'Pré Polly',\n  type: PROMOTION_TYPES.SHARE,\n  status: PROMOTION_STATUS.OPEN,\n  address1: 'Chemin de Pré-Polly 1',\n  zipCode: 1233,\n  city: 'Bernex',\n  contacts: [\n    {\n      name: 'Marc Steiner',\n      title: 'Commercialisation',\n      email: 'marc@test.com',\n      phoneNumber: '+41 21 800 90 70',\n    },\n    {\n      name: 'Léo Dind',\n      title: 'Architecte',\n      email: 'leo@test.com',\n      phoneNumber: '+41 58 999 21 21',\n    },\n  ],\n};\n\nconst createLots = (promotionId) => {\n  properties.forEach(({ name, value, lots }) => {\n    const promotionLotId = PromotionService.insertPromotionProperty({\n      promotionId,\n      property: { name, value },\n    });\n    const lotIds = lots.map(lotName =>\n      LotService.insert({\n        name: lotName,\n        value: 0,\n        type:\n          Number.parseInt(lotName, 10) > 0\n            ? LOT_TYPES.PARKING_CAR\n            : LOT_TYPES.BASEMENT,\n      }));\n    lotIds.forEach(lotId =>\n      PromotionLotService.addLink({\n        id: promotionLotId,\n        linkName: 'lots',\n        linkId: lotId,\n      }));\n    lotIds.forEach(lotId =>\n      PromotionService.addLink({\n        id: promotionId,\n        linkName: 'lots',\n        linkId: lotId,\n      }));\n  });\n};\n\nconst getDistinctRandomValues = (arr, amount) => shuffle(arr).slice(0, amount);\n\nconst addPromotionOptions = (loanId, promotion) => {\n  const amount = random(1, 3);\n  return getDistinctRandomValues(promotion.promotionLotLinks, amount).map(({ _id: promotionLotId }) => {\n    const promotionOptionId = PromotionOptionService.insert({\n      loanId,\n      promotionLotId,\n    });\n    return promotionOptionId;\n  });\n};\n\nconst createUsers = async ({\n  users,\n  promotionId,\n  promotion,\n  withInvitedBy,\n}) => {\n  console.log('creating users');\n  const promises = [];\n  for (let i = 0; i < range(users).length; i += 1) {\n    console.log(`creating user ${i + 1}`);\n\n    const user = {\n      email: `user-${i}@e-potek.ch`,\n      firstName: faker.name.firstName(),\n      lastName: faker.name.lastName(),\n      phoneNumber: faker.phone.phoneNumber(),\n    };\n\n    const promotionCustomerId = UserService.createUser({\n      role: ROLES.USER,\n      options: {\n        email: user.email,\n        password: '12345',\n      },\n    });\n\n    UserService.update({\n      userId: promotionCustomerId,\n      object: {\n        firstName: user.firstName,\n        lastName: user.lastName,\n        phoneNumbers: [user.phoneNumber],\n      },\n    });\n\n    promises.push(PromotionService.inviteUser({\n      promotionId,\n      userId: promotionCustomerId,\n      sendInvitation: false,\n      ...(withInvitedBy ? { pro: { _id: Meteor.userId() } } : {}),\n    }).then((loanId) => {\n      const promotionOptionIds = addPromotionOptions(loanId, promotion);\n      LoanService.setPromotionPriorityOrder({\n        loanId,\n        promotionId,\n        priorityOrder: promotionOptionIds,\n      });\n    }));\n  }\n\n  await Promise.all(promises);\n};\n\nexport const createPromotionDemo = async (\n  userId,\n  addCurrentUser,\n  withPromotionOptions,\n  users,\n  withInvitedBy = false,\n) => {\n  console.log('Creating promotion demo...');\n  const promotionId = PromotionService.insert({\n    promotion: DEMO_PROMOTION,\n    userId,\n  });\n\n  console.log('creating lots');\n  createLots(promotionId);\n\n  const promotion = PromotionService.get(promotionId);\n\n  if (addCurrentUser) {\n    console.log('Adding current user');\n\n    const loanId = await PromotionService.inviteUser({\n      promotionId,\n      userId: Meteor.userId(),\n      sendInvitation: false,\n    });\n    if (withPromotionOptions) {\n      const promotionOptionIds = addPromotionOptions(loanId, promotion);\n      LoanService.setPromotionPriorityOrder({\n        loanId,\n        promotionId,\n        priorityOrder: promotionOptionIds,\n      });\n    }\n  }\n\n  await createUsers({\n    users,\n    promotionId,\n    promotion,\n    withInvitedBy,\n  });\n\n  console.log('Done creating promotion');\n};\n","import { Meteor } from 'meteor/meteor';\nimport { createPromotionDemo } from './promotionDemoFixtures';\n\nMeteor.methods({\n  createDemoPromotion({\n    addCurrentUser,\n    withPromotionOptions,\n    users,\n    withInvitedBy,\n  } = {}) {\n    createPromotionDemo(\n      this.userId,\n      addCurrentUser,\n      withPromotionOptions,\n      Number.parseInt(users, 10),\n      withInvitedBy,\n    );\n  },\n});\n","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\n\nimport range from 'lodash/range';\n\nimport LoanService from 'core/api/loans/server/LoanService';\nimport {\n  STEPS,\n  STEP_ORDER,\n  ROLES,\n  PURCHASE_TYPE,\n  APPLICATION_TYPES,\n  ORGANISATION_TYPES,\n} from '../../api/constants';\nimport {\n  Borrowers,\n  Contacts,\n  Loans,\n  Lots,\n  Offers,\n  Organisations,\n  PromotionLots,\n  PromotionOptions,\n  Promotions,\n  Properties,\n  Tasks,\n  Users,\n} from '../../api';\nimport SecurityService from '../../api/security';\nimport TaskService from '../../api/tasks/server/TaskService';\nimport {\n  USER_COUNT,\n  UNOWNED_LOANS_COUNT,\n  LOANS_PER_USER,\n} from '../fixtureConfig';\nimport { createFakeLoan, addLoanWithData } from '../loanFixtures';\nimport {\n  createDevs,\n  createAdmins,\n  getFakeUsersIds,\n  createUser,\n  createFakeUsers,\n} from '../userFixtures';\nimport { createFakeOffer } from '../offerFixtures';\nimport { E2E_USER_EMAIL } from '../fixtureConstants';\nimport { createOrganisations } from '../organisationFixtures';\nimport { createFakeInterestRates } from '../interestRatesFixtures';\nimport {\n  emptyFakeBorrower,\n  completeFakeBorrower,\n} from '../../api/borrowers/fakes';\nimport { fakeProperty } from '../../api/properties/fakes';\nimport { emptyLoan, loanStep1, loanStep2 } from '../../api/loans/fakes';\n\nconst isAuthorizedToRun = () => !Meteor.isProduction || Meteor.isStaging || Meteor.isDevEnvironment;\n\nconst getAdmins = () => {\n  const admins = Users.find({ roles: { $in: [ROLES.ADMIN] } }).fetch();\n  if (admins.length <= 1) {\n    const newAdmins = createAdmins();\n    return newAdmins;\n  }\n  return admins.map(admin => admin._id);\n};\n\nconst deleteUsersRelatedData = (usersToDelete) => {\n  Borrowers.remove({ userId: { $in: usersToDelete } });\n  Properties.remove({ userId: { $in: usersToDelete } });\n  Offers.remove({ userId: { $in: usersToDelete } });\n  Loans.remove({ userId: { $in: usersToDelete } });\n};\n\nconst deleteUsers = usersToDelete =>\n  Users.remove({ _id: { $in: usersToDelete } });\n\nconst createFakeLoanFixture = ({\n  userId,\n  step,\n  completeFiles,\n  twoBorrowers,\n}) => {\n  const loanId = createFakeLoan({\n    userId,\n    step,\n    completeFiles,\n    twoBorrowers,\n  });\n  createFakeOffer(loanId);\n};\n\n// Create a test user used in app's e2e tests and all the fixtures it needs\nconst createTestUserWithData = () => {\n  const testUserId = createUser(E2E_USER_EMAIL, ROLES.USER);\n  const admins = getAdmins();\n\n  // Create 2 loans to check AppPage, which requires multiple loans to display\n  createFakeLoanFixture({\n    step: STEPS.SOLVENCY,\n    userId: testUserId,\n    adminId: admins[0]._id,\n    completeFiles: true,\n    twoBorrowers: true,\n  });\n  createFakeLoanFixture({\n    step: STEPS.REQUEST,\n    userId: testUserId,\n    adminId: admins[0]._id,\n    completeFiles: true,\n    twoBorrowers: true,\n  });\n};\n\nMeteor.methods({\n  generateTestData(currentUserEmail) {\n    try {\n      if (isAuthorizedToRun()) {\n        const devs = createDevs(currentUserEmail);\n        const admins = getAdmins();\n        const newUsers = createFakeUsers(USER_COUNT, ROLES.USER);\n        createOrganisations();\n\n        // for each regular fixture user, create a loan with a certain step\n        newUsers.forEach((userId, index) => {\n          const adminId = admins[Math.floor(Math.random() * admins.length)];\n\n          // based on index, always generate 0, 1 and 2 numbers\n          const loanStep = index % 3;\n\n          range(LOANS_PER_USER).forEach((_, loanIndex) => {\n            const step = LOANS_PER_USER < 3 ? loanStep : loanIndex % 3;\n            createFakeLoanFixture({\n              step: STEP_ORDER[step],\n              userId,\n              adminId,\n              twoBorrowers: true,\n            });\n          });\n        });\n\n        range(UNOWNED_LOANS_COUNT).forEach(() => {\n          createFakeLoan({});\n        });\n\n        createTestUserWithData();\n      }\n    } catch (error) {\n      // FIXME: If you throw an error here it does not appear without this\n      // try catch block\n      console.log('generateTestData error', error);\n    }\n  },\n\n  async purgeDatabase(currentUserId) {\n    check(currentUserId, String);\n    if (SecurityService.checkCurrentUserIsDev() && isAuthorizedToRun()) {\n      await Promise.all([\n        Borrowers.rawCollection().remove({}),\n        Contacts.rawCollection().remove({}),\n        Loans.rawCollection().remove({}),\n        Lots.remove({}),\n        Offers.rawCollection().remove({}),\n        Organisations.rawCollection().remove({}),\n        PromotionLots.rawCollection().remove({}),\n        PromotionOptions.rawCollection().remove({}),\n        Promotions.rawCollection().remove({}),\n        Properties.rawCollection().remove({}),\n        Tasks.rawCollection().remove({}),\n        Users.rawCollection().remove({ _id: { $ne: currentUserId } }),\n      ]);\n    }\n  },\n\n  purgeFakeData(currentUserId) {\n    check(currentUserId, String);\n    if (SecurityService.checkCurrentUserIsDev() && isAuthorizedToRun()) {\n      let fakeUsersIds = getFakeUsersIds();\n      deleteUsersRelatedData(fakeUsersIds);\n\n      fakeUsersIds = fakeUsersIds.filter(item => item !== currentUserId);\n      deleteUsers(fakeUsersIds);\n    }\n  },\n\n  purgePersonalData(currentUserId) {\n    SecurityService.checkCurrentUserIsDev();\n    return deleteUsersRelatedData([currentUserId]);\n  },\n\n  insertLoanRelatedTask() {\n    SecurityService.checkCurrentUserIsDev();\n    const loanId = LoanService.find({}).fetch()[0]._id;\n    if (loanId) {\n      return TaskService.insert({\n        object: { title: 'Random dev task', loanLink: { _id: loanId } },\n      });\n    }\n  },\n\n  createFakeOffer({ loanId }) {\n    SecurityService.checkCurrentUserIsDev();\n\n    return createFakeOffer(loanId);\n  },\n\n  createFakeInterestRates({ number }) {\n    SecurityService.checkCurrentUserIsDev();\n\n    return createFakeInterestRates({ number });\n  },\n\n  addEmptyLoan({ userId, twoBorrowers, addOffers, isRefinancing }) {\n    SecurityService.checkCurrentUserIsDev();\n\n    return addLoanWithData({\n      borrowers: twoBorrowers\n        ? [emptyFakeBorrower, emptyFakeBorrower]\n        : [emptyFakeBorrower],\n      properties: [],\n      loan: {\n        ...emptyLoan,\n        purchaseType: isRefinancing\n          ? PURCHASE_TYPE.REFINANCING\n          : PURCHASE_TYPE.ACQUISITION,\n      },\n      userId,\n      addOffers,\n    });\n  },\n\n  addLoanWithSomeData({ userId, twoBorrowers, addOffers, isRefinancing }) {\n    SecurityService.checkCurrentUserIsDev();\n\n    return addLoanWithData({\n      borrowers: twoBorrowers\n        ? [completeFakeBorrower, completeFakeBorrower]\n        : [completeFakeBorrower],\n      properties: [fakeProperty],\n      loan: {\n        ...loanStep1,\n        purchaseType: isRefinancing\n          ? PURCHASE_TYPE.REFINANCING\n          : PURCHASE_TYPE.ACQUISITION,\n      },\n      userId,\n      addOffers,\n    });\n  },\n\n  addCompleteLoan({ userId, twoBorrowers, isRefinancing }) {\n    SecurityService.checkCurrentUserIsDev();\n\n    return addLoanWithData({\n      borrowers: twoBorrowers\n        ? [completeFakeBorrower, completeFakeBorrower]\n        : [completeFakeBorrower],\n      properties: [fakeProperty],\n      loan: {\n        ...loanStep2,\n        purchaseType: isRefinancing\n          ? PURCHASE_TYPE.REFINANCING\n          : PURCHASE_TYPE.ACQUISITION,\n        applicationType: APPLICATION_TYPES.FULL,\n        customName: 'Ma maison à la plage',\n      },\n      userId,\n      addOffers: true,\n    });\n  },\n\n  addAnonymousLoan({ twoBorrowers, isRefinancing }) {\n    SecurityService.checkCurrentUserIsDev();\n\n    return addLoanWithData({\n      borrowers: twoBorrowers\n        ? [emptyFakeBorrower, emptyFakeBorrower]\n        : [emptyFakeBorrower],\n      properties: [],\n      loan: {\n        ...emptyLoan,\n        purchaseType: isRefinancing\n          ? PURCHASE_TYPE.REFINANCING\n          : PURCHASE_TYPE.ACQUISITION,\n        anonymous: true,\n      },\n    });\n  },\n\n  addUserToOrg() {\n    SecurityService.checkCurrentUserIsDev();\n\n    let orgId;\n    const org = Organisations.findOne({ name: 'Dev Org' });\n\n    if (org) {\n      orgId = org._id;\n    } else {\n      orgId = Organisations.insert({\n        name: 'Dev Org',\n        type: ORGANISATION_TYPES.REAL_ESTATE_BROKER,\n      });\n    }\n\n    Organisations.update(\n      { _id: orgId },\n      { $set: { userLinks: [{ _id: this.userId }] } },\n    );\n  },\n});\n","import faker from 'faker/locale/fr';\n\nimport BorrowerService from '../api/borrowers/server/BorrowerService';\nimport { RESIDENCE_TYPE, OTHER_INCOME, EXPENSES } from '../api/constants';\n\nconst insertFakeBorrower = (userId) => {\n  const firstName = faker.name.firstName();\n  const lastName = faker.name.lastName();\n\n  const borrower = {\n    firstName,\n    lastName,\n    gender: 'F',\n    address1: faker.address.streetAddress(),\n    zipCode: 1201,\n    city: 'Genève',\n    citizenships: 'Suisse, Français',\n    birthDate: '1980-03-01',\n    birthPlace: 'Plan-les-Ouates',\n    civilStatus: 'SINGLE',\n    childrenCount: 2,\n    company: faker.company.companyName(),\n    personalBank: 'BCGE',\n    isSwiss: true,\n    isUSPerson: false,\n    worksForOwnCompany: false,\n    sameAddress: true,\n\n    salary: 300000,\n    bonusExists: true,\n    bonus2015: 15490,\n    bonus2016: 11140,\n    bonus2017: 13780,\n    bonus2018: 12300,\n    otherIncome: [\n      {\n        value: 10000,\n        description: OTHER_INCOME.PENSIONS,\n      },\n      {\n        value: 15000,\n        description: OTHER_INCOME.WELFARE,\n      },\n    ],\n    expenses: [\n      {\n        value: 3000,\n        description: EXPENSES.LEASING,\n      },\n      {\n        value: 4000,\n        description: EXPENSES.PERSONAL_LOAN,\n      },\n    ],\n    realEstate: [\n      {\n        value: 433000,\n        loan: 240000,\n        description: RESIDENCE_TYPE.MAIN_RESIDENCE,\n      },\n    ],\n    bankFortune: 300000,\n    insurance2: [{ value: 120000, description: 'Allianz' }],\n    insurance3B: [{ value: 50000, description: 'Zurich' }],\n    logic: {},\n  };\n\n  return BorrowerService.insert({ borrower, userId });\n};\n\nexport const createFakeBorrowers = (userId, twoBorrowers = false) => {\n  const borrowerIds = [insertFakeBorrower(userId)];\n  if (twoBorrowers) {\n    borrowerIds.push(insertFakeBorrower(userId));\n  }\n  return borrowerIds;\n};\n\nexport const getRelatedBorrowerIds = usersIds =>\n  BorrowerService.fetch({\n    $filters: { userId: { $in: usersIds } },\n    _id: 1,\n  }).map(item => item._id);\n","export const USER_COUNT = 10;\nexport const ADMIN_COUNT = 10;\nexport const DEV_COUNT = 5;\nexport const UNOWNED_LOANS_COUNT = 1;\nexport const LOANS_PER_USER = 1;\n","export const USER_PASSWORD = '12345';\nexport const E2E_DEV_EMAIL = 'florian@e-potek.ch';\nexport const E2E_USER_EMAIL = 'test-user@e-potek.ch';\n","import { Meteor } from 'meteor/meteor';\n\nimport { ROLES } from '../api/constants';\nimport InterestRatesService from '../api/interestRates/server/InterestRatesService';\nimport { createDevs, createAdmins } from './userFixtures';\nimport './promotionDemo/promotionFixturesMethods';\nimport { createFakeInterestRates } from './interestRatesFixtures';\n\nMeteor.startup(() => {\n  if (!Meteor.isAppTest) {\n    if (Meteor.users.find({ roles: { $in: [ROLES.DEV] } }).count() === 0) {\n      createDevs();\n      createAdmins();\n    }\n    if (InterestRatesService.countAll() === 0) {\n      createFakeInterestRates({ number: 10 });\n    }\n  }\n});\n","import moment from 'moment';\n\nimport InterestRatesService from '../api/interestRates/server/InterestRatesService';\nimport { INTEREST_RATES } from '../api/constants';\nimport { getRandomInterestRate } from '../api/interestRates/fakes';\n\nconst FAKE_INTEREST_RATES_MEANS = {\n  [INTEREST_RATES.LIBOR]: 0.8,\n  [INTEREST_RATES.YEARS_1]: 1.1,\n  [INTEREST_RATES.YEARS_2]: 1.5,\n  [INTEREST_RATES.YEARS_5]: 1.9,\n  [INTEREST_RATES.YEARS_10]: 2.3,\n  [INTEREST_RATES.YEARS_15]: 2.7,\n  [INTEREST_RATES.YEARS_20]: 3,\n  [INTEREST_RATES.YEARS_25]: 3.4,\n};\n\nconst fakeInterestRates = () =>\n  Object.values(INTEREST_RATES).reduce(\n    (rates, type) => ({\n      ...rates,\n      [type]: getRandomInterestRate(FAKE_INTEREST_RATES_MEANS[type]),\n    }),\n    {},\n  );\n\nexport const createFakeInterestRates = ({ number }) => {\n  let dates = [];\n\n  for (let i = 0; i < number; i += 1) {\n    dates = [\n      ...dates,\n      moment()\n        .subtract(i, 'd')\n        .toDate(),\n    ];\n  }\n\n  const fakeRates = dates.map(date => ({\n    date,\n    ...fakeInterestRates(),\n  }));\n\n  fakeRates.forEach(rate => InterestRatesService.insert(rate));\n};\n","import LenderRulesService from '../api/lenderRules/server/LenderRulesService';\n\nexport const createLenderRules = (organisationId) => {\n  LenderRulesService.initialize({ organisationId });\n};\n","import faker from 'faker/locale/fr';\n\nimport LoanService from '../api/loans/server/LoanService';\nimport {\n  PURCHASE_TYPE,\n  INTEREST_RATES,\n  OWN_FUNDS_TYPES,\n  OWN_FUNDS_USAGE_TYPES,\n  STEPS,\n  APPLICATION_TYPES,\n} from '../api/constants';\nimport { createFakeBorrowers } from './borrowerFixtures';\nimport { createFakeProperty } from './propertyFixtures';\nimport { adminLoans } from '../api/loans/queries';\nimport BorrowerService from '../api/borrowers/server/BorrowerService';\nimport PropertyService from '../api/properties/server/PropertyService';\nimport { createFakeOffer } from './offerFixtures';\n\nconst purchaseTypes = Object.values(PURCHASE_TYPE);\n\nconst getRandomValueInArray = array =>\n  array[Math.floor(Math.random() * array.length)];\n\nconst getRandomStructure = (propertyValue, borrowerId) => {\n  if (!borrowerId) {\n    return {};\n  }\n  return getRandomValueInArray([\n    {\n      ownFunds: [\n        {\n          value: Math.round(0.15 * propertyValue),\n          type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n          borrowerId,\n        },\n        {\n          value: Math.round(0.1 * propertyValue),\n          type: OWN_FUNDS_TYPES.INSURANCE_2,\n          usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE,\n          borrowerId,\n        },\n      ],\n    },\n    {\n      ownFunds: [\n        {\n          value: Math.round(0.25 * propertyValue),\n          type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n          borrowerId,\n        },\n      ],\n    },\n    {\n      ownFunds: [\n        {\n          value: Math.round(0.15 * propertyValue),\n          type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n          borrowerId,\n        },\n        {\n          value: Math.round(0.1 * propertyValue),\n          type: OWN_FUNDS_TYPES.INSURANCE_2,\n          usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW,\n          borrowerId,\n        },\n      ],\n    },\n    {\n      ownFunds: [\n        {\n          value: Math.round(0.15 * propertyValue),\n          type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n          borrowerId,\n        },\n        {\n          value: Math.round(0.05 * propertyValue),\n          type: OWN_FUNDS_TYPES.INSURANCE_2,\n          usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW,\n          borrowerId,\n        },\n        {\n          value: Math.round(0.05 * propertyValue),\n          type: OWN_FUNDS_TYPES.INSURANCE_2,\n          usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE,\n          borrowerId,\n        },\n      ],\n    },\n    {\n      ownFunds: [\n        {\n          value: Math.round(0.15 * propertyValue),\n          type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n          borrowerId,\n        },\n        {\n          value: Math.round(0.08 * propertyValue),\n          type: OWN_FUNDS_TYPES.INSURANCE_2,\n          usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW,\n          borrowerId,\n        },\n        {\n          value: Math.round(0.02 * propertyValue),\n          type: OWN_FUNDS_TYPES.INSURANCE_3A,\n          usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW,\n          borrowerId,\n        },\n      ],\n    },\n    {\n      ownFunds: [\n        {\n          value: Math.round(0.2 * propertyValue),\n          type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n          borrowerId,\n        },\n        {\n          value: Math.round(0.05 * propertyValue),\n          type: OWN_FUNDS_TYPES.INSURANCE_3B,\n          usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE,\n          borrowerId,\n        },\n      ],\n    },\n  ]);\n};\n\nexport const createFakeLoan = ({ userId, step, twoBorrowers }) => {\n  const borrowerIds = createFakeBorrowers(userId, twoBorrowers);\n  const { _id: propertyId, value } = createFakeProperty(userId);\n  const loan = {\n    name: faker.address.streetAddress(),\n    borrowerIds,\n    propertyIds: [propertyId],\n    purchaseType:\n      purchaseTypes[Math.floor(Math.random() * purchaseTypes.length)],\n    contacts: [],\n    structures: [\n      {\n        id: 'struct1',\n        propertyId,\n        loanTranches: [{ type: INTEREST_RATES.YEARS_10, value: 1 }],\n        wantedLoan: Math.round(0.8 * value),\n        ...getRandomStructure(value, borrowerIds[0]),\n      },\n    ],\n    selectedStructure: 'struct1',\n  };\n\n  switch (step) {\n  case STEPS.OFFERS:\n    loan.step = STEPS.OFFERS;\n    loan.loanTranches = [{ value: 750000, type: 'interest10' }];\n    loan.applicationType = APPLICATION_TYPES.FULL;\n    loan.displayWelcomeScreen = false;\n    break;\n  case STEPS.REQUEST:\n    loan.step = STEPS.REQUEST;\n    loan.applicationType = APPLICATION_TYPES.FULL;\n    loan.displayWelcomeScreen = false;\n    break;\n  default:\n    loan.step = STEPS.SOLVENCY;\n  }\n\n  return LoanService.insert({ loan, userId });\n};\n\nexport const getRelatedLoansIds = usersIds =>\n  LoanService.fetch({ $filters: { userId: { $in: usersIds } }, _id: 1 }).map(item => item._id);\n\nexport const addLoanWithData = ({\n  borrowers = [],\n  properties = [],\n  loan: loanData,\n  userId,\n  addOffers,\n}) => {\n  const loanId = LoanService.fullLoanInsert({ userId });\n  LoanService.update({ loanId, object: loanData });\n  const loan = adminLoans.clone({ _id: loanId }).fetchOne();\n  const propertyId = properties.length\n    ? PropertyService.insert({ property: {}, userId })\n    : undefined;\n\n  if (propertyId) {\n    LoanService.addPropertyToLoan({ propertyId, loanId });\n  }\n\n  const structureId = loan.structures[0].id;\n  const [borrowerId1] = loan.borrowers.map(({ _id }) => _id);\n\n  LoanService.updateStructure({\n    loanId,\n    structureId,\n    structure: {\n      propertyId,\n      loanTranches: [\n        { type: INTEREST_RATES.YEARS_10, value: 0.8 },\n        { type: INTEREST_RATES.YEARS_5, value: 0.2 },\n      ],\n      ...getRandomStructure(1000000, borrowerId1),\n    },\n  });\n\n  if (borrowerId1) {\n    BorrowerService.update({ borrowerId: borrowerId1, object: borrowers[0] });\n  }\n\n  if (borrowers.length > 1) {\n    const borrowerId2 = BorrowerService.insert({ borrower: borrowers[1] });\n    BorrowerService.update({ borrowerId: borrowerId2, object: borrowers[1] });\n    LoanService.addLink({\n      id: loanId,\n      linkName: 'borrowers',\n      linkId: borrowerId2,\n    });\n  }\n\n  if (propertyId) {\n    PropertyService.update({\n      propertyId,\n      object: properties[0],\n    });\n  }\n\n  if (addOffers) {\n    const offerIds = [1, 2, 3, 4, 5].map(() => createFakeOffer(loanId));\n    LoanService.updateStructure({\n      loanId,\n      structureId,\n      structure: { offerId: getRandomValueInArray(offerIds) },\n    });\n  }\n\n  return loanId;\n};\n","import shuffle from 'lodash/shuffle';\n\nimport { getRandomOffer } from '../api/offers/fakes';\nimport OfferService from '../api/offers/server/OfferService';\nimport LenderService from '../api/lenders/server/LenderService';\nimport OrganisationService from '../api/organisations/server/OrganisationService';\nimport LoanService from '../api/loans/server/LoanService';\nimport PropertyService from '../api/properties/server/PropertyService';\nimport { createOrganisations } from './organisationFixtures';\n\nconst getOrgIds = () => OrganisationService.fetch({}).map(({ _id }) => _id);\n\nexport const createFakeOffer = (loanId) => {\n  const loan = LoanService.findOne(loanId);\n  const property = PropertyService.findOne(loan.propertyIds[0]);\n  const offer = getRandomOffer(\n    { loan: { ...loan, _id: loan._id }, property },\n    true,\n  );\n  let allOrganisationIds = getOrgIds();\n\n  if (allOrganisationIds.length === 0) {\n    createOrganisations();\n    allOrganisationIds = getOrgIds();\n  }\n\n  const randomOrganisationId = shuffle(allOrganisationIds)[0];\n  let lenderId;\n\n  const lender = LenderService.findOne({\n    'loanLink._id': loanId,\n    'organisationLink._id': randomOrganisationId,\n  });\n\n  if (lender) {\n    lenderId = lender._id;\n  } else {\n    lenderId = LenderService.insert({\n      lender: { loanId: loan._id },\n      contactId: null,\n      organisationId: randomOrganisationId,\n    });\n  }\n\n  return OfferService.insert({ offer: { ...offer, lenderId } });\n};\n","import faker from 'faker/locale/fr';\nimport random from 'lodash/random';\n\nimport OrganisationService from '../api/organisations/server/OrganisationService';\nimport ContactService from '../api/contacts/server/ContactService';\nimport { ORGANISATION_TYPES, ORGANISATION_FEATURES, ORGANISATION_TAGS } from '../api/constants';\nimport { createLenderRules } from './lenderRulesFixtures';\n\nconst orgs = [\n  {\n    name: 'UBS',\n    type: ORGANISATION_TYPES.BANK,\n    logo: 'https://sos-ch-dk-2.exo.io/fixture-files/ubs-logo.png',\n    features: [ORGANISATION_FEATURES.LENDER],\n    tags: [ORGANISATION_TAGS.CH_RETAIL],\n  },\n  {\n    name: 'Crédit Suisse',\n    type: ORGANISATION_TYPES.BANK,\n    logo: 'https://sos-ch-dk-2.exo.io/fixture-files/cs-logo.png',\n    features: [ORGANISATION_FEATURES.LENDER],\n    tags: [ORGANISATION_TAGS.CH_RETAIL],\n  },\n  {\n    name: 'Allianz',\n    type: ORGANISATION_TYPES.INSURANCE,\n    logo: 'https://sos-ch-dk-2.exo.io/fixture-files/allianz-logo.png',\n    features: [ORGANISATION_FEATURES.LENDER],\n    tags: [ORGANISATION_TAGS.CH_RETAIL],\n  },\n  {\n    name: 'Pictet',\n    type: ORGANISATION_TYPES.PRIVATE_BANK,\n    logo: 'https://sos-ch-dk-2.exo.io/fixture-files/pictet-logo.png',\n    features: [ORGANISATION_FEATURES.LENDER],\n    tags: [ORGANISATION_TAGS.CH_RETAIL],\n  },\n];\n\nexport const createOrganisations = () =>\n  orgs.map((org) => {\n    const orgId = OrganisationService.insert(org);\n\n    if (org.features.includes(ORGANISATION_FEATURES.LENDER)) {\n      createLenderRules(orgId);\n    }\n\n    const contactCount = random(1, 3, false);\n\n    for (let index = 0; index < contactCount; index += 1) {\n      const contactId = ContactService.insert({\n        firstName: faker.name.firstName(),\n        lastName: faker.name.lastName(),\n        address1: faker.address.streetAddress(),\n        zipCode: 1201,\n        city: 'Genève',\n        emails: [{ address: faker.internet.email() }],\n        phoneNumbers: [faker.phone.phoneNumber()],\n      });\n\n      ContactService.changeOrganisations({\n        contactId,\n        newOrganisations: [\n          { _id: orgId, metadata: { title: faker.name.jobTitle() } },\n        ],\n      });\n    }\n  });\n","import faker from 'faker/locale/fr';\n\nimport PropertyService from '../api/properties/server/PropertyService';\nimport {\n  PROPERTY_STATUS,\n  RESIDENCE_TYPE,\n  PROPERTY_TYPE,\n  VOLUME_NORM,\n  MINERGIE_CERTIFICATE,\n} from '../api/properties/propertyConstants';\nimport { Properties } from '../api';\n\nconst statuses = Object.values(PROPERTY_STATUS);\nconst residenceTypes = Object.values(RESIDENCE_TYPE);\nconst types = Object.values(PROPERTY_TYPE);\nconst volumeNorms = Object.values(VOLUME_NORM);\nconst minergies = Object.values(MINERGIE_CERTIFICATE);\n\nconst getRandomValueInRange = (min, max) => Math.random() * (max - min) + min;\nconst getRandomValueInArray = array =>\n  array[Math.floor(Math.random() * array.length)];\n\nexport const createFakeProperty = userId => {\n  const property = {\n    status: getRandomValueInArray(statuses),\n    value: Math.round(getRandomValueInRange(500000, 3000000)),\n    address1: faker.address.streetAddress(),\n    zipCode: 1201,\n    city: 'Genève',\n    residenceType: getRandomValueInArray(residenceTypes),\n    propertyType: getRandomValueInArray(types),\n    futureOwner: 0,\n    constructionYear: 2010,\n    landArea: 300,\n    insideArea: 140,\n    volume: 1500,\n    volumeNorm: getRandomValueInArray(volumeNorms),\n    roomCount: 5,\n    parkingInside: 1,\n    parkingOutside: 2,\n    minergie: getRandomValueInArray(minergies),\n    isCoproperty: true,\n    copropertyPercentage: 400,\n  };\n\n  return { ...property, _id: PropertyService.insert({ property, userId }) };\n};\n\nexport const getRelatedPropertyIds = usersIds =>\n  Properties.find({ userId: { $in: usersIds } }, { fields: { _id: 1 } })\n    .fetch()\n    .map(item => item._id);\n","import { Accounts } from 'meteor/accounts-base';\nimport { Roles } from 'meteor/alanning:roles';\n\nimport faker from 'faker/locale/fr';\n\nimport { USER_PASSWORD } from './fixtureConstants';\nimport UserService from '../api/users/server/UserService';\n\nexport const createUser = (email, role, password) => {\n  const userId = Accounts.createUser({\n    email,\n    password: password || USER_PASSWORD,\n  });\n  Roles.setUserRoles(userId, [role]);\n\n  return userId;\n};\n\nexport const createFakeUsers = (count, role, currentUserEmail = '') => {\n  const insertedUsers = [];\n  for (let i = 0; i < count; i += 1) {\n    const email = `${role}-${i + 1}@e-potek.ch`;\n    if (email !== currentUserEmail) {\n      const newUserId = createUser(email, role);\n\n      UserService.update({\n        userId: newUserId,\n        object: {\n          firstName: faker.name.firstName(),\n          lastName: faker.name.lastName(),\n        },\n      });\n      insertedUsers.push(newUserId);\n    }\n  }\n  return insertedUsers;\n};\n\nexport const addUser = ({ email, role, password = USER_PASSWORD, ...data }) => {\n  const newUserId = createUser(email, role, password);\n  UserService.update({\n    userId: newUserId,\n    object: {\n      ...data,\n      phoneNumbers: [faker.phone.phoneNumber()],\n      'emails.0.verified': true,\n    },\n  });\n  return newUserId;\n};\n\nexport const createDevs = (currentEmail) => {\n  const devs = [\n    {\n      email: 'florian@e-potek.ch',\n      firstName: 'Florian',\n      lastName: 'Bienefelt',\n    },\n    {\n      email: 'quentin@e-potek.ch',\n      firstName: 'Quentin',\n      lastName: 'Herzig',\n    },\n  ];\n  return devs\n    .filter(({ email }) => email !== currentEmail)\n    .map(obj => ({ ...obj, role: 'dev' }))\n    .map(addUser);\n};\n\nexport const createAdmins = () => {\n  const devs = [\n    {\n      email: 'lydia@e-potek.ch',\n      firstName: 'Lydia',\n      lastName: 'Abraha',\n    },\n    {\n      email: 'yannis@e-potek.ch',\n      firstName: 'Yannis',\n      lastName: 'Eggert',\n    },\n    {\n      email: 'jeanluc@e-potek.ch',\n      firstName: 'Jean-luc',\n      lastName: 'Kringel',\n    },\n  ];\n  return devs.map(obj => ({ ...obj, role: 'admin' })).map(addUser);\n};\n\nexport const getFakeUsersIds = () => {\n  const regex = /^(admin|dev|user)-[1-9]|10@e-potek.ch/;\n  const allUsers = UserService.getAll();\n  const fakeUserIds = allUsers\n    .filter(user => regex.test(user.emails[0].address))\n    .map(fakeUser => fakeUser._id);\n  return fakeUserIds;\n};\n","import { Meteor } from 'meteor/meteor';\nimport { Kadira } from 'meteor/lmachens:kadira';\n\nif (Meteor.settings.Kadira) {\n  const { endpoint } = Meteor.settings.Kadira;\n  const { microservice } = Meteor;\n\n  if (Meteor.settings.Kadira[microservice]) {\n    const { appId, appSecret } = Meteor.settings.Kadira[microservice];\n    Kadira.connect(appId, appSecret, { endpoint });\n  }\n}\n","import { Accounts as AccountsUI } from 'meteor/epotek:accounts-ui';\n\nAccountsUI.ui.config({\n  passwordSignupFields: 'EMAIL_ONLY',\n  loginPath: '/login',\n  homeRoutePath: '/',\n  profilePath: '/account',\n  changePasswordPath: '/account',\n  minimumPasswordLength: 5,\n});\n","// @flow\nimport { OWN_FUNDS_TYPES } from 'imports/core/api/constants';\nimport { getBorrowerDocuments } from 'imports/core/api/files/documents';\nimport {\n  filesPercent,\n  getMissingDocumentIds,\n} from '../../api/files/fileHelpers';\nimport {\n  getBorrowerInfoArray,\n  getBorrowerFinanceArray,\n  getBorrowerSimpleArray,\n} from '../../arrays/BorrowerFormArray';\nimport { arrayify, getPercent } from '../general';\nimport {\n  getCountedArray,\n  getMissingFieldIds,\n  getFormValuesHashMultiple,\n} from '../formArrayHelpers';\nimport MiddlewareManager from '../MiddlewareManager';\nimport { INCOME_CONSIDERATION_TYPES, EXPENSE_TYPES } from '../../api/constants';\nimport { borrowerExtractorMiddleware } from './middleware';\nimport {\n  BONUS_ALGORITHMS,\n  REAL_ESTATE_INCOME_ALGORITHMS,\n} from '../../config/financeConstants';\n\nexport const withBorrowerCalculator = (SuperClass = class {}) =>\n  class extends SuperClass {\n    constructor(config) {\n      super(config);\n      this.initBorrowerCalculator(config);\n    }\n\n    initBorrowerCalculator(config) {\n      const middleware = (config && config.borrowerMiddleware) || borrowerExtractorMiddleware;\n      const middlewareManager = new MiddlewareManager(this);\n      middlewareManager.applyToAllMethods([middleware]);\n    }\n\n    getArrayValues({ borrowers, key, mapFunc }) {\n      let sum = 0;\n\n      arrayify(borrowers).forEach((borrower) => {\n        if (!borrower[key]) {\n          return 0;\n        }\n        sum += [\n          ...(borrower[key] && borrower[key].length > 0\n            ? borrower[key].map(mapFunc || (i => i.value))\n            : []),\n        ].reduce((tot, val) => (val > 0 && tot + val) || tot, 0);\n      });\n\n      return Math.max(0, Math.round(sum));\n    }\n\n    getBonuses({ borrowers }) {\n      return arrayify(borrowers).reduce((obj, borrower) => {\n        if (!borrower.bonusExists) {\n          return obj;\n        }\n\n        const bonusKeys = Object.keys(borrower).filter(key =>\n          key.includes('bonus')\n            && key !== 'bonusExists'\n            && borrower[key] >= 0\n            && borrower[key] !== null);\n\n        bonusKeys.forEach((key) => {\n          const value = borrower[key];\n\n          if (obj[key]) {\n            obj = { ...obj, [key]: obj[key] + value };\n          } else {\n            obj = { ...obj, [key]: value };\n          }\n        });\n\n        return obj;\n      }, {});\n    }\n\n    getBonusIncome({ borrowers }) {\n      const bonusKeys = [\n        'bonus2015',\n        'bonus2016',\n        'bonus2017',\n        'bonus2018',\n        'bonus2019',\n      ];\n      const total = arrayify(borrowers).reduce((acc, borrower) => {\n        if (!borrower.bonusExists) {\n          return acc + 0;\n        }\n\n        const arr = bonusKeys\n          .map(key => borrower[key])\n          .filter(val =>\n            (this.bonusAlgorithm === BONUS_ALGORITHMS.WEAK_AVERAGE\n              ? val > 0\n              : true));\n\n        return (\n          acc\n          + this.getConsideredValue({\n            values: arr,\n            history: this.bonusHistoryToConsider,\n            weighting: this.bonusConsideration,\n          })\n        );\n      }, 0);\n      return Math.max(0, Math.round(total));\n    }\n\n    getConsideredValue({ values, history, weighting }) {\n      const valuesToConsider = values.slice(Math.max(0, values.length - history));\n      const sum = valuesToConsider.reduce((tot, val = 0) => tot + val, 0);\n      return (weighting * sum) / valuesToConsider.length || 0;\n    }\n\n    getBorrowerCompletion({ loan, borrowers }) {\n      return (\n        (this.getBorrowerFilesProgress({ loan, borrowers }).percent\n          + this.personalInfoPercent({ borrowers }))\n        / 2\n      );\n    }\n\n    getBorrowerFilesProgress({ loan, borrowers }) {\n      const percentages = arrayify(borrowers).reduce(\n        (total, borrower) => {\n          const { percent, count } = filesPercent({\n            fileArray: getBorrowerDocuments({ loan, id: borrower._id }, this),\n            doc: borrower,\n          });\n          return {\n            percent: total.percent + percent * count,\n            count: total.count + count,\n          };\n        },\n        { percent: 0, count: 0 },\n      );\n\n      return {\n        ...percentages,\n        percent:\n          percentages.count === 0 ? 1 : percentages.percent / percentages.count,\n      };\n    }\n\n    isTypeWithArrayValues = type =>\n      [\n        OWN_FUNDS_TYPES.INSURANCE_2,\n        OWN_FUNDS_TYPES.INSURANCE_3A,\n        OWN_FUNDS_TYPES.BANK_3A,\n        OWN_FUNDS_TYPES.INSURANCE_3B,\n      ].includes(type);\n\n    getFunds({ borrowers, type }) {\n      if (this.isTypeWithArrayValues(type)) {\n        return this.getArrayValues({ borrowers, key: type });\n      }\n\n      return this.sumValues({ borrowers, keys: type });\n    }\n\n    getFortune({ borrowers }) {\n      return this.sumValues({ borrowers, keys: OWN_FUNDS_TYPES.BANK_FORTUNE });\n    }\n\n    getThirdPartyFortune({ borrowers }) {\n      const val = this.sumValues({\n        borrowers,\n        keys: OWN_FUNDS_TYPES.THIRD_PARTY_FORTUNE,\n      });\n      return val;\n    }\n\n    getExpenses({ borrowers }) {\n      return this.getArrayValues({ borrowers, key: 'expenses' });\n    }\n\n    getInsurance2({ borrowers }) {\n      return this.getArrayValues({\n        borrowers,\n        key: OWN_FUNDS_TYPES.INSURANCE_2,\n      });\n    }\n\n    getInsurance3A({ borrowers }) {\n      return this.getArrayValues({\n        borrowers,\n        key: OWN_FUNDS_TYPES.INSURANCE_3A,\n      });\n    }\n\n    getBank3A({ borrowers }) {\n      return this.getArrayValues({ borrowers, key: OWN_FUNDS_TYPES.BANK_3A });\n    }\n\n    getInsurance3B({ borrowers }) {\n      return this.getArrayValues({\n        borrowers,\n        key: OWN_FUNDS_TYPES.INSURANCE_3B,\n      });\n    }\n\n    getInsuranceFortune({ borrowers }) {\n      return [\n        this.getInsurance2,\n        this.getInsurance3A,\n        this.getInsurance3B,\n        this.getBank3A,\n      ].reduce((sum, func) => sum + func({ borrowers }), 0);\n    }\n\n    getCashFortune({ borrowers }) {\n      return [\n        this.getFortune,\n        this.getThirdPartyFortune,\n        this.getInsurance3A,\n        this.getInsurance3B,\n        this.getBank3A,\n      ].reduce((sum, func) => sum + func({ borrowers }), 0);\n    }\n\n    getMissingBorrowerFields({ borrowers }) {\n      const res = arrayify(borrowers).reduce((missingIds, borrower) => {\n        const formArray = getBorrowerInfoArray({\n          borrowers: arrayify(borrowers),\n          borrowerId: borrower._id,\n        });\n        const formArray2 = getBorrowerFinanceArray({\n          borrowers: arrayify(borrowers),\n          borrowerId: borrower._id,\n        });\n\n        return [\n          ...missingIds,\n          ...getMissingFieldIds(formArray, borrower),\n          ...getMissingFieldIds(formArray2, borrower),\n        ];\n      }, []);\n\n      return res;\n    }\n\n    getMissingBorrowerDocuments({ loan, borrowers }) {\n      return arrayify(borrowers).reduce(\n        (missingIds, borrower) => [\n          ...missingIds,\n          ...getMissingDocumentIds({\n            doc: borrower,\n            fileArray: getBorrowerDocuments({ loan, id: borrower._id }, this),\n          }),\n        ],\n        [],\n      );\n    }\n\n    getOtherFortune({ borrowers }) {\n      return this.getArrayValues({ borrowers, key: 'otherFortune' });\n    }\n\n    getOtherIncome({ borrowers }) {\n      return this.getArrayValues({ borrowers, key: 'otherIncome' });\n    }\n\n    getTotalFunds({ borrowers }) {\n      return (\n        this.getFortune({ borrowers })\n        + this.getThirdPartyFortune({ borrowers })\n        + this.getInsuranceFortune({ borrowers })\n      );\n    }\n\n    getRealEstateFortune({ borrowers }) {\n      return this.getArrayValues({\n        borrowers,\n        key: 'realEstate',\n        mapFunc: ({ value = 0, loan = 0 }) => value - loan,\n      });\n    }\n\n    getRealEstateValue({ borrowers }) {\n      return this.getArrayValues({ borrowers, key: 'realEstate' });\n    }\n\n    getRealEstateDebt({ borrowers }) {\n      return this.getArrayValues({\n        borrowers,\n        key: 'realEstate',\n        mapFunc: ({ loan = 0 }) => loan,\n      });\n    }\n\n    getRealEstateIncome({ borrowers }) {\n      const realEstateIncome = this.getArrayValues({\n        borrowers,\n        key: 'realEstate',\n        mapFunc: ({ income = 0 }) => income,\n      }) * this.realEstateIncomeConsideration;\n\n      return realEstateIncome;\n    }\n\n    getRealEstateIncomeTotal({ borrowers }) {\n      if (\n        this.realEstateIncomeAlgorithm\n        === REAL_ESTATE_INCOME_ALGORITHMS.POSITIVE_NEGATIVE_SPLIT\n      ) {\n        return 0;\n      }\n\n      return this.getRealEstateIncome({ borrowers });\n    }\n\n    shouldUseNetSalary() {\n      return this.incomeConsiderationType === INCOME_CONSIDERATION_TYPES.NET;\n    }\n\n    getSalary({ borrowers }) {\n      if (this.shouldUseNetSalary()) {\n        return this.getNetSalary({ borrowers });\n      }\n      return this.sumValues({ borrowers, keys: 'salary' });\n    }\n\n    getNetSalary({ borrowers }) {\n      return this.sumValues({ borrowers, keys: 'netSalary' });\n    }\n\n    getFortuneReturns({ borrowers }) {\n      if (this.fortuneReturnsRatio) {\n        return this.fortuneReturnsRatio * this.getFortune({ borrowers });\n      }\n\n      return 0;\n    }\n\n    getTotalIncome({ borrowers }) {\n      let sum = arrayify(borrowers).reduce((total, borrower) => {\n        let borrowerIncome = 0;\n        borrowerIncome += this.getSalary({ borrowers: borrower }) || 0;\n        borrowerIncome += this.getBonusIncome({ borrowers: borrower }) || 0;\n        borrowerIncome += this.getOtherIncome({ borrowers: borrower }) || 0;\n        borrowerIncome += this.getFortuneReturns({ borrowers: borrower }) || 0;\n        borrowerIncome\n          += this.getRealEstateIncomeTotal({ borrowers: borrower }) || 0;\n        return total + borrowerIncome;\n      }, 0);\n\n      sum -= this.getFormattedExpenses({ borrowers }).subtract || 0;\n\n      return sum;\n    }\n\n    getRetirement({ borrowers }) {\n      const argMap = borrowers.reduce(\n        (obj, { age, gender }, index) => ({\n          ...obj,\n          [`${`age${index + 1}`}`]: age,\n          [`${`gender${index + 1}`}`]: gender,\n        }),\n        {},\n      );\n      return this.getYearsToRetirement(argMap);\n    }\n\n    getAmortizationDuration({ borrowers }) {\n      const retirement = this.getRetirement({ borrowers });\n      return Math.min(15, retirement);\n    }\n\n    // personalInfoPercent - Determines the completion rate of the borrower's\n    // personal information forms\n    personalInfoPercent({ borrowers }) {\n      if (!borrowers || (Array.isArray(borrowers) && !borrowers.length)) {\n        return 0;\n      }\n\n      const array = arrayify(borrowers).reduce((arr, b) => {\n        const personalFormArray = getBorrowerInfoArray({\n          borrowers: arrayify(borrowers),\n          borrowerId: b._id,\n        });\n        const financeFormArray = getBorrowerFinanceArray({\n          borrowers: arrayify(borrowers),\n          borrowerId: b._id,\n        });\n        return [\n          ...arr,\n          ...getCountedArray(personalFormArray, b),\n          ...getCountedArray(financeFormArray, b),\n        ];\n      }, []);\n\n      return getPercent(array);\n    }\n\n    personalInfoPercentSimple({ borrowers, loan }) {\n      if ((!borrowers || !borrowers.length) && !loan.borrowers.length) {\n        return 0;\n      }\n      const array = arrayify(borrowers).reduce((arr, b) => {\n        const simpleFormArray = getBorrowerSimpleArray({\n          borrowers: arrayify(borrowers),\n          borrowerId: b._id,\n          loan,\n        });\n        return [...arr, ...getCountedArray(simpleFormArray, b)];\n      }, []);\n\n      return getPercent(array);\n    }\n\n    borrowerInfoPercent({ borrowers }) {\n      if (!borrowers || !borrowers.length) {\n        return 0;\n      }\n      const array = arrayify(borrowers).reduce((arr, b) => {\n        const personalFormArray = getBorrowerInfoArray({\n          borrowers: arrayify(borrowers),\n          borrowerId: b._id,\n        });\n        return [...arr, ...getCountedArray(personalFormArray, b)];\n      }, []);\n\n      return getPercent(array);\n    }\n\n    borrowerFinancePercent({ borrowers }) {\n      const array = arrayify(borrowers).reduce((arr, b) => {\n        const financeFormArray = getBorrowerFinanceArray({\n          borrowers: arrayify(borrowers),\n          borrowerId: b._id,\n        });\n        return [...arr, ...getCountedArray(financeFormArray, b)];\n      }, []);\n\n      return getPercent(array);\n    }\n\n    getBorrowerFormHash({ borrowers }) {\n      return getFormValuesHashMultiple(arrayify(borrowers).reduce(\n        (arr, borrower) => [\n          ...arr,\n          {\n            formArray: getBorrowerFinanceArray({\n              borrowers: arrayify(borrowers),\n              borrowerId: borrower._id,\n            }),\n            doc: borrower,\n          },\n          {\n            formArray: getBorrowerInfoArray({\n              borrowers: arrayify(borrowers),\n              borrowerId: borrower._id,\n            }),\n            doc: borrower,\n          },\n        ],\n        [],\n      ));\n    }\n\n    sumValues({ borrowers, keys }) {\n      return arrayify(keys).reduce(\n        (total, key) =>\n          total + arrayify(borrowers).reduce((t, b) => t + (b[key] || 0), 0),\n        0,\n      );\n    }\n\n    getNetFortune({ borrowers }) {\n      return (\n        this.getTotalFunds({ borrowers })\n        + this.getRealEstateFortune({ borrowers })\n        + this.getOtherFortune({ borrowers })\n      );\n    }\n\n    getMortgageNotes({ borrowers }) {\n      return borrowers.reduce(\n        (arr, { mortgageNotes: notes = [] }) => [...arr, ...notes],\n        [],\n      );\n    }\n\n    getRealEstateExpenses({ borrowers }) {\n      const realEstate = arrayify(borrowers).reduce(\n        (arr, borrower) => [...arr, ...(borrower.realEstate || [])],\n        [],\n      );\n      const realEstateCost = realEstate.reduce(\n        (tot, obj) => tot + this.getRealEstateCost(obj),\n        0,\n      );\n\n      return realEstateCost;\n    }\n\n    getRealEstateDeltas({ borrowers }) {\n      const allRealEstate = arrayify(borrowers)\n        .map(({ realEstate }) => realEstate)\n        .reduce((arr, realEstate) => [...arr, ...realEstate], []);\n\n      return allRealEstate.map((realEstate) => {\n        const { income } = realEstate;\n        const expenses = this.getRealEstateCost(realEstate) * 12;\n\n        return (\n          Math.round(income * this.realEstateIncomeConsideration) - expenses\n        );\n      });\n    }\n\n    getRealEstateCost({ loan, value }) {\n      const amortizationRate = this.getAmortizationRateBase({\n        borrowRatio: super.getBorrowRatio({ loan, propertyValue: value }),\n      });\n\n      return super.getTheoreticalMonthly({\n        propAndWork: value,\n        loanValue: loan,\n        amortizationRate,\n      }).total;\n    }\n\n    sumArray(arr) {\n      return arr.reduce((tot, v = 0) => tot + v, 0);\n    }\n\n    // Returns an object with all the types of expenses, combined between\n    // borrowers:\n    // {\n    //  LEASING: 23000,\n    //  WELFARE: 4000,\n    //  THEORETICAL_REAL_ESTATE: 30000,\n    //  etc\n    // }\n    getAllExpenses({ borrowers }) {\n      if (\n        this.realEstateIncomeAlgorithm\n        === REAL_ESTATE_INCOME_ALGORITHMS.POSITIVE_NEGATIVE_SPLIT\n      ) {\n        const deltas = this.getRealEstateDeltas({\n          borrowers,\n        });\n        return {\n          // Negative deltas should be made positive so they can be added to expenses\n          [EXPENSE_TYPES.REAL_ESTATE_DELTA_NEGATIVE]: -this.sumArray(deltas.filter(delta => delta < 0)),\n          // Positive deltas should be made negative so they can be subtracted from income,\n          // and therefore increase income\n          [EXPENSE_TYPES.REAL_ESTATE_DELTA_POSITIVE]: -this.sumArray(deltas.filter(delta => delta > 0)),\n          ...this.getGroupedExpenses({ borrowers }),\n        };\n      }\n\n      return {\n        [EXPENSE_TYPES.THEORETICAL_REAL_ESTATE]:\n          this.getRealEstateExpenses({ borrowers }) * 12, // All expenses are annualized\n        ...this.getGroupedExpenses({ borrowers }),\n      };\n    }\n\n    // Same as getAllExpenses, but without real estate expenses\n    getGroupedExpenses({ borrowers }) {\n      const flattenedExpenses = []\n        .concat([], ...arrayify(borrowers).map(({ expenses }) => expenses))\n        .filter(x => x);\n      return flattenedExpenses.reduce(\n        (obj, { value, description }) => ({\n          ...obj,\n          [description]: (obj[description] || 0) + value,\n        }),\n        {},\n      );\n    }\n\n    shouldSubtractExpenseFromIncome(expenseType) {\n      return this.expensesSubtractFromIncome.includes(expenseType);\n    }\n\n    groupRealEstateDeltas({ groupedExpenses, expenses, toSubtractFromIncome }) {\n      const negativeDeltas = expenses[EXPENSE_TYPES.REAL_ESTATE_DELTA_NEGATIVE];\n      const positiveDeltas = expenses[EXPENSE_TYPES.REAL_ESTATE_DELTA_POSITIVE];\n\n      if (toSubtractFromIncome) {\n        // If we want to get expenses to subtract from income, add the\n        // positiveDeltas negatively, so they are in fact added to income\n        return {\n          ...groupedExpenses,\n          [EXPENSE_TYPES.REAL_ESTATE_DELTA_POSITIVE]: positiveDeltas,\n        };\n      }\n\n      return {\n        ...groupedExpenses,\n        [EXPENSE_TYPES.REAL_ESTATE_DELTA_NEGATIVE]: negativeDeltas,\n      };\n    }\n\n    // Returns an object with all expenses to subtract from income\n    // or all expenses to add to expenses, depending on the param `toSubtractFromIncome`¨\n    // {\n    //  LEASING: 23000,\n    // }\n    getGroupedExpensesBySide({ borrowers, toSubtractFromIncome = true }) {\n      const expenses = this.getAllExpenses({ borrowers });\n\n      const expensesBySide = Object.keys(expenses)\n        .filter(expenseType => !this.expenseTypeIsDelta(expenseType))\n        .filter((expenseType) => {\n          const subtractExpenseTypeFromIncome = this.expensesSubtractFromIncome.includes(expenseType);\n          return toSubtractFromIncome\n            ? subtractExpenseTypeFromIncome\n            : !subtractExpenseTypeFromIncome;\n        });\n\n      const groupedExpenses = expensesBySide.reduce(\n        (obj, expenseType) => ({\n          ...obj,\n          [expenseType]: expenses[expenseType],\n        }),\n        {},\n      );\n\n      if (\n        this.realEstateIncomeAlgorithm\n        === REAL_ESTATE_INCOME_ALGORITHMS.POSITIVE_NEGATIVE_SPLIT\n      ) {\n        return this.groupRealEstateDeltas({\n          groupedExpenses,\n          expenses,\n          toSubtractFromIncome,\n        });\n      }\n\n      return groupedExpenses;\n    }\n\n    expenseTypeIsDelta(expenseType) {\n      return [\n        EXPENSE_TYPES.REAL_ESTATE_DELTA_NEGATIVE,\n        EXPENSE_TYPES.REAL_ESTATE_DELTA_POSITIVE,\n      ].includes(expenseType);\n    }\n\n    formatRealEstateExpenses({ obj, expenseType, value }) {\n      if (expenseType === EXPENSE_TYPES.REAL_ESTATE_DELTA_NEGATIVE) {\n        return { ...obj, add: obj.add + value };\n      }\n\n      return { ...obj, subtract: obj.subtract + value };\n    }\n\n    // Returns an object with 2 keys, `subtract` and `add` that contain the sum\n    // of all expenses to \"subtract from income\" and \"add to expenses\", respectively\n    getFormattedExpenses({ borrowers }) {\n      const expenses = this.getAllExpenses({ borrowers });\n\n      return Object.keys(expenses).reduce(\n        (obj, expenseType) => {\n          const value = expenses[expenseType];\n          if (this.expenseTypeIsDelta(expenseType)) {\n            return this.formatRealEstateExpenses({ obj, expenseType, value });\n          }\n\n          if (this.expensesSubtractFromIncome.indexOf(expenseType) >= 0) {\n            return { ...obj, subtract: obj.subtract + value };\n          }\n\n          return { ...obj, add: obj.add + value };\n        },\n        { subtract: 0, add: 0 },\n      );\n    }\n\n    getCommentsForExpenseType({ borrowers, type }) {\n      return arrayify(borrowers).reduce((comments, { expenses = [] }) => {\n        const expensesOfType = expenses.filter(({ description }) => description === type);\n        return [\n          ...comments,\n          ...expensesOfType.map(({ comment }) => comment),\n        ].filter(x => x);\n      }, []);\n    }\n\n    getCommentsForOtherIncomeType({ borrowers, type }) {\n      return arrayify(borrowers).reduce((comments, { otherIncome = [] }) => {\n        const otherIncomeOfType = otherIncome.filter(({ description }) => description === type);\n        return [\n          ...comments,\n          ...otherIncomeOfType.map(({ comment }) => comment),\n        ].filter(x => x);\n      }, []);\n    }\n\n    canCalculateSolvency({ borrowers }) {\n      if (!borrowers.length) {\n        return false;\n      }\n\n      if (this.getCashFortune({ borrowers }) === 0) {\n        return false;\n      }\n\n      if (this.getSalary({ borrowers }) === 0) {\n        return false;\n      }\n\n      return true;\n    }\n  };\n","// @flow\nimport { getAggregatePercent } from '../general';\n\nexport const withCombinedCalculator = (SuperClass = class {}) =>\n  class extends SuperClass {\n    filesProgress({ loan }) {\n      const hasPromotion = loan.promotions && loan.promotions.length > 0;\n      const progress = [\n        this.getLoanFilesProgress,\n        this.getBorrowerFilesProgress,\n        !hasPromotion && this.getPropertyFilesProgress,\n      ]\n        .filter(x => x !== false)\n        .map(f => f({ loan }))\n        .filter(x => x);\n\n      return getAggregatePercent(progress);\n    }\n  };\n","import { parseFilter } from 'core/api/lenderRules/helpers';\nimport { getMatchingRules } from '../../api/lenderRules/helpers';\nimport { LENDER_RULES_VARIABLES, OWN_FUNDS_TYPES } from '../../api/constants';\n\n// @flow\n\nexport const withLenderRulesInitializator = (SuperClass = class {}) =>\n  class extends SuperClass {\n    constructor(settings) {\n      super(settings);\n      this.initialize(settings);\n    }\n\n    initialize({ loan, structureId, lenderRules = [] }) {\n      if (!(loan && lenderRules && lenderRules.length > 0)) {\n        return;\n      }\n\n      const sortedlenderRules = lenderRules.sort(({ order: orderA }, { order: orderB }) => orderA - orderB);\n\n      // Store the rules for retrieval later\n      this.lenderRules = sortedlenderRules;\n      this.setOrganisationName(sortedlenderRules);\n      this.ruleOrigin = {};\n      this.matchedRules = [];\n\n      // Global rules\n      const globalRules = this.getGlobalLenderRules({\n        loan,\n        structureId,\n        lenderRules: sortedlenderRules,\n      });\n      this.applyRules(globalRules);\n\n      // Primary rules depend only on raw data\n      const primaryRules = this.getPrimaryLenderRules({\n        loan,\n        structureId,\n        lenderRules: sortedlenderRules,\n      });\n      this.applyRules(primaryRules);\n\n      // Secondary rules depend on what is calculated with the rules applied from the primary rules\n      const secondaryRules = this.getSecondaryLenderRules({\n        loan,\n        structureId,\n        lenderRules: sortedlenderRules,\n      });\n      this.applyRules(secondaryRules);\n\n      this.cleanUpUnusedRules();\n    }\n\n    setOrganisationName = (lenderRules) => {\n      this.organisationName = lenderRules.length\n        ? lenderRules[0].organisation && lenderRules[0].organisation.name\n        : null;\n    };\n\n    storeRuleOrigin(rules, lenderRulesId) {\n      Object.keys(rules).forEach((ruleName) => {\n        this.ruleOrigin[ruleName] = lenderRulesId;\n      });\n    }\n\n    getOriginOfRule(ruleName) {\n      const lenderRulesId = this.ruleOrigin[ruleName];\n      const lenderRules = this.lenderRules.find(({ _id }) => _id === lenderRulesId);\n      return lenderRules;\n    }\n\n    getLenderRulesVariables({ loan, structureId }) {\n      return {\n        [LENDER_RULES_VARIABLES.RESIDENCE_TYPE]: loan.residenceType,\n        [LENDER_RULES_VARIABLES.CANTON]: this.selectPropertyKey({\n          loan,\n          structureId,\n          key: LENDER_RULES_VARIABLES.CANTON,\n        }),\n        [LENDER_RULES_VARIABLES.WANTED_LOAN]: this.selectStructureKey({\n          loan,\n          structureId,\n          key: LENDER_RULES_VARIABLES.WANTED_LOAN,\n        }),\n        [LENDER_RULES_VARIABLES.PROPERTY_VALUE]: this.selectPropertyValue({\n          loan,\n          structureId,\n        }),\n        [LENDER_RULES_VARIABLES.INSIDE_AREA]: this.selectPropertyKey({\n          loan,\n          structureId,\n          key: LENDER_RULES_VARIABLES.INSIDE_AREA,\n        }),\n        [LENDER_RULES_VARIABLES.BANK_FORTUNE]: this.getFortune({ loan }),\n        [LENDER_RULES_VARIABLES.BORROW_RATIO]: this.getBorrowRatio({\n          loan,\n          structureId,\n        }),\n        [LENDER_RULES_VARIABLES.INCOME]: this.getTotalIncome({ loan }),\n        [LENDER_RULES_VARIABLES.PROPERTY_TYPE]: this.selectPropertyKey({\n          loan,\n          structureId,\n          key: LENDER_RULES_VARIABLES.PROPERTY_TYPE,\n        }),\n        [LENDER_RULES_VARIABLES.ZIP_CODE]: this.selectPropertyKey({\n          loan,\n          structureId,\n          key: LENDER_RULES_VARIABLES.ZIP_CODE,\n        }),\n        [LENDER_RULES_VARIABLES.REMAINING_BANK_FORTUNE]: this.getRemainingFundsOfType({\n          loan,\n          structureId,\n          type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n        }),\n      };\n    }\n\n    getGlobalLenderRules({ lenderRules }) {\n      const globalRules = lenderRules.filter(({ filter }) =>\n        filter.and && filter.and.length === 1 && filter.and[0] === true);\n      const matchingRules = getMatchingRules(\n        globalRules,\n        {},\n        this.storeRuleOrigin,\n      );\n      return matchingRules;\n    }\n\n    getPrimaryLenderRules({ loan, structureId, lenderRules }) {\n      const primaryRules = lenderRules.filter(rules => !this.lenderRulesIsSecondary(rules));\n      const matchingRules = getMatchingRules(\n        primaryRules,\n        this.getLenderRulesVariables({ loan, structureId }),\n        this.storeRuleOrigin,\n      );\n      return matchingRules;\n    }\n\n    // Gets the secondary lender rules that require other lender rules to\n    // already have been applied\n    getSecondaryLenderRules({ loan, structureId, lenderRules }) {\n      const secondaryRules = lenderRules.filter(this.lenderRulesIsSecondary);\n      const matchingRules = getMatchingRules(\n        secondaryRules,\n        this.getLenderRulesVariables({ loan, structureId }),\n        this.storeRuleOrigin,\n      );\n      return matchingRules;\n    }\n\n    lenderRulesIsSecondary({ filter }) {\n      return filter.and\n        .map(parseFilter)\n        .some(({ variable }) =>\n          [\n            LENDER_RULES_VARIABLES.BORROW_RATIO,\n            LENDER_RULES_VARIABLES.INCOME,\n          ].includes(variable));\n    }\n\n    applyRules(rules) {\n      if (rules.names) {\n        this.matchedRules = [\n          ...this.matchedRules,\n          ...rules.names.filter(x => x),\n        ];\n      }\n\n      const rulesToApply = [\n        'adminComments',\n        'allowPledge',\n        'amortizationGoal',\n        'amortizationYears',\n        'bonusAlgorithm',\n        'bonusConsideration',\n        'bonusHistoryToConsider',\n        'companyIncomeConsideration',\n        'companyIncomeHistoryToConsider',\n        'dividendsConsideration',\n        'dividendsHistoryToConsider',\n        'expensesSubtractFromIncome',\n        'fortuneReturnsRatio',\n        'incomeConsiderationType',\n        'investmentIncomeConsideration',\n        'maxBorrowRatio',\n        'maxIncomeRatio',\n        'pdfComments',\n        'pensionIncomeConsideration',\n        'realEstateIncomeAlgorithm',\n        'realEstateIncomeConsideration',\n        'realEstateIncomeConsiderationType',\n        'theoreticalInterestRate',\n        'theoreticalInterestRate2ndRank',\n        'theoreticalMaintenanceRate',\n      ];\n\n      rulesToApply.forEach((rule) => {\n        if (rules[rule] !== undefined && rules[rule] !== null) {\n          this[rule] = rules[rule];\n        }\n      });\n    }\n\n    cleanUpUnusedRules() {\n      this.maxIncomeRatioTight = 0;\n      this.maxBorrowRatioWithPledge = 0;\n    }\n  };\n","// @flow\nimport { OWN_FUNDS_TYPES } from 'core/api/constants';\nimport { getLoanDocuments } from '../../api/files/documents';\nimport { OWN_FUNDS_USAGE_TYPES } from '../../api/constants';\nimport {\n  filesPercent,\n  getMissingDocumentIds,\n} from '../../api/files/fileHelpers';\nimport getRefinancingFormArray from '../../arrays/RefinancingFormArray';\nimport NotaryFeesCalculator from '../notaryFees/NotaryFeesCalculator';\nimport { getCountedArray } from '../formArrayHelpers';\nimport { getPercent } from '../general';\n\nexport const withLoanCalculator = (SuperClass = class {}) =>\n  class extends SuperClass {\n    getProjectValue({ loan, structureId }) {\n      const propAndWork = this.getPropAndWork({ loan, structureId });\n      if (!propAndWork) {\n        return 0;\n      }\n\n      const value = propAndWork + this.getFees({ loan, structureId }).total;\n\n      return value;\n    }\n\n    getTotalUsed({ loan, structureId }) {\n      const ownFunds = this.selectStructureKey({\n        loan,\n        structureId,\n        key: 'ownFunds',\n      });\n      return ownFunds.reduce((sum, { value }) => sum + value, 0);\n    }\n\n    getTotalPledged({ loan, structureId }) {\n      const ownFunds = this.selectStructureKey({\n        loan,\n        structureId,\n        key: 'ownFunds',\n      });\n      return ownFunds\n        .filter(({ usageType }) => usageType === OWN_FUNDS_USAGE_TYPES.PLEDGE)\n        .reduce((sum, { value }) => sum + value, 0);\n    }\n\n    getFees({ loan, structureId }): number {\n      const notaryFees = this.selectStructureKey({\n        loan,\n        structureId,\n        key: 'notaryFees',\n      });\n\n      // Custom notary fees are provided\n      if (notaryFees === 0 || notaryFees) {\n        return { total: notaryFees };\n      }\n\n      const calculator = this.getFeesCalculator({ loan, structureId });\n\n      const calculatedNotaryFees = calculator.getNotaryFeesForLoan({\n        loan,\n        structureId,\n      });\n\n      return calculatedNotaryFees;\n    }\n\n    getFeesCalculator({ loan, structureId }) {\n      const canton = this.selectPropertyKey({\n        loan,\n        structureId,\n        key: 'canton',\n      });\n      return new NotaryFeesCalculator({ canton });\n    }\n\n    getInterests({ loan, interestRates, structureId }) {\n      let finalInterestRates = interestRates || loan.currentInterestRates;\n      const offer = this.selectStructureKey({\n        loan,\n        key: 'offer',\n        structureId,\n      });\n      const loanTranches = this.selectStructureKey({\n        loan,\n        key: 'loanTranches',\n        structureId,\n      });\n      const loanValue = this.selectLoanValue({ loan, structureId });\n      if (offer) {\n        finalInterestRates = offer;\n      }\n\n      const interests = this.getInterestsWithTranches({\n        tranches: loanTranches,\n        interestRates: finalInterestRates,\n      });\n\n      return (interests * loanValue) / 12;\n    }\n\n    getTheoreticalInterests({ loan, structureId }) {\n      const loanValue = this.selectLoanValue({ loan, structureId });\n      const propertyValue = this.selectPropertyValue({ loan, structureId });\n      const propertyWork = this.selectStructureKey({\n        loan,\n        structureId,\n        key: 'propertyWork',\n      }) || 0;\n      const firstRank = Math.min(\n        loanValue,\n        this.amortizationGoal * (propertyValue + propertyWork),\n      );\n      const secondRank = Math.max(0, loanValue - firstRank);\n\n      const firstRankInterests = firstRank * this.theoreticalInterestRate;\n      const secondRankInterests = secondRank\n        * (this.theoreticalInterestRate2ndRank || this.theoreticalInterestRate);\n\n      return (firstRankInterests + secondRankInterests) / 12;\n    }\n\n    getTheoreticalMaintenance({ loan, structureId }) {\n      return (\n        (this.getPropAndWork({ loan, structureId })\n          * this.theoreticalMaintenanceRate)\n        / 12\n      );\n    }\n\n    getAmortization({ loan, structureId, offerOverride }) {\n      const offer = this.selectOffer({ loan, structureId });\n      const loanValue = this.selectLoanValue({ loan, structureId });\n      const offerToUse = offerOverride || offer;\n\n      if (offerToUse) {\n        // Temporarily change amortizationGoal\n        const oldAmortizationGoal = this.amortizationGoal;\n        this.amortizationGoal = offerToUse.amortizationGoal;\n\n        const amortizationRate = this.getAmortizationRate({\n          loan,\n          amortizationYears: offerToUse.amortizationYears,\n          structureId,\n        });\n\n        const amortization = (amortizationRate * loanValue) / 12;\n\n        this.amortizationGoal = oldAmortizationGoal;\n\n        return amortization;\n      }\n\n      const amortizationRate = this.getAmortizationRate({ loan, structureId });\n      return (amortizationRate * loanValue) / 12;\n    }\n\n    getTheoreticalAmortization({ loan, structureId }) {\n      const loanValue = this.selectLoanValue({ loan, structureId });\n\n      return (this.getAmortizationRate({ loan, structureId }) * loanValue) / 12;\n    }\n\n    getAmortizationRate({ loan, amortizationYears, structureId }) {\n      const borrowRatio = this.getBorrowRatio({ loan, structureId });\n      return this.getAmortizationRateBase({\n        borrowRatio,\n        amortizationYears,\n        // Prevent caching of this function if amortizationGoal has changed\n        cacheFix: this.amortizationGoal,\n      });\n    }\n\n    getMonthly({ loan, interestRates, structureId }) {\n      return (\n        this.getInterests({ loan, interestRates, structureId })\n        + this.getAmortization({ loan, structureId })\n      );\n    }\n\n    getTheoreticalPropertyCost({ loan, structureId, asObject = false }) {\n      const interests = this.getTheoreticalInterests({ loan, structureId });\n      const amortization = this.getTheoreticalAmortization({\n        loan,\n        structureId,\n      });\n      const maintenance = this.getTheoreticalMaintenance({ loan, structureId });\n      return asObject\n        ? {\n          interests,\n          amortization,\n          maintenance,\n          total: interests + amortization + maintenance,\n        }\n        : interests + amortization + maintenance;\n    }\n\n    getTheoreticalMonthly({ loan, structureId }) {\n      const propertyCost = this.getTheoreticalPropertyCost({\n        loan,\n        structureId,\n      });\n      const expensesToAddToTheoreticalCost = this.getFormattedExpenses({ loan, structureId }).add / 12;\n\n      return propertyCost + expensesToAddToTheoreticalCost;\n    }\n\n    getIncomeRatio({ loan, structureId }) {\n      const cost = this.getTheoreticalMonthly({ loan, structureId });\n      const income = this.getTotalIncome({ borrowers: loan.borrowers });\n      const ratio = cost / (income / 12);\n\n      if (ratio > 1 || ratio < 0) {\n        return 1;\n      }\n\n      return ratio;\n    }\n\n    getBorrowRatio({ loan, structureId }) {\n      const wantedLoan = this.selectStructureKey({\n        loan,\n        structureId,\n        key: 'wantedLoan',\n      });\n      const propAndWork = this.getPropAndWork({ loan, structureId });\n      return wantedLoan / propAndWork;\n    }\n\n    getMaxBorrowRatio() {\n      return this.maxBorrowRatio;\n    }\n\n    loanHasMinimalInformation({ loan }) {\n      const structure = this.selectStructure({ loan });\n\n      return !!(\n        structure.ownFunds\n        && structure.ownFunds.length > 0\n        && this.selectPropertyValue({ loan })\n        && this.selectLoanValue({ loan })\n      );\n    }\n\n    getLoanFilesProgress({ loan }) {\n      return filesPercent({ fileArray: getLoanDocuments({ loan }), doc: loan });\n    }\n\n    getMissingLoanDocuments({ loan }) {\n      return getMissingDocumentIds({\n        fileArray: getLoanDocuments({ loan }),\n        doc: loan,\n      });\n    }\n\n    getTotalFinancing({ loan, structureId }) {\n      return (\n        this.selectStructureKey({ loan, structureId, key: 'wantedLoan' })\n        + this.getNonPledgedOwnFunds({ loan, structureId })\n      );\n    }\n\n    getNonPledgedOwnFunds({ loan, structureId }) {\n      const ownFunds = this.selectStructureKey({ loan, structureId, key: 'ownFunds' }) || [];\n      return ownFunds\n        .filter(({ usageType }) => usageType !== OWN_FUNDS_USAGE_TYPES.PLEDGE)\n        .reduce((sum, { value }) => sum + value, 0);\n    }\n\n    getPledgedOwnFunds({ loan, structureId }) {\n      const ownFunds = this.selectStructureKey({ loan, structureId, key: 'ownFunds' }) || [];\n      return ownFunds\n        .filter(({ usageType }) => usageType === OWN_FUNDS_USAGE_TYPES.PLEDGE)\n        .reduce((sum, { value }) => sum + value, 0);\n    }\n\n    getUsedFundsOfType({ loan, type, usageType, structureId }) {\n      const ownFunds = this.selectStructureKey({ loan, structureId, key: 'ownFunds' }) || [];\n      return ownFunds\n        .filter(({ type: ownFundType }) => (type ? ownFundType === type : true))\n        .filter(({ usageType: ownFundUsageType }) =>\n          (usageType ? ownFundUsageType === usageType : true))\n        .reduce((sum, { value }) => sum + value, 0);\n    }\n\n    getRemainingFundsOfType({ loan, structureId, type }) {\n      const ownFunds = this.getFunds({ loan, type, structureId });\n      return (\n        ownFunds\n        - this.getUsedFundsOfType({\n          loan,\n          type,\n          structureId,\n          usageType:\n            type !== OWN_FUNDS_TYPES.BANK_FORTUNE\n              ? OWN_FUNDS_USAGE_TYPES.WITHDRAW\n              : undefined,\n        })\n      );\n    }\n\n    getTotalRemainingFunds({ loan, structureId }) {\n      // Don't count extra third party fortune, as it is not a real \"loan\" from them\n      return Object.values(OWN_FUNDS_TYPES)\n        .filter(type => type !== OWN_FUNDS_TYPES.THIRD_PARTY_FORTUNE)\n        .reduce(\n          (sum, type) =>\n            sum + this.getRemainingFundsOfType({ loan, structureId, type }),\n          0,\n        );\n    }\n\n    refinancingPercent({ loan }) {\n      const array = getCountedArray(getRefinancingFormArray({ loan }), loan);\n      return getPercent(array);\n    }\n\n    getMortgageNoteIncrease({ loan, structureId }) {\n      const { borrowers = [] } = loan;\n      const { mortgageNoteIds = [] } = this.selectStructure({\n        loan,\n        structureId,\n      });\n\n      const { mortgageNotes: propertyMortgageNotes = [] } = this.selectProperty({ loan, structureId });\n      const borrowerMortgageNotes = this.getMortgageNotes({ borrowers });\n      const structureMortgageNotes = mortgageNoteIds.map(id =>\n        borrowerMortgageNotes.find(({ _id }) => _id === id));\n\n      const allMortgageNotes = [\n        ...structureMortgageNotes,\n        ...propertyMortgageNotes,\n      ];\n      const mortgageNoteValue = allMortgageNotes.reduce(\n        (total, { value }) => total + (value || 0),\n        0,\n      );\n      const loanValue = this.selectLoanValue({ loan, structureId });\n\n      return Math.max(0, loanValue - mortgageNoteValue);\n    }\n\n    getCashUsed({ loan, structureId }) {\n      const { ownFunds } = this.selectStructure({ loan, structureId });\n\n      return ownFunds\n        .filter(({ type, usageType }) =>\n          type !== OWN_FUNDS_TYPES.INSURANCE_2\n            && usageType !== OWN_FUNDS_USAGE_TYPES.PLEDGE)\n        .reduce((sum, { value }) => sum + value, 0);\n    }\n\n    getCashRatio({ loan, structureId }) {\n      const propAndWork = this.getPropAndWork({ loan, structureId });\n      const fees = this.getFees({ loan, structureId }).total;\n      const cashUsed = this.getCashUsed({ loan, structureId });\n\n      const cashRatio = (cashUsed - fees) / propAndWork;\n      return cashRatio;\n    }\n\n    hasEnoughCash({ loan, structureId }) {\n      return this.getCashRatio({ loan, structureId }) >= this.minCash;\n    }\n\n    structureIsValid({ loan, structureId }) {\n      const incomeRatio = this.getIncomeRatio({ loan, structureId });\n      const borrowRatio = this.getBorrowRatio({ loan, structureId });\n\n      if (\n        incomeRatio > this.maxIncomeRatio\n        || borrowRatio > this.maxBorrowRatio\n      ) {\n        return false;\n      }\n\n      if (\n        !this.allowPledge\n        && this.getPledgedOwnFunds({ loan, structureId }) > 0\n      ) {\n        return false;\n      }\n\n      return true;\n    }\n\n    getEstimatedRevenues({ loan, structureId }) {\n      const propertyValue = this.selectPropertyValue({ loan, structureId });\n      return propertyValue * this.estimatedCommission;\n    }\n\n    getEstimatedReferralRevenues({ loan, structureId }) {\n      return (\n        this.getEstimatedRevenues({ loan, structureId })\n        * this.referralCommission\n      );\n    }\n\n    getRequiredOwnFunds({ loan, structureId }) {\n      const projectValue = this.getProjectValue({ loan, structureId });\n      const loanValue = this.selectLoanValue({ loan, structureId });\n      return projectValue - loanValue;\n    }\n\n    getMissingOwnFunds({ loan, structureId }) {\n      const fundsRequired = this.getRequiredOwnFunds({ loan, structureId });\n      const totalCurrentFunds = this.getNonPledgedOwnFunds({\n        loan,\n        structureId,\n      });\n\n      return fundsRequired - totalCurrentFunds;\n    }\n\n    isMissingOwnFunds({ loan, structureId }) {\n      const missingOwnFunds = this.getMissingOwnFunds({ loan, structureId });\n      return missingOwnFunds >= this.ownFundsRoundingAmount;\n    }\n\n    hasTooMuchOwnFunds({ loan, structureId }) {\n      const missingOwnFunds = this.getMissingOwnFunds({ loan, structureId });\n      return missingOwnFunds <= -this.ownFundsRoundingAmount;\n    }\n\n    hasCompleteStructure({ loan }) {\n      return loan.structures.some(({ id }) => {\n        const fundsRequired = this.getRequiredOwnFunds({\n          loan,\n          structureId: id,\n        });\n\n        if (fundsRequired === 0) {\n          return false;\n        }\n\n        if (\n          !this.isMissingOwnFunds({ loan, structureId: id })\n          && !this.hasTooMuchOwnFunds({ loan, structureId: id })\n        ) {\n          return true;\n        }\n\n        return false;\n      });\n    }\n  };\n","// @flow\n\nexport const withOfferCalculator = (SuperClass = class {}) =>\n  class extends SuperClass {};\n","import pick from 'lodash/pick';\n\nimport { PROMOTION_TYPES, PURCHASE_TYPE } from '../../api/constants';\n\nexport const withPromotionCalculator = (SuperClass = class {}) =>\n  class extends SuperClass {\n    canAffordPromotionLot({ loan, promotionLot }) {\n      const { value, notaryFees } = promotionLot;\n      return true;\n    }\n\n    getSolvency({ loan, notaryFees = 0 }) {\n      const income = this.getTotalIncome({ loan });\n      const bankFortune = this.getFortune({ loan });\n      const cashFortune = this.getCashFortune({ loan });\n      const insurance2 = this.getInsurance2({ loan });\n\n      const results = {\n        withBankFortune: Math.round((bankFortune - notaryFees) / (1 - this.maxBorrowRatio)),\n        withInsurance2: this.getMaxPropertyValueWithInsurance2({\n          cash: bankFortune,\n          insurance2,\n          notaryFees,\n        }),\n        withInsurance3: Math.round((cashFortune - notaryFees) / (1 - this.maxBorrowRatio)),\n        withInsurance2And3: this.getMaxPropertyValueWithInsurance2({\n          cash: cashFortune,\n          insurance2,\n          notaryFees,\n        }),\n      };\n\n      return Object.keys(results).reduce(\n        (obj, key) => ({ ...obj, [key]: Math.round(results[key]) }),\n        {},\n      );\n    }\n\n    getMaxPropertyValueWithInsurance2({ cash, insurance2, notaryFees }) {\n      const availableFortune = cash - notaryFees;\n      const maxPropertyValue = availableFortune / this.minCash;\n      const canAffordProperty = (maxPropertyValue - availableFortune - insurance2) / maxPropertyValue\n        <= this.maxBorrowRatio;\n\n      if (canAffordProperty) {\n        return Math.round(maxPropertyValue);\n      }\n\n      return Math.round((availableFortune + insurance2) / (1 - this.maxBorrowRatio));\n    }\n\n    getIncomeLimitedProperty({\n      borrowers,\n      income,\n      fortune,\n      propertyValue,\n      notaryFees,\n    }) {\n      return this.getIncomeLimitedPropertyValue({\n        nF: notaryFees / propertyValue,\n        r: this.getAmortizationDuration({ borrowers }),\n        i: this.theoreticalInterestRate,\n        mR: this.maxIncomeRatio,\n        m: this.theoreticalMaintenanceRate,\n      })({ income, fortune });\n    }\n\n    formatPromotionOptionIntoProperty(promotionOption) {\n      if (!promotionOption) {\n        return;\n      }\n\n      const property = promotionOption.promotionLots[0].properties[0];\n\n      return {\n        // Get the address from the promotion\n        ...pick(promotionOption.promotion, [\n          'address1',\n          'address2',\n          'zipCode',\n          'city',\n        ]),\n        ...promotionOption,\n        ...property,\n        totalValue: promotionOption.value,\n      };\n    }\n\n    shouldUseConstructionNotaryFees({ loan, structureId }) {\n      const { promotions } = loan;\n\n      if (loan.purchaseType === PURCHASE_TYPE.CONSTRUCTION) {\n        return true;\n      }\n\n      if (!this.isPromotionProperty({ loan, structureId })) {\n        return false;\n      }\n\n      if (!promotions || (promotions.length && promotions.length === 0)) {\n        return false;\n      }\n\n      const promotion = promotions[0];\n\n      return promotion.type === PROMOTION_TYPES.SHARE;\n    }\n  };\n","// @flow\nimport {\n  getPropertyArray,\n  getPropertyLoanArray,\n} from '../../arrays/PropertyFormArray';\nimport { getPercent } from '../general';\nimport { getCountedArray, getMissingFieldIds } from '../formArrayHelpers';\nimport {\n  filesPercent,\n  getMissingDocumentIds,\n} from '../../api/files/fileHelpers';\nimport { getPropertyDocuments } from '../../api/files/documents';\nimport MiddlewareManager from '../MiddlewareManager';\n\nexport const withPropertyCalculator = (SuperClass = class {}) =>\n  class extends SuperClass {\n    constructor(config) {\n      super(config);\n      this.initPropertyCalculator(config);\n    }\n\n    initPropertyCalculator(config) {\n      if (config && config.propertyMiddleware) {\n        const middlewareManager = new MiddlewareManager(this);\n        middlewareManager.applyToAllMethods([config.propertyMiddleware]);\n      }\n    }\n\n    propertyPercent({ loan, structureId, property }) {\n      const { borrowers } = loan;\n      const structure = this.selectStructure({ loan, structureId });\n      const propertyToCalculateWith = property || structure.property;\n\n      if (!propertyToCalculateWith) {\n        return 0;\n      }\n\n      const formArray1 = getPropertyArray({\n        loan,\n        borrowers,\n        property: propertyToCalculateWith,\n      });\n      const formArray2 = getPropertyLoanArray({\n        loan,\n        borrowers,\n        property: propertyToCalculateWith,\n      });\n\n      return getPercent([\n        ...getCountedArray(formArray1, propertyToCalculateWith),\n        ...getCountedArray(formArray2, loan),\n      ]);\n    }\n\n    getPropAndWork({ loan, structureId }) {\n      const propertyValue = this.selectPropertyValue({ loan, structureId });\n      const propertyWork = this.selectStructureKey({\n        loan,\n        structureId,\n        key: 'propertyWork',\n      }) || 0;\n      return super.getPropAndWork({ propertyValue, propertyWork });\n    }\n\n    getPropertyWork({ loan, structureId }) {\n      return this.selectPropertyWork({ loan, structureId });\n    }\n\n    getPropertyFilesProgress({ loan, structureId, property }) {\n      const structure = this.selectStructure({ loan, structureId });\n      const propertyToCalculateWith = property || structure.property;\n\n      if (!propertyToCalculateWith) {\n        return 0;\n      }\n\n      return filesPercent({\n        doc: propertyToCalculateWith,\n        fileArray: getPropertyDocuments({\n          loan,\n          id: propertyToCalculateWith._id,\n        }),\n      });\n    }\n\n    getPropertyCompletion({ loan, structureId, property }) {\n      const { borrowers } = loan;\n      const selectedProperty = this.selectProperty({ loan, structureId });\n      const propertyToCalculateWith = property || selectedProperty;\n\n      const formsProgress = this.propertyPercent({\n        loan,\n        borrowers,\n        property: propertyToCalculateWith,\n      });\n      const filesProgress = this.getPropertyFilesProgress({\n        loan,\n        property: propertyToCalculateWith,\n      });\n\n      return (formsProgress + filesProgress) / 2;\n    }\n\n    getMissingPropertyFields({ loan, structureId, property }) {\n      const { borrowers } = loan;\n      const selectedProperty = this.selectProperty({ loan, structureId });\n\n      const propertyToCalculateWith = property || selectedProperty;\n\n      const formArray1 = getPropertyArray({\n        loan,\n        borrowers,\n        property: propertyToCalculateWith,\n      });\n      const formArray2 = getPropertyLoanArray({\n        loan,\n        borrowers,\n        property: propertyToCalculateWith,\n      });\n\n      return [\n        ...getMissingFieldIds(formArray1, propertyToCalculateWith),\n        ...getMissingFieldIds(formArray2, loan),\n      ];\n    }\n\n    getMissingPropertyDocuments({ loan, structureId, property }) {\n      const selectedProperty = this.selectProperty({ loan, structureId });\n      const propertyToCalculateWith = property || selectedProperty;\n\n      return getMissingDocumentIds({\n        doc: propertyToCalculateWith,\n        fileArray: getPropertyDocuments({\n          loan,\n          id: propertyToCalculateWith._id,\n        }),\n      });\n    }\n\n    hasDetailedPropertyValue({ loan, structureId }) {\n      const propertyExactValue = this.selectPropertyKey({\n        key: 'value',\n        loan,\n        structureId,\n      });\n      const landValue = this.selectPropertyKey({\n        key: 'landValue',\n        loan,\n        structureId,\n      });\n      const constructionValue = this.selectPropertyKey({\n        key: 'constructionValue',\n        loan,\n        structureId,\n      });\n\n      return !propertyExactValue || !!(landValue && constructionValue);\n    }\n\n    isPromotionProperty({ loan, structureId }) {\n      const structure = this.selectStructure({ loan, structureId });\n      return !!structure.promotionOptionId;\n    }\n  };\n","// @flow\nimport { createSelector } from 'reselect';\n\nimport { EMPTY_STRUCTURE } from '../../api/loans/loanConstants';\n\nexport const withSelector = (SuperClass = class {}) =>\n  class extends SuperClass {\n    selectProperty({ loan, structureId } = {}) {\n      let propertyId = loan.structure && loan.structure.propertyId;\n      let promotionOptionId = loan.structure && loan.structure.promotionOptionId;\n      const structure = this.selectStructure({ loan, structureId });\n\n      if (!structureId) {\n        if (structure.property) {\n          return structure.property;\n        }\n        if (structure.propertyId) {\n          return loan.properties.find(({ _id }) => _id === structure.propertyId);\n        }\n        if (structure.promotionOption) {\n          return this.formatPromotionOptionIntoProperty(structure.promotionOption);\n        }\n        if (structure.promotionOptionId) {\n          const promotionOption = loan.promotionOptions.find(({ _id }) => _id === structure.promotionOptionId);\n          return this.formatPromotionOptionIntoProperty(promotionOption);\n        }\n\n        return {};\n      }\n\n      if (structureId) {\n        propertyId = structure.propertyId;\n        promotionOptionId = structure.promotionOptionId;\n      }\n\n      if (propertyId) {\n        return loan.properties.find(({ _id }) => _id === propertyId);\n      }\n\n      if (promotionOptionId) {\n        return this.formatPromotionOptionIntoProperty(loan.promotionOptions.find(({ _id }) => _id === promotionOptionId));\n      }\n\n      return {};\n    }\n\n    selectOffer({ loan, structureId }) {\n      const { offers = [] } = loan;\n      const { offerId, offer } = this.selectStructure({ loan, structureId });\n\n      if (offer) {\n        return offer;\n      }\n\n      if (!offerId) {\n        return undefined;\n      }\n\n      return offers.find(({ _id }) => _id === offerId);\n    }\n\n    selectStructure({ loan, structureId } = {}): {} {\n      if (structureId) {\n        return loan.structures.find(({ id }) => id === structureId);\n      }\n      return (\n        loan.structure\n        || loan.structures.find(({ id }) => id === loan.selectedStructure)\n        || EMPTY_STRUCTURE\n      );\n    }\n\n    makeSelectPropertyKey(key: string): Function {\n      return createSelector(\n        this.selectProperty,\n        property => property && property[key],\n      );\n    }\n\n    selectStructureKey({ loan, structureId, key }) {\n      return this.makeSelectStructureKey(key)({ loan, structureId });\n    }\n\n    selectPropertyKey({ loan, structureId, key }) {\n      return this.makeSelectPropertyKey(key)({ loan, structureId });\n    }\n\n    makeSelectStructureKey(key: string): Function {\n      return createSelector(\n        this.selectStructure,\n        structure => structure && structure[key],\n      );\n    }\n\n    selectPropertyValue({\n      loan,\n      structureId,\n    }: { loan: userLoan } = {}): number {\n      const structurePropertyValue = this.selectStructureKey({\n        key: 'propertyValue',\n        loan,\n        structureId,\n      });\n      return (\n        structurePropertyValue\n        || this.selectPropertyKey({ loan, structureId, key: 'totalValue' })\n        || this.selectPropertyKey({ loan, structureId, key: 'value' })\n      );\n    }\n\n    selectPropertyWork({ loan, structureId } = {}): number {\n      return this.selectStructureKey({\n        loan,\n        structureId,\n        key: 'propertyWork',\n      });\n    }\n\n    selectLoanValue({ loan, structureId } = {}): number {\n      return this.selectStructureKey({ loan, structureId, key: 'wantedLoan' });\n    }\n\n    getCashUsed = this.makeSelectStructureKey('fortuneUsed');\n  };\n","// @flow\nimport { OWN_FUNDS_ROUNDING_AMOUNT } from '../../config/financeConstants';\nimport {\n  OWN_FUNDS_TYPES,\n  RESIDENCE_TYPE,\n  OWN_FUNDS_USAGE_TYPES,\n} from '../../api/constants';\nimport { arrayify } from '../general';\nimport { NotaryFeesCalculator } from '../notaryFees/index';\nimport { roundValue } from '../conversionFunctions';\n\nconst INITIAL_MIN_BOUND = 0;\nconst INITIAL_MAX_BOUND = 1000000;\nconst INITIAL_ABSOLUTE_MAX_BOUND = 100000000;\nconst MAX_ITERATIONS = 50;\nconst ACCURACY = 1000;\nconst ROUNDING_DIGITS = Math.log10(ACCURACY);\nconst MAX_BOUND_MULTIPLICATION_FACTOR = 2;\nconst OWN_FUNDS_ROUNDING_ALGO = 100;\nconst INITIAL_BORROW_RATIO_STEP_SIZE = 0.05;\n\nexport const withSolvencyCalculator = (SuperClass = class {}) =>\n  class extends SuperClass {\n    getAllowedOwnFundsTypes({ residenceType }) {\n      return residenceType === RESIDENCE_TYPE.MAIN_RESIDENCE\n        ? [\n          OWN_FUNDS_TYPES.THIRD_PARTY_FORTUNE,\n          OWN_FUNDS_TYPES.BANK_FORTUNE,\n          OWN_FUNDS_TYPES.INSURANCE_3A,\n          OWN_FUNDS_TYPES.BANK_3A,\n          OWN_FUNDS_TYPES.INSURANCE_3B,\n          OWN_FUNDS_TYPES.INSURANCE_2,\n        ]\n        : [\n          OWN_FUNDS_TYPES.THIRD_PARTY_FORTUNE,\n          OWN_FUNDS_TYPES.BANK_FORTUNE,\n          OWN_FUNDS_TYPES.INSURANCE_3B,\n        ];\n    }\n\n    ownFundTypeRequiresUsageType({ type }) {\n      return [\n        OWN_FUNDS_TYPES.INSURANCE_2,\n        OWN_FUNDS_TYPES.INSURANCE_3A,\n        OWN_FUNDS_TYPES.INSURANCE_3B,\n      ].includes(type);\n    }\n\n    makeOwnFunds({ borrowers, type, usageType, max }) {\n      return arrayify(borrowers)\n        .map((borrower) => {\n          const ownFundsObject = {\n            type,\n            value: Math.ceil(Math.min(max, this.getFunds({ borrowers: borrower, type }))),\n            borrowerId: borrower._id,\n          };\n\n          if (!usageType && this.ownFundTypeRequiresUsageType({ type })) {\n            return {\n              ...ownFundsObject,\n              usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW,\n            };\n          }\n\n          if (usageType) {\n            return { ...ownFundsObject, usageType };\n          }\n\n          return ownFundsObject;\n        })\n        .filter(({ value }) => value > 0);\n    }\n\n    suggestStructure({\n      borrowers,\n      propertyValue,\n      maxBorrowRatio = this.maxBorrowRatio,\n      loanValue,\n      canton,\n      residenceType,\n      notaryFees: forcedNotaryFees,\n    }) {\n      let notaryFees;\n\n      const finalLoanValue = loanValue || Math.round(propertyValue * maxBorrowRatio);\n\n      if (forcedNotaryFees) {\n        notaryFees = forcedNotaryFees;\n      } else {\n        const notaryCalc = new NotaryFeesCalculator({ canton });\n        notaryFees = notaryCalc.getNotaryFeesWithoutLoan({\n          propertyValue,\n          mortgageNoteIncrease: finalLoanValue,\n          residenceType,\n        }).total;\n      }\n\n      let requiredOwnFunds = Math.round(propertyValue + notaryFees - finalLoanValue);\n      let ownFunds = [];\n\n      // Get all possible OWN_FUNDS_TYPES\n      const allowedOwnFundsTypes = this.getAllowedOwnFundsTypes({\n        residenceType,\n      });\n\n      allowedOwnFundsTypes.forEach((type) => {\n        borrowers.forEach((borrower) => {\n          const newOwnFunds = this.makeOwnFunds({\n            borrowers: borrower,\n            type,\n            max: requiredOwnFunds,\n          });\n\n          requiredOwnFunds -= newOwnFunds.reduce(\n            (tot, { value }) => tot + value,\n            0,\n          );\n\n          ownFunds = [...ownFunds, ...newOwnFunds];\n        });\n      });\n\n      return ownFunds;\n    }\n\n    createLoanObject({\n      residenceType,\n      borrowers,\n      wantedLoan,\n      propertyValue,\n      canton,\n      ownFunds = [],\n      loanTranches = [],\n      ...rest\n    }) {\n      return {\n        residenceType,\n        borrowers,\n        structure: {\n          wantedLoan,\n          propertyValue,\n          property: { canton },\n          ownFunds,\n          loanTranches,\n        },\n        ...rest,\n      };\n    }\n\n    suggestedStructureIsValid({\n      borrowers,\n      propertyValue,\n      maxBorrowRatio = this.maxBorrowRatio,\n      loanValue,\n      canton,\n      residenceType,\n      ownFunds,\n    }) {\n      const finalLoanValue = loanValue || Math.round(propertyValue * maxBorrowRatio);\n      const loanObject = this.createLoanObject({\n        residenceType,\n        borrowers,\n        wantedLoan: finalLoanValue,\n        propertyValue,\n        canton,\n        ownFunds,\n      });\n\n      // If the calculator has been initialized, reinitialize it according to this new potential loan\n      if (this.lenderRules) {\n        this.initialize({ loan: loanObject, lenderRules: this.lenderRules });\n      }\n\n      if (this.isMissingOwnFunds({ loan: loanObject })) {\n        return false;\n      }\n\n      if (!this.hasEnoughCash({ loan: loanObject })) {\n        return false;\n      }\n\n      if (!this.structureIsValid({ loan: loanObject })) {\n        return false;\n      }\n\n      return true;\n    }\n\n    getMaxPropertyValue({ borrowers, maxBorrowRatio, canton, residenceType }) {\n      // Immediately stop iterating if maxBorrowRatio is above what is allowed\n      if (this.maxBorrowRatio < maxBorrowRatio) {\n        return 0;\n      }\n\n      let foundValue = false;\n      let minBound = INITIAL_MIN_BOUND;\n      let maxBound = INITIAL_MAX_BOUND;\n      let absoluteMax = INITIAL_ABSOLUTE_MAX_BOUND;\n      let iterations = 0;\n\n      // The rounding amount of 1000 is helpful when the user tries to\n      // fit his own funds into a structure without being overly accurate\n      // which is annoying.\n      // However for this calculation we don't need to round own funds as loosely\n      this.ownFundsRoundingAmount = OWN_FUNDS_ROUNDING_ALGO;\n\n      while (!foundValue) {\n        iterations += 1;\n        const nextPropertyValue = roundValue(\n          (minBound + maxBound) / 2,\n          ROUNDING_DIGITS,\n        );\n\n        const ownFunds = this.suggestStructure({\n          borrowers,\n          maxBorrowRatio,\n          canton,\n          residenceType,\n          propertyValue: nextPropertyValue,\n        });\n\n        if (\n          this.suggestedStructureIsValid({\n            borrowers,\n            maxBorrowRatio,\n            canton,\n            residenceType,\n            propertyValue: nextPropertyValue,\n            ownFunds,\n          })\n        ) {\n          minBound = nextPropertyValue;\n          maxBound = Math.min(\n            maxBound * MAX_BOUND_MULTIPLICATION_FACTOR,\n            absoluteMax,\n          );\n        } else {\n          maxBound = nextPropertyValue;\n          absoluteMax = maxBound;\n        }\n\n        if (maxBound - minBound <= ACCURACY) {\n          foundValue = true;\n        }\n\n        if (iterations > MAX_ITERATIONS) {\n          foundValue = true;\n        }\n      }\n\n      this.ownFundsRoundingAmount = OWN_FUNDS_ROUNDING_AMOUNT;\n\n      return minBound;\n    }\n\n    getNextStepSize({\n      currentMax,\n      currentBorrowRatio,\n      stepSize,\n      borrowers,\n      residenceType,\n      canton,\n      direction,\n      cache,\n    }) {\n      let newStepSize = stepSize;\n      let foundBetterValue;\n\n      while (!foundBetterValue) {\n        let nextValue;\n        if (direction === 'upwards') {\n          nextValue = cache[currentBorrowRatio + stepSize]\n            || this.getMaxPropertyValue({\n              borrowers,\n              residenceType,\n              maxBorrowRatio: currentBorrowRatio + stepSize,\n              canton,\n            });\n        } else {\n          nextValue = cache[currentBorrowRatio - stepSize]\n            || this.getMaxPropertyValue({\n              borrowers,\n              residenceType,\n              maxBorrowRatio: currentBorrowRatio - stepSize,\n              canton,\n            });\n        }\n\n        if (nextValue > currentMax) {\n          foundBetterValue = true;\n        } else {\n          newStepSize /= 2;\n        }\n\n        if (newStepSize < 0.05) {\n          foundBetterValue = true;\n        }\n      }\n\n      return newStepSize;\n    }\n\n    getMaxPropertyValueWithoutBorrowRatio({\n      borrowers,\n      residenceType,\n      canton,\n    }) {\n      let borrowRatio = 0.7;\n      let foundValue = false;\n      let iterations = 0;\n      let stepSize = INITIAL_BORROW_RATIO_STEP_SIZE;\n      const deltaX = 0.01;\n      let maxPropertyValue = 0;\n      let optimalBorrowRatio;\n      const cache = {};\n\n      const setMax = (ratio, propertyValue) => {\n        // Cache each result to avoid recalculating it later\n        if (!cache[`${ratio}`]) {\n          cache[`${ratio}`] = propertyValue;\n        }\n\n        // Always store the highest encountered value, in case the loop\n        // stops prematurely, or if the stopping conditions would've skipped\n        // a value that we already calculated\n        if (propertyValue > maxPropertyValue) {\n          maxPropertyValue = propertyValue;\n          optimalBorrowRatio = ratio;\n        }\n      };\n\n      while (!foundValue) {\n        iterations += 1;\n\n        const center = cache[borrowRatio]\n          || this.getMaxPropertyValue({\n            borrowers,\n            residenceType,\n            maxBorrowRatio: borrowRatio,\n            canton,\n          });\n        setMax(borrowRatio, center);\n\n        const yLeft = cache[borrowRatio - deltaX]\n          || this.getMaxPropertyValue({\n            borrowers,\n            residenceType,\n            maxBorrowRatio: borrowRatio - deltaX,\n            canton,\n          });\n        setMax(borrowRatio - deltaX, yLeft);\n        const yRight = cache[borrowRatio + deltaX]\n          || this.getMaxPropertyValue({\n            borrowers,\n            residenceType,\n            maxBorrowRatio: borrowRatio + deltaX,\n            canton,\n          });\n        setMax(borrowRatio + deltaX, yRight);\n\n        const slope = yRight - yLeft;\n\n        if (yRight === 0 && yLeft === 0) {\n          // If the algorithm is at 0 on both sides, it means the borrowRatio\n          // is way too high, so start him over again at 0, but with a large\n          // step size to allow it to recover quickly\n          borrowRatio = INITIAL_BORROW_RATIO_STEP_SIZE;\n          stepSize = 0.2;\n        } else if (slope > 0) {\n          stepSize = this.getNextStepSize({\n            currentMax: center,\n            currentBorrowRatio: borrowRatio,\n            stepSize,\n            borrowers,\n            residenceType,\n            canton,\n            direction: 'upwards',\n            cache,\n          });\n          borrowRatio += stepSize;\n        } else {\n          stepSize = this.getNextStepSize({\n            currentMax: center,\n            currentBorrowRatio: borrowRatio,\n            stepSize,\n            borrowers,\n            residenceType,\n            canton,\n            direction: 'downwards',\n            cache,\n          });\n          borrowRatio -= stepSize;\n        }\n\n        if (stepSize < deltaX / 2) {\n          foundValue = true;\n        }\n\n        if (iterations > 50) {\n          foundValue = true;\n        }\n      }\n\n      // Round the borrowRatio, and recompute the exact property value\n      const finalBorrowRatio = Math.round(optimalBorrowRatio * 10000) / 10000;\n      const finalPropertyValue = cache[finalBorrowRatio]\n        || this.getMaxPropertyValue({\n          borrowers,\n          residenceType,\n          maxBorrowRatio: finalBorrowRatio,\n          canton,\n        });\n\n      return {\n        borrowRatio: finalBorrowRatio,\n        propertyValue: finalPropertyValue,\n      };\n    }\n\n    getMaxPropertyValueForLoan({\n      loan,\n      maxBorrowRatio,\n      canton,\n      residenceType,\n    }) {\n      const { borrowers, residenceType: loanResidenceType } = loan;\n      return this.getMaxPropertyValue({\n        borrowers,\n        residenceType: residenceType || loanResidenceType,\n        maxBorrowRatio,\n        canton,\n      });\n    }\n\n    suggestStructureForLoan({ loan, structureId }) {\n      const propertyValue = this.getPropAndWork({ loan, structureId });\n      const loanValue = this.selectLoanValue({ loan, structureId });\n      const notaryFees = this.getFees({ loan, structureId }).total;\n\n      return this.suggestStructure({\n        borrowers: loan.borrowers,\n        propertyValue,\n        loanValue,\n        residenceType: loan.residenceType,\n        notaryFees,\n      });\n    }\n  };\n","export const withConfig = extraConfig => SuperClass =>\n  class extends SuperClass {\n    constructor(config) {\n      super({ ...config, ...extraConfig });\n    }\n  };\n","import { compose } from 'recompose';\n\nimport { FinanceCalculator } from '../FinanceCalculator';\nimport { withLoanCalculator } from './LoanCalculator';\nimport { withBorrowerCalculator } from './BorrowerCalculator';\nimport { withOfferCalculator } from './OfferCalculator';\nimport { withPropertyCalculator } from './PropertyCalculator';\nimport { withPromotionCalculator } from './PromotionCalculator';\nimport { withCombinedCalculator } from './CombinedCalculator';\nimport { withSelector } from './Selector';\nimport { withLenderRulesInitializator } from './LenderRulesInitializator';\nimport { withSolvencyCalculator } from './SolvencyCalculator';\nimport { withConfig } from './classUtils';\nimport { financeCalculatorArgumentMapper } from './middleware';\n\nconst MappedFinanceCalculator = withConfig({\n  middlewareObject: financeCalculatorArgumentMapper,\n})(FinanceCalculator);\n\n// Put CombinedCalculator first, so that it can modify the following calculators\n// with middleware\nexport const Calculator = compose(\n  withLenderRulesInitializator,\n  withSolvencyCalculator,\n  withCombinedCalculator,\n  withPromotionCalculator,\n  withLoanCalculator,\n  withBorrowerCalculator,\n  withPropertyCalculator,\n  withOfferCalculator,\n  withSelector,\n)(MappedFinanceCalculator);\n\nexport default new Calculator({});\n","// @flow\n\n// Map loan onto FinanceCalculator\n\nimport { makeArgumentMapper } from '../MiddlewareManager';\nimport memoizeOne from '../memoizeOne';\n\nconst argumentMappings = {};\n\nexport const financeCalculatorArgumentMapper = makeArgumentMapper(argumentMappings);\n\nexport const borrowerExtractorMiddleware = () => next => (params, ...args) => {\n  if (params && params.loan && !params.borrowers) {\n    return next({ ...params, borrowers: params.loan.borrowers }, ...args);\n  }\n  return next(params, ...args);\n};\n\nexport const memoizeMiddleware = () => (next) => {\n  const memoFunc = memoizeOne(next);\n  return memoFunc;\n};\n","// @flow\nimport {\n  GENDER,\n  SUCCESS,\n  ERROR,\n  WARNING,\n  RESIDENCE_TYPE,\n  REAL_ESTATE_CONSIDERATION_TYPES,\n  EXPENSE_TYPES_WITHOUT_DELTAS,\n} from '../../api/constants';\nimport {\n  AMORTIZATION_STOP,\n  AMORTIZATION_YEARS,\n  AVERAGE_TAX_RATE,\n  BONUS_ALGORITHMS,\n  BONUS_CONSIDERATION,\n  BONUS_HISTORY_TO_CONSIDER,\n  COMPANY_INCOME_TO_CONSIDER,\n  DEFAULT_AMORTIZATION,\n  DIVIDENDS_CONSIDERATION,\n  DIVIDENDS_HISTORY_TO_CONSIDER,\n  ESTIMATED_COMMISSION,\n  FORTUNE_RETURNS_RATIO,\n  INTERESTS_FINMA,\n  INVESTMENT_INCOME_CONSIDERATION,\n  MAINTENANCE_FINMA,\n  MAX_BORROW_RATIO_PRIMARY_PROPERTY,\n  MAX_BORROW_RATIO_WITH_PLEDGE,\n  MAX_INCOME_RATIO_TIGHT,\n  MAX_INCOME_RATIO,\n  MIN_CASH,\n  NOTARY_FEES,\n  OWN_FUNDS_ROUNDING_AMOUNT,\n  PENSION_INCOME_CONSIDERATION,\n  REAL_ESTATE_INCOME_ALGORITHMS,\n  REAL_ESTATE_INCOME_CONSIDERATION,\n  REFERRAL_COMMISSION_SPLIT,\n  REFERRAL_COMMISSION,\n} from '../../config/financeConstants';\nimport MiddlewareManager from '../MiddlewareManager';\nimport { precisionMiddleware } from './financeCalculatorMiddlewares';\nimport { memoizeMiddleware } from '../Calculator/middleware';\n\nexport class FinanceCalculator {\n  constructor(settings?: Object) {\n    this.initFinanceCalculator(settings);\n  }\n\n  notaryFees: number;\n\n  amortizationBaseRate: number;\n\n  amortizationGoal: number;\n\n  initFinanceCalculator({\n    allowPledge = true,\n    amortizationBaseRate = DEFAULT_AMORTIZATION,\n    amortizationGoal = AMORTIZATION_STOP,\n    amortizationYears = AMORTIZATION_YEARS,\n    bonusAlgorithm = BONUS_ALGORITHMS.WEAK_AVERAGE,\n    bonusConsideration = BONUS_CONSIDERATION,\n    bonusHistoryToConsider = BONUS_HISTORY_TO_CONSIDER,\n    companyIncomeHistoryToConsider = COMPANY_INCOME_TO_CONSIDER,\n    dividendsConsideration = DIVIDENDS_CONSIDERATION,\n    dividendsHistoryToConsider = DIVIDENDS_HISTORY_TO_CONSIDER,\n    expensesSubtractFromIncome = EXPENSE_TYPES_WITHOUT_DELTAS,\n    fortuneReturnsRatio = FORTUNE_RETURNS_RATIO,\n    investmentIncomeConsideration = INVESTMENT_INCOME_CONSIDERATION,\n    maxBorrowRatio = MAX_BORROW_RATIO_PRIMARY_PROPERTY,\n    maxBorrowRatioWithPledge = MAX_BORROW_RATIO_WITH_PLEDGE,\n    maxIncomeRatio = MAX_INCOME_RATIO,\n    maxIncomeRatioTight = MAX_INCOME_RATIO_TIGHT,\n    minCash = MIN_CASH,\n    notaryFees = NOTARY_FEES,\n    ownFundsRoundingAmount = OWN_FUNDS_ROUNDING_AMOUNT,\n    pensionIncomeConsideration = PENSION_INCOME_CONSIDERATION,\n    realEstateIncomeAlgorithm = REAL_ESTATE_INCOME_ALGORITHMS.DEFAULT,\n    realEstateIncomeConsideration = REAL_ESTATE_INCOME_CONSIDERATION,\n    realEstateIncomeConsiderationType = REAL_ESTATE_CONSIDERATION_TYPES.ADD_TO_INCOME,\n    taxRate = AVERAGE_TAX_RATE,\n    theoreticalInterestRate = INTERESTS_FINMA,\n    theoreticalInterestRate2ndRank = null,\n    theoreticalMaintenanceRate = MAINTENANCE_FINMA,\n    estimatedCommission = ESTIMATED_COMMISSION,\n    referralCommission = REFERRAL_COMMISSION,\n    referralCommissionSplit = REFERRAL_COMMISSION_SPLIT,\n    middlewares = [],\n    middlewareObject,\n  } = {}) {\n    this.allowPledge = allowPledge;\n    this.amortizationBaseRate = amortizationBaseRate;\n    this.amortizationGoal = amortizationGoal;\n    this.amortizationYears = amortizationYears;\n    this.bonusAlgorithm = bonusAlgorithm;\n    this.bonusConsideration = bonusConsideration;\n    this.bonusHistoryToConsider = bonusHistoryToConsider;\n    this.companyIncomeHistoryToConsider = companyIncomeHistoryToConsider;\n    this.dividendsConsideration = dividendsConsideration;\n    this.dividendsHistoryToConsider = dividendsHistoryToConsider;\n    this.expensesSubtractFromIncome = expensesSubtractFromIncome;\n    this.fortuneReturnsRatio = fortuneReturnsRatio;\n    this.investmentIncomeConsideration = investmentIncomeConsideration;\n    this.maxBorrowRatio = maxBorrowRatio;\n    this.maxBorrowRatioWithPledge = maxBorrowRatioWithPledge;\n    this.maxIncomeRatio = maxIncomeRatio;\n    this.maxIncomeRatioTight = maxIncomeRatioTight;\n    this.minCash = minCash;\n    this.notaryFees = notaryFees;\n    this.ownFundsRoundingAmount = ownFundsRoundingAmount;\n    this.pensionIncomeConsideration = pensionIncomeConsideration;\n    this.realEstateIncomeAlgorithm = realEstateIncomeAlgorithm;\n    this.realEstateIncomeConsideration = realEstateIncomeConsideration;\n    this.realEstateIncomeConsiderationType = realEstateIncomeConsiderationType;\n    this.taxRate = taxRate;\n    this.theoreticalInterestRate = theoreticalInterestRate;\n    this.theoreticalInterestRate2ndRank = theoreticalInterestRate2ndRank;\n    this.theoreticalMaintenanceRate = theoreticalMaintenanceRate;\n    this.estimatedCommission = estimatedCommission;\n    this.referralCommission = referralCommission;\n    this.referralCommissionSplit = referralCommissionSplit;\n    this.setMiddleware(middlewares, middlewareObject);\n  }\n\n  setMiddleware = (middlewares?: Array<Function>, middlewareObject) => {\n    const middlewareManager = new MiddlewareManager(this, middlewareObject);\n    middlewareManager.applyToAllMethods([\n      precisionMiddleware,\n      memoizeMiddleware,\n      ...middlewares,\n    ]);\n  };\n\n  getLoanValue({\n    propertyValue,\n    propertyWork = 0,\n    fortune,\n    pledgedValue = 0,\n    fees = this.getFeesBase({ propertyValue, propertyWork }),\n  }: {\n    propertyValue: number,\n    fortune: number,\n    pledgedValue?: number,\n    fees?: number,\n  }) {\n    return propertyValue + propertyWork + fees + pledgedValue - fortune;\n  }\n\n  getPropAndWork({ propertyValue, propertyWork }) {\n    return propertyValue + propertyWork;\n  }\n\n  getBorrowRatio({\n    propertyValue,\n    loan = 0,\n  }: {\n    propertyValue: number,\n    loan: number,\n  }) {\n    return loan / propertyValue;\n  }\n\n  getLoanFromBorrowRatio({\n    propertyValue,\n    borrowRatio,\n  }: {\n    propertyValue: number,\n    borrowRatio: number,\n  }) {\n    return borrowRatio * propertyValue;\n  }\n\n  getBorrowRatioWithoutLoan({\n    propertyValue,\n    fortune,\n  }: {\n    propertyValue: number,\n    fortune: number,\n  }) {\n    return this.getBorrowRatio({\n      propertyValue,\n      loan: this.getLoanValue({ propertyValue, fortune }),\n    });\n  }\n\n  getBorrowRatioStatus({ borrowRatio }) {\n    if (borrowRatio <= this.maxBorrowRatio) {\n      return SUCCESS;\n    }\n    if (borrowRatio <= this.maxBorrowRatioWithPledge) {\n      return WARNING;\n    }\n    return ERROR;\n  }\n\n  getRetirementForGender({ gender = GENDER.M }: { gender?: string } = {}) {\n    return gender === GENDER.F ? 64 : 65;\n  }\n\n  getIncomeRatio({\n    monthlyIncome,\n    monthlyPayment = 0,\n  }: {\n    monthlyIncome: number,\n    monthlyPayment: number,\n  }) {\n    return monthlyPayment / monthlyIncome;\n  }\n\n  getIncomeRatioStatus({ incomeRatio }) {\n    if (incomeRatio <= this.maxIncomeRatio) {\n      return SUCCESS;\n    }\n    if (this.maxIncomeRatioTight && incomeRatio <= this.maxIncomeRatioTight) {\n      // This ratio can be disabled, i.e. set to 0, and then it'll skip the warning\n      // and only display success or error\n      return WARNING;\n    }\n    return ERROR;\n  }\n\n  getLoanCost({\n    maintenance = 0,\n    interests = 0,\n    amortization = 0,\n  }: {\n    maintenance?: number,\n    interests?: number,\n    amortization?: number,\n  } = {}) {\n    return maintenance + interests + amortization;\n  }\n\n  getLoanCostWithParts({\n    maintenance,\n    interests,\n    amortization,\n  }: {\n    maintenance: number,\n    interests: number,\n    amortization?: number,\n  }) {\n    return {\n      maintenance,\n      interests,\n      amortization,\n      total: this.getLoanCost({ maintenance, interests, amortization }),\n    };\n  }\n\n  checkInterestsAndTranches({\n    tranches = [],\n    interestRates,\n  }: {\n    tranches: Array<{ type: string, value: number }>,\n    interestRates: Object,\n  }) {\n    return tranches.reduce((invalidRate, { type }) => {\n      if (invalidRate) {\n        return invalidRate;\n      }\n\n      if (!interestRates[type]) {\n        return type;\n      }\n    }, undefined);\n  }\n\n  getInterestsWithTranches({\n    tranches = [],\n    interestRates,\n  }: {\n    tranches: Array<{ type: string, value: number }>,\n    interestRates: Object,\n  } = {}) {\n    return tranches.reduce((acc, { type, value }) => {\n      const rate = interestRates[type];\n\n      if (!rate || acc === '-') {\n        return '-';\n      }\n\n      return acc + value * rate;\n    }, 0);\n  }\n\n  getAmortizationRateBase({\n    borrowRatio = 0,\n    amortizationYears = this.amortizationYears,\n  }: { borrowRatio: number, amortizationRate?: number } = {}) {\n    let amortizationRate = 0;\n    if (borrowRatio > this.amortizationGoal) {\n      // The loan has to be below 65% before 15 years or before retirement,\n      // whichever comes first\n      const amountToAmortize = borrowRatio - this.amortizationGoal;\n\n      // Make sure we don't create a black hole, or use negative values by error\n      if (amortizationYears > 0) {\n        // Amortization is the amount to amortize divided by the amount\n        // of years before the deadline\n        amortizationRate = amountToAmortize / amortizationYears;\n      }\n    } else {\n      // For projects below 65%, stop amortizing\n      // yearlyAmortization = propAndWork * constants.amortization;\n    }\n\n    return amortizationRate / borrowRatio || 0;\n  }\n\n  getMaxLoanBase({\n    propertyValue,\n    propertyWork,\n    pledgedAmount = 0,\n    residenceType,\n  }: {\n    propertyValue: number,\n    propertyWork: number,\n    pledgedAmount: number,\n    residenceType: string,\n  } = {}): number {\n    if (residenceType === RESIDENCE_TYPE.MAIN_RESIDENCE) {\n      return Math.min(\n        (propertyValue + propertyWork) * this.maxBorrowRatio + pledgedAmount,\n\n        (propertyValue + propertyWork) * this.maxBorrowRatioWithPledge,\n      );\n    }\n    return (propertyValue + propertyWork) * this.maxBorrowRatio;\n  }\n\n  getYearsToRetirement = ({\n    age1,\n    age2,\n    gender1,\n    gender2,\n  }: {\n    age1?: number,\n    age2?: number,\n    gender1?: 'F' | 'M',\n    gender2?: 'F' | 'M',\n  } = {}) => {\n    const retirement1 = this.getRetirementForGender({ gender: gender1 });\n    let retirement2 = null;\n    if (gender2) {\n      retirement2 = this.getRetirementForGender({ gender: gender2 });\n    }\n\n    // Substract age to determine remaining time to retirement for both borrowers\n    const toRetirement1 = retirement1 - age1;\n    let toRetirement2;\n    if (retirement2 && age2) {\n      toRetirement2 = retirement2 - age2;\n    }\n\n    // Get the most limiting time to retirement for both borrowers, in years\n    let yearsToRetirement;\n    if (toRetirement2) {\n      yearsToRetirement = Math.min(toRetirement1, toRetirement2);\n    } else {\n      yearsToRetirement = toRetirement1;\n    }\n\n    return Math.max(yearsToRetirement, 0);\n  };\n\n  getTheoreticalMonthly({ propAndWork, loanValue, amortizationRate }) {\n    const maintenance = (propAndWork * this.theoreticalMaintenanceRate) / 12;\n    const interests = (loanValue * this.theoreticalInterestRate) / 12;\n    const amortization = (loanValue * amortizationRate) / 12;\n    return this.getLoanCostWithParts({ maintenance, interests, amortization });\n  }\n\n  getNotaryFeesRate() {\n    return this.notaryFees;\n  }\n\n  getMinCash({\n    propertyValue,\n    propertyWork,\n    fees = this.getFeesBase({ propertyValue, propertyWork }),\n  }) {\n    return (propertyValue + propertyWork) * this.minCash + fees;\n  }\n\n  getFeesBase({ fees, propertyValue = 0 }) {\n    if (fees === 0 || fees > 0) {\n      return fees;\n    }\n\n    return propertyValue * this.notaryFees;\n  }\n\n  getIncomeLimitedPropertyValue = ({ nF, r, i, mR, m }) => ({\n    income,\n    fortune,\n  }) => {\n    // The first one is with 0 amortization\n    const incomeLimited1 = (mR * income + fortune * i) / (m + (1 + nF) * i);\n\n    // The second is with amortization factored in (and it could be negative due to math)\n    const incomeLimited2 = ((1 + r * i) * fortune + mR * r * income)\n      / (r * (m + i) + nF * (1 + r * i) + 0.35);\n\n    // Therefore, take the minimum value of both, which is the most limiting one\n    // Because of the ratios, round this value down\n    return Math.floor(Math.min(incomeLimited1, incomeLimited2));\n  };\n\n  getAveragedInterestRate({ tranches = [], interestRates = {} }) {\n    return tranches.reduce(\n      (totalRate, { type, value }) => totalRate + interestRates[type] * value,\n      0,\n    );\n  }\n}\n\nexport default new FinanceCalculator();\n","export const precisionMiddleware = () => next => (...args) => {\n  const result = next(...args);\n\n  if (typeof result === 'number') {\n    return Number(result.toPrecision(10));\n  }\n\n  return result;\n};\n","// @flow\nexport { default, FinanceCalculator } from './FinanceCalculator';\n","// @flow\nimport { compose } from 'recompose';\nimport isArray from 'lodash/isArray';\nimport difference from 'lodash/difference';\n\nconst middlewareManagerHash = [];\nconst CLASS_METHODS_TO_EXCLUDE = [\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toString',\n  'valueOf',\n  'toLocaleString',\n  '__defineGetter__',\n  '__defineSetter__',\n  '__lookupGetter__',\n  '__lookupSetter__',\n];\n\ntype MiddlewareType = Array<Function> | Function;\ntype MiddlewareObjectType = Array<Object> | Object;\n\n// Careful, methods starting with \"_\" will not be wrapped by middleware,\n// except if you use a middlewareObject\nclass MiddlewareManager {\n  constructor(target: Object, middlewareObjects?: MiddlewareObjectType) {\n    let instance = middlewareManagerHash.find(key => key._target === target);\n    // a target can only has one MiddlewareManager instance\n    if (instance === undefined) {\n      this._target = target;\n      this._methods = {};\n      this._methodMiddlewares = {};\n      middlewareManagerHash.push(this);\n      instance = this;\n    }\n\n    if (middlewareObjects) {\n      instance.useObjectMiddleware(middlewareObjects);\n    }\n\n    return instance;\n  }\n\n  applyToAllMethods(_middlewares: MiddlewareType, omit) {\n    const middlewares = this.arrayify(_middlewares);\n    const methods = this.getAllMethodNames(this._target);\n\n    methods\n      .filter((name) => {\n        if (omit) {\n          return !omit.includes(name);\n        }\n        return true;\n      })\n      .forEach(method => this.applyToMethod(method, middlewares));\n\n    return this;\n  }\n\n  getAllMethodNames(obj: Object = {}, stop: mixed) {\n    const methodNames = [];\n    let proto = Object.getPrototypeOf(obj);\n    while (proto && proto !== stop) {\n      Object.getOwnPropertyNames(proto).forEach((name) => {\n        if (name !== 'constructor') {\n          if (this.hasMethod(proto, name)) {\n            methodNames.push(name);\n          }\n        }\n      });\n      proto = Object.getPrototypeOf(proto);\n    }\n    return difference(methodNames, CLASS_METHODS_TO_EXCLUDE);\n  }\n\n  hasMethod(obj: Object, name: string) {\n    const desc = Object.getOwnPropertyDescriptor(obj, name);\n    return !!desc && typeof desc.value === 'function';\n  }\n\n  applyToMethod(methodName: string, _middlewares: MiddlewareType) {\n    const middlewares = this.arrayify(_middlewares);\n\n    if (\n      typeof methodName === 'string'\n      && !this.stringStartsWithUnderscore(methodName)\n    ) {\n      const method = this._methods[methodName] || this._target[methodName];\n      if (typeof method === 'function') {\n        this._methods[methodName] = method;\n\n        if (\n          this._methodMiddlewares[methodName] === undefined\n          || !isArray(this._methodMiddlewares[methodName])\n        ) {\n          this._methodMiddlewares[methodName] = [];\n        }\n\n        middlewares.forEach(middleware =>\n          typeof middleware === 'function'\n            && this._methodMiddlewares[methodName].push(middleware(this._target)));\n        this._target[methodName] = compose(...this._methodMiddlewares[methodName])(method.bind(this._target));\n      }\n    }\n\n    return this;\n  }\n\n  stringStartsWithUnderscore(string: string) {\n    return /^_+|_+$/g.test(string);\n  }\n\n  useObjectMiddleware(_objectMiddlewares: MiddlewareObjectType) {\n    const objectMiddlewares = this.arrayify(_objectMiddlewares);\n\n    Array.prototype.slice.call(objectMiddlewares).forEach((arg) => {\n      // A middleware object can specify target functions within middlewareMethods (Array).\n      // e.g. obj.middlewareMethods = ['method1', 'method2'];\n      // only method1 and method2 will be the target function.\n      typeof arg === 'object'\n        && (arg.middlewareMethods || Object.keys(arg)).forEach((key) => {\n          typeof arg[key] === 'function'\n            && this.applyToMethod(key, arg[key].bind(arg));\n        });\n    });\n\n    return this;\n  }\n\n  arrayify(maybeArray: mixed | Array): Array<Object | Function> {\n    return isArray(maybeArray) ? maybeArray : [maybeArray];\n  }\n}\n\nexport default MiddlewareManager;\n","// @flow\nimport isArray from 'lodash/isArray';\n\nexport const makeArgumentMapper = (mappings: { [key: string]: Function }) =>\n  Object.keys(mappings).reduce(\n    (mapper, key) => ({\n      ...mapper,\n      [key]: () => next => (...args) => {\n        const argumentMapperFunc = mappings[key];\n        const newArgumentStructure = argumentMapperFunc(...args);\n\n        if (isArray(newArgumentStructure)) {\n          return next(...newArgumentStructure);\n        }\n\n        return next(newArgumentStructure);\n      },\n    }),\n    {},\n  );\n\nexport default makeArgumentMapper;\n","export { default } from './MiddlewareManager';\nexport * from './argumentMapperMiddleware';\n","export * from './localization';\n","// This file is shared between client and server to allow server-side tests to have access to it\n\nimport { addLocaleData } from 'react-intl';\nimport moment from 'moment';\nimport fr from 'react-intl/locale-data/fr';\nimport translateSimpleSchema from './simpleSchemaLocalization';\nimport Intl from '../intl';\n\nexport const getUserLocale = () => 'fr-CH';\n\nexport const getFormats = () => ({\n  number: {\n    money: {\n      style: 'currency',\n      currency: 'CHF',\n      maximumFractionDigits: 0,\n      minimumFractionDigits: 0,\n    },\n    moneyWithoutCurrency: {\n      style: 'decimal',\n      useGrouping: true,\n      maximumFractionDigits: 0,\n      minimumFractionDigits: 0,\n    },\n    percentage: {\n      style: 'percent',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    },\n    percentageRounded: {\n      style: 'percent',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    },\n  },\n});\n\nconst setupMoment = () => {\n  moment.locale('fr', {\n    months: 'Janvier_Février_Mars_Avril_Mai_Juin_Juillet_Août_Septembre_Octobre_Novembre_Décembre'.split('_'),\n    monthsShort: 'Janv._Févr._Mars_Avr._Mai_Juin_Juil._Août_Sept._Oct._Nov._Déc.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'Dimanche_Lundi_Mardi_Mercredi_Jeudi_Vendredi_Samedi'.split('_'),\n    weekdaysShort: 'Dim._Lun._Mar._Mer._Jeu._Ven._Sam.'.split('_'),\n    weekdaysMin: 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd D MMMM YYYY HH:mm',\n    },\n    calendar: {\n      sameDay: '[Aujourd’hui à] LT',\n      nextDay: '[Demain à] LT',\n      nextWeek: 'dddd [à] LT',\n      lastDay: '[Hier à] LT',\n      lastWeek: 'dddd [dernier à] LT',\n      sameElse: 'L',\n    },\n    relativeTime: {\n      future: 'dans %s',\n      past: 'il y a %s',\n      s: 'qq secs',\n      m: '1m',\n      mm: '%dm',\n      h: '1h',\n      hh: '%dh',\n      d: '1j',\n      dd: '%dj',\n      M: '1 mois',\n      MM: '%d mois',\n      y: '1 an',\n      yy: '%d ans',\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\n    ordinal(number) {\n      return number + (number === 1 ? 'er' : 'e');\n    },\n    meridiemParse: /PD|MD/,\n    isPM(input) {\n      return input.charAt(0) === 'M';\n    },\n    // In case the meridiem units are not separated around 12, then implement\n    // this function (look at locale/id.js for an example).\n    // meridiemHour : function (hour, meridiem) {\n    //     return /* 0-23 hour, given meridiem token and hour 1-12 */ ;\n    // },\n    meridiem(hours, minutes, isLower) {\n      return hours < 12 ? 'PD' : 'MD';\n    },\n    week: {\n      dow: 1, // Monday is the first day of the week.\n      doy: 4, // The week that contains Jan 4th is the first week of the year.\n    },\n  });\n};\n\nexport const localizationStartup = ({\n  setupAccounts = true,\n  messages,\n} = {}) => {\n  // Add locales used in app here\n  Intl.init(messages);\n  addLocaleData(fr);\n  setupMoment();\n  moment.locale('fr');\n  translateSimpleSchema();\n\n  if (setupAccounts) {\n    const { T9n } = require('meteor-accounts-t9n');\n    const { fr: accountsFr } = require('meteor-accounts-t9n/build/fr');\n    T9n.map('fr', accountsFr);\n    T9n.setLanguage('fr');\n  }\n};\n","import SimpleSchema from 'simpl-schema';\nimport Intl from '../intl';\n\nconst translate = ({ key }) => {\n  // Turns a key called \"expenses.0.value\" into \"expenses.value\"\n  const keyWithoutNumbers = key\n    .split('.')\n    .filter(subKey => subKey.length !== 1)\n    .join('.');\n  return Intl.formatMessage({ id: `Forms.${keyWithoutNumbers}` });\n};\n\nconst translateSimpleSchema = () => {\n  SimpleSchema.setDefaultMessages({\n    initialLanguage: 'fr',\n    messages: {\n      fr: {\n        // Can also use \"name\"\n        required: args => `${translate(args)} est requis`,\n        minString: args =>\n          `${translate(args)} doit faire au minimum ${args.min} caractères`,\n        maxString: args =>\n          `${translate(args)} peut faire au maximum ${args.max} caractères`,\n        minNumber: args => `${translate(args)} doit être au moins ${args.min}`,\n        maxNumber: args =>\n          `${translate(args)} ne peut pas dépasser ${args.max}`,\n        minNumberExclusive: args =>\n          `${translate(args)} doit être plus grand que ${args.min}`,\n        maxNumberExclusive: args =>\n          `${translate(args)} doit être plus petit que ${args.max}`,\n        minDate: args =>\n          `${translate(args)} doit être au plus tôt le ${args.min}`,\n        maxDate: args =>\n          `${translate(args)} doit être au plus tard le ${args.max}`,\n        badDate: args => `${translate(args)} n'est pas une date valide`,\n        minCount: ({ minCount }) =>\n          `Vous devez ajouter au moins ${minCount} valeurs`,\n        maxCount: ({ maxCount }) =>\n          `Vous devez choisir moins de ${maxCount} valeurs`,\n        noDecimal: args => `${translate(args)} doit être un nombre entier`,\n        notAllowed: ({ value }) => `${value} n'est pas valide`,\n        expectedType: args =>\n          `${translate(args)} doit être un ${args.dataType}`,\n        regEx({ label, regExp }) {\n          switch (regExp) {\n          case SimpleSchema.RegEx.Email:\n          case SimpleSchema.RegEx.WeakEmail:\n            return 'Cette adresse e-mail est incorrecte';\n          default:\n            return \"Le format n'est pas valide\";\n          }\n        },\n      },\n    },\n  });\n};\n\nexport default translateSimpleSchema;\n","// @flow\n\nconst inputHasChanged = (next, prev) =>\n  next.some((newInput, index) => newInput !== prev[index]);\n\nexport default function areInputsEqual(\n  newInputs: mixed[],\n  lastInputs: mixed[],\n) {\n  // no checks needed if the inputs length has changed\n  if (newInputs.length !== lastInputs.length) {\n    return false;\n  }\n\n  // Handle memoization for functions with 1 argument which is an object\n  if (\n    newInputs.length === 1\n    && typeof newInputs[0] === 'object'\n    && typeof lastInputs[0] === 'object'\n    && newInputs[0] !== null\n    && lastInputs[0] !== null\n  ) {\n    const newArgs = Object.values(newInputs[0]);\n    const lastArgs = Object.values(lastInputs[0]);\n\n    if (newArgs.length !== lastArgs.length) {\n      return false;\n    }\n\n    const oneInputHasChanged = inputHasChanged(newArgs, lastArgs);\n    return !oneInputHasChanged;\n  }\n\n  const oneInputHasChanged = inputHasChanged(newInputs, lastInputs);\n  return !oneInputHasChanged;\n}\n","export { default } from './memoizeOne';\nexport * from './memoizeOne';\n","// @flow\nimport areInputsEqual from './areInputsEqual';\n\nexport type EqualityFn = (newArgs: mixed[], lastArgs: mixed[]) => boolean;\n\n// <ResultFn: (...any[]) => mixed>\n// The purpose of this typing is to ensure that the returned memoized\n// function has the same type as the provided function (`resultFn`).\n// ResultFn:        Generic type (which is the same as the resultFn).\n// (...any[]): Accepts any length of arguments - and they are not checked\n// mixed:           The result can be anything but needs to be checked before usage\nconst memoizeOne = function<ResultFn: (\n...any[]) => mixed>(\n  resultFn: ResultFn,\n  isEqual?: EqualityFn = areInputsEqual,\n): ResultFn {\n  let lastThis: mixed;\n  let lastArgs: mixed[] = [];\n  let lastResult: mixed;\n  let calledOnce: boolean = false;\n\n  // breaking cache when context (this) or arguments change\n  const result = function (...newArgs: mixed[]) {\n    if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n      return lastResult;\n    }\n\n    // Throwing during an assignment aborts the assignment: https://codepen.io/alexreardon/pen/RYKoaz\n    // Doing the lastResult assignment first so that if it throws\n    // nothing will be overwritten\n    lastResult = resultFn.apply(this, newArgs);\n    calledOnce = true;\n    lastThis = this;\n    lastArgs = newArgs;\n    return lastResult;\n  };\n\n  return (result: any);\n};\n\nexport default memoizeOne;\n","import * as cantonConfigs from './cantonConfigs';\nimport Calculator from '../Calculator';\nimport { NOTARY_FEES } from '../../config/financeConstants';\nimport { PURCHASE_TYPE } from '../../api/constants';\n\nconst roundToCents = val => Number(val.toFixed(2));\n\nconst roundObjectKeys = obj =>\n  Object.keys(obj).reduce(\n    (newObj, key) => ({\n      ...newObj,\n      [key]: typeof obj[key] === 'number' ? roundToCents(obj[key]) : obj[key],\n    }),\n    {},\n  );\n\nclass NotaryFeesCalculator {\n  constructor({ canton }) {\n    this.init(canton);\n  }\n\n  init(canton) {\n    const config = cantonConfigs[canton];\n    this.canton = canton;\n\n    Object.assign(this, config);\n  }\n\n  hasDetailedConfig() {\n    return cantonConfigs[this.canton];\n  }\n\n  shouldUseConstructionMath({ loan, structureId }) {\n    const hasDetailedValue = Calculator.hasDetailedPropertyValue({\n      loan,\n      structureId,\n    });\n    const shouldUseConstructionNotaryFees = Calculator.shouldUseConstructionNotaryFees({ loan, structureId });\n\n    return hasDetailedValue && shouldUseConstructionNotaryFees;\n  }\n\n  getNotaryFeesForLoan({ loan, structureId }) {\n    const propertyValue = Calculator.selectPropertyValue({ loan, structureId });\n\n    if (!this.hasDetailedConfig()) {\n      return this.getDefaultFees({ propertyValue });\n    }\n\n    const { residenceType } = loan;\n\n    const mortgageNoteIncrease = Calculator.getMortgageNoteIncrease({\n      loan,\n      structureId,\n    });\n\n    // Acte d'achat\n    const buyersContractFees = this.buyersContractFees({ loan, structureId });\n\n    // Cédule hypothécaire\n    const mortgageNoteFees = this.mortgageNoteFees({ mortgageNoteIncrease });\n\n    // Déductions\n    const deductions = this.getDeductions({\n      propertyValue,\n      mortgageNoteFees,\n      residenceType,\n      mortgageNoteIncrease,\n      propertyTransferTax: buyersContractFees.propertyRegistrationTax,\n    });\n\n    const roundedResult = roundObjectKeys({\n      total:\n        buyersContractFees.total + mortgageNoteFees.total - deductions.total,\n      buyersContractFees: roundObjectKeys(buyersContractFees),\n      mortgageNoteFees: roundObjectKeys(mortgageNoteFees),\n      deductions: roundObjectKeys(deductions),\n      canton: this.canton,\n      estimate: false,\n    });\n\n    return roundedResult;\n  }\n\n  getNotaryFeesWithoutLoan({\n    propertyValue,\n    mortgageNoteIncrease,\n    residenceType,\n  }) {\n    if (!this.hasDetailedConfig()) {\n      return this.getDefaultFees({ propertyValue });\n    }\n\n    // Acte d'achat\n    const buyersContractFees = this.buyersContractFeesAcquisition({\n      propertyValue,\n    });\n\n    // Cédule hypothécaire\n    const mortgageNoteFees = this.mortgageNoteFees({ mortgageNoteIncrease });\n\n    // Déductions\n    const deductions = this.getDeductions({\n      propertyValue,\n      mortgageNoteIncrease,\n      residenceType,\n      propertyTransferTax: this.propertyRegistrationTax({ propertyValue }),\n    });\n\n    const roundedResult = roundObjectKeys({\n      total:\n        buyersContractFees.total + mortgageNoteFees.total - deductions.total,\n      buyersContractFees: roundObjectKeys(buyersContractFees),\n      mortgageNoteFees: roundObjectKeys(mortgageNoteFees),\n      deductions: roundObjectKeys(deductions),\n      canton: this.canton,\n      estimate: false,\n    });\n\n    return roundedResult;\n  }\n\n  buyersContractFees({ loan, structureId }) {\n    if (loan.purchaseType === PURCHASE_TYPE.REFINANCING) {\n      return { total: 0 };\n    }\n\n    if (this.shouldUseConstructionMath({ loan, structureId })) {\n      const {\n        landValue = 0,\n        constructionValue = 0,\n        additionalMargin = 0,\n      } = Calculator.selectProperty({ loan, structureId });\n      return this.buyersContractFeesConstruction({\n        landValue,\n        constructionValue,\n        additionalMargin,\n      });\n    }\n\n    const propertyValue = Calculator.selectPropertyValue({ loan, structureId });\n    return this.buyersContractFeesAcquisition({ propertyValue });\n  }\n\n  buyersContractFeesAcquisition({ propertyValue }) {\n    // Frais d'enregistrement/Droits de mutation\n    const propertyRegistrationTax = this.propertyRegistrationTax({\n      propertyValue,\n    });\n    // Emoluments du notaire\n    const notaryIncomeFromProperty = this.notaryIncomeFromProperty({\n      propertyValue,\n    });\n    // Registre foncier\n    const landRegistryPropertyTax = this.landRegistryPropertyTax({\n      propertyValue,\n    });\n    // Frais du notaire additionnels estimés\n    const additionalFees = this.additionalFees();\n\n    return {\n      total:\n        propertyRegistrationTax\n        + notaryIncomeFromProperty\n        + landRegistryPropertyTax\n        + additionalFees,\n      propertyRegistrationTax,\n      landRegistryPropertyTax,\n      notaryIncomeFromProperty,\n      additionalFees,\n    };\n  }\n\n  buyersContractFeesConstruction({\n    landValue,\n    constructionValue,\n    additionalMargin,\n  }) {\n    // Frais d'enregistrement/Droits de mutation\n    const propertyRegistrationTax = this.propertyRegistrationTax({\n      propertyValue: landValue + additionalMargin,\n    });\n\n    // Emoluments du notaire\n    const notaryIncomeFromProperty = this.notaryIncomeFromProperty({\n      propertyValue: landValue + additionalMargin,\n    });\n\n    // Registre foncier\n    const landRegistryPropertyTax = this.landRegistryPropertyTax({\n      propertyValue: landValue + additionalMargin,\n    });\n\n    // Contrat de construction\n    const propertyConstructionTax = this.propertyConstructionTax({\n      constructionValue,\n    });\n\n    // Frais du notaire additionnels estimés\n    const additionalFees = this.additionalFees();\n\n    return {\n      total:\n        propertyRegistrationTax\n        + notaryIncomeFromProperty\n        + landRegistryPropertyTax\n        + propertyConstructionTax\n        + additionalFees,\n      propertyRegistrationTax,\n      propertyConstructionTax,\n      landRegistryPropertyTax,\n      notaryIncomeFromProperty,\n      additionalFees,\n    };\n  }\n\n  mortgageNoteFees({ mortgageNoteIncrease }) {\n    // Frais d'enregistrement\n    const mortgageNoteRegistrationTax = this.mortgageNoteRegistrationTax({\n      mortgageNoteIncrease,\n    });\n    // Emoluments du notaire\n    const notaryIncomeFromMortgageNote = this.notaryIncomeFromMortgageNote({\n      mortgageNoteIncrease,\n    });\n    // Registre foncier\n    const landRegistryMortgageNoteTax = this.landRegistryMortgageNoteTax({\n      mortgageNoteIncrease,\n    });\n    // Frais du notaire additionnels estimés\n    // Nuls si aucune cédule nécessaire\n    const additionalFees = mortgageNoteIncrease > 0 ? this.additionalFees() : 0;\n\n    return {\n      total:\n        mortgageNoteRegistrationTax\n        + landRegistryMortgageNoteTax\n        + notaryIncomeFromMortgageNote\n        + additionalFees,\n      mortgageNoteRegistrationTax,\n      landRegistryMortgageNoteTax,\n      notaryIncomeFromMortgageNote,\n      additionalFees,\n    };\n  }\n\n  getDeductions({\n    propertyValue,\n    mortgageNoteIncrease,\n    residenceType,\n    propertyTransferTax,\n  }) {\n    const buyersContractDeductions = this.buyersContractDeductions\n      ? this.buyersContractDeductions({\n        residenceType,\n        propertyValue,\n        transferTax: propertyTransferTax,\n      })\n      : 0;\n\n    const mortgageNoteDeductions = this.mortgageNoteDeductions\n      ? this.mortgageNoteDeductions({\n        residenceType,\n        propertyValue,\n        mortgageNoteRegistrationTax: this.mortgageNoteRegistrationTax({\n          mortgageNoteIncrease,\n        }),\n      })\n      : 0;\n\n    return {\n      buyersContractDeductions,\n      mortgageNoteDeductions,\n      total: buyersContractDeductions + mortgageNoteDeductions,\n    };\n  }\n\n  getDefaultFees({ propertyValue }) {\n    return {\n      total: propertyValue * NOTARY_FEES,\n      canton: this.canton,\n      estimate: true,\n    };\n  }\n}\n\nexport default NotaryFeesCalculator;\n","import { RESIDENCE_TYPE } from 'core/api/constants';\nimport degressive from './degressive';\nimport * as cantons from './cantonConstants';\nimport { VAT } from '../../config/financeConstants';\n\nconst isCasatax = ({ residenceType, propertyValue }) =>\n  residenceType === RESIDENCE_TYPE.MAIN_RESIDENCE\n  && propertyValue <= cantons.GE.CASATAX_CUTOFF;\n\nexport const GE = {\n  notaryIncomeFromProperty: ({ propertyValue }) =>\n    degressive({\n      amount: propertyValue,\n      brackets: cantons.GE.NOTARY_PROPERTY_BRACKETS,\n      minTax: cantons.GE.NOTARY_PROPERTY_BRACKETS_MIN,\n    })\n    * (1 + VAT),\n  notaryIncomeFromMortgageNote: ({ mortgageNoteIncrease }) =>\n    degressive({\n      amount: mortgageNoteIncrease,\n      brackets: cantons.GE.NOTARY_NOTE_BRACKETS,\n    })\n    * (1 + VAT),\n  propertyConstructionTax: ({ constructionValue }) =>\n    constructionValue * cantons.GE.PROPERTY_CONSTRUCTION_TAX,\n  propertyRegistrationTax: ({ propertyValue }) =>\n    propertyValue * cantons.GE.PROPERTY_REGISTRATION_TAX,\n  landRegistryPropertyTax: ({ propertyValue }) =>\n    propertyValue * cantons.GE.LAND_REGISTRY_PROPERTY_TAX,\n  mortgageNoteRegistrationTax: ({ mortgageNoteIncrease }) =>\n    mortgageNoteIncrease * cantons.GE.MORTGAGE_NOTE_REGISTRATION_TAX,\n  landRegistryMortgageNoteTax: ({ mortgageNoteIncrease }) =>\n    mortgageNoteIncrease * cantons.GE.LAND_REGISTRY_MORTGAGE_NOTE_TAX,\n  buyersContractDeductions: ({ residenceType, propertyValue, transferTax }) =>\n    (isCasatax({ residenceType, propertyValue })\n      ? Math.min(cantons.GE.CASATAX_PROPERTY_DEDUCTION, transferTax)\n      : 0),\n  additionalFees: () => cantons.GE.ADDITIONAL_FEES,\n  mortgageNoteDeductions: ({\n    residenceType,\n    propertyValue,\n    mortgageNoteRegistrationTax,\n  }) =>\n    (isCasatax({ residenceType, propertyValue })\n      ? mortgageNoteRegistrationTax * cantons.GE.MORTGAGE_NOTE_CASATAX_DEDUCTION\n      : 0),\n};\n\nexport const VD = {\n  notaryIncomeFromProperty: ({ propertyValue }) =>\n    degressive({\n      amount: propertyValue,\n      brackets: cantons.VD.NOTARY_PROPERTY_BRACKETS,\n      minTax: cantons.VD.NOTARY_PROPERTY_BRACKETS_MIN,\n    })\n    * (1 + VAT),\n  propertyConstructionTax: () => 0, // TODO\n  notaryIncomeFromMortgageNote: ({ mortgageNoteIncrease }) =>\n    degressive({\n      amount: mortgageNoteIncrease,\n      brackets: cantons.VD.NOTARY_NOTE_BRACKETS,\n    })\n    * (1 + VAT),\n  propertyRegistrationTax: ({ propertyValue }) =>\n    propertyValue * cantons.VD.PROPERTY_REGISTRATION_TAX,\n  landRegistryPropertyTax: ({ propertyValue }) =>\n    propertyValue * cantons.VD.LAND_REGISTRY_PROPERTY_TAX,\n  mortgageNoteRegistrationTax: ({ mortgageNoteIncrease }) => 0,\n  landRegistryMortgageNoteTax: ({ mortgageNoteIncrease }) =>\n    mortgageNoteIncrease * cantons.VD.LAND_REGISTRY_MORTGAGE_NOTE_TAX,\n  additionalFees: () => cantons.VD.ADDITIONAL_FEES,\n};\n","// Rates and sources are documented in this google doc:\n// https://docs.google.com/document/d/1EF373nmAZ7dZB22NELh-ffaaOwYkFCuTeQ5JrST5wUg\n\nexport const GE = {\n  PROPERTY_REGISTRATION_TAX: 0.03,\n  NOTARY_PROPERTY_BRACKETS_MIN: 200,\n  NOTARY_PROPERTY_BRACKETS: [\n    { rate: 0.007, max: 200000 },\n    { rate: 0.006, max: 400000 },\n    { rate: 0.0045, max: 800000 },\n    { rate: 0.004, max: 1000000 },\n    { rate: 0.0035, max: 1500000 },\n    { rate: 0.003, max: 2000000 },\n    { rate: 0.0025, max: 3500000 },\n    { rate: 0.002, max: 5000000 },\n    { rate: 0.0015, max: 7500000 },\n    { rate: 0.001, max: 10000000 },\n    { rate: 0.00075, max: 20000000 },\n    { rate: 0.0005 },\n  ],\n  NOTARY_NOTE_BRACKETS_MIN: 100,\n  NOTARY_NOTE_BRACKETS: [\n    { rate: 0.005, max: 200000 },\n    { rate: 0.004, max: 500000 },\n    { rate: 0.003, max: 2000000 },\n    { rate: 0.002, max: 5000000 },\n    { rate: 0.001 },\n  ],\n  MORTGAGE_NOTE_REGISTRATION_TAX: 0.01365,\n  LAND_REGISTRY_PROPERTY_TAX: 0.0025,\n  LAND_REGISTRY_MORTGAGE_NOTE_TAX: 0.001,\n  ADDITIONAL_FEES: 1000,\n  CASATAX_CUTOFF: 1183649,\n  CASATAX_PROPERTY_DEDUCTION: 17755,\n  PROPERTY_CONSTRUCTION_TAX: 0.01,\n  MORTGAGE_NOTE_CASATAX_DEDUCTION: 0.5,\n};\n\nexport const VD = {\n  PROPERTY_REGISTRATION_TAX: 0.033,\n  NOTARY_PROPERTY_BRACKETS_MIN: 300,\n  NOTARY_PROPERTY_BRACKETS: [\n    { rate: 0.007, max: 100000 },\n    { rate: 0.004, max: 300000 },\n    { rate: 0.0025, max: 500000 },\n    { rate: 0.002, max: 750000 },\n    { rate: 0.0015, max: 2500000 },\n    { rate: 0.001, max: 10000000 },\n    { rate: 0.0005, max: 20000000 },\n    { rate: 0.00025 },\n  ],\n  NOTARY_NOTE_BRACKETS_MIN: 100,\n  NOTARY_NOTE_BRACKETS: [\n    { rate: 0.005, max: 100000 },\n    { rate: 0.0035, max: 300000 },\n    { rate: 0.003, max: 500000 },\n    { rate: 0.002, max: 750000 },\n    { rate: 0.0015, max: 1000000 },\n    { rate: 0.001, max: 5000000 },\n    { rate: 0.0005, max: 10000000 },\n    { rate: 0.00025, max: 20000000 },\n    { rate: 0.000125 },\n  ],\n  LAND_REGISTRY_PROPERTY_TAX: 0.0015,\n  LAND_REGISTRY_MORTGAGE_NOTE_TAX: 0.0035,\n  ADDITIONAL_FEES: 1000,\n};\n\n// TODO: Complete\nexport const VS = {\n  TRANSFER_TAX: 0.0225,\n  NOTARY_PROPERTY_BRACKETS_MIN: 200,\n  NOTARY_PROPERTY_BRACKETS: [\n    { rate: 0.005, max: 200000 },\n    { rate: 0.004, max: 500000 },\n    { rate: 0.003, max: 1000000 },\n    { rate: 0.002, max: 10000000 },\n    { rate: 0.001 },\n  ],\n  NOTARY_NOTE_BRACKETS_MIN: 200,\n  NOTARY_NOTE_BRACKETS: [\n    { rate: 0.005, max: 100000 },\n    { rate: 0.004, max: 200000 },\n    { rate: 0.003, max: 500000 },\n    { rate: 0.002, max: 1000000 },\n    { rate: 0.001 },\n  ],\n};\n\n// TODO: Complete\nexport const FR = {\n  TRANSFER_TAX: 0.03,\n};\n","// @flow\n\nconst INFINITY = 100000000000000;\n\ntype degressiveArgs = {\n  amount: number,\n  brackets: Array<{ rate: number, max: number }>,\n  maxTax?: number,\n  minTax?: number,\n};\n\n// Calculates the degressive tax on an amount, based on brackets with varying rates\nconst degressive = ({\n  amount,\n  brackets = [],\n  maxTax,\n  minTax,\n}: degressiveArgs): number => {\n  if (amount <= 0) {\n    return 0;\n  }\n\n  let tax = 0;\n\n  brackets.every(({ max = INFINITY, rate }, index, allBrackets) => {\n    let previousBracket = { rate: 0, max: 0 };\n    if (index > 0) {\n      previousBracket = allBrackets[index - 1];\n    }\n\n    if (max < previousBracket.max) {\n      throw new Error(`Tax brackets should come in increasing order, but found ${\n        previousBracket.max\n      } -> ${max}`);\n    }\n\n    const bracketTax = Math.min(amount - previousBracket.max, max - previousBracket.max) * rate;\n\n    tax += bracketTax;\n\n    // Stop calculating once you've reached the highest bracket you're in\n    return max <= amount;\n  });\n\n  if (maxTax) {\n    tax = Math.min(tax, maxTax);\n  }\n\n  if (minTax) {\n    tax = Math.max(tax, minTax);\n  }\n\n  return tax;\n};\n\nexport default degressive;\n","export { default as NotaryFeesCalculator } from './NotaryFeesCalculator';\n","import { parsePhoneNumberFromString } from 'libphonenumber-js/max';\n\nexport const formatPhoneNumber = (string) => {\n  const phoneNumber = parsePhoneNumberFromString(string, 'CH');\n\n  if (!phoneNumber) {\n    // Couldn't parse a phone number from the string\n    return string;\n  }\n\n  const intl = phoneNumber.formatInternational();\n\n  return intl;\n};\n\nconst modifyDoc = (doc, fieldName, currentValue, customFunc) => {\n  if (customFunc) {\n    doc[fieldName] = customFunc(currentValue);\n  } else if (Array.isArray(currentValue)) {\n    doc[fieldName] = currentValue.map(formatPhoneNumber);\n  } else {\n    doc[fieldName] = formatPhoneNumber(currentValue);\n  }\n};\n\nconst formatNumbersHook = (collection, fieldName, customFunc) => {\n  collection.before.update((userId, doc, fieldNames, modifier) => {\n    if (fieldNames.includes(fieldName)) {\n      const updatedValue = modifier.$set[fieldName];\n      modifyDoc(modifier.$set, fieldName, updatedValue, customFunc);\n    }\n  });\n\n  collection.before.insert((userId, doc) => {\n    const insertedValue = doc[fieldName];\n    if (insertedValue) {\n      modifyDoc(doc, fieldName, insertedValue, customFunc);\n    }\n  });\n};\n\nexport default formatNumbersHook;\n","import Fibers from 'fibers';\n\nexport const storeOnFiber = (key, value) => {\n  Fibers.current[key] = value;\n};\n\nexport const getFromFiber = key => Fibers.current && Fibers.current[key];\n\nexport const removeFromFiber = (key) => {\n  delete Fibers.current[key];\n};\n","import { Meteor } from 'meteor/meteor';\n\nimport { getFromFiber, storeOnFiber } from './fiberStorage';\n\nconst MICROSERVICE = '__MICROSERVICE_NAME';\nconst CLIENT_URL = '__CLIENT_URL';\nconst HOST = '__CLIENT_HOST';\n\nconst getMicroserviceFromHost = (host) => {\n  const { subdomains } = Meteor.settings.public;\n  // In case the subdomain is missing, assume it is e-potek.ch, i.e. www\n  let result = 'www';\n\n  Object.keys(subdomains).some((microservice) => {\n    const microserviceUrl = subdomains[microservice];\n\n    if (microserviceUrl.includes(host)) {\n      result = microservice;\n      return true;\n    }\n  });\n\n  return result;\n};\n\nexport const getClientHost = () => getFromFiber(HOST);\nexport const getClientMicroservice = () => getFromFiber(MICROSERVICE);\nexport const getClientUrl = () => getFromFiber(CLIENT_URL);\n\nexport const setClientUrl = ({ host, href }) => {\n  const currentHost = getClientHost();\n  const currentUrl = getClientUrl();\n  const currentMicroservice = getClientMicroservice();\n\n  if (!currentHost) {\n    storeOnFiber(HOST, host);\n  }\n\n  if (!currentUrl) {\n    storeOnFiber(CLIENT_URL, href);\n  }\n\n  if (!currentMicroservice) {\n    const microservice = getMicroserviceFromHost(host);\n    storeOnFiber(MICROSERVICE, microservice);\n  }\n};\n\nexport const setClientMicroservice = (microservice) => {\n  const currentMicroservice = getClientMicroservice();\n  if (!currentMicroservice) {\n    storeOnFiber(MICROSERVICE, microservice);\n  }\n};\n","import messagesFR from 'core/lang/fr.json';\nimport { Intl } from '../intl';\n\n/**\n * formatMessage - A method to use the intl package\n *\n * @param {type}   id          the id of the message\n * @param {object} [values={}] any additional values you want to use in the\n * string\n *\n * @return {type} The formatted string\n */\n\nconst ServerIntl = new Intl(messagesFR);\n\nexport default ServerIntl;\n","export const testErrors = {\n  missingKey: (key, parentKey) => `Missing key ${key} from object ${parentKey}`,\n  shouldBeArray: key => `Object key ${key} must be an array`,\n  shouldBeObject: key => `Object key ${key} must be an object`,\n  emptyArray: (key, parentKey) =>\n    `Array at object key ${key} in ${parentKey} should not be empty`,\n};\n\nexport const makeCheckObjectStructure = (errorMessages = testErrors) => {\n  const {\n    missingKey,\n    shouldBeArray,\n    shouldBeObject,\n    emptyArray,\n  } = errorMessages;\n  let errors = [];\n\n  const checkObjectStructure = ({ obj, template, parentKey }) => {\n    const checkTemplate = (subObj, subTemplate, subParentKey) =>\n      Object.keys(subTemplate).forEach((key) => {\n        if (subObj[key] === undefined) {\n          if (typeof subTemplate[key] === 'object' && subTemplate[key].$or) {\n            if (!subObj[subTemplate[key].$or]) {\n              errors.push(missingKey(key, subParentKey || ''));\n              return;\n            }\n          } else {\n            errors.push(missingKey(key, subParentKey || ''));\n            return;\n          }\n        }\n\n        if (Array.isArray(subTemplate[key])) {\n          if (!Array.isArray(subObj[key])) {\n            errors.push(shouldBeArray(key));\n          }\n          if (subTemplate[key].length > 0 && subObj[key].length === 0) {\n            errors.push(emptyArray(key, subParentKey));\n          }\n\n          if (\n            subTemplate[key].length > 0\n            && typeof subTemplate[key][0] === 'object'\n            && !Array.isArray(subTemplate[key][0])\n          ) {\n            subObj[key].forEach(object =>\n              checkTemplate(object, subTemplate[key][0]));\n          }\n        } else if (\n          typeof subTemplate[key] === 'object'\n          && !Object.keys(subTemplate[key]).includes('$or')\n        ) {\n          if (typeof subObj[key] !== 'object' || Array.isArray(subObj[key])) {\n            errors.push(shouldBeObject(key));\n          } else {\n            checkTemplate(subObj[key], subTemplate[key], key);\n          }\n        }\n      });\n\n    checkTemplate(obj, template, parentKey);\n\n    if (errors.length) {\n      const errorMessage = errors.join(', ');\n      errors = [];\n      throw errorMessage;\n    }\n\n    errors = [];\n  };\n  return checkObjectStructure;\n};\n","// Rounds the value, adds thousands markers every 3 digits\n// (and removes non-digit characters)\nexport function toMoney(value, { noPrefix, rounded = true } = {}) {\n  if (value === 0) {\n    return 0;\n  }\n  if (Number.isNaN(value)) {\n    // Exception for isNaN which should never appear\n    return 0;\n  }\n  if (!value) {\n    // Don't format the value if it is undefined or an empty string\n    return value;\n  }\n  const parsedValue = rounded\n    ? Math.round(Number(Math.round(value)))\n    : Number(value);\n  const negativePrefix = !noPrefix && value < 0 && parsedValue !== 0 ? '-' : '';\n\n  if (rounded) {\n    return (\n      negativePrefix\n      + String(parsedValue)\n        .replace(/\\D/g, '')\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ')\n    );\n  }\n\n  const roundedDecimals = Math.round(parsedValue * 100) / 100;\n\n  const [integer, decimals] = String(roundedDecimals).split('.');\n\n  const integerPart = negativePrefix\n    + integer.replace(/\\D/g, '').replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n  let decimalPart = decimals;\n\n  if (!decimals) {\n    return [integerPart, '00'].join('.');\n  }\n\n  if (decimals && decimals.length > 2) {\n    const rounding = 10 ** (decimals.length - 2);\n    decimalPart = Math.round(Number(decimals) / rounding) * rounding;\n  }\n\n  return [integerPart, String(decimalPart).slice(0, 2)].join('.');\n}\n\n// Replaces any nondigit character by an empty character,\n// to prevent the use of non-digits\n// Only do this if the value actually exists\nexport function toNumber(value) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return value ? Number(String(value).replace(/\\D/g, '')) : value;\n}\n\n// Like toNumber, but allows decimals\nexport function toDecimalNumber(value) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  // Remove unwanted characters, except digits, dots and commas\n  const newValue = value ? String(value).replace(/[^\\d.,]/g, '') : value;\n  // replace commas with dots\n  const commaReplaced = newValue\n    ? Number(newValue.replace(',', '.'))\n    : newValue;\n  return commaReplaced;\n}\n\nexport const toDistanceString = (dist) => {\n  if (dist <= 0) {\n    return '0 m';\n  }\n  if (dist < 1000) {\n    return `${Math.round(dist / 10) * 10} m`;\n  }\n  if (dist < 10000) {\n    return `${(Math.round(dist / 100) / 10).toFixed(1)} km`;\n  }\n\n  return `${Math.round(dist / 1000)} km`;\n};\n\nexport const roundValue = (value, digits) =>\n  Math.round(value / 10 ** digits) * 10 ** digits;\n\nexport const roundTo = (value, digits) => {\n  if (digits === 0) {\n    return value;\n  }\n\n  const roundedValue = roundValue(value, digits);\n\n  if (digits > 0) {\n    return roundedValue;\n  }\n\n  return parseFloat(roundedValue.toFixed(-digits));\n};\n","import fs from 'fs';\nimport path from 'path';\n\nimport { FILE_UPLOAD_DIR } from 'core/api/RESTAPI/server/restApiConstants';\n\nexport const readFileBuffer = filePath => fs.readFileSync(filePath);\nexport const removeFile = filePath => fs.unlinkSync(filePath);\n\nexport const makeDir = (dir) => {\n  if (!fs.existsSync(dir)) {\n    fs.mkdirSync(dir);\n  }\n};\n\nexport const flushDir = (dir) => {\n  fs.readdir(dir, (error, files) => {\n    if (error) {\n      throw error;\n    }\n\n    [...files].forEach((file) => {\n      removeFile(path.join(dir, file));\n    });\n  });\n};\n\nexport const makeFileUploadDir = () => makeDir(FILE_UPLOAD_DIR);\nexport const flushFileUploadDir = () => flushDir(FILE_UPLOAD_DIR);\n","// @flow\nimport get from 'lodash/get';\n\nimport { arrayify, simpleHash } from './general';\n\n// Returns the current value of an autoForm input\nconst getCurrentValue = (input, doc) => get(doc, input.id);\n\ntype formFieldType = {\n  condition?: boolean,\n  required?: boolean,\n  disabled?: boolean,\n  type: string,\n};\n\n// shouldCountField - A boolean to determine if a field in an array\n// should be counted or not\nexport const shouldCountField = (formField: formFieldType) =>\n  (formField.condition === undefined || formField.condition === true)\n  && formField.required !== false\n  && !formField.disabled\n  && formField.type !== 'h3';\n\nconst conditionalInputIsTriggered = (rootField, doc) =>\n  getCurrentValue(rootField.inputs[0], doc) === rootField.conditionalTrueValue;\n\n// getCountedArray - Returns an array of values that are mandatory and should\n// be counted to determine a completion percentage of a form\nexport const getCountedArray = (formArray, doc, shouldCountAllFields) => {\n  const arr = [];\n\n  formArray.forEach((i) => {\n    if (shouldCountAllFields || shouldCountField(i)) {\n      if (i.type === 'conditionalInput') {\n        if (conditionalInputIsTriggered(i, doc)) {\n          // If the conditional input is triggering the next input, add all values\n          i.inputs.forEach((input) => {\n            if (shouldCountField(input)) {\n              arr.push(getCurrentValue(input, doc));\n            }\n          });\n        } else {\n          // If conditional value is not triggering\n          arr.push(getCurrentValue(i.inputs[0], doc));\n        }\n      } else {\n        arr.push(getCurrentValue(i, doc));\n      }\n    }\n  });\n\n  return arr;\n};\n\nconst fieldIsValid = (field, doc) => {\n  const currentValue = getCurrentValue(field, doc);\n\n  if (Array.isArray(currentValue)) {\n    return currentValue.length > 0;\n  }\n\n  return currentValue !== undefined;\n};\n\n// Returns a list of fields that are missing from the doc, given a form array\n// Helps you know which fields still need to be filled\nexport const getMissingFieldIds = (formArray, doc) =>\n  formArray.reduce((missingFieldIds, field) => {\n    const { type, id, inputs } = field;\n    if (!shouldCountField(field)) {\n      return missingFieldIds;\n    }\n\n    if (type === 'conditionalInput') {\n      const [conditionalField, ...additionalFields] = inputs;\n      if (conditionalInputIsTriggered(field, doc)) {\n        return [\n          ...missingFieldIds,\n          ...additionalFields.reduce(\n            (missingConditionalFields, additionalField) => {\n              if (\n                fieldIsValid(additionalField, doc)\n                || !shouldCountField(additionalField)\n              ) {\n                return missingConditionalFields;\n              }\n\n              return [...missingConditionalFields, additionalField.id];\n            },\n            [],\n          ),\n        ];\n      }\n\n      if (!fieldIsValid(conditionalField, doc)) {\n        return [...missingFieldIds, conditionalField.id];\n      }\n\n      return missingFieldIds;\n    }\n\n    if (!fieldIsValid(field, doc)) {\n      return [...missingFieldIds, id];\n    }\n\n    return missingFieldIds;\n  }, []);\n\n/**\n * Returns the hash of a form's values\n *\n * @param {Array} formArray\n * @param {Object} doc\n * @returns {Number} 32-bit integer hash\n */\nexport const getFormValuesHash = (formArray, doc) => {\n  const values = getCountedArray(formArray, doc, true);\n\n  return simpleHash(values);\n};\n\n// Sums multiple hashes together from multiple forms\nexport const getFormValuesHashMultiple = combos =>\n  combos.reduce(\n    (tot, { formArray, doc }) => tot + getFormValuesHash(formArray, doc),\n    0,\n  );\n","import React from 'react';\n\nimport T from '../components/Translation';\nimport { toNumber } from './conversionFunctions';\n\nconst onlyNums = value => value.replace(/[^\\d]/g, '');\nconst onlyNumsAndPlus = value => value.replace(/[^\\d&+]/g, '');\n\nexport const numberFormatters = {\n  parse: value => value && toNumber(value),\n  // format: value => value,\n};\n\nexport const phoneFormatters = {\n  parse: value => value && onlyNumsAndPlus(value),\n  format: value => (value ? onlyNumsAndPlus(value) : ''),\n};\n\nexport const percentFormatters = {\n  parse: value =>\n    (value === '' ? '' : Math.round(parseFloat(value) * 100) / 10000),\n  format: value => (value === '' ? '' : (value * 100).toFixed(2)),\n};\n\nexport const moneyFormatters = {\n  parse: value => toNumber(value),\n};\n\nconst setRequired = initialValue =>\n  (initialValue === undefined ? true : initialValue);\n\nexport const makeFormArray = (array, intlPrefix) =>\n  array.map(field => ({\n    ...field,\n    required: setRequired(field.required),\n    label: field.label || <T id={`${intlPrefix}.${field.id}`} />,\n  }));\n","// @flow\nimport isArray from 'lodash/isArray';\n\nexport const arrayify = (value) => {\n  if (value) {\n    if (isArray(value)) {\n      return value;\n    }\n    return [value];\n  }\n\n  return [];\n};\n\n/**\n * getPercent - Given an array of values, any value that is undefined or null\n * will be counted as incomplete, make sure we don't divide by 0\n *\n * @param {array} array Array of numbers, strings, or dates\n *\n * @return {number} a value between 0 and 1\n */\nexport const getPercent = (array) => {\n  if (!array) {\n    return 0;\n  }\n  if (array.length === 0) {\n    // If array is empty, return 100%\n    return 1;\n  }\n\n  const percent = array.reduce((tot, val) => {\n    if (isArray(val)) {\n      // Empty arrays need to be filled\n      return tot + (val.length ? 1 : 0);\n    }\n    if (val !== undefined && val !== null) {\n      return tot + 1;\n    }\n    return tot;\n  }, 0) / array.length;\n  return Number.isFinite(percent) ? percent : 0;\n};\n\n// Given multiple objects of the form { percent, count },\n// Merge them together with a single count and percent\nexport const getAggregatePercent = (percentageObjects) => {\n  const {\n    percent: aggregatePercent,\n    count: aggregateCount,\n  } = percentageObjects.reduce(\n    (obj, { percent, count }) => ({\n      percent: obj.percent + percent * count,\n      count: obj.count + count,\n    }),\n    { percent: 0, count: 0 },\n  );\n\n  return {\n    count: aggregateCount,\n    percent: aggregateCount === 0 ? 0 : aggregatePercent / aggregateCount,\n  };\n};\n\nexport const normalize = array =>\n  array.reduce((obj, item) => ({ ...obj, [item.id || item._id]: item }), {});\n\nexport const simpleHash = (data) => {\n  let string = data;\n  if (typeof data !== 'string') {\n    string = JSON.stringify(data);\n  }\n\n  let hash = 0;\n  if (string.length === 0) {\n    return hash;\n  }\n  for (let i = 0; i < string.length; i++) {\n    const char = string.charCodeAt(i);\n    hash = (hash << 5) - hash + char;\n    hash &= hash; // Convert to 32bit integer\n  }\n  return hash;\n};\n","import IntlMessageFormat from 'intl-messageformat';\nimport ReactDOMServer from 'react-dom/server';\n\nimport {\n  getUserLocale,\n  //   getFormats,\n} from 'core/utils/localization/localization';\nimport defaultIntlValues from 'core/components/Translation/defaultIntlValues';\n\nconst defaultValues = Object.keys(defaultIntlValues).reduce((obj, key) => {\n  const value = defaultIntlValues[key];\n\n  return { ...obj, [key]: ReactDOMServer.renderToString(value) };\n}, {});\n\nexport class Intl {\n  constructor(messages) {\n    this.init(messages);\n  }\n\n  init(messages) {\n    this.messages = messages;\n  }\n\n  formatMessage({ id, values = {}, fallback } = {}, legacyValues = {}) {\n    const allValues = { ...values, ...legacyValues };\n    if (id === undefined) {\n      throw new Error('an id is required in formatMessage');\n    }\n\n    const message = new IntlMessageFormat(\n      this.messages[id] || (fallback !== undefined ? fallback : id),\n      getUserLocale(),\n      // getFormats(),\n    );\n    return message.format({ ...defaultValues, ...allValues });\n  }\n}\n\nexport default new Intl();\n","import { Meteor } from 'meteor/meteor';\n\nimport React from 'react';\nimport Loadable from 'react-loadable';\n\nimport { logError } from '../api/methods/index';\nimport LayoutError from '../components/ErrorBoundary/LayoutError';\nimport Loading from '../components/Loading';\n\nconst ENABLE_LOADABLE = true;\n\nif (!ENABLE_LOADABLE && Meteor.isProduction) {\n  throw new Error('ENABLE_LOADABLE should be true in production');\n}\n\nconst LoadableLoading = ({ error, retry, pastDelay }) => {\n  if (error) {\n    logError.run({\n      error: JSON.parse(\n        JSON.stringify(error, Object.getOwnPropertyNames(error)),\n      ),\n      additionalData: ['Loadable error'],\n      url:\n        window && window.location && window.location.href\n          ? window.location.href\n          : '',\n    });\n    return <LayoutError error={error} />;\n  }\n  if (pastDelay) {\n    return <Loading />;\n  }\n  return null;\n};\n\nexport default ({ req, loader, ...options }) => {\n  if (!ENABLE_LOADABLE && req) {\n    return req();\n  }\n\n  return Loadable({\n    loading: LoadableLoading,\n    delay: 200, // Hides the loading component for 200ms, to avoid flickering\n    loader,\n    ...options,\n  });\n};\n","import { Meteor } from 'meteor/meteor';\nimport { STEPS, TASK_STATUS } from '../api/constants';\nimport Calculator from './Calculator';\n\nexport const formatLoanWithStructure = ({\n  selectedStructure,\n  structures = [],\n  properties,\n  offers,\n  promotionOptions,\n  borrowers = [],\n}) => {\n  if (structures.length === 0) {\n    return undefined;\n  }\n\n  let structure = {};\n\n  if (selectedStructure) {\n    const foundStructure = structures.find(({ id }) => id === selectedStructure);\n\n    if (foundStructure) {\n      structure = foundStructure;\n\n      if (structure.propertyId) {\n        const property = properties.find(({ _id }) => _id === structure.propertyId);\n        structure = { ...structure, property };\n      }\n\n      if (structure.promotionOptionId) {\n        const promotionOption = promotionOptions.find(({ _id }) => _id === structure.promotionOptionId);\n        structure = {\n          ...structure,\n          property: Calculator.formatPromotionOptionIntoProperty(promotionOption),\n        };\n      }\n\n      if (structure.offerId) {\n        const offer = offers.find(({ _id }) => _id === structure.offerId);\n        structure = { ...structure, offer };\n      }\n\n      if (structure.mortgageNoteIds) {\n        const borrowerMortgageNotes = borrowers.reduce(\n          (arr, { mortgageNotes: notes = [] }) => [...arr, ...notes],\n          [],\n        );\n        const mortgageNotes = structure.mortgageNoteIds.map(id =>\n          borrowerMortgageNotes.find(({ _id }) => _id === id));\n\n        structure = { ...structure, mortgageNotes };\n      }\n    } else {\n      structure = {};\n    }\n\n    return structure;\n  }\n\n  return structure;\n};\n\nexport const formatLoanWithDocuments = (loan) => {\n  if (!loan || !loan.structure) {\n    return loan;\n  }\n\n  const { structure, properties = [] } = loan;\n  const { property, propertyId } = structure;\n  const structureProperty = properties.find(({ _id }) => _id === propertyId);\n  const propertyDocuments = structureProperty && structureProperty.documents;\n\n  return {\n    ...loan,\n    structure: {\n      ...structure,\n      property: property && {\n        ...property,\n        documents: propertyDocuments,\n      },\n    },\n  };\n};\n\nexport const formatLoanWithPromotion = (loan) => {\n  if (loan.structure.promotionOptionId) {\n    const property = Calculator.selectProperty({\n      loan,\n      // Do this to make sure we're getting the promotionOption and not the\n      // fake property created from it\n      structureId: loan.structure.id,\n    });\n    return { ...loan, structure: { ...loan.structure, property } };\n  }\n\n  return loan;\n};\n\nexport const shouldSendStepNotification = (prevStep, nextStep) =>\n  (prevStep === STEPS.SOLVENCY || prevStep === STEPS.REQUEST)\n  && nextStep === STEPS.OFFERS;\n\nexport const nextDueTaskReducer = ({ tasksCache: tasks = [] }) => {\n  const activeTasks = tasks.filter(({\n    status: taskStatus,\n    isPrivate = false,\n    assigneeLink: { _id: assigneeId } = {},\n  }) => {\n    if (taskStatus !== TASK_STATUS.ACTIVE) {\n      return false;\n    }\n\n    if (isPrivate && assigneeId) {\n      return assigneeId === Meteor.userId();\n    }\n\n    return true;\n  });\n  const tasksWithoutDate = activeTasks\n    .filter(({ dueAt }) => !dueAt)\n    .sort(({ createdAt: A }, { createdAt: B }) => A - B);\n\n  if (tasksWithoutDate.length > 0) {\n    const task = tasksWithoutDate[0];\n    return { ...task, dueAt: task.createdAt, noDueDate: true };\n  }\n\n  const sortedTasks = activeTasks.sort(({ dueAt: A }, { dueAt: B }) => A - B);\n\n  if (sortedTasks.length > 0) {\n    return sortedTasks[0];\n  }\n};\n","import ogs from 'open-graph-scraper';\nimport SlackService from 'core/api/slack/server/SlackService';\n\nexport const getOpenGraphMeta = (url) => {\n  const options = { url, timeout: 4000 };\n  return ogs(options)\n    .then(results => results.data)\n    .catch((error) => {\n      SlackService.sendError({\n        error,\n        additionalData: ['getOpenGraphMeta error', url, options],\n      });\n    });\n};\n","import createNumberMask from 'text-mask-addons/dist/createNumberMask';\n\nexport const swissFrancMask = createNumberMask({\n  prefix: '',\n  suffix: '',\n  includeThousandsSeparator: true,\n  thousandsSeparatorSymbol: ' ',\n});\n\nexport const swissFrancMaskDecimal = createNumberMask({\n  prefix: '',\n  suffix: '',\n  includeThousandsSeparator: true,\n  thousandsSeparatorSymbol: ' ',\n  allowDecimal: true,\n  requireDecimal: true,\n});\n\nexport const percentMask = createNumberMask({\n  prefix: '',\n  suffix: '%',\n  allowDecimal: true,\n  decimalSymbol: '.',\n  allowLeadingZeroes: true,\n  allowNegative: true,\n});\n\nexport const decimalMask = createNumberMask({\n  prefix: '',\n  allowDecimal: true,\n  decimalLimit: 3,\n  decimalSymbol: '.',\n  requireDecimal: false,\n  allowLeadingZeroes: true,\n});\n","import intersection from 'lodash/intersection';\nimport flatten from 'lodash/flatten';\n\nimport { ROLES } from '../api/users/userConstants';\n\nexport const isUser = (user) => {\n  if (!user) {\n    return false;\n  }\n\n  const { ADMIN, DEV } = ROLES;\n  const { roles } = user;\n  // make sure `userRoles` is always an array - in case `roles` is a string\n  const userRoles = flatten([roles]);\n\n  const userHasRoles = userRoles && userRoles.length > 0;\n  return userHasRoles && intersection(userRoles, [ADMIN, DEV]).length === 0;\n};\n\nexport const getUserDisplayName = ({ firstName, lastName, emails }) =>\n  [firstName, lastName].filter(name => name).join(' ')\n  || (emails && emails[0] && emails[0].address)\n  || '';\n","import { CANTONS } from '../api/constants';\n\n// Each zipcode has a corresponding number, which is the index of all\n// cantons in an array, sorted by short form ('GE', 'ZH')\nexport const zipcodes = {\n  1000: 22,\n  1200: 7, // Edited to allow 1200 to be used as a zipcode in geneva\n  1260: 22,\n  1281: 7,\n  1291: 22,\n  1292: 7,\n  1295: 22,\n  1298: 7,\n  1299: 22,\n  1468: 6,\n  1509: 22,\n  1527: 6,\n  1530: 22,\n  1532: 6,\n  1534: 22,\n  1541: 6,\n  1543: 22,\n  1544: 6,\n  1545: 22,\n  1553: 6,\n  1554: 22,\n  1563: 6,\n  1580: 22,\n  1583: 6,\n  1584: 22,\n  1609: 6,\n  1610: 22,\n  1611: 6,\n  1612: 22,\n  1614: 6,\n  1657: 5,\n  1658: 22,\n  1661: 6,\n  1682: 22,\n  1684: 6,\n  1738: 5,\n  1740: 6,\n  1797: 5,\n  1800: 22,\n  1868: 23,\n  1880: 22,\n  1890: 23,\n  1892: 22,\n  1893: 23,\n  2000: 12,\n  2333: 5,\n  2336: 10,\n  2400: 12,\n  2502: 5,\n  2523: 12,\n  2532: 5,\n  2540: 18,\n  2542: 5,\n  2544: 18,\n  2552: 5,\n  2714: 10,\n  2715: 5,\n  2718: 10,\n  2720: 5,\n  2800: 10,\n  2814: 3,\n  2822: 10,\n  2827: 5,\n  2828: 10,\n  3004: 5,\n  3175: 6,\n  3176: 5,\n  3178: 6,\n  3179: 5,\n  3182: 6,\n  3183: 5,\n  3184: 6,\n  3202: 5,\n  3206: 6,\n  3207: 5,\n  3210: 6,\n  3225: 5,\n  3253: 18,\n  3255: 5,\n  3280: 6,\n  3282: 5,\n  3284: 6,\n  3292: 5,\n  3307: 18,\n  3308: 5,\n  3801: 23,\n  3803: 5,\n  3900: 23,\n  4001: 4,\n  4101: 3,\n  4108: 18,\n  4117: 3,\n  4118: 18,\n  4123: 3,\n  4125: 4,\n  4127: 3,\n  4143: 18,\n  4144: 3,\n  4145: 18,\n  4147: 3,\n  4204: 18,\n  4207: 3,\n  4208: 18,\n  4222: 3,\n  4226: 18,\n  4242: 3,\n  4245: 18,\n  4246: 3,\n  4247: 18,\n  4253: 3,\n  4303: 0,\n  4304: 3,\n  4305: 0,\n  4402: 3,\n  4412: 18,\n  4414: 3,\n  4421: 18,\n  4422: 3,\n  4468: 18,\n  4469: 3,\n  4500: 18,\n  4536: 5,\n  4542: 18,\n  4564: 5,\n  4565: 18,\n  4663: 0,\n  4702: 18,\n  4704: 5,\n  4710: 18,\n  4800: 0,\n  4806: 11,\n  4812: 0,\n  4900: 5,\n  4915: 11,\n  4916: 5,\n  5000: 0,\n  5012: 18,\n  5017: 0,\n  5735: 11,\n  5736: 0,\n  5746: 18,\n  6003: 11,\n  6042: 0,\n  6043: 11,\n  6052: 13,\n  6053: 14,\n  6083: 5,\n  6102: 11,\n  6197: 5,\n  6203: 11,\n  6300: 24,\n  6344: 11,\n  6345: 24,\n  6353: 11,\n  6362: 13,\n  6377: 21,\n  6382: 13,\n  6388: 14,\n  6402: 17,\n  6404: 11,\n  6405: 17,\n  6441: 21,\n  6442: 17,\n  6452: 21,\n  6500: 20,\n  6534: 9,\n  6571: 20,\n  7000: 9,\n  7310: 15,\n  7402: 9,\n  8001: 25,\n  8109: 0,\n  8112: 25,\n  8200: 16,\n  8212: 25,\n  8213: 16,\n  8245: 25,\n  8252: 19,\n  8260: 16,\n  8264: 19,\n  8302: 25,\n  8355: 19,\n  8400: 25,\n  8454: 16,\n  8457: 25,\n  8500: 19,\n  8523: 25,\n  8524: 19,\n  8542: 25,\n  8547: 19,\n  8548: 25,\n  8552: 19,\n  8600: 25,\n  8638: 15,\n  8700: 25,\n  8715: 15,\n  8750: 8,\n  8751: 21,\n  8752: 8,\n  8800: 25,\n  8806: 17,\n  8810: 25,\n  8832: 17,\n  8833: 25,\n  8834: 17,\n  8865: 8,\n  8872: 15,\n  8874: 8,\n  8877: 15,\n  8902: 25,\n  8905: 0,\n  8906: 25,\n  8916: 0,\n  8925: 25,\n  8956: 0,\n  9000: 15,\n  9035: 1,\n  9036: 15,\n  9037: 1,\n  9050: 2,\n  9052: 1,\n  9054: 2,\n  9055: 1,\n  9057: 2,\n  9062: 1,\n  9108: 2,\n  9112: 1,\n  9113: 15,\n  9213: 19,\n  9230: 15,\n  9306: 19,\n  9308: 15,\n  9314: 19,\n  9323: 15,\n  9325: 19,\n  9327: 15,\n  9405: 1,\n  9413: 2,\n  9414: 1,\n  9422: 15,\n  9426: 1,\n  9430: 15,\n  9442: 2,\n  9443: 15,\n  9485: 26,\n  9500: 15,\n  9502: 19,\n  9512: 15,\n  9514: 19,\n  9523: 15,\n  9532: 19,\n  9533: 15,\n  9535: 19,\n  9536: 15,\n  9542: 19,\n  9552: 15,\n  9553: 19,\n  9601: 15,\n  9999: 5,\n};\n\nexport default (zipcode) => {\n  let result;\n\n  if (zipcode > 9999 || zipcode < 1000) {\n    return null;\n  }\n\n  Object.keys(zipcodes).some((code) => {\n    if (zipcode >= code) {\n      result = code;\n      return false;\n    }\n    return true;\n  });\n\n  const cantonIndex = zipcodes[result];\n\n  const canton = Object.keys(CANTONS)[cantonIndex];\n  return canton;\n};\n\n/**\n * Returns the first zipcode that matches the given canton\n *\n * @param {String} canton\n * @returns Number\n */\nexport const getZipcodeForCanton = (canton) => {\n  const cantonIndex = Object.keys(CANTONS).findIndex(c => c === canton);\n\n  return Object.keys(zipcodes).find((zipcode) => {\n    const cantonIndexForZipcode = zipcodes[zipcode];\n    return cantonIndexForZipcode === cantonIndex;\n  });\n};\n","import * as constants from 'core/api/constants';\nimport React from 'react';\n\nimport CantonField from 'core/components/CantonField/CantonField';\nimport BorrowerAddPartner from '../components/BorrowerAddPartner';\n\nconst shouldDisplayAddPartner = ({ b: { civilStatus }, multiple, isFirst }) =>\n  civilStatus === constants.CIVIL_STATUS.MARRIED && !multiple && isFirst;\n\nconst makeArrayOfObjectsInput = id => ({\n  id,\n  type: 'arrayInput',\n  required: false,\n  inputs: [\n    { id: 'description', type: 'textInput' },\n    { id: 'value', type: 'textInput', money: true },\n  ],\n});\n\nexport const getBorrowerInfoArray = ({ borrowers, borrowerId, loanId }) => {\n  const b = borrowers.find(({ _id }) => _id === borrowerId);\n  const multiple = borrowers.length > 1;\n  // If this is the first borrower in the array of borrowers, don't ask for same address\n  const isFirst = borrowers[0]._id === borrowerId;\n\n  if (!b) {\n    throw new Error(\"couldn't find borrower\");\n  }\n\n  const disableAddress = !!b.sameAddress && !isFirst;\n  const addressFieldsAreNecessary = !b.sameAddress;\n\n  return [\n    { id: 'firstName', type: 'textInput' },\n    { id: 'lastName', type: 'textInput' },\n    {\n      id: 'gender',\n      type: 'radioInput',\n      options: Object.values(constants.GENDER),\n    },\n    {\n      id: 'sameAddress',\n      type: 'radioInput',\n      intlValues: { name: borrowers[0].firstName || 'Emprunteur 1' },\n      options: [true, false],\n      condition: multiple && !isFirst,\n    },\n    // {\n    //   id: 'isForeignAddress',\n    //   type: 'radioInput',\n    //   options: [true, false],\n    //   condition: !disableAddress,\n    //   required: addressFieldsAreNecessary,\n    // },\n    {\n      id: 'address1',\n      type: 'textInput',\n      condition: !disableAddress,\n      placeholder: disableAddress && borrowers[0].address1,\n      noIntl: disableAddress,\n      required: addressFieldsAreNecessary,\n    },\n    {\n      id: 'address2',\n      type: 'textInput',\n      condition: !disableAddress,\n      required: false,\n      placeholder: disableAddress && borrowers[0].address2,\n      noIntl: disableAddress,\n    },\n    {\n      id: 'city',\n      type: 'textInput',\n      condition: !disableAddress,\n      placeholder: disableAddress && borrowers[0].address1,\n      noIntl: disableAddress,\n      required: addressFieldsAreNecessary,\n    },\n    {\n      id: 'zipCode',\n      type: 'textInput',\n      condition: !disableAddress,\n      placeholder: disableAddress && borrowers[0].address1,\n      noIntl: disableAddress,\n      required: addressFieldsAreNecessary,\n    },\n    {\n      type: 'custom',\n      id: 'canton',\n      component: <CantonField canton={b.canton} />,\n      condition: !disableAddress,\n      required: addressFieldsAreNecessary,\n    },\n    {\n      type: 'conditionalInput',\n      conditionalTrueValue: false,\n      inputs: [\n        { id: 'isSwiss', type: 'radioInput', options: [true, false] },\n        {\n          id: 'residencyPermit',\n          type: 'selectFieldInput',\n          options: Object.values(constants.RESIDENCY_PERMIT),\n        },\n      ],\n    },\n    // {\n    //   id: 'age',\n    //   type: 'textInput',\n    //   number: true,\n    //   saveOnChange: false,\n    // },\n    {\n      id: 'birthDate',\n      type: 'dateInput',\n    },\n    { id: 'citizenship', type: 'textInput', condition: !b.isSwiss },\n    { id: 'isUSPerson', type: 'radioInput', options: [true, false] },\n    {\n      id: 'civilStatus',\n      type: 'radioInput',\n      options: Object.values(constants.CIVIL_STATUS).map(value => ({\n        id: value,\n      })),\n    },\n    {\n      id: 'addPartner',\n      type: 'custom',\n      component: <BorrowerAddPartner loanId={loanId} />,\n      condition: shouldDisplayAddPartner({ b, multiple, isFirst }),\n      required: false,\n    },\n    { id: 'childrenCount', type: 'textInput', number: true },\n    {\n      id: 'company',\n      type: 'textInput',\n      required: false,\n      autoComplete: 'organisation',\n    },\n  ];\n};\n\nexport const getBorrowerFinanceArray = ({ borrowers, borrowerId }) => {\n  const b = borrowers.find(({ _id }) => _id === borrowerId);\n\n  if (!b) {\n    throw new Error(\"couldn't find borrower\");\n  }\n\n  const incomeArray = [\n    {\n      type: 'h3',\n      id: 'incomeAndExpenses',\n      ignore: true,\n      required: false,\n      className: 'v-align-incomeAndExpenses',\n    },\n    { id: 'salary', type: 'textInput', money: true },\n    { id: 'netSalary', type: 'textInput', money: true },\n    {\n      type: 'conditionalInput',\n      conditionalTrueValue: true,\n      inputs: [\n        {\n          id: 'bonusExists',\n          type: 'radioInput',\n          options: [true, false],\n        },\n        ...[2019, 2018, 2017, 2016, 2015].map(year => ({\n          id: `bonus${year}`,\n          type: 'textInput',\n          money: true,\n          condition: year === 2015 ? !!b.bonus2015 : true,\n        })),\n      ],\n    },\n    {\n      id: 'otherIncome',\n      type: 'arrayInput',\n      required: false,\n      inputs: [\n        {\n          id: 'description',\n          type: 'selectInput',\n          options: Object.values(constants.OTHER_INCOME),\n        },\n        { id: 'value', type: 'textInput', money: true },\n      ],\n    },\n    {\n      id: 'expenses',\n      type: 'arrayInput',\n      required: false,\n      inputs: [\n        {\n          id: 'description',\n          type: 'selectInput',\n          options: Object.values(constants.EXPENSES),\n        },\n        { id: 'value', type: 'textInput', money: true },\n      ],\n    },\n    {\n      type: 'conditionalInput',\n      conditionalTrueValue: true,\n      inputs: [\n        {\n          id: 'hasOwnCompany',\n          type: 'radioInput',\n          options: [true, false],\n        },\n        {\n          id: 'ownCompanies',\n          type: 'arrayInput',\n          inputs: [\n            { id: 'description', type: 'textInput' },\n            { id: 'ownership', type: 'textInput', percent: true },\n            { id: 'netIncome2018', type: 'textInput', money: true },\n            { id: 'netIncome2017', type: 'textInput', money: true },\n            { id: 'netIncome2016', type: 'textInput', money: true },\n          ],\n        },\n      ],\n    },\n  ];\n\n  const fortuneArray = [\n    {\n      type: 'h3',\n      id: 'fortune',\n      ignore: true,\n      required: false,\n      className: 'v-align-fortune',\n    },\n    { id: 'bankFortune', type: 'textInput', money: true },\n    {\n      id: 'thirdPartyFortune',\n      type: 'textInput',\n      money: true,\n      required: false,\n    },\n    {\n      id: 'realEstate',\n      type: 'arrayInput',\n      required: false,\n      inputs: [\n        { id: 'name', type: 'textInput' },\n        {\n          id: 'description',\n          type: 'selectInput',\n          options: Object.values(constants.RESIDENCE_TYPE),\n        },\n        { id: 'value', type: 'textInput', money: true },\n        { id: 'loan', type: 'textInput', money: true },\n        { id: 'income', type: 'textInput', money: true, required: false },\n      ],\n    },\n    makeArrayOfObjectsInput('otherFortune'),\n  ];\n\n  const insuranceArray = [\n    {\n      type: 'h3',\n      id: 'insurance',\n      required: false,\n      ignore: true,\n      className: 'v-align-insurance',\n    },\n    makeArrayOfObjectsInput('insurance2'),\n    makeArrayOfObjectsInput('bank3A'),\n    makeArrayOfObjectsInput('insurance3A'),\n    makeArrayOfObjectsInput('insurance3B'),\n  ];\n\n  return incomeArray.concat([...fortuneArray, ...insuranceArray]);\n};\n\nexport const getSimpleBorrowerFinanceArray = ({ borrowers, borrowerId }) => {\n  const b = borrowers.find(({ _id }) => _id === borrowerId);\n\n  if (!b) {\n    throw new Error(\"couldn't find borrower\");\n  }\n\n  const incomeArray = [\n    {\n      type: 'h3',\n      id: 'financeInformations',\n      ignore: true,\n      required: false,\n      className: 'v-align-financeInformations',\n    },\n    { id: 'salary', type: 'textInput', money: true },\n    { id: 'netSalary', type: 'textInput', money: true },\n    {\n      type: 'conditionalInput',\n      conditionalTrueValue: true,\n      inputs: [\n        {\n          id: 'bonusExists',\n          type: 'radioInput',\n          options: [true, false],\n        },\n        ...[2019, 2018, 2017, 2016, 2015].map(year => ({\n          id: `bonus${year}`,\n          type: 'textInput',\n          money: true,\n          condition: year === 2015 ? !!b.bonus2015 : true,\n        })),\n      ],\n    },\n  ];\n\n  const fortuneArray = [{ id: 'bankFortune', type: 'textInput', money: true }];\n\n  const insuranceArray = [\n    { id: 'insurance2Simple', type: 'textInput', money: true, required: false },\n    { id: 'bank3ASimple', type: 'textInput', money: true, required: false },\n    {\n      id: 'insurance3ASimple',\n      type: 'textInput',\n      money: true,\n      required: false,\n    },\n    {\n      id: 'insurance3BSimple',\n      type: 'textInput',\n      money: true,\n      required: false,\n    },\n  ];\n\n  return incomeArray.concat([...fortuneArray, ...insuranceArray]);\n};\n\nexport const getBorrowerSimpleArray = ({\n  borrowers,\n  borrowerId,\n  loan = {},\n}) => {\n  const b = borrowers.find(borrower => borrower._id === borrowerId);\n  const { simpleBorrowersForm: simple = true } = loan;\n\n  if (!b) {\n    throw new Error(\"couldn't find borrower\");\n  }\n\n  return [\n    { id: 'firstName', type: 'textInput', condition: !loan.anonymous },\n    { id: 'lastName', type: 'textInput', condition: !loan.anonymous },\n    { id: 'birthDate', type: 'dateInput', condition: !loan.anonymous },\n    ...(simple\n      ? getSimpleBorrowerFinanceArray({ borrowers, borrowerId })\n      : getBorrowerFinanceArray({ borrowers, borrowerId })),\n  ];\n};\n","import React from 'react';\n\nimport {\n  PROPERTY_TYPE,\n  PURCHASE_TYPE,\n  OWNER,\n  RESIDENCE_TYPE,\n  MINERGIE_CERTIFICATE,\n  HOUSE_TYPE,\n  FLAT_TYPE,\n  VOLUME_NORM,\n} from 'core/api/constants';\nimport CantonField from 'core/components/CantonField/CantonField';\n\nconst mapInput = (input) => {\n  const intlSafeObject = { ...input };\n  // If the id contains a dot in it, split it and add a intlId\n  // This makes it easier to write intl messages\n  if (input.id && input.id.indexOf('.') > 0) {\n    // Perform some additional slicing to make sure ids with multiple dots\n    // work by removing only the first part\n    intlSafeObject.intlId = input.id\n      .split('.')\n      .slice(1)\n      .join('.');\n  }\n\n  if (input.inputs) {\n    // If there are nested inputs, give them an intlId too\n    intlSafeObject.inputs = input.inputs.map(obj =>\n      (obj.id && obj.id.indexOf('.') > 0\n        ? { ...obj, intlId: obj.id.split('.')[1] }\n        : obj));\n  }\n\n  return intlSafeObject;\n};\n\nconst getOwnerOptions = ({ borrowers }) =>\n  Object.values(OWNER)\n    .filter(value => (borrowers.length === 1 ? value !== OWNER.SECOND : true))\n    .map((value) => {\n      const isFirst = value === OWNER.FIRST;\n      const isSecond = value === OWNER.SECOND;\n      let borrowerFirstName;\n\n      if (borrowers.length <= 1) {\n        borrowerFirstName = null;\n      } else {\n        borrowerFirstName = borrowers[isFirst ? 0 : 1].firstName;\n      }\n\n      return isFirst || isSecond\n        ? {\n          id: isFirst ? 0 : 1,\n          intlValues: {\n            name: borrowerFirstName || `Emprunteur ${isFirst ? 1 : 2}`,\n          },\n        }\n        : value;\n    });\n\nexport const getPropertyLoanArray = ({ loan, borrowers }) => {\n  const r = loan;\n\n  if (!r) {\n    throw new Error('requires a loan');\n  }\n\n  const array = [\n    {\n      type: 'h3',\n      id: 'propertyInfo',\n      ignore: true,\n      required: false,\n    },\n    {\n      id: 'residenceType',\n      type: 'radioInput',\n      options: Object.values(RESIDENCE_TYPE),\n    },\n    {\n      type: 'conditionalInput',\n      conditionalTrueValue: OWNER.OTHER,\n      condition:\n        borrowers.length > 1 && r.purchaseType === PURCHASE_TYPE.REFINANCING,\n      inputs: [\n        {\n          id: 'currentOwner',\n          type: 'radioInput',\n          options: getOwnerOptions({ borrowers }),\n        },\n        { id: 'otherOwner', type: 'textInput' },\n      ],\n    },\n    {\n      type: 'conditionalInput',\n      conditionalTrueValue: OWNER.OTHER,\n      condition:\n        borrowers.length > 1 && r.purchaseType !== PURCHASE_TYPE.REFINANCING,\n      inputs: [\n        {\n          id: 'futureOwner',\n          type: 'radioInput',\n          options: getOwnerOptions({ borrowers }),\n        },\n        {\n          id: 'otherOwner',\n          type: 'textInput',\n        },\n      ],\n    },\n  ];\n\n  return array.map(mapInput);\n};\n\nconst shouldDisplayFloorNumber = ({ propertyType, flatType }) =>\n  propertyType === PROPERTY_TYPE.FLAT\n  && flatType !== FLAT_TYPE.PENTHOUSE_APARTMENT\n  && flatType !== FLAT_TYPE.PENTHOUSE_MAISONETTE\n  && flatType !== FLAT_TYPE.TERRACE_APARTMENT;\n\nconst shouldDisplayTerraceArea = ({ propertyType, flatType }) =>\n  propertyType === PROPERTY_TYPE.FLAT;\n\nexport const getPropertyArray = ({ loan, borrowers, property }) => {\n  const r = loan;\n\n  if (!r) {\n    throw new Error('requires a loan');\n  }\n\n  const array = [\n    { id: 'value', type: 'textInput', money: true },\n    {\n      id: 'investmentRent',\n      type: 'textInput',\n      money: true,\n      condition: r.residenceType === RESIDENCE_TYPE.INVESTMENT,\n    },\n    {\n      id: 'propertyType',\n      type: 'radioInput',\n      options: Object.values(PROPERTY_TYPE),\n    },\n    {\n      id: 'isNew',\n      type: 'radioInput',\n      options: [true, false],\n      condition: r.purchaseType === PURCHASE_TYPE.ACQUISITION,\n    },\n    {\n      id: 'isCoproperty',\n      type: 'radioInput',\n      options: [true, false],\n    },\n    {\n      id: 'copropertyPercentage',\n      type: 'textInput',\n      condition: property.isCoproperty,\n      info: true,\n    },\n    {\n      type: 'h3',\n      id: 'propertyAddress',\n      ignore: true,\n      required: false,\n    },\n    {\n      id: 'address1',\n      type: 'textInput',\n    },\n    {\n      id: 'address2',\n      type: 'textInput',\n      required: false,\n    },\n    {\n      id: 'zipCode',\n      type: 'textInput',\n    },\n    {\n      id: 'city',\n      type: 'textInput',\n    },\n    {\n      type: 'custom',\n      id: 'canton',\n      component: <CantonField canton={property.canton} />,\n    },\n    {\n      type: 'h3',\n      id: 'propertyDetails',\n      ignore: true,\n      required: false,\n    },\n    {\n      id: 'houseType',\n      type: 'radioInput',\n      options: Object.values(HOUSE_TYPE),\n      condition: property.propertyType === PROPERTY_TYPE.HOUSE,\n    },\n    {\n      id: 'flatType',\n      type: 'radioInput',\n      options: Object.values(FLAT_TYPE),\n      condition: property.propertyType === PROPERTY_TYPE.FLAT,\n    },\n    {\n      id: 'numberOfFloors',\n      type: 'textInput',\n      number: true,\n    },\n    {\n      id: 'floorNumber',\n      type: 'textInput',\n      number: true,\n      condition: shouldDisplayFloorNumber(property),\n    },\n    { id: 'constructionYear', type: 'textInput', number: true },\n    {\n      id: 'renovationYear',\n      type: 'textInput',\n      number: true,\n      required: false,\n      info: true,\n    },\n    {\n      id: 'landArea',\n      type: 'textInput',\n      number: true,\n      condition: property.propertyType === PROPERTY_TYPE.HOUSE,\n    },\n    {\n      id: 'insideArea',\n      type: 'textInput',\n      number: true,\n      condition: property.propertyType === PROPERTY_TYPE.FLAT,\n    },\n    {\n      id: 'terraceArea',\n      type: 'textInput',\n      number: true,\n      required: true,\n      condition: shouldDisplayTerraceArea(property),\n    },\n    {\n      id: 'volume',\n      type: 'textInput',\n      number: true,\n      condition: property.propertyType === PROPERTY_TYPE.HOUSE,\n    },\n    {\n      id: 'volumeNorm',\n      type: 'radioInput',\n      options: Object.values(VOLUME_NORM),\n      condition: property.propertyType === PROPERTY_TYPE.HOUSE,\n    },\n    {\n      id: 'roomCount',\n      type: 'textInput',\n      decimal: true,\n      info: true,\n    },\n    { id: 'parkingInside', type: 'textInput', number: true, required: false },\n    { id: 'parkingOutside', type: 'textInput', number: true, required: false },\n    {\n      id: 'minergie',\n      type: 'radioInput',\n      options: Object.values(MINERGIE_CERTIFICATE),\n    },\n    {\n      id: 'yearlyExpenses',\n      type: 'textInput',\n      money: true,\n      required: false,\n      info: true,\n    },\n  ];\n\n  return array.map(mapInput);\n};\n","import {\n  INTEREST_RATES,\n  MORTGAGE_NOTE_TYPES,\n  MORTGAGE_NOTE_CATEGORIES,\n} from '../api/constants';\n\nconst getRefinancingFormArray = ({ loan }) => [\n  {\n    id: 'previousLender',\n    type: 'textInput',\n  },\n  {\n    id: 'previousLoanTranches',\n    type: 'arrayInput',\n    inputs: [\n      {\n        id: 'type',\n        type: 'selectInput',\n        options: Object.values(INTEREST_RATES),\n        intlId: 'loanTranches',\n      },\n      { id: 'value', type: 'textInput', money: true },\n      { id: 'dueDate', type: 'dateInput' },\n      { id: 'rate', type: 'textInput', percent: true },\n    ],\n  },\n  {\n    id: 'mortgageNotes',\n    type: 'arrayInput',\n    inputs: [\n      { id: 'value', type: 'textInput', money: true },\n      { id: 'rank', type: 'textInput', number: true },\n      {\n        id: 'type',\n        type: 'selectInput',\n        options: Object.values(MORTGAGE_NOTE_TYPES),\n      },\n      {\n        id: 'category',\n        type: 'selectInput',\n        options: Object.values(MORTGAGE_NOTE_CATEGORIES),\n      },\n    ],\n  },\n];\n\nexport default getRefinancingFormArray;\n","export const TOOLTIP_LISTS = {\n  GENERAL: 'GENERAL',\n  OFFER_TABLE: 'OFFER_TABLE',\n  DEV: 'DEV',\n  WIDGET1: 'WIDGET1',\n};\n\n// Write the keys in lowercase\n// If `double` is true, it means there need to be 2 strings for the\n// \"Learn More\" part.\nexport const generalTooltips = {\n  finma: { id: 'finma', double: true },\n\n  \"taux d'effort\": { id: 'incomeRatio', double: true },\n  \"taux d'avance\": { id: 'borrowRatio', double: true },\n};\n\nexport const widget1Tooltips = {\n  'plan financier': { id: 'financialPlan', double: true },\n  'structure de financement': { id: 'financialPlan', double: true },\n\n  'charges / revenus': { id: 'incomeRatio', double: true },\n  \"taux d'effort\": { id: 'incomeRatio', double: true },\n\n  'revenus annuels bruts': { id: 'income', double: true },\n  'salaire brut': { id: 'income', double: true },\n  revenus: { id: 'income', double: true },\n\n  bonus: { id: 'bonus', double: true },\n  gratification: { id: 'bonus', double: true },\n\n  emprunteurs: { id: 'borrower' },\n  emprunteur: { id: 'borrower' },\n\n  finma: { id: 'finma', double: true },\n\n  'prêteurs intéressés': { id: 'interestedLenders' },\n\n  \"prêt / prix d'achat\": { id: 'borrowRatio', double: true },\n  \"taux d'avance\": { id: 'borrowRatio', double: true },\n};\n\nexport const offerTableTooltips = {\n  montant: { id: 'offerTable.amount' },\n  libor: { id: 'offerTable.libor' },\n  '2 ans': { id: 'offerTable.2' },\n  '5 ans': { id: 'offerTable.5' },\n  '10 ans': { id: 'offerTable.10' },\n  amortissement: { id: 'offerTable.amortization' },\n  expertise: { id: 'offerTable.expertise' },\n  conditions: { id: 'offerTable.conditions' },\n};\n\nexport const devTooltips = {\n  match1: { id: 'id1' },\n  match2: { id: 'id2' },\n};\n\nexport const tooltips = (list) => {\n  switch (list) {\n  case TOOLTIP_LISTS.GENERAL:\n    return generalTooltips;\n  case TOOLTIP_LISTS.OFFER_TABLE:\n    return offerTableTooltips;\n  case TOOLTIP_LISTS.DEV:\n    return devTooltips;\n  case TOOLTIP_LISTS.WIDGET1:\n    return widget1Tooltips;\n  default:\n    throw new Error(`Unknown tooltip list: \"${list}\"`);\n  }\n};\n\nexport const tooltipsById = (id) => {\n  if (typeof id !== 'string') {\n    throw new Error('not a string');\n  }\n  const [listId, ...ids] = id.split('.');\n\n  if (ids.length < 1 || ids[0] === '') {\n    throw Error('Wrong id given for tooltips, requires 2 strings separated by a .');\n  }\n\n  const list = tooltips(listId);\n\n  return list[ids.join('.')];\n};\n","import { INTEREST_RATES } from 'core/api/interestRates/interestRatesConstants';\n\nconst colors = {\n  primary: '#005bea',\n  primaryArray: [0, 91, 234],\n  secondary: '#00c6ff',\n  tertiary: '#001a8f',\n  success: '#21d3b5',\n  warning: '#F3AF50',\n  error: '#e01076',\n  borderGrey: '#DEE2E6',\n  charts: ['#2C82BE', '#76DDFB', '#DBECF8', '#53A8E2', '#6AC6FF', '#005bea'],\n  iconColor: '#444',\n  iconHoverColor: '#888',\n  body: '#666',\n  title: '#444',\n  mui: {\n    background: '#fff',\n    contrastText: '#fff',\n    darkPrimary: '#0048bb', // Darken 20%\n    darkSuccess: '#1aa890', // Darken 20%\n  },\n  interestRates: {\n    [INTEREST_RATES.LIBOR]: '#0047AC',\n    [INTEREST_RATES.YEARS_1]: '#2C82BE',\n    [INTEREST_RATES.YEARS_2]: '#A8B9C5',\n    [INTEREST_RATES.YEARS_5]: '#43AAC8',\n    [INTEREST_RATES.YEARS_10]: '#005bea',\n    [INTEREST_RATES.YEARS_15]: '#2075AF',\n    [INTEREST_RATES.YEARS_20]: '#3793CC',\n    [INTEREST_RATES.YEARS_25]: '#53A8E2',\n    irs10y: '#0048bb',\n  },\n};\n\nexport default colors;\n","export const AUTOSAVE_DEBOUNCE = 400; // milliseconds\n","export const NOTARY_FEES = 0.05; // Percent\nexport const AMORTIZATION_STOP = 0.65; // Percent\nexport const MAINTENANCE_REAL = 0.005; // Percent\nexport const MAINTENANCE_FINMA = 0.01; // Percent\nexport const INTERESTS_FINMA = 0.05; // Percent\nexport const APPROXIMATE_LPP_FEES = 0.1; // Percent\nexport const DEFAULT_AMORTIZATION = 0.01; // Percent of property value\nexport const AMORTIZATION_YEARS = 15; // Years\nexport const DEFAULT_INTEREST_RATE = 0.015; // Percent, use 1.5% by default\nexport const MAX_BORROW_RATIO_PRIMARY_PROPERTY = 0.8; // Percent\nexport const MAX_BORROW_RATIO_OTHER = 0.7; // Percent\nexport const MAX_BORROW_RATIO_WITH_PLEDGE = 0.9; // Percent\nexport const MAX_INCOME_RATIO = 1 / 3; // Percent\nexport const MAX_INCOME_RATIO_TIGHT = 0.38; // Percent\nexport const FORTUNE_WARNING_TIGHT = 'FORTUNE_WARNING_TIGHT';\nexport const INCOME_WARNING_TIGHT = 'INCOME_WARNING_TIGHT';\nexport const FORTUNE_ERROR = 'FORTUNE_ERROR';\nexport const INCOME_ERROR = 'INCOME_ERROR';\nexport const CURRENCY = 'CHF';\nexport const MIN_CASH = 0.1; // Percent of property value\nexport const AVERAGE_TAX_RATE = 0.25; // Percent\nexport const SECOND_PILLAR_WITHDRAWAL_TAX_RATE = 0.1; // Percent\nexport const VAT = 0.077;\nexport const BONUS_CONSIDERATION = 0.5;\nexport const BONUS_HISTORY_TO_CONSIDER = 3;\nexport const COMPANY_INCOME_TO_CONSIDER = 1;\nexport const DIVIDENDS_CONSIDERATION = 1;\nexport const DIVIDENDS_HISTORY_TO_CONSIDER = 1;\nexport const PENSION_INCOME_CONSIDERATION = 1;\nexport const REAL_ESTATE_INCOME_CONSIDERATION = 1;\nexport const INVESTMENT_INCOME_CONSIDERATION = 1;\nexport const FORTUNE_RETURNS_RATIO = 0;\nexport const ESTIMATED_COMMISSION = 0.01;\nexport const REFERRAL_COMMISSION = 0.25;\nexport const REFERRAL_COMMISSION_SPLIT = 0.5;\n// Add extra 1 so that rounding errors don't break the comparison\n// f.ex: ???\nexport const OWN_FUNDS_ROUNDING_AMOUNT = 1001;\nexport const BONUS_ALGORITHMS = {\n  AVERAGE: 'AVERAGE',\n  WEAK_AVERAGE: 'WEAK_AVERAGE',\n};\nexport const REAL_ESTATE_INCOME_ALGORITHMS = {\n  DEFAULT: 'DEFAULT',\n  POSITIVE_NEGATIVE_SPLIT: 'POSITIVE_NEGATIVE_SPLIT',\n};\n","import { Meteor } from 'meteor/meteor';\nimport { SyncedCron } from 'meteor/littledata:synced-cron';\n\nimport moment from 'moment';\n\nimport { logError } from 'core/api/methods';\nimport { irs10yFetch } from 'core/api/irs10y/server/methods';\nimport CronitorService from 'core/api/cronitor/server/CronitorService';\nimport SlackService from 'core/api/slack/server/SlackService';\n\nconst getRandomMinute = () => Math.floor(Math.random() * 49) + 10;\nconst jobName = 'Fetch IRS 10Y';\n\nconst cronitor = new CronitorService({ id: '19MCrQ' });\n\n// Make this a function so that randomMinute is always different\nconst job = () => ({\n  name: jobName,\n  schedule(parser) {\n    const randomMinute = getRandomMinute();\n    const tomorrow = moment()\n      .add(1, 'days')\n      .format('dddd');\n    const parserText = `at 6:${randomMinute} on ${tomorrow}`;\n    const parsedText = parser.text(parserText);\n\n    return parsedText;\n  },\n  job() {\n    try {\n      cronitor\n        .run()\n        .then(() => irs10yFetch.run({}))\n        .then(cronitor.complete)\n        .then(() => {\n          SyncedCron.remove(jobName);\n          SyncedCron.add(job());\n        })\n        .catch((error) => {\n          if (error.message && error.message.includes('existe déjà')) {\n            return cronitor.complete(error.message);\n          }\n          return cronitor.fail(error);\n        });\n    } catch (error) {\n      SlackService.sendError({\n        error,\n        additionalData: ['IRS 10Y CRON error'],\n      });\n    }\n  },\n});\n\nSyncedCron.config({\n  logger: ({ level, message, tag }) => {\n    if (Meteor.isProduction) {\n      console.log('---------------------- CRON LOG ----------------------');\n      console.log('Level', level);\n      console.log('Message', message);\n      console.log('Tag', tag);\n    }\n  },\n});\n\nSyncedCron.add(job());\n\nMeteor.startup(() => {\n  try {\n    SyncedCron.start();\n  } catch (error) {\n    logError.run({ error });\n  }\n});\n","import './startup';\nimport 'core/api/server';\nimport 'core/api/api';\nimport 'core/fixtures';\nimport 'core/startup/server/kadira';\nimport 'core/startup/accounts-config';\nimport './restAPI';\n\n// CRONs\nimport 'core/api/loans/server/expireLoansCron';\nimport 'core/api/notifications/server/notificationGeneratorCron';\nimport 'core/api/updateWatchers/server/updateWatcherCron';\nimport './fetchIrs10yCron';\n","import { Meteor } from 'meteor/meteor';\n\nimport RESTAPI from 'core/api/RESTAPI/server/RESTAPI';\nimport {\n  getPropertyLoansAPI,\n  getUserAPI,\n  interestRatesAPI,\n  inviteUserToPromotionAPI,\n  inviteCustomerToProPropertiesAPI,\n  mortgageEstimateAPI,\n  referCustomerAPI,\n  testEndpointAPI,\n  updatePropertyAPI,\n  insertPropertyAPI,\n  uploadFileAPI,\n  deleteFileAPI,\n  getPropertyAPI,\n} from 'core/api/RESTAPI/server/endpoints/';\nimport { makeFileUploadDir, flushFileUploadDir } from 'core/utils/filesUtils';\n\nconst api = new RESTAPI();\napi.addEndpoint(\n  '/promotions/:promotionId/invite-customer',\n  'POST',\n  inviteUserToPromotionAPI,\n);\napi.addEndpoint(\n  '/properties/invite-customer',\n  'POST',\n  inviteCustomerToProPropertiesAPI,\n);\napi.addEndpoint('/properties/:propertyId/loans', 'GET', getPropertyLoansAPI);\napi.addEndpoint('/properties/:propertyId', 'POST', updatePropertyAPI);\napi.addEndpoint('/users', 'POST', referCustomerAPI);\napi.addEndpoint('/users', 'GET', getUserAPI);\napi.addEndpoint('/test', 'POST', testEndpointAPI);\napi.addEndpoint('/test', 'GET', testEndpointAPI);\napi.addEndpoint('/test', 'PUT', testEndpointAPI);\napi.addEndpoint('/test', 'DELETE', testEndpointAPI);\napi.addEndpoint('/test/:id', 'POST', testEndpointAPI);\napi.addEndpoint('/test/:id', 'GET', testEndpointAPI);\napi.addEndpoint('/test/:id', 'PUT', testEndpointAPI);\napi.addEndpoint('/test/:id', 'DELETE', testEndpointAPI);\napi.addEndpoint('/interest-rates/latest', 'GET', interestRatesAPI);\napi.addEndpoint('/calculator/mortgage-estimate', 'GET', mortgageEstimateAPI);\napi.addEndpoint('/properties', 'POST', insertPropertyAPI);\napi.addEndpoint('/upload', 'POST', uploadFileAPI, { multipart: true });\napi.addEndpoint('/deleteFile', 'POST', deleteFileAPI);\napi.addEndpoint('/properties/:propertyId', 'GET', getPropertyAPI);\n\nMeteor.startup(() => {\n  makeFileUploadDir();\n  flushFileUploadDir();\n  api.start();\n});\n","import { Meteor } from 'meteor/meteor';\n\nMeteor.microservice = 'backend';\n\nif (Meteor.isAppTest) {\n  Meteor.isTest = true;\n}\n","import '/imports/startup/server';\n"]}}]