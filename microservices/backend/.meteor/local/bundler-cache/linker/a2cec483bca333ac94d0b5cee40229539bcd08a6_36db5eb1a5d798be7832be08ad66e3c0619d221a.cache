[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar check = Package.check.check;\nvar Match = Package.check.Match;\nvar meteorInstall = Package.modules.meteorInstall;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\nvar Symbol = Package['ecmascript-runtime-client'].Symbol;\nvar Map = Package['ecmascript-runtime-client'].Map;\nvar Set = Package['ecmascript-runtime-client'].Set;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"cultofcoders:mutations\":{\"main.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/cultofcoders_mutations/main.js                                                                       //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\nmodule.export({\n  Mutation: function () {\n    return Mutation;\n  },\n  wrap: function () {\n    return wrap;\n  }\n});\nvar wrap;\nmodule.link(\"./lib/wrap\", {\n  \"default\": function (v) {\n    wrap = v;\n  }\n}, 0);\nvar Mutation;\nmodule.link(\"./lib/mutation.class\", {\n  \"default\": function (v) {\n    Mutation = v;\n  }\n}, 1);\nmodule.link(\"./lib/debug\");\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"aop.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/cultofcoders_mutations/lib/aop.js                                                                    //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\nvar AOP =\n/*#__PURE__*/\nfunction () {\n  function AOP() {\n    this.befores = [];\n    this.afters = [];\n  }\n\n  var _proto = AOP.prototype;\n\n  _proto.addBefore = function () {\n    function addBefore(fn) {\n      check(fn, Function);\n      this.befores.push(fn);\n    }\n\n    return addBefore;\n  }();\n\n  _proto.addAfter = function () {\n    function addAfter(fn) {\n      check(fn, Function);\n      this.afters.push(fn);\n    }\n\n    return addAfter;\n  }();\n\n  _proto.executeBefores = function () {\n    function executeBefores() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      this.befores.forEach(function (fn) {\n        return fn.call.apply(fn, [null].concat(args));\n      });\n    }\n\n    return executeBefores;\n  }();\n\n  _proto.executeAfters = function () {\n    function executeAfters() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      this.afters.forEach(function (fn) {\n        return fn.call.apply(fn, [null].concat(args));\n      });\n    }\n\n    return executeAfters;\n  }();\n\n  return AOP;\n}();\n\nmodule.exportDefault(AOP);\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"debug.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/cultofcoders_mutations/lib/debug.js                                                                  //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\nvar Mutation;\nmodule.link(\"./mutation.class\", {\n  \"default\": function (v) {\n    Mutation = v;\n  }\n}, 0);\nObject.assign(Mutation, {\n  isDebugEnabled: Meteor.isDevelopment || process.env.MUTATION_DEBUG_ENABLED\n});\nMutation.addBeforeCall(function (_ref) {\n  var config = _ref.config,\n      params = _ref.params,\n      context = _ref.context;\n\n  if (Mutation.isDebugEnabled) {\n    console.log(\"[mutations][\" + config.name + \"] Calling with params:\", params);\n  }\n});\nMutation.addAfterCall(function (_ref2) {\n  var config = _ref2.config,\n      params = _ref2.params,\n      context = _ref2.context,\n      result = _ref2.result,\n      error = _ref2.error;\n\n  if (Mutation.isDebugEnabled) {\n    var time = new Date();\n\n    if (!error) {\n      console.log(\"[mutations][\" + config.name + \"] Received result:\", result);\n    } else {\n      console.error(\"[mutations][\" + config.name + \"] Received error:\", error);\n    }\n  }\n});\nMutation.addBeforeExecution(function (_ref3) {\n  var config = _ref3.config,\n      params = _ref3.params,\n      context = _ref3.context;\n\n  if (Mutation.isDebugEnabled) {\n    var time = new Date();\n    console.log(\"[mutations][\" + config.name + \"] Received call with params: \" + JSON.stringify(params));\n  }\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"mutation.class.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/cultofcoders_mutations/lib/mutation.class.js                                                         //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\nmodule.export({\n  \"default\": function () {\n    return Mutation;\n  }\n});\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar AOP;\nmodule.link(\"./aop\", {\n  \"default\": function (v) {\n    AOP = v;\n  }\n}, 1);\nvar check, Match;\nmodule.link(\"meteor/check\", {\n  check: function (v) {\n    check = v;\n  },\n  Match: function (v) {\n    Match = v;\n  }\n}, 2);\n\nvar Mutation =\n/*#__PURE__*/\nfunction () {\n  function Mutation(config) {\n    Mutation.checkDefaultConfig(config);\n    this.config = config;\n    this.callAOP = new AOP();\n    this.executionAOP = new AOP();\n  }\n  /**\n   * @param {Function} fn\n   */\n\n\n  Mutation.addBeforeCall = function () {\n    function addBeforeCall(fn) {\n      this.callAOP.addBefore(fn);\n    }\n\n    return addBeforeCall;\n  }()\n  /**\n   * @param {Function} fn\n   */\n  ;\n\n  Mutation.addAfterCall = function () {\n    function addAfterCall(fn) {\n      this.callAOP.addAfter(fn);\n    }\n\n    return addAfterCall;\n  }()\n  /**\n   * @param {Function} fn\n   */\n  ;\n\n  Mutation.addBeforeExecution = function () {\n    function addBeforeExecution(fn) {\n      this.executionAOP.addBefore(fn);\n    }\n\n    return addBeforeExecution;\n  }()\n  /**\n   * @param {Function} fn\n   */\n  ;\n\n  Mutation.addAfterExecution = function () {\n    function addAfterExecution(fn) {\n      this.executionAOP.addAfter(fn);\n    }\n\n    return addAfterExecution;\n  }()\n  /**\n   * @param {Object} config\n   */\n  ;\n\n  Mutation.checkDefaultConfig = function () {\n    function checkDefaultConfig(config) {\n      check(config, Object);\n\n      if (typeof config.name !== 'string') {\n        throw new Meteor.Error('invalid-config', 'You must provide a \"name\" property to your mutation config.');\n      }\n    }\n\n    return checkDefaultConfig;\n  }()\n  /**\n   * @param {Function} fn\n   */\n  ;\n\n  var _proto = Mutation.prototype;\n\n  _proto.addBeforeCall = function () {\n    function addBeforeCall(fn) {\n      this.callAOP.addBefore(fn);\n    }\n\n    return addBeforeCall;\n  }()\n  /**\n   * @param {Function} fn\n   */\n  ;\n\n  _proto.addAfterCall = function () {\n    function addAfterCall(fn) {\n      this.callAOP.addAfter(fn);\n    }\n\n    return addAfterCall;\n  }()\n  /**\n   * @param {Function} fn\n   */\n  ;\n\n  _proto.addBeforeExecution = function () {\n    function addBeforeExecution(fn) {\n      this.executionAOP.addBefore(fn);\n    }\n\n    return addBeforeExecution;\n  }()\n  /**\n   * @param {Function} fn\n   */\n  ;\n\n  _proto.addAfterExecution = function () {\n    function addAfterExecution(fn) {\n      this.executionAOP.addAfter(fn);\n    }\n\n    return addAfterExecution;\n  }()\n  /**\n   * Runs the mutation inside a promise\n   * @param {Object} callParams\n   * @param {Object} options Meteor options https://docs.meteor.com/api/methods.html#Meteor-apply\n   * @returns {Promise}\n   */\n  ;\n\n  _proto.run = function () {\n    function run(callParams) {\n      var _this = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var config = this.config;\n      var aopData = {\n        config: config,\n        params: callParams\n      };\n      Mutation.callAOP.executeBefores(aopData);\n      this.callAOP.executeBefores(aopData);\n      var name = config.name,\n          params = config.params;\n      return new Promise(function (resolve, reject) {\n        Meteor.apply(name, [callParams], options, function (error, result) {\n          var aopData = {\n            config: config,\n            params: callParams,\n            result: result,\n            error: error\n          };\n          Mutation.callAOP.executeAfters(aopData);\n\n          _this.callAOP.executeAfters(aopData);\n\n          if (error) {\n            reject(error);\n          } else {\n            resolve(result);\n          }\n        });\n      });\n    }\n\n    return run;\n  }()\n  /**\n   * Creates the Meteor Method and the handler for it\n   * @param {Function} fn\n   */\n  ;\n\n  _proto.setHandler = function () {\n    function setHandler(fn) {\n      var _Meteor$methods;\n\n      var config = this.config;\n      var name = config.name,\n          params = config.params;\n      var self = this;\n      Meteor.methods((_Meteor$methods = {}, _Meteor$methods[name] = function () {\n        var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        if (config.params) {\n          check(params, config.params);\n        }\n\n        var aopData = {\n          context: this,\n          config: config,\n          params: params\n        };\n        Mutation.executionAOP.executeBefores(aopData);\n        self.executionAOP.executeBefores(aopData);\n        var error, result;\n\n        try {\n          result = fn.call(null, this, params);\n        } catch (e) {\n          error = e;\n        }\n\n        aopData = {\n          context: this,\n          config: config,\n          params: params,\n          result: result,\n          error: error\n        };\n        Mutation.executionAOP.executeAfters(aopData);\n        self.executionAOP.executeAfters(aopData);\n\n        if (error) {\n          throw error;\n        }\n\n        return result;\n      }, _Meteor$methods));\n    }\n\n    return setHandler;\n  }();\n\n  return Mutation;\n}();\n\nMutation.callAOP = new AOP();\nMutation.executionAOP = new AOP();\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"wrap.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/cultofcoders_mutations/lib/wrap.js                                                                   //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\nmodule.export({\n  \"default\": function () {\n    return wrap;\n  }\n});\nvar Mutation;\nmodule.link(\"./mutation.class\", {\n  \"default\": function (v) {\n    Mutation = v;\n  }\n}, 0);\n\nfunction wrap(config) {\n  return new Mutation(config);\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\nvar exports = require(\"/node_modules/meteor/cultofcoders:mutations/main.js\");\n\n/* Exports */\nPackage._define(\"cultofcoders:mutations\", exports);\n\n})();\n","servePath":"/packages/cultofcoders_mutations.js","sourceMap":{"version":3,"sources":["packages/cultofcoders:mutations/main.js","packages/cultofcoders:mutations/lib/aop.js","packages/cultofcoders:mutations/lib/debug.js","packages/cultofcoders:mutations/lib/mutation.class.js","packages/cultofcoders:mutations/lib/wrap.js"],"names":["module","export","Mutation","wrap","link","v","AOP","befores","afters","addBefore","fn","check","Function","push","addAfter","executeBefores","args","forEach","call","executeAfters","exportDefault","Object","assign","isDebugEnabled","Meteor","isDevelopment","process","env","MUTATION_DEBUG_ENABLED","addBeforeCall","config","params","context","console","log","name","addAfterCall","result","error","time","Date","addBeforeExecution","JSON","stringify","Match","checkDefaultConfig","callAOP","executionAOP","addAfterExecution","Error","run","callParams","options","aopData","Promise","resolve","reject","apply","setHandler","self","methods","e"],"mappings":"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","file":"/packages/cultofcoders_mutations.js","sourcesContent":["import wrap from './lib/wrap';\nimport Mutation from './lib/mutation.class';\nimport './lib/debug';\n\nexport { Mutation, wrap };\n","class AOP {\n    befores = [];\n    afters = [];\n\n    addBefore(fn) {\n        check(fn, Function);\n\n        this.befores.push(fn);\n    }\n\n    addAfter(fn) {\n        check(fn, Function);\n\n        this.afters.push(fn);\n    }\n\n    executeBefores(...args) {\n        this.befores.forEach(fn => fn.call(null, ...args));\n    }\n\n    executeAfters(...args) {\n        this.afters.forEach(fn => fn.call(null, ...args));\n    }\n}\n\nexport default AOP;\n","import Mutation from './mutation.class';\n\nObject.assign(Mutation, {\n    isDebugEnabled: Meteor.isDevelopment || process.env.MUTATION_DEBUG_ENABLED,\n});\n\nMutation.addBeforeCall(({ config, params, context }) => {\n    if (Mutation.isDebugEnabled) {\n        console.log(`[mutations][${config.name}] Calling with params:`, params);\n    }\n});\n\nMutation.addAfterCall(({ config, params, context, result, error }) => {\n    if (Mutation.isDebugEnabled) {\n        const time = new Date();\n\n        if (!error) {\n            console.log(`[mutations][${config.name}] Received result:`, result);\n        } else {\n            console.error(`[mutations][${config.name}] Received error:`, error);\n        }\n    }\n});\n\nMutation.addBeforeExecution(({ config, params, context }) => {\n    if (Mutation.isDebugEnabled) {\n        const time = new Date();\n        console.log(\n            `[mutations][${\n                config.name\n            }] Received call with params: ${JSON.stringify(params)}`\n        );\n    }\n});\n","import { Meteor } from 'meteor/meteor';\nimport AOP from './aop';\nimport { check, Match } from 'meteor/check';\n\nexport default class Mutation {\n    static callAOP = new AOP();\n    static executionAOP = new AOP();\n\n    constructor(config) {\n        Mutation.checkDefaultConfig(config);\n\n        this.config = config;\n        this.callAOP = new AOP();\n        this.executionAOP = new AOP();\n    }\n\n    /**\n     * @param {Function} fn\n     */\n    static addBeforeCall(fn) {\n        this.callAOP.addBefore(fn);\n    }\n\n    /**\n     * @param {Function} fn\n     */\n    static addAfterCall(fn) {\n        this.callAOP.addAfter(fn);\n    }\n\n    /**\n     * @param {Function} fn\n     */\n    static addBeforeExecution(fn) {\n        this.executionAOP.addBefore(fn);\n    }\n\n    /**\n     * @param {Function} fn\n     */\n    static addAfterExecution(fn) {\n        this.executionAOP.addAfter(fn);\n    }\n\n    /**\n     * @param {Object} config\n     */\n    static checkDefaultConfig(config) {\n        check(config, Object);\n        if (typeof config.name !== 'string') {\n            throw new Meteor.Error(\n                'invalid-config',\n                'You must provide a \"name\" property to your mutation config.'\n            );\n        }\n    }\n\n    /**\n     * @param {Function} fn\n     */\n    addBeforeCall(fn) {\n        this.callAOP.addBefore(fn);\n    }\n\n    /**\n     * @param {Function} fn\n     */\n    addAfterCall(fn) {\n        this.callAOP.addAfter(fn);\n    }\n\n    /**\n     * @param {Function} fn\n     */\n    addBeforeExecution(fn) {\n        this.executionAOP.addBefore(fn);\n    }\n\n    /**\n     * @param {Function} fn\n     */\n    addAfterExecution(fn) {\n        this.executionAOP.addAfter(fn);\n    }\n\n    /**\n     * Runs the mutation inside a promise\n     * @param {Object} callParams\n     * @param {Object} options Meteor options https://docs.meteor.com/api/methods.html#Meteor-apply\n     * @returns {Promise}\n     */\n    run(callParams, options = {}) {\n        const config = this.config;\n\n        const aopData = { config, params: callParams };\n        Mutation.callAOP.executeBefores(aopData);\n        this.callAOP.executeBefores(aopData);\n\n        const { name, params } = config;\n\n        return new Promise((resolve, reject) => {\n            Meteor.apply(name, [callParams], options, (error, result) => {\n                const aopData = {\n                    config,\n                    params: callParams,\n                    result,\n                    error,\n                };\n\n                Mutation.callAOP.executeAfters(aopData);\n                this.callAOP.executeAfters(aopData);\n\n                if (error) {\n                    reject(error);\n                } else {\n                    resolve(result);\n                }\n            });\n        });\n    }\n\n    /**\n     * Creates the Meteor Method and the handler for it\n     * @param {Function} fn\n     */\n    setHandler(fn) {\n        const config = this.config;\n        const { name, params } = config;\n        const self = this;\n\n        Meteor.methods({\n            [name](params = {}) {\n                if (config.params) {\n                    check(params, config.params);\n                }\n\n                let aopData = {\n                    context: this,\n                    config,\n                    params,\n                };\n\n                Mutation.executionAOP.executeBefores(aopData);\n                self.executionAOP.executeBefores(aopData);\n\n                let error, result;\n                try {\n                    result = fn.call(null, this, params);\n                } catch (e) {\n                    error = e;\n                }\n\n                aopData = {\n                    context: this,\n                    config,\n                    params,\n                    result,\n                    error,\n                };\n\n                Mutation.executionAOP.executeAfters(aopData);\n                self.executionAOP.executeAfters(aopData);\n\n                if (error) {\n                    throw error;\n                }\n\n                return result;\n            },\n        });\n    }\n}\n","import Mutation from './mutation.class';\n\nexport default function wrap(config) {\n    return new Mutation(config);\n}\n"]}}]