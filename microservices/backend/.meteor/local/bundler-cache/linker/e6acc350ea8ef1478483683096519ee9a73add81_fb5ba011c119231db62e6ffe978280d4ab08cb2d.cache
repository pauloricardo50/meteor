[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar _ = Package.underscore._;\nvar LocalCollection = Package.minimongo.LocalCollection;\nvar Minimongo = Package.minimongo.Minimongo;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\nvar meteorInstall = Package.modules.meteorInstall;\n\n/* Package-scope variables */\nvar __coffeescriptShare;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"peerlibrary:subscription-scope\":{\"client.coffee\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                           //\n// packages/peerlibrary_subscription-scope/client.coffee                                     //\n//                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                             //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar Connection, originalCompileProjection, originalSubscribe;\nConnection = Meteor.connection.constructor;\noriginalSubscribe = Connection.prototype.subscribe;\n\nConnection.prototype.subscribe = function () {\n  var handle;\n\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  handle = originalSubscribe.apply(this, args);\n\n  handle.scopeQuery = function () {\n    var query;\n    query = {};\n    query[\"_sub_\".concat(handle.subscriptionId)] = {\n      $exists: true\n    };\n    return query;\n  };\n\n  return handle;\n}; // Recreate the convenience method.\n\n\nMeteor.subscribe = _.bind(Meteor.connection.subscribe, Meteor.connection);\noriginalCompileProjection = LocalCollection._compileProjection;\n\nLocalCollection._compileProjection = function (fields) {\n  var fun;\n  fun = originalCompileProjection(fields);\n  return function (obj) {\n    var field, res;\n    res = fun(obj);\n\n    for (field in res) {\n      if (field.lastIndexOf('_sub_', 0) === 0) {\n        delete res[field];\n      }\n    }\n\n    return res;\n  };\n};\n///////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".coffee\"\n  ]\n});\n\nrequire(\"/node_modules/meteor/peerlibrary:subscription-scope/client.coffee\");\n\n/* Exports */\nPackage._define(\"peerlibrary:subscription-scope\");\n\n})();\n","servePath":"/packages/peerlibrary_subscription-scope.js","sourceMap":{"version":3,"sources":["/packages/peerlibrary_subscription-scope/client.coffee","/client.coffee"],"names":["Connection","originalCompileProjection","originalSubscribe","Meteor","connection","constructor","prototype","subscribe","handle","args","apply","scopeQuery","query","subscriptionId","$exists","_","bind","LocalCollection","_compileProjection","fields","fun","obj","field","res","lastIndexOf"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,UAAA,EAAAC,yBAAA,EAAAC,iBAAA;AAAAF,UAAA,GAAaG,MAAM,CAACC,UAAP,CAAkBC,WAA/B;AAEAH,iBAAA,GAAoBF,UAAU,CAAAM,SAAV,CAAYC,SAAhC;;AACAP,UAAU,CAAAM,SAAV,CAAYC,SAAZ,GAAwB;AACtB,MAAAC,MAAA;;AADsB,oCAACC,IAAD;AAACA,QAAD;AAAA;;AACtBD,QAAA,GAASN,iBAAiB,CAACQ,KAAlB,CAAwB,IAAxB,EAA2BD,IAA3B,CAAT;;AAEAD,QAAM,CAACG,UAAP,GAAoB;AAClB,QAAAC,KAAA;AAAAA,SAAA,GAAQ,EAAR;AACAA,SAAM,gBAAQJ,MAAM,CAACK,cAAf,EAAN,GACE;AAAAC,aAAA,EAAS;AAAT,KADF;ACOA,WDLAF,KCKA;ADTkB,GAApB;;ACWA,SDLAJ,MCKA;ADdsB,CAAxB,C,CCiBA;;;ADLAL,MAAM,CAACI,SAAP,GAAmBQ,CAAC,CAACC,IAAF,CAAOb,MAAM,CAACC,UAAP,CAAkBG,SAAzB,EAAoCJ,MAAM,CAACC,UAA3C,CAAnB;AAEAH,yBAAA,GAA4BgB,eAAe,CAACC,kBAA5C;;AACAD,eAAe,CAACC,kBAAhB,GAAqC,UAACC,MAAD;AACnC,MAAAC,GAAA;AAAAA,KAAA,GAAMnB,yBAAA,CAA0BkB,MAA1B,CAAN;ACSA,SDPA,UAACE,GAAD;AACE,QAAAC,KAAA,EAAAC,GAAA;AAAAA,OAAA,GAAMH,GAAA,CAAIC,GAAJ,CAAN;;AAEA,SAAAC,KAAA,IAAAC,GAAA;ACQE,UDRoBD,KAAK,CAACE,WAAN,CAAkB,OAAlB,EAA2B,CAA3B,MAAiC,CCQrD,EDRqD;AACrD,eAAOD,GAAI,CAAAD,KAAA,CAAX;ACSC;ADVH;;ACYA,WDTAC,GCSA;ADfF,GCOA;ADVmC,CAArC,C","file":"/packages/peerlibrary_subscription-scope.js","sourcesContent":["Connection = Meteor.connection.constructor\n\noriginalSubscribe = Connection::subscribe\nConnection::subscribe = (args...) ->\n  handle = originalSubscribe.apply @, args\n\n  handle.scopeQuery = ->\n    query = {}\n    query[\"_sub_#{handle.subscriptionId}\"] =\n      $exists: true\n    query\n\n  handle\n\n# Recreate the convenience method.\nMeteor.subscribe = _.bind Meteor.connection.subscribe, Meteor.connection\n\noriginalCompileProjection = LocalCollection._compileProjection\nLocalCollection._compileProjection = (fields) ->\n  fun = originalCompileProjection fields\n\n  (obj) ->\n    res = fun obj\n\n    for field of res when field.lastIndexOf('_sub_', 0) is 0\n      delete res[field]\n\n    res\n","var Connection, originalCompileProjection, originalSubscribe;\n\nConnection = Meteor.connection.constructor;\n\noriginalSubscribe = Connection.prototype.subscribe;\n\nConnection.prototype.subscribe = function(...args) {\n  var handle;\n  handle = originalSubscribe.apply(this, args);\n  handle.scopeQuery = function() {\n    var query;\n    query = {};\n    query[`_sub_${handle.subscriptionId}`] = {\n      $exists: true\n    };\n    return query;\n  };\n  return handle;\n};\n\n// Recreate the convenience method.\nMeteor.subscribe = _.bind(Meteor.connection.subscribe, Meteor.connection);\n\noriginalCompileProjection = LocalCollection._compileProjection;\n\nLocalCollection._compileProjection = function(fields) {\n  var fun;\n  fun = originalCompileProjection(fields);\n  return function(obj) {\n    var field, res;\n    res = fun(obj);\n    for (field in res) {\n      if (field.lastIndexOf('_sub_', 0) === 0) {\n        delete res[field];\n      }\n    }\n    return res;\n  };\n};\n"]}}]