[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar meteorInstall = Package.modules.meteorInstall;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"meteortesting:mocha\":{\"client.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/meteortesting_mocha/client.js                                                                        //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\nmodule.export({\n  runTests: () => runTests\n});\nlet mocha;\nmodule.link(\"meteor/meteortesting:mocha-core\", {\n  mocha(v) {\n    mocha = v;\n  }\n\n}, 0);\nlet prepForHTMLReporter;\nmodule.link(\"./prepForHTMLReporter\", {\n  default(v) {\n    prepForHTMLReporter = v;\n  }\n\n}, 1);\nmodule.link(\"./browser-shim\");\nlet uncaughtExceptions = 0;\nwindow.addEventListener('error', () => {\n  uncaughtExceptions++;\n});\n\nfunction saveCoverage(config, done) {\n  if (!config) {\n    done();\n    return;\n  }\n\n  if (typeof Package === 'undefined' || !Package.meteor || !Package.meteor.Meteor || !Package.meteor.Meteor.sendCoverage) {\n    console.error('Coverage package missing or not correclty launched');\n    done();\n    return;\n  }\n\n  Package.meteor.Meteor.sendCoverage((stats, err) => {\n    console.log('Meteor-coverage is saving client side coverage to the server. Client js files saved ', JSON.stringify(stats));\n\n    if (err) {\n      console.error('Failed to send client coverage');\n    }\n\n    done();\n  });\n} // Run the client tests. Meteor calls the `runTests` function exported by\n// the driver package on the client.\n\n\nfunction runTests() {\n  // We need to set the reporter when the tests actually run. This ensures that the\n  // correct reporter is used in the case where another Mocha test driver package is also\n  // added to the app. Since both are testOnly packages, top-level client code in both\n  // will run, potentially changing the reporter.\n  const {\n    mochaOptions,\n    runnerOptions,\n    coverageOptions\n  } = Meteor.settings.public.mochaRuntimeArgs || {};\n  if (!runnerOptions.runClient) return;\n  const {\n    clientReporter,\n    grep,\n    invert,\n    reporter\n  } = mochaOptions || {};\n  if (grep) mocha.grep(grep);\n  if (invert) mocha.options.invert = invert; // The chrome/webdriver logging adapter seems to escape color\n  // codes, so we can't support colors for that adapter.\n  // Feel free to fix this if you know how.\n\n  if (runnerOptions.browserDriver !== 'chrome') {\n    mocha.options.useColors = true;\n  }\n\n  let currentReporter = clientReporter || reporter;\n\n  if (!currentReporter) {\n    currentReporter = runnerOptions.browserDriver ? 'spec' : 'html';\n  }\n\n  if (currentReporter === 'html') {\n    // If we're not running client tests automatically in a headless browser, then we\n    // probably are going to want to see an HTML reporter when we load the page.\n    prepForHTMLReporter(mocha);\n  }\n\n  mocha.reporter(currentReporter); // These `window` properties are all used by the client testing script in the\n  // browser-tests package to know what is happening.\n\n  window.testsAreRunning = true;\n  mocha.run(failures => {\n    saveCoverage(coverageOptions, () => {\n      window.testsAreRunning = false;\n      window.testFailures = failures + uncaughtExceptions;\n      window.testsDone = true;\n    });\n  });\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"browser-shim.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/meteortesting_mocha/browser-shim.js                                                                  //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\n/**\n * Sourced from: https://github.com/nathanboktae/mocha-phantomjs-core\n */\n(function () {\n  // A shim for non ES5 supporting browsers, like PhantomJS. Lovingly inspired by:\n  // http://www.angrycoding.com/2011/09/to-bind-or-not-to-bind-that-is-in.html\n  if (!('bind' in Function.prototype)) {\n    Function.prototype.bind = function () {\n      var funcObj = this;\n      var extraArgs = Array.prototype.slice.call(arguments);\n      var thisObj = extraArgs.shift();\n      return function () {\n        return funcObj.apply(thisObj, extraArgs.concat(Array.prototype.slice.call(arguments)));\n      };\n    };\n  }\n\n  function isFileReady(readyState) {\n    // Check to see if any of the ways a file can be ready are available as properties on the file's element\n    return !readyState || readyState == 'loaded' || readyState == 'complete' || readyState == 'uninitialized';\n  }\n\n  function shimMochaProcess(M) {\n    // Mocha needs a process.stdout.write in order to change the cursor position.\n    M.process = M.process || {};\n    M.process.stdout = M.process.stdout || process.stdout;\n\n    M.process.stdout.write = function (s) {\n      window.callPhantom({\n        stdout: s\n      });\n    };\n\n    window.callPhantom({\n      getColWith: true\n    });\n  }\n\n  function shimMochaInstance(m) {\n    var origRun = m.run,\n        origUi = m.ui;\n\n    m.ui = function () {\n      var retval = origUi.apply(mocha, arguments);\n      window.callPhantom({\n        configureMocha: true\n      });\n\n      m.reporter = function () {};\n\n      return retval;\n    };\n\n    m.run = function () {\n      window.callPhantom({\n        testRunStarted: m.suite.suites.length\n      });\n      m.runner = origRun.apply(mocha, arguments);\n\n      if (m.runner.stats && m.runner.stats.end) {\n        window.callPhantom({\n          testRunEnded: m.runner\n        });\n      } else {\n        m.runner.on('end', function () {\n          window.callPhantom({\n            testRunEnded: m.runner\n          });\n        });\n      }\n\n      return m.runner;\n    };\n  }\n\n  Object.defineProperty(window, 'checkForMocha', {\n    value: function () {\n      var scriptTags = document.querySelectorAll('script'),\n          mochaScript = Array.prototype.filter.call(scriptTags, function (s) {\n        var src = s.getAttribute('src');\n        return src && src.match(/mocha\\.js$/);\n      })[0];\n\n      if (mochaScript) {\n        mochaScript.onreadystatechange = mochaScript.onload = function () {\n          if (isFileReady(mochaScript.readyState)) {\n            initMochaPhantomJS();\n          }\n        };\n      }\n    }\n  });\n  Object.defineProperty(window, 'initMochaPhantomJS', {\n    value: function () {\n      shimMochaProcess(Mocha);\n      shimMochaInstance(mocha);\n      delete window.initMochaPhantomJS;\n    },\n    configurable: true\n  }); // Mocha needs the formating feature of console.log so copy node's format function and\n  // monkey-patch it into place. This code is copied from node's, links copyright applies.\n  // https://github.com/joyent/node/blob/master/lib/util.js\n\n  if (!console.format) {\n    console.format = function (f) {\n      if (typeof f !== 'string') {\n        return Array.prototype.map.call(arguments, function (arg) {\n          try {\n            return JSON.stringify(arg);\n          } catch (_) {\n            return '[Circular]';\n          }\n        }).join(' ');\n      }\n\n      var i = 1;\n      var args = arguments;\n      var len = args.length;\n      var str = String(f).replace(/%[sdj%]/g, function (x) {\n        if (x === '%%') return '%';\n        if (i >= len) return x;\n\n        switch (x) {\n          case '%s':\n            return String(args[i++]);\n\n          case '%d':\n            return Number(args[i++]);\n\n          case '%j':\n            try {\n              return JSON.stringify(args[i++]);\n            } catch (_) {\n              return '[Circular]';\n            }\n\n          default:\n            return x;\n        }\n      });\n\n      for (var x = args[i]; i < len; x = args[++i]) {\n        if (x === null || typeof x !== 'object') {\n          str += ' ' + x;\n        } else {\n          str += ' ' + JSON.stringify(x);\n        }\n      }\n\n      return str;\n    };\n\n    var origError = console.error;\n\n    console.error = function () {\n      origError.call(console, console.format.apply(console, arguments));\n    };\n\n    var origLog = console.log;\n\n    console.log = function () {\n      origLog.call(console, console.format.apply(console, arguments));\n    };\n  }\n})();\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"prepForHTMLReporter.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/meteortesting_mocha/prepForHTMLReporter.js                                                           //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\nmodule.export({\n  default: () => prepForHTMLReporter\n});\n\nfunction prepForHTMLReporter() {\n  // Add the CSS from CDN\n  const link = document.createElement('link');\n  link.setAttribute('rel', 'stylesheet');\n  link.setAttribute('href', 'https://cdn.rawgit.com/mochajs/mocha/2.2.5/mocha.css');\n  document.head.appendChild(link); // Add the div#mocha in which test results HTML will be placed\n\n  const div = document.createElement('div');\n  div.setAttribute('id', 'mocha');\n  document.body.appendChild(div);\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\nvar exports = require(\"/node_modules/meteor/meteortesting:mocha/client.js\");\n\n/* Exports */\nPackage._define(\"meteortesting:mocha\", exports);\n\n})();\n","servePath":"/packages/meteortesting_mocha.js","sourceMap":{"version":3,"sources":["packages/meteortesting:mocha/client.js","packages/meteortesting:mocha/browser-shim.js","packages/meteortesting:mocha/prepForHTMLReporter.js"],"names":["module","export","runTests","mocha","link","v","prepForHTMLReporter","default","uncaughtExceptions","window","addEventListener","saveCoverage","config","done","Package","meteor","Meteor","sendCoverage","console","error","stats","err","log","JSON","stringify","mochaOptions","runnerOptions","coverageOptions","settings","public","mochaRuntimeArgs","runClient","clientReporter","grep","invert","reporter","options","browserDriver","useColors","currentReporter","testsAreRunning","run","failures","testFailures","testsDone","Function","prototype","bind","funcObj","extraArgs","Array","slice","call","arguments","thisObj","shift","apply","concat","isFileReady","readyState","shimMochaProcess","M","process","stdout","write","s","callPhantom","getColWith","shimMochaInstance","m","origRun","origUi","ui","retval","configureMocha","testRunStarted","suite","suites","length","runner","end","testRunEnded","on","Object","defineProperty","value","scriptTags","document","querySelectorAll","mochaScript","filter","src","getAttribute","match","onreadystatechange","onload","initMochaPhantomJS","Mocha","configurable","format","f","map","arg","_","join","i","args","len","str","String","replace","x","Number","origError","origLog","createElement","setAttribute","head","appendChild","div","body"],"mappings":"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","file":"/packages/meteortesting_mocha.js","sourcesContent":["/* global Package: false */\nimport { mocha } from 'meteor/meteortesting:mocha-core';\nimport prepForHTMLReporter from './prepForHTMLReporter';\nimport './browser-shim';\n\nlet uncaughtExceptions = 0;\nwindow.addEventListener('error', () => {\n  uncaughtExceptions++;\n});\n\nfunction saveCoverage(config, done) {\n  if (!config) {\n    done();\n    return;\n  }\n\n  if (typeof Package === 'undefined' || !Package.meteor || !Package.meteor.Meteor || !Package.meteor.Meteor.sendCoverage) {\n    console.error('Coverage package missing or not correclty launched');\n    done();\n    return;\n  }\n\n  Package.meteor.Meteor.sendCoverage((stats, err) => {\n    console.log('Meteor-coverage is saving client side coverage to the server. Client js files saved ', JSON.stringify(stats));\n    if (err) {\n      console.error('Failed to send client coverage');\n    }\n\n    done();\n  });\n}\n\n// Run the client tests. Meteor calls the `runTests` function exported by\n// the driver package on the client.\nfunction runTests() {\n  // We need to set the reporter when the tests actually run. This ensures that the\n  // correct reporter is used in the case where another Mocha test driver package is also\n  // added to the app. Since both are testOnly packages, top-level client code in both\n  // will run, potentially changing the reporter.\n  const { mochaOptions, runnerOptions, coverageOptions } = Meteor.settings.public.mochaRuntimeArgs || {};\n\n  if (!runnerOptions.runClient) return;\n\n  const { clientReporter, grep, invert, reporter } = mochaOptions || {};\n  if (grep) mocha.grep(grep);\n  if (invert) mocha.options.invert = invert;\n\n  // The chrome/webdriver logging adapter seems to escape color\n  // codes, so we can't support colors for that adapter.\n  // Feel free to fix this if you know how.\n  if (runnerOptions.browserDriver !== 'chrome') {\n    mocha.options.useColors = true;\n  }\n\n  let currentReporter = clientReporter || reporter;\n  if (!currentReporter) {\n    currentReporter = runnerOptions.browserDriver ? 'spec' : 'html';\n  }\n\n  if (currentReporter === 'html') {\n    // If we're not running client tests automatically in a headless browser, then we\n    // probably are going to want to see an HTML reporter when we load the page.\n    prepForHTMLReporter(mocha);\n  }\n\n  mocha.reporter(currentReporter);\n\n  // These `window` properties are all used by the client testing script in the\n  // browser-tests package to know what is happening.\n  window.testsAreRunning = true;\n  mocha.run((failures) => {\n    saveCoverage(coverageOptions, () => {\n      window.testsAreRunning = false;\n      window.testFailures = failures + uncaughtExceptions;\n      window.testsDone = true;\n    });\n  });\n}\n\nexport { runTests };\n","/**\n * Sourced from: https://github.com/nathanboktae/mocha-phantomjs-core\n */\n(function(){\n\n    // A shim for non ES5 supporting browsers, like PhantomJS. Lovingly inspired by:\n    // http://www.angrycoding.com/2011/09/to-bind-or-not-to-bind-that-is-in.html\n    if (!('bind' in Function.prototype)) {\n        Function.prototype.bind = function() {\n            var funcObj = this;\n            var extraArgs = Array.prototype.slice.call(arguments);\n            var thisObj = extraArgs.shift();\n            return function() {\n                return funcObj.apply(thisObj, extraArgs.concat(Array.prototype.slice.call(arguments)));\n            };\n        };\n    }\n\n    function isFileReady(readyState) {\n        // Check to see if any of the ways a file can be ready are available as properties on the file's element\n        return (!readyState || readyState == 'loaded' || readyState == 'complete' || readyState == 'uninitialized')\n    }\n\n    function shimMochaProcess(M) {\n        // Mocha needs a process.stdout.write in order to change the cursor position.\n        M.process = M.process || {}\n        M.process.stdout = M.process.stdout || process.stdout\n        M.process.stdout.write = function(s) { window.callPhantom({ stdout: s }) }\n        window.callPhantom({ getColWith: true })\n    }\n\n    function shimMochaInstance(m) {\n        var origRun = m.run, origUi = m.ui\n        m.ui = function() {\n            var retval = origUi.apply(mocha, arguments)\n            window.callPhantom({ configureMocha: true })\n            m.reporter = function() {}\n            return retval\n        }\n        m.run = function() {\n            window.callPhantom({ testRunStarted: m.suite.suites.length })\n            m.runner = origRun.apply(mocha, arguments)\n            if (m.runner.stats && m.runner.stats.end) {\n                window.callPhantom({ testRunEnded: m.runner })\n            } else {\n                m.runner.on('end', function() {\n                    window.callPhantom({ testRunEnded: m.runner })\n                })\n            }\n            return m.runner\n        }\n    }\n\n    Object.defineProperty(window, 'checkForMocha', {\n        value: function() {\n            var scriptTags = document.querySelectorAll('script'),\n                mochaScript = Array.prototype.filter.call(scriptTags, function(s) {\n                    var src = s.getAttribute('src')\n                    return src && src.match(/mocha\\.js$/)\n                })[0]\n\n            if (mochaScript) {\n                mochaScript.onreadystatechange = mochaScript.onload = function () {\n                    if (isFileReady(mochaScript.readyState)) {\n                        initMochaPhantomJS()\n                    }\n                }\n            }\n        }\n    })\n\n    Object.defineProperty(window, 'initMochaPhantomJS', {\n        value: function () {\n            shimMochaProcess(Mocha)\n            shimMochaInstance(mocha)\n            delete window.initMochaPhantomJS\n        },\n        configurable: true\n    });\n\n    // Mocha needs the formating feature of console.log so copy node's format function and\n    // monkey-patch it into place. This code is copied from node's, links copyright applies.\n    // https://github.com/joyent/node/blob/master/lib/util.js\n    if (!console.format) {\n        console.format = function(f) {\n            if (typeof f !== 'string') {\n                return Array.prototype.map.call(arguments, function(arg) {\n                    try {\n                        return JSON.stringify(arg)\n                    }\n                    catch (_) {\n                        return '[Circular]'\n                    }\n                }).join(' ')\n            }\n            var i = 1;\n            var args = arguments;\n            var len = args.length;\n            var str = String(f).replace(/%[sdj%]/g, function(x) {\n                if (x === '%%') return '%';\n                if (i >= len) return x;\n                switch (x) {\n                    case '%s': return String(args[i++]);\n                    case '%d': return Number(args[i++]);\n                    case '%j':\n                        try {\n                            return JSON.stringify(args[i++]);\n                        } catch (_) {\n                            return '[Circular]';\n                        }\n                    default:\n                        return x;\n                }\n            });\n            for (var x = args[i]; i < len; x = args[++i]) {\n                if (x === null || typeof x !== 'object') {\n                    str += ' ' + x;\n                } else {\n                    str += ' ' + JSON.stringify(x);\n                }\n            }\n            return str;\n        };\n        var origError = console.error;\n        console.error = function(){ origError.call(console, console.format.apply(console, arguments)); };\n        var origLog = console.log;\n        console.log = function(){ origLog.call(console, console.format.apply(console, arguments)); };\n    }\n\n})();\n","export default function prepForHTMLReporter() {\n  // Add the CSS from CDN\n  const link = document.createElement('link');\n  link.setAttribute('rel', 'stylesheet');\n  link.setAttribute('href', 'https://cdn.rawgit.com/mochajs/mocha/2.2.5/mocha.css');\n  document.head.appendChild(link);\n\n  // Add the div#mocha in which test results HTML will be placed\n  const div = document.createElement('div');\n  div.setAttribute('id', 'mocha');\n  document.body.appendChild(div);\n}\n"]}}]