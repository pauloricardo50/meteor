[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Accounts = Package['accounts-base'].Accounts;\nvar check = Package.check.check;\nvar Match = Package.check.Match;\nvar Random = Package.random.Random;\nvar Session = Package.session.Session;\nvar ReactMeteorData = Package['react-meteor-data'].ReactMeteorData;\nvar meteorInstall = Package.modules.meteorInstall;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\n\n/* Package-scope variables */\nvar serviceName, message, labels;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"epotek:accounts-ui\":{\"check-npm.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/epotek_accounts-ui/check-npm.js                                                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n// import { checkNpmVersions } from 'meteor/tmeasday:check-npm-versions';\n//\n// checkNpmVersions({\n//   \"react\": \">=0.14.7 || ^15.0.0-rc.2\",\n//   \"react-dom\": \">=0.14.7 || ^15.0.0-rc.2\",\n// });\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main_client.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/epotek_accounts-ui/main_client.js                                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => LoginForm,\n  Accounts: () => Accounts,\n  STATES: () => STATES\n});\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 0);\nmodule.link(\"./imports/accounts_ui.js\");\nmodule.link(\"./imports/login_session.js\");\nlet STATES;\nmodule.link(\"./imports/helpers.js\", {\n  STATES(v) {\n    STATES = v;\n  }\n\n}, 1);\nmodule.link(\"./imports/api/client/loginWithoutPassword.js\");\nlet LoginForm;\nmodule.link(\"./imports/ui/components/LoginForm.jsx\", {\n  default(v) {\n    LoginForm = v;\n  }\n\n}, 2);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"imports\":{\"accounts_ui.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/epotek_accounts-ui/imports/accounts_ui.js                                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 0);\nlet redirect, validatePassword, validateEmail, validateUsername;\nmodule.link(\"./helpers.js\", {\n  redirect(v) {\n    redirect = v;\n  },\n\n  validatePassword(v) {\n    validatePassword = v;\n  },\n\n  validateEmail(v) {\n    validateEmail = v;\n  },\n\n  validateUsername(v) {\n    validateUsername = v;\n  }\n\n}, 1);\n\n/**\n * @summary Accounts UI\n * @namespace\n * @memberOf Accounts\n */\nAccounts.ui = {};\nAccounts.ui._options = {\n  requestPermissions: [],\n  requestOfflineToken: {},\n  forceApprovalPrompt: {},\n  requireEmailVerification: false,\n  passwordSignupFields: 'EMAIL_ONLY_NO_PASSWORD',\n  minimumPasswordLength: 7,\n  loginPath: '/',\n  signUpPath: null,\n  resetPasswordPath: null,\n  profilePath: '/',\n  changePasswordPath: null,\n  homeRoutePath: '/',\n  onSubmitHook: () => {},\n  onPreSignUpHook: () => new Promise(resolve => resolve()),\n  onPostSignUpHook: () => {},\n  onEnrollAccountHook: () => redirect(\"\".concat(Accounts.ui._options.loginPath)),\n  onResetPasswordHook: () => redirect(\"\".concat(Accounts.ui._options.loginPath)),\n  onVerifyEmailHook: () => redirect(\"\".concat(Accounts.ui._options.profilePath)),\n  onSignedInHook: () => redirect(\"\".concat(Accounts.ui._options.homeRoutePath)),\n  onSignedOutHook: () => redirect(\"\".concat(Accounts.ui._options.homeRoutePath)),\n  emailPattern: new RegExp('[^@]+@[^@.]{2,}.[^.@]+')\n};\n/**\n * @summary Configure the behavior of [`<Accounts.ui.LoginForm />`](#react-accounts-ui).\n * @anywhere\n * @param {Object} options\n * @param {Object} options.requestPermissions Which [permissions](#requestpermissions) to request from the user for each external service.\n * @param {Object} options.requestOfflineToken To ask the user for permission to act on their behalf when offline, map the relevant external service to `true`. Currently only supported with Google. See [Meteor.loginWithExternalService](#meteor_loginwithexternalservice) for more details.\n * @param {Object} options.forceApprovalPrompt If true, forces the user to approve the app's permissions, even if previously approved. Currently only supported with Google.\n * @param {String} options.passwordSignupFields Which fields to display in the user creation form. One of '`USERNAME_AND_EMAIL`', '`USERNAME_AND_OPTIONAL_EMAIL`', '`USERNAME_ONLY`', '`EMAIL_ONLY`', or '`NO_PASSWORD`' (default).\n */\n\nAccounts.ui.config = function (options) {\n  // validate options keys\n  const VALID_KEYS = ['passwordSignupFields', 'requestPermissions', 'requestOfflineToken', 'forbidClientAccountCreation', 'requireEmailVerification', 'minimumPasswordLength', 'loginPath', 'signUpPath', 'resetPasswordPath', 'profilePath', 'changePasswordPath', 'homeRoutePath', 'onSubmitHook', 'onPreSignUpHook', 'onPostSignUpHook', 'onEnrollAccountHook', 'onResetPasswordHook', 'onVerifyEmailHook', 'onSignedInHook', 'onSignedOutHook', 'validateField', 'emailPattern'];\n  Object.keys(options).forEach(function (key) {\n    if (!VALID_KEYS.includes(key)) throw new Error('Accounts.ui.config: Invalid key: ' + key);\n  }); // Deal with `passwordSignupFields`\n\n  if (options.passwordSignupFields) {\n    if (['USERNAME_AND_EMAIL', 'USERNAME_AND_OPTIONAL_EMAIL', 'USERNAME_ONLY', 'EMAIL_ONLY', 'EMAIL_ONLY_NO_PASSWORD', 'USERNAME_AND_EMAIL_NO_PASSWORD'].includes(options.passwordSignupFields)) {\n      Accounts.ui._options.passwordSignupFields = options.passwordSignupFields;\n    } else {\n      throw new Error('Accounts.ui.config: Invalid option for `passwordSignupFields`: ' + options.passwordSignupFields);\n    }\n  } // Deal with `requestPermissions`\n\n\n  if (options.requestPermissions) {\n    Object.keys(options.requestPermissions).forEach(service => {\n      const scope = options.requestPermissions[service];\n\n      if (Accounts.ui._options.requestPermissions[service]) {\n        throw new Error(\"Accounts.ui.config: Can't set `requestPermissions` more than once for \" + service);\n      } else if (!(scope instanceof Array)) {\n        throw new Error('Accounts.ui.config: Value for `requestPermissions` must be an array');\n      } else {\n        Accounts.ui._options.requestPermissions[service] = scope;\n      }\n    });\n  } // Deal with `requestOfflineToken`\n\n\n  if (options.requestOfflineToken) {\n    Object.keys(options.requestOfflineToken).forEach(service => {\n      const value = options.requestOfflineToken[service];\n      if (service !== 'google') throw new Error('Accounts.ui.config: `requestOfflineToken` only supported for Google login at the moment.');\n\n      if (Accounts.ui._options.requestOfflineToken[service]) {\n        throw new Error(\"Accounts.ui.config: Can't set `requestOfflineToken` more than once for \" + service);\n      } else {\n        Accounts.ui._options.requestOfflineToken[service] = value;\n      }\n    });\n  } // Deal with `forceApprovalPrompt`\n\n\n  if (options.forceApprovalPrompt) {\n    Object.keys(options.forceApprovalPrompt).forEach(service => {\n      const value = options.forceApprovalPrompt[service];\n      if (service !== 'google') throw new Error('Accounts.ui.config: `forceApprovalPrompt` only supported for Google login at the moment.');\n\n      if (Accounts.ui._options.forceApprovalPrompt[service]) {\n        throw new Error(\"Accounts.ui.config: Can't set `forceApprovalPrompt` more than once for \" + service);\n      } else {\n        Accounts.ui._options.forceApprovalPrompt[service] = value;\n      }\n    });\n  } // Deal with `requireEmailVerification`\n\n\n  if (options.requireEmailVerification) {\n    if (typeof options.requireEmailVerification != 'boolean') {\n      throw new Error(\"Accounts.ui.config: \\\"requireEmailVerification\\\" not a boolean\");\n    } else {\n      Accounts.ui._options.requireEmailVerification = options.requireEmailVerification;\n    }\n  } // Deal with `minimumPasswordLength`\n\n\n  if (options.minimumPasswordLength) {\n    if (typeof options.minimumPasswordLength != 'number') {\n      throw new Error(\"Accounts.ui.config: \\\"minimumPasswordLength\\\" not a number\");\n    } else {\n      Accounts.ui._options.minimumPasswordLength = options.minimumPasswordLength;\n    }\n  } // Deal with the hooks.\n\n\n  var _arr = ['onSubmitHook', 'onPreSignUpHook', 'onPostSignUpHook'];\n\n  for (var _i = 0; _i < _arr.length; _i++) {\n    let hook = _arr[_i];\n\n    if (options[hook]) {\n      if (typeof options[hook] != 'function') {\n        throw new Error(\"Accounts.ui.config: \\\"\".concat(hook, \"\\\" not a function\"));\n      } else {\n        Accounts.ui._options[hook] = options[hook];\n      }\n    }\n  } // Deal with pattern.\n\n\n  var _arr2 = ['emailPattern'];\n\n  for (var _i2 = 0; _i2 < _arr2.length; _i2++) {\n    let hook = _arr2[_i2];\n\n    if (options[hook]) {\n      if (!(options[hook] instanceof RegExp)) {\n        throw new Error(\"Accounts.ui.config: \\\"\".concat(hook, \"\\\" not a Regular Expression\"));\n      } else {\n        Accounts.ui._options[hook] = options[hook];\n      }\n    }\n  } // deal with the paths.\n\n\n  var _arr3 = ['loginPath', 'signUpPath', 'resetPasswordPath', 'profilePath', 'changePasswordPath', 'homeRoutePath'];\n\n  for (var _i3 = 0; _i3 < _arr3.length; _i3++) {\n    let path = _arr3[_i3];\n\n    if (typeof options[path] !== 'undefined') {\n      if (options[path] !== null && typeof options[path] !== 'string') {\n        throw new Error(\"Accounts.ui.config: \".concat(path, \" is not a string or null\"));\n      } else {\n        Accounts.ui._options[path] = options[path];\n      }\n    }\n  } // deal with redirect hooks.\n\n\n  var _arr4 = ['onEnrollAccountHook', 'onResetPasswordHook', 'onVerifyEmailHook', 'onSignedInHook', 'onSignedOutHook'];\n\n  for (var _i4 = 0; _i4 < _arr4.length; _i4++) {\n    let hook = _arr4[_i4];\n\n    if (options[hook]) {\n      if (typeof options[hook] == 'function') {\n        Accounts.ui._options[hook] = options[hook];\n      } else if (typeof options[hook] == 'string') {\n        Accounts.ui._options[hook] = () => redirect(options[hook]);\n      } else {\n        throw new Error(\"Accounts.ui.config: \\\"\".concat(hook, \"\\\" not a function or an absolute or relative path\"));\n      }\n    }\n  }\n};\n\nmodule.exportDefault(Accounts);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"helpers.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/epotek_accounts-ui/imports/helpers.js                                                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  loginButtonsSession: () => loginButtonsSession,\n  STATES: () => STATES,\n  getLoginServices: () => getLoginServices,\n  hasPasswordService: () => hasPasswordService,\n  loginResultCallback: () => loginResultCallback,\n  passwordSignupFields: () => passwordSignupFields,\n  validateEmail: () => validateEmail,\n  validatePassword: () => validatePassword,\n  validateUsername: () => validateUsername,\n  redirect: () => redirect,\n  capitalize: () => capitalize\n});\nlet browserHistory;\n\ntry {\n  browserHistory = require('react-router').browserHistory;\n} catch (e) {}\n\nconst loginButtonsSession = Accounts._loginButtonsSession;\nconst STATES = {\n  SIGN_IN: Symbol('SIGN_IN'),\n  SIGN_UP: Symbol('SIGN_UP'),\n  PROFILE: Symbol('PROFILE'),\n  PASSWORD_CHANGE: Symbol('PASSWORD_CHANGE'),\n  PASSWORD_RESET: Symbol('PASSWORD_RESET'),\n  ENROLL_ACCOUNT: Symbol('ENROLL_ACCOUNT')\n};\n\nfunction getLoginServices() {\n  // First look for OAuth services.\n  const services = Package['accounts-oauth'] ? Accounts.oauth.serviceNames() : []; // Be equally kind to all login services. This also preserves\n  // backwards-compatibility.\n\n  services.sort();\n  return services.map(function (name) {\n    return {\n      name: name\n    };\n  });\n}\n\n// Export getLoginServices using old style globals for accounts-base which\n// requires it.\nthis.getLoginServices = getLoginServices;\n\nfunction hasPasswordService() {\n  // First look for OAuth services.\n  return !!Package['accounts-password'];\n}\n\nfunction loginResultCallback(service, err) {\n  if (!err) {} else if (err instanceof Accounts.LoginCancelledError) {// do nothing\n  } else if (err instanceof ServiceConfiguration.ConfigError) {} else {//loginButtonsSession.errorMessage(err.reason || \"Unknown error\");\n  }\n\n  if (Meteor.isClient) {\n    if (typeof redirect === 'string') {\n      window.location.href = '/';\n    }\n\n    if (typeof service === 'function') {\n      service();\n    }\n  }\n}\n\nfunction passwordSignupFields() {\n  return Accounts.ui._options.passwordSignupFields || 'EMAIL_ONLY_NO_PASSWORD';\n}\n\nfunction validateEmail(email, showMessage, clearMessage) {\n  if (passwordSignupFields() === 'USERNAME_AND_OPTIONAL_EMAIL' && email === '') {\n    return true;\n  }\n\n  if (Accounts.ui._options.emailPattern.test(email)) {\n    return true;\n  } else if (!email || email.length === 0) {\n    showMessage('error.emailRequired', 'warning', false, 'email');\n    return false;\n  } else {\n    showMessage('error.accounts.Invalid email', 'warning', false, 'email');\n    return false;\n  }\n}\n\nfunction validatePassword() {\n  let password = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  let showMessage = arguments.length > 1 ? arguments[1] : undefined;\n  let clearMessage = arguments.length > 2 ? arguments[2] : undefined;\n\n  if (password.length >= Accounts.ui._options.minimumPasswordLength) {\n    return true;\n  } else {\n    // const errMsg = T9n.get(\"error.minChar\").replace(/7/, Accounts.ui._options.minimumPasswordLength);\n    const errMsg = 'error.minChar';\n    showMessage(errMsg, 'warning', false, 'password');\n    return false;\n  }\n}\n\nfunction validateUsername(username, showMessage, clearMessage, formState) {\n  if (username) {\n    return true;\n  } else {\n    const fieldName = passwordSignupFields() === 'USERNAME_ONLY' || formState === STATES.SIGN_UP ? 'username' : 'usernameOrEmail';\n    showMessage('error.usernameRequired', 'warning', false, fieldName);\n    return false;\n  }\n}\n\nfunction redirect(redirect) {\n  if (Meteor.isClient) {\n    if (window.history) {\n      // Run after all app specific redirects, i.e. to the login screen.\n      Meteor.setTimeout(() => {\n        if (Package['kadira:flow-router']) {\n          Package['kadira:flow-router'].FlowRouter.go(redirect);\n        } else if (Package['kadira:flow-router-ssr']) {\n          Package['kadira:flow-router-ssr'].FlowRouter.go(redirect);\n        } else if (browserHistory) {\n          browserHistory.push(redirect);\n        } else {\n          window.history.pushState({}, 'redirect', redirect);\n        }\n      }, 100);\n    }\n  }\n}\n\nfunction capitalize(string) {\n  return string.replace(/\\-/, ' ').split(' ').map(word => {\n    return word.charAt(0).toUpperCase() + word.slice(1);\n  }).join(' ');\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"login_session.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/epotek_accounts-ui/imports/login_session.js                                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  validateKey: () => validateKey,\n  KEY_PREFIX: () => KEY_PREFIX\n});\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 0);\nlet STATES, loginResultCallback, getLoginServices;\nmodule.link(\"./helpers.js\", {\n  STATES(v) {\n    STATES = v;\n  },\n\n  loginResultCallback(v) {\n    loginResultCallback = v;\n  },\n\n  getLoginServices(v) {\n    getLoginServices = v;\n  }\n\n}, 1);\nconst VALID_KEYS = ['dropdownVisible', // XXX consider replacing these with one key that has an enum for values.\n'inSignupFlow', 'inForgotPasswordFlow', 'inChangePasswordFlow', 'inMessageOnlyFlow', 'errorMessage', 'infoMessage', // dialogs with messages (info and error)\n'resetPasswordToken', 'enrollAccountToken', 'justVerifiedEmail', 'justResetPassword', 'configureLoginServiceDialogVisible', 'configureLoginServiceDialogServiceName', 'configureLoginServiceDialogSaveDisabled', 'configureOnDesktopVisible'];\n\nconst validateKey = function (key) {\n  if (!VALID_KEYS.includes(key)) throw new Error('Invalid key in loginButtonsSession: ' + key);\n};\n\nconst KEY_PREFIX = 'Meteor.loginButtons.';\n// XXX This should probably be package scope rather than exported\n// (there was even a comment to that effect here from before we had\n// namespacing) but accounts-ui-viewer uses it, so leave it as is for\n// now\nAccounts._loginButtonsSession = {\n  set: function (key, value) {\n    validateKey(key);\n    if (['errorMessage', 'infoMessage'].includes(key)) throw new Error(\"Don't set errorMessage or infoMessage directly. Instead, use errorMessage() or infoMessage().\");\n\n    this._set(key, value);\n  },\n  _set: function (key, value) {\n    Session.set(KEY_PREFIX + key, value);\n  },\n  get: function (key) {\n    validateKey(key);\n    return Session.get(KEY_PREFIX + key);\n  }\n};\n\nif (Meteor.isClient) {\n  // In the login redirect flow, we'll have the result of the login\n  // attempt at page load time when we're redirected back to the\n  // application.  Register a callback to update the UI (i.e. to close\n  // the dialog on a successful login or display the error on a failed\n  // login).\n  //\n  Accounts.onPageLoadLogin(function (attemptInfo) {\n    // Ignore if we have a left over login attempt for a service that is no longer registered.\n    if (getLoginServices().map((_ref) => {\n      let {\n        name\n      } = _ref;\n      return name;\n    }).includes(attemptInfo.type)) loginResultCallback(attemptInfo.type, attemptInfo.error);\n  });\n  let doneCallback;\n  Accounts.onResetPasswordLink(function (token, done) {\n    Accounts._loginButtonsSession.set('resetPasswordToken', token);\n\n    Session.set(KEY_PREFIX + 'state', 'resetPasswordToken');\n    doneCallback = done;\n\n    Accounts.ui._options.onResetPasswordHook();\n  });\n  Accounts.onEnrollmentLink(function (token, done) {\n    Accounts._loginButtonsSession.set('enrollAccountToken', token);\n\n    Session.set(KEY_PREFIX + 'state', 'enrollAccountToken');\n    doneCallback = done;\n\n    Accounts.ui._options.onEnrollAccountHook();\n  });\n  Accounts.onEmailVerificationLink(function (token, done) {\n    Accounts.verifyEmail(token, function (error) {\n      if (!error) {\n        Accounts._loginButtonsSession.set('justVerifiedEmail', true);\n\n        Session.set(KEY_PREFIX + 'state', 'justVerifiedEmail');\n\n        Accounts.ui._options.onSignedInHook();\n      } else {\n        Accounts.ui._options.onVerifyEmailHook();\n      }\n\n      done();\n    });\n  });\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"api\":{\"client\":{\"loginWithoutPassword.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/epotek_accounts-ui/imports/api/client/loginWithoutPassword.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * @summary Request a forgot password email.\n * @locus Client\n * @param {Object} options\n * @param {String} options.email The email address to send a password reset link.\n * @param {Function} [callback] Optional callback. Called with no arguments on success, or with a single `Error` argument on failure.\n */\nAccounts.loginWithoutPassword = function (options, callback) {\n  if (!options.email) throw new Error('Must pass options.email');\n  Accounts.connection.call('loginWithoutPassword', options, callback);\n};\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"ui\":{\"components\":{\"Button.jsx\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/epotek_accounts-ui/imports/ui/components/Button.jsx                                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  Button: () => Button\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 2);\nlet Link;\n\ntry {\n  Link = require('react-router').Link;\n} catch (e) {}\n\nclass Button extends React.Component {\n  render() {\n    const {\n      label,\n      href = null,\n      type,\n      disabled = false,\n      className,\n      onClick\n    } = this.props;\n\n    if (type == 'link') {\n      // Support React Router.\n      if (Link && href) {\n        return React.createElement(Link, {\n          to: href,\n          className: className\n        }, label);\n      } else {\n        return React.createElement(\"a\", {\n          href: href,\n          className: className,\n          onClick: onClick\n        }, label);\n      }\n    }\n\n    return React.createElement(\"button\", {\n      className: className,\n      type: type,\n      disabled: disabled,\n      onClick: onClick\n    }, label);\n  }\n\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func\n};\nAccounts.ui.Button = Button;\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Buttons.jsx\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/epotek_accounts-ui/imports/ui/components/Buttons.jsx                                                      //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nmodule.export({\n  Buttons: () => Buttons\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nmodule.link(\"./Button.jsx\");\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 1);\n\nclass Buttons extends React.Component {\n  render() {\n    let {\n      buttons = {},\n      className = 'buttons'\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: className\n    }, Object.keys(buttons).map((id, i) => React.createElement(Accounts.ui.Button, (0, _extends2.default)({}, buttons[id], {\n      key: i\n    }))));\n  }\n\n}\n\nAccounts.ui.Buttons = Buttons;\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Field.jsx\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/epotek_accounts-ui/imports/ui/components/Field.jsx                                                        //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  Field: () => Field\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 2);\n\nclass Field extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mount: true\n    };\n  }\n\n  triggerUpdate() {\n    // Trigger an onChange on inital load, to support browser prefilled values.\n    const {\n      onChange\n    } = this.props;\n\n    if (this.input && onChange) {\n      onChange({\n        target: {\n          value: this.input.value\n        }\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.triggerUpdate();\n  }\n\n  componentDidUpdate(prevProps) {\n    // Re-mount component so that we don't expose browser prefilled passwords if the component was\n    // a password before and now something else.\n    if (prevProps.id !== this.props.id) {\n      this.setState({\n        mount: false\n      });\n    } else if (!this.state.mount) {\n      this.setState({\n        mount: true\n      });\n      this.triggerUpdate();\n    }\n  }\n\n  render() {\n    const {\n      id,\n      hint,\n      label,\n      type = 'text',\n      onChange,\n      required = false,\n      className = 'field',\n      defaultValue = '',\n      message\n    } = this.props;\n    const {\n      mount = true\n    } = this.state;\n\n    if (type == 'notice') {\n      return React.createElement(\"div\", {\n        className: className\n      }, label);\n    }\n\n    return mount ? React.createElement(\"div\", {\n      className: className\n    }, React.createElement(\"label\", {\n      htmlFor: id\n    }, label), React.createElement(\"input\", {\n      id: id,\n      ref: ref => this.input = ref,\n      type: type,\n      onChange: onChange,\n      placeholder: hint,\n      defaultValue: defaultValue\n    }), message && React.createElement(\"span\", {\n      className: ['message', message.type].join(' ').trim()\n    }, message.message)) : null;\n  }\n\n}\n\nField.propTypes = {\n  onChange: PropTypes.func\n};\nAccounts.ui.Field = Field;\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Fields.jsx\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/epotek_accounts-ui/imports/ui/components/Fields.jsx                                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nmodule.export({\n  Fields: () => Fields\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 1);\nmodule.link(\"./Field.jsx\");\n\nclass Fields extends React.Component {\n  render() {\n    let {\n      fields = {},\n      className = 'fields'\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: className\n    }, Object.keys(fields).map((id, i) => React.createElement(Accounts.ui.Field, (0, _extends2.default)({}, fields[id], {\n      key: i\n    }))));\n  }\n\n}\n\nAccounts.ui.Fields = Fields;\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Form.jsx\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/epotek_accounts-ui/imports/ui/components/Form.jsx                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  Form: () => Form\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet ReactDOM;\nmodule.link(\"react-dom\", {\n  default(v) {\n    ReactDOM = v;\n  }\n\n}, 2);\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 3);\nmodule.link(\"./Fields.jsx\");\nmodule.link(\"./Buttons.jsx\");\nmodule.link(\"./FormMessage.jsx\");\nmodule.link(\"./PasswordOrService.jsx\");\nmodule.link(\"./SocialButtons.jsx\");\nmodule.link(\"./FormMessages.jsx\");\n\nclass Form extends React.Component {\n  componentDidMount() {\n    let form = this.form;\n\n    if (form) {\n      form.addEventListener('submit', e => {\n        e.preventDefault();\n      });\n    }\n  }\n\n  render() {\n    const {\n      hasPasswordService,\n      oauthServices,\n      fields,\n      buttons,\n      error,\n      messages,\n      translate,\n      ready = true,\n      className\n    } = this.props;\n    return React.createElement(\"form\", {\n      ref: ref => this.form = ref,\n      className: [className, ready ? 'ready' : null].join(' '),\n      className: \"accounts-ui\",\n      noValidate: true\n    }, React.createElement(Accounts.ui.Fields, {\n      fields: fields\n    }), React.createElement(Accounts.ui.Buttons, {\n      buttons: buttons\n    }), React.createElement(Accounts.ui.PasswordOrService, {\n      oauthServices: oauthServices,\n      translate: translate\n    }), React.createElement(Accounts.ui.SocialButtons, {\n      oauthServices: oauthServices\n    }), React.createElement(Accounts.ui.FormMessages, {\n      messages: messages\n    }));\n  }\n\n}\n\nForm.propTypes = {\n  oauthServices: PropTypes.object,\n  fields: PropTypes.object.isRequired,\n  buttons: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n  error: PropTypes.string,\n  ready: PropTypes.bool\n};\nAccounts.ui.Form = Form;\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"FormMessage.jsx\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/epotek_accounts-ui/imports/ui/components/FormMessage.jsx                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  FormMessage: () => FormMessage\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 1);\n\nfunction isObject(obj) {\n  return obj === Object(obj);\n}\n\nclass FormMessage extends React.Component {\n  render() {\n    let {\n      message,\n      type,\n      className = 'message',\n      style = {},\n      deprecated\n    } = this.props; // XXX Check for deprecations.\n\n    if (deprecated) {\n      // Found backwords compatibility issue.\n      console.warn('You are overriding Accounts.ui.Form and using FormMessage, the use of FormMessage in Form has been depreacted in v1.2.11, update your implementation to use FormMessages: https://github.com/studiointeract/accounts-ui/#deprecations');\n    }\n\n    message = isObject(message) ? message.message : message; // If message is object, then try to get message from it\n\n    return message ? React.createElement(\"div\", {\n      style: style,\n      className: [className, type].join(' ')\n    }, message) : null;\n  }\n\n}\n\nAccounts.ui.FormMessage = FormMessage;\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"FormMessages.jsx\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/epotek_accounts-ui/imports/ui/components/FormMessages.jsx                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  FormMessages: () => FormMessages\n});\nlet React, Component;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 1);\n\nclass FormMessages extends Component {\n  render() {\n    const {\n      messages = [],\n      className = 'messages',\n      style = {}\n    } = this.props;\n    return messages.length > 0 && React.createElement(\"div\", {\n      className: \"messages\"\n    }, messages.filter(message => !('field' in message)).map((_ref, i) => {\n      let {\n        message,\n        type\n      } = _ref;\n      return React.createElement(Accounts.ui.FormMessage, {\n        message: message,\n        type: type,\n        key: i\n      });\n    }));\n  }\n\n}\n\nAccounts.ui.FormMessages = FormMessages;\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"LoginForm.jsx\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/epotek_accounts-ui/imports/ui/components/LoginForm.jsx                                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet React, Component;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet ReactDOM;\nmodule.link(\"react-dom\", {\n  default(v) {\n    ReactDOM = v;\n  }\n\n}, 2);\nlet withTracker;\nmodule.link(\"meteor/react-meteor-data\", {\n  withTracker(v) {\n    withTracker = v;\n  }\n\n}, 3);\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 4);\nlet T9n;\nmodule.link(\"meteor-accounts-t9n\", {\n  T9n(v) {\n    T9n = v;\n  }\n\n}, 5);\nlet KEY_PREFIX;\nmodule.link(\"../../login_session.js\", {\n  KEY_PREFIX(v) {\n    KEY_PREFIX = v;\n  }\n\n}, 6);\nmodule.link(\"./Form.jsx\");\nlet STATES, passwordSignupFields, validateEmail, validatePassword, validateUsername, loginResultCallback, getLoginServices, hasPasswordService, capitalize;\nmodule.link(\"../../helpers.js\", {\n  STATES(v) {\n    STATES = v;\n  },\n\n  passwordSignupFields(v) {\n    passwordSignupFields = v;\n  },\n\n  validateEmail(v) {\n    validateEmail = v;\n  },\n\n  validatePassword(v) {\n    validatePassword = v;\n  },\n\n  validateUsername(v) {\n    validateUsername = v;\n  },\n\n  loginResultCallback(v) {\n    loginResultCallback = v;\n  },\n\n  getLoginServices(v) {\n    getLoginServices = v;\n  },\n\n  hasPasswordService(v) {\n    hasPasswordService = v;\n  },\n\n  capitalize(v) {\n    capitalize = v;\n  }\n\n}, 7);\n\nfunction indexBy(array, key) {\n  const result = {};\n  array.forEach(function (obj) {\n    result[obj[key]] = obj;\n  });\n  return result;\n}\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n    let {\n      formState,\n      loginPath,\n      signUpPath,\n      resetPasswordPath,\n      profilePath,\n      changePasswordPath\n    } = props;\n\n    if (formState === STATES.SIGN_IN && Package['accounts-password']) {\n      console.warn('Do not force the state to SIGN_IN on Accounts.ui.LoginForm, it will make it impossible to reset password in your app, this state is also the default state if logged out, so no need to force it.');\n    } // Set inital state.\n\n\n    this.state = {\n      messages: [],\n      waiting: true,\n      formState: formState ? formState : Accounts.user() ? STATES.PROFILE : STATES.SIGN_IN,\n      onSubmitHook: props.onSubmitHook || Accounts.ui._options.onSubmitHook,\n      onSignedInHook: props.onSignedInHook || Accounts.ui._options.onSignedInHook,\n      onSignedOutHook: props.onSignedOutHook || Accounts.ui._options.onSignedOutHook,\n      onPreSignUpHook: props.onPreSignUpHook || Accounts.ui._options.onPreSignUpHook,\n      onPostSignUpHook: props.onPostSignUpHook || Accounts.ui._options.onPostSignUpHook\n    };\n    this.translate = this.translate.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState(prevState => ({\n      waiting: false,\n      ready: true\n    }));\n    let changeState = Session.get(KEY_PREFIX + 'state');\n\n    switch (changeState) {\n      case 'enrollAccountToken':\n        this.setState(prevState => ({\n          formState: STATES.ENROLL_ACCOUNT\n        }));\n        Session.set(KEY_PREFIX + 'state', null);\n        break;\n\n      case 'resetPasswordToken':\n        this.setState(prevState => ({\n          formState: STATES.PASSWORD_CHANGE\n        }));\n        Session.set(KEY_PREFIX + 'state', null);\n        break;\n\n      case 'justVerifiedEmail':\n        this.setState(prevState => ({\n          formState: STATES.PROFILE\n        }));\n        Session.set(KEY_PREFIX + 'state', null);\n        break;\n    } // Add default field values once the form did mount on the client\n\n\n    this.setState(prevState => (0, _objectSpread2.default)({}, this.getDefaultFieldValues()));\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    if (nextProps.formState && nextProps.formState !== this.state.formState) {\n      this.setState((0, _objectSpread2.default)({\n        formState: nextProps.formState\n      }, this.getDefaultFieldValues()));\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (!prevProps.user !== !this.props.user) {\n      this.setState({\n        formState: this.props.user ? STATES.PROFILE : STATES.SIGN_IN\n      });\n    }\n  }\n\n  translate(text) {\n    // if (this.props.t) {\n    //   return this.props.t(text);\n    // }\n    return T9n.get(text);\n  }\n\n  validateField(field, value) {\n    const {\n      formState\n    } = this.state;\n\n    switch (field) {\n      case 'email':\n        return validateEmail(value, this.showMessage.bind(this), this.clearMessage.bind(this));\n\n      case 'password':\n        return validatePassword(value, this.showMessage.bind(this), this.clearMessage.bind(this));\n\n      case 'username':\n        return validateUsername(value, this.showMessage.bind(this), this.clearMessage.bind(this), formState);\n    }\n  }\n\n  getUsernameOrEmailField() {\n    return {\n      id: 'usernameOrEmail',\n      hint: this.translate('enterUsernameOrEmail'),\n      label: this.translate('usernameOrEmail'),\n      required: true,\n      defaultValue: this.state.username || '',\n      onChange: this.handleChange.bind(this, 'usernameOrEmail'),\n      message: this.getMessageForField('usernameOrEmail')\n    };\n  }\n\n  getUsernameField() {\n    return {\n      id: 'username',\n      hint: this.translate('enterUsername'),\n      label: this.translate('username'),\n      required: true,\n      defaultValue: this.state.username || '',\n      onChange: this.handleChange.bind(this, 'username'),\n      message: this.getMessageForField('username')\n    };\n  }\n\n  getEmailField() {\n    return {\n      id: 'email',\n      hint: this.translate('enterEmail'),\n      label: this.translate('email'),\n      type: 'email',\n      required: true,\n      defaultValue: this.state.email || '',\n      onChange: this.handleChange.bind(this, 'email'),\n      message: this.getMessageForField('email')\n    };\n  }\n\n  getPasswordField() {\n    return {\n      id: 'password',\n      hint: this.translate('enterPassword'),\n      label: this.translate('password'),\n      type: 'password',\n      required: true,\n      defaultValue: this.state.password || '',\n      onChange: this.handleChange.bind(this, 'password'),\n      message: this.getMessageForField('password')\n    };\n  }\n\n  getSetPasswordField() {\n    return {\n      id: 'newPassword',\n      hint: this.translate('enterPassword'),\n      label: this.translate('choosePassword'),\n      type: 'password',\n      required: true,\n      onChange: this.handleChange.bind(this, 'newPassword')\n    };\n  }\n\n  getNewPasswordField() {\n    return {\n      id: 'newPassword',\n      hint: this.translate('enterNewPassword'),\n      label: this.translate('newPassword'),\n      type: 'password',\n      required: true,\n      onChange: this.handleChange.bind(this, 'newPassword'),\n      message: this.getMessageForField('newPassword')\n    };\n  }\n\n  handleChange(field, evt) {\n    let value = evt.target.value;\n\n    switch (field) {\n      case 'password':\n        break;\n\n      default:\n        value = value.trim();\n        break;\n    }\n\n    this.setState({\n      [field]: value\n    });\n    this.setDefaultFieldValues({\n      [field]: value\n    });\n  }\n\n  fields() {\n    const loginFields = [];\n    const {\n      formState\n    } = this.state;\n\n    if (!hasPasswordService() && getLoginServices().length == 0) {\n      loginFields.push({\n        label: 'No login service added, i.e. accounts-password',\n        type: 'notice'\n      });\n    }\n\n    if (hasPasswordService() && formState == STATES.SIGN_IN) {\n      if (['USERNAME_AND_EMAIL', 'USERNAME_AND_OPTIONAL_EMAIL', 'USERNAME_AND_EMAIL_NO_PASSWORD'].includes(passwordSignupFields())) {\n        loginFields.push(this.getUsernameOrEmailField());\n      }\n\n      if (passwordSignupFields() === 'USERNAME_ONLY') {\n        loginFields.push(this.getUsernameField());\n      }\n\n      if (['EMAIL_ONLY', 'EMAIL_ONLY_NO_PASSWORD'].includes(passwordSignupFields())) {\n        loginFields.push(this.getEmailField());\n      }\n\n      if (!['EMAIL_ONLY_NO_PASSWORD', 'USERNAME_AND_EMAIL_NO_PASSWORD'].includes(passwordSignupFields())) {\n        loginFields.push(this.getPasswordField());\n      }\n    }\n\n    if (hasPasswordService() && formState == STATES.SIGN_UP) {\n      if (['USERNAME_AND_EMAIL', 'USERNAME_AND_OPTIONAL_EMAIL', 'USERNAME_ONLY', 'USERNAME_AND_EMAIL_NO_PASSWORD'].includes(passwordSignupFields())) {\n        loginFields.push(this.getUsernameField());\n      }\n\n      if (['USERNAME_AND_EMAIL', 'EMAIL_ONLY', 'EMAIL_ONLY_NO_PASSWORD', 'USERNAME_AND_EMAIL_NO_PASSWORD'].includes(passwordSignupFields())) {\n        loginFields.push(this.getEmailField());\n      }\n\n      if (['USERNAME_AND_OPTIONAL_EMAIL'].includes(passwordSignupFields())) {\n        loginFields.push(Object.assign(this.getEmailField(), {\n          required: false\n        }));\n      }\n\n      if (!['EMAIL_ONLY_NO_PASSWORD', 'USERNAME_AND_EMAIL_NO_PASSWORD'].includes(passwordSignupFields())) {\n        loginFields.push(this.getPasswordField());\n      }\n    }\n\n    if (formState == STATES.PASSWORD_RESET) {\n      loginFields.push(this.getEmailField());\n    }\n\n    if (this.showPasswordChangeForm()) {\n      if (Meteor.isClient && !Accounts._loginButtonsSession.get('resetPasswordToken')) {\n        loginFields.push(this.getPasswordField());\n      }\n\n      loginFields.push(this.getNewPasswordField());\n    }\n\n    if (this.showEnrollAccountForm()) {\n      loginFields.push(this.getSetPasswordField());\n    }\n\n    return indexBy(loginFields, 'id');\n  }\n\n  buttons() {\n    const {\n      loginPath = Accounts.ui._options.loginPath,\n      signUpPath = Accounts.ui._options.signUpPath,\n      resetPasswordPath = Accounts.ui._options.resetPasswordPath,\n      changePasswordPath = Accounts.ui._options.changePasswordPath,\n      profilePath = Accounts.ui._options.profilePath\n    } = this.props;\n    const {\n      user\n    } = this.props;\n    const {\n      formState,\n      waiting\n    } = this.state;\n    let loginButtons = [];\n\n    if (user && formState == STATES.PROFILE) {\n      loginButtons.push({\n        id: 'signOut',\n        label: this.translate('signOut'),\n        disabled: waiting,\n        onClick: this.signOut.bind(this)\n      });\n    }\n\n    if (this.showCreateAccountLink()) {\n      loginButtons.push({\n        id: 'switchToSignUp',\n        label: this.translate('signUp'),\n        type: 'link',\n        href: signUpPath,\n        onClick: this.switchToSignUp.bind(this)\n      });\n    }\n\n    if (formState == STATES.SIGN_UP || formState == STATES.PASSWORD_RESET) {\n      loginButtons.push({\n        id: 'switchToSignIn',\n        label: this.translate('signIn'),\n        type: 'link',\n        href: loginPath,\n        onClick: this.switchToSignIn.bind(this)\n      });\n    }\n\n    if (this.showForgotPasswordLink()) {\n      loginButtons.push({\n        id: 'switchToPasswordReset',\n        label: this.translate('forgotPassword'),\n        type: 'link',\n        href: resetPasswordPath,\n        onClick: this.switchToPasswordReset.bind(this)\n      });\n    }\n\n    if (user && !['EMAIL_ONLY_NO_PASSWORD', 'USERNAME_AND_EMAIL_NO_PASSWORD'].includes(passwordSignupFields()) && formState == STATES.PROFILE && user.services && 'password' in user.services) {\n      loginButtons.push({\n        id: 'switchToChangePassword',\n        label: this.translate('changePassword'),\n        type: 'link',\n        href: changePasswordPath,\n        onClick: this.switchToChangePassword.bind(this)\n      });\n    }\n\n    if (formState == STATES.SIGN_UP) {\n      loginButtons.push({\n        id: 'signUp',\n        label: this.translate('signUp'),\n        type: hasPasswordService() ? 'submit' : 'link',\n        className: 'active',\n        disabled: waiting,\n        onClick: hasPasswordService() ? this.signUp.bind(this, {}) : null\n      });\n    }\n\n    if (this.showSignInLink()) {\n      loginButtons.push({\n        id: 'signIn',\n        label: this.translate('signIn'),\n        type: hasPasswordService() ? 'submit' : 'link',\n        className: 'active',\n        disabled: waiting,\n        onClick: hasPasswordService() ? this.signIn.bind(this) : null\n      });\n    }\n\n    if (formState == STATES.PASSWORD_RESET) {\n      loginButtons.push({\n        id: 'emailResetLink',\n        label: this.translate('resetYourPassword'),\n        type: 'submit',\n        disabled: waiting,\n        onClick: this.passwordReset.bind(this)\n      });\n    }\n\n    if (this.showPasswordChangeForm() || this.showEnrollAccountForm()) {\n      loginButtons.push({\n        id: 'changePassword',\n        label: this.showPasswordChangeForm() ? this.translate('changePassword') : this.translate('setPassword'),\n        type: 'submit',\n        disabled: waiting,\n        onClick: this.passwordChange.bind(this)\n      });\n\n      if (Accounts.user()) {\n        loginButtons.push({\n          id: 'switchToSignOut',\n          label: this.translate('cancel'),\n          type: 'link',\n          href: profilePath,\n          onClick: this.switchToSignOut.bind(this)\n        });\n      } else {\n        loginButtons.push({\n          id: 'cancelResetPassword',\n          label: this.translate('cancel'),\n          type: 'link',\n          onClick: this.cancelResetPassword.bind(this)\n        });\n      }\n    } // Sort the button array so that the submit button always comes first, and\n    // buttons should also come before links.\n\n\n    loginButtons.sort((a, b) => {\n      return (b.type == 'submit' && a.type != undefined) - (a.type == 'submit' && b.type != undefined);\n    });\n    return indexBy(loginButtons, 'id');\n  }\n\n  showSignInLink() {\n    return this.state.formState == STATES.SIGN_IN && Package['accounts-password'];\n  }\n\n  showPasswordChangeForm() {\n    return Package['accounts-password'] && this.state.formState == STATES.PASSWORD_CHANGE;\n  }\n\n  showEnrollAccountForm() {\n    return Package['accounts-password'] && this.state.formState == STATES.ENROLL_ACCOUNT;\n  }\n\n  showCreateAccountLink() {\n    return this.state.formState == STATES.SIGN_IN && !Accounts._options.forbidClientAccountCreation && Package['accounts-password'];\n  }\n\n  showForgotPasswordLink() {\n    return !this.props.user && this.state.formState == STATES.SIGN_IN && ['USERNAME_AND_EMAIL', 'USERNAME_AND_OPTIONAL_EMAIL', 'EMAIL_ONLY'].includes(passwordSignupFields());\n  }\n  /**\n   * Helper to store field values while using the form.\n   */\n\n\n  setDefaultFieldValues(defaults) {\n    if (typeof defaults !== 'object') {\n      throw new Error('Argument to setDefaultFieldValues is not of type object');\n    } else if (typeof localStorage !== 'undefined' && localStorage) {\n      localStorage.setItem('accounts_ui', JSON.stringify((0, _objectSpread2.default)({\n        passwordSignupFields: passwordSignupFields()\n      }, this.getDefaultFieldValues(), defaults)));\n    }\n  }\n  /**\n   * Helper to get field values when switching states in the form.\n   */\n\n\n  getDefaultFieldValues() {\n    if (typeof localStorage !== 'undefined' && localStorage) {\n      const defaultFieldValues = JSON.parse(localStorage.getItem('accounts_ui') || null);\n\n      if (defaultFieldValues && defaultFieldValues.passwordSignupFields === passwordSignupFields()) {\n        return defaultFieldValues;\n      }\n    }\n  }\n  /**\n   * Helper to clear field values when signing in, up or out.\n   */\n\n\n  clearDefaultFieldValues() {\n    if (typeof localStorage !== 'undefined' && localStorage) {\n      localStorage.removeItem('accounts_ui');\n    }\n  }\n\n  switchToSignUp(event) {\n    event.preventDefault();\n    this.setState((0, _objectSpread2.default)({\n      formState: STATES.SIGN_UP\n    }, this.getDefaultFieldValues()));\n    this.clearMessages();\n  }\n\n  switchToSignIn(event) {\n    event.preventDefault();\n    this.setState((0, _objectSpread2.default)({\n      formState: STATES.SIGN_IN\n    }, this.getDefaultFieldValues()));\n    this.clearMessages();\n  }\n\n  switchToPasswordReset(event) {\n    event.preventDefault();\n    this.setState((0, _objectSpread2.default)({\n      formState: STATES.PASSWORD_RESET\n    }, this.getDefaultFieldValues()));\n    this.clearMessages();\n  }\n\n  switchToChangePassword(event) {\n    event.preventDefault();\n    this.setState((0, _objectSpread2.default)({\n      formState: STATES.PASSWORD_CHANGE\n    }, this.getDefaultFieldValues()));\n    this.clearMessages();\n  }\n\n  switchToSignOut(event) {\n    event.preventDefault();\n    this.setState({\n      formState: STATES.PROFILE\n    });\n    this.clearMessages();\n  }\n\n  cancelResetPassword(event) {\n    event.preventDefault();\n\n    Accounts._loginButtonsSession.set('resetPasswordToken', null);\n\n    this.setState({\n      formState: STATES.SIGN_IN,\n      messages: []\n    });\n  }\n\n  signOut() {\n    Meteor.logout(() => {\n      this.setState({\n        formState: STATES.SIGN_IN,\n        password: null\n      });\n      this.state.onSignedOutHook();\n      this.clearMessages();\n      this.clearDefaultFieldValues();\n    });\n  }\n\n  signIn() {\n    const {\n      username = null,\n      email = null,\n      usernameOrEmail = null,\n      password,\n      formState,\n      onSubmitHook\n    } = this.state;\n    let error = false;\n    let loginSelector;\n    this.clearMessages();\n\n    if (usernameOrEmail !== null) {\n      if (!this.validateField('username', usernameOrEmail)) {\n        if (this.state.formState == STATES.SIGN_UP) {\n          this.state.onSubmitHook('error.accounts.usernameRequired', this.state.formState);\n        }\n\n        error = true;\n      } else {\n        if (['USERNAME_AND_EMAIL_NO_PASSWORD'].includes(passwordSignupFields())) {\n          this.loginWithoutPassword();\n          return;\n        } else {\n          loginSelector = usernameOrEmail;\n        }\n      }\n    } else if (username !== null) {\n      if (!this.validateField('username', username)) {\n        if (this.state.formState == STATES.SIGN_UP) {\n          this.state.onSubmitHook('error.accounts.usernameRequired', this.state.formState);\n        }\n\n        error = true;\n      } else {\n        loginSelector = {\n          username: username\n        };\n      }\n    } else if (usernameOrEmail == null) {\n      if (!this.validateField('email', email)) {\n        error = true;\n      } else {\n        if (['EMAIL_ONLY_NO_PASSWORD'].includes(passwordSignupFields())) {\n          this.loginWithoutPassword();\n          error = true;\n        } else {\n          loginSelector = {\n            email\n          };\n        }\n      }\n    }\n\n    if (!['EMAIL_ONLY_NO_PASSWORD'].includes(passwordSignupFields()) && !this.validateField('password', password)) {\n      error = true;\n    }\n\n    if (!error) {\n      Meteor.loginWithPassword(loginSelector, password, (error, result) => {\n        onSubmitHook(error, formState);\n\n        if (error) {\n          this.showMessage(\"error.accounts.\".concat(error.reason) || 'unknown_error', 'error');\n        } else {\n          loginResultCallback(() => this.state.onSignedInHook());\n          this.setState({\n            formState: STATES.PROFILE,\n            password: null\n          });\n          this.clearDefaultFieldValues();\n        }\n      });\n    }\n  }\n\n  oauthButtons() {\n    const {\n      formState,\n      waiting\n    } = this.state;\n    let oauthButtons = [];\n\n    if (formState == STATES.SIGN_IN || formState == STATES.SIGN_UP) {\n      if (Accounts.oauth) {\n        Accounts.oauth.serviceNames().map(service => {\n          oauthButtons.push({\n            id: service,\n            label: capitalize(service),\n            disabled: waiting,\n            type: 'button',\n            className: \"btn-\".concat(service, \" \").concat(service),\n            onClick: this.oauthSignIn.bind(this, service)\n          });\n        });\n      }\n    }\n\n    return indexBy(oauthButtons, 'id');\n  }\n\n  oauthSignIn(serviceName) {\n    const {\n      user\n    } = this.props;\n    const {\n      formState,\n      waiting,\n      onSubmitHook\n    } = this.state; //Thanks Josh Owens for this one.\n\n    function capitalService() {\n      return serviceName.charAt(0).toUpperCase() + serviceName.slice(1);\n    }\n\n    if (serviceName === 'meteor-developer') {\n      serviceName = 'meteorDeveloperAccount';\n    }\n\n    const loginWithService = Meteor['loginWith' + capitalService()];\n    let options = {}; // use default scope unless specified\n\n    if (Accounts.ui._options.requestPermissions[serviceName]) options.requestPermissions = Accounts.ui._options.requestPermissions[serviceName];\n    if (Accounts.ui._options.requestOfflineToken[serviceName]) options.requestOfflineToken = Accounts.ui._options.requestOfflineToken[serviceName];\n    if (Accounts.ui._options.forceApprovalPrompt[serviceName]) options.forceApprovalPrompt = Accounts.ui._options.forceApprovalPrompt[serviceName];\n    this.clearMessages();\n    const self = this;\n    loginWithService(options, error => {\n      onSubmitHook(error, formState);\n\n      if (error) {\n        this.showMessage(\"error.accounts.\".concat(error.reason) || 'unknown_error');\n      } else {\n        this.setState({\n          formState: STATES.PROFILE\n        });\n        this.clearDefaultFieldValues();\n        loginResultCallback(() => {\n          Meteor.setTimeout(() => this.state.onSignedInHook(), 100);\n        });\n      }\n    });\n  }\n\n  signUp() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const {\n      username = null,\n      email = null,\n      usernameOrEmail = null,\n      password,\n      formState,\n      onSubmitHook\n    } = this.state;\n    let error = false;\n    this.clearMessages();\n\n    if (username !== null) {\n      if (!this.validateField('username', username)) {\n        if (this.state.formState == STATES.SIGN_UP) {\n          this.state.onSubmitHook('error.accounts.usernameRequired', this.state.formState);\n        }\n\n        error = true;\n      } else {\n        options.username = username;\n      }\n    } else {\n      if (['USERNAME_AND_EMAIL', 'USERNAME_AND_EMAIL_NO_PASSWORD'].includes(passwordSignupFields()) && !this.validateField('username', username)) {\n        if (this.state.formState == STATES.SIGN_UP) {\n          this.state.onSubmitHook('error.accounts.usernameRequired', this.state.formState);\n        }\n\n        error = true;\n      }\n    }\n\n    if (!this.validateField('email', email)) {\n      error = true;\n    } else {\n      options.email = email;\n    }\n\n    if (['EMAIL_ONLY_NO_PASSWORD', 'USERNAME_AND_EMAIL_NO_PASSWORD'].includes(passwordSignupFields())) {\n      // Generate a random password.\n      options.password = Meteor.uuid();\n    } else if (!this.validateField('password', password)) {\n      onSubmitHook('Invalid password', formState);\n      error = true;\n    } else {\n      options.password = password;\n    }\n\n    const SignUp = function (_options) {\n      Accounts.createUser(_options, error => {\n        if (error) {\n          this.showMessage(\"error.accounts.\".concat(error.reason) || 'unknown_error', 'error');\n\n          if (this.translate(\"error.accounts.\".concat(error.reason))) {\n            onSubmitHook(\"error.accounts.\".concat(error.reason), formState);\n          } else {\n            onSubmitHook('unknown_error', formState);\n          }\n        } else {\n          onSubmitHook(null, formState);\n          this.setState({\n            formState: STATES.PROFILE,\n            password: null\n          });\n          let user = Accounts.user();\n          loginResultCallback(this.state.onPostSignUpHook.bind(this, _options, user));\n          this.clearDefaultFieldValues();\n        }\n\n        this.setState({\n          waiting: false\n        });\n      });\n    };\n\n    if (!error) {\n      this.setState({\n        waiting: true\n      }); // Allow for Promises to return.\n\n      let promise = this.state.onPreSignUpHook(options);\n\n      if (promise instanceof Promise) {\n        promise.then(SignUp.bind(this, options));\n      } else {\n        SignUp(options);\n      }\n    }\n  }\n\n  loginWithoutPassword() {\n    const {\n      email = '',\n      usernameOrEmail = '',\n      waiting,\n      formState,\n      onSubmitHook\n    } = this.state;\n\n    if (waiting) {\n      return;\n    }\n\n    if (this.validateField('email', email)) {\n      this.setState({\n        waiting: true\n      });\n      Accounts.loginWithoutPassword({\n        email: email\n      }, error => {\n        if (error) {\n          this.showMessage(\"error.accounts.\".concat(error.reason) || 'unknown_error', 'error');\n        } else {\n          this.showMessage(this.translate('info.emailSent'), 'success', 5000);\n          this.clearDefaultFieldValues();\n        }\n\n        onSubmitHook(error, formState);\n        this.setState({\n          waiting: false\n        });\n      });\n    } else if (this.validateField('username', usernameOrEmail)) {\n      this.setState({\n        waiting: true\n      });\n      Accounts.loginWithoutPassword({\n        email: usernameOrEmail,\n        username: usernameOrEmail\n      }, error => {\n        if (error) {\n          this.showMessage(\"error.accounts.\".concat(error.reason) || 'unknown_error', 'error');\n        } else {\n          this.showMessage(this.translate('info.emailSent'), 'success', 5000);\n          this.clearDefaultFieldValues();\n        }\n\n        onSubmitHook(error, formState);\n        this.setState({\n          waiting: false\n        });\n      });\n    } else {\n      let errMsg = null;\n\n      if (['USERNAME_AND_EMAIL_NO_PASSWORD'].includes(passwordSignupFields())) {\n        errMsg = this.translate('error.accounts.invalid_email');\n      } else {\n        errMsg = this.translate('error.accounts.invalid_email');\n      }\n\n      this.showMessage(errMsg, 'warning');\n      onSubmitHook(errMsg, formState);\n    }\n  }\n\n  passwordReset() {\n    const {\n      email = '',\n      waiting,\n      formState,\n      onSubmitHook\n    } = this.state;\n\n    if (waiting) {\n      return;\n    }\n\n    this.clearMessages();\n\n    if (this.validateField('email', email)) {\n      this.setState({\n        waiting: true\n      });\n      Accounts.forgotPassword({\n        email: email\n      }, error => {\n        if (error) {\n          this.showMessage(\"error.accounts.\".concat(error.reason) || 'unknown_error', 'error');\n        } else {\n          this.showMessage(this.translate('info.emailSent'), 'success', 5000);\n          this.clearDefaultFieldValues();\n        }\n\n        onSubmitHook(error, formState);\n        this.setState({\n          waiting: false\n        });\n      });\n    }\n  }\n\n  passwordChange() {\n    const {\n      password,\n      newPassword,\n      formState,\n      onSubmitHook,\n      onSignedInHook\n    } = this.state;\n\n    if (!this.validateField('password', newPassword)) {\n      onSubmitHook('err.minChar', formState);\n      return;\n    }\n\n    let token = Accounts._loginButtonsSession.get('resetPasswordToken');\n\n    if (!token) {\n      token = Accounts._loginButtonsSession.get('enrollAccountToken');\n    }\n\n    if (token) {\n      Accounts.resetPassword(token, newPassword, error => {\n        if (error) {\n          this.showMessage(\"error.accounts.\".concat(error.reason) || 'unknown_error', 'error');\n          onSubmitHook(error, formState);\n        } else {\n          this.showMessage(this.translate('info.passwordChanged'), 'success', 5000);\n          onSubmitHook(null, formState);\n          this.setState({\n            formState: STATES.PROFILE\n          });\n\n          Accounts._loginButtonsSession.set('resetPasswordToken', null);\n\n          Accounts._loginButtonsSession.set('enrollAccountToken', null);\n\n          onSignedInHook();\n        }\n      });\n    } else {\n      Accounts.changePassword(password, newPassword, error => {\n        if (error) {\n          this.showMessage(\"error.accounts.\".concat(error.reason) || 'unknown_error', 'error');\n          onSubmitHook(error, formState);\n        } else {\n          this.showMessage('info.passwordChanged', 'success', 5000);\n          onSubmitHook(null, formState);\n          this.setState({\n            formState: STATES.PROFILE\n          });\n          this.clearDefaultFieldValues();\n        }\n      });\n    }\n  }\n\n  showMessage(message, type, clearTimeout, field) {\n    message = this.translate(message).trim();\n\n    if (message) {\n      this.setState((_ref) => {\n        let {\n          messages = []\n        } = _ref;\n        messages.push((0, _objectSpread2.default)({\n          message,\n          type\n        }, field && {\n          field\n        }));\n        return {\n          messages\n        };\n      });\n\n      if (clearTimeout) {\n        this.hideMessageTimout = setTimeout(() => {\n          // Filter out the message that timed out.\n          this.clearMessage(message);\n        }, clearTimeout);\n      }\n    }\n  }\n\n  getMessageForField(field) {\n    const {\n      messages = []\n    } = this.state;\n    return messages.find((_ref2) => {\n      let {\n        field: key\n      } = _ref2;\n      return key === field;\n    });\n  }\n\n  clearMessage(message) {\n    if (message) {\n      this.setState((_ref3) => {\n        let {\n          messages = []\n        } = _ref3;\n        return {\n          messages: messages.filter((_ref4) => {\n            let {\n              message: a\n            } = _ref4;\n            return a !== message;\n          })\n        };\n      });\n    }\n  }\n\n  clearMessages() {\n    if (this.hideMessageTimout) {\n      clearTimeout(this.hideMessageTimout);\n    }\n\n    this.setState({\n      messages: []\n    });\n  }\n\n  componentWillMount() {\n    // XXX Check for backwards compatibility.\n    if (Meteor.isClient) {\n      const container = document.createElement('div');\n      ReactDOM.render(React.createElement(Accounts.ui.Field, {\n        message: \"test\"\n      }), container);\n\n      if (container.getElementsByClassName('message').length == 0) {\n        // Found backwards compatibility issue with 1.3.x\n        console.warn(\"Implementations of Accounts.ui.Field must render message in v1.2.11.\\n          https://github.com/studiointeract/accounts-ui/#deprecations\");\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.hideMessageTimout) {\n      clearTimeout(this.hideMessageTimout);\n    }\n  }\n\n  render() {\n    this.oauthButtons(); // Backwords compatibility with v1.2.x.\n\n    const {\n      messages = []\n    } = this.state;\n    const message = {\n      deprecated: true,\n      message: messages.map((_ref5) => {\n        let {\n          message\n        } = _ref5;\n        return message;\n      }).join(', ')\n    };\n    return React.createElement(Accounts.ui.Form, (0, _extends2.default)({\n      oauthServices: this.oauthButtons(),\n      fields: this.fields(),\n      buttons: this.buttons()\n    }, this.state, {\n      message: message,\n      translate: text => this.translate(text)\n    }));\n  }\n\n}\n\nLoginForm.propTypes = {\n  formState: PropTypes.symbol,\n  loginPath: PropTypes.string,\n  signUpPath: PropTypes.string,\n  resetPasswordPath: PropTypes.string,\n  profilePath: PropTypes.string,\n  changePasswordPath: PropTypes.string\n};\nLoginForm.defaultProps = {\n  formState: null,\n  loginPath: null,\n  signUpPath: null,\n  resetPasswordPath: null,\n  profilePath: null,\n  changePasswordPath: null\n};\nAccounts.ui.LoginForm = LoginForm;\nconst LoginFormContainer = withTracker(() => {\n  // Listen for the user to login/logout and the services list to the user.\n  Meteor.subscribe('servicesList');\n  return {\n    user: Accounts.user()\n  };\n})(LoginForm);\nAccounts.ui.LoginForm = LoginFormContainer;\nmodule.exportDefault(LoginFormContainer);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"PasswordOrService.jsx\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/epotek_accounts-ui/imports/ui/components/PasswordOrService.jsx                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  PasswordOrService: () => PasswordOrService\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 2);\nlet T9n;\nmodule.link(\"meteor-accounts-t9n\", {\n  T9n(v) {\n    T9n = v;\n  }\n\n}, 3);\nlet hasPasswordService;\nmodule.link(\"../../helpers.js\", {\n  hasPasswordService(v) {\n    hasPasswordService = v;\n  }\n\n}, 4);\n\nclass PasswordOrService extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasPasswordService: hasPasswordService(),\n      services: Object.keys(props.oauthServices).map(service => {\n        return props.oauthServices[service].label;\n      })\n    };\n  }\n\n  translate(text) {\n    if (this.props.translate) {\n      return this.props.translate(text);\n    }\n\n    return T9n.get(text);\n  }\n\n  render() {\n    let {\n      className = 'password-or-service',\n      style = {}\n    } = this.props;\n    let {\n      hasPasswordService,\n      services\n    } = this.state;\n    labels = services;\n\n    if (services.length > 2) {\n      labels = [];\n    }\n\n    if (hasPasswordService && services.length > 0) {\n      return React.createElement(\"div\", {\n        style: style,\n        className: className\n      }, \"\".concat(this.translate('orUse'), \" \").concat(labels.join(' / ')));\n    }\n\n    return null;\n  }\n\n}\n\nPasswordOrService.propTypes = {\n  oauthServices: PropTypes.object\n};\nAccounts.ui.PasswordOrService = PasswordOrService;\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"SocialButtons.jsx\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/epotek_accounts-ui/imports/ui/components/SocialButtons.jsx                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nmodule.export({\n  SocialButtons: () => SocialButtons\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nmodule.link(\"./Button.jsx\");\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 1);\n\nclass SocialButtons extends React.Component {\n  render() {\n    let {\n      oauthServices = {},\n      className = 'social-buttons'\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: className\n    }, Object.keys(oauthServices).map((id, i) => {\n      return React.createElement(Accounts.ui.Button, (0, _extends2.default)({}, oauthServices[id], {\n        key: i\n      }));\n    }));\n  }\n\n}\n\nAccounts.ui.SocialButtons = SocialButtons;\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".jsx\"\n  ]\n});\n\nrequire(\"/node_modules/meteor/epotek:accounts-ui/check-npm.js\");\nvar exports = require(\"/node_modules/meteor/epotek:accounts-ui/main_client.js\");\n\n/* Exports */\nPackage._define(\"epotek:accounts-ui\", exports);\n\n})();\n","servePath":"/packages/epotek_accounts-ui.js","sourceMap":{"version":3,"sources":["packages/epotek:accounts-ui/check-npm.js","packages/epotek:accounts-ui/main_client.js","packages/epotek:accounts-ui/imports/accounts_ui.js","packages/epotek:accounts-ui/imports/helpers.js","packages/epotek:accounts-ui/imports/login_session.js","packages/epotek:accounts-ui/imports/api/client/loginWithoutPassword.js","packages/epotek:accounts-ui/imports/ui/components/Button.jsx","packages/epotek:accounts-ui/imports/ui/components/Buttons.jsx","packages/epotek:accounts-ui/imports/ui/components/Field.jsx","packages/epotek:accounts-ui/imports/ui/components/Fields.jsx","packages/epotek:accounts-ui/imports/ui/components/Form.jsx","packages/epotek:accounts-ui/imports/ui/components/FormMessage.jsx","packages/epotek:accounts-ui/imports/ui/components/FormMessages.jsx","packages/epotek:accounts-ui/imports/ui/components/LoginForm.jsx","packages/epotek:accounts-ui/imports/ui/components/PasswordOrService.jsx","packages/epotek:accounts-ui/imports/ui/components/SocialButtons.jsx"],"names":["module","export","default","LoginForm","Accounts","STATES","link","v","redirect","validatePassword","validateEmail","validateUsername","ui","_options","requestPermissions","requestOfflineToken","forceApprovalPrompt","requireEmailVerification","passwordSignupFields","minimumPasswordLength","loginPath","signUpPath","resetPasswordPath","profilePath","changePasswordPath","homeRoutePath","onSubmitHook","onPreSignUpHook","Promise","resolve","onPostSignUpHook","onEnrollAccountHook","onResetPasswordHook","onVerifyEmailHook","onSignedInHook","onSignedOutHook","emailPattern","RegExp","config","options","VALID_KEYS","Object","keys","forEach","key","includes","Error","service","scope","Array","value","hook","path","exportDefault","loginButtonsSession","getLoginServices","hasPasswordService","loginResultCallback","capitalize","browserHistory","require","e","_loginButtonsSession","SIGN_IN","Symbol","SIGN_UP","PROFILE","PASSWORD_CHANGE","PASSWORD_RESET","ENROLL_ACCOUNT","services","Package","oauth","serviceNames","sort","map","name","err","LoginCancelledError","ServiceConfiguration","ConfigError","Meteor","isClient","window","location","href","email","showMessage","clearMessage","test","length","password","errMsg","username","formState","fieldName","history","setTimeout","FlowRouter","go","push","pushState","string","replace","split","word","charAt","toUpperCase","slice","join","validateKey","KEY_PREFIX","set","_set","Session","get","onPageLoadLogin","attemptInfo","type","error","doneCallback","onResetPasswordLink","token","done","onEnrollmentLink","onEmailVerificationLink","verifyEmail","loginWithoutPassword","callback","connection","call","Button","React","PropTypes","Link","Component","render","label","disabled","className","onClick","props","propTypes","func","Buttons","buttons","id","i","Field","constructor","state","mount","triggerUpdate","onChange","input","target","componentDidMount","componentDidUpdate","prevProps","setState","hint","required","defaultValue","message","ref","trim","Fields","fields","Form","ReactDOM","form","addEventListener","preventDefault","oauthServices","messages","translate","ready","object","isRequired","bool","FormMessage","isObject","obj","style","deprecated","console","warn","FormMessages","filter","withTracker","T9n","indexBy","array","result","waiting","user","bind","prevState","changeState","getDefaultFieldValues","componentWillReceiveProps","nextProps","nextContext","text","validateField","field","getUsernameOrEmailField","handleChange","getMessageForField","getUsernameField","getEmailField","getPasswordField","getSetPasswordField","getNewPasswordField","evt","setDefaultFieldValues","loginFields","assign","showPasswordChangeForm","showEnrollAccountForm","loginButtons","signOut","showCreateAccountLink","switchToSignUp","switchToSignIn","showForgotPasswordLink","switchToPasswordReset","switchToChangePassword","signUp","showSignInLink","signIn","passwordReset","passwordChange","switchToSignOut","cancelResetPassword","a","b","undefined","forbidClientAccountCreation","defaults","localStorage","setItem","JSON","stringify","defaultFieldValues","parse","getItem","clearDefaultFieldValues","removeItem","event","clearMessages","logout","usernameOrEmail","loginSelector","loginWithPassword","reason","oauthButtons","oauthSignIn","serviceName","capitalService","loginWithService","self","uuid","SignUp","createUser","promise","then","forgotPassword","newPassword","resetPassword","changePassword","clearTimeout","hideMessageTimout","find","componentWillMount","container","document","createElement","getElementsByClassName","componentWillUnmount","symbol","defaultProps","LoginFormContainer","subscribe","PasswordOrService","labels","SocialButtons"],"mappings":"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","file":"/packages/epotek_accounts-ui.js","sourcesContent":["// import { checkNpmVersions } from 'meteor/tmeasday:check-npm-versions';\n//\n// checkNpmVersions({\n//   \"react\": \">=0.14.7 || ^15.0.0-rc.2\",\n//   \"react-dom\": \">=0.14.7 || ^15.0.0-rc.2\",\n// });\n","import { Accounts } from 'meteor/accounts-base';\nimport './imports/accounts_ui.js';\nimport './imports/login_session.js';\nimport { STATES } from './imports/helpers.js';\nimport './imports/api/client/loginWithoutPassword.js';\nimport LoginForm from './imports/ui/components/LoginForm.jsx';\n\nexport { LoginForm as default, Accounts, STATES };\n","import { Accounts } from 'meteor/accounts-base';\nimport {\n  redirect,\n  validatePassword,\n  validateEmail,\n  validateUsername\n} from './helpers.js';\n\n/**\n * @summary Accounts UI\n * @namespace\n * @memberOf Accounts\n */\nAccounts.ui = {};\n\nAccounts.ui._options = {\n  requestPermissions: [],\n  requestOfflineToken: {},\n  forceApprovalPrompt: {},\n  requireEmailVerification: false,\n  passwordSignupFields: 'EMAIL_ONLY_NO_PASSWORD',\n  minimumPasswordLength: 7,\n  loginPath: '/',\n  signUpPath: null,\n  resetPasswordPath: null,\n  profilePath: '/',\n  changePasswordPath: null,\n  homeRoutePath: '/',\n  onSubmitHook: () => {},\n  onPreSignUpHook: () => new Promise(resolve => resolve()),\n  onPostSignUpHook: () => {},\n  onEnrollAccountHook: () => redirect(`${Accounts.ui._options.loginPath}`),\n  onResetPasswordHook: () => redirect(`${Accounts.ui._options.loginPath}`),\n  onVerifyEmailHook: () => redirect(`${Accounts.ui._options.profilePath}`),\n  onSignedInHook: () => redirect(`${Accounts.ui._options.homeRoutePath}`),\n  onSignedOutHook: () => redirect(`${Accounts.ui._options.homeRoutePath}`),\n  emailPattern: new RegExp('[^@]+@[^@.]{2,}.[^.@]+')\n};\n\n/**\n * @summary Configure the behavior of [`<Accounts.ui.LoginForm />`](#react-accounts-ui).\n * @anywhere\n * @param {Object} options\n * @param {Object} options.requestPermissions Which [permissions](#requestpermissions) to request from the user for each external service.\n * @param {Object} options.requestOfflineToken To ask the user for permission to act on their behalf when offline, map the relevant external service to `true`. Currently only supported with Google. See [Meteor.loginWithExternalService](#meteor_loginwithexternalservice) for more details.\n * @param {Object} options.forceApprovalPrompt If true, forces the user to approve the app's permissions, even if previously approved. Currently only supported with Google.\n * @param {String} options.passwordSignupFields Which fields to display in the user creation form. One of '`USERNAME_AND_EMAIL`', '`USERNAME_AND_OPTIONAL_EMAIL`', '`USERNAME_ONLY`', '`EMAIL_ONLY`', or '`NO_PASSWORD`' (default).\n */\nAccounts.ui.config = function(options) {\n  // validate options keys\n  const VALID_KEYS = [\n    'passwordSignupFields',\n    'requestPermissions',\n    'requestOfflineToken',\n    'forbidClientAccountCreation',\n    'requireEmailVerification',\n    'minimumPasswordLength',\n    'loginPath',\n    'signUpPath',\n    'resetPasswordPath',\n    'profilePath',\n    'changePasswordPath',\n    'homeRoutePath',\n    'onSubmitHook',\n    'onPreSignUpHook',\n    'onPostSignUpHook',\n    'onEnrollAccountHook',\n    'onResetPasswordHook',\n    'onVerifyEmailHook',\n    'onSignedInHook',\n    'onSignedOutHook',\n    'validateField',\n    'emailPattern'\n  ];\n\n  Object.keys(options).forEach(function(key) {\n    if (!VALID_KEYS.includes(key))\n      throw new Error('Accounts.ui.config: Invalid key: ' + key);\n  });\n\n  // Deal with `passwordSignupFields`\n  if (options.passwordSignupFields) {\n    if (\n      [\n        'USERNAME_AND_EMAIL',\n        'USERNAME_AND_OPTIONAL_EMAIL',\n        'USERNAME_ONLY',\n        'EMAIL_ONLY',\n        'EMAIL_ONLY_NO_PASSWORD',\n        'USERNAME_AND_EMAIL_NO_PASSWORD'\n      ].includes(options.passwordSignupFields)\n    ) {\n      Accounts.ui._options.passwordSignupFields = options.passwordSignupFields;\n    } else {\n      throw new Error(\n        'Accounts.ui.config: Invalid option for `passwordSignupFields`: ' +\n          options.passwordSignupFields\n      );\n    }\n  }\n\n  // Deal with `requestPermissions`\n  if (options.requestPermissions) {\n    Object.keys(options.requestPermissions).forEach(service => {\n      const scope = options.requestPermissions[service];\n      if (Accounts.ui._options.requestPermissions[service]) {\n        throw new Error(\n          \"Accounts.ui.config: Can't set `requestPermissions` more than once for \" +\n            service\n        );\n      } else if (!(scope instanceof Array)) {\n        throw new Error(\n          'Accounts.ui.config: Value for `requestPermissions` must be an array'\n        );\n      } else {\n        Accounts.ui._options.requestPermissions[service] = scope;\n      }\n    });\n  }\n\n  // Deal with `requestOfflineToken`\n  if (options.requestOfflineToken) {\n    Object.keys(options.requestOfflineToken).forEach(service => {\n      const value = options.requestOfflineToken[service];\n      if (service !== 'google')\n        throw new Error(\n          'Accounts.ui.config: `requestOfflineToken` only supported for Google login at the moment.'\n        );\n\n      if (Accounts.ui._options.requestOfflineToken[service]) {\n        throw new Error(\n          \"Accounts.ui.config: Can't set `requestOfflineToken` more than once for \" +\n            service\n        );\n      } else {\n        Accounts.ui._options.requestOfflineToken[service] = value;\n      }\n    });\n  }\n\n  // Deal with `forceApprovalPrompt`\n  if (options.forceApprovalPrompt) {\n    Object.keys(options.forceApprovalPrompt).forEach(service => {\n      const value = options.forceApprovalPrompt[service];\n      if (service !== 'google')\n        throw new Error(\n          'Accounts.ui.config: `forceApprovalPrompt` only supported for Google login at the moment.'\n        );\n\n      if (Accounts.ui._options.forceApprovalPrompt[service]) {\n        throw new Error(\n          \"Accounts.ui.config: Can't set `forceApprovalPrompt` more than once for \" +\n            service\n        );\n      } else {\n        Accounts.ui._options.forceApprovalPrompt[service] = value;\n      }\n    });\n  }\n\n  // Deal with `requireEmailVerification`\n  if (options.requireEmailVerification) {\n    if (typeof options.requireEmailVerification != 'boolean') {\n      throw new Error(\n        `Accounts.ui.config: \"requireEmailVerification\" not a boolean`\n      );\n    } else {\n      Accounts.ui._options.requireEmailVerification =\n        options.requireEmailVerification;\n    }\n  }\n\n  // Deal with `minimumPasswordLength`\n  if (options.minimumPasswordLength) {\n    if (typeof options.minimumPasswordLength != 'number') {\n      throw new Error(\n        `Accounts.ui.config: \"minimumPasswordLength\" not a number`\n      );\n    } else {\n      Accounts.ui._options.minimumPasswordLength =\n        options.minimumPasswordLength;\n    }\n  }\n\n  // Deal with the hooks.\n  for (let hook of ['onSubmitHook', 'onPreSignUpHook', 'onPostSignUpHook']) {\n    if (options[hook]) {\n      if (typeof options[hook] != 'function') {\n        throw new Error(`Accounts.ui.config: \"${hook}\" not a function`);\n      } else {\n        Accounts.ui._options[hook] = options[hook];\n      }\n    }\n  }\n\n  // Deal with pattern.\n  for (let hook of ['emailPattern']) {\n    if (options[hook]) {\n      if (!(options[hook] instanceof RegExp)) {\n        throw new Error(\n          `Accounts.ui.config: \"${hook}\" not a Regular Expression`\n        );\n      } else {\n        Accounts.ui._options[hook] = options[hook];\n      }\n    }\n  }\n\n  // deal with the paths.\n  for (let path of [\n    'loginPath',\n    'signUpPath',\n    'resetPasswordPath',\n    'profilePath',\n    'changePasswordPath',\n    'homeRoutePath'\n  ]) {\n    if (typeof options[path] !== 'undefined') {\n      if (options[path] !== null && typeof options[path] !== 'string') {\n        throw new Error(`Accounts.ui.config: ${path} is not a string or null`);\n      } else {\n        Accounts.ui._options[path] = options[path];\n      }\n    }\n  }\n\n  // deal with redirect hooks.\n  for (let hook of [\n    'onEnrollAccountHook',\n    'onResetPasswordHook',\n    'onVerifyEmailHook',\n    'onSignedInHook',\n    'onSignedOutHook'\n  ]) {\n    if (options[hook]) {\n      if (typeof options[hook] == 'function') {\n        Accounts.ui._options[hook] = options[hook];\n      } else if (typeof options[hook] == 'string') {\n        Accounts.ui._options[hook] = () => redirect(options[hook]);\n      } else {\n        throw new Error(\n          `Accounts.ui.config: \"${hook}\" not a function or an absolute or relative path`\n        );\n      }\n    }\n  }\n};\n\nexport default Accounts;\n","let browserHistory;\ntry {\n  browserHistory = require('react-router').browserHistory;\n} catch (e) {}\nexport const loginButtonsSession = Accounts._loginButtonsSession;\nexport const STATES = {\n  SIGN_IN: Symbol('SIGN_IN'),\n  SIGN_UP: Symbol('SIGN_UP'),\n  PROFILE: Symbol('PROFILE'),\n  PASSWORD_CHANGE: Symbol('PASSWORD_CHANGE'),\n  PASSWORD_RESET: Symbol('PASSWORD_RESET'),\n  ENROLL_ACCOUNT: Symbol('ENROLL_ACCOUNT')\n};\n\nexport function getLoginServices() {\n  // First look for OAuth services.\n  const services = Package['accounts-oauth']\n    ? Accounts.oauth.serviceNames()\n    : [];\n\n  // Be equally kind to all login services. This also preserves\n  // backwards-compatibility.\n  services.sort();\n\n  return services.map(function(name) {\n    return { name: name };\n  });\n}\n// Export getLoginServices using old style globals for accounts-base which\n// requires it.\nthis.getLoginServices = getLoginServices;\n\nexport function hasPasswordService() {\n  // First look for OAuth services.\n  return !!Package['accounts-password'];\n}\n\nexport function loginResultCallback(service, err) {\n  if (!err) {\n  } else if (err instanceof Accounts.LoginCancelledError) {\n    // do nothing\n  } else if (err instanceof ServiceConfiguration.ConfigError) {\n  } else {\n    //loginButtonsSession.errorMessage(err.reason || \"Unknown error\");\n  }\n\n  if (Meteor.isClient) {\n    if (typeof redirect === 'string') {\n      window.location.href = '/';\n    }\n\n    if (typeof service === 'function') {\n      service();\n    }\n  }\n}\n\nexport function passwordSignupFields() {\n  return Accounts.ui._options.passwordSignupFields || 'EMAIL_ONLY_NO_PASSWORD';\n}\n\nexport function validateEmail(email, showMessage, clearMessage) {\n  if (\n    passwordSignupFields() === 'USERNAME_AND_OPTIONAL_EMAIL' &&\n    email === ''\n  ) {\n    return true;\n  }\n  if (Accounts.ui._options.emailPattern.test(email)) {\n    return true;\n  } else if (!email || email.length === 0) {\n    showMessage('error.emailRequired', 'warning', false, 'email');\n    return false;\n  } else {\n    showMessage('error.accounts.Invalid email', 'warning', false, 'email');\n    return false;\n  }\n}\n\nexport function validatePassword(password = '', showMessage, clearMessage) {\n  if (password.length >= Accounts.ui._options.minimumPasswordLength) {\n    return true;\n  } else {\n    // const errMsg = T9n.get(\"error.minChar\").replace(/7/, Accounts.ui._options.minimumPasswordLength);\n    const errMsg = 'error.minChar';\n    showMessage(errMsg, 'warning', false, 'password');\n    return false;\n  }\n}\n\nexport function validateUsername(\n  username,\n  showMessage,\n  clearMessage,\n  formState\n) {\n  if (username) {\n    return true;\n  } else {\n    const fieldName =\n      passwordSignupFields() === 'USERNAME_ONLY' || formState === STATES.SIGN_UP\n        ? 'username'\n        : 'usernameOrEmail';\n    showMessage('error.usernameRequired', 'warning', false, fieldName);\n    return false;\n  }\n}\n\nexport function redirect(redirect) {\n  if (Meteor.isClient) {\n    if (window.history) {\n      // Run after all app specific redirects, i.e. to the login screen.\n      Meteor.setTimeout(() => {\n        if (Package['kadira:flow-router']) {\n          Package['kadira:flow-router'].FlowRouter.go(redirect);\n        } else if (Package['kadira:flow-router-ssr']) {\n          Package['kadira:flow-router-ssr'].FlowRouter.go(redirect);\n        } else if (browserHistory) {\n          browserHistory.push(redirect);\n        } else {\n          window.history.pushState({}, 'redirect', redirect);\n        }\n      }, 100);\n    }\n  }\n}\n\nexport function capitalize(string) {\n  return string\n    .replace(/\\-/, ' ')\n    .split(' ')\n    .map(word => {\n      return word.charAt(0).toUpperCase() + word.slice(1);\n    })\n    .join(' ');\n}\n","import { Accounts } from 'meteor/accounts-base';\nimport { STATES, loginResultCallback, getLoginServices } from './helpers.js';\n\nconst VALID_KEYS = [\n  'dropdownVisible',\n\n  // XXX consider replacing these with one key that has an enum for values.\n  'inSignupFlow',\n  'inForgotPasswordFlow',\n  'inChangePasswordFlow',\n  'inMessageOnlyFlow',\n\n  'errorMessage',\n  'infoMessage',\n\n  // dialogs with messages (info and error)\n  'resetPasswordToken',\n  'enrollAccountToken',\n  'justVerifiedEmail',\n  'justResetPassword',\n\n  'configureLoginServiceDialogVisible',\n  'configureLoginServiceDialogServiceName',\n  'configureLoginServiceDialogSaveDisabled',\n  'configureOnDesktopVisible'\n];\n\nexport const validateKey = function(key) {\n  if (!VALID_KEYS.includes(key))\n    throw new Error('Invalid key in loginButtonsSession: ' + key);\n};\n\nexport const KEY_PREFIX = 'Meteor.loginButtons.';\n\n// XXX This should probably be package scope rather than exported\n// (there was even a comment to that effect here from before we had\n// namespacing) but accounts-ui-viewer uses it, so leave it as is for\n// now\nAccounts._loginButtonsSession = {\n  set: function(key, value) {\n    validateKey(key);\n    if (['errorMessage', 'infoMessage'].includes(key))\n      throw new Error(\n        \"Don't set errorMessage or infoMessage directly. Instead, use errorMessage() or infoMessage().\"\n      );\n\n    this._set(key, value);\n  },\n\n  _set: function(key, value) {\n    Session.set(KEY_PREFIX + key, value);\n  },\n\n  get: function(key) {\n    validateKey(key);\n    return Session.get(KEY_PREFIX + key);\n  }\n};\n\nif (Meteor.isClient) {\n  // In the login redirect flow, we'll have the result of the login\n  // attempt at page load time when we're redirected back to the\n  // application.  Register a callback to update the UI (i.e. to close\n  // the dialog on a successful login or display the error on a failed\n  // login).\n  //\n  Accounts.onPageLoadLogin(function(attemptInfo) {\n    // Ignore if we have a left over login attempt for a service that is no longer registered.\n    if (\n      getLoginServices()\n        .map(({ name }) => name)\n        .includes(attemptInfo.type)\n    )\n      loginResultCallback(attemptInfo.type, attemptInfo.error);\n  });\n\n  let doneCallback;\n\n  Accounts.onResetPasswordLink(function(token, done) {\n    Accounts._loginButtonsSession.set('resetPasswordToken', token);\n    Session.set(KEY_PREFIX + 'state', 'resetPasswordToken');\n    doneCallback = done;\n\n    Accounts.ui._options.onResetPasswordHook();\n  });\n\n  Accounts.onEnrollmentLink(function(token, done) {\n    Accounts._loginButtonsSession.set('enrollAccountToken', token);\n    Session.set(KEY_PREFIX + 'state', 'enrollAccountToken');\n    doneCallback = done;\n\n    Accounts.ui._options.onEnrollAccountHook();\n  });\n\n  Accounts.onEmailVerificationLink(function(token, done) {\n    Accounts.verifyEmail(token, function(error) {\n      if (!error) {\n        Accounts._loginButtonsSession.set('justVerifiedEmail', true);\n        Session.set(KEY_PREFIX + 'state', 'justVerifiedEmail');\n        Accounts.ui._options.onSignedInHook();\n      } else {\n        Accounts.ui._options.onVerifyEmailHook();\n      }\n\n      done();\n    });\n  });\n}\n","/**\n * @summary Request a forgot password email.\n * @locus Client\n * @param {Object} options\n * @param {String} options.email The email address to send a password reset link.\n * @param {Function} [callback] Optional callback. Called with no arguments on success, or with a single `Error` argument on failure.\n */\nAccounts.loginWithoutPassword = function(options, callback) {\n  if (!options.email) throw new Error('Must pass options.email');\n  Accounts.connection.call('loginWithoutPassword', options, callback);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Accounts } from 'meteor/accounts-base';\n\nlet Link;\ntry {\n  Link = require('react-router').Link;\n} catch (e) {}\n\nexport class Button extends React.Component {\n  render() {\n    const {\n      label,\n      href = null,\n      type,\n      disabled = false,\n      className,\n      onClick\n    } = this.props;\n    if (type == 'link') {\n      // Support React Router.\n      if (Link && href) {\n        return (\n          <Link to={href} className={className}>\n            {label}\n          </Link>\n        );\n      } else {\n        return (\n          <a href={href} className={className} onClick={onClick}>\n            {label}\n          </a>\n        );\n      }\n    }\n    return (\n      <button\n        className={className}\n        type={type}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {label}\n      </button>\n    );\n  }\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func\n};\n\nAccounts.ui.Button = Button;\n","import React from 'react';\nimport './Button.jsx';\nimport { Accounts } from 'meteor/accounts-base';\n\nexport class Buttons extends React.Component {\n  render() {\n    let { buttons = {}, className = 'buttons' } = this.props;\n    return (\n      <div className={className}>\n        {Object.keys(buttons).map((id, i) => (\n          <Accounts.ui.Button {...buttons[id]} key={i} />\n        ))}\n      </div>\n    );\n  }\n}\n\nAccounts.ui.Buttons = Buttons;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Accounts } from 'meteor/accounts-base';\n\nexport class Field extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mount: true\n    };\n  }\n\n  triggerUpdate() {\n    // Trigger an onChange on inital load, to support browser prefilled values.\n    const { onChange } = this.props;\n    if (this.input && onChange) {\n      onChange({ target: { value: this.input.value } });\n    }\n  }\n\n  componentDidMount() {\n    this.triggerUpdate();\n  }\n\n  componentDidUpdate(prevProps) {\n    // Re-mount component so that we don't expose browser prefilled passwords if the component was\n    // a password before and now something else.\n    if (prevProps.id !== this.props.id) {\n      this.setState({ mount: false });\n    } else if (!this.state.mount) {\n      this.setState({ mount: true });\n      this.triggerUpdate();\n    }\n  }\n\n  render() {\n    const {\n      id,\n      hint,\n      label,\n      type = 'text',\n      onChange,\n      required = false,\n      className = 'field',\n      defaultValue = '',\n      message\n    } = this.props;\n    const { mount = true } = this.state;\n    if (type == 'notice') {\n      return <div className={className}>{label}</div>;\n    }\n    return mount ? (\n      <div className={className}>\n        <label htmlFor={id}>{label}</label>\n        <input\n          id={id}\n          ref={ref => (this.input = ref)}\n          type={type}\n          onChange={onChange}\n          placeholder={hint}\n          defaultValue={defaultValue}\n        />\n        {message && (\n          <span className={['message', message.type].join(' ').trim()}>\n            {message.message}\n          </span>\n        )}\n      </div>\n    ) : null;\n  }\n}\n\nField.propTypes = {\n  onChange: PropTypes.func\n};\n\nAccounts.ui.Field = Field;\n","import React from 'react';\nimport { Accounts } from 'meteor/accounts-base';\nimport './Field.jsx';\n\nexport class Fields extends React.Component {\n  render() {\n    let { fields = {}, className = 'fields' } = this.props;\n    return (\n      <div className={className}>\n        {Object.keys(fields).map((id, i) => (\n          <Accounts.ui.Field {...fields[id]} key={i} />\n        ))}\n      </div>\n    );\n  }\n}\n\nAccounts.ui.Fields = Fields;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { Accounts } from 'meteor/accounts-base';\n\nimport './Fields.jsx';\nimport './Buttons.jsx';\nimport './FormMessage.jsx';\nimport './PasswordOrService.jsx';\nimport './SocialButtons.jsx';\nimport './FormMessages.jsx';\n\nexport class Form extends React.Component {\n  componentDidMount() {\n    let form = this.form;\n    if (form) {\n      form.addEventListener('submit', e => {\n        e.preventDefault();\n      });\n    }\n  }\n\n  render() {\n    const {\n      hasPasswordService,\n      oauthServices,\n      fields,\n      buttons,\n      error,\n      messages,\n      translate,\n      ready = true,\n      className\n    } = this.props;\n    return (\n      <form\n        ref={ref => (this.form = ref)}\n        className={[className, ready ? 'ready' : null].join(' ')}\n        className=\"accounts-ui\"\n        noValidate\n      >\n        <Accounts.ui.Fields fields={fields} />\n        <Accounts.ui.Buttons buttons={buttons} />\n        <Accounts.ui.PasswordOrService\n          oauthServices={oauthServices}\n          translate={translate}\n        />\n        <Accounts.ui.SocialButtons oauthServices={oauthServices} />\n        <Accounts.ui.FormMessages messages={messages} />\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  oauthServices: PropTypes.object,\n  fields: PropTypes.object.isRequired,\n  buttons: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n  error: PropTypes.string,\n  ready: PropTypes.bool\n};\n\nAccounts.ui.Form = Form;\n","import React from 'react';\nimport { Accounts } from 'meteor/accounts-base';\n\nfunction isObject(obj) {\n  return obj === Object(obj);\n}\n\nexport class FormMessage extends React.Component {\n  render() {\n    let {\n      message,\n      type,\n      className = 'message',\n      style = {},\n      deprecated\n    } = this.props;\n    // XXX Check for deprecations.\n    if (deprecated) {\n      // Found backwords compatibility issue.\n      console.warn(\n        'You are overriding Accounts.ui.Form and using FormMessage, the use of FormMessage in Form has been depreacted in v1.2.11, update your implementation to use FormMessages: https://github.com/studiointeract/accounts-ui/#deprecations'\n      );\n    }\n    message = isObject(message) ? message.message : message; // If message is object, then try to get message from it\n    return message ? (\n      <div style={style} className={[className, type].join(' ')}>\n        {message}\n      </div>\n    ) : null;\n  }\n}\n\nAccounts.ui.FormMessage = FormMessage;\n","import React, { Component } from 'react';\nimport { Accounts } from 'meteor/accounts-base';\n\nexport class FormMessages extends Component {\n  render() {\n    const { messages = [], className = 'messages', style = {} } = this.props;\n    return (\n      messages.length > 0 && (\n        <div className=\"messages\">\n          {messages\n            .filter(message => !('field' in message))\n            .map(({ message, type }, i) => (\n              <Accounts.ui.FormMessage message={message} type={type} key={i} />\n            ))}\n        </div>\n      )\n    );\n  }\n}\n\nAccounts.ui.FormMessages = FormMessages;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { withTracker } from 'meteor/react-meteor-data';\nimport { Accounts } from 'meteor/accounts-base';\nimport { T9n } from 'meteor-accounts-t9n';\nimport { KEY_PREFIX } from '../../login_session.js';\nimport './Form.jsx';\n\nimport {\n  STATES,\n  passwordSignupFields,\n  validateEmail,\n  validatePassword,\n  validateUsername,\n  loginResultCallback,\n  getLoginServices,\n  hasPasswordService,\n  capitalize\n} from '../../helpers.js';\n\nfunction indexBy(array, key) {\n  const result = {};\n  array.forEach(function(obj) {\n    result[obj[key]] = obj;\n  });\n  return result;\n}\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n    let {\n      formState,\n      loginPath,\n      signUpPath,\n      resetPasswordPath,\n      profilePath,\n      changePasswordPath\n    } = props;\n\n    if (formState === STATES.SIGN_IN && Package['accounts-password']) {\n      console.warn(\n        'Do not force the state to SIGN_IN on Accounts.ui.LoginForm, it will make it impossible to reset password in your app, this state is also the default state if logged out, so no need to force it.'\n      );\n    }\n\n    // Set inital state.\n    this.state = {\n      messages: [],\n      waiting: true,\n      formState: formState\n        ? formState\n        : Accounts.user()\n          ? STATES.PROFILE\n          : STATES.SIGN_IN,\n      onSubmitHook: props.onSubmitHook || Accounts.ui._options.onSubmitHook,\n      onSignedInHook:\n        props.onSignedInHook || Accounts.ui._options.onSignedInHook,\n      onSignedOutHook:\n        props.onSignedOutHook || Accounts.ui._options.onSignedOutHook,\n      onPreSignUpHook:\n        props.onPreSignUpHook || Accounts.ui._options.onPreSignUpHook,\n      onPostSignUpHook:\n        props.onPostSignUpHook || Accounts.ui._options.onPostSignUpHook\n    };\n    this.translate = this.translate.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState(prevState => ({ waiting: false, ready: true }));\n    let changeState = Session.get(KEY_PREFIX + 'state');\n    switch (changeState) {\n      case 'enrollAccountToken':\n        this.setState(prevState => ({\n          formState: STATES.ENROLL_ACCOUNT\n        }));\n        Session.set(KEY_PREFIX + 'state', null);\n        break;\n      case 'resetPasswordToken':\n        this.setState(prevState => ({\n          formState: STATES.PASSWORD_CHANGE\n        }));\n        Session.set(KEY_PREFIX + 'state', null);\n        break;\n\n      case 'justVerifiedEmail':\n        this.setState(prevState => ({\n          formState: STATES.PROFILE\n        }));\n        Session.set(KEY_PREFIX + 'state', null);\n        break;\n    }\n\n    // Add default field values once the form did mount on the client\n    this.setState(prevState => ({\n      ...this.getDefaultFieldValues()\n    }));\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    if (nextProps.formState && nextProps.formState !== this.state.formState) {\n      this.setState({\n        formState: nextProps.formState,\n        ...this.getDefaultFieldValues()\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (!prevProps.user !== !this.props.user) {\n      this.setState({\n        formState: this.props.user ? STATES.PROFILE : STATES.SIGN_IN\n      });\n    }\n  }\n\n  translate(text) {\n    // if (this.props.t) {\n    //   return this.props.t(text);\n    // }\n    return T9n.get(text);\n  }\n\n  validateField(field, value) {\n    const { formState } = this.state;\n    switch (field) {\n      case 'email':\n        return validateEmail(\n          value,\n          this.showMessage.bind(this),\n          this.clearMessage.bind(this)\n        );\n      case 'password':\n        return validatePassword(\n          value,\n          this.showMessage.bind(this),\n          this.clearMessage.bind(this)\n        );\n      case 'username':\n        return validateUsername(\n          value,\n          this.showMessage.bind(this),\n          this.clearMessage.bind(this),\n          formState\n        );\n    }\n  }\n\n  getUsernameOrEmailField() {\n    return {\n      id: 'usernameOrEmail',\n      hint: this.translate('enterUsernameOrEmail'),\n      label: this.translate('usernameOrEmail'),\n      required: true,\n      defaultValue: this.state.username || '',\n      onChange: this.handleChange.bind(this, 'usernameOrEmail'),\n      message: this.getMessageForField('usernameOrEmail')\n    };\n  }\n\n  getUsernameField() {\n    return {\n      id: 'username',\n      hint: this.translate('enterUsername'),\n      label: this.translate('username'),\n      required: true,\n      defaultValue: this.state.username || '',\n      onChange: this.handleChange.bind(this, 'username'),\n      message: this.getMessageForField('username')\n    };\n  }\n\n  getEmailField() {\n    return {\n      id: 'email',\n      hint: this.translate('enterEmail'),\n      label: this.translate('email'),\n      type: 'email',\n      required: true,\n      defaultValue: this.state.email || '',\n      onChange: this.handleChange.bind(this, 'email'),\n      message: this.getMessageForField('email')\n    };\n  }\n\n  getPasswordField() {\n    return {\n      id: 'password',\n      hint: this.translate('enterPassword'),\n      label: this.translate('password'),\n      type: 'password',\n      required: true,\n      defaultValue: this.state.password || '',\n      onChange: this.handleChange.bind(this, 'password'),\n      message: this.getMessageForField('password')\n    };\n  }\n\n  getSetPasswordField() {\n    return {\n      id: 'newPassword',\n      hint: this.translate('enterPassword'),\n      label: this.translate('choosePassword'),\n      type: 'password',\n      required: true,\n      onChange: this.handleChange.bind(this, 'newPassword')\n    };\n  }\n\n  getNewPasswordField() {\n    return {\n      id: 'newPassword',\n      hint: this.translate('enterNewPassword'),\n      label: this.translate('newPassword'),\n      type: 'password',\n      required: true,\n      onChange: this.handleChange.bind(this, 'newPassword'),\n      message: this.getMessageForField('newPassword')\n    };\n  }\n\n  handleChange(field, evt) {\n    let value = evt.target.value;\n    switch (field) {\n      case 'password':\n        break;\n      default:\n        value = value.trim();\n        break;\n    }\n    this.setState({ [field]: value });\n    this.setDefaultFieldValues({ [field]: value });\n  }\n\n  fields() {\n    const loginFields = [];\n    const { formState } = this.state;\n\n    if (!hasPasswordService() && getLoginServices().length == 0) {\n      loginFields.push({\n        label: 'No login service added, i.e. accounts-password',\n        type: 'notice'\n      });\n    }\n\n    if (hasPasswordService() && formState == STATES.SIGN_IN) {\n      if (\n        [\n          'USERNAME_AND_EMAIL',\n          'USERNAME_AND_OPTIONAL_EMAIL',\n          'USERNAME_AND_EMAIL_NO_PASSWORD'\n        ].includes(passwordSignupFields())\n      ) {\n        loginFields.push(this.getUsernameOrEmailField());\n      }\n\n      if (passwordSignupFields() === 'USERNAME_ONLY') {\n        loginFields.push(this.getUsernameField());\n      }\n\n      if (\n        ['EMAIL_ONLY', 'EMAIL_ONLY_NO_PASSWORD'].includes(\n          passwordSignupFields()\n        )\n      ) {\n        loginFields.push(this.getEmailField());\n      }\n\n      if (\n        !['EMAIL_ONLY_NO_PASSWORD', 'USERNAME_AND_EMAIL_NO_PASSWORD'].includes(\n          passwordSignupFields()\n        )\n      ) {\n        loginFields.push(this.getPasswordField());\n      }\n    }\n\n    if (hasPasswordService() && formState == STATES.SIGN_UP) {\n      if (\n        [\n          'USERNAME_AND_EMAIL',\n          'USERNAME_AND_OPTIONAL_EMAIL',\n          'USERNAME_ONLY',\n          'USERNAME_AND_EMAIL_NO_PASSWORD'\n        ].includes(passwordSignupFields())\n      ) {\n        loginFields.push(this.getUsernameField());\n      }\n\n      if (\n        [\n          'USERNAME_AND_EMAIL',\n          'EMAIL_ONLY',\n          'EMAIL_ONLY_NO_PASSWORD',\n          'USERNAME_AND_EMAIL_NO_PASSWORD'\n        ].includes(passwordSignupFields())\n      ) {\n        loginFields.push(this.getEmailField());\n      }\n\n      if (['USERNAME_AND_OPTIONAL_EMAIL'].includes(passwordSignupFields())) {\n        loginFields.push(\n          Object.assign(this.getEmailField(), { required: false })\n        );\n      }\n\n      if (\n        !['EMAIL_ONLY_NO_PASSWORD', 'USERNAME_AND_EMAIL_NO_PASSWORD'].includes(\n          passwordSignupFields()\n        )\n      ) {\n        loginFields.push(this.getPasswordField());\n      }\n    }\n\n    if (formState == STATES.PASSWORD_RESET) {\n      loginFields.push(this.getEmailField());\n    }\n\n    if (this.showPasswordChangeForm()) {\n      if (\n        Meteor.isClient &&\n        !Accounts._loginButtonsSession.get('resetPasswordToken')\n      ) {\n        loginFields.push(this.getPasswordField());\n      }\n      loginFields.push(this.getNewPasswordField());\n    }\n\n    if (this.showEnrollAccountForm()) {\n      loginFields.push(this.getSetPasswordField());\n    }\n    return indexBy(loginFields, 'id');\n  }\n\n  buttons() {\n    const {\n      loginPath = Accounts.ui._options.loginPath,\n      signUpPath = Accounts.ui._options.signUpPath,\n      resetPasswordPath = Accounts.ui._options.resetPasswordPath,\n      changePasswordPath = Accounts.ui._options.changePasswordPath,\n      profilePath = Accounts.ui._options.profilePath\n    } = this.props;\n    const { user } = this.props;\n    const { formState, waiting } = this.state;\n    let loginButtons = [];\n\n    if (user && formState == STATES.PROFILE) {\n      loginButtons.push({\n        id: 'signOut',\n        label: this.translate('signOut'),\n        disabled: waiting,\n        onClick: this.signOut.bind(this)\n      });\n    }\n\n    if (this.showCreateAccountLink()) {\n      loginButtons.push({\n        id: 'switchToSignUp',\n        label: this.translate('signUp'),\n        type: 'link',\n        href: signUpPath,\n        onClick: this.switchToSignUp.bind(this)\n      });\n    }\n\n    if (formState == STATES.SIGN_UP || formState == STATES.PASSWORD_RESET) {\n      loginButtons.push({\n        id: 'switchToSignIn',\n        label: this.translate('signIn'),\n        type: 'link',\n        href: loginPath,\n        onClick: this.switchToSignIn.bind(this)\n      });\n    }\n\n    if (this.showForgotPasswordLink()) {\n      loginButtons.push({\n        id: 'switchToPasswordReset',\n        label: this.translate('forgotPassword'),\n        type: 'link',\n        href: resetPasswordPath,\n        onClick: this.switchToPasswordReset.bind(this)\n      });\n    }\n\n    if (\n      user &&\n      !['EMAIL_ONLY_NO_PASSWORD', 'USERNAME_AND_EMAIL_NO_PASSWORD'].includes(\n        passwordSignupFields()\n      ) &&\n      formState == STATES.PROFILE &&\n      (user.services && 'password' in user.services)\n    ) {\n      loginButtons.push({\n        id: 'switchToChangePassword',\n        label: this.translate('changePassword'),\n        type: 'link',\n        href: changePasswordPath,\n        onClick: this.switchToChangePassword.bind(this)\n      });\n    }\n\n    if (formState == STATES.SIGN_UP) {\n      loginButtons.push({\n        id: 'signUp',\n        label: this.translate('signUp'),\n        type: hasPasswordService() ? 'submit' : 'link',\n        className: 'active',\n        disabled: waiting,\n        onClick: hasPasswordService() ? this.signUp.bind(this, {}) : null\n      });\n    }\n\n    if (this.showSignInLink()) {\n      loginButtons.push({\n        id: 'signIn',\n        label: this.translate('signIn'),\n        type: hasPasswordService() ? 'submit' : 'link',\n        className: 'active',\n        disabled: waiting,\n        onClick: hasPasswordService() ? this.signIn.bind(this) : null\n      });\n    }\n\n    if (formState == STATES.PASSWORD_RESET) {\n      loginButtons.push({\n        id: 'emailResetLink',\n        label: this.translate('resetYourPassword'),\n        type: 'submit',\n        disabled: waiting,\n        onClick: this.passwordReset.bind(this)\n      });\n    }\n\n    if (this.showPasswordChangeForm() || this.showEnrollAccountForm()) {\n      loginButtons.push({\n        id: 'changePassword',\n        label: this.showPasswordChangeForm()\n          ? this.translate('changePassword')\n          : this.translate('setPassword'),\n        type: 'submit',\n        disabled: waiting,\n        onClick: this.passwordChange.bind(this)\n      });\n\n      if (Accounts.user()) {\n        loginButtons.push({\n          id: 'switchToSignOut',\n          label: this.translate('cancel'),\n          type: 'link',\n          href: profilePath,\n          onClick: this.switchToSignOut.bind(this)\n        });\n      } else {\n        loginButtons.push({\n          id: 'cancelResetPassword',\n          label: this.translate('cancel'),\n          type: 'link',\n          onClick: this.cancelResetPassword.bind(this)\n        });\n      }\n    }\n\n    // Sort the button array so that the submit button always comes first, and\n    // buttons should also come before links.\n    loginButtons.sort((a, b) => {\n      return (\n        (b.type == 'submit' && a.type != undefined) -\n        (a.type == 'submit' && b.type != undefined)\n      );\n    });\n\n    return indexBy(loginButtons, 'id');\n  }\n\n  showSignInLink() {\n    return (\n      this.state.formState == STATES.SIGN_IN && Package['accounts-password']\n    );\n  }\n\n  showPasswordChangeForm() {\n    return (\n      Package['accounts-password'] &&\n      this.state.formState == STATES.PASSWORD_CHANGE\n    );\n  }\n\n  showEnrollAccountForm() {\n    return (\n      Package['accounts-password'] &&\n      this.state.formState == STATES.ENROLL_ACCOUNT\n    );\n  }\n\n  showCreateAccountLink() {\n    return (\n      this.state.formState == STATES.SIGN_IN &&\n      !Accounts._options.forbidClientAccountCreation &&\n      Package['accounts-password']\n    );\n  }\n\n  showForgotPasswordLink() {\n    return (\n      !this.props.user &&\n      this.state.formState == STATES.SIGN_IN &&\n      [\n        'USERNAME_AND_EMAIL',\n        'USERNAME_AND_OPTIONAL_EMAIL',\n        'EMAIL_ONLY'\n      ].includes(passwordSignupFields())\n    );\n  }\n\n  /**\n   * Helper to store field values while using the form.\n   */\n  setDefaultFieldValues(defaults) {\n    if (typeof defaults !== 'object') {\n      throw new Error(\n        'Argument to setDefaultFieldValues is not of type object'\n      );\n    } else if (typeof localStorage !== 'undefined' && localStorage) {\n      localStorage.setItem(\n        'accounts_ui',\n        JSON.stringify({\n          passwordSignupFields: passwordSignupFields(),\n          ...this.getDefaultFieldValues(),\n          ...defaults\n        })\n      );\n    }\n  }\n\n  /**\n   * Helper to get field values when switching states in the form.\n   */\n  getDefaultFieldValues() {\n    if (typeof localStorage !== 'undefined' && localStorage) {\n      const defaultFieldValues = JSON.parse(\n        localStorage.getItem('accounts_ui') || null\n      );\n      if (\n        defaultFieldValues &&\n        defaultFieldValues.passwordSignupFields === passwordSignupFields()\n      ) {\n        return defaultFieldValues;\n      }\n    }\n  }\n\n  /**\n   * Helper to clear field values when signing in, up or out.\n   */\n  clearDefaultFieldValues() {\n    if (typeof localStorage !== 'undefined' && localStorage) {\n      localStorage.removeItem('accounts_ui');\n    }\n  }\n\n  switchToSignUp(event) {\n    event.preventDefault();\n    this.setState({\n      formState: STATES.SIGN_UP,\n      ...this.getDefaultFieldValues()\n    });\n    this.clearMessages();\n  }\n\n  switchToSignIn(event) {\n    event.preventDefault();\n    this.setState({\n      formState: STATES.SIGN_IN,\n      ...this.getDefaultFieldValues()\n    });\n    this.clearMessages();\n  }\n\n  switchToPasswordReset(event) {\n    event.preventDefault();\n    this.setState({\n      formState: STATES.PASSWORD_RESET,\n      ...this.getDefaultFieldValues()\n    });\n    this.clearMessages();\n  }\n\n  switchToChangePassword(event) {\n    event.preventDefault();\n    this.setState({\n      formState: STATES.PASSWORD_CHANGE,\n      ...this.getDefaultFieldValues()\n    });\n    this.clearMessages();\n  }\n\n  switchToSignOut(event) {\n    event.preventDefault();\n    this.setState({\n      formState: STATES.PROFILE\n    });\n    this.clearMessages();\n  }\n\n  cancelResetPassword(event) {\n    event.preventDefault();\n    Accounts._loginButtonsSession.set('resetPasswordToken', null);\n    this.setState({\n      formState: STATES.SIGN_IN,\n      messages: []\n    });\n  }\n\n  signOut() {\n    Meteor.logout(() => {\n      this.setState({\n        formState: STATES.SIGN_IN,\n        password: null\n      });\n      this.state.onSignedOutHook();\n      this.clearMessages();\n      this.clearDefaultFieldValues();\n    });\n  }\n\n  signIn() {\n    const {\n      username = null,\n      email = null,\n      usernameOrEmail = null,\n      password,\n      formState,\n      onSubmitHook\n    } = this.state;\n    let error = false;\n    let loginSelector;\n    this.clearMessages();\n\n    if (usernameOrEmail !== null) {\n      if (!this.validateField('username', usernameOrEmail)) {\n        if (this.state.formState == STATES.SIGN_UP) {\n          this.state.onSubmitHook(\n            'error.accounts.usernameRequired',\n            this.state.formState\n          );\n        }\n        error = true;\n      } else {\n        if (\n          ['USERNAME_AND_EMAIL_NO_PASSWORD'].includes(passwordSignupFields())\n        ) {\n          this.loginWithoutPassword();\n          return;\n        } else {\n          loginSelector = usernameOrEmail;\n        }\n      }\n    } else if (username !== null) {\n      if (!this.validateField('username', username)) {\n        if (this.state.formState == STATES.SIGN_UP) {\n          this.state.onSubmitHook(\n            'error.accounts.usernameRequired',\n            this.state.formState\n          );\n        }\n        error = true;\n      } else {\n        loginSelector = { username: username };\n      }\n    } else if (usernameOrEmail == null) {\n      if (!this.validateField('email', email)) {\n        error = true;\n      } else {\n        if (['EMAIL_ONLY_NO_PASSWORD'].includes(passwordSignupFields())) {\n          this.loginWithoutPassword();\n          error = true;\n        } else {\n          loginSelector = { email };\n        }\n      }\n    }\n    if (\n      !['EMAIL_ONLY_NO_PASSWORD'].includes(passwordSignupFields()) &&\n      !this.validateField('password', password)\n    ) {\n      error = true;\n    }\n\n    if (!error) {\n      Meteor.loginWithPassword(loginSelector, password, (error, result) => {\n        onSubmitHook(error, formState);\n        if (error) {\n          this.showMessage(\n            `error.accounts.${error.reason}` || 'unknown_error',\n            'error'\n          );\n        } else {\n          loginResultCallback(() => this.state.onSignedInHook());\n          this.setState({\n            formState: STATES.PROFILE,\n            password: null\n          });\n          this.clearDefaultFieldValues();\n        }\n      });\n    }\n  }\n\n  oauthButtons() {\n    const { formState, waiting } = this.state;\n    let oauthButtons = [];\n    if (formState == STATES.SIGN_IN || formState == STATES.SIGN_UP) {\n      if (Accounts.oauth) {\n        Accounts.oauth.serviceNames().map(service => {\n          oauthButtons.push({\n            id: service,\n            label: capitalize(service),\n            disabled: waiting,\n            type: 'button',\n            className: `btn-${service} ${service}`,\n            onClick: this.oauthSignIn.bind(this, service)\n          });\n        });\n      }\n    }\n    return indexBy(oauthButtons, 'id');\n  }\n\n  oauthSignIn(serviceName) {\n    const { user } = this.props;\n    const { formState, waiting, onSubmitHook } = this.state;\n    //Thanks Josh Owens for this one.\n    function capitalService() {\n      return serviceName.charAt(0).toUpperCase() + serviceName.slice(1);\n    }\n\n    if (serviceName === 'meteor-developer') {\n      serviceName = 'meteorDeveloperAccount';\n    }\n\n    const loginWithService = Meteor['loginWith' + capitalService()];\n\n    let options = {}; // use default scope unless specified\n    if (Accounts.ui._options.requestPermissions[serviceName])\n      options.requestPermissions =\n        Accounts.ui._options.requestPermissions[serviceName];\n    if (Accounts.ui._options.requestOfflineToken[serviceName])\n      options.requestOfflineToken =\n        Accounts.ui._options.requestOfflineToken[serviceName];\n    if (Accounts.ui._options.forceApprovalPrompt[serviceName])\n      options.forceApprovalPrompt =\n        Accounts.ui._options.forceApprovalPrompt[serviceName];\n\n    this.clearMessages();\n    const self = this;\n    loginWithService(options, error => {\n      onSubmitHook(error, formState);\n      if (error) {\n        this.showMessage(`error.accounts.${error.reason}` || 'unknown_error');\n      } else {\n        this.setState({ formState: STATES.PROFILE });\n        this.clearDefaultFieldValues();\n        loginResultCallback(() => {\n          Meteor.setTimeout(() => this.state.onSignedInHook(), 100);\n        });\n      }\n    });\n  }\n\n  signUp(options = {}) {\n    const {\n      username = null,\n      email = null,\n      usernameOrEmail = null,\n      password,\n      formState,\n      onSubmitHook\n    } = this.state;\n    let error = false;\n    this.clearMessages();\n\n    if (username !== null) {\n      if (!this.validateField('username', username)) {\n        if (this.state.formState == STATES.SIGN_UP) {\n          this.state.onSubmitHook(\n            'error.accounts.usernameRequired',\n            this.state.formState\n          );\n        }\n        error = true;\n      } else {\n        options.username = username;\n      }\n    } else {\n      if (\n        ['USERNAME_AND_EMAIL', 'USERNAME_AND_EMAIL_NO_PASSWORD'].includes(\n          passwordSignupFields()\n        ) &&\n        !this.validateField('username', username)\n      ) {\n        if (this.state.formState == STATES.SIGN_UP) {\n          this.state.onSubmitHook(\n            'error.accounts.usernameRequired',\n            this.state.formState\n          );\n        }\n        error = true;\n      }\n    }\n\n    if (!this.validateField('email', email)) {\n      error = true;\n    } else {\n      options.email = email;\n    }\n\n    if (\n      ['EMAIL_ONLY_NO_PASSWORD', 'USERNAME_AND_EMAIL_NO_PASSWORD'].includes(\n        passwordSignupFields()\n      )\n    ) {\n      // Generate a random password.\n      options.password = Meteor.uuid();\n    } else if (!this.validateField('password', password)) {\n      onSubmitHook('Invalid password', formState);\n      error = true;\n    } else {\n      options.password = password;\n    }\n\n    const SignUp = function(_options) {\n      Accounts.createUser(_options, error => {\n        if (error) {\n          this.showMessage(\n            `error.accounts.${error.reason}` || 'unknown_error',\n            'error'\n          );\n          if (this.translate(`error.accounts.${error.reason}`)) {\n            onSubmitHook(`error.accounts.${error.reason}`, formState);\n          } else {\n            onSubmitHook('unknown_error', formState);\n          }\n        } else {\n          onSubmitHook(null, formState);\n          this.setState({ formState: STATES.PROFILE, password: null });\n          let user = Accounts.user();\n          loginResultCallback(\n            this.state.onPostSignUpHook.bind(this, _options, user)\n          );\n          this.clearDefaultFieldValues();\n        }\n\n        this.setState({ waiting: false });\n      });\n    };\n\n    if (!error) {\n      this.setState({ waiting: true });\n      // Allow for Promises to return.\n      let promise = this.state.onPreSignUpHook(options);\n      if (promise instanceof Promise) {\n        promise.then(SignUp.bind(this, options));\n      } else {\n        SignUp(options);\n      }\n    }\n  }\n\n  loginWithoutPassword() {\n    const {\n      email = '',\n      usernameOrEmail = '',\n      waiting,\n      formState,\n      onSubmitHook\n    } = this.state;\n\n    if (waiting) {\n      return;\n    }\n\n    if (this.validateField('email', email)) {\n      this.setState({ waiting: true });\n\n      Accounts.loginWithoutPassword({ email: email }, error => {\n        if (error) {\n          this.showMessage(\n            `error.accounts.${error.reason}` || 'unknown_error',\n            'error'\n          );\n        } else {\n          this.showMessage(this.translate('info.emailSent'), 'success', 5000);\n          this.clearDefaultFieldValues();\n        }\n        onSubmitHook(error, formState);\n        this.setState({ waiting: false });\n      });\n    } else if (this.validateField('username', usernameOrEmail)) {\n      this.setState({ waiting: true });\n\n      Accounts.loginWithoutPassword(\n        { email: usernameOrEmail, username: usernameOrEmail },\n        error => {\n          if (error) {\n            this.showMessage(\n              `error.accounts.${error.reason}` || 'unknown_error',\n              'error'\n            );\n          } else {\n            this.showMessage(this.translate('info.emailSent'), 'success', 5000);\n            this.clearDefaultFieldValues();\n          }\n          onSubmitHook(error, formState);\n          this.setState({ waiting: false });\n        }\n      );\n    } else {\n      let errMsg = null;\n      if (['USERNAME_AND_EMAIL_NO_PASSWORD'].includes(passwordSignupFields())) {\n        errMsg = this.translate('error.accounts.invalid_email');\n      } else {\n        errMsg = this.translate('error.accounts.invalid_email');\n      }\n      this.showMessage(errMsg, 'warning');\n      onSubmitHook(errMsg, formState);\n    }\n  }\n\n  passwordReset() {\n    const { email = '', waiting, formState, onSubmitHook } = this.state;\n\n    if (waiting) {\n      return;\n    }\n\n    this.clearMessages();\n    if (this.validateField('email', email)) {\n      this.setState({ waiting: true });\n\n      Accounts.forgotPassword({ email: email }, error => {\n        if (error) {\n          this.showMessage(\n            `error.accounts.${error.reason}` || 'unknown_error',\n            'error'\n          );\n        } else {\n          this.showMessage(this.translate('info.emailSent'), 'success', 5000);\n          this.clearDefaultFieldValues();\n        }\n        onSubmitHook(error, formState);\n        this.setState({ waiting: false });\n      });\n    }\n  }\n\n  passwordChange() {\n    const {\n      password,\n      newPassword,\n      formState,\n      onSubmitHook,\n      onSignedInHook\n    } = this.state;\n\n    if (!this.validateField('password', newPassword)) {\n      onSubmitHook('err.minChar', formState);\n      return;\n    }\n\n    let token = Accounts._loginButtonsSession.get('resetPasswordToken');\n    if (!token) {\n      token = Accounts._loginButtonsSession.get('enrollAccountToken');\n    }\n    if (token) {\n      Accounts.resetPassword(token, newPassword, error => {\n        if (error) {\n          this.showMessage(\n            `error.accounts.${error.reason}` || 'unknown_error',\n            'error'\n          );\n          onSubmitHook(error, formState);\n        } else {\n          this.showMessage(\n            this.translate('info.passwordChanged'),\n            'success',\n            5000\n          );\n          onSubmitHook(null, formState);\n          this.setState({ formState: STATES.PROFILE });\n          Accounts._loginButtonsSession.set('resetPasswordToken', null);\n          Accounts._loginButtonsSession.set('enrollAccountToken', null);\n          onSignedInHook();\n        }\n      });\n    } else {\n      Accounts.changePassword(password, newPassword, error => {\n        if (error) {\n          this.showMessage(\n            `error.accounts.${error.reason}` || 'unknown_error',\n            'error'\n          );\n          onSubmitHook(error, formState);\n        } else {\n          this.showMessage('info.passwordChanged', 'success', 5000);\n          onSubmitHook(null, formState);\n          this.setState({ formState: STATES.PROFILE });\n          this.clearDefaultFieldValues();\n        }\n      });\n    }\n  }\n\n  showMessage(message, type, clearTimeout, field) {\n    message = this.translate(message).trim();\n    if (message) {\n      this.setState(({ messages = [] }) => {\n        messages.push({\n          message,\n          type,\n          ...(field && { field })\n        });\n        return { messages };\n      });\n      if (clearTimeout) {\n        this.hideMessageTimout = setTimeout(() => {\n          // Filter out the message that timed out.\n          this.clearMessage(message);\n        }, clearTimeout);\n      }\n    }\n  }\n\n  getMessageForField(field) {\n    const { messages = [] } = this.state;\n    return messages.find(({ field: key }) => key === field);\n  }\n\n  clearMessage(message) {\n    if (message) {\n      this.setState(({ messages = [] }) => ({\n        messages: messages.filter(({ message: a }) => a !== message)\n      }));\n    }\n  }\n\n  clearMessages() {\n    if (this.hideMessageTimout) {\n      clearTimeout(this.hideMessageTimout);\n    }\n    this.setState({ messages: [] });\n  }\n\n  componentWillMount() {\n    // XXX Check for backwards compatibility.\n    if (Meteor.isClient) {\n      const container = document.createElement('div');\n      ReactDOM.render(<Accounts.ui.Field message=\"test\" />, container);\n      if (container.getElementsByClassName('message').length == 0) {\n        // Found backwards compatibility issue with 1.3.x\n        console.warn(`Implementations of Accounts.ui.Field must render message in v1.2.11.\n          https://github.com/studiointeract/accounts-ui/#deprecations`);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.hideMessageTimout) {\n      clearTimeout(this.hideMessageTimout);\n    }\n  }\n\n  render() {\n    this.oauthButtons();\n    // Backwords compatibility with v1.2.x.\n    const { messages = [] } = this.state;\n    const message = {\n      deprecated: true,\n      message: messages.map(({ message }) => message).join(', ')\n    };\n    return (\n      <Accounts.ui.Form\n        oauthServices={this.oauthButtons()}\n        fields={this.fields()}\n        buttons={this.buttons()}\n        {...this.state}\n        message={message}\n        translate={text => this.translate(text)}\n      />\n    );\n  }\n}\nLoginForm.propTypes = {\n  formState: PropTypes.symbol,\n  loginPath: PropTypes.string,\n  signUpPath: PropTypes.string,\n  resetPasswordPath: PropTypes.string,\n  profilePath: PropTypes.string,\n  changePasswordPath: PropTypes.string\n};\nLoginForm.defaultProps = {\n  formState: null,\n  loginPath: null,\n  signUpPath: null,\n  resetPasswordPath: null,\n  profilePath: null,\n  changePasswordPath: null\n};\n\nAccounts.ui.LoginForm = LoginForm;\n\nconst LoginFormContainer = withTracker(() => {\n  // Listen for the user to login/logout and the services list to the user.\n  Meteor.subscribe('servicesList');\n  return {\n    user: Accounts.user()\n  };\n})(LoginForm);\nAccounts.ui.LoginForm = LoginFormContainer;\nexport default LoginFormContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Accounts } from 'meteor/accounts-base';\nimport { T9n } from 'meteor-accounts-t9n';\nimport { hasPasswordService } from '../../helpers.js';\n\nexport class PasswordOrService extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasPasswordService: hasPasswordService(),\n      services: Object.keys(props.oauthServices).map(service => {\n        return props.oauthServices[service].label;\n      })\n    };\n  }\n\n  translate(text) {\n    if (this.props.translate) {\n      return this.props.translate(text);\n    }\n    return T9n.get(text);\n  }\n\n  render() {\n    let { className = 'password-or-service', style = {} } = this.props;\n    let { hasPasswordService, services } = this.state;\n    labels = services;\n    if (services.length > 2) {\n      labels = [];\n    }\n\n    if (hasPasswordService && services.length > 0) {\n      return (\n        <div style={style} className={className}>\n          {`${this.translate('orUse')} ${labels.join(' / ')}`}\n        </div>\n      );\n    }\n    return null;\n  }\n}\n\nPasswordOrService.propTypes = {\n  oauthServices: PropTypes.object\n};\n\nAccounts.ui.PasswordOrService = PasswordOrService;\n","import React from 'react';\nimport './Button.jsx';\nimport { Accounts } from 'meteor/accounts-base';\n\nexport class SocialButtons extends React.Component {\n  render() {\n    let { oauthServices = {}, className = 'social-buttons' } = this.props;\n    return (\n      <div className={className}>\n        {Object.keys(oauthServices).map((id, i) => {\n          return <Accounts.ui.Button {...oauthServices[id]} key={i} />;\n        })}\n      </div>\n    );\n  }\n}\n\nAccounts.ui.SocialButtons = SocialButtons;\n"]}}]