{"version":3,"sources":["meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/redis-oplog.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/config.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/constants.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/debug.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/init.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/publishWithRedis.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/cache/ObservableCollection.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/cache/PublicationEntry.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/cache/PublicationFactory.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/cache/PublicationStore.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/cache/mongoIdMap.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/cache/lib/extractFieldsFromFilters.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/cache/lib/fieldProjectionIsExclusion.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/cache/lib/getChannels.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/mongo/Mutator.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/mongo/SyntheticMutator.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/mongo/extendMongoCollection.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/mongo/extendObserveChanges.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/mongo/mongoCollectionNames.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/mongo/allow-deny/docToValidate.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/mongo/allow-deny/transformDoc.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/mongo/allow-deny/validatedInsert.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/mongo/allow-deny/validatedRemove.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/mongo/allow-deny/validatedUpdate.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/mongo/lib/containsOperators.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/mongo/lib/dispatchers.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/mongo/lib/getMutationConfig.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/processors/default.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/processors/direct.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/processors/getStrategy.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/processors/index.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/processors/limit-sort.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/processors/synthetic.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/processors/actions/reload.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/processors/actions/requery.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/processors/lib/fieldsExist.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/redis/PubSubManager.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/redis/RedisSubscriber.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/redis/RedisSubscriptionManager.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/redis/getRedisClient.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/redis/lib/getFieldsOfInterestFromAll.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/utils/extractIdsFromSelector.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/utils/getChannelName.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/utils/getDedicatedChannel.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/utils/getFields.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/utils/shouldPublicationBeWithPolling.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/utils/stats.js","meteor://ðŸ’»app/packages/cultofcoders:redis-oplog/lib/vent/Vent.js"],"names":["module","export","RedisOplog","SyntheticMutator","ObservableCollection","RedisPipe","Config","Events","Vent","publishWithRedis","getRedisListener","getRedisPusher","PublicationFactory","link","default","v","Meteor","stats","init","startup","Package","console","log","process","env","REDIS_OPLOG_SETTINGS","JSON","parse","settings","redisOplog","isInitialized","debug","overridePublishFunction","mutationDefaults","pushToRedis","optimistic","passConfigDown","redis","port","host","globalRedisPrefix","retryIntervalMs","externalRedisPublisher","redisExtras","retry_strategy","options","events","end","err","error","stringify","connect","reconnecting","exportDefault","Strategy","VentConstants","EVENT","DOC","FIELDS","MODIFIER","DOCUMENT_ID","SYNTHETIC","UID","MODIFIED_TOP_LEVEL_FIELDS","INSERT","UPDATE","REMOVE","DEFAULT","DEDICATED_CHANNELS","LIMIT_SORT","ID","EVENT_VARIABLE","PREFIX","getPrefix","id","name","message","trace","timestamp","Date","getTime","extendMongoCollection","RedisSubscriptionManager","PubSubManager","deepExtend","config","_","extend","oldPublish","publish","bind","server","onConnect","reloadAll","pubSubManager","shouldPublicationBeWithPolling","fn","opts","isObject","each","value","key","args","cursors","call","isArray","eligibleCursors","filter","cursor","_cursorDescription","nonEligibleCursors","publicationEntries","queue","runTask","forEach","push","create","onStop","publicationEntry","removeObserver","ready","DiffSequence","LocalCollection","Minimongo","cloneDeep","fieldProjectionIsExclusion","getChannels","extractFieldsFromFilters","MongoIDMap","allowedOptions","Matcher","constructor","observer","store","cursorDescription","collectionName","collection","Mongo","Collection","__getCollectionByName","selector","isString","_id","pick","Error","fields","isEmpty","fieldsArray","keys","projectFieldsOnDoc","_compileProjection","isFieldsProjectionByExclusion","channels","testDocEligibility","_createTestDocEligibility","fieldsOfInterest","_getFieldsOfInterest","__isInitialized","isEligible","doc","isEligibleByDB","findOne","data","fetch","set","contains","docId","has","send","event","add","safe","addById","change","modifiedFields","oldDoc","get","newDoc","transform","changedTopLevelFields","makeChangedFields","changeSynthetic","modifier","topLevelFields","storedDoc","_modify","topLevelField","remove","pop","clearStore","clear","isLimitReached","limit","size","self","length","matcher","object","documentMatches","result","e","toString","indexOf","slice","union","PublicationEntry","RedisSubscriber","getStrategy","DDP","factory","observers","observableCollection","facts","Facts","incrementServerFact","strategy","oc","__containsOtherSelectorsThanId","redisSubscriber","stop","addObserver","added","_performInitialAddForObserver","without","isObserversEmpty","action","invoke","_CurrentInvocation","connection","currentId","currentObservers","o","defer","EJSON","PublicationStore","reload","_SynchronousQueue","description","extendCursorWithCollectionDefaults","getPublicationId","find","_getCollectionName","omit","entries","getAll","entry","context","_cursor","_redisOplog","values","MongoID","idStringify","idParse","_internal","Map","_idStringify","_idParse","ret","delete","setDefault","def","empty","Array","from","map","iterator","compareWith","other","callbacks","leftMap","rightMap","leftValue","rightValue","both","leftOnly","rightOnly","deepFilterFieldsArray","deepFilterFieldsObject","filters","filterFields","field","element","getChannelName","namespace","channel","namespaces","channelStrings","Mutator","getMutationConfig","getFields","dispatchInsert","dispatchUpdate","dispatchRemove","runCallbackInBackground","bindEnvironment","undefined","insert","Originals","_config","canUseOriginalMethod","isFunction","_name","_channels","update","callback","findOptions","multi","docIds","upsert","_handleUpsert","updateSelector","$in","_returnObject","insertedId","numberAffected","warn","removeSelector","mutationConfig","Random","containsOperators","client","_extractChannels","extendObserveChanges","_validatedInsert","_validatedUpdate","_validatedRemove","prototype","configureRedisOplog","mutation","diff","disableOplog","Object","assign","observeChanges","_observer","createPublicationEntry","createObserveChanges","observe","createObserve","pe","_multiplexer","_sendAdds","ef","getObserverConnection","changed","changedDiff","differences","removed","currentPublishInvoke","_CurrentPublicationInvocation","getName","base","sub","origProto","defineProperty","enumerable","old","extension","docToValidate","validator","generatedId","clone","transformDoc","validatedInsert","userId","any","_validators","deny","all","allow","validatedRemove","fetchAllFields","fieldName","_collection","validatedUpdate","check","ALLOWED_UPDATE_OPERATIONS","$inc","$set","$unset","$addToSet","$pop","$pullAll","$pull","$pushAll","$push","$bit","mutator","_selectorIsIdPerhapsAsObject","noReplaceError","params","op","charAt","substring","factoriedDoc","_forbidReplace","some","operator","test","DDPServer","getDedicatedChannel","getWriteFence","_CurrentWriteFence","dispatchEvents","fence","write","beginWrite","queueTask","channelName","dedicatedChannel","committed","uid","mutationObject","defaultOverrides","_CurrentMethodInvocation","handleInsert","handleUpdate","handleRemove","otherSelectors","sort","getProcessor","defaultStrategy","directStrategy","limitSortStrategy","StrategyProcessorMap","hasSortFields","requery","skip","modifiedTopLevelFields","freshData","newStore","newCommer","freshIds","equals","fieldsObject","existingFields","i","j","existingField","channelHandlers","listener","pusher","_initMessageListener","subscribe","handler","_initChannel","unsubscribe","_handler","_destroyChannel","on","_message","channelHandler","extractIdsFromSelector","syntheticProcessor","processor","attach","ids","processSynthetic","detach","getFieldsOfInterest","getFieldsOfInterestFromAll","initializeChannel","destroyChannel","fromRedis","subscribers","isSynthetic","getDoc","redisPusher","redisListener","createClient","getRetryStrategy","attachEvents","functions","removeChildrenOfParents","allFields","subscriber","array","freshArray","idxe","foundParent","subelement","idxs","_str","baseChannelName","specificPositionFieldMatch","exec","index","split","isDisabledOplog","isOplogDisabled","disabledConfigs","allTheSame","every","c","sizeof","totalQueries","redisChannels","totalSize","totalObservers","maxSize","maxSizePubEntry","maxObservers","maxObserversPubEntry","pubEntry","observersCount","response","count","_validateArguments","_createPublishEndPoint","emit","collectionId","_extendPublishContext","redisEventHandler","_session","msg"],"mappings":"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","file":"/packages/cultofcoders_redis-oplog.js","sourcesContent":["import './lib/mongo//mongoCollectionNames';\n\nimport publishWithRedis from './lib/publishWithRedis';\nimport { RedisPipe, Events } from './lib/constants';\nimport { Meteor } from 'meteor/meteor';\nimport stats from './lib/utils/stats';\nimport init from './lib/init';\nimport Config from './lib/config';\nimport { getRedisListener, getRedisPusher } from './lib/redis/getRedisClient';\nimport SyntheticMutator from './lib/mongo/SyntheticMutator';\nimport ObservableCollection from './lib/cache/ObservableCollection';\nimport Vent from './lib/vent/Vent';\nimport PublicationFactory from './lib/cache/PublicationFactory';\n\nconst RedisOplog = {\n    init,\n    stats\n};\n\n// Warnings\nMeteor.startup(function () {\n    if (Package['insecure']) {\n        console.log(\"RedisOplog does not support the insecure package.\")\n    }\n});\n\nexport {\n    RedisOplog,\n    SyntheticMutator,\n    ObservableCollection,\n    RedisPipe,\n    Config,\n    Events,\n    Vent,\n    publishWithRedis,\n    getRedisListener,\n    getRedisPusher,\n    PublicationFactory,\n}\n\nif (process.env.REDIS_OPLOG_SETTINGS) {\n    init(JSON.parse(process.env.REDIS_OPLOG_SETTINGS));\n} else if (Meteor.settings.redisOplog) {\n    init(Meteor.settings.redisOplog);\n}","/**\n * In-Memory configuration storage\n */\nlet Config = {\n    isInitialized: false,\n    debug: false,\n    overridePublishFunction: true,\n    mutationDefaults: {\n        pushToRedis: true,\n        optimistic: true,\n    },\n    passConfigDown: false,\n    redis: {\n        port: 6379,\n        host: '127.0.0.1'\n    },\n    globalRedisPrefix: '',\n    retryIntervalMs: 10000,\n    externalRedisPublisher: false,\n    redisExtras: {\n        retry_strategy: function(options) {\n            return Config.retryIntervalMs;\n            // reconnect after\n            // return Math.min(options.attempt * 100, 30000);\n        },\n        events: {\n            end(err) {\n                console.error('RedisOplog - Connection to redis ended');\n            },\n            error(err) {\n                console.error(\n                    `RedisOplog - An error occured: \\n`,\n                    JSON.stringify(err)\n                );\n            },\n            connect(err) {\n                if (!err) {\n                    console.log(\n                        'RedisOplog - Established connection to redis.'\n                    );\n                } else {\n                    console.error(\n                        'RedisOplog - There was an error when connecting to redis',\n                        JSON.stringify(err)\n                    );\n                }\n            },\n            reconnecting(err) {\n                if (err) {\n                    console.error(\n                        'RedisOplog - There was an error when re-connecting to redis',\n                        JSON.stringify(err)\n                    );\n                }\n            },\n        },\n    },\n};\n\nexport default Config;\n","const RedisPipe = {\n    EVENT: 'e',\n    DOC: 'd',\n    FIELDS: 'f',\n    MODIFIER: 'm',\n    DOCUMENT_ID: 'id',\n    SYNTHETIC: 's',\n    UID: 'u', // this is the unique identity of a change request\n    MODIFIED_TOP_LEVEL_FIELDS: 'mt'\n};\n\nexport default RedisPipe;\n\nconst Events = {\n    INSERT: 'i',\n    UPDATE: 'u',\n    REMOVE: 'r'\n};\n\nconst Strategy = {\n    DEFAULT: 'D',\n    DEDICATED_CHANNELS: 'DC',\n    LIMIT_SORT: 'LS'\n};\n\nconst VentConstants = {\n    ID: 'i',\n    EVENT_VARIABLE: 'e',\n    PREFIX: '__vent',\n    getPrefix(id, name) {\n        return `${id}.${name}`;\n    }\n};\n\nexport {\n    Events,\n    Strategy,\n    RedisPipe,\n    VentConstants\n};\n","import Config from './config';\n\nexport default (message, trace = false) => {\n    if (Config.debug) {\n        const timestamp = (new Date()).getTime();\n        console.log(`[${timestamp}] - ` + message);\n\n        if (trace) {\n            console.log(trace);\n        }\n    }\n}","// https://github.com/luin/ioredis#connect-to-redis\nimport Config from './config';\nimport extendMongoCollection from './mongo/extendMongoCollection';\nimport RedisSubscriptionManager from './redis/RedisSubscriptionManager';\nimport publishWithRedis from './publishWithRedis';\nimport PubSubManager from './redis/PubSubManager';\nimport {getRedisListener} from './redis/getRedisClient';\nimport PublicationFactory from './cache/PublicationFactory';\nimport deepExtend from 'deep-extend';\n\nlet isInitialized = false;\n\nexport default (config = {}) => {\n    if (isInitialized) {\n        throw 'You cannot initialize RedisOplog twice.';\n    }\n\n    isInitialized = true;\n\n    deepExtend(Config, config);\n\n    _.extend(Config, {\n        isInitialized: true,\n        oldPublish: Meteor.publish,\n    });\n\n    extendMongoCollection();\n\n    Meteor.publishWithRedis = publishWithRedis.bind(Meteor);\n\n    if (Config.overridePublishFunction) {\n        Meteor.publish = Meteor.publishWithRedis;\n        Meteor.server.publish = Meteor.publishWithRedis;\n    }\n\n    // this initializes the listener singleton with the proper onConnect functionality\n    getRedisListener({\n        onConnect() {\n            // this will be executed initially, but since there won't be any observable collections, nothing will happen\n            PublicationFactory.reloadAll();\n        }\n    });\n\n    RedisSubscriptionManager.init();\n    Config.pubSubManager = new PubSubManager();\n}\n","import { Meteor } from 'meteor/meteor';\nimport { _ } from 'meteor/underscore';\nimport shouldPublicationBeWithPolling from './utils/shouldPublicationBeWithPolling';\nimport PublicationFactory from './cache/PublicationFactory';\nimport debug from './debug';\nimport Config from './config';\n\n/*\nMeteor.publishWithRedis(name, function () {\n // return cursor or array of cursors\n})\n*/\nexport default function publishWithRedis(name, fn, opts = {}) {\n    if (_.isObject(name)) {\n        return _.each(name, (value, key) => {\n            publishWithRedis(key, value);\n        });\n    }\n\n    debug('[Main] Created publication with name: ' + name);\n\n    Config.oldPublish(\n        name,\n        function(...args) {\n            debug('[Main] New incomming subscription for publication: ' + name);\n\n            let cursors = fn.call(this, ...args);\n            if (!cursors) {\n                return;\n            }\n\n            if (!_.isArray(cursors)) {\n                cursors = [cursors];\n            }\n\n            const eligibleCursors = _.filter(cursors, cursor => {\n                return cursor && !!cursor._cursorDescription;\n            });\n            const nonEligibleCursors = _.filter(cursors, cursor => {\n                return !cursor || !cursor._cursorDescription;\n            });\n\n            if (shouldPublicationBeWithPolling(cursors)) {\n                return cursors;\n            }\n\n            let publicationEntries = [];\n\n            PublicationFactory.queue.runTask(() => {\n                eligibleCursors.forEach(cursor => {\n                    publicationEntries.push(\n                        PublicationFactory.create(cursor, this)\n                    );\n                });\n            });\n\n            this.onStop(() => {\n                PublicationFactory.queue.runTask(() => {\n                    debug(\n                        '[Main] Stopping the Meteor subscription for publication: ' +\n                            name\n                    );\n                    publicationEntries.forEach(publicationEntry => {\n                        publicationEntry.removeObserver(this);\n                    });\n                });\n            });\n\n            this.ready();\n\n            return nonEligibleCursors;\n        },\n        opts\n    );\n}\n","import { DiffSequence } from 'meteor/diff-sequence';\nimport { _ } from 'meteor/underscore';\nimport { LocalCollection, Minimongo } from 'meteor/minimongo';\nimport cloneDeep from 'lodash.clonedeep';\nimport fieldProjectionIsExclusion from './lib/fieldProjectionIsExclusion';\nimport getChannels from './lib/getChannels';\nimport extractFieldsFromFilters from './lib/extractFieldsFromFilters';\nimport { MongoIDMap } from './mongoIdMap';\n\nconst allowedOptions = [\n    'limit',\n    'skip',\n    'sort',\n    'fields',\n    'channels',\n    'channel',\n    'namespace',\n    'namespaces',\n];\n\nconst { Matcher } = Minimongo;\n\nexport default class ObservableCollection {\n    /**\n     * @param observer\n     * @param cursor\n     * @param config\n     */\n    constructor(observer, cursor, config = {}) {\n        this.observer = observer;\n        this.cursor = cursor;\n        this.config = config;\n        this.store = new MongoIDMap();\n\n        const cursorDescription = cursor._cursorDescription;\n\n        if (cursorDescription) {\n            this.collectionName = cursorDescription.collectionName;\n            this.collection = Mongo.Collection.__getCollectionByName(\n                this.collectionName\n            );\n\n            this.selector = cursorDescription.selector || {};\n\n            if (_.isString(this.selector)) {\n                this.selector = { _id: this.selector };\n            }\n\n            if (cursorDescription.options) {\n                this.options = _.pick(\n                    cursorDescription.options,\n                    ...allowedOptions\n                );\n            } else {\n                this.options = {};\n            }\n        } else {\n            this.collectionName = cursor.collection.name;\n            this.collection = Mongo.Collection.__getCollectionByName(\n                this.collectionName\n            );\n            this.selector = {};\n            this.options = {};\n        }\n\n        if (!this.collection) {\n            throw new Meteor.Error(\n                'We could not properly identify the collection by its name: ' +\n                    this.collectionName +\n                    '. Make sure you added redis-oplog package before any package that instantiates a collection.'\n            );\n        }\n\n        // check for empty projector object and delete.\n        if (this.options.fields && _.isEmpty(this.options.fields)) {\n            delete this.options.fields;\n        }\n\n        if (this.options.fields) {\n            this.fieldsArray = _.keys(this.options.fields);\n\n            if (!_.isArray(this.fieldsArray)) {\n                throw new Meteor.Error(\n                    'We could not properly extract any fields. \"fields\" must be an object. This was provided: ' +\n                        JSON.stringify(this.options.fields)\n                );\n            }\n\n            this.projectFieldsOnDoc = LocalCollection._compileProjection(\n                this.options.fields\n            );\n            this.isFieldsProjectionByExclusion = fieldProjectionIsExclusion(\n                this.options.fields\n            );\n        }\n\n        this.channels = getChannels(this.collectionName, this.options);\n        this.testDocEligibility = this._createTestDocEligibility();\n        this.fieldsOfInterest = this._getFieldsOfInterest();\n        this.__isInitialized = false;\n    }\n\n    /**\n     * Function that checks whether or not the doc matches our filters\n     *\n     * @param doc\n     * @returns {*}\n     */\n    isEligible(doc) {\n        if (this.testDocEligibility) {\n            return this.testDocEligibility(doc);\n        }\n\n        return true;\n    }\n\n    /**\n     * @param _id\n     * @returns {boolean}\n     */\n    isEligibleByDB(_id) {\n        if (this.testDocEligibility) {\n            return !!this.collection.findOne(\n                _.extend({}, this.selector, { _id }),\n                { fields: { _id: 1 } }\n            );\n        }\n\n        return true;\n    }\n\n    /**\n     * Performs the initial search then puts them into the store.\n     */\n    init() {\n        if (this.__isInitialized) {\n            return; // silently do nothing.\n        }\n\n        this.__isInitialized = true;\n        let data = this.cursor.fetch();\n\n        data.forEach(doc => {\n            this.store.set(doc._id, doc);\n        });\n    }\n\n    /**\n     * @param docId\n     * @returns {boolean}\n     */\n    contains(docId) {\n        return this.store.has(docId);\n    }\n\n    /**\n     * Sends the data through DDP\n     *\n     * @param event\n     * @param args\n     */\n    send(event, ...args) {\n        this.observer.send(event, this.collectionName, ...args);\n    }\n\n    /**\n     * @param doc {Object}\n     * @param safe {Boolean} If this is set to true, it assumes that the object is cleaned\n     */\n    add(doc, safe = false) {\n        doc = cloneDeep(doc);\n\n        if (!safe) {\n            if (this.fieldsArray) {\n                doc = this.projectFieldsOnDoc(doc);\n            }\n        }\n\n        this.store.set(doc._id, doc);\n        this.send('added', doc._id, doc);\n    }\n\n    /**\n     * We use this method when we receive updates for a document that is not yet in the observable collection store\n     * @param docId\n     */\n    addById(docId) {\n        const doc = this.collection.findOne({ _id: docId }, this.options);\n\n        this.store.set(docId, doc);\n\n        if (doc) {\n            this.send('added', doc._id, doc);\n        }\n    }\n\n    /**\n     * Sends over the wire only the top fields of changes, because DDP client doesnt do deep merge.\n     *\n     * @param {object} doc\n     * @param {array} modifiedFields\n     */\n    change(doc, modifiedFields) {\n        const docId = doc._id;\n        const oldDoc = this.store.get(docId);\n        if (oldDoc == null) {\n            return;\n        }\n        let newDoc = cloneDeep(doc);\n        if (this.fieldsArray) {\n            newDoc = this.projectFieldsOnDoc(newDoc);\n        }\n        if (this.options.transform) {\n            newDoc = this.options.transform(newDoc);\n        }\n        this.store.set(docId, newDoc);\n        const changedTopLevelFields = DiffSequence.makeChangedFields(newDoc, oldDoc);\n        if (!_.isEmpty(changedTopLevelFields)) {\n            this.send('changed', docId, changedTopLevelFields, newDoc, oldDoc)\n        }\n    }\n\n    /**\n     * @param docId string\n     * @param modifier object\n     * @param topLevelFields array\n     * @private\n     */\n    changeSynthetic(docId, modifier, topLevelFields) {\n        if (!this.store.has(docId)) {\n            return;\n        }\n\n        let storedDoc = this.store.get(docId);\n        let oldDoc = cloneDeep(storedDoc);\n\n        LocalCollection._modify(storedDoc, modifier);\n        let changedTopLevelFields = {};\n\n        topLevelFields.forEach(topLevelField => {\n            changedTopLevelFields[topLevelField] = storedDoc[topLevelField];\n        });\n\n        this.send('changed', docId, changedTopLevelFields, storedDoc, oldDoc);\n    }\n\n    /**\n     * @param docId\n     */\n    remove(docId) {\n        const doc = this.store.pop(docId);\n        if (doc != null) {\n            this.send('removed', docId, doc);\n        }\n    }\n\n    /**\n     * Clears the store\n     */\n    clearStore() {\n        this.store.clear();\n    }\n\n    /**\n     * Returns whether the limit of allowed documents is reached\n     * based on the selector options\n     */\n    isLimitReached() {\n        if (this.options.limit) {\n            const size = this.store.size();\n            return size >= this.options.limit;\n        }\n\n        return false;\n    }\n\n    /**\n     * Used at initialization\n     *\n     * Creates the function that checks if the document is valid\n     *\n     * @returns {null}\n     * @private\n     */\n    _createTestDocEligibility() {\n        const self = this;\n\n        if (_.keys(this.selector).length) {\n            try {\n                const matcher = new Matcher(this.selector);\n\n                return function (object) {\n                    return matcher.documentMatches(object).result;\n                };\n            } catch (e) {\n                // The logic here is that if our matcher is too complex for minimongo\n                // We put our matching function to query db\n                if (\n                    e.toString().indexOf('Unrecognized logical operator') >= 0\n                ) {\n                    return function (object) {\n                        return self.isEligibleByDB(object._id);\n                    };\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Used at initialization\n     *\n     * Creates and stores the fields specified in fields & filters\n     * If by any chance there are no fields specified, we return true\n     *\n     * @private\n     * @return {true|object}\n     */\n    _getFieldsOfInterest() {\n        if (!this.options.fields) {\n            return true;\n        }\n\n        // if you have some fields excluded (high chances you don't, but we query for all fields either way)\n        // because it can get very tricky with future subscribers that may need some fields\n        if (this.isFieldsProjectionByExclusion) {\n            return true;\n        }\n\n        // if we have options, we surely have fields array\n        let fieldsArray = this.fieldsArray.slice();\n        if (_.keys(this.selector).length > 0) {\n            fieldsArray = _.union(\n                fieldsArray,\n                extractFieldsFromFilters(this.selector)\n            );\n        }\n\n        return fieldsArray;\n    }\n}\n","import ObservableCollection from './ObservableCollection';\nimport RedisSubscriber from '../redis/RedisSubscriber';\nimport { Strategy } from '../constants';\nimport debug from '../debug';\nimport { getStrategy } from '../processors';\nimport { DDP } from 'meteor/ddp-client';\nimport { _ } from 'meteor/underscore';\nimport Config from '../config';\n\nexport default class PublicationEntry {\n    constructor(id, cursor, factory) {\n        this.id = id;\n        this.factory = factory;\n        this.cursor = cursor;\n        this.observers = [];\n\n        /**\n         * @var {ObservableCollection}\n         */\n        this.observableCollection = new ObservableCollection(this, cursor);\n\n        this.init();\n    }\n\n    /**\n     * Initializes subscriptions and the client image on the server\n     */\n    init() {\n        Package.facts &&\n            Package.facts.Facts.incrementServerFact(\n                'mongo-livedata',\n                'observe-multiplexers',\n                1\n            );\n\n        const strategy = getStrategy(\n            this.observableCollection.selector,\n            this.observableCollection.options\n        );\n\n        // We do this because if we have dedicated channels, we may not need to interogate the db for eligibility\n        if (strategy === Strategy.DEDICATED_CHANNELS) {\n            let oc = this.observableCollection;\n            if (oc.selector._id) {\n                oc.__containsOtherSelectorsThanId =\n                    _.keys(oc.selector).length > 1;\n            }\n        }\n\n        this.redisSubscriber = new RedisSubscriber(this, strategy);\n    }\n\n    /**\n     * Handler for stopping the subscription\n     */\n    stop() {\n        Package.facts &&\n            Package.facts.Facts.incrementServerFact(\n                'mongo-livedata',\n                'observe-multiplexers',\n                -1\n            );\n\n        this.redisSubscriber.stop();\n        this.observableCollection.clearStore();\n    }\n\n    /**\n     * @param observer\n     */\n    addObserver(observer) {\n        Package.facts &&\n            Package.facts.Facts.incrementServerFact(\n                'mongo-livedata',\n                'observe-handles',\n                1\n            );\n\n        if (observer.added) {\n            this._performInitialAddForObserver(observer);\n        }\n\n        this.observers.push(observer);\n    }\n\n    /**\n     * @param observer\n     */\n    removeObserver(observer) {\n        Package.facts &&\n            Package.facts.Facts.incrementServerFact(\n                'mongo-livedata',\n                'observe-handles',\n                -1\n            );\n\n        this.observers = _.without(this.observers, observer);\n\n        if (this.isObserversEmpty()) {\n            debug(\n                `[PublicationEntry] No other observers for: ${\n                    this.id\n                }. Stopping subscription to redis.`\n            );\n            this.stop();\n            this.factory.remove(this.id);\n        }\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isObserversEmpty() {\n        return this.observers.length === 0;\n    }\n\n    /**\n     * @param action\n     * @param args\n     */\n    send(action, ...args) {\n        // The idea here is that if you are doing an optimistic-ui mutation from a method\n        // Before the method returns, it should write to the DDP's fence the changes\n        // otherwise with an optimistic ui you will get a flicker (insert client side, response from method => removed, insert again from redis later)\n        // So we will send added events in sync for the current observer, then defer the rest\n        // We should not worry about duplicates because when we send a latency compensated event\n        // We give it a random uuid, and if the listener of redis on this server gets a message with the last uuid, it will not process it\n        // If it's different, and it can still happen, it will process it again, changes are very small.\n        const invoke = DDP._CurrentInvocation.get();\n\n        if (invoke && invoke.connection && invoke.connection.id) {\n            // we send first to all watchers for invoke.connection.id\n            const currentId = invoke.connection.id;\n\n            const currentObservers = _.filter(this.observers, o => {\n                return o.connection && o.connection.id == currentId;\n            });\n\n            if (currentObservers.length) {\n                currentObservers.forEach(observer => {\n                    observer[action].call(observer, ...args);\n                });\n            }\n\n            // defer the rest so that the method yields quickly to the user, because we have applied it's changes.\n            Meteor.defer(() => {\n                this.observers.forEach(observer => {\n                    if (\n                        !observer.connection ||\n                        observer.connection.id != currentId\n                    ) {\n                        observer[action].call(observer, ...args);\n                    }\n                });\n            });\n        } else {\n            this.observers.forEach(observer => {\n                observer[action].call(observer, ...args);\n            });\n        }\n    }\n\n    /**\n     * The first batch of documents that need to be added.\n     * @param observer\n     */\n    _performInitialAddForObserver(observer) {\n        debug('[PublicationEntry] Performing initial add for observer');\n\n        this.observableCollection.init();\n\n        this.observableCollection.store.forEach((doc, _id) => {\n            // prevents error if document was removed while the _.each is running\n            if (!doc) {\n                return;\n            }\n            observer.added.call(\n                observer,\n                this.observableCollection.collectionName,\n                _id,\n                doc\n            );\n        });\n\n        debug('[PublicationEntry] Completed initial add for observer');\n    }\n}\n","import { EJSON } from 'meteor/ejson';\nimport PublicationStore from './PublicationStore';\nimport PublicationEntry from './PublicationEntry';\nimport { _ } from 'meteor/underscore';\nimport reload from '../processors/actions/reload';\nimport debug from '../debug';\n\nexport default new class PublicationFactory {\n    constructor() {\n        this.store = new PublicationStore();\n        this.queue = new Meteor._SynchronousQueue();\n    }\n\n    /**\n     * Potentially creates a new publicationEntry and returns the id\n     *\n     * @param cursor\n     * @param observer\n     * @returns {PublicationEntry}\n     */\n    create(cursor, observer) {\n        let description = cursor._cursorDescription;\n\n        if (!description.selector) {\n            description.selector = {};\n        }\n        if (!description.options) {\n            description.options = {};\n        }\n\n        this.extendCursorWithCollectionDefaults(observer, cursor);\n\n        let id = this.getPublicationId(cursor);\n        let publicationEntry;\n\n        if (this.store.has(id)) {\n            publicationEntry = this.store.find(id);\n            debug(\n                `[PublicationFactory] Re-using existing publication ${\n                    publicationEntry.id\n                }`\n            );\n        } else {\n            publicationEntry = new PublicationEntry(id, cursor, this);\n            debug(\n                `[PublicationFactory] Created new subscribers for redis for: ${\n                    publicationEntry.id\n                }`\n            );\n\n            this.store.add(id, publicationEntry);\n        }\n\n        publicationEntry.addObserver(observer);\n\n        return publicationEntry;\n    }\n\n    /**\n     * @param id\n     */\n    remove(id) {\n        this.store.remove(id);\n    }\n\n    /**\n     * Gets an unique id based on the cursors selector and options\n     * @param cursor\n     * @returns {string}\n     */\n    getPublicationId(cursor) {\n        const description = cursor._cursorDescription;\n        const collectionName = this._getCollectionName(cursor);\n\n        const { selector, options } = description;\n\n        // because of some compatibility stuff\n        return (\n            collectionName +\n            '::' +\n            EJSON.stringify(selector) +\n            EJSON.stringify(_.omit(options, 'transform'))\n        );\n    }\n\n    /**\n     * Refreshes all observableCollections\n     */\n    reloadAll() {\n        const entries = this.store.getAll();\n\n        entries.forEach(entry => {\n            reload(entry.observableCollection);\n        });\n    }\n\n    /**\n     * @param context\n     * @param _cursor\n     */\n    extendCursorWithCollectionDefaults(context, _cursor) {\n        const collectionName = this._getCollectionName(_cursor);\n        const collection = Mongo.Collection.__getCollectionByName(\n            collectionName\n        );\n\n        if (collection && collection._redisOplog) {\n            const { cursor } = collection._redisOplog;\n            if (cursor) {\n                let { selector, options } = _cursor._cursorDescription;\n                cursor.call(context, options, selector);\n            }\n        }\n    }\n\n    /**\n     * @param cursor\n     * @returns {*|string}\n     * @private\n     */\n    _getCollectionName(cursor) {\n        const description = cursor._cursorDescription;\n\n        // because of some compatibility stuff\n        let collectionName = description.collectionName;\n        if (!collectionName) {\n            return description.collection.name;\n        }\n\n        return collectionName;\n    }\n}();\n","import { Meteor } from 'meteor/meteor';\n\nexport default class PublicationStore {\n    /**\n     * Creates the store\n     */\n    constructor(name) {\n        /**\n         * {\n         *   id: PublicationEntry\n         * }\n         */\n        this.store = {};\n    }\n\n    /**\n     * @param id\n     * @returns {boolean}\n     */\n    has(id) {\n        return !!this.store[id];\n    }\n\n    /**\n     * @param id\n     * @returns {*}\n     */\n    find(id) {\n        return this.store[id];\n    }\n\n    /**\n     * @param id\n     * @param publicationEntry\n     */\n    add(id, publicationEntry) {\n        if (this.store[id]) {\n            throw new Meteor.Error(`You cannot add a publication to this store, because it already exists: ${id}`);\n        }\n\n        this.store[id] = publicationEntry;\n    }\n\n    /**\n     * @param id\n     */\n    remove(id) {\n        delete this.store[id];\n    }\n\n    /**\n     * @returns {Array}\n     */\n    getAll() {\n        return _.values(this.store);\n    }\n}","import { MongoID } from 'meteor/mongo-id';\n\nexport class MongoIDMap {\n\n    constructor(idStringify, idParse) {\n        this._internal = new Map();\n        this._idStringify = idStringify || MongoID.idStringify;\n        this._idParse = idParse || MongoID.idParse;\n    }\n\n    get(id) {\n        const key = this._idStringify(id);\n        return this._internal.get(key);\n    }\n\n    pop(id) {\n        const key = this._idStringify(id);\n        const ret = this._internal.get(key);\n        this._internal.delete(key);\n        return ret;\n    }\n\n    set(id, value) {\n        const key = this._idStringify(id);\n        this._internal.set(key, value);\n    }\n\n    setDefault(id, def) {\n        const key = this._idStringify(id);\n        if (this._internal.has(key)) {\n            return this._internal.get(key);\n        }\n        this._internal.set(key, def);\n        return def;\n    }\n\n    remove(id) {\n        const key = this._idStringify(id);\n        this._internal.delete(key);\n    }\n\n    has(id) {\n        const key = this._idStringify(id);\n        return this._internal.has(key);\n    }\n\n    size() {\n        return this._internal.size;\n    }\n\n    empty() {\n        return this._internal.size === 0;\n    }\n\n    clear() {\n        this._internal.clear();\n    }\n\n    keys() {\n        return Array.from(this._internal.keys()).map(key => this._idParse(key))\n    }\n\n    forEach(iterator) {\n        this._internal.forEach((value, key) => {\n            iterator.call(null, value, this._idParse(key));\n        });\n    }\n\n    compareWith(other, callbacks) {\n        // operate on the _internal maps to avoid overhead of parsing id's.\n        const leftMap = this._internal;\n        const rightMap = other._internal;\n\n        leftMap.forEach((leftValue, key) => {\n            const rightValue = rightMap.get(key);\n            if (rightValue != null)\n                callbacks.both && callbacks.both(this._idParse(key), leftValue, rightValue);\n            else\n                callbacks.leftOnly && callbacks.leftOnly(this._idParse(key), leftValue);\n        });\n        if (callbacks.rightOnly) {\n            rightMap.forEach((rightValue, key) => {\n                if (!leftMap.has(key))\n                    callbacks.rightOnly(this._idParse(key), rightValue);\n            });\n        }\n\n    }\n}\n","const deepFilterFieldsArray = ['$and', '$or', '$nor'];\nconst deepFilterFieldsObject = ['$not'];\n\n/**\n * Given a complex filtering option, extract the fields\n * @param filters\n */\nfunction extractFieldsFromFilters(filters) {\n    let filterFields = [];\n\n    _.each(filters, (value, field) => {\n        if (field[0] !== '$') {\n            filterFields.push(field);\n        }\n    });\n\n    deepFilterFieldsArray.forEach(field => {\n        if (filters[field]) {\n            filters[field].forEach(element => {\n                _.union(filterFields, extractFieldsFromFilters(element));\n            });\n        }\n    });\n\n    deepFilterFieldsObject.forEach(field => {\n        if (filters[field]) {\n            _.union(filterFields, extractFieldsFromFilters(filters[field]));\n        }\n    });\n\n    return filterFields;\n}\n\nexport default extractFieldsFromFilters;\n","export default (fields) => {\n    for (let value in fields) {\n        return fields[value] !== 1;\n    }\n}","import { _ } from 'meteor/underscore';\nimport getChannelName from '../../utils/getChannelName';\n\nexport default (collectionName, {namespace, channel, namespaces, channels}) => {\n    let channelStrings = [];\n\n    if (namespaces) {\n        namespaces.forEach(name => {\n            channelStrings.push(`${name}::${collectionName}`)\n        })\n    }\n\n    if (namespace) {\n        channelStrings.push(`${namespace}::${collectionName}`);\n    }\n\n    if (channels) {\n        channels.forEach(name => {\n            channelStrings.push(name)\n        })\n    }\n\n    if (channel) {\n        channelStrings.push(channel);\n    }\n\n    if (channelStrings.length === 0) {\n        channelStrings.push(collectionName);\n    }\n\n    return channelStrings.map(getChannelName);\n}\n","import getMutationConfig from './lib/getMutationConfig';\nimport getFields from '../utils/getFields';\nimport {\n    dispatchInsert,\n    dispatchUpdate,\n    dispatchRemove,\n} from './lib/dispatchers';\nimport Config from '../config';\nimport { Events } from '../constants';\n\nfunction runCallbackInBackground(fn) {\n    Meteor.defer(Meteor.bindEnvironment(fn));\n}\n\n/**\n * The Mutator is the interface that does the required updates\n */\nexport default class Mutator {\n    static init() {\n        Mutator.passConfigDown = Config.passConfigDown;\n\n        // regardless of your choice, these 2 packages must passConfigDown\n        // we do like this until we find a more elegant way\n        if (\n            Package['aldeed:collection2'] !== undefined ||\n            Package['aldeed:collection2-core'] !== undefined\n        ) {\n            Mutator.passConfigDown = true;\n        }\n    }\n\n    static insert(Originals, data, _config) {\n        const config = getMutationConfig(this, _config, {\n            doc: data,\n            event: Events.INSERT,\n        });\n\n        if (canUseOriginalMethod(config)) {\n            return Originals.insert.call(this, data);\n        }\n\n        try {\n            const docId = Originals.insert.call(this, data);\n\n            // It's a callback\n            if (_.isFunction(_config)) {\n                const self = this;\n                runCallbackInBackground(function() {\n                    _config.call(self, null, docId);\n                });\n            }\n\n            dispatchInsert(\n                config.optimistic,\n                this._name,\n                config._channels,\n                docId\n            );\n\n            return docId;\n        } catch (e) {\n            if (_.isFunction(_config)) {\n                Meteor.defer(() => {\n                    return _config.call(this, e);\n                });\n            } else {\n                throw e;\n            }\n        }\n    }\n\n    /**\n     * @param Originals\n     * @param selector\n     * @param modifier\n     * @param _config\n     * @param callback\n     * @returns {*}\n     */\n    static update(Originals, selector, modifier, _config, callback) {\n        if (_.isString(selector)) {\n            selector = { _id: selector };\n        }\n\n        if (_.isFunction(_config)) {\n            callback = _config;\n            _config = {};\n        }\n\n        const config = getMutationConfig(this, _config, {\n            event: Events.UPDATE,\n            selector,\n            modifier,\n        });\n\n        if (canUseOriginalMethod(config)) {\n            return Originals.update.call(this, selector, modifier, config);\n        }\n\n        // searching the elements that will get updated by id\n        const findOptions = { fields: { _id: 1 }, transform: null };\n        if (!config.multi) {\n            findOptions.limit = 1;\n        }\n\n        let docIds = this.find(selector, findOptions)\n            .fetch()\n            .map(doc => doc._id);\n\n        if (config && config.upsert) {\n            return Mutator._handleUpsert.call(\n                this,\n                Originals,\n                selector,\n                modifier,\n                config,\n                callback,\n                docIds\n            );\n        }\n\n        // we do this because when we send to redis\n        // we need the exact _ids\n        // and we extend the selector, because if between finding the docIds and updating\n        // another matching insert sneaked in, it's update will not be pushed\n        const updateSelector = _.extend({}, selector, {\n            _id: { $in: docIds },\n        });\n\n        try {\n            const result = Originals.update.call(\n                this,\n                updateSelector,\n                modifier,\n                config\n            );\n\n            // phony callback emulation\n            if (callback) {\n                const self = this;\n                runCallbackInBackground(function() {\n                    callback.call(self, null, result);\n                });\n            }\n\n            const { fields } = getFields(modifier);\n\n            dispatchUpdate(\n                config.optimistic,\n                this._name,\n                config._channels,\n                docIds,\n                fields\n            );\n\n            return result;\n        } catch (e) {\n            if (callback) {\n                const self = this;\n                runCallbackInBackground(function() {\n                    callback.call(self, e);\n                });\n            } else {\n                throw e;\n            }\n        }\n    }\n\n    /**\n     * @param Originals\n     * @param selector\n     * @param modifier\n     * @param config\n     * @param callback\n     * @param docIds\n     */\n    static _handleUpsert(\n        Originals,\n        selector,\n        modifier,\n        config,\n        callback,\n        docIds\n    ) {\n        try {\n            const data = Originals.update.call(\n                this,\n                selector,\n                modifier,\n                _.extend({}, config, { _returnObject: true })\n            );\n            let { insertedId, numberAffected } = data;\n\n            if (callback) {\n                const self = this;\n                runCallbackInBackground(function() {\n                    callback.call(this, null, { insertedId, numberAffected });\n                });\n            }\n\n            if (config.pushToRedis) {\n                if (insertedId) {\n                    dispatchInsert(\n                        config.optimistic,\n                        this._name,\n                        config._channels,\n                        insertedId\n                    );\n                } else {\n                    // it means that we ran an upsert thinking there will be no docs\n                    if (\n                        docIds.length === 0 ||\n                        numberAffected !== docIds.length\n                    ) {\n                        // there were no docs initially found matching the selector\n                        // however a document sneeked in, resulting in a race-condition\n                        // and if we look again for that document, we cannot retrieve it.\n\n                        // or a new document was added/modified to match selector before the actual update\n                        console.warn(\n                            'RedisOplog - Warning - A race condition occurred when running upsert.'\n                        );\n                    } else {\n                        const { fields } = getFields(modifier);\n                        dispatchUpdate(\n                            config.optimistic,\n                            this._name,\n                            config._channels,\n                            docIds,\n                            fields\n                        );\n                    }\n                }\n            }\n\n            return { insertedId, numberAffected };\n        } catch (e) {\n            if (callback) {\n                const self = this;\n                runCallbackInBackground(function() {\n                    callback.call(self, e);\n                });\n            } else {\n                throw e;\n            }\n        }\n    }\n\n    /**\n     * @param Originals\n     * @param selector\n     * @param _config\n     * @returns {*}\n     */\n    static remove(Originals, selector, _config) {\n        if (_.isString(selector)) {\n            selector = { _id: selector };\n        }\n\n        const config = getMutationConfig(this, _config, {\n            selector,\n            event: Events.REMOVE,\n        });\n\n        if (canUseOriginalMethod(config)) {\n            return Originals.remove.call(this, selector);\n        }\n\n        const removeSelector = _.extend({}, selector);\n\n        // TODO: optimization check if it has _id or _id with {$in} so we don't have to redo this.\n        let docIds = this.find(selector, {\n            fields: { _id: 1 },\n            transform: null,\n        })\n            .fetch()\n            .map(doc => doc._id);\n\n        if (!selector._id) {\n            removeSelector._id = { $in: docIds };\n        }\n\n        try {\n            const result = Originals.remove.call(this, removeSelector);\n\n            if (_.isFunction(_config)) {\n                const self = this;\n                runCallbackInBackground(function() {\n                    _config.call(self, null);\n                });\n            }\n\n            dispatchRemove(\n                config.optimistic,\n                this._name,\n                config._channels,\n                docIds\n            );\n\n            return result;\n        } catch (e) {\n            if (_.isFunction(_config)) {\n                const self = this;\n                runCallbackInBackground(function() {\n                    _config.call(self, e);\n                });\n            } else {\n                throw e;\n            }\n        }\n    }\n}\n\nfunction canUseOriginalMethod(mutationConfig) {\n    // There are two cases where we can use the original mutators rather than\n    // our overriden ones:\n    //\n    // 1) The user set pushToRedis: false, indicating they don't need realtime\n    //    updates at all.\n    //\n    // 2) The user is using an external redis publisher, so we don't need to\n    //    figure out what to publish to redis, and this update doesn't need\n    //    optimistic-ui processing, so we don't need to synchronously run\n    //    observers.\n    return !mutationConfig.pushToRedis || (Config.externalRedisPublisher && !mutationConfig.optimistic);\n}\n","import {Mongo} from 'meteor/mongo';\nimport {Random} from 'meteor/random';\nimport { getRedisPusher } from '../redis/getRedisClient';\nimport {EJSON} from 'meteor/ejson';\nimport getFields from '../utils/getFields';\nimport {Events, RedisPipe} from '../constants';\nimport containsOperators from '../mongo/lib/containsOperators';\n\n/**\n * call(Mongo.Collection).insert(data)\n * @param channelOrCollection {Mongo.Collection|string}\n */\nexport default class SyntheticMutator {\n    /**\n     * @param channels\n     * @param data\n     */\n    static publish(channels, data) {\n        const client = getRedisPusher();\n\n        channels.forEach(channel => {\n            client.publish(channel, EJSON.stringify(data));\n        })\n    }\n\n    /**\n     * @param channels\n     * @param data\n     */\n    static insert(channels, data) {\n        channels = SyntheticMutator._extractChannels(channels);\n\n        if (!data._id) {\n            data._id = Random.id();\n        }\n\n        SyntheticMutator.publish(channels, {\n            [RedisPipe.EVENT]: Events.INSERT,\n            [RedisPipe.SYNTHETIC]: true,\n            [RedisPipe.DOC]: data\n        })\n    }\n\n    /**\n     * @param channels\n     * @param _id\n     * @param modifier\n     */\n    static update(channels, _id, modifier) {\n        channels = SyntheticMutator._extractChannels(channels);\n\n        if (!containsOperators(modifier)) {\n            throw new Meteor.Error('Synthetic update can only be done through MongoDB operators.');\n        }\n\n        const { topLevelFields } = getFields(modifier);\n\n        let message = {\n            [RedisPipe.EVENT]: Events.UPDATE,\n            [RedisPipe.SYNTHETIC]: true,\n            [RedisPipe.DOC]: { _id },\n            [RedisPipe.MODIFIER]: modifier,\n            [RedisPipe.MODIFIED_TOP_LEVEL_FIELDS]: topLevelFields\n        };\n\n        SyntheticMutator.publish(channels, message);\n    }\n\n    /**\n     * @param channels\n     * @param _id\n     */\n    static remove(channels, _id) {\n        channels = SyntheticMutator._extractChannels(channels);\n\n        SyntheticMutator.publish(channels, {\n            [RedisPipe.EVENT]: Events.REMOVE,\n            [RedisPipe.SYNTHETIC]: true,\n            [RedisPipe.DOC]: {_id}\n        });\n    }\n\n    /**\n     * @param channels\n     * @param _id\n     * @returns {*}\n     * @private\n     */\n    static _extractChannels(channels, _id) {\n        if (!_.isArray(channels)) {\n            if (channels instanceof Mongo.Collection) {\n                const name = channels._name;\n                channels = [name];\n                if (_id) {\n                    channels.push(`${name}::${_id}`);\n                }\n            }\n\n            channels = [channels];\n        }\n\n        return channels;\n    }\n}","import {Mongo} from 'meteor/mongo';\nimport {_} from 'meteor/underscore';\nimport extendObserveChanges from './extendObserveChanges';\nimport _validatedInsert from './allow-deny/validatedInsert'\nimport _validatedUpdate from './allow-deny/validatedUpdate'\nimport _validatedRemove from './allow-deny/validatedRemove'\nimport Mutator from './Mutator';\n\nexport default () => {\n    const Originals = {\n        insert: Mongo.Collection.prototype.insert,\n        update: Mongo.Collection.prototype.update,\n        remove: Mongo.Collection.prototype.remove,\n        find: Mongo.Collection.prototype.find,\n    };\n\n    Mutator.init();\n\n    _.extend(Mongo.Collection.prototype, {\n        find(...args) {\n            var cursor = Originals.find.call(this, ...args);\n\n            extendObserveChanges(cursor, ...args);\n\n            return cursor;\n        },\n\n        /**\n         * @param data\n         * @param config\n         * @returns {*}\n         */\n        insert(data, config) {\n            return Mutator.insert.call(this, Originals, data, config);\n        },\n\n        /**\n         * @param selector\n         * @param modifier\n         * @param config\n         * @param callback\n         * @returns {*}\n         */\n        update(selector, modifier, config, callback) {\n            return Mutator.update.call(this, Originals, selector, modifier, config, callback);\n        },\n\n        /**\n         * @param selector\n         * @param config\n         * @returns {*}\n         */\n        remove(selector, config) {\n            return Mutator.remove.call(this, Originals, selector, config);\n        },\n\n        _validatedInsert,\n        _validatedUpdate,\n        _validatedRemove,\n\n        /**\n         * Configure defaults for your collection\n         *\n         * @param {function} mutation\n         * @param {function} cursor\n         */\n        configureRedisOplog({mutation, cursor}) {\n            this._redisOplog = {};\n            if (mutation) {\n                if (!_.isFunction(mutation)) {\n                    throw new Meteor.Error('To configure defaults for the collection, \"mutation\" needs to be a function')\n                }\n\n                this._redisOplog.mutation = mutation;\n            }\n            if (cursor) {\n                if (!_.isFunction(cursor)) {\n                    throw new Meteor.Error('To configure defaults for the collection, \"cursor\" needs to be a function')\n                }\n\n                this._redisOplog.cursor = cursor;\n            }\n        }\n    });\n}\n","import PublicationEntry from \"../cache/PublicationEntry\";\nimport PublicationFactory from \"../cache/PublicationFactory\";\nimport { diff } from \"deep-diff\";\nimport cloneDeep from \"lodash.clonedeep\";\nimport { DDP } from \"meteor/ddp\";\n\nexport default function(cursor, selector, options) {\n    if (options && options.disableOplog) {\n        return;\n    }\n\n    if (!cursor._cursorDescription) {\n        // It means that it's most likely a LocalCollection, no need to extend it in any way\n        return;\n    }\n\n    Object.assign(cursor, {\n        observeChanges(_observer) {\n            return createPublicationEntry(\n                cursor,\n                createObserveChanges(_observer)\n            );\n        },\n        observe(_observer) {\n            return createPublicationEntry(cursor, createObserve(_observer));\n        }\n    });\n}\n\n/**\n * Creates the publication entry\n * @param cursor\n * @param observer\n * @returns {{stop: (function()), _multiplexer: {}}}\n */\nfunction createPublicationEntry(cursor, observer) {\n    let pe = PublicationFactory.create(cursor, observer);\n\n    return {\n        stop() {\n            pe.removeObserver(observer);\n        },\n        // We do this to make it work with meteorhacks:kadira\n        _multiplexer: class {\n            _sendAdds() {}\n        }\n    };\n}\n\n/**\n * @param observer\n */\nfunction createObserve(observer) {\n    const ef = function() {};\n\n    return {\n        connection: getObserverConnection(observer),\n        added(collectionName, docId, doc) {\n            if (observer.added) {\n                observer.added(cloneDeep(doc));\n            }\n        },\n        changed(collectionName, docId, changedDiff, newDoc, oldDoc) {\n            if (observer.changed) {\n                var differences = diff(newDoc, oldDoc);\n\n                if (differences) {\n                    observer.changed(cloneDeep(newDoc), oldDoc);\n                }\n            }\n        },\n        removed(collectionName, docId, doc) {\n            if (observer.removed) {\n                observer.removed(doc);\n            }\n        }\n    };\n}\n\n/**\n * @param observer\n */\nfunction createObserveChanges(observer) {\n    const ef = function() {};\n\n    return {\n        connection: getObserverConnection(observer),\n        added(collectionName, docId, doc) {\n            if (observer.added) {\n                observer.added(docId, cloneDeep(doc));\n            }\n        },\n        changed(collectionName, docId, doc) {\n            if (observer.changed) {\n                observer.changed(docId, cloneDeep(doc));\n            }\n        },\n        removed(collectionName, docId) {\n            if (observer.removed) {\n                observer.removed(docId);\n            }\n        }\n    };\n}\n\n/**\n * @param {*} observer\n */\nfunction getObserverConnection(observer) {\n    if (observer.connection) {\n        return observer.connection;\n    }\n\n    const currentPublishInvoke = DDP._CurrentPublicationInvocation && DDP._CurrentPublicationInvocation.get();\n\n    if (currentPublishInvoke) {\n        return currentPublishInvoke.connection;\n    }\n}\n","let map = {};\n\nexport function getName(name) {\n    return map[name];\n}\n\nfunction extend(base, sub) {\n    // Avoid instantiating the base class just to setup inheritance\n    // Also, do a recursive merge of two prototypes, so we don't overwrite\n    // the existing prototype, but still maintain the inheritance chain\n    // Thanks to @ccnokes\n    var origProto = sub.prototype;\n    sub.prototype = Object.create(base.prototype);\n    for (var key in origProto) {\n        sub.prototype[key] = origProto[key];\n    }\n    // The constructor property was set wrong, let's fix it\n    Object.defineProperty(sub.prototype, 'constructor', {\n        enumerable: false,\n        value: sub,\n    });\n}\n\nconst old = Mongo.Collection;\n\nfunction extension(name, ...args) {\n    old.call(this, name, ...args);\n    map[name] = this;\n}\n\n_.extend(extension, old);\nextend(old, extension);\n\nMongo.Collection = extension;\nMongo.Collection.__getCollectionByName = getName;\n","import {EJSON} from 'meteor/ejson'\n\nexport default function docToValidate(validator, doc, generatedId) {\n    let ret = doc\n    if (validator.transform) {\n        ret = EJSON.clone(doc)\n        // If you set a server-side transform on your collection, then you don't get\n        // to tell the difference between \"client specified the ID\" and \"server\n        // generated the ID\", because transforms expect to get _id.  If you want to\n        // do that check, you can do it with a specific\n        // `C.allow({insert: f, transform: null})` validator.\n        if (generatedId !== null) {\n            ret._id = generatedId\n        }\n        ret = validator.transform(ret)\n    }\n    return ret\n}\n","export default function transformDoc(validator, doc) {\n    if (validator.transform) return validator.transform(doc)\n    return doc\n}\n","import {Meteor} from 'meteor/meteor'\nimport {_} from 'meteor/underscore'\nimport docToValidate from './docToValidate'\n\nexport default function validatedInsert(userId, doc, generatedId) {\n    // call user validators.\n    // Any deny returns true means denied.\n    if (_.any(this._validators.insert.deny, validator =>\n            validator(userId, docToValidate(validator, doc, generatedId)))) {\n        throw new Meteor.Error(403, 'Access denied')\n    }\n    // Any allow returns true means proceed. Throw error if they all fail.\n    if (_.all(this._validators.insert.allow, validator =>\n            !validator(userId, docToValidate(validator, doc, generatedId)))) {\n        throw new Meteor.Error(403, 'Access denied')\n    }\n\n    // If we generated an ID above, insert it now: after the validation, but\n    // before actually inserting.\n    if (generatedId !== null) doc._id = generatedId\n\n    this.insert(doc, {optimistic: true})\n}\n","/* eslint no-param-reassign: 0 no-underscore-dangle: 0 */\nimport {Meteor} from 'meteor/meteor'\nimport {_} from 'meteor/underscore'\nimport transformDoc from './transformDoc'\n\nexport default function validatedRemove(userId, selector) {\n    const findOptions = {transform: null}\n    if (!this._validators.fetchAllFields) {\n        findOptions.fields = {}\n        _.each(this._validators.fetch, fieldName => {\n            findOptions.fields[fieldName] = 1\n        })\n    }\n\n    const doc = this._collection.findOne(selector, findOptions)\n    if (!doc) {\n        return 0\n    }\n\n    // call user validators.\n    // Any deny returns true means denied.\n    if (_.any(this._validators.remove.deny, validator =>\n            validator(userId, transformDoc(validator, doc)))) {\n        throw new Meteor.Error(403, 'Access denied')\n    }\n    // Any allow returns true means proceed. Throw error if they all fail.\n    if (_.all(this._validators.remove.allow, validator =>\n            !validator(userId, transformDoc(validator, doc)))) {\n        throw new Meteor.Error(403, 'Access denied')\n    }\n\n    // Back when we supported arbitrary client-provided selectors, we actually\n    // rewrote the selector to {_id: {$in: [ids that we found]}} before passing to\n    // Mongo to avoid races, but since selector is guaranteed to already just be\n    // an ID, we don't have to any more.\n    return this.remove(selector, {optimistic: true})\n}\n","/* eslint no-param-reassign: 0 no-underscore-dangle: 0 */\nimport {Meteor} from 'meteor/meteor'\nimport {_} from 'meteor/underscore'\nimport {LocalCollection} from 'meteor/minimongo'\nimport {check} from 'meteor/check'\nimport transformDoc from './transformDoc'\n\n// Only allow these operations in validated updates. Specifically\n// whitelist operations, rather than blacklist, so new complex\n// operations that are added aren't automatically allowed. A complex\n// operation is one that does more than just modify its target\n// field. For now this contains all update operations except '$rename'.\n// http://docs.mongodb.org/manual/reference/operators/#update\nconst ALLOWED_UPDATE_OPERATIONS = {\n    $inc: 1,\n    $set: 1,\n    $unset: 1,\n    $addToSet: 1,\n    $pop: 1,\n    $pullAll: 1,\n    $pull: 1,\n    $pushAll: 1,\n    $push: 1,\n    $bit: 1,\n}\n\n// Simulate a mongo `update` operation while validating that the access\n// control rules set by calls to `allow/deny` are satisfied. If all\n// pass, rewrite the mongo operation to use $in to set the list of\n// document ids to change ##ValidatedChange\nexport default function validatedUpdate(userId, selector, mutator, options) {\n    check(mutator, Object)\n    options = _.clone(options) || {}\n\n    if (!LocalCollection._selectorIsIdPerhapsAsObject(selector)) {\n        throw new Error('validated update should be of a single ID')\n    }\n\n    // We don't support upserts because they don't fit nicely into allow/deny\n    // rules.\n    if (options.upsert) {\n        throw new Meteor.Error(403, 'Access denied. Upserts not ' +\n            'allowed in a restricted collection.')\n    }\n\n    const noReplaceError = 'Access denied. In a restricted collection you can only' +\n        ' update documents, not replace them. Use a Mongo update operator, such ' +\n        \"as '$set'.\"\n\n    // compute modified fields\n    const fields = []\n    if (_.isEmpty(mutator)) {\n        throw new Meteor.Error(403, noReplaceError)\n    }\n    _.each(mutator, (params, op) => {\n        if (op.charAt(0) !== '$') {\n            throw new Meteor.Error(403, noReplaceError)\n        } else if (!_.has(ALLOWED_UPDATE_OPERATIONS, op)) {\n            throw new Meteor.Error(\n                403, `Access denied. Operator ${op} not allowed in a restricted collection.`)\n        } else {\n            _.each(_.keys(params), field => {\n                // treat dotted fields as if they are replacing their\n                // top-level part\n                if (field.indexOf('.') !== -1) {\n                    field = field.substring(0, field.indexOf('.'))\n                }\n\n                // record the field we are trying to change\n                if (!_.contains(fields, field)) {\n                    fields.push(field)\n                }\n            })\n        }\n    })\n\n    const findOptions = {transform: null}\n    if (!this._validators.fetchAllFields) {\n        findOptions.fields = {}\n        _.each(this._validators.fetch, fieldName => {\n            findOptions.fields[fieldName] = 1\n        })\n    }\n\n    const doc = this._collection.findOne(selector, findOptions)\n    if (!doc) { // none satisfied!\n        return 0\n    }\n\n    // call user validators.\n    // Any deny returns true means denied.\n    if (_.any(this._validators.update.deny, validator => {\n            const factoriedDoc = transformDoc(validator, doc)\n            return validator(userId,\n                factoriedDoc,\n                fields,\n                mutator)\n        })) {\n        throw new Meteor.Error(403, 'Access denied')\n    }\n    // Any allow returns true means proceed. Throw error if they all fail.\n    if (_.all(this._validators.update.allow, validator => {\n            const factoriedDoc = transformDoc(validator, doc)\n            return !validator(userId,\n                factoriedDoc,\n                fields,\n                mutator)\n        })) {\n        throw new Meteor.Error(403, 'Access denied')\n    }\n\n    options._forbidReplace = true\n\n    // Back when we supported arbitrary client-provided selectors, we actually\n    // rewrote the selector to include an _id clause before passing to Mongo to\n    // avoid races, but since selector is guaranteed to already just be an ID, we\n    // don't have to any more.\n\n    return this.update(selector, mutator, _.extend(options, {\n        optimistic: true\n    }))\n}\n","export default function (modifier) {\n    return _.some(modifier, function (value, operator) {\n        return /^\\$/.test(operator);\n    });\n};\n","import { Meteor } from 'meteor/meteor';\nimport { DDPServer } from 'meteor/ddp-server';\nimport { EJSON } from 'meteor/ejson';\nimport { Events, RedisPipe } from '../../constants';\nimport RedisSubscriptionManager from '../../redis/RedisSubscriptionManager';\nimport { getRedisPusher } from \"../../redis/getRedisClient\";\nimport getDedicatedChannel from '../../utils/getDedicatedChannel';\nimport Config from '../../config';\n\nconst getWriteFence = function (optimistic) {\n    if (optimistic && DDPServer._CurrentWriteFence) {\n        return DDPServer._CurrentWriteFence.get();\n    }\n    return null;\n};\n\nconst dispatchEvents = function (fence, collectionName, channels, events) {\n    if (fence) {\n        const write = fence.beginWrite();\n        RedisSubscriptionManager.queue.queueTask(Meteor.bindEnvironment(() => {\n            try {\n              events.forEach((event) => {\n                channels.forEach(channelName => {\n                  RedisSubscriptionManager.process(channelName, event);\n                });\n                const docId = event[RedisPipe.DOC]._id;\n                const dedicatedChannel = getDedicatedChannel(collectionName, docId);\n                RedisSubscriptionManager.process(dedicatedChannel, event);\n              });\n            } finally {\n              write.committed();\n            }\n        }));\n    }\n\n    if (Config.externalRedisPublisher) {\n        return;\n    }\n\n    Meteor.defer(() => {\n        const client = getRedisPusher();\n        events.forEach((event) => {\n            const message = EJSON.stringify(event);\n            channels.forEach(channelName => {\n                client.publish(channelName, message);\n            });\n            const docId = event[RedisPipe.DOC]._id;\n            const dedicatedChannel = getDedicatedChannel(collectionName, docId);\n            client.publish(dedicatedChannel, message);\n        });\n    });\n};\n\n\nconst dispatchUpdate = function (optimistic, collectionName, channels, docIds, fields) {\n    const fence = getWriteFence(optimistic);\n    const uid = fence ? RedisSubscriptionManager.uid : null;\n    const events = docIds.map(docId => ({\n        [RedisPipe.EVENT]: Events.UPDATE,\n        [RedisPipe.FIELDS]: fields,\n        [RedisPipe.DOC]: { _id: docId },\n        [RedisPipe.UID]: uid,\n    }));\n    dispatchEvents(fence, collectionName, channels, events);\n};\n\nconst dispatchRemove = function (optimistic, collectionName, channels, docIds) {\n    const fence = getWriteFence(optimistic);\n    const uid = fence ? RedisSubscriptionManager.uid : null;\n    const events = docIds.map(docId => ({\n        [RedisPipe.EVENT]: Events.REMOVE,\n        [RedisPipe.DOC]: { _id: docId },\n        [RedisPipe.UID]: uid,\n    }));\n    dispatchEvents(fence, collectionName, channels, events);\n};\n\nconst dispatchInsert = function (optimistic, collectionName, channels, docId) {\n    const fence = getWriteFence(optimistic);\n    const uid = fence ? RedisSubscriptionManager.uid : null;\n    const event = {\n        [RedisPipe.EVENT]: Events.INSERT,\n        [RedisPipe.DOC]: { _id: docId },\n        [RedisPipe.UID]: uid,\n    };\n    dispatchEvents(fence, collectionName, channels, [event]);\n};\n\nexport { dispatchInsert, dispatchUpdate, dispatchRemove };\n","import getChannels from '../../cache/lib/getChannels';\nimport Config from '../../config';\n\n/**\n * @param collection\n * @param _config\n * @param mutationObject\n */\nexport default function (collection, _config, mutationObject) {\n    const collectionName = collection._name;\n\n    if (!_config || _.isFunction(_config)) {\n        _config = {};\n    }\n\n    const defaultOverrides = {};\n    if (!DDP._CurrentMethodInvocation.get()) {\n        // If we're not in a method, then we should never need to do optimistic\n        // ui processing.\n        //\n        // However, we allow users to really force it by explicitly passing\n        // optimistic: true if they want to use the local-dispatch code path\n        // rather than going through Redis.\n        defaultOverrides.optimistic = false;\n    }\n\n    let config = _.extend({}, Config.mutationDefaults, defaultOverrides, _config);\n\n    if (collection._redisOplog) {\n        const {mutation} = collection._redisOplog;\n        if (mutation) {\n            mutation.call(collection, config, mutationObject)\n        }\n    }\n\n    config._channels = getChannels(collectionName, config);\n\n    return config;\n};\n","import { Events } from '../constants';\n\n/**\n * @param observableCollection\n * @param event\n * @param doc\n * @param modifiedFields\n */\nexport default function (observableCollection, event, doc, modifiedFields) {\n    switch (event) {\n        case Events.INSERT:\n            handleInsert(observableCollection, doc);\n            break;\n        case Events.UPDATE:\n            handleUpdate(observableCollection, doc, modifiedFields);\n            break;\n        case Events.REMOVE:\n            handleRemove(observableCollection, doc);\n            break;\n        default:\n            throw new Meteor.Error(`Invalid event specified: ${event}`)\n    }\n}\n\n/**\n * @param observableCollection\n * @param doc\n */\nconst handleInsert = function (observableCollection, doc) {\n    if (!observableCollection.contains(doc._id) && observableCollection.isEligible(doc)) {\n        observableCollection.add(doc);\n    }\n};\n\n/**\n * @param observableCollection\n * @param doc\n * @param modifiedFields\n */\nconst handleUpdate = function (observableCollection, doc, modifiedFields) {\n    if (observableCollection.isEligible(doc)) {\n        if (observableCollection.contains(doc._id)) {\n            observableCollection.change(doc, modifiedFields);\n        } else {\n            observableCollection.add(doc);\n        }\n    } else {\n        if (observableCollection.contains(doc._id)) {\n            observableCollection.remove(doc._id);\n        }\n    }\n};\n\n/**\n * @param observableCollection\n * @param doc\n */\nconst handleRemove = function (observableCollection, doc) {\n    if (observableCollection.contains(doc._id)) {\n        observableCollection.remove(doc._id);\n    }\n};\n","import { Events } from '../constants';\n\n/**\n * @param observableCollection\n * @param event\n * @param doc\n * @param modifiedFields\n */\nexport default function (observableCollection, event, doc, modifiedFields) {\n    switch (event) {\n        case Events.UPDATE:\n            handleUpdate(observableCollection, doc, modifiedFields);\n            break;\n        case Events.REMOVE:\n            handleRemove(observableCollection, doc);\n            break;\n        case Events.INSERT:\n            handleInsert(observableCollection, doc);\n            break;\n        default:\n            throw new Meteor.Error(`Invalid event specified: ${event}`)\n    }\n}\n\n/**\n * @param observableCollection\n * @param doc\n */\nconst handleInsert = function (observableCollection, doc) {\n    if (!observableCollection.contains(doc._id) && observableCollection.isEligible(doc)) {\n        observableCollection.add(doc);\n    }\n};\n\n/**\n * @param observableCollection\n * @param doc\n * @param modifiedFields\n */\nconst handleUpdate = function (observableCollection, doc, modifiedFields) {\n    const otherSelectors = observableCollection.__containsOtherSelectorsThanId;\n\n    if (otherSelectors) {\n        if (observableCollection.isEligible(doc)) {\n            if (observableCollection.contains(doc._id)) {\n                observableCollection.change(doc, modifiedFields);\n            } else {\n                observableCollection.add(doc);\n            }\n        } else {\n            observableCollection.remove(doc._id);\n        }\n    } else {\n        if (observableCollection.contains(doc._id)) {\n            observableCollection.change(doc, modifiedFields);\n        } else {\n            observableCollection.add(doc);\n        }\n    }\n};\n\n/**\n * @param observableCollection\n * @param doc\n */\nconst handleRemove = function (observableCollection, doc) {\n    observableCollection.remove(doc._id);\n};\n","import { Strategy } from '../constants';\nimport { _ } from 'meteor/underscore';\n\n/**\n * @param selector\n * @param options\n * @returns {*}\n */\nexport default function getStrategy(selector = {}, options = {}) {\n    if (options.limit && !options.sort) {\n        options.sort = { _id: 1 };\n        // throw new Meteor.Error(`Sorry, but you are not allowed to use \"limit\" without \"sort\" option.`);\n    }\n\n    if (options.limit && options.sort) {\n        return Strategy.LIMIT_SORT;\n    }\n\n    if (selector && selector._id) {\n        return Strategy.DEDICATED_CHANNELS;\n    }\n\n    return Strategy.DEFAULT;\n}","import { Strategy } from '../constants';\n\nimport defaultStrategy from './default';\nimport directStrategy from './direct';\nimport limitSortStrategy from './limit-sort';\nimport getStrategy from './getStrategy';\n\nconst StrategyProcessorMap = {\n    [Strategy.LIMIT_SORT]: limitSortStrategy,\n    [Strategy.DEFAULT]: defaultStrategy,\n    [Strategy.DEDICATED_CHANNELS]: directStrategy\n};\n\nexport { getStrategy }\n\n/**\n * @param strategy\n * @returns {*}\n */\nexport function getProcessor(strategy) {\n    return StrategyProcessorMap[strategy];\n}","import { Events } from '../constants';\nimport { hasSortFields } from './lib/fieldsExist';\nimport requery from './actions/requery';\n\n/**\n * @param observableCollection\n * @param event\n * @param doc\n * @param modifiedFields\n */\nexport default function(observableCollection, event, doc, modifiedFields) {\n    switch (event) {\n        case Events.INSERT:\n            handleInsert(observableCollection, doc);\n            break;\n        case Events.UPDATE:\n            handleUpdate(observableCollection, doc, modifiedFields);\n            break;\n        case Events.REMOVE:\n            handleRemove(observableCollection, doc);\n            break;\n        default:\n            throw new Meteor.Error(`Invalid event specified: ${event}`);\n    }\n}\n\n/**\n * @param observableCollection\n * @param doc\n */\nconst handleInsert = function(observableCollection, doc) {\n    if (observableCollection.isEligible(doc)) {\n        requery(observableCollection, doc);\n    }\n};\n\n/**\n * @param observableCollection\n * @param doc\n * @param modifiedFields\n */\nconst handleUpdate = function(observableCollection, doc, modifiedFields) {\n    if (observableCollection.contains(doc._id)) {\n        if (observableCollection.isEligible(doc)) {\n            if (\n                hasSortFields(observableCollection.options.sort, modifiedFields)\n            ) {\n                requery(\n                    observableCollection,\n                    doc,\n                    Events.UPDATE,\n                    modifiedFields\n                );\n            } else {\n                observableCollection.change(doc, modifiedFields);\n            }\n        } else {\n            requery(observableCollection);\n        }\n    } else {\n        if (observableCollection.isEligible(doc)) {\n            if (\n                hasSortFields(observableCollection.options.sort, modifiedFields)\n            ) {\n                // This document isn't in the observable collection, but a field that\n                // is related to sorting has changed, so the order and image may have changed\n                requery(\n                    observableCollection,\n                    doc,\n                    Events.UPDATE,\n                    modifiedFields\n                );\n            } else {\n                // If the document is now eligible and it does not belong in the initial values\n                // We only add it to the store if and only if we do not surpass the limit\n                if (!observableCollection.isLimitReached()) {\n                    observableCollection.add(doc);\n                }\n            }\n        }\n    }\n};\n\n/**\n * @param observableCollection\n * @param doc\n */\nconst handleRemove = function(observableCollection, doc) {\n    if (observableCollection.contains(doc._id)) {\n        requery(observableCollection, doc);\n    } else {\n        if (observableCollection.options.skip) {\n            requery(observableCollection, doc);\n        }\n    }\n};\n","import { Events } from '../constants';\n\n/**\n * Synthetic processors processes virtual mutations that aren't actually persisted in the database\n * But it will make it behave like they were.\n *\n * @param observableCollection\n * @param event\n * @param doc\n * @param modifier\n * @param modifiedTopLevelFields\n */\nexport default function (observableCollection, event, doc, modifier, modifiedTopLevelFields) {\n    switch (event) {\n        case Events.INSERT:\n            handleInsert(observableCollection, doc);\n            break;\n        case Events.UPDATE:\n            handleUpdate(observableCollection, doc, modifier, modifiedTopLevelFields);\n            break;\n        case Events.REMOVE:\n            handleRemove(observableCollection, doc);\n            break;\n        default:\n            throw new Meteor.Error(`Invalid event specified: ${event}`)\n    }\n}\n\n/**\n * @param observableCollection\n * @param doc\n */\nconst handleInsert = function (observableCollection, doc) {\n    if (observableCollection.isEligible(doc)) {\n        observableCollection.add(doc, true);\n    }\n};\n\n/**\n * @param observableCollection\n * @param doc\n * @param modifier\n * @param modifiedTopLevelFields\n */\nconst handleUpdate = function (observableCollection, doc, modifier, modifiedTopLevelFields) {\n    observableCollection.changeSynthetic(doc._id, modifier, modifiedTopLevelFields);\n};\n\n/**\n * @param observableCollection\n * @param doc\n */\nconst handleRemove = function (observableCollection, doc) {\n    if (observableCollection.contains(doc._id)) {\n        observableCollection.remove(doc._id);\n    }\n};","import {_} from 'meteor/underscore';\nimport { MongoIDMap } from '../../cache/mongoIdMap';\n\n/**\n * Most likely used when redis connection resumes.\n * It refreshes the collection from the database.\n *\n * @param observableCollection\n */\nexport default function (observableCollection) {\n    const { store, cursor } = observableCollection;\n\n    const freshData = cursor.fetch();\n\n    const newStore = new MongoIDMap();\n    freshData.forEach((doc) => newStore.set(doc._id, doc));\n\n    store.compareWith(newStore, {\n        both(docId, oldDoc, newDoc) {\n            const modifiedFields = _.union(_.keys(oldDoc), _.keys(newDoc));\n            observableCollection.change(newDoc, modifiedFields);\n        },\n        leftOnly(docId) {\n            observableCollection.remove(docId);\n        },\n        rightOnly(docId, newDoc) {\n            observableCollection.add(newDoc);\n        },\n    });\n}\n","import { _ } from 'meteor/underscore';\nimport { EJSON } from 'meteor/ejson';\nimport { Events } from '../../constants';\nimport { MongoIDMap } from '../../cache/mongoIdMap';\n\n/**\n * @param observableCollection\n * @param newCommer\n * @param event\n * @param modifiedFields\n */\nexport default function (observableCollection, newCommer, event, modifiedFields) {\n    const { store, selector, options } = observableCollection;\n\n    const newStore = new MongoIDMap();\n    const freshIds = observableCollection.collection.find(\n        selector, { ...options, fields: { _id: 1 } }).fetch();\n    freshIds.forEach(doc => newStore.set(doc._id, doc));\n\n    let added = false;\n    store.compareWith(newStore, {\n        leftOnly(docId) {\n            observableCollection.remove(docId);\n        },\n        rightOnly(docId) {\n            if (newCommer && EJSON.equals(docId, newCommer._id)) {\n                added = true;\n                observableCollection.add(newCommer);\n            } else {\n                observableCollection.addById(docId);\n            }\n        }\n    });\n\n    // if we have an update, and we have a newcommer, that new commer may be inside the ids\n    // TODO: maybe refactor this in a separate action (?)\n    if (newCommer\n        && Events.UPDATE === event\n        && modifiedFields\n        && !added\n        && store.has(newCommer._id)) {\n        observableCollection.change(newCommer, modifiedFields);\n    }\n}\n","import { _ } from 'meteor/underscore';\n\n/**\n * @param fieldsObject {Object} {\"profile.firstName\": 1, \"roles\": 1, \"something\": 1 }\n * @param fieldsArray {Array} [\"profile\", \"roles.xx\", \"something\" ]\n */\nexport function hasSortFields(fieldsObject, fieldsArray) {\n    const existingFields = _.keys(fieldsObject);\n\n    for (let i = 0 ; i < fieldsArray.length ; i++) {\n        const field = fieldsArray[i];\n        for (let j = 0; j < existingFields.length ; j++) {\n            const existingField = existingFields[j];\n\n            if (existingField == field\n                || field.indexOf(existingField + '.') != -1\n                || existingField.indexOf(field + '.') != -1) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}","import { getRedisListener, getRedisPusher } from './getRedisClient';\n\n/**\n * Manages communication with Redis\n * Unifies all libraries that use this\n */\nexport default class PubSubManager {\n    constructor() {\n        this.channelHandlers = {};\n        this.queue = new Meteor._SynchronousQueue();\n\n        this.listener = getRedisListener();\n        this.pusher = getRedisPusher();\n\n        this._initMessageListener();\n    }\n\n    /**\n     * Pushes to Redis\n     * @param {string} channel\n     * @param {object} message\n     */\n    publish(channel, message) {\n        this.pusher.publish(channel, EJSON.stringify(message));\n    }\n\n    /**\n     * @param {string} channel\n     * @param {function} handler\n     */\n    subscribe(channel, handler) {\n        this.queue.queueTask(() => {\n            if (!this.channelHandlers[channel]) {\n                this._initChannel(channel);\n            }\n\n            this.channelHandlers[channel].push(handler);\n        });\n    }\n\n    /**\n     * @param {string} channel\n     * @param {function} handler\n     */\n    unsubscribe(channel, handler) {\n        this.queue.queueTask(() => {\n            if (!this.channelHandlers[channel]) {\n                return;\n            }\n\n            this.channelHandlers[channel] = this.channelHandlers[channel].filter(_handler => {\n                return _handler !== handler;\n            });\n\n            if (this.channelHandlers[channel].length === 0) {\n                this._destroyChannel(channel);\n            }\n        })\n    }\n\n    /**\n     * Initializes listening for redis messages\n     * @private\n     */\n    _initMessageListener() {\n        const self = this;\n\n        this.listener.on('message', Meteor.bindEnvironment(function(channel, _message) {\n            if (self.channelHandlers[channel]) {\n                const message = EJSON.parse(_message);\n                self.channelHandlers[channel].forEach(channelHandler => {\n                    channelHandler(message);\n                })\n            }\n        }));\n    }\n\n    /**\n     * @param channel\n     * @private\n     */\n    _initChannel(channel) {\n        this.listener.subscribe(channel);\n\n        this.channelHandlers[channel] = [];\n    }\n\n    /**\n     * @param channel\n     * @private\n     */\n    _destroyChannel(channel) {\n        this.listener.unsubscribe(channel);\n\n        delete this.channelHandlers[channel];\n    }\n}\n","import { Strategy } from '../constants';\nimport { getProcessor } from '../processors';\nimport { _ } from 'meteor/underscore';\nimport { Meteor } from 'meteor/meteor';\nimport extractIdsFromSelector from '../utils/extractIdsFromSelector';\nimport RedisSubscriptionManager from './RedisSubscriptionManager';\nimport syntheticProcessor from '../processors/synthetic';\nimport getDedicatedChannel from '../utils/getDedicatedChannel';\n\nexport default class RedisSubscriber {\n    /**\n     * @param publicationEntry\n     * @param strategy\n     */\n    constructor(publicationEntry, strategy) {\n        this.publicationEntry = publicationEntry;\n        this.observableCollection = publicationEntry.observableCollection;\n        this.strategy = strategy;\n        this.processor = getProcessor(strategy);\n\n        // We do this because we override the behavior of dedicated \"_id\" channels\n        this.channels = this.getChannels(this.observableCollection.channels);\n\n        RedisSubscriptionManager.attach(this);\n    }\n\n    /**\n     * @param channels\n     * @returns {*}\n     */\n    getChannels(channels) {\n        const collectionName = this.observableCollection.collectionName;\n\n        switch (this.strategy) {\n            case Strategy.DEFAULT:\n            case Strategy.LIMIT_SORT:\n                return channels;\n            case Strategy.DEDICATED_CHANNELS:\n                const ids = extractIdsFromSelector(this.observableCollection.selector);\n\n                return ids.map(id => getDedicatedChannel(collectionName, id));\n            default:\n                throw new Meteor.Error(`Strategy could not be found: ${this.strategy}`)\n        }\n    }\n\n    /**\n     * @param args\n     */\n    process(...args) {\n        this.processor.call(null, this.observableCollection, ...args);\n    }\n\n    /**\n     * @param event\n     * @param doc\n     * @param modifier\n     * @param modifiedTopLevelFields\n     */\n    processSynthetic(event, doc, modifier, modifiedTopLevelFields) {\n        syntheticProcessor(this.observableCollection, event, doc, modifier, modifiedTopLevelFields);\n    }\n\n    /**\n     * Detaches from RedisSubscriptionManager\n     */\n    stop() {\n        try {\n            RedisSubscriptionManager.detach(this);\n        } catch (e) {\n            console.warn(`[RedisSubscriber] Weird! There was an error while stopping the publication: `, e);\n        }\n    }\n\n    /**\n     * Retrieves the fields that are used for matching the validity of the document\n     *\n     * @returns {array}\n     */\n    getFieldsOfInterest() {\n        return this.observableCollection.fieldsOfInterest;\n    }\n}\n","import { Meteor } from 'meteor/meteor';\nimport { Random } from 'meteor/random';\nimport { _ } from 'meteor/underscore';\nimport debug from '../debug';\nimport { RedisPipe, Events } from '../constants';\nimport getFieldsOfInterestFromAll from './lib/getFieldsOfInterestFromAll';\nimport Config from '../config';\n\nclass RedisSubscriptionManager {\n    init() {\n        if (this.isInitialized) {\n            return;\n        }\n        this.uid = Random.id();\n        this.queue = new Meteor._SynchronousQueue();\n        this.store = {}; // {channel: [RedisSubscribers]}\n        this.channelHandlers = {}; // {channel: handler}\n\n        this.isInitialized = true;\n    }\n\n    /**\n     * @param redisSubscriber\n     */\n    attach(redisSubscriber) {\n        this.queue.queueTask(() => {\n            _.each(redisSubscriber.channels, channel => {\n                if (!this.store[channel]) {\n                    this.initializeChannel(channel);\n                }\n\n                this.store[channel].push(redisSubscriber);\n            });\n        });\n    }\n\n    /**\n     * @param redisSubscriber\n     */\n    detach(redisSubscriber) {\n        this.queue.queueTask(() => {\n            _.each(redisSubscriber.channels, channel => {\n                if (!this.store[channel]) {\n                    return debug(\n                        '[RedisSubscriptionManager] Trying to detach a subscriber on a non existent channels.'\n                    );\n                } else {\n                    this.store[channel] = _.without(\n                        this.store[channel],\n                        redisSubscriber\n                    );\n\n                    if (this.store[channel].length === 0) {\n                        this.destroyChannel(channel);\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * @param channel\n     */\n    initializeChannel(channel) {\n        debug(`[RedisSubscriptionManager] Subscribing to channel: ${channel}`);\n\n        // create the handler for this channel\n        const self = this;\n        const handler = function(message) {\n            self.queue.queueTask(() => {\n                self.process(channel, message, true);\n            });\n        };\n\n        this.channelHandlers[channel] = handler;\n        this.store[channel] = [];\n\n        const { pubSubManager } = Config;\n        pubSubManager.subscribe(channel, handler);\n    }\n\n    /**\n     * @param channel\n     */\n    destroyChannel(channel) {\n        debug(\n            `[RedisSubscriptionManager] Unsubscribing from channel: ${channel}`\n        );\n\n        const { pubSubManager } = Config;\n        pubSubManager.unsubscribe(channel, this.channelHandlers[channel]);\n\n        delete this.store[channel];\n        delete this.channelHandlers[channel];\n    }\n\n    /**\n     * @param channel\n     * @param data\n     * @param [fromRedis=false]\n     */\n    process(channel, data, fromRedis) {\n        // messages from redis that contain our uid were handled\n        //  optimistically, so we can drop them.\n        if (fromRedis && data[RedisPipe.UID] === this.uid){\n            return;\n        }\n\n        const subscribers = this.store[channel];\n        if (!subscribers) {\n            return;\n        }\n\n        let isSynthetic = data[RedisPipe.SYNTHETIC];\n\n        debug(\n            `[RedisSubscriptionManager] Received ${\n                isSynthetic ? 'synthetic ' : ''\n            }event: \"${data[RedisPipe.EVENT]}\" to \"${channel}\"`\n        );\n\n        if (subscribers.length === 0) {\n            return;\n        }\n\n        if (!isSynthetic) {\n            const collection = subscribers[0].observableCollection.collection;\n\n            let doc;\n            if (data[RedisPipe.EVENT] === Events.REMOVE) {\n                doc = data[RedisPipe.DOC];\n            } else {\n                doc = this.getDoc(collection, subscribers, data);\n            }\n\n            // if by any chance it was deleted after it got dispatched\n            // doc will be undefined\n            if (!doc) {\n                return;\n            }\n\n            subscribers.forEach(redisSubscriber => {\n                redisSubscriber.process(\n                    data[RedisPipe.EVENT],\n                    doc,\n                    data[RedisPipe.FIELDS]\n                );\n            });\n        } else {\n            subscribers.forEach(redisSubscriber => {\n                redisSubscriber.processSynthetic(\n                    data[RedisPipe.EVENT],\n                    data[RedisPipe.DOC],\n                    data[RedisPipe.MODIFIER],\n                    data[RedisPipe.MODIFIED_TOP_LEVEL_FIELDS]\n                );\n            });\n        }\n    }\n\n    /**\n     * @param collection\n     * @param subscribers\n     * @param data\n     */\n    getDoc(collection, subscribers, data) {\n        const event = data[RedisPipe.EVENT];\n        let doc = data[RedisPipe.DOC];\n\n        const fieldsOfInterest = getFieldsOfInterestFromAll(subscribers);\n\n        if (fieldsOfInterest === true) {\n            doc = collection.findOne(doc._id);\n        } else {\n            doc = collection.findOne(doc._id, { fields: fieldsOfInterest });\n        }\n\n        return doc;\n    }\n}\n\nexport default new RedisSubscriptionManager();\n","import redis from 'redis';\nimport Config from '../config';\nimport { _ } from 'meteor/underscore';\nimport {Meteor} from 'meteor/meteor';\n\n// Redis requires two connections for pushing and listening to data\nlet redisPusher;\nlet redisListener;\n\n/**\n * Returns the pusher for events in Redis\n *\n * @returns {*}\n */\nexport function getRedisPusher() {\n    if (!redisPusher) {\n        redisPusher = redis.createClient(_.extend({}, Config.redis, {\n            retry_strategy: getRetryStrategy()\n        }));\n    }\n\n    return redisPusher;\n}\n\n/**\n * Returns the listener for events in Redis\n *\n * @param onConnect\n * @returns {*}\n */\nexport function getRedisListener({onConnect} = {}) {\n    if (!redisListener) {\n        redisListener = redis.createClient(_.extend({}, Config.redis, {\n            retry_strategy: getRetryStrategy()\n        }));\n\n        // we only attach events here\n        attachEvents(redisListener, {onConnect});\n    }\n\n    return redisListener;\n}\n\n/**\n *\n * @param client\n * @param onConnect\n */\nfunction attachEvents(client, {onConnect}) {\n    const functions = ['connect', 'reconnecting', 'error', 'end'];\n\n    functions.forEach(fn => {\n        redisListener.on(fn, Meteor.bindEnvironment(function (...args) {\n            if (fn === 'connect' && onConnect) {\n                onConnect();\n            }\n            if (Config.redisExtras.events[fn]) {\n                return Config.redisExtras.events[fn](...args);\n            }\n        }))\n    });\n}\n\n/**\n * Retrieves the retry strategy that can be modified\n * @returns {Function}\n */\nfunction getRetryStrategy() {\n    return function(...args) {\n        if (Config.redisExtras.retry_strategy) {\n            return Config.redisExtras.retry_strategy(...args);\n        }\n    }\n}","function getFieldsOfInterestFromAll(subscribers) {\n    let allFields = [];\n    for (let i = 0; i < subscribers.length; i++) {\n        const subscriber = subscribers[i];\n        let fields = subscriber.getFieldsOfInterest();\n\n        if (fields === true) {\n            // end of story, there is an observableCollection that needs all fields\n            // therefore we will query for all fields\n            return true;\n        } else {\n            allFields = _.union(allFields, fields);\n        }\n    }\n\n    // this should not happen, but as a measure of safety\n    if (allFields.length === 0) {\n        return true;\n    }\n\n    allFields = removeChildrenOfParents(allFields);\n\n    let fieldsObject = {};\n\n    allFields.forEach(field => {\n        fieldsObject[field] = 1;\n    });\n\n    return fieldsObject;\n}\n\n/**\n * @param {array} array\n * @return {array} array\n */\nexport function removeChildrenOfParents(array) {\n    let freshArray = [];\n\n    array.forEach((element, idxe) => {\n        // add it to freshArray only if there's no {me} + '.' inside the array\n        const foundParent = array.find((subelement, idxs) => {\n            return idxe !== idxs && element.indexOf(`${subelement}.`) >= 0;\n        });\n\n        if (!foundParent) {\n            freshArray.push(element);\n        }\n    });\n\n    return freshArray;\n}\n\nexport default getFieldsOfInterestFromAll;\n","import { _ } from 'meteor/underscore';\n\nexport default function(selector) {\n    const filter = selector._id;\n    let ids = [];\n\n    if (_.isObject(filter) && !filter._str) {\n        if (!filter.$in) {\n            throw new Meteor.Error(\n                `When you subscribe directly, you can't have other specified fields rather than $in`\n            );\n        }\n\n        ids = filter.$in;\n    } else {\n        ids.push(filter);\n    }\n\n    return ids;\n}\n","import Config from '../config';\n\n/**\n * Given a base channel name, applies the global prefix.\n *\n * @param baseChannelName\n * @return {string}\n */\nexport default function getChannelName(baseChannelName) {\n    return (Config.globalRedisPrefix || '') + baseChannelName;\n}\n","import { MongoID } from 'meteor/mongo-id';\nimport getChannelName from './getChannelName';\n\nexport default function getDedicatedChannel(collectionName, docId){\n  const channelName = `${collectionName}::${MongoID.idStringify(docId)}`;\n  return getChannelName(channelName);\n}\n","import { _ } from 'meteor/underscore';\n\n/**\n * Taken from: https://github.com/matb33/meteor-collection-hooks/blob/master/collection-hooks.js#L198 and modified.\n * @param mutator\n */\nexport default function getFields(mutator) {\n    // compute modified fields\n    var fields = [];\n    var topLevelFields = [];\n\n    _.each(mutator, function (params, op) {\n        if (op[0] == '$') {\n            _.each(_.keys(params), function (field) {\n                // record the field we are trying to change\n                if (!_.contains(fields, field)) {\n                    // fields.push(field);\n                    // topLevelFields.push(field.split('.')[0]);\n\n                    // like { $set: { 'array.1.xx' } }\n                    const specificPositionFieldMatch = (/\\.[\\d]+(\\.)?/).exec(field);\n                    if (specificPositionFieldMatch) {\n                        fields.push(field.slice(0, specificPositionFieldMatch.index));\n                    } else {\n                        if (field.indexOf('.$') !== -1) {\n                            if (field.indexOf('.$.') !== -1) {\n                                fields.push(field.split('.$.')[0]);\n                            } else {\n                                fields.push(field.split('.$')[0]);\n                            }\n                        } else {\n                            fields.push(field);\n                        }\n                    }\n\n                    topLevelFields.push(field.split('.')[0]);\n                }\n            });\n        } else {\n            fields.push(op)\n        }\n    });\n\n    return {fields, topLevelFields};\n};\n","import { Meteor } from 'meteor/meteor';\n\nexport default function(cursors) {\n    let isDisabledOplog = undefined;\n\n    if (cursors.length === 1) {\n        const [cursor] = cursors;\n        return isOplogDisabled(cursor);\n    }\n\n    let disabledConfigs = [];\n    cursors.forEach(cursor => {\n        disabledConfigs.push(isOplogDisabled(cursor));\n    });\n\n    const allTheSame =\n        _.every(disabledConfigs, c => c === true) ||\n        _.every(disabledConfigs, c => c === false);\n\n    if (!allTheSame) {\n        throw new Meteor.Error(\n            'The array of cursors returned must all be reactive with oplog or polling, you are not allowed to mix them up.'\n        );\n    }\n\n    return disabledConfigs[0];\n}\n\n/**\n * @param {*} cursor\n */\nfunction isOplogDisabled(cursor) {\n    const config = cursor._cursorDescription || { options: {} };\n\n    return !!config.options.disableOplog;\n}\n","import RedisSubscriptionManager from '../redis/RedisSubscriptionManager';\nimport PublicationFactory from '../cache/PublicationFactory';\nimport {_} from 'meteor/underscore';\nimport sizeof from 'object-sizeof';\n\nexport default () => {\n    // total of active queries\n    const totalQueries = _.keys(PublicationFactory.store.store).length;\n    const redisChannels = _.keys(RedisSubscriptionManager.store).length;\n\n    let totalSize = 0;\n    let totalObservers = 0;\n    let maxSize = 0;\n    let maxSizePubEntry = 0;\n    let maxObservers = 0;\n    let maxObserversPubEntry;\n\n    _.each(PublicationFactory.store.store, (pubEntry, id) => {\n        const size = sizeof(pubEntry.observableCollection.store);\n        totalSize += size;\n\n        if (size > maxSize) {\n            maxSize = size;\n            maxSizePubEntry = pubEntry;\n        }\n\n        const observersCount = pubEntry.observers.length;\n        totalObservers += observersCount;\n\n        if (observersCount > maxObservers) {\n            maxObservers = observersCount;\n            maxObserversPubEntry = pubEntry;\n        }\n    });\n\n    let response = {\n        totalQueries,\n        redisChannels,\n        totalSize: totalSize + 'B',\n        totalObservers,\n    };\n\n    if (maxSize) {\n        response.maxSize = {\n            size: maxSize,\n            id: maxSizePubEntry.id\n        }\n    }\n\n    if (maxObservers) {\n        response.maxObservers = {\n            count: maxObservers,\n            id: maxObserversPubEntry.id\n        }\n    }\n\n    return response;\n}","import {getRedisListener, getRedisPusher} from '../redis/getRedisClient';\nimport {VentConstants} from '../constants';\nimport {Meteor} from 'meteor/meteor';\nimport {Random} from 'meteor/random';\nimport Config from '../config';\n\n// TODO:\n// Unify listening of events with RedisSubscriptionManager\n\nexport default class Vent {\n    /**\n     * @param name\n     * @param fn\n     * @returns {*|any|Observable}\n     */\n    static publish(name, fn) {\n        // check initialization\n        if (!Config.isInitialized) {\n            throw new Meteor.Error('not-initialized', 'RedisOplog is not initialized at the time of defining this publish. Make sure you initialize it before');\n        }\n\n        if (_.isObject(name)) {\n            _.each(name, (fn, _name) => {\n                Vent.publish(_name, fn);\n            });\n\n            return;\n        }\n\n        // validate if everything is in order\n        Vent._validateArguments(name, fn);\n\n        // create the publication properly\n        return Vent._createPublishEndPoint(name, fn);\n    }\n\n    /**\n     * @param {string} channel\n     * @param {object} object\n     */\n    static emit(channel, object) {\n        const {pubSubManager} = Config;\n\n        pubSubManager.publish(channel, object);\n    }\n\n    /**\n     * Creates the publish endpoint\n     *\n     * @param name\n     * @param fn\n     * @returns {*|any|Observable}\n     * @private\n     */\n    static _createPublishEndPoint(name, fn) {\n        return Meteor.publish(name, function (collectionId, ...args) {\n            Vent._extendPublishContext(this, name, collectionId);\n\n            try {\n                fn.call(this, ...args);\n            } catch (e) {\n                // we do this because the errors in here are silenced\n                console.error(e);\n                throw e;\n            }\n\n            this.ready();\n        });\n    }\n\n    /**\n     * @param context\n     * @param name\n     * @param collectionId\n     * @private\n     */\n    static _extendPublishContext(context, name, collectionId) {\n        const channelHandlers = [];\n        const { pubSubManager } = Config;\n\n        Object.assign(context, {\n            on(channel, redisEventHandler) {\n                // create the handler for this channel\n                const handler = function(message) {\n                    const data = redisEventHandler.call(context, message);\n\n                    if (data) {\n                        context._session.send({\n                            msg: 'changed',\n                            [VentConstants.PREFIX]: '1',\n                            id: VentConstants.getPrefix(collectionId, name),\n                            [VentConstants.EVENT_VARIABLE]: data\n                        });\n                    }\n                };\n                channelHandlers.push({ channel, handler });\n                pubSubManager.subscribe(channel, handler);\n            },\n        });\n\n        context.onStop(function () {\n            channelHandlers.forEach(({ channel, handler }) => {\n              pubSubManager.unsubscribe(channel, handler);\n            });\n        });\n    }\n\n    /**\n     * @param name\n     * @param fn\n     * @private\n     */\n    static _validateArguments(name, fn) {\n        // validate arguments\n        if (!_.isString(name)) {\n            if (!_.isObject(name)) {\n                throw new Meteor.Error('invalid-definition', 'Argument is invalid')\n            }\n\n        } else {\n            if (!_.isFunction(fn)) {\n                throw new Meteor.Error('invalid-definition', 'The second argument needs to be a function')\n            }\n        }\n    }\n}\n\n"]}