version: 2
jobs:
  Www - unit tests:
    working_directory: ~/app
    docker: &ref_0
      - image: 'circleci/openjdk:10-jdk-node-browsers'
        environment:
          LANG: C.UTF-8
          LANGUAGE: C.UTF-8
          LC_ALL: C.UTF-8
          LC_NUMERIC: en_US.UTF-8
          METEOR_VERSION: '1.7'
          NODE_ENV: development
          TOOL_NODE_FLAGS: >-
            --max_old_space_size=8192 --optimize_for_size --gc_interval=100
            --min_semi_space_size=8 --max_semi_space_size=256
          METEOR_PROFILE: 1000
          CIRCLE_CI: 1
          DEBUG: true
          METEOR_ALLOW_SUPERUSER: true
    steps:
      - checkout
      - restore_cache:
          name: Restore meteor system
          keys:
            - >-
              meteor-system-www-4-{{ checksum
              "./microservices/www/.meteor/release" }}
      - restore_cache:
          name: Restore meteor microservice
          keys:
            - >-
              meteor-microservice-www-4-{{ checksum
              "./microservices/www/.meteor/release" }}-{{ checksum
              "./microservices/www/.meteor/packages" }}-{{ checksum
              "./microservices/www/.meteor/versions" }}
      - restore_cache:
          name: Restore node_modules
          keys:
            - >-
              node_modules-www-4-{{ checksum "./microservices/www/package.json"
              }}
      - run:
          name: Create results directory
          command: mkdir ./results
      - run:
          name: Install meteor
          command: ./scripts/circleci/install_meteor.sh
      - run:
          name: Install node_modules
          command: cd microservices/www && meteor npm i
      - run:
          name: Install nightmare
          command: cd microservices/www && meteor npm i nightmare --no-save
      - save_cache:
          name: Cache node_modules
          key: 'node_modules-www-4-{{ checksum "./microservices/www/package.json" }}'
          paths:
            - ./microservices/www/node_modules
      - run:
          name: Run tests
          command: cd microservices/www && meteor npm run test-CI
      - save_cache:
          name: Cache meteor system
          key: >-
            meteor-system-www-4-{{ checksum
            "./microservices/www/.meteor/release" }}
          paths:
            - ~/.meteor
      - save_cache:
          name: Cache meteor microservice
          key: >-
            meteor-microservice-www-4-{{ checksum
            "./microservices/www/.meteor/release" }}-{{ checksum
            "./microservices/www/.meteor/packages" }}-{{ checksum
            "./microservices/www/.meteor/versions" }}
          paths:
            - ./microservices/www/.meteor/local
      - store_test_results:
          path: ./results
      - store_artifacts:
          path: ./results
  App - unit tests:
    working_directory: ~/app
    docker: *ref_0
    steps:
      - checkout
      - restore_cache:
          name: Restore meteor system
          keys:
            - >-
              meteor-system-app-4-{{ checksum
              "./microservices/app/.meteor/release" }}
      - restore_cache:
          name: Restore meteor microservice
          keys:
            - >-
              meteor-microservice-app-4-{{ checksum
              "./microservices/app/.meteor/release" }}-{{ checksum
              "./microservices/app/.meteor/packages" }}-{{ checksum
              "./microservices/app/.meteor/versions" }}
      - restore_cache:
          name: Restore node_modules
          keys:
            - >-
              node_modules-app-4-{{ checksum "./microservices/app/package.json"
              }}
      - run:
          name: Create results directory
          command: mkdir ./results
      - run:
          name: Install meteor
          command: ./scripts/circleci/install_meteor.sh
      - run:
          name: Install node_modules
          command: cd microservices/app && meteor npm i
      - run:
          name: Install nightmare
          command: cd microservices/app && meteor npm i nightmare --no-save
      - save_cache:
          name: Cache node_modules
          key: 'node_modules-app-4-{{ checksum "./microservices/app/package.json" }}'
          paths:
            - ./microservices/app/node_modules
      - run:
          name: Run tests
          command: cd microservices/app && meteor npm run test-CI
      - save_cache:
          name: Cache meteor system
          key: >-
            meteor-system-app-4-{{ checksum
            "./microservices/app/.meteor/release" }}
          paths:
            - ~/.meteor
      - save_cache:
          name: Cache meteor microservice
          key: >-
            meteor-microservice-app-4-{{ checksum
            "./microservices/app/.meteor/release" }}-{{ checksum
            "./microservices/app/.meteor/packages" }}-{{ checksum
            "./microservices/app/.meteor/versions" }}
          paths:
            - ./microservices/app/.meteor/local
      - store_test_results:
          path: ./results
      - store_artifacts:
          path: ./results
  Admin - unit tests:
    working_directory: ~/app
    docker: *ref_0
    steps:
      - checkout
      - restore_cache:
          name: Restore meteor system
          keys:
            - >-
              meteor-system-admin-4-{{ checksum
              "./microservices/admin/.meteor/release" }}
      - restore_cache:
          name: Restore meteor microservice
          keys:
            - >-
              meteor-microservice-admin-4-{{ checksum
              "./microservices/admin/.meteor/release" }}-{{ checksum
              "./microservices/admin/.meteor/packages" }}-{{ checksum
              "./microservices/admin/.meteor/versions" }}
      - restore_cache:
          name: Restore node_modules
          keys:
            - >-
              node_modules-admin-4-{{ checksum
              "./microservices/admin/package.json" }}
      - run:
          name: Create results directory
          command: mkdir ./results
      - run:
          name: Install meteor
          command: ./scripts/circleci/install_meteor.sh
      - run:
          name: Install node_modules
          command: cd microservices/admin && meteor npm i
      - run:
          name: Install nightmare
          command: cd microservices/admin && meteor npm i nightmare --no-save
      - save_cache:
          name: Cache node_modules
          key: >-
            node_modules-admin-4-{{ checksum
            "./microservices/admin/package.json" }}
          paths:
            - ./microservices/admin/node_modules
      - run:
          name: Run tests
          command: cd microservices/admin && meteor npm run test-CI
      - save_cache:
          name: Cache meteor system
          key: >-
            meteor-system-admin-4-{{ checksum
            "./microservices/admin/.meteor/release" }}
          paths:
            - ~/.meteor
      - save_cache:
          name: Cache meteor microservice
          key: >-
            meteor-microservice-admin-4-{{ checksum
            "./microservices/admin/.meteor/release" }}-{{ checksum
            "./microservices/admin/.meteor/packages" }}-{{ checksum
            "./microservices/admin/.meteor/versions" }}
          paths:
            - ./microservices/admin/.meteor/local
      - store_test_results:
          path: ./results
      - store_artifacts:
          path: ./results
workflows:
  version: 2
  Build and test:
    jobs:
      - Www - unit tests
      - App - unit tests
      - Admin - unit tests
