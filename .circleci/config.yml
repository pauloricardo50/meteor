version: 2
jobs:
  Prepare:
    working_directory: ~/app
    docker: &ref_0
      - image: 'circleci/openjdk:10-jdk-node-browsers'
        environment:
          LANG: C.UTF-8
          LANGUAGE: C.UTF-8
          LC_ALL: C.UTF-8
          LC_NUMERIC: en_US.UTF-8
          METEOR_VERSION: '1.8'
          NODE_ENV: development
          TOOL_NODE_FLAGS: >-
            --max_old_space_size=8192 --optimize_for_size --gc_interval=100
            --min_semi_space_size=8 --max_semi_space_size=256
          METEOR_PROFILE: 1000
          CIRCLE_CI: 1
          DEBUG: true
          METEOR_ALLOW_SUPERUSER: true
    steps:
      - restore_cache:
          name: Restore source
          keys:
            - 'source_code_7-{{ .Branch }}-{{ .Revision }}'
            - 'source_code_7-{{ .Branch }}-'
            - source_code_7-
      - checkout
      - restore_cache:
          name: Restore Cypress cache
          keys:
            - 'cypress_7_{{ checksum "./package-lock.json" }}'
            - 'cypress_7_{{ checksum "./package-'
      - run:
          name: Init submodules
          command: git submodule sync && git submodule update --init --recursive
      - run:
          name: Install project node_modules
          command: npm ci
      - run:
          name: Bootstrap Lerna
          command: npx lerna bootstrap
      - save_cache:
          name: Cache source
          key: 'source_code_7-{{ .Branch }}-{{ .Revision }}'
          paths:
            - .
      - save_cache:
          name: Cache Cypress
          key: 'cypress_7_{{ checksum "./package-lock.json" }}'
          paths:
            - ~/.cache/Cypress
  Www - unit tests:
    working_directory: ~/app
    docker: *ref_0
    steps:
      - restore_cache:
          name: Restore source
          keys:
            - 'source_code_7-{{ .Branch }}-{{ .Revision }}'
            - 'source_code_7-{{ .Branch }}-'
            - source_code_7-
      - restore_cache:
          name: Restore meteor system
          keys:
            - >-
              meteor_system_7_www_{{ checksum
              "./microservices/www/.meteor/release" }}-{{ checksum
              "./microservices/www/.meteor/versions" }}
            - >-
              meteor_system_7_www_{{ checksum
              "./microservices/www/.meteor/release" }}-
      - restore_cache:
          name: Restore meteor microservice
          keys:
            - >-
              meteor_microservice_7_www-{{ checksum
              "./microservices/www/.meteor/release" }}-{{ checksum
              "./microservices/www/.meteor/packages" }}-{{ checksum
              "./microservices/www/.meteor/versions" }}
            - >-
              meteor_microservice_7_www-{{ checksum
              "./microservices/www/.meteor/release" }}-{{ checksum
              "./microservices/www/.meteor/packages" }}-
            - >-
              meteor_microservice_7_www-{{ checksum
              "./microservices/www/.meteor/release" }}-
            - meteor_microservice_7_www-
      - run:
          name: Install meteor
          command: ./scripts/circleci/install_meteor.sh
      - run:
          name: Create results directory
          command: mkdir ./results
      - run:
          name: Generate language files
          command: npm run lang www
      - run:
          name: Run tests
          command: cd microservices/www && meteor npm run test-CI
      - save_cache:
          name: Cache meteor system
          key: >-
            meteor_system_7_www_{{ checksum
            "./microservices/www/.meteor/release" }}-{{ checksum
            "./microservices/www/.meteor/versions" }}
          paths:
            - ~/.meteor
      - save_cache:
          name: Cache meteor microservice
          key: >-
            meteor_microservice_7_www-{{ checksum
            "./microservices/www/.meteor/release" }}-{{ checksum
            "./microservices/www/.meteor/packages" }}-{{ checksum
            "./microservices/www/.meteor/versions" }}
          paths:
            - ./microservices/www/.meteor/local
      - store_test_results:
          path: ./results
      - store_artifacts:
          path: ./results
  App - unit tests:
    working_directory: ~/app
    docker: *ref_0
    steps:
      - restore_cache:
          name: Restore source
          keys:
            - 'source_code_7-{{ .Branch }}-{{ .Revision }}'
            - 'source_code_7-{{ .Branch }}-'
            - source_code_7-
      - restore_cache:
          name: Restore meteor system
          keys:
            - >-
              meteor_system_7_app_{{ checksum
              "./microservices/app/.meteor/release" }}-{{ checksum
              "./microservices/app/.meteor/versions" }}
            - >-
              meteor_system_7_app_{{ checksum
              "./microservices/app/.meteor/release" }}-
      - restore_cache:
          name: Restore meteor microservice
          keys:
            - >-
              meteor_microservice_7_app-{{ checksum
              "./microservices/app/.meteor/release" }}-{{ checksum
              "./microservices/app/.meteor/packages" }}-{{ checksum
              "./microservices/app/.meteor/versions" }}
            - >-
              meteor_microservice_7_app-{{ checksum
              "./microservices/app/.meteor/release" }}-{{ checksum
              "./microservices/app/.meteor/packages" }}-
            - >-
              meteor_microservice_7_app-{{ checksum
              "./microservices/app/.meteor/release" }}-
            - meteor_microservice_7_app-
      - run:
          name: Install meteor
          command: ./scripts/circleci/install_meteor.sh
      - run:
          name: Create results directory
          command: mkdir ./results
      - run:
          name: Generate language files
          command: npm run lang app
      - run:
          name: Run tests
          command: cd microservices/app && meteor npm run test-CI
      - save_cache:
          name: Cache meteor system
          key: >-
            meteor_system_7_app_{{ checksum
            "./microservices/app/.meteor/release" }}-{{ checksum
            "./microservices/app/.meteor/versions" }}
          paths:
            - ~/.meteor
      - save_cache:
          name: Cache meteor microservice
          key: >-
            meteor_microservice_7_app-{{ checksum
            "./microservices/app/.meteor/release" }}-{{ checksum
            "./microservices/app/.meteor/packages" }}-{{ checksum
            "./microservices/app/.meteor/versions" }}
          paths:
            - ./microservices/app/.meteor/local
      - store_test_results:
          path: ./results
      - store_artifacts:
          path: ./results
  Admin - unit tests:
    working_directory: ~/app
    docker: *ref_0
    steps:
      - restore_cache:
          name: Restore source
          keys:
            - 'source_code_7-{{ .Branch }}-{{ .Revision }}'
            - 'source_code_7-{{ .Branch }}-'
            - source_code_7-
      - restore_cache:
          name: Restore meteor system
          keys:
            - >-
              meteor_system_7_admin_{{ checksum
              "./microservices/admin/.meteor/release" }}-{{ checksum
              "./microservices/admin/.meteor/versions" }}
            - >-
              meteor_system_7_admin_{{ checksum
              "./microservices/admin/.meteor/release" }}-
      - restore_cache:
          name: Restore meteor microservice
          keys:
            - >-
              meteor_microservice_7_admin-{{ checksum
              "./microservices/admin/.meteor/release" }}-{{ checksum
              "./microservices/admin/.meteor/packages" }}-{{ checksum
              "./microservices/admin/.meteor/versions" }}
            - >-
              meteor_microservice_7_admin-{{ checksum
              "./microservices/admin/.meteor/release" }}-{{ checksum
              "./microservices/admin/.meteor/packages" }}-
            - >-
              meteor_microservice_7_admin-{{ checksum
              "./microservices/admin/.meteor/release" }}-
            - meteor_microservice_7_admin-
      - run:
          name: Install meteor
          command: ./scripts/circleci/install_meteor.sh
      - run:
          name: Create results directory
          command: mkdir ./results
      - run:
          name: Generate language files
          command: npm run lang admin
      - run:
          name: Run tests
          command: cd microservices/admin && meteor npm run test-CI
      - save_cache:
          name: Cache meteor system
          key: >-
            meteor_system_7_admin_{{ checksum
            "./microservices/admin/.meteor/release" }}-{{ checksum
            "./microservices/admin/.meteor/versions" }}
          paths:
            - ~/.meteor
      - save_cache:
          name: Cache meteor microservice
          key: >-
            meteor_microservice_7_admin-{{ checksum
            "./microservices/admin/.meteor/release" }}-{{ checksum
            "./microservices/admin/.meteor/packages" }}-{{ checksum
            "./microservices/admin/.meteor/versions" }}
          paths:
            - ./microservices/admin/.meteor/local
      - store_test_results:
          path: ./results
      - store_artifacts:
          path: ./results
workflows:
  version: 2
  Build and test:
    jobs:
      - Prepare
      - Www - unit tests:
          requires:
            - Prepare
      - App - unit tests:
          requires:
            - Prepare
      - Admin - unit tests:
          requires:
            - Prepare
