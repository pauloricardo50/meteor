version: 2
jobs:
  Prepare:
    working_directory: /home/circleci/app
    docker: &ref_0
      - image: 'cypress/base:12'
        environment:
          LANG: C.UTF-8
          LANGUAGE: C.UTF-8
          LC_ALL: C.UTF-8
          LC_NUMERIC: en_US.UTF-8
          METEOR_VERSION: 1.10.2
          NODE_ENV: development
          TOOL_NODE_FLAGS: >-
            --max_old_space_size=8192 --optimize_for_size --gc_interval=100
            --min_semi_space_size=8 --max_semi_space_size=256
          CIRCLE_CI: 1
          DEBUG: false
          METEOR_ALLOW_SUPERUSER: true
          METEOR_DISABLE_OPTIMISTIC_CACHING: 1
          RTL_SKIP_AUTO_CLEANUP: 1
          HOME: /home/circleci
    resource_class: medium
    steps:
      - restore_cache:
          name: Restore source
          keys:
            - 'source_master_16-{{ .Branch }}-{{ .Revision }}'
            - 'source_master_16-{{ .Branch }}-'
            - source_master_16-
      - checkout
      - run:
          name: Init submodules
          command: git submodule sync && git submodule update --init --recursive
      - save_cache:
          name: Cache source
          key: 'source_master_16-{{ .Branch }}-{{ .Revision }}'
          paths:
            - .
      - restore_cache:
          name: Restore global cache
          keys:
            - 'global_master_16_2-{{ checksum "./package-lock.json" }}'
            - global_master_16_2-
      - run:
          name: Install project node_modules
          command: npm ci
      - save_cache:
          name: Cache globals
          key: 'global_master_16_2-{{ checksum "./package-lock.json" }}'
          paths:
            - /home/circleci/.cache
      - save_cache:
          name: Cache node_modules
          key: 'node_modules_master_16_{{ checksum "./package-lock.json" }}'
          paths:
            - ./node_modules
  Www2 - unit tests:
    working_directory: /home/circleci/app
    docker: *ref_0
    steps:
      - restore_cache:
          name: Restore source
          keys:
            - 'source_master_16-{{ .Branch }}-{{ .Revision }}'
            - 'source_master_16-{{ .Branch }}-'
            - source_master_16-
      - run:
          name: Install node_modules
          command: npm --prefix microservices/www2 ci
      - run:
          name: Run tests
          command: npm run test-ci --prefix microservices/www2
  Www2 - e2e tests:
    working_directory: /home/circleci/app
    docker: *ref_0
    steps:
      - restore_cache:
          name: Restore source
          keys:
            - 'source_master_16-{{ .Branch }}-{{ .Revision }}'
            - 'source_master_16-{{ .Branch }}-'
            - source_master_16-
      - restore_cache:
          name: Restore global cache
          keys:
            - 'global_master_16_2-{{ checksum "./package-lock.json" }}'
            - global_master_16_2-
      - restore_cache:
          name: Restore node_modules
          keys:
            - 'node_modules_master_16_{{ checksum "./package-lock.json" }}'
      - restore_cache:
          name: Restore meteor system
          keys:
            - >-
              meteor_system_master_16_undefined_2_{{ checksum
              "./microservices/undefined/.meteor/release" }}_{{ checksum
              "./microservices/undefined/.meteor/versions" }}
      - restore_cache:
          name: Restore gatsby website
          keys:
            - 'source_master_16-{{ .Branch }}-{{ .Revision }}'
            - 'source_master_16-{{ .Branch }}-'
            - source_master_16-
      - restore_cache:
          name: Restore meteor backend
          keys:
            - >-
              meteor_microservice_master_16_backend-{{ .Branch }}-{{ .Revision
              }}
            - 'meteor_microservice_master_16_backend-{{ .Branch }}-'
            - meteor_microservice_master_16_backend-
      - run:
          name: Install netcat
          command: apt-get update && apt-get install -y netcat
      - run:
          name: Install meteor
          command: ./scripts/circleci/install_meteor.sh
      - run:
          name: Create results directory
          command: mkdir ./results
      - run:
          name: Install node_modules
          command: |2-

                  function installBackend {
                    meteor npm --prefix microservices/www2 ci
                    touch $HOME/.npm-backend-done
                  }

                  installBackend &

                  meteor npm --prefix microservices/backend ci

                  until [ -f $HOME/.npm-backend-done ]; do
                    echo "$HOME/.npm-backend-done does not exist. Waiting 1s"
                    sleep 1
                  done
                  
      - run:
          name: Run E2E tests
          command: cd ./microservices/www2 && meteor npm run test-e2e
          no_output_timeout: 30m
      - save_cache:
          name: Cache gatsby website
          key: 'source_master_16-{{ .Branch }}-{{ .Revision }}'
          paths:
            - ./microservices/www2/.cache
            - ./microservices/www2/public
      - save_cache:
          name: Cache meteor backend
          key: 'meteor_microservice_master_16_backend-{{ .Branch }}-{{ .Revision }}'
          paths:
            - ./microservices/backend/.meteor/local/bundler-cache/scanner
            - ./microservices/backend/.meteor/local/isopacks
            - ./microservices/backend/.meteor/local/plugin-cache
            - ./microservices/backend/.meteor/local/resolver-result-cache.json
workflows:
  version: 2
  Test and deploy:
    jobs:
      - Prepare
      - Www2 - unit tests:
          requires:
            - Prepare
