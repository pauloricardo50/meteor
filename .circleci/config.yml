version: 2
jobs:
  Www - unit tests:
    working_directory: ~/app
    docker: &ref_0
      - image: 'circleci/openjdk:10-jdk-node-browsers'
        environment:
          LANG: C.UTF-8
          LANGUAGE: C.UTF-8
          LC_ALL: C.UTF-8
          LC_NUMERIC: en_US.UTF-8
          METEOR_VERSION: '1.8'
          NODE_ENV: development
          TOOL_NODE_FLAGS: >-
            --max_old_space_size=8192 --optimize_for_size --gc_interval=100
            --min_semi_space_size=8 --max_semi_space_size=256
          METEOR_PROFILE: 1000
          CIRCLE_CI: 1
          DEBUG: true
          METEOR_ALLOW_SUPERUSER: true
    steps:
      - restore_cache:
          name: Restore source
          keys:
            - 'source_code_5-{{ .Branch }}-{{ .Revision }}'
            - 'source_code_5-{{ .Branch }}-'
            - source_code_5-
      - checkout
      - save_cache:
          name: Cache source
          key: 'source_code_5-{{ .Branch }}-{{ .Revision }}'
          paths:
            - ./.git
      - restore_cache:
          name: Restore meteor system
          keys:
            - >-
              meteor_system_5_www-{{ checksum
              "./microservices/www/.meteor/release" }}-{{ checksum
              "./microservices/www/.meteor/versions" }}
            - >-
              meteor_system_5_www-{{ checksum
              "./microservices/www/.meteor/release" }}-
            - meteor_system_5_www-
      - restore_cache:
          name: Restore meteor microservice
          keys:
            - >-
              meteor_microservice_5_www-{{ checksum
              "./microservices/www/.meteor/release" }}-{{ checksum
              "./microservices/www/.meteor/packages" }}-{{ checksum
              "./microservices/www/.meteor/versions" }}
            - >-
              meteor_microservice_5_www-{{ checksum
              "./microservices/www/.meteor/release" }}-{{ checksum
              "./microservices/www/.meteor/packages" }}-
            - >-
              meteor_microservice_5_www-{{ checksum
              "./microservices/www/.meteor/release" }}-
            - meteor_microservice_5_www-
      - restore_cache:
          name: Restore node_modules
          keys:
            - >-
              node_modules_5_www-{{ checksum "./microservices/www/package.json"
              }}
            - node_modules_5_www-
      - run:
          name: Create results directory
          command: mkdir ./results
      - run:
          name: Install meteor
          command: ./scripts/circleci/install_meteor.sh
      - run:
          name: Install node_modules
          command: cd microservices/www && meteor npm i
      - run:
          name: Install nightmare and @babel/node
          command: >-
            cd microservices/www && meteor npm i nightmare@2.10.0 @babel/node
            --no-save
      - save_cache:
          name: Cache node_modules
          key: 'node_modules_5_www-{{ checksum "./microservices/www/package.json" }}'
          paths:
            - ./microservices/www/node_modules
      - run:
          name: Generate language files
          command: >-
            cd microservices/www && function npm-do { (PATH=$(npm bin):$PATH;
            eval $@;) } && npm-do babel-node ../../scripts/createLanguages.js
            www
      - run:
          name: Run tests
          command: cd microservices/www && meteor npm run test-CI
      - save_cache:
          name: Cache meteor system
          key: >-
            meteor_system_5_www-{{ checksum
            "./microservices/www/.meteor/release" }}-{{ checksum
            "./microservices/www/.meteor/versions" }}
          paths:
            - ~/.meteor
      - save_cache:
          name: Cache meteor microservice
          key: >-
            meteor_microservice_5_www-{{ checksum
            "./microservices/www/.meteor/release" }}-{{ checksum
            "./microservices/www/.meteor/packages" }}-{{ checksum
            "./microservices/www/.meteor/versions" }}
          paths:
            - ./microservices/www/.meteor/local
      - store_test_results:
          path: ./results
      - store_artifacts:
          path: ./results
  App - unit tests:
    working_directory: ~/app
    docker: *ref_0
    steps:
      - restore_cache:
          name: Restore source
          keys:
            - 'source_code_5-{{ .Branch }}-{{ .Revision }}'
            - 'source_code_5-{{ .Branch }}-'
            - source_code_5-
      - checkout
      - save_cache:
          name: Cache source
          key: 'source_code_5-{{ .Branch }}-{{ .Revision }}'
          paths:
            - ./.git
      - restore_cache:
          name: Restore meteor system
          keys:
            - >-
              meteor_system_5_app-{{ checksum
              "./microservices/app/.meteor/release" }}-{{ checksum
              "./microservices/app/.meteor/versions" }}
            - >-
              meteor_system_5_app-{{ checksum
              "./microservices/app/.meteor/release" }}-
            - meteor_system_5_app-
      - restore_cache:
          name: Restore meteor microservice
          keys:
            - >-
              meteor_microservice_5_app-{{ checksum
              "./microservices/app/.meteor/release" }}-{{ checksum
              "./microservices/app/.meteor/packages" }}-{{ checksum
              "./microservices/app/.meteor/versions" }}
            - >-
              meteor_microservice_5_app-{{ checksum
              "./microservices/app/.meteor/release" }}-{{ checksum
              "./microservices/app/.meteor/packages" }}-
            - >-
              meteor_microservice_5_app-{{ checksum
              "./microservices/app/.meteor/release" }}-
            - meteor_microservice_5_app-
      - restore_cache:
          name: Restore node_modules
          keys:
            - >-
              node_modules_5_app-{{ checksum "./microservices/app/package.json"
              }}
            - node_modules_5_app-
      - run:
          name: Create results directory
          command: mkdir ./results
      - run:
          name: Install meteor
          command: ./scripts/circleci/install_meteor.sh
      - run:
          name: Install node_modules
          command: cd microservices/app && meteor npm i
      - run:
          name: Install nightmare and @babel/node
          command: >-
            cd microservices/app && meteor npm i nightmare@2.10.0 @babel/node
            --no-save
      - save_cache:
          name: Cache node_modules
          key: 'node_modules_5_app-{{ checksum "./microservices/app/package.json" }}'
          paths:
            - ./microservices/app/node_modules
      - run:
          name: Generate language files
          command: >-
            cd microservices/app && function npm-do { (PATH=$(npm bin):$PATH;
            eval $@;) } && npm-do babel-node ../../scripts/createLanguages.js
            app
      - run:
          name: Run tests
          command: cd microservices/app && meteor npm run test-CI
      - save_cache:
          name: Cache meteor system
          key: >-
            meteor_system_5_app-{{ checksum
            "./microservices/app/.meteor/release" }}-{{ checksum
            "./microservices/app/.meteor/versions" }}
          paths:
            - ~/.meteor
      - save_cache:
          name: Cache meteor microservice
          key: >-
            meteor_microservice_5_app-{{ checksum
            "./microservices/app/.meteor/release" }}-{{ checksum
            "./microservices/app/.meteor/packages" }}-{{ checksum
            "./microservices/app/.meteor/versions" }}
          paths:
            - ./microservices/app/.meteor/local
      - store_test_results:
          path: ./results
      - store_artifacts:
          path: ./results
  Admin - unit tests:
    working_directory: ~/app
    docker: *ref_0
    steps:
      - restore_cache:
          name: Restore source
          keys:
            - 'source_code_5-{{ .Branch }}-{{ .Revision }}'
            - 'source_code_5-{{ .Branch }}-'
            - source_code_5-
      - checkout
      - save_cache:
          name: Cache source
          key: 'source_code_5-{{ .Branch }}-{{ .Revision }}'
          paths:
            - ./.git
      - restore_cache:
          name: Restore meteor system
          keys:
            - >-
              meteor_system_5_admin-{{ checksum
              "./microservices/admin/.meteor/release" }}-{{ checksum
              "./microservices/admin/.meteor/versions" }}
            - >-
              meteor_system_5_admin-{{ checksum
              "./microservices/admin/.meteor/release" }}-
            - meteor_system_5_admin-
      - restore_cache:
          name: Restore meteor microservice
          keys:
            - >-
              meteor_microservice_5_admin-{{ checksum
              "./microservices/admin/.meteor/release" }}-{{ checksum
              "./microservices/admin/.meteor/packages" }}-{{ checksum
              "./microservices/admin/.meteor/versions" }}
            - >-
              meteor_microservice_5_admin-{{ checksum
              "./microservices/admin/.meteor/release" }}-{{ checksum
              "./microservices/admin/.meteor/packages" }}-
            - >-
              meteor_microservice_5_admin-{{ checksum
              "./microservices/admin/.meteor/release" }}-
            - meteor_microservice_5_admin-
      - restore_cache:
          name: Restore node_modules
          keys:
            - >-
              node_modules_5_admin-{{ checksum
              "./microservices/admin/package.json" }}
            - node_modules_5_admin-
      - run:
          name: Create results directory
          command: mkdir ./results
      - run:
          name: Install meteor
          command: ./scripts/circleci/install_meteor.sh
      - run:
          name: Install node_modules
          command: cd microservices/admin && meteor npm i
      - run:
          name: Install nightmare and @babel/node
          command: >-
            cd microservices/admin && meteor npm i nightmare@2.10.0 @babel/node
            --no-save
      - save_cache:
          name: Cache node_modules
          key: >-
            node_modules_5_admin-{{ checksum
            "./microservices/admin/package.json" }}
          paths:
            - ./microservices/admin/node_modules
      - run:
          name: Generate language files
          command: >-
            cd microservices/admin && function npm-do { (PATH=$(npm bin):$PATH;
            eval $@;) } && npm-do babel-node ../../scripts/createLanguages.js
            admin
      - run:
          name: Run tests
          command: cd microservices/admin && meteor npm run test-CI
      - save_cache:
          name: Cache meteor system
          key: >-
            meteor_system_5_admin-{{ checksum
            "./microservices/admin/.meteor/release" }}-{{ checksum
            "./microservices/admin/.meteor/versions" }}
          paths:
            - ~/.meteor
      - save_cache:
          name: Cache meteor microservice
          key: >-
            meteor_microservice_5_admin-{{ checksum
            "./microservices/admin/.meteor/release" }}-{{ checksum
            "./microservices/admin/.meteor/packages" }}-{{ checksum
            "./microservices/admin/.meteor/versions" }}
          paths:
            - ./microservices/admin/.meteor/local
      - store_test_results:
          path: ./results
      - store_artifacts:
          path: ./results
workflows:
  version: 2
  Build and test:
    jobs:
      - Www - unit tests
      - App - unit tests
      - Admin - unit tests
